version: 2
models:
  - name: input_layer__lab_result
    description: |
      Mapping check to make sure all columns are mapped appropriately into the input layer.
      The lab result table contains information about lab test results, 
      including the LOINC code and description, units, reference range, and 
      result.
    config:
      schema: |
        {%- if var('tuva_schema_prefix',None) != None -%}{{var('tuva_schema_prefix')}}_input_layer{% else %}input_layer{%- endif -%}
      tags: input_layer
      materialized: view
    columns:
      - name: lab_result_id
        description: '{{ doc("lab_result_id") }}'
        tests:
          - dbt_expectations.expect_column_to_exist:
              tags: ['tuva_dqi_sev_1', 'dqi', 'dqi_service_categories', 'dqi_ccsr',
                'dqi_cms_chronic_conditions', 'dqi_tuva_chronic_conditions', 'dqi_cms_hccs',
                'dqi_ed_classification', 'dqi_financial_pmpm', 'dqi_quality_measures',
                'dqi_readmission']
              config:
                severity: error
                enabled: "{{ ((target.type != 'fabric') and var('enable_input_layer_testing', true)) | as_bool }}"
          - unique:
              tags: ['tuva_dqi_sev_1', 'dqi', 'dqi_service_categories', 'dqi_ccsr',
                'dqi_cms_chronic_conditions', 'dqi_tuva_chronic_conditions', 'dqi_cms_hccs',
                'dqi_ed_classification', 'dqi_financial_pmpm', 'dqi_quality_measures',
                'dqi_readmission']
              config:
                severity: error
                enabled: "{{ var('enable_input_layer_testing', true) | as_bool }}"
          - not_null:
              tags: ['tuva_dqi_sev_1', 'dqi', 'dqi_service_categories', 'dqi_ccsr',
                'dqi_cms_chronic_conditions', 'dqi_tuva_chronic_conditions', 'dqi_cms_hccs',
                'dqi_ed_classification', 'dqi_financial_pmpm', 'dqi_quality_measures',
                'dqi_readmission']
              config:
                severity: error
                enabled: "{{ var('enable_input_layer_testing', true) | as_bool }}"
      - name: person_id
        description: '{{ doc("person_id") }}'
        tests:
          - dbt_expectations.expect_column_to_exist:
              tags: ['tuva_dqi_sev_1', 'dqi', 'dqi_quality_measures']
              config:
                severity: warn
                enabled: "{{ ((target.type != 'fabric') and var('enable_input_layer_testing', true)) | as_bool }}"
          - not_null:
              tags: ['tuva_dqi_sev_2', 'dqi', 'dqi_quality_measures']
              config:
                severity: warn
                enabled: "{{ var('enable_input_layer_testing', true) | as_bool }}"
      - name: patient_id
        description: '{{ doc("patient_id") }}'
        tests:
          - dbt_expectations.expect_column_to_exist:
              tags: ['tuva_dqi_sev_1', 'dqi']
              config:
                severity: warn
                enabled: "{{ ((target.type != 'fabric') and var('enable_input_layer_testing', true)) | as_bool }}"
      - name: encounter_id
        description: '{{ doc("encounter_id") }}'
        tests:
          - dbt_expectations.expect_column_to_exist:
              tags: ['tuva_dqi_sev_1', 'dqi']
              config:
                severity: warn
                enabled: "{{ ((target.type != 'fabric') and var('enable_input_layer_testing', true)) | as_bool }}"
      - name: accession_number
        description: '{{ doc("accession_number") }}'
        tests:
          - dbt_expectations.expect_column_to_exist:
              tags: ['tuva_dqi_sev_1', 'dqi']
              config:
                severity: warn
                enabled: "{{ ((target.type != 'fabric') and var('enable_input_layer_testing', true)) | as_bool }}"
      - name: source_order_type
        description: '{{ doc("source_code_type") }}'
        tests:
          - dbt_expectations.expect_column_to_exist:
              tags: ['tuva_dqi_sev_1', 'dqi', 'dqi_quality_measures']
              config:
                severity: warn
                enabled: "{{ ((target.type != 'fabric') and var('enable_input_layer_testing', true)) | as_bool }}"
          - accepted_values:
              values: ['loinc', 'snomed-ct', 'dqi_quality_measures']
              tags: ['tuva_dqi_sev_2', 'dqi', 'dqi_cms_hccs']
              config:
                severity: warn
      - name: source_order_code
        description: '{{ doc("source_code") }}'
        tests:
          - dbt_expectations.expect_column_to_exist:
              tags: ['tuva_dqi_sev_1', 'dqi', 'dqi_quality_measures']
              config:
                severity: warn
                enabled: "{{ ((target.type != 'fabric') and var('enable_input_layer_testing', true)) | as_bool }}"
      - name: source_order_description
        description: '{{ doc("source_description") }}'
        tests:
          - dbt_expectations.expect_column_to_exist:
              tags: ['tuva_dqi_sev_1', 'dqi']
              config:
                severity: warn
                enabled: "{{ ((target.type != 'fabric') and var('enable_input_layer_testing', true)) | as_bool }}"
      - name: source_component_type
        description: '{{ doc("source_component_type") }}'
        tests:
          - dbt_expectations.expect_column_to_exist:
              tags: [ 'tuva_dqi_sev_1', 'dqi', 'dqi_quality_measures' ]
              config:
                severity: warn
                enabled: "{{ ((target.type != 'fabric') and var('enable_input_layer_testing', true)) | as_bool }}"
          - accepted_values:
              values: [ 'loinc', 'snomed-ct', 'dqi_quality_measures' ]
              tags: [ 'tuva_dqi_sev_2', 'dqi', 'dqi_cms_hccs' ]
              config:
                severity: warn
      - name: source_component_code
        description: '{{ doc("source_component_code") }}'
        tests:
          - dbt_expectations.expect_column_to_exist:
              tags: ['tuva_dqi_sev_1', 'dqi']
              config:
                severity: warn
                enabled: "{{ ((target.type != 'fabric') and var('enable_input_layer_testing', true)) | as_bool }}"
      - name: source_component_description
        description: '{{ doc("source_component_description") }}'
        tests:
          - dbt_expectations.expect_column_to_exist:
              tags: [ 'tuva_dqi_sev_1', 'dqi' ]
              config:
                severity: warn
                enabled: "{{ ((target.type != 'fabric') and var('enable_input_layer_testing', true)) | as_bool }}"
      - name: normalized_order_type
        description: '{{ doc("normalized_code_type") }}'
        tests:
          - dbt_expectations.expect_column_to_exist:
              tags: ['tuva_dqi_sev_1', 'dqi', 'dqi_quality_measures']
              config:
                severity: warn
                enabled: "{{ ((target.type != 'fabric') and var('enable_input_layer_testing', true)) | as_bool }}"
      - name: normalized_order_code
        description: '{{ doc("normalized_code") }}'
        tests:
          - dbt_expectations.expect_column_to_exist:
              tags: ['tuva_dqi_sev_1', 'dqi', 'dqi_quality_measures']
              config:
                severity: warn
                enabled: "{{ ((target.type != 'fabric') and var('enable_input_layer_testing', true)) | as_bool }}"
      - name: normalized_order_description
        description: '{{ doc("normalized_description") }}'
        tests:
          - dbt_expectations.expect_column_to_exist:
              tags: ['tuva_dqi_sev_1', 'dqi']
              config:
                severity: warn
                enabled: "{{ ((target.type != 'fabric') and var('enable_input_layer_testing', true)) | as_bool }}"
      - name: normalized_component_type
        description: '{{ doc("normalized_component_type") }}'
        tests:
          - dbt_expectations.expect_column_to_exist:
              tags: [ 'tuva_dqi_sev_1', 'dqi', 'dqi_quality_measures' ]
              config:
                severity: warn
                enabled: "{{ ((target.type != 'fabric') and var('enable_input_layer_testing', true)) | as_bool }}"
      - name: normalized_component_code
        description: '{{ doc("normalized_component_code") }}'
        tests:
          - dbt_expectations.expect_column_to_exist:
              tags: ['tuva_dqi_sev_1', 'dqi']
              config:
                severity: warn
                enabled: "{{ ((target.type != 'fabric') and var('enable_input_layer_testing', true)) | as_bool }}"
      - name: normalized_component_description
        description: '{{ doc("normalized_component_description") }}'
        tests:
          - dbt_expectations.expect_column_to_exist:
              tags: [ 'tuva_dqi_sev_1', 'dqi' ]
              config:
                severity: warn
                enabled: "{{ ((target.type != 'fabric') and var('enable_input_layer_testing', true)) | as_bool }}"
      - name: status
        description: '{{ doc("status") }}'
        tests:
          - dbt_expectations.expect_column_to_exist:
              tags: ['tuva_dqi_sev_1', 'dqi']
              config:
                severity: warn
                enabled: "{{ ((target.type != 'fabric') and var('enable_input_layer_testing', true)) | as_bool }}"
      - name: result
        description: '{{ doc("result") }}'
        tests:
          - dbt_expectations.expect_column_to_exist:
              tags: ['tuva_dqi_sev_1', 'dqi']
              config:
                severity: warn
                enabled: "{{ ((target.type != 'fabric') and var('enable_input_layer_testing', true)) | as_bool }}"
      - name: result_datetime
        description: '{{ doc("result_datetime") }}'
        tests:
          - dbt_expectations.expect_column_to_exist:
              tags: ['tuva_dqi_sev_1', 'dqi', 'dqi_quality_measures']
              config:
                severity: warn
                enabled: "{{ ((target.type != 'fabric') and var('enable_input_layer_testing', true)) | as_bool }}"
          - dbt_expectations.expect_column_values_to_be_in_type_list:
              column_type_list: [ date, datetime, time, timestamp, timestamp_ntz, timestampntz,
                timestamp_ltz, timestampltz, timestamp_tz, timestamptz, timestamp
                  with time zone, timestamp without time zone, datetime2, datetimeoffset ]
              tags: ['tuva_dqi_sev_2', 'dqi', 'dqi_quality_measures']
              config:
                severity: warn
                enabled: "{{ ((target.type != 'fabric') and var('enable_input_layer_testing', true)) | as_bool }}"
      - name: collection_datetime
        description: '{{ doc("collection_datetime") }}'
        tests:
          - dbt_expectations.expect_column_to_exist:
              tags: ['tuva_dqi_sev_1', 'dqi', 'dqi_quality_measures']
              config:
                severity: warn
                enabled: "{{ ((target.type != 'fabric') and var('enable_input_layer_testing', true)) | as_bool }}"
          - dbt_expectations.expect_column_values_to_be_in_type_list:
              column_type_list: [ date, datetime, time, timestamp, timestamp_ntz, timestampntz,
                timestamp_ltz, timestampltz, timestamp_tz, timestamptz, timestamp
                  with time zone, timestamp without time zone, datetime2, datetimeoffset ]
              tags: ['tuva_dqi_sev_2', 'dqi', 'dqi_quality_measures']
              config:
                severity: warn
                enabled: "{{ ((target.type != 'fabric') and var('enable_input_layer_testing', true)) | as_bool }}"
      - name: source_units
        description: '{{ doc("source_units") }}'
        tests:
          - dbt_expectations.expect_column_to_exist:
              tags: ['tuva_dqi_sev_1', 'dqi']
              config:
                severity: warn
                enabled: "{{ ((target.type != 'fabric') and var('enable_input_layer_testing', true)) | as_bool }}"
      - name: normalized_units
        description: '{{ doc("normalized_units") }}'
        tests:
          - dbt_expectations.expect_column_to_exist:
              tags: ['tuva_dqi_sev_1', 'dqi']
              config:
                severity: warn
                enabled: "{{ ((target.type != 'fabric') and var('enable_input_layer_testing', true)) | as_bool }}"
      - name: source_reference_range_low
        description: '{{ doc("source_reference_range_low") }}'
        tests:
          - dbt_expectations.expect_column_to_exist:
              tags: ['tuva_dqi_sev_1', 'dqi']
              config:
                severity: warn
                enabled: "{{ ((target.type != 'fabric') and var('enable_input_layer_testing', true)) | as_bool }}"
      - name: source_reference_range_high
        description: '{{ doc("source_reference_range_high") }}'
        tests:
          - dbt_expectations.expect_column_to_exist:
              tags: ['tuva_dqi_sev_1', 'dqi']
              config:
                severity: warn
                enabled: "{{ ((target.type != 'fabric') and var('enable_input_layer_testing', true)) | as_bool }}"
      - name: normalized_reference_range_low
        description: '{{ doc("normalized_reference_range_low") }}'
        tests:
          - dbt_expectations.expect_column_to_exist:
              tags: ['tuva_dqi_sev_1', 'dqi']
              config:
                severity: warn
                enabled: "{{ ((target.type != 'fabric') and var('enable_input_layer_testing', true)) | as_bool }}"
      - name: normalized_reference_range_high
        description: '{{ doc("normalized_reference_range_high") }}'
        tests:
          - dbt_expectations.expect_column_to_exist:
              tags: ['tuva_dqi_sev_1', 'dqi']
              config:
                severity: warn
                enabled: "{{ ((target.type != 'fabric') and var('enable_input_layer_testing', true)) | as_bool }}"
      - name: source_abnormal_flag
        description: '{{ doc("source_abnormal_flag") }}'
        tests:
          - dbt_expectations.expect_column_to_exist:
              tags: ['tuva_dqi_sev_1', 'dqi']
              config:
                severity: warn
                enabled: "{{ ((target.type != 'fabric') and var('enable_input_layer_testing', true)) | as_bool }}"
      - name: normalized_abnormal_flag
        description: '{{ doc("normalized_abnormal_flag") }}'
        tests:
          - dbt_expectations.expect_column_to_exist:
              tags: ['tuva_dqi_sev_1', 'dqi']
              config:
                severity: warn
                enabled: "{{ ((target.type != 'fabric') and var('enable_input_layer_testing', true)) | as_bool }}"
      - name: specimen
        description: '{{ doc("specimen") }}'
        tests:
          - dbt_expectations.expect_column_to_exist:
              tags: ['tuva_dqi_sev_1', 'dqi']
              config:
                severity: warn
                enabled: "{{ ((target.type != 'fabric') and var('enable_input_layer_testing', true)) | as_bool }}"
      - name: ordering_practitioner_id
        description: '{{ doc("ordering_practitioner_id") }}'
        tests:
          - dbt_expectations.expect_column_to_exist:
              tags: ['tuva_dqi_sev_1', 'dqi']
              config:
                severity: warn
                enabled: "{{ ((target.type != 'fabric') and var('enable_input_layer_testing', true)) | as_bool }}"
      - name: data_source
        description: '{{ doc("data_source") }}'
        tests:
          - dbt_expectations.expect_column_to_exist:
              tags: ['tuva_dqi_sev_1', 'dqi']
              config:
                severity: warn
                enabled: "{{ ((target.type != 'fabric') and var('enable_input_layer_testing', true)) | as_bool }}"
      - name: file_name
        description: '{{ doc("file_name") }}'
        tests:
          - dbt_expectations.expect_column_to_exist:
              tags: ['tuva_dqi_sev_1', 'dqi']
              config:
                severity: warn
                enabled: "{{ ((target.type != 'fabric') and var('enable_input_layer_testing', true)) | as_bool }}"
      - name: ingest_datetime
        description: '{{ doc("ingest_datetime") }}'
        tests:
          - dbt_expectations.expect_column_to_exist:
              tags: ['tuva_dqi_sev_1', 'dqi']
              config:
                severity: warn
                enabled: "{{ ((target.type != 'fabric') and var('enable_input_layer_testing', true)) | as_bool }}"
          - dbt_expectations.expect_column_values_to_be_in_type_list:
              column_type_list: [date, datetime, time, timestamp, timestamp_ntz, timestampntz,
                timestamp_ltz, timestampltz, timestamp_tz, timestamptz, timestamp
                    with time zone, timestamp without time zone, datetime2, datetimeoffset]
              tags: ['tuva_dqi_sev_2', 'dqi']
              config:
                severity: warn
                enabled: "{{ ((target.type != 'fabric') and var('enable_input_layer_testing', true)) | as_bool }}"
