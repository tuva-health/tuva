version: 2
models:
  - name: input_layer__pharmacy_claim
    description: >
      Mapping check to make sure all columns are mapped appropriately into the input
      layer.
      The pharmacy_claim table includes information about retail and specialty  drug
      prescriptions that have been filled by a patient, billed by a  pharmacy, and
      paid by an insurer.
    config:
      alias: verified_pharmacy_claim
      contract:
        enforced: true
    tests:
      - dbt_utils.unique_combination_of_columns:
          name: pharmacy_claim_unique_key
          combination_of_columns:
            - data_source
            - claim_id
            - claim_line_number
          config:
            severity: error
    columns:
      - name: claim_id
        data_type: string
        description: '{{ doc("claim_id") }}'
        tests:
          - not_null
      - name: claim_line_number
        data_type: int
        description: '{{ doc("claim_line_number") }}'
        tests:
          - not_null
      - name: person_id
        data_type: string
        description: '{{ doc("person_id") }}'
        tests:
          - not_null
      - name: member_id
        data_type: string
        description: '{{ doc("member_id") }}'
        tests:
          - not_null
      - name: payer
        data_type: string
        description: '{{ doc("payer") }}'
      - name: plan
        data_type: string
        description: '{{ doc("plan") }}'
      - name: prescribing_provider_npi
        data_type: string
        description: >
          NPI for the provider that wrote the prescription (e.g. primary care physician).
        tests:
          - dbt_expectations.expect_column_values_to_match_regex:
              name: expect_column_values_to_match_regex__pharmacy_claim_prescribing_provider_npi
              regex: "^[0-9]{10}$"
      - name: dispensing_provider_npi
        data_type: string
        description: >
          NPI for the provider that dispensed the prescription (e.g. pharmacy).
        tests:
          - dbt_expectations.expect_column_values_to_match_regex:
              name: expect_column_values_to_match_regex__pharmacy_claim_dispensing_provider_npi
              regex: "^[0-9]{10}$"
      - name: dispensing_date
        data_type: date
        description: '{{ doc("dispensing_date") }}'
        tests:
          - dbt_expectations.expect_column_values_to_be_between:
              min_value: "'1900-01-02'"
              max_value: "'2050-01-02'"
      - name: ndc_code
        data_type: string
        description: '{{ doc("ndc_code") }}'
        tests:
          - not_null
      - name: quantity
        data_type: int
        description: '{{ doc("quantity") }}'
      - name: days_supply
        data_type: int
        description: '{{ doc("days_supply") }}'
        tests:
          - not_null:
              tags: tuva_dqi_sev_4
      - name: refills
        data_type: int
        description: '{{ doc("refills") }}'
      - name: paid_date
        data_type: date
        description: '{{ doc("paid_date") }}'
      - name: paid_amount
        data_type: decimal(28, 6)
        description: '{{ doc("paid_amount") }}'
      - name: allowed_amount
        data_type: decimal(28, 6)
        description: '{{ doc("allowed_amount") }}'
      - name: charge_amount
        data_type: decimal(28, 6)
        description: '{{ doc("charge_amount") }}'
      - name: coinsurance_amount
        data_type: decimal(28, 6)
        description: '{{ doc("coinsurance_amount") }}'
      - name: copayment_amount
        data_type: decimal(28, 6)
        description: '{{ doc("copayment_amount") }}'
      - name: deductible_amount
        data_type: decimal(28, 6)
        description: '{{ doc("deductible_amount") }}'
      - name: in_network_flag
        data_type: boolean
        description: '{{ doc("in_network_flag") }}'
      - name: data_source
        data_type: string
        description: '{{ doc("data_source") }}'
        tests:
          - not_null
      - name: file_name
        data_type: string
        description: '{{ doc("file_name") }}'
        tests:
          - not_null
      - name: file_date
        data_type: date
        description: '{{ doc("file_date") }}'
        tests:
          - not_null
      - name: ingest_datetime
        data_type: timestamp
        description: '{{ doc("ingest_datetime") }}'
        tests:
          - not_null
