version: 2
models:
  - name: input_layer__eligibility
    description: |
      Mapping check to make sure all columns are mapped appropriately into the input layer.
      The eligibility table includes information about a patient's health 
      insurance coverage and demographics (note: we use the word patient as a 
      synonym for member). Every claims dataset should include some sort of 
      eligibility data, otherwise it's impossible to calculate member months, 
      which are needed to calculate measures like PMPM.
    tests:
      - dbt_utils.unique_combination_of_columns:
          combination_of_columns:
            - person_id
            - enrollment_start_date
            - enrollment_end_date
            - "{{ '\"plan\"' if (target.type == 'fabric') else 'plan' }}"
            - payer
            - data_source     
          tags: ['tuva_dqi_sev_1', 'dqi', 'dqi_service_categories', 'dqi_ccsr', 'dqi_cms_chronic_conditions',
            'dqi_tuva_chronic_conditions', 'dqi_cms_hccs', 'dqi_ed_classification',
            'dqi_financial_pmpm', 'dqi_quality_measures', 'dqi_readmission']
          config:
            severity: error
            enabled: "{{ ((target.type != 'fabric') and var('enable_input_layer_testing',
              true)) | as_bool }}"
      - dbt_expectations.expect_column_pair_values_A_to_be_greater_than_B:
          tags: ['tuva_dqi_sev_3', 'dqi', 'dqi_cms_hccs', 'dqi_financial_pmpm']
          column_A: enrollment_end_date
          column_B: enrollment_start_date
          or_equal: true
          config:
            severity: warn
            enabled: "{{ ((target.type != 'fabric') and var('enable_input_layer_testing',
              true)) | as_bool }}"
    config:
      schema: |
        {%- if var('tuva_schema_prefix',None) != None -%}{{var('tuva_schema_prefix')}}_input_layer{% else %}input_layer{%- endif -%}
      tags: input_layer
      materialized: view
    columns:
      - name: person_id
        description: '{{ doc("person_id") }}'
        tests:
          - dbt_expectations.expect_column_to_exist:
              tags: ['tuva_dqi_sev_1', 'dqi', 'dqi_service_categories', 'dqi_ccsr',
                'dqi_cms_chronic_conditions', 'dqi_tuva_chronic_conditions', 'dqi_cms_hccs',
                'dqi_ed_classification', 'dqi_financial_pmpm', 'dqi_quality_measures',
                'dqi_readmission']
              config:
                severity: error
                enabled: "{{ ((target.type != 'fabric') and var('enable_input_layer_testing', true)) | as_bool }}"
          - not_null:
              tags: ['tuva_dqi_sev_1', 'dqi', 'dqi_service_categories', 'dqi_ccsr',
                'dqi_cms_chronic_conditions', 'dqi_tuva_chronic_conditions', 'dqi_cms_hccs',
                'dqi_ed_classification', 'dqi_financial_pmpm', 'dqi_quality_measures',
                'dqi_readmission']
              config:
                severity: error
                enabled: "{{ var('enable_input_layer_testing', true) | as_bool }}"
      - name: member_id
        description: '{{ doc("member_id") }}'
        tests:
          - dbt_expectations.expect_column_to_exist:
              tags: ['tuva_dqi_sev_1', 'dqi', 'dqi_cms_hccs']
              config:
                severity: warn
                enabled: "{{ ((target.type != 'fabric') and var('enable_input_layer_testing', true)) | as_bool }}"
      - name: subscriber_id
        description: '{{ doc("subscriber_id") }}'
        tests:
          - dbt_expectations.expect_column_to_exist:
              tags: ['tuva_dqi_sev_1', 'dqi']
              config:
                severity: warn
                enabled: "{{ ((target.type != 'fabric') and var('enable_input_layer_testing', true)) | as_bool }}"
      - name: gender
        description: '{{ doc("sex") }}'
        tests:
          - dbt_expectations.expect_column_to_exist:
              tags: ['tuva_dqi_sev_1', 'dqi', 'dqi_cms_hccs']
              config:
                severity: warn
                enabled: "{{ ((target.type != 'fabric') and var('enable_input_layer_testing', true)) | as_bool }}"
          - accepted_values:
              values: ['male', 'female', 'unknown']
              tags: ['tuva_dqi_sev_2', 'dqi', 'dqi_cms_hccs']
              config:
                severity: warn
          - not_null:
              tags: ['tuva_dqi_sev_3', 'dqi', 'dqi_cms_hccs']
              config:
                severity: warn
                enabled: "{{ var('enable_input_layer_testing', true) | as_bool }}"
      - name: race
        description: '{{ doc("race") }}'
        tests:
          - dbt_expectations.expect_column_to_exist:
              tags: ['tuva_dqi_sev_1', 'dqi']
              config:
                severity: warn
                enabled: "{{ ((target.type != 'fabric') and var('enable_input_layer_testing', true)) | as_bool }}"
      - name: birth_date
        description: '{{ doc("birth_date") }}'
        tests:
          - dbt_expectations.expect_column_values_to_be_between:
# description: This is a test on all dates to see if they are within a reasonable range. 
              tags: ['tuva_dqi_sev_3', 'dqi', 'dqi_cms_hccs']
              min_value: "'1900-01-02'"
              max_value: "'2050-01-02'"
              strictly: false
              config:
                severity: warn
                enabled: "{{ ((target.type != 'fabric') and var('enable_input_layer_testing', true)) | as_bool }}"
                meta:
                  dqi_test_description: "This is a test on all dates to see if they
                    are within a reasonable range. "
          - dbt_expectations.expect_column_to_exist:
              tags: ['tuva_dqi_sev_1', 'dqi', 'dqi_cms_hccs']
              config:
                severity: warn
                enabled: "{{ ((target.type != 'fabric') and var('enable_input_layer_testing', true)) | as_bool }}"
          - dbt_expectations.expect_column_unique_value_count_to_be_between:
# description: A person should not have multiple birthdays.
              min_value: 1
              max_value: 1
              tags: ['tuva_dqi_sev_3', 'dqi', 'dqi_cms_hccs']
              group_by: [person_id]
              strictly: false
              config:
                severity: warn
                enabled: "{{ ((target.type != 'fabric') and var('enable_input_layer_testing', true)) | as_bool }}"
                meta:
                  dqi_test_description: 'A person should not have multiple birthdays.'
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: date
              tags: ['tuva_dqi_sev_2', 'dqi', 'dqi_cms_hccs']
              config:
                severity: warn
                enabled: "{{ ((target.type != 'fabric') and var('enable_input_layer_testing', true)) | as_bool }}"
          - not_null:
              tags: ['tuva_dqi_sev_3', 'dqi', 'dqi_cms_hccs']
              config:
                severity: warn
                enabled: "{{ var('enable_input_layer_testing', true) | as_bool }}"
      - name: death_date
        description: '{{ doc("death_date") }}'
        tests:
          - dbt_expectations.expect_column_values_to_be_between:
# description: This is a test on all dates to see if they are within a reasonable range. 
              tags: ['tuva_dqi_sev_3', 'dqi', 'dqi_cms_hccs']
              min_value: "'1900-01-02'"
              max_value: "'2050-01-02'"
              strictly: false
              config:
                severity: warn
                enabled: "{{ ((target.type != 'fabric') and var('enable_input_layer_testing', true)) | as_bool }}"
                meta:
                  dqi_test_description: "This is a test on all dates to see if they
                    are within a reasonable range. "
          - dbt_expectations.expect_column_to_exist:
              tags: ['tuva_dqi_sev_1', 'dqi', 'dqi_cms_hccs']
              config:
                severity: warn
                enabled: "{{ ((target.type != 'fabric') and var('enable_input_layer_testing', true)) | as_bool }}"
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: date
              tags: ['tuva_dqi_sev_2', 'dqi', 'dqi_cms_hccs']
              config:
                severity: warn
                enabled: "{{ ((target.type != 'fabric') and var('enable_input_layer_testing', true)) | as_bool }}"
      - name: death_flag
        description: '{{ doc("death_flag") }}'
        tests:
          - dbt_expectations.expect_column_to_exist:
              tags: ['tuva_dqi_sev_1', 'dqi']
              config:
                severity: warn
                enabled: "{{ ((target.type != 'fabric') and var('enable_input_layer_testing', true)) | as_bool }}"
          # Only run this test for non-BigQuery databases
          - accepted_values:
              values: [ '0', '1' ]
              tags: [ 'tuva_dqi_sev_2', 'dqi' ]
              config:
                severity: warn
                enabled: "{{ target.type != 'bigquery' }}"
          # BigQuery specific test with proper casting
          - accepted_values:
              values: [ '0', '1' ]
              tags: [ 'tuva_dqi_sev_2', 'dqi' ]
              config:
                severity: warn
                enabled: "{{ target.type == 'bigquery' }}"
              quote: false
              column_name: "CAST(death_flag AS STRING)"
      - name: enrollment_start_date
        description: '{{ doc("enrollment_start_date") }}'
        tests:
          - dbt_expectations.expect_column_values_to_be_between:
# description: This is a test on all dates to see if they are within a reasonable range. 
              tags: ['tuva_dqi_sev_3', 'dqi', 'dqi_cms_hccs', 'dqi_financial_pmpm']
              min_value: "'1900-01-02'"
              max_value: "'2050-01-02'"
              strictly: false
              config:
                severity: warn
                enabled: "{{ ((target.type != 'fabric') and var('enable_input_layer_testing', true)) | as_bool }}"
                meta:
                  dqi_test_description: "This is a test on all dates to see if they
                    are within a reasonable range. "
          - dbt_expectations.expect_column_to_exist:
              tags: ['tuva_dqi_sev_1', 'dqi', 'dqi_cms_hccs', 'dqi_financial_pmpm']
              config:
                severity: warn
                enabled: "{{ ((target.type != 'fabric') and var('enable_input_layer_testing', true)) | as_bool }}"
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: date
              tags: ['tuva_dqi_sev_2', 'dqi', 'dqi_cms_hccs', 'dqi_financial_pmpm']
              config:
                severity: warn
                enabled: "{{ ((target.type != 'fabric') and var('enable_input_layer_testing', true)) | as_bool }}"
      - name: enrollment_end_date
        description: '{{ doc("enrollment_end_date") }}'
        tests:
          - dbt_expectations.expect_column_values_to_be_between:
# description: This is a test on all dates to see if they are within a reasonable range. 
              tags: ['tuva_dqi_sev_3', 'dqi', 'dqi_cms_hccs', 'dqi_financial_pmpm']
              min_value: "'1900-01-02'"
              max_value: "'2050-01-02'"
              strictly: false
              config:
                severity: warn
                enabled: "{{ ((target.type != 'fabric') and var('enable_input_layer_testing', true)) | as_bool }}"
                meta:
                  dqi_test_description: "This is a test on all dates to see if they
                    are within a reasonable range. "
          - dbt_expectations.expect_column_to_exist:
              tags: ['tuva_dqi_sev_1', 'dqi', 'dqi_cms_hccs', 'dqi_financial_pmpm']
              config:
                severity: warn
                enabled: "{{ ((target.type != 'fabric') and var('enable_input_layer_testing', true)) | as_bool }}"
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: date
              tags: ['tuva_dqi_sev_2', 'dqi', 'dqi_cms_hccs', 'dqi_financial_pmpm']
              config:
                severity: warn
                enabled: "{{ ((target.type != 'fabric') and var('enable_input_layer_testing', true)) | as_bool }}"
      - name: payer
        description: '{{ doc("payer") }}'
        tests:
          - dbt_expectations.expect_column_to_exist:
              tags: ['tuva_dqi_sev_1', 'dqi', 'dqi_financial_pmpm']
              config:
                severity: warn
                enabled: "{{ ((target.type != 'fabric') and var('enable_input_layer_testing', true)) | as_bool }}"
      - name: payer_type
        description: '{{ doc("payer_type") }}'
        tests:
          - dbt_expectations.expect_column_to_exist:
              tags: ['tuva_dqi_sev_1', 'dqi']
              config:
                severity: warn
                enabled: "{{ ((target.type != 'fabric') and var('enable_input_layer_testing', true)) | as_bool }}"
          - relationships:
              to: ref('terminology__payer_type')
              field: payer_type
              tags: ['tuva_dqi_sev_3', 'dqi']
              config:
                severity: warn
                # Disabled for bigquery as relationships dbt test does not work when the alias and the field are the same name
                enabled: "{{ ((target.type != 'fabric') and (target.type != 'bigquery') and var('enable_input_layer_testing', true)) | as_bool }}"
      - name: plan
        description: '{{ doc("plan") }}'
        tests:
          - dbt_expectations.expect_column_to_exist:
              tags: ['tuva_dqi_sev_1', 'dqi', 'dqi_financial_pmpm']
              config:
                severity: warn
                enabled: "{{ ((target.type != 'fabric') and var('enable_input_layer_testing', true)) | as_bool }}"
      - name: original_reason_entitlement_code
        description: '{{ doc("original_reason_entitlement_code") }}'
        tests:
          - dbt_expectations.expect_column_to_exist:
              tags: ['tuva_dqi_sev_1', 'dqi', 'dqi_cms_hccs']
              config:
                severity: warn
                enabled: "{{ ((target.type != 'fabric') and var('enable_input_layer_testing', true)) | as_bool }}"
          - dbt_expectations.expect_column_value_lengths_to_equal:
              value: 1
              tags: ['tuva_dqi_sev_2', 'dqi', 'dqi_cms_hccs']
              config:
                severity: warn
                enabled: "{{ ((target.type != 'fabric') and var('enable_input_layer_testing', true)) | as_bool }}"
          - accepted_values:
# description: https://resdac.org/cms-data/variables/claim-inpatient-admission-type-code-ffs
              tags: ['tuva_dqi_sev_2', 'dqi', 'dqi_cms_hccs']
              values: ['0', '1', '2', '3']
              config:
                severity: warn
                enabled: "{{ ((target.type != 'fabric') and var('enable_input_layer_testing', true)) | as_bool }}"
                meta:
                  dqi_test_description: "https://resdac.org/cms-data/variables/claim-inpatient-admission-type-code-ffs"
      - name: dual_status_code
        description: '{{ doc("dual_status_code") }}'
        tests:
          - dbt_expectations.expect_column_to_exist:
              tags: ['tuva_dqi_sev_1', 'dqi', 'dqi_cms_hccs']
              config:
                severity: warn
                enabled: "{{ ((target.type != 'fabric') and var('enable_input_layer_testing', true)) | as_bool }}"
          - accepted_values:
# description: https://resdac.org/cms-data/variables/medicare-medicaid-dual-eligibility-code-january
              tags: ['tuva_dqi_sev_3', 'dqi', 'dqi_cms_hccs']
              values: ['00', '01', '02', '03', '04', '05', '06', '08', '09', '10']
              config:
                severity: warn
                enabled: "{{ ((target.type != 'fabric') and var('enable_input_layer_testing', true)) | as_bool }}"
                meta:
                  dqi_test_description: "https://resdac.org/cms-data/variables/medicare-medicaid-dual-eligibility-code-january"
      - name: medicare_status_code
        description: '{{ doc("medicare_status_code") }}'
        tests:
          - dbt_expectations.expect_column_to_exist:
              tags: ['tuva_dqi_sev_1', 'dqi', 'dqi_cms_hccs']
              config:
                severity: warn
                enabled: "{{ ((target.type != 'fabric') and var('enable_input_layer_testing', true)) | as_bool }}"
          - accepted_values:
# description: https://resdac.org/cms-data/variables/medicare-status-code-january
              tags: ['tuva_dqi_sev_2', 'dqi', 'dqi_cms_hccs']
              values: ['00', '10', '11', '20', '21', '31', '40']
              config:
                severity: warn
                enabled: "{{ ((target.type != 'fabric') and var('enable_input_layer_testing', true)) | as_bool }}"
                meta:
                  dqi_test_description: "https://resdac.org/cms-data/variables/medicare-status-code-january"
      - name: group_id
        description: '{{ doc("first_name") }}'
        tests:
          - dbt_expectations.expect_column_to_exist:
              tags: ['tuva_dqi_sev_1', 'dqi']
              config:
                severity: warn
                enabled: "{{ ((target.type != 'fabric') and var('enable_input_layer_testing', true)) | as_bool }}"
      - name: group_name
        description: '{{ doc("first_name") }}'
        tests:
          - dbt_expectations.expect_column_to_exist:
              tags: ['tuva_dqi_sev_1', 'dqi']
              config:
                severity: warn
                enabled: "{{ ((target.type != 'fabric') and var('enable_input_layer_testing', true)) | as_bool }}"
      - name: first_name
        description: '{{ doc("first_name") }}'
        tests:
          - dbt_expectations.expect_column_to_exist:
              tags: ['tuva_dqi_sev_1', 'dqi']
              config:
                severity: warn
                enabled: "{{ ((target.type != 'fabric') and var('enable_input_layer_testing', true)) | as_bool }}"
      - name: last_name
        description: '{{ doc("last_name") }}'
        tests:
          - dbt_expectations.expect_column_to_exist:
              tags: ['tuva_dqi_sev_1', 'dqi']
              config:
                severity: warn
                enabled: "{{ ((target.type != 'fabric') and var('enable_input_layer_testing', true)) | as_bool }}"
      - name: social_security_number
        description: '{{ doc("social_security_number") }}'
        tests:
          - dbt_expectations.expect_column_to_exist:
              tags: ['tuva_dqi_sev_1', 'dqi']
              config:
                severity: warn
                enabled: "{{ ((target.type != 'fabric') and var('enable_input_layer_testing', true)) | as_bool }}"
      - name: subscriber_relation
        description: '{{ doc("subscriber_relation") }}'
        tests:
          - dbt_expectations.expect_column_to_exist:
              tags: ['tuva_dqi_sev_1', 'dqi']
              config:
                severity: warn
                enabled: "{{ ((target.type != 'fabric') and var('enable_input_layer_testing', true)) | as_bool }}"
      - name: address
        description: '{{ doc("address") }}'
        tests:
          - dbt_expectations.expect_column_to_exist:
              tags: ['tuva_dqi_sev_1', 'dqi']
              config:
                severity: warn
                enabled: "{{ ((target.type != 'fabric') and var('enable_input_layer_testing', true)) | as_bool }}"
      - name: city
        description: '{{ doc("city") }}'
        tests:
          - dbt_expectations.expect_column_to_exist:
              tags: ['tuva_dqi_sev_1', 'dqi']
              config:
                severity: warn
                enabled: "{{ ((target.type != 'fabric') and var('enable_input_layer_testing', true)) | as_bool }}"
      - name: state
        description: '{{ doc("state") }}'
        tests:
          - dbt_expectations.expect_column_to_exist:
              tags: ['tuva_dqi_sev_1', 'dqi']
              config:
                severity: warn
                enabled: "{{ ((target.type != 'fabric') and var('enable_input_layer_testing', true)) | as_bool }}"
      - name: zip_code
        description: '{{ doc("zip_code") }}'
        tests:
          - dbt_expectations.expect_column_to_exist:
              tags: ['tuva_dqi_sev_1', 'dqi']
              config:
                severity: warn
                enabled: "{{ ((target.type != 'fabric') and var('enable_input_layer_testing', true)) | as_bool }}"
      - name: phone
        description: '{{ doc("phone") }}'
        tests:
          - dbt_expectations.expect_column_to_exist:
              tags: ['tuva_dqi_sev_1', 'dqi']
              config:
                severity: warn
                enabled: "{{ ((target.type != 'fabric') and var('enable_input_layer_testing', true)) | as_bool }}"
      - name: data_source
        description: '{{ doc("data_source") }}'
        tests:
          - dbt_expectations.expect_column_to_exist:
              tags: ['tuva_dqi_sev_1', 'dqi', 'dqi_financial_pmpm']
              config:
                severity: warn
                enabled: "{{ ((target.type != 'fabric') and var('enable_input_layer_testing', true)) | as_bool }}"
      - name: file_name
        description: '{{ doc("file_name") }}'
        tests:
          - dbt_expectations.expect_column_to_exist:
              tags: ['tuva_dqi_sev_1', 'dqi']
              config:
                severity: warn
                enabled: "{{ ((target.type != 'fabric') and var('enable_input_layer_testing', true)) | as_bool }}"
      - name: file_date
        description: '{{ doc("file_name") }}'
        tests:
          - dbt_expectations.expect_column_to_exist:
              tags: ['tuva_dqi_sev_1', 'dqi']
              config:
                severity: warn
                enabled: "{{ ((target.type != 'fabric') and var('enable_input_layer_testing', true)) | as_bool }}"
          - dbt_expectations.expect_column_values_to_be_in_type_list:
              column_type_list: [date, datetime]
              tags: ['tuva_dqi_sev_2', 'dqi']
              config:
                severity: warn
                enabled: "{{ ((target.type != 'fabric') and var('enable_input_layer_testing', true)) | as_bool }}"
      - name: ingest_datetime
        description: '{{ doc("ingest_datetime") }}'
        tests:
          - dbt_expectations.expect_column_to_exist:
              tags: ['tuva_dqi_sev_1', 'dqi']
              config:
                severity: warn
                enabled: "{{ ((target.type != 'fabric') and var('enable_input_layer_testing', true)) | as_bool }}"
          - dbt_expectations.expect_column_values_to_be_in_type_list:
              column_type_list: [date, datetime, time, timestamp, timestamp_ntz, timestampntz,
                timestamp_ltz, timestampltz, timestamp_tz, timestamptz, timestamp
                    with time zone, timestamp without time zone, datetime2, datetimeoffset]
              tags: ['tuva_dqi_sev_2', 'dqi']
              config:
                severity: warn
                enabled: "{{ ((target.type != 'fabric') and var('enable_input_layer_testing', true)) | as_bool }}"
