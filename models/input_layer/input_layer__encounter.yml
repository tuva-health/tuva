version: 2
models:
  - name: input_layer__encounter
    description: |
      Mapping check to make sure all columns are mapped appropriately into the input layer.
      The encounter table contains information about patients visits (i.e. 
      encounters).  This includes acute inpatient, emergency department, office 
      visits, SNF stays, etc.
    config:
      schema: |
        {%- if var('tuva_schema_prefix',None) != None -%}{{var('tuva_schema_prefix')}}_input_layer{% else %}input_layer{%- endif -%}
      tags: input_layer
      materialized: view
    columns:
      - name: encounter_id
        description: '{{ doc("encounter_id") }}'
        tests:
          - dbt_expectations.expect_column_to_exist:
              tags: ['tuva_dqi_sev_1', 'dqi', 'dqi_service_categories', 'dqi_ccsr',
                'dqi_cms_chronic_conditions', 'dqi_tuva_chronic_conditions', 'dqi_cms_hccs',
                'dqi_ed_classification', 'dqi_financial_pmpm', 'dqi_quality_measures',
                'dqi_readmission']
              config:
                severity: error
                enabled: "{{ ((target.type != 'fabric') and var('enable_input_layer_testing', true) and var('enable_encounter', false)) | as_bool }}"
          - unique:
              tags: ['tuva_dqi_sev_1', 'dqi', 'dqi_service_categories', 'dqi_ccsr',
                'dqi_cms_chronic_conditions', 'dqi_tuva_chronic_conditions', 'dqi_cms_hccs',
                'dqi_ed_classification', 'dqi_financial_pmpm', 'dqi_quality_measures',
                'dqi_readmission']
              config:
                severity: error
                enabled: "{{ (var('enable_input_layer_testing', true) and var('enable_encounter', false)) | as_bool }}"
          - not_null:
              tags: ['tuva_dqi_sev_1', 'dqi', 'dqi_service_categories', 'dqi_ccsr',
                'dqi_cms_chronic_conditions', 'dqi_tuva_chronic_conditions', 'dqi_cms_hccs',
                'dqi_ed_classification', 'dqi_financial_pmpm', 'dqi_quality_measures',
                'dqi_readmission']
              config:
                severity: error
                enabled: "{{ (var('enable_input_layer_testing', true) and var('enable_encounter', false)) | as_bool }}"
      - name: person_id
        description: '{{ doc("person_id") }}'
        tests:
          - dbt_expectations.expect_column_to_exist:
              tags: ['tuva_dqi_sev_1', 'dqi', 'dqi_quality_measures']
              config:
                severity: warn
                enabled: "{{ ((target.type != 'fabric') and var('enable_input_layer_testing', true) and var('enable_encounter', false)) | as_bool }}"
          - not_null:
              tags: ['tuva_dqi_sev_2', 'dqi', 'dqi_quality_measures']
              config:
                severity: warn
                enabled: "{{ (var('enable_input_layer_testing', true) and var('enable_encounter', false)) | as_bool }}"
      - name: patient_id
        description: '{{ doc("patient_id") }}'
        tests:
          - dbt_expectations.expect_column_to_exist:
              tags: ['tuva_dqi_sev_1', 'dqi']
              config:
                severity: warn
                enabled: "{{ ((target.type != 'fabric') and var('enable_input_layer_testing', true) and var('enable_encounter', false)) | as_bool }}"
      - name: encounter_type
        description: '{{ doc("encounter_type") }}'
        tests:
          - dbt_expectations.expect_column_to_exist:
              tags: ['tuva_dqi_sev_1', 'dqi', 'dqi_quality_measures']
              config:
                severity: warn
                enabled: "{{ ((target.type != 'fabric') and var('enable_input_layer_testing', true) and var('enable_encounter', false)) | as_bool }}"
          - relationships:
              to: ref('terminology__encounter_type')
              field: encounter_type
              tags: ['tuva_dqi_sev_3', 'dqi', 'dqi_quality_measures']
              config:
                severity: warn
                # Disabled for bigquery as relationships dbt test does not work when the alias and the field are the same name
                enabled: "{{ ((target.type != 'fabric') and (target.type != 'bigquery') and var('enable_input_layer_testing', true)) | as_bool }}"
      - name: encounter_start_date
        description: '{{ doc("encounter_start_date") }}'
        tests:
          - dbt_expectations.expect_column_to_exist:
              tags: ['tuva_dqi_sev_1', 'dqi', 'dqi_quality_measures']
              config:
                severity: warn
                enabled: "{{ ((target.type != 'fabric') and var('enable_input_layer_testing', true) and var('enable_encounter', false)) | as_bool }}"
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: date
              tags: ['tuva_dqi_sev_2', 'dqi', 'dqi_quality_measures']
              config:
                severity: warn
                enabled: "{{ ((target.type != 'fabric') and var('enable_input_layer_testing', true) and var('enable_encounter', false)) | as_bool }}"
      - name: encounter_end_date
        description: '{{ doc("encounter_end_date") }}'
        tests:
          - dbt_expectations.expect_column_to_exist:
              tags: ['tuva_dqi_sev_1', 'dqi', 'dqi_quality_measures']
              config:
                severity: warn
                enabled: "{{ ((target.type != 'fabric') and var('enable_input_layer_testing', true) and var('enable_encounter', false)) | as_bool }}"
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: date
              tags: ['tuva_dqi_sev_2', 'dqi', 'dqi_quality_measures']
              config:
                severity: warn
                enabled: "{{ ((target.type != 'fabric') and var('enable_input_layer_testing', true) and var('enable_encounter', false)) | as_bool }}"
      - name: length_of_stay
        description: '{{ doc("length_of_stay") }}'
        tests:
          - dbt_expectations.expect_column_to_exist:
              tags: ['tuva_dqi_sev_1', 'dqi', 'dqi_quality_measures']
              config:
                severity: warn
                enabled: "{{ ((target.type != 'fabric') and var('enable_input_layer_testing', true) and var('enable_encounter', false)) | as_bool }}"
      - name: admit_source_code
        description: '{{ doc("admit_source_code") }}'
        tests:
          - dbt_expectations.expect_column_to_exist:
              tags: ['tuva_dqi_sev_1', 'dqi']
              config:
                severity: warn
                enabled: "{{ ((target.type != 'fabric') and var('enable_input_layer_testing', true) and var('enable_encounter', false)) | as_bool }}"
          - dbt_expectations.expect_column_value_lengths_to_equal:
              value: 1
              tags: ['tuva_dqi_sev_2', 'dqi']
              config:
                severity: warn
                enabled: "{{ ((target.type != 'fabric') and var('enable_input_layer_testing', true) and var('enable_encounter', false)) | as_bool }}"
      - name: admit_source_description
        description: '{{ doc("admit_source_description") }}'
        tests:
          - dbt_expectations.expect_column_to_exist:
              tags: ['tuva_dqi_sev_1', 'dqi']
              config:
                severity: warn
                enabled: "{{ ((target.type != 'fabric') and var('enable_input_layer_testing', true) and var('enable_encounter', false)) | as_bool }}"
      - name: admit_type_code
        description: '{{ doc("admit_type_code") }}'
        tests:
          - dbt_expectations.expect_column_to_exist:
              tags: ['tuva_dqi_sev_1', 'dqi']
              config:
                severity: warn
                enabled: "{{ ((target.type != 'fabric') and var('enable_input_layer_testing', true) and var('enable_encounter', false)) | as_bool }}"
      - name: admit_type_description
        description: '{{ doc("admit_type_description") }}'
        tests:
          - dbt_expectations.expect_column_to_exist:
              tags: ['tuva_dqi_sev_1', 'dqi']
              config:
                severity: warn
                enabled: "{{ ((target.type != 'fabric') and var('enable_input_layer_testing', true) and var('enable_encounter', false)) | as_bool }}"
      - name: discharge_disposition_code
        description: '{{ doc("discharge_disposition_code") }}'
        tests:
          - dbt_expectations.expect_column_to_exist:
              tags: ['tuva_dqi_sev_1', 'dqi']
              config:
                severity: warn
                enabled: "{{ ((target.type != 'fabric') and var('enable_input_layer_testing', true) and var('enable_encounter', false)) | as_bool }}"
      - name: discharge_disposition_description
        description: '{{ doc("discharge_disposition_description") }}'
        tests:
          - dbt_expectations.expect_column_to_exist:
              tags: ['tuva_dqi_sev_1', 'dqi']
              config:
                severity: warn
                enabled: "{{ ((target.type != 'fabric') and var('enable_input_layer_testing', true) and var('enable_encounter', false)) | as_bool }}"
      - name: attending_provider_id
        description: '{{ doc("attending_provider_id") }}'
        tests:
          - dbt_expectations.expect_column_to_exist:
              tags: ['tuva_dqi_sev_1', 'dqi']
              config:
                severity: warn
                enabled: "{{ ((target.type != 'fabric') and var('enable_input_layer_testing', true) and var('enable_encounter', false)) | as_bool }}"
      - name: attending_provider_name
        description: '{{ doc("attending_provider_name") }}'
        tests:
          - dbt_expectations.expect_column_to_exist:
              tags: ['tuva_dqi_sev_1', 'dqi']
              config:
                severity: warn
                enabled: "{{ ((target.type != 'fabric') and var('enable_input_layer_testing', true) and var('enable_encounter', false)) | as_bool }}"
      - name: facility_id
        description: '{{ doc("facility_id") }}'
        tests:
          - dbt_expectations.expect_column_to_exist:
              tags: ['tuva_dqi_sev_1', 'dqi']
              config:
                severity: warn
                enabled: "{{ ((target.type != 'fabric') and var('enable_input_layer_testing', true) and var('enable_encounter', false)) | as_bool }}"
      - name: facility_name
        description: '{{ doc("facility_name") }}'
        tests:
          - dbt_expectations.expect_column_to_exist:
              tags: ['tuva_dqi_sev_1', 'dqi']
              config:
                severity: warn
                enabled: "{{ ((target.type != 'fabric') and var('enable_input_layer_testing', true) and var('enable_encounter', false)) | as_bool }}"
      - name: primary_diagnosis_code_type
        description: '{{ doc("primary_diagnosis_code_type") }}'
        tests:
          - dbt_expectations.expect_column_to_exist:
              tags: ['tuva_dqi_sev_1', 'dqi']
              config:
                severity: warn
                enabled: "{{ ((target.type != 'fabric') and var('enable_input_layer_testing', true) and var('enable_encounter', false)) | as_bool }}"
      - name: primary_diagnosis_code
        description: '{{ doc("primary_diagnosis_code") }}'
        tests:
          - dbt_expectations.expect_column_to_exist:
              tags: ['tuva_dqi_sev_1', 'dqi']
              config:
                severity: warn
                enabled: "{{ ((target.type != 'fabric') and var('enable_input_layer_testing', true) and var('enable_encounter', false)) | as_bool }}"
      - name: primary_diagnosis_description
        description: '{{ doc("primary_diagnosis_description") }}'
        tests:
          - dbt_expectations.expect_column_to_exist:
              tags: ['tuva_dqi_sev_1', 'dqi']
              config:
                severity: warn
                enabled: "{{ ((target.type != 'fabric') and var('enable_input_layer_testing', true) and var('enable_encounter', false)) | as_bool }}"
      - name: drg_code_type
        description: '{{ doc("drg_code_type") }}'
        tests:
          - dbt_expectations.expect_column_to_exist:
              tags: ['tuva_dqi_sev_1', 'dqi']
              config:
                severity: warn
                enabled: "{{ ((target.type != 'fabric') and var('enable_input_layer_testing', true) and var('enable_encounter', false)) | as_bool }}"
      - name: drg_code
        description: '{{ doc("drg_code") }}'
        tests:
          - dbt_expectations.expect_column_to_exist:
              tags: ['tuva_dqi_sev_1', 'dqi']
              config:
                severity: warn
                enabled: "{{ ((target.type != 'fabric') and var('enable_input_layer_testing', true) and var('enable_encounter', false)) | as_bool }}"
      - name: drg_description
        description: '{{ doc("drg_description") }}'
        tests:
          - dbt_expectations.expect_column_to_exist:
              tags: ['tuva_dqi_sev_1', 'dqi']
              config:
                severity: warn
                enabled: "{{ ((target.type != 'fabric') and var('enable_input_layer_testing', true) and var('enable_encounter', false)) | as_bool }}"
      - name: paid_amount
        description: '{{ doc("paid_amount") }}'
        tests:
          - dbt_expectations.expect_column_to_exist:
              tags: ['tuva_dqi_sev_1', 'dqi']
              config:
                severity: warn
                enabled: "{{ ((target.type != 'fabric') and var('enable_input_layer_testing', true) and var('enable_encounter', false)) | as_bool }}"
      - name: allowed_amount
        description: '{{ doc("allowed_amount") }}'
        tests:
          - dbt_expectations.expect_column_to_exist:
              tags: ['tuva_dqi_sev_1', 'dqi']
              config:
                severity: warn
                enabled: "{{ ((target.type != 'fabric') and var('enable_input_layer_testing', true) and var('enable_encounter', false)) | as_bool }}"
      - name: charge_amount
        description: '{{ doc("charge_amount") }}'
        tests:
          - dbt_expectations.expect_column_to_exist:
              tags: ['tuva_dqi_sev_1', 'dqi']
              config:
                severity: warn
                enabled: "{{ ((target.type != 'fabric') and var('enable_input_layer_testing', true) and var('enable_encounter', false)) | as_bool }}"
      - name: data_source
        description: '{{ doc("data_source") }}'
        tests:
          - dbt_expectations.expect_column_to_exist:
              tags: ['tuva_dqi_sev_1', 'dqi']
              config:
                severity: warn
                enabled: "{{ ((target.type != 'fabric') and var('enable_input_layer_testing', true) and var('enable_encounter', false)) | as_bool }}"
      - name: file_name
        description: '{{ doc("file_name") }}'
        tests:
          - dbt_expectations.expect_column_to_exist:
              tags: ['tuva_dqi_sev_1', 'dqi']
              config:
                severity: warn
                enabled: "{{ ((target.type != 'fabric') and var('enable_input_layer_testing', true) and var('enable_encounter', false)) | as_bool }}"
      - name: ingest_datetime
        description: '{{ doc("ingest_datetime") }}'
        tests:
          - dbt_expectations.expect_column_to_exist:
              tags: ['tuva_dqi_sev_1', 'dqi']
              config:
                severity: warn
                enabled: "{{ ((target.type != 'fabric') and var('enable_input_layer_testing', true) and var('enable_encounter', false)) | as_bool }}"
          - dbt_expectations.expect_column_values_to_be_in_type_list:
              column_type_list: [date, datetime, time, timestamp, timestamp_ntz, timestampntz,
                timestamp_ltz, timestampltz, timestamp_tz, timestamptz, timestamp
                    with time zone, timestamp without time zone, datetime2, datetimeoffset]
              tags: ['tuva_dqi_sev_2', 'dqi']
              config:
                severity: warn
                enabled: "{{ ((target.type != 'fabric') and var('enable_input_layer_testing', true) and var('enable_encounter', false)) | as_bool }}"
