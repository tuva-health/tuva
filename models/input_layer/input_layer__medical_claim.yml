version: 2
models:
  - name: input_layer__medical_claim
    description: >
      Mapping check to make sure all columns are mapped appropriately into the input
      layer.
      The medical_claim table contains information on healthcare services and  supplies
      provided to patients, billed by providers, and paid for by health  insurers.
      It includes information on the provider who rendered the  service, the amount
      paid for the service by the health insurer, and the  underlying reason for the
      service (i.e. diagnosis).
    tests:
      - dbt_utils.unique_combination_of_columns:
          combination_of_columns:
            - claim_id
            - claim_line_number
            - data_source
          tags: ['tuva_dqi_sev_1', 'dqi', 'dqi_service_categories', 'dqi_ccsr', 'dqi_cms_chronic_conditions',
            'dqi_tuva_chronic_conditions', 'dqi_cms_hccs', 'dqi_ed_classification',
            'dqi_financial_pmpm', 'dqi_quality_measures', 'dqi_readmission']
          config:
            severity: error
            enabled: "{{ ((target.type != 'fabric') and var('enable_input_layer_testing',
              true)) | as_bool }}"
      - dbt_expectations.expect_column_pair_values_A_to_be_greater_than_B:
          tags: ['tuva_dqi_sev_3', 'dqi', 'dqi_cms_chronic_conditions', 'dqi_tuva_chronic_conditions',
            'dqi_cms_hccs', 'dqi_ed_classification', 'dqi_financial_pmpm', 'dqi_quality_measures',
            'dqi_readmission']
          column_A: claim_end_date
          column_B: claim_start_date
          or_equal: true
          config:
            severity: warn
            enabled: "{{ ((target.type != 'fabric') and var('enable_input_layer_testing',
              true)) | as_bool }}"
    config:
      schema: |
        {%- if var('tuva_schema_prefix',None) != None -%}{{var('tuva_schema_prefix')}}_input_layer{% else %}input_layer{%- endif -%}
      tags: input_layer
      materialized: view
    columns:
      - name: claim_id
        description: '{{ doc("claim_id") }}'
        tests:
          - dbt_expectations.expect_column_to_exist:
              tags: ['tuva_dqi_sev_1', 'dqi', 'dqi_service_categories', 'dqi_ccsr',
                'dqi_cms_chronic_conditions', 'dqi_tuva_chronic_conditions', 'dqi_cms_hccs',
                'dqi_ed_classification', 'dqi_financial_pmpm', 'dqi_quality_measures',
                'dqi_readmission']
              config:
                severity: error
                enabled: "{{ ((target.type != 'fabric') and var('enable_input_layer_testing', true)) | as_bool }}"
          - not_null:
              tags: ['tuva_dqi_sev_1', 'dqi', 'dqi_service_categories', 'dqi_ccsr',
                'dqi_cms_chronic_conditions', 'dqi_tuva_chronic_conditions', 'dqi_cms_hccs',
                'dqi_ed_classification', 'dqi_financial_pmpm', 'dqi_quality_measures',
                'dqi_readmission']
              config:
                severity: error
                enabled: "{{ var('enable_input_layer_testing', true) | as_bool }}"
      - name: claim_line_number
        description: '{{ doc("claim_line_number") }}'
        tests:
          - dbt_expectations.expect_column_to_exist:
              tags: ['tuva_dqi_sev_1', 'dqi', 'dqi_service_categories', 'dqi_ccsr',
                'dqi_cms_chronic_conditions', 'dqi_tuva_chronic_conditions', 'dqi_cms_hccs',
                'dqi_ed_classification', 'dqi_financial_pmpm', 'dqi_quality_measures',
                'dqi_readmission']
              config:
                severity: error
                enabled: "{{ ((target.type != 'fabric') and var('enable_input_layer_testing', true)) | as_bool }}"
          - not_null:
              tags: ['tuva_dqi_sev_1', 'dqi', 'dqi_service_categories', 'dqi_ccsr',
                'dqi_cms_chronic_conditions', 'dqi_tuva_chronic_conditions', 'dqi_cms_hccs',
                'dqi_ed_classification', 'dqi_financial_pmpm', 'dqi_quality_measures',
                'dqi_readmission']
              config:
                severity: error
                enabled: "{{ var('enable_input_layer_testing', true) | as_bool }}"
      - name: claim_type
        description: '{{ doc("claim_type") }}'
        tests:
          - dbt_expectations.expect_column_unique_value_count_to_be_between:
# description: A claim cannot be both professional and institutional within the same claim id.
              min_value: 1
              max_value: 1
              tags: ['tuva_dqi_sev_1', 'dqi', 'dqi_service_categories', 'dqi_ccsr',
                'dqi_cms_chronic_conditions', 'dqi_tuva_chronic_conditions', 'dqi_cms_hccs',
                'dqi_ed_classification', 'dqi_financial_pmpm', 'dqi_quality_measures',
                'dqi_readmission']
              group_by: [claim_id]
              strictly: false
              config:
                severity: error
                enabled: "{{ ((target.type != 'fabric') and var('enable_input_layer_testing', true)) | as_bool }}"
                meta:
                  dqi_test_description: 'A claim cannot be both professional and institutional
                    within the same claim id.'
          - dbt_expectations.expect_column_to_exist:
              tags: ['tuva_dqi_sev_1', 'dqi', 'dqi_cms_hccs']
              config:
                severity: warn
                enabled: "{{ ((target.type != 'fabric') and var('enable_input_layer_testing', true)) | as_bool }}"
          - not_null:
              tags: ['tuva_dqi_sev_2', 'dqi', 'dqi_cms_hccs']
              config:
                severity: warn
                enabled: "{{ var('enable_input_layer_testing', true) | as_bool }}"
          - accepted_values:
              values: ['professional', 'institutional', 'undetermined']
              tags: ['tuva_dqi_sev_2', 'dqi', 'dqi_cms_hccs']
              config:
                severity: warn
                enabled: "{{ var('enable_input_layer_testing', true) | as_bool }}"
      - name: person_id
        description: '{{ doc("person_id") }}'
        tests:
          - dbt_expectations.expect_column_unique_value_count_to_be_between:
# description: A claim should not belong to two different people.
              min_value: 1
              max_value: 1
              tags: ['tuva_dqi_sev_1', 'dqi', 'dqi_ccsr', 'dqi_cms_chronic_conditions',
                'dqi_readmission']
              group_by: [claim_id]
              strictly: false
              config:
                severity: warn
                enabled: "{{ ((target.type != 'fabric') and var('enable_input_layer_testing', true)) | as_bool }}"
                meta:
                  dqi_test_description: 'A claim should not belong to two different
                    people.'
          - dbt_expectations.expect_column_to_exist:
              tags: ['tuva_dqi_sev_1', 'dqi', 'dqi_ccsr', 'dqi_cms_chronic_conditions',
                'dqi_readmission']
              config:
                severity: warn
                enabled: "{{ ((target.type != 'fabric') and var('enable_input_layer_testing', true)) | as_bool }}"
          - not_null:
              tags: ['tuva_dqi_sev_2', 'dqi', 'dqi_ccsr', 'dqi_cms_chronic_conditions',
                'dqi_readmission']
              config:
                severity: warn
                enabled: "{{ var('enable_input_layer_testing', true) | as_bool }}"
      - name: member_id
        description: '{{ doc("member_id") }}'
        tests:
          - dbt_expectations.expect_column_to_exist:
              tags: ['tuva_dqi_sev_1', 'dqi']
              config:
                severity: warn
                enabled: "{{ ((target.type != 'fabric') and var('enable_input_layer_testing', true)) | as_bool }}"
      - name: payer
        description: '{{ doc("payer") }}'
        tests:
          - dbt_expectations.expect_column_to_exist:
              tags: ['tuva_dqi_sev_1', 'dqi', 'dqi_financial_pmpm']
              config:
                severity: warn
                enabled: "{{ ((target.type != 'fabric') and var('enable_input_layer_testing', true)) | as_bool }}"
      - name: plan
        description: '{{ doc("plan") }}'
        tests:
          - dbt_expectations.expect_column_to_exist:
              tags: ['tuva_dqi_sev_1', 'dqi', 'dqi_financial_pmpm']
              config:
                severity: warn
                enabled: "{{ ((target.type != 'fabric') and var('enable_input_layer_testing', true)) | as_bool }}"
      - name: claim_start_date
        description: '{{ doc("claim_start_date") }}'
        tests:
          - dbt_expectations.expect_column_unique_value_count_to_be_between:
# description: A claim should not have multiple start dates within the same claim id.
              min_value: 1
              max_value: 1
              tags: ['tuva_dqi_sev_3', 'dqi', 'dqi_cms_chronic_conditions', 'dqi_tuva_chronic_conditions',
                'dqi_cms_hccs', 'dqi_ed_classification', 'dqi_financial_pmpm', 'dqi_quality_measures',
                'dqi_readmission']
              group_by: [claim_id]
              strictly: false
              config:
                severity: warn
                enabled: "{{ ((target.type != 'fabric') and var('enable_input_layer_testing', true)) | as_bool }}"
                meta:
                  dqi_test_description: 'A claim should not have multiple start dates
                    within the same claim id.'
          - dbt_expectations.expect_column_to_exist:
              tags: ['tuva_dqi_sev_1', 'dqi', 'dqi_cms_chronic_conditions', 'dqi_tuva_chronic_conditions',
                'dqi_cms_hccs', 'dqi_ed_classification', 'dqi_financial_pmpm', 'dqi_quality_measures',
                'dqi_readmission']
              config:
                severity: warn
                enabled: "{{ ((target.type != 'fabric') and var('enable_input_layer_testing', true)) | as_bool }}"
          - dbt_expectations.expect_column_values_to_be_between:
# description: This is a test on all dates to see if they are within a reasonable range. 
              tags: ['tuva_dqi_sev_3', 'dqi', 'dqi_cms_chronic_conditions', 'dqi_tuva_chronic_conditions',
                'dqi_cms_hccs', 'dqi_ed_classification', 'dqi_financial_pmpm', 'dqi_quality_measures',
                'dqi_readmission']
              min_value: "'1900-01-02'"
              max_value: "'2050-01-02'"
              strictly: false
              config:
                severity: warn
                enabled: "{{ ((target.type != 'fabric') and var('enable_input_layer_testing', true)) | as_bool }}"
                meta:
                  dqi_test_description: "This is a test on all dates to see if they
                    are within a reasonable range. "
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: date
              tags: ['tuva_dqi_sev_2', 'dqi', 'dqi_cms_chronic_conditions', 'dqi_tuva_chronic_conditions',
                'dqi_cms_hccs', 'dqi_ed_classification', 'dqi_financial_pmpm', 'dqi_quality_measures',
                'dqi_readmission']
              config:
                severity: warn
                enabled: "{{ ((target.type != 'fabric') and var('enable_input_layer_testing', true)) | as_bool }}"
          - not_null:
              tags: ['tuva_dqi_sev_3', 'dqi', 'dqi_cms_chronic_conditions', 'dqi_tuva_chronic_conditions',
                'dqi_cms_hccs', 'dqi_ed_classification', 'dqi_financial_pmpm', 'dqi_quality_measures',
                'dqi_readmission']
              config:
                severity: warn
                enabled: "{{ var('enable_input_layer_testing', true) | as_bool }}"
      - name: claim_end_date
        description: '{{ doc("claim_end_date") }}'
        tests:
          - dbt_expectations.expect_column_unique_value_count_to_be_between:
# description: A claim should not have multiple end dates within the same claim id.
              min_value: 1
              max_value: 1
              tags: ['tuva_dqi_sev_1', 'dqi', 'dqi_cms_chronic_conditions', 'dqi_tuva_chronic_conditions',
                'dqi_cms_hccs', 'dqi_ed_classification', 'dqi_financial_pmpm', 'dqi_quality_measures',
                'dqi_readmission']
              group_by: [claim_id]
              strictly: false
              config:
                severity: warn
                enabled: "{{ ((target.type != 'fabric') and var('enable_input_layer_testing', true)) | as_bool }}"
                meta:
                  dqi_test_description: 'A claim should not have multiple end dates
                    within the same claim id.'
          - not_null:
              tags: ['tuva_dqi_sev_3', 'dqi', 'dqi_cms_chronic_conditions', 'dqi_tuva_chronic_conditions',
                'dqi_cms_hccs', 'dqi_ed_classification', 'dqi_financial_pmpm', 'dqi_quality_measures',
                'dqi_readmission']
              config:
                severity: warn
                enabled: "{{ var('enable_input_layer_testing', true) | as_bool }}"
          - dbt_expectations.expect_column_to_exist:
              tags: ['tuva_dqi_sev_1', 'dqi', 'dqi_tuva_chronic_conditions', 'dqi_cms_hccs',
                'dqi_ed_classification', 'dqi_financial_pmpm', 'dqi_quality_measures',
                'dqi_readmission']
              config:
                severity: warn
                enabled: "{{ ((target.type != 'fabric') and var('enable_input_layer_testing', true)) | as_bool }}"
          - dbt_expectations.expect_column_values_to_be_between:
# description: This is a test on all dates to see if they are within a reasonable range. 
              tags: ['tuva_dqi_sev_3', 'dqi', 'dqi_cms_chronic_conditions', 'dqi_tuva_chronic_conditions',
                'dqi_cms_hccs', 'dqi_ed_classification', 'dqi_financial_pmpm', 'dqi_quality_measures',
                'dqi_readmission']
              min_value: "'1900-01-02'"
              max_value: "'2050-01-02'"
              strictly: false
              config:
                severity: warn
                enabled: "{{ ((target.type != 'fabric') and var('enable_input_layer_testing', true)) | as_bool }}"
                meta:
                  dqi_test_description: "This is a test on all dates to see if they
                    are within a reasonable range. "
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: date
              tags: ['tuva_dqi_sev_2', 'dqi', 'dqi_tuva_chronic_conditions', 'dqi_cms_hccs',
                'dqi_ed_classification', 'dqi_financial_pmpm', 'dqi_quality_measures',
                'dqi_readmission']
              config:
                severity: warn
                enabled: "{{ ((target.type != 'fabric') and var('enable_input_layer_testing', true)) | as_bool }}"
      - name: claim_line_start_date
        description: '{{ doc("claim_line_start_date") }}'
        tests:
          - dbt_expectations.expect_column_to_exist:
              tags: ['tuva_dqi_sev_1', 'dqi', 'dqi_financial_pmpm']
              config:
                severity: warn
                enabled: "{{ ((target.type != 'fabric') and var('enable_input_layer_testing', true)) | as_bool }}"
          - dbt_expectations.expect_column_values_to_be_between:
# description: This is a test on all dates to see if they are within a reasonable range. 
              tags: ['tuva_dqi_sev_1', 'dqi', 'dqi_financial_pmpm']
              min_value: "'1900-01-02'"
              max_value: "'2050-01-02'"
              strictly: false
              config:
                severity: warn
                enabled: "{{ ((target.type != 'fabric') and var('enable_input_layer_testing', true)) | as_bool }}"
                meta:
                  dqi_test_description: "This is a test on all dates to see if they
                    are within a reasonable range. "
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: date
              tags: ['tuva_dqi_sev_2', 'dqi', 'dqi_financial_pmpm']
              config:
                severity: warn
                enabled: "{{ ((target.type != 'fabric') and var('enable_input_layer_testing', true)) | as_bool }}"
      - name: claim_line_end_date
        description: '{{ doc("claim_line_end_date") }}'
        tests:
          - dbt_expectations.expect_column_to_exist:
              tags: ['tuva_dqi_sev_1', 'dqi', 'dqi_financial_pmpm']
              config:
                severity: warn
                enabled: "{{ ((target.type != 'fabric') and var('enable_input_layer_testing', true)) | as_bool }}"
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: date
              tags: ['tuva_dqi_sev_2', 'dqi', 'dqi_financial_pmpm']
              config:
                severity: warn
                enabled: "{{ ((target.type != 'fabric') and var('enable_input_layer_testing', true)) | as_bool }}"
      - name: admission_date
        description: '{{ doc("admission_date") }}'
        tests:
          - dbt_expectations.expect_column_to_exist:
              tags: ['tuva_dqi_sev_1', 'dqi', 'dqi_tuva_chronic_conditions']
              config:
                severity: warn
                enabled: "{{ ((target.type != 'fabric') and var('enable_input_layer_testing', true)) | as_bool }}"
          - dbt_expectations.expect_column_values_to_be_between:
# description: This is a test on all dates to see if they are within a reasonable range. 
              tags: ['tuva_dqi_sev_3', 'dqi', 'dqi_tuva_chronic_conditions']
              min_value: "'1900-01-02'"
              max_value: "'2050-01-02'"
              strictly: false
              config:
                severity: warn
                enabled: "{{ ((target.type != 'fabric') and var('enable_input_layer_testing', true)) | as_bool }}"
                meta:
                  dqi_test_description: "This is a test on all dates to see if they
                    are within a reasonable range. "
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: date
              tags: ['tuva_dqi_sev_2', 'dqi', 'dqi_tuva_chronic_conditions']
              config:
                severity: warn
                enabled: "{{ ((target.type != 'fabric') and var('enable_input_layer_testing', true)) | as_bool }}"
      - name: discharge_date
        description: '{{ doc("discharge_date") }}'
        tests:
          - dbt_expectations.expect_column_to_exist:
              tags: ['tuva_dqi_sev_1', 'dqi', 'dqi_tuva_chronic_conditions']
              config:
                severity: warn
                enabled: "{{ ((target.type != 'fabric') and var('enable_input_layer_testing', true)) | as_bool }}"
          - dbt_expectations.expect_column_values_to_be_between:
# description: This is a test on all dates to see if they are within a reasonable range. 
              tags: ['tuva_dqi_sev_3', 'dqi', 'dqi_tuva_chronic_conditions']
              min_value: "'1900-01-02'"
              max_value: "'2050-01-02'"
              strictly: false
              config:
                severity: warn
                enabled: "{{ ((target.type != 'fabric') and var('enable_input_layer_testing', true)) | as_bool }}"
                meta:
                  dqi_test_description: "This is a test on all dates to see if they
                    are within a reasonable range. "
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: date
              tags: ['tuva_dqi_sev_2', 'dqi', 'dqi_tuva_chronic_conditions']
              config:
                severity: warn
                enabled: "{{ ((target.type != 'fabric') and var('enable_input_layer_testing', true)) | as_bool }}"
      - name: admit_source_code
        description: '{{ doc("admit_source_code") }}'
        tests:
          - dbt_expectations.expect_column_to_exist:
              tags: ['tuva_dqi_sev_1', 'dqi']
              config:
                severity: warn
                enabled: "{{ ((target.type != 'fabric') and var('enable_input_layer_testing', true)) | as_bool }}"
          - dbt_expectations.expect_column_value_lengths_to_equal:
              value: 1
              tags: ['tuva_dqi_sev_2', 'dqi']
              config:
                severity: warn
                enabled: "{{ ((target.type != 'fabric') and var('enable_input_layer_testing', true)) | as_bool }}"
      - name: admit_type_code
        description: '{{ doc("admit_type_code") }}'
        tests:
          - dbt_expectations.expect_column_to_exist:
              tags: ['tuva_dqi_sev_1', 'dqi']
              config:
                severity: warn
                enabled: "{{ ((target.type != 'fabric') and var('enable_input_layer_testing', true)) | as_bool }}"
          - dbt_expectations.expect_column_value_lengths_to_equal:
              value: 1
              tags: ['tuva_dqi_sev_2', 'dqi']
              config:
                severity: warn
                enabled: "{{ ((target.type != 'fabric') and var('enable_input_layer_testing', true)) | as_bool }}"
          - dbt_expectations.expect_column_values_to_match_regex:
# description: https://resdac.org/cms-data/variables/claim-inpatient-admission-type-code-ffs
              regex: "^[0-59]$"
              tags: ['tuva_dqi_sev_2', 'dqi']
              config:
                severity: warn
                enabled: "{{ ((target.type != 'fabric') and var('enable_input_layer_testing', true)) | as_bool }}"
                meta:
                  dqi_test_description: "https://resdac.org/cms-data/variables/claim-inpatient-admission-type-code-ffs"
      - name: discharge_disposition_code
        description: '{{ doc("discharge_disposition_code") }}'
        tests:
          - dbt_expectations.expect_column_to_exist:
              tags: ['tuva_dqi_sev_1', 'dqi', 'dqi_readmission']
              config:
                severity: warn
                enabled: "{{ ((target.type != 'fabric') and var('enable_input_layer_testing', true)) | as_bool }}"
          - relationships:
              to: ref('terminology__discharge_disposition')
              field: discharge_disposition_code
              tags: ['tuva_dqi_sev_3', 'dqi', 'dqi_readmission']
              config:
                severity: warn
                enabled: "{{ var('enable_input_layer_testing', true) | as_bool }}"
      - name: place_of_service_code
        description: '{{ doc("place_of_service_code") }}'
        tests:
          - not_null:
# description: If a claim is professional, it should have a place of service code via CMS-1500. 
              tags: ['tuva_dqi_sev_4', 'dqi', 'dqi_quality_measures']
              config:
                severity: warn
                enabled: "{{ var('enable_input_layer_testing', true) | as_bool }}"
                where: claim_type = 'professional'
                meta:
                  dqi_test_description: "If a claim is professional, it should have
                    a place of service code via CMS-1500. "
          - dbt_expectations.expect_column_to_exist:
              tags: ['tuva_dqi_sev_1', 'dqi', 'dqi_quality_measures']
              config:
                severity: warn
                enabled: "{{ ((target.type != 'fabric') and var('enable_input_layer_testing', true)) | as_bool }}"
          - dbt_expectations.expect_column_value_lengths_to_equal:
              value: 2
              tags: ['tuva_dqi_sev_2', 'dqi', 'dqi_quality_measures']
              config:
                severity: warn
                enabled: "{{ ((target.type != 'fabric') and var('enable_input_layer_testing', true)) | as_bool }}"
          - dbt_expectations.expect_column_values_to_match_regex:
# description: https://resdac.org/cms-data/variables/claim-inpatient-admission-type-code-ffs
              regex: "^[0-9]{2}$"
              tags: ['tuva_dqi_sev_2', 'dqi', 'dqi_quality_measures']
              config:
                severity: warn
                enabled: "{{ ((target.type != 'fabric') and var('enable_input_layer_testing', true)) | as_bool }}"
                meta:
                  dqi_test_description: "https://resdac.org/cms-data/variables/claim-inpatient-admission-type-code-ffs"
      - name: bill_type_code
        description: '{{ doc("bill_type_code") }}'
        tests:
          - dbt_expectations.expect_column_unique_value_count_to_be_between:
# description: A claim should not have multiple bill type codes within the same claim id.
              min_value: 1
              max_value: 1
              tags: ['tuva_dqi_sev_1', 'dqi', 'dqi_cms_chronic_conditions']
              group_by: [claim_id]
              strictly: false
              config:
                severity: warn
                enabled: "{{ ((target.type != 'fabric') and var('enable_input_layer_testing', true)) | as_bool }}"
                meta:
                  dqi_test_description: 'A claim should not have multiple bill type
                    codes within the same claim id.'
          - dbt_expectations.expect_column_to_exist:
              tags: ['tuva_dqi_sev_1', 'dqi', 'dqi_cms_chronic_conditions']
              config:
                severity: warn
                enabled: "{{ ((target.type != 'fabric') and var('enable_input_layer_testing', true)) | as_bool }}"
          - dbt_expectations.expect_column_value_lengths_to_be_between:
              min_value: 3
              max_value: 4
              tags: ['tuva_dqi_sev_2', 'dqi', 'dqi_cms_chronic_conditions']
              config:
                severity: warn
                enabled: "{{ ((target.type != 'fabric') and var('enable_input_layer_testing', true)) | as_bool }}"
          - dbt_expectations.expect_column_values_to_match_regex:
# description: 3 digits, 2 numbers followed by letter. If 4, leading 0.
              regex: "^([0-9]{2}[0-9A-Za-z]|0[0-9]{2}[0-9A-Za-z])$"
              tags: ['tuva_dqi_sev_2', 'dqi', 'dqi_cms_chronic_conditions']
              config:
                severity: warn
                enabled: "{{ ((target.type != 'fabric') and var('enable_input_layer_testing', true)) | as_bool }}"
                meta:
                  dqi_test_description: "3 digits, 2 numbers followed by letter. If
                    4, leading 0."
      - name: drg_code_type
        description: '{{ doc("drg_code_type") }}'
        tests:
          - dbt_expectations.expect_column_to_exist:
              tags: ['tuva_dqi_sev_1', 'dqi', 'dqi_cms_chronic_conditions', 'dqi_financial_pmpm',
                'dqi_readmission']
              config:
                severity: warn
                enabled: "{{ ((target.type != 'fabric') and var('enable_input_layer_testing', true)) | as_bool }}"
          - accepted_values:
              values: ['ms-drg', 'apr-drg']
              tags: ['tuva_dqi_sev_2', 'dqi', 'dqi_cms_chronic_conditions', 'dqi_financial_pmpm',
                'dqi_readmission']
              config:
                severity: warn
                enabled: "{{ var('enable_input_layer_testing', true) | as_bool }}"
      - name: drg_code
        description: '{{ doc("drg_code") }}'
        tests:
          - dbt_expectations.expect_column_to_exist:
              tags: ['tuva_dqi_sev_1', 'dqi', 'dqi_cms_chronic_conditions', 'dqi_financial_pmpm',
                'dqi_readmission']
              config:
                severity: warn
                enabled: "{{ ((target.type != 'fabric') and var('enable_input_layer_testing', true)) | as_bool }}"
          - dbt_expectations.expect_column_value_lengths_to_equal:
              value: 3
              tags: ['tuva_dqi_sev_2', 'dqi', 'dqi_cms_chronic_conditions', 'dqi_financial_pmpm',
                'dqi_readmission']
              config:
                severity: warn
                enabled: "{{ ((target.type != 'fabric') and var('enable_input_layer_testing', true)) | as_bool }}"
      - name: revenue_center_code
        description: '{{ doc("revenue_center_code") }}'
        tests:
          - not_null:
# description: Missing revenue codes for institutional claims. Severity 5 as triggers if at least on revenue code is missing. 
              tags: ['tuva_dqi_sev_5', 'dqi', 'dqi_quality_measures']
              config:
                severity: warn
                enabled: "{{ var('enable_input_layer_testing', true) | as_bool }}"
                where: claim_type = 'institutional'
                meta:
                  dqi_test_description: "Missing revenue codes for institutional claims.
                    Severity 5 as triggers if at least on revenue code is missing. "
          - dbt_expectations.expect_column_unique_value_count_to_be_between:
# description: For institutional claims, should be some distinct count of different revenue codes
              tags: ['tuva_dqi_sev_4', 'dqi', 'dqi_financial_pmpm']
              min_value: 5
              max_value: 1000
              group_by: [data_source]
              row_condition: "claim_type = 'institutional'"
              strictly: false
              config:
                severity: warn
                enabled: "{{ ((target.type != 'fabric') and var('enable_input_layer_testing', true)) | as_bool }}"
                meta:
                  dqi_test_description: "For institutional claims, should be some
                    distinct count of different revenue codes"
          - dbt_expectations.expect_column_to_exist:
              tags: ['tuva_dqi_sev_1', 'dqi', 'dqi_financial_pmpm']
              config:
                severity: warn
                enabled: "{{ ((target.type != 'fabric') and var('enable_input_layer_testing', true)) | as_bool }}"
          - dbt_expectations.expect_column_value_lengths_to_be_between:
              min_value: 3
              max_value: 4
              tags: ['tuva_dqi_sev_2', 'dqi', 'dqi_financial_pmpm']
              config:
                severity: warn
                enabled: "{{ ((target.type != 'fabric') and var('enable_input_layer_testing', true)) | as_bool }}"
          - dbt_expectations.expect_column_values_to_match_regex:
              regex: "^(\\\\d{3}|0\\\\d{3})$"
              tags: ['tuva_dqi_sev_2', 'dqi', 'dqi_financial_pmpm']
              config:
                severity: warn
                enabled: "{{ ((target.type != 'fabric') and var('enable_input_layer_testing', true)) | as_bool }}"
      - name: service_unit_quantity
        description: '{{ doc("service_unit_quantity") }}'
        tests:
          - dbt_expectations.expect_column_to_exist:
              tags: ['tuva_dqi_sev_1', 'dqi']
              config:
                severity: warn
                enabled: "{{ ((target.type != 'fabric') and var('enable_input_layer_testing', true)) | as_bool }}"
      - name: hcpcs_code
        description: '{{ doc("hcpcs_code") }}'
        tests:
          - dbt_expectations.expect_column_to_exist:
              tags: ['tuva_dqi_sev_1', 'dqi', 'dqi_cms_chronic_conditions', 'dqi_financial_pmpm',
                'dqi_quality_measures']
              config:
                severity: warn
                enabled: "{{ ((target.type != 'fabric') and var('enable_input_layer_testing', true)) | as_bool }}"
          - not_null:
# description: Procedure code should not be null on professional claims.
              tags: ['tuva_dqi_sev_2', 'dqi', 'dqi_cms_chronic_conditions', 'dqi_financial_pmpm',
                'dqi_quality_measures']
              config:
                severity: warn
                enabled: "{{ var('enable_input_layer_testing', true) | as_bool }}"
                where: claim_type = 'professional'
                meta:
                  dqi_test_description: "Procedure code should not be null on professional
                    claims. "
      - name: hcpcs_modifier_1
        description: '{{ doc("hcpcs_modifier_1") }}'
        tests:
          - dbt_expectations.expect_column_to_exist:
              tags: ['tuva_dqi_sev_1', 'dqi', 'dqi_quality_measures']
              config:
                severity: warn
                enabled: "{{ ((target.type != 'fabric') and var('enable_input_layer_testing', true)) | as_bool }}"
      - name: hcpcs_modifier_2
        description: '{{ doc("hcpcs_modifier_2") }}'
        tests:
          - dbt_expectations.expect_column_to_exist:
              tags: ['tuva_dqi_sev_1', 'dqi', 'dqi_quality_measures']
              config:
                severity: warn
                enabled: "{{ ((target.type != 'fabric') and var('enable_input_layer_testing', true)) | as_bool }}"
      - name: hcpcs_modifier_3
        description: '{{ doc("hcpcs_modifier_3") }}'
        tests:
          - dbt_expectations.expect_column_to_exist:
              tags: ['tuva_dqi_sev_1', 'dqi', 'dqi_quality_measures']
              config:
                severity: warn
                enabled: "{{ ((target.type != 'fabric') and var('enable_input_layer_testing', true)) | as_bool }}"
      - name: hcpcs_modifier_4
        description: '{{ doc("hcpcs_modifier_4") }}'
        tests:
          - dbt_expectations.expect_column_to_exist:
              tags: ['tuva_dqi_sev_1', 'dqi', 'dqi_quality_measures']
              config:
                severity: warn
                enabled: "{{ ((target.type != 'fabric') and var('enable_input_layer_testing', true)) | as_bool }}"
      - name: hcpcs_modifier_5
        description: '{{ doc("hcpcs_modifier_5") }}'
        tests:
          - dbt_expectations.expect_column_to_exist:
              tags: ['tuva_dqi_sev_1', 'dqi', 'dqi_quality_measures']
              config:
                severity: warn
                enabled: "{{ ((target.type != 'fabric') and var('enable_input_layer_testing', true)) | as_bool }}"
      - name: rendering_npi
        description: >
          Rendering NPI for the claim (typically represents the physician or  entity
          providing services).
        tests:
          - dbt_expectations.expect_column_to_exist:
              tags: ['tuva_dqi_sev_1', 'dqi']
              config:
                severity: warn
                enabled: "{{ ((target.type != 'fabric') and var('enable_input_layer_testing', true)) | as_bool }}"
          - dbt_expectations.expect_column_value_lengths_to_equal:
              tags: ['tuva_dqi_sev_2', 'dqi']
              value: 10
              config:
                severity: warn
                enabled: "{{ ((target.type != 'fabric') and var('enable_input_layer_testing', true)) | as_bool }}"
          - dbt_expectations.expect_column_values_to_match_regex:
              regex: "^[0-9]{10}$"
              config:
                severity: warn
                enabled: "{{ ((target.type != 'fabric') and var('enable_input_layer_testing', true)) | as_bool }}"
      - name: rendering_tin
        description: '{{ doc("rendering_tin") }}'
        tests:
          - dbt_expectations.expect_column_to_exist:
              tags: ['tuva_dqi_sev_1', 'dqi']
              config:
                severity: warn
                enabled: "{{ ((target.type != 'fabric') and var('enable_input_layer_testing', true)) | as_bool }}"
      - name: billing_npi
        description: >
          Billing NPI for the claim (typically represents organization billing  the
          claim).
        tests:
          - dbt_expectations.expect_column_to_exist:
              tags: ['tuva_dqi_sev_1', 'dqi']
              config:
                severity: warn
                enabled: "{{ ((target.type != 'fabric') and var('enable_input_layer_testing', true)) | as_bool }}"
          - dbt_expectations.expect_column_value_lengths_to_equal:
              tags: ['tuva_dqi_sev_2', 'dqi']
              value: 10
              config:
                severity: warn
                enabled: "{{ ((target.type != 'fabric') and var('enable_input_layer_testing', true)) | as_bool }}"
          - dbt_expectations.expect_column_values_to_match_regex:
              regex: "^[0-9]{10}$"
              config:
                severity: warn
                enabled: "{{ ((target.type != 'fabric') and var('enable_input_layer_testing', true)) | as_bool }}"
      - name: billing_tin
        description: '{{ doc("billing_tin") }}'
        tests:
          - dbt_expectations.expect_column_to_exist:
              tags: ['tuva_dqi_sev_1', 'dqi']
              config:
                severity: warn
                enabled: "{{ ((target.type != 'fabric') and var('enable_input_layer_testing', true)) | as_bool }}"
      - name: facility_npi
        description: >
          Facility NPI for the claim (typically represents the facility where  services
          were performed).
        tests:
          - dbt_expectations.expect_column_to_exist:
              tags: ['tuva_dqi_sev_3', 'dqi', 'dqi_readmission']
              config:
                severity: warn
                enabled: "{{ ((target.type != 'fabric') and var('enable_input_layer_testing', true)) | as_bool }}"
          - dbt_expectations.expect_column_value_lengths_to_equal:
              tags: ['tuva_dqi_sev_3', 'dqi', 'dqi_readmission']
              value: 10
              config:
                severity: warn
                enabled: "{{ ((target.type != 'fabric') and var('enable_input_layer_testing', true)) | as_bool }}"
          - dbt_expectations.expect_column_values_to_match_regex:
              regex: "^[0-9]{10}$"
              config:
                severity: warn
                enabled: "{{ ((target.type != 'fabric') and var('enable_input_layer_testing', true)) | as_bool }}"
      - name: paid_date
        description: '{{ doc("paid_date") }}'
        tests:
          - dbt_expectations.expect_column_to_exist:
              tags: ['tuva_dqi_sev_1', 'dqi']
              config:
                severity: warn
                enabled: "{{ ((target.type != 'fabric') and var('enable_input_layer_testing', true)) | as_bool }}"
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: date
              tags: ['tuva_dqi_sev_2', 'dqi']
              config:
                severity: warn
                enabled: "{{ ((target.type != 'fabric') and var('enable_input_layer_testing', true)) | as_bool }}"
      - name: paid_amount
        description: '{{ doc("paid_amount") }}'
        tests:
          - dbt_expectations.expect_column_to_exist:
              tags: ['tuva_dqi_sev_1', 'dqi', 'dqi_ed_classification', 'dqi_financial_pmpm']
              config:
                severity: warn
                enabled: "{{ ((target.type != 'fabric') and var('enable_input_layer_testing', true)) | as_bool }}"
          - dbt_expectations.expect_column_values_to_be_in_type_list:
              column_type_list: [date, datetime, number, decimal, numeric, float,
                float4, float8, double, double precision, real, float64, bignumeric]
              tags: ['tuva_dqi_sev_2', 'dqi', 'dqi_ed_classification', 'dqi_financial_pmpm']
              config:
                severity: warn
                enabled: "{{ ((target.type != 'fabric') and var('enable_input_layer_testing', true)) | as_bool }}"
      - name: allowed_amount
        description: '{{ doc("allowed_amount") }}'
        tests:
          - dbt_expectations.expect_column_to_exist:
              tags: ['tuva_dqi_sev_1', 'dqi', 'dqi_ed_classification', 'dqi_financial_pmpm']
              config:
                severity: warn
                enabled: "{{ ((target.type != 'fabric') and var('enable_input_layer_testing', true)) | as_bool }}"
          - dbt_expectations.expect_column_values_to_be_in_type_list:
              column_type_list: [date, datetime, number, decimal, numeric, float,
                float4, float8, double, double precision, real, float64, bignumeric]
              tags: ['tuva_dqi_sev_2', 'dqi', 'dqi_ed_classification', 'dqi_financial_pmpm']
              config:
                severity: warn
                enabled: "{{ ((target.type != 'fabric') and var('enable_input_layer_testing', true)) | as_bool }}"
      - name: charge_amount
        description: '{{ doc("charge_amount") }}'
        tests:
          - dbt_expectations.expect_column_to_exist:
              tags: ['tuva_dqi_sev_1', 'dqi', 'dqi_ed_classification']
              config:
                severity: warn
                enabled: "{{ ((target.type != 'fabric') and var('enable_input_layer_testing', true)) | as_bool }}"
          - dbt_expectations.expect_column_values_to_be_in_type_list:
              column_type_list: [date, datetime, number, decimal, numeric, float,
                float4, float8, double, double precision, real, float64, bignumeric]
              tags: ['tuva_dqi_sev_2', 'dqi', 'dqi_ed_classification']
              config:
                severity: warn
                enabled: "{{ ((target.type != 'fabric') and var('enable_input_layer_testing', true)) | as_bool }}"
      - name: coinsurance_amount
        description: '{{ doc("coinsurance_amount") }}'
        tests:
          - dbt_expectations.expect_column_to_exist:
              tags: ['tuva_dqi_sev_1', 'dqi']
              config:
                severity: warn
                enabled: "{{ ((target.type != 'fabric') and var('enable_input_layer_testing', true)) | as_bool }}"
          - dbt_expectations.expect_column_values_to_be_in_type_list:
              column_type_list: [date, datetime, number, decimal, numeric, float,
                float4, float8, double, double precision, real, float64, bignumeric]
              tags: ['tuva_dqi_sev_2', 'dqi']
              config:
                severity: warn
                enabled: "{{ ((target.type != 'fabric') and var('enable_input_layer_testing', true)) | as_bool }}"
      - name: copayment_amount
        description: '{{ doc("copayment_amount") }}'
        tests:
          - dbt_expectations.expect_column_to_exist:
              tags: ['tuva_dqi_sev_1', 'dqi']
              config:
                severity: warn
                enabled: "{{ ((target.type != 'fabric') and var('enable_input_layer_testing', true)) | as_bool }}"
          - dbt_expectations.expect_column_values_to_be_in_type_list:
              column_type_list: [date, datetime, number, decimal, numeric, float,
                float4, float8, double, double precision, real, float64, bignumeric]
              tags: ['tuva_dqi_sev_2', 'dqi']
              config:
                severity: warn
                enabled: "{{ ((target.type != 'fabric') and var('enable_input_layer_testing', true)) | as_bool }}"
      - name: deductible_amount
        description: '{{ doc("deductible_amount") }}'
        tests:
          - dbt_expectations.expect_column_to_exist:
              tags: ['tuva_dqi_sev_1', 'dqi']
              config:
                severity: warn
                enabled: "{{ ((target.type != 'fabric') and var('enable_input_layer_testing', true)) | as_bool }}"
          - dbt_expectations.expect_column_values_to_be_in_type_list:
              column_type_list: [date, datetime, number, decimal, numeric, float,
                float4, float8, double, double precision, real, float64, bignumeric]
              tags: ['tuva_dqi_sev_2', 'dqi']
              config:
                severity: warn
                enabled: "{{ ((target.type != 'fabric') and var('enable_input_layer_testing', true)) | as_bool }}"
      - name: total_cost_amount
        description: '{{ doc("total_cost_amount") }}'
        tests:
          - dbt_expectations.expect_column_to_exist:
              tags: ['tuva_dqi_sev_1', 'dqi']
              config:
                severity: warn
                enabled: "{{ ((target.type != 'fabric') and var('enable_input_layer_testing', true)) | as_bool }}"
          - dbt_expectations.expect_column_values_to_be_in_type_list:
              column_type_list: [date, datetime, number, decimal, numeric, float,
                float4, float8, double, double precision, real, float64, bignumeric]
              tags: ['tuva_dqi_sev_2', 'dqi']
              config:
                severity: warn
                enabled: "{{ ((target.type != 'fabric') and var('enable_input_layer_testing', true)) | as_bool }}"
      - name: diagnosis_code_type
        description: '{{ doc("diagnosis_code_type") }}'
        tests:
          - dbt_expectations.expect_column_to_exist:
              tags: ['tuva_dqi_sev_1', 'dqi', 'dqi_ccsr', 'dqi_tuva_chronic_conditions',
                'dqi_cms_hccs', 'dqi_ed_classification', 'dqi_readmission']
              config:
                severity: warn
                enabled: "{{ ((target.type != 'fabric') and var('enable_input_layer_testing', true)) | as_bool }}"
          - accepted_values:
              values: ['icd-10-cm', 'icd-9-cm']
              tags: ['tuva_dqi_sev_2', 'dqi', 'dqi_ccsr', 'dqi_tuva_chronic_conditions',
                'dqi_cms_hccs', 'dqi_ed_classification', 'dqi_readmission']
              config:
                severity: warn
                enabled: "{{ var('enable_input_layer_testing', true) | as_bool }}"
      - name: diagnosis_code_1
        description: 1st ICD (9 or 10) CM diagnosis code on the claim.
        tests:
          - dbt_expectations.expect_column_to_exist:
              tags: ['tuva_dqi_sev_1', 'dqi', 'dqi_ccsr', 'dqi_tuva_chronic_conditions',
                'dqi_cms_hccs', 'dqi_ed_classification', 'dqi_readmission']
              config:
                severity: warn
                enabled: "{{ ((target.type != 'fabric') and var('enable_input_layer_testing', true)) | as_bool }}"
          - dbt_expectations.expect_column_values_to_match_regex_list:
              tags: ['tuva_dqi_sev_2', 'dqi', 'dqi_ccsr', 'dqi_tuva_chronic_conditions',
                'dqi_cms_hccs', 'dqi_ed_classification', 'dqi_readmission']
              regex_list: ["^[A-TV-Z][0-9A-Z]{2,7}$", "^[A-TV-Z][0-9]{1,2}[.][0-9A-Z]{1,7}$",
                "^[0-9]{3}([.][0-9]{1,2})?$", "^[0-9]{3,5}$", "^[VE][0-9]{3}([.][0-9]{1})?$",
                "^[VE][0-9]{2,4}$"                    # ICD-9 V/E codes without period
]
              match_on: any
              row_condition: "diagnosis_code_1 is not null"
              config:
                severity: warn
                enabled: "{{ ((target.type != 'fabric') and var('enable_input_layer_testing', true)) | as_bool }}"
      - name: diagnosis_code_2
        description: 2nd ICD (9 or 10) CM diagnosis code on the claim.
        tests:
          - dbt_expectations.expect_column_to_exist:
              tags: ['tuva_dqi_sev_1', 'dqi', 'dqi_ccsr', 'dqi_tuva_chronic_conditions',
                'dqi_cms_hccs']
              config:
                severity: warn
                enabled: "{{ ((target.type != 'fabric') and var('enable_input_layer_testing', true)) | as_bool }}"
          - dbt_expectations.expect_column_values_to_match_regex_list:
              tags: ['tuva_dqi_sev_2', 'dqi', 'dqi_ccsr', 'dqi_tuva_chronic_conditions',
                'dqi_cms_hccs']
              regex_list: ["^[A-TV-Z][0-9A-Z]{2,7}$", "^[A-TV-Z][0-9]{1,2}[.][0-9A-Z]{1,7}$",
                "^[0-9]{3}([.][0-9]{1,2})?$", "^[0-9]{3,5}$", "^[VE][0-9]{3}([.][0-9]{1})?$",
                "^[VE][0-9]{2,4}$"                    # ICD-9 V/E codes without period
]
              match_on: any
              row_condition: "diagnosis_code_1 is not null"
              config:
                severity: warn
                enabled: "{{ ((target.type != 'fabric') and var('enable_input_layer_testing', true)) | as_bool }}"
      - name: diagnosis_code_3
        description: 3rd ICD (9 or 10) CM diagnosis code on the claim.
        tests:
          - dbt_expectations.expect_column_to_exist:
              tags: ['tuva_dqi_sev_1', 'dqi', 'dqi_ccsr', 'dqi_tuva_chronic_conditions',
                'dqi_cms_hccs']
              config:
                severity: warn
                enabled: "{{ ((target.type != 'fabric') and var('enable_input_layer_testing', true)) | as_bool }}"
          - dbt_expectations.expect_column_values_to_match_regex_list:
              tags: ['tuva_dqi_sev_2', 'dqi', 'dqi_ccsr', 'dqi_tuva_chronic_conditions',
                'dqi_cms_hccs']
              regex_list: ["^[A-TV-Z][0-9A-Z]{2,7}$", "^[A-TV-Z][0-9]{1,2}[.][0-9A-Z]{1,7}$",
                "^[0-9]{3}([.][0-9]{1,2})?$", "^[0-9]{3,5}$", "^[VE][0-9]{3}([.][0-9]{1})?$",
                "^[VE][0-9]{2,4}$"                    # ICD-9 V/E codes without period
]
              match_on: any
              row_condition: "diagnosis_code_1 is not null"
              config:
                severity: warn
                enabled: "{{ ((target.type != 'fabric') and var('enable_input_layer_testing', true)) | as_bool }}"
      - name: diagnosis_code_4
        description: 4th ICD (9 or 10) CM diagnosis code on the claim.
        tests:
          - dbt_expectations.expect_column_to_exist:
              tags: ['tuva_dqi_sev_1', 'dqi', 'dqi_ccsr', 'dqi_tuva_chronic_conditions',
                'dqi_cms_hccs']
              config:
                severity: warn
                enabled: "{{ ((target.type != 'fabric') and var('enable_input_layer_testing', true)) | as_bool }}"
          - dbt_expectations.expect_column_values_to_match_regex_list:
              tags: ['tuva_dqi_sev_2', 'dqi', 'dqi_ccsr', 'dqi_tuva_chronic_conditions',
                'dqi_cms_hccs']
              regex_list: ["^[A-TV-Z][0-9A-Z]{2,7}$", "^[A-TV-Z][0-9]{1,2}[.][0-9A-Z]{1,7}$",
                "^[0-9]{3}([.][0-9]{1,2})?$", "^[0-9]{3,5}$", "^[VE][0-9]{3}([.][0-9]{1})?$",
                "^[VE][0-9]{2,4}$"                    # ICD-9 V/E codes without period
]
              match_on: any
              row_condition: "diagnosis_code_1 is not null"
              config:
                severity: warn
                enabled: "{{ ((target.type != 'fabric') and var('enable_input_layer_testing', true)) | as_bool }}"
      - name: diagnosis_code_5
        description: 5th ICD (9 or 10) CM diagnosis code on the claim.
        tests:
          - dbt_expectations.expect_column_to_exist:
              tags: ['tuva_dqi_sev_1', 'dqi', 'dqi_ccsr', 'dqi_tuva_chronic_conditions',
                'dqi_cms_hccs']
              config:
                severity: warn
                enabled: "{{ ((target.type != 'fabric') and var('enable_input_layer_testing', true)) | as_bool }}"
          - dbt_expectations.expect_column_values_to_match_regex_list:
              tags: ['tuva_dqi_sev_2', 'dqi', 'dqi_ccsr', 'dqi_tuva_chronic_conditions',
                'dqi_cms_hccs']
              regex_list: ["^[A-TV-Z][0-9A-Z]{2,7}$", "^[A-TV-Z][0-9]{1,2}[.][0-9A-Z]{1,7}$",
                "^[0-9]{3}([.][0-9]{1,2})?$", "^[0-9]{3,5}$", "^[VE][0-9]{3}([.][0-9]{1})?$",
                "^[VE][0-9]{2,4}$"                    # ICD-9 V/E codes without period
]
              match_on: any
              row_condition: "diagnosis_code_1 is not null"
              config:
                severity: warn
                enabled: "{{ ((target.type != 'fabric') and var('enable_input_layer_testing', true)) | as_bool }}"
      - name: diagnosis_code_6
        description: 6th ICD (9 or 10) CM diagnosis code on the claim.
        tests:
          - dbt_expectations.expect_column_to_exist:
              tags: ['tuva_dqi_sev_1', 'dqi', 'dqi_ccsr', 'dqi_tuva_chronic_conditions',
                'dqi_cms_hccs']
              config:
                severity: warn
                enabled: "{{ ((target.type != 'fabric') and var('enable_input_layer_testing', true)) | as_bool }}"
          - dbt_expectations.expect_column_values_to_match_regex_list:
              tags: ['tuva_dqi_sev_2', 'dqi', 'dqi_ccsr', 'dqi_tuva_chronic_conditions',
                'dqi_cms_hccs']
              regex_list: ["^[A-TV-Z][0-9A-Z]{2,7}$", "^[A-TV-Z][0-9]{1,2}[.][0-9A-Z]{1,7}$",
                "^[0-9]{3}([.][0-9]{1,2})?$", "^[0-9]{3,5}$", "^[VE][0-9]{3}([.][0-9]{1})?$",
                "^[VE][0-9]{2,4}$"                    # ICD-9 V/E codes without period
]
              match_on: any
              row_condition: "diagnosis_code_1 is not null"
              config:
                severity: warn
                enabled: "{{ ((target.type != 'fabric') and var('enable_input_layer_testing', true)) | as_bool }}"
      - name: diagnosis_code_7
        description: 7th ICD (9 or 10) CM diagnosis code on the claim.
        tests:
          - dbt_expectations.expect_column_to_exist:
              tags: ['tuva_dqi_sev_1', 'dqi', 'dqi_ccsr', 'dqi_tuva_chronic_conditions',
                'dqi_cms_hccs']
              config:
                severity: warn
                enabled: "{{ ((target.type != 'fabric') and var('enable_input_layer_testing', true)) | as_bool }}"
          - dbt_expectations.expect_column_values_to_match_regex_list:
              tags: ['tuva_dqi_sev_2', 'dqi', 'dqi_ccsr', 'dqi_tuva_chronic_conditions',
                'dqi_cms_hccs']
              regex_list: ["^[A-TV-Z][0-9A-Z]{2,7}$", "^[A-TV-Z][0-9]{1,2}[.][0-9A-Z]{1,7}$",
                "^[0-9]{3}([.][0-9]{1,2})?$", "^[0-9]{3,5}$", "^[VE][0-9]{3}([.][0-9]{1})?$",
                "^[VE][0-9]{2,4}$"                    # ICD-9 V/E codes without period
]
              match_on: any
              row_condition: "diagnosis_code_1 is not null"
              config:
                severity: warn
                enabled: "{{ ((target.type != 'fabric') and var('enable_input_layer_testing', true)) | as_bool }}"
      - name: diagnosis_code_8
        description: 8th ICD (9 or 10) CM diagnosis code on the claim.
        tests:
          - dbt_expectations.expect_column_to_exist:
              tags: ['tuva_dqi_sev_1', 'dqi', 'dqi_ccsr', 'dqi_tuva_chronic_conditions',
                'dqi_cms_hccs']
              config:
                severity: warn
                enabled: "{{ ((target.type != 'fabric') and var('enable_input_layer_testing', true)) | as_bool }}"
          - dbt_expectations.expect_column_values_to_match_regex_list:
              tags: ['tuva_dqi_sev_2', 'dqi', 'dqi_ccsr', 'dqi_tuva_chronic_conditions',
                'dqi_cms_hccs']
              regex_list: ["^[A-TV-Z][0-9A-Z]{2,7}$", "^[A-TV-Z][0-9]{1,2}[.][0-9A-Z]{1,7}$",
                "^[0-9]{3}([.][0-9]{1,2})?$", "^[0-9]{3,5}$", "^[VE][0-9]{3}([.][0-9]{1})?$",
                "^[VE][0-9]{2,4}$"                    # ICD-9 V/E codes without period
]
              match_on: any
              row_condition: "diagnosis_code_1 is not null"
              config:
                severity: warn
                enabled: "{{ ((target.type != 'fabric') and var('enable_input_layer_testing', true)) | as_bool }}"
      - name: diagnosis_code_9
        description: 9th ICD (9 or 10) CM diagnosis code on the claim.
        tests:
          - dbt_expectations.expect_column_to_exist:
              tags: ['tuva_dqi_sev_1', 'dqi', 'dqi_ccsr', 'dqi_tuva_chronic_conditions',
                'dqi_cms_hccs']
              config:
                severity: warn
                enabled: "{{ ((target.type != 'fabric') and var('enable_input_layer_testing', true)) | as_bool }}"
          - dbt_expectations.expect_column_values_to_match_regex_list:
              tags: ['tuva_dqi_sev_2', 'dqi', 'dqi_ccsr', 'dqi_tuva_chronic_conditions',
                'dqi_cms_hccs']
              regex_list: ["^[A-TV-Z][0-9A-Z]{2,7}$", "^[A-TV-Z][0-9]{1,2}[.][0-9A-Z]{1,7}$",
                "^[0-9]{3}([.][0-9]{1,2})?$", "^[0-9]{3,5}$", "^[VE][0-9]{3}([.][0-9]{1})?$",
                "^[VE][0-9]{2,4}$"                    # ICD-9 V/E codes without period
]
              match_on: any
              row_condition: "diagnosis_code_1 is not null"
              config:
                severity: warn
                enabled: "{{ ((target.type != 'fabric') and var('enable_input_layer_testing', true)) | as_bool }}"
      - name: diagnosis_code_10
        description: 10th ICD (9 or 10) CM diagnosis code on the claim.
        tests:
          - dbt_expectations.expect_column_to_exist:
              tags: ['tuva_dqi_sev_1', 'dqi', 'dqi_ccsr', 'dqi_tuva_chronic_conditions',
                'dqi_cms_hccs']
              config:
                severity: warn
                enabled: "{{ ((target.type != 'fabric') and var('enable_input_layer_testing', true)) | as_bool }}"
          - dbt_expectations.expect_column_values_to_match_regex_list:
              tags: ['tuva_dqi_sev_2', 'dqi', 'dqi_ccsr', 'dqi_tuva_chronic_conditions',
                'dqi_cms_hccs']
              regex_list: ["^[A-TV-Z][0-9A-Z]{2,7}$", "^[A-TV-Z][0-9]{1,2}[.][0-9A-Z]{1,7}$",
                "^[0-9]{3}([.][0-9]{1,2})?$", "^[0-9]{3,5}$", "^[VE][0-9]{3}([.][0-9]{1})?$",
                "^[VE][0-9]{2,4}$"                    # ICD-9 V/E codes without period
]
              match_on: any
              row_condition: "diagnosis_code_1 is not null"
              config:
                severity: warn
                enabled: "{{ ((target.type != 'fabric') and var('enable_input_layer_testing', true)) | as_bool }}"
      - name: diagnosis_code_11
        description: 11th ICD (9 or 10) CM diagnosis code on the claim.
        tests:
          - dbt_expectations.expect_column_to_exist:
              tags: ['tuva_dqi_sev_1', 'dqi', 'dqi_ccsr', 'dqi_tuva_chronic_conditions',
                'dqi_cms_hccs']
              config:
                severity: warn
                enabled: "{{ ((target.type != 'fabric') and var('enable_input_layer_testing', true)) | as_bool }}"
          - dbt_expectations.expect_column_values_to_match_regex_list:
              tags: ['tuva_dqi_sev_2', 'dqi', 'dqi_ccsr', 'dqi_tuva_chronic_conditions',
                'dqi_cms_hccs']
              regex_list: ["^[A-TV-Z][0-9A-Z]{2,7}$", "^[A-TV-Z][0-9]{1,2}[.][0-9A-Z]{1,7}$",
                "^[0-9]{3}([.][0-9]{1,2})?$", "^[0-9]{3,5}$", "^[VE][0-9]{3}([.][0-9]{1})?$",
                "^[VE][0-9]{2,4}$"                    # ICD-9 V/E codes without period
]
              match_on: any
              row_condition: "diagnosis_code_1 is not null"
              config:
                severity: warn
                enabled: "{{ ((target.type != 'fabric') and var('enable_input_layer_testing', true)) | as_bool }}"
      - name: diagnosis_code_12
        description: 12th ICD (9 or 10) CM diagnosis code on the claim.
        tests:
          - dbt_expectations.expect_column_to_exist:
              tags: ['tuva_dqi_sev_1', 'dqi', 'dqi_ccsr', 'dqi_tuva_chronic_conditions',
                'dqi_cms_hccs']
              config:
                severity: warn
                enabled: "{{ ((target.type != 'fabric') and var('enable_input_layer_testing', true)) | as_bool }}"
          - dbt_expectations.expect_column_values_to_match_regex_list:
              tags: ['tuva_dqi_sev_2', 'dqi', 'dqi_ccsr', 'dqi_tuva_chronic_conditions',
                'dqi_cms_hccs']
              regex_list: ["^[A-TV-Z][0-9A-Z]{2,7}$", "^[A-TV-Z][0-9]{1,2}[.][0-9A-Z]{1,7}$",
                "^[0-9]{3}([.][0-9]{1,2})?$", "^[0-9]{3,5}$", "^[VE][0-9]{3}([.][0-9]{1})?$",
                "^[VE][0-9]{2,4}$"                    # ICD-9 V/E codes without period
]
              match_on: any
              row_condition: "diagnosis_code_1 is not null"
              config:
                severity: warn
                enabled: "{{ ((target.type != 'fabric') and var('enable_input_layer_testing', true)) | as_bool }}"
      - name: diagnosis_code_13
        description: 13th ICD (9 or 10) CM diagnosis code on the claim.
        tests:
          - dbt_expectations.expect_column_to_exist:
              tags: ['tuva_dqi_sev_1', 'dqi', 'dqi_ccsr', 'dqi_tuva_chronic_conditions',
                'dqi_cms_hccs']
              config:
                severity: warn
                enabled: "{{ ((target.type != 'fabric') and var('enable_input_layer_testing', true)) | as_bool }}"
          - dbt_expectations.expect_column_values_to_match_regex_list:
              tags: ['tuva_dqi_sev_2', 'dqi', 'dqi_ccsr', 'dqi_tuva_chronic_conditions',
                'dqi_cms_hccs']
              regex_list: ["^[A-TV-Z][0-9A-Z]{2,7}$", "^[A-TV-Z][0-9]{1,2}[.][0-9A-Z]{1,7}$",
                "^[0-9]{3}([.][0-9]{1,2})?$", "^[0-9]{3,5}$", "^[VE][0-9]{3}([.][0-9]{1})?$",
                "^[VE][0-9]{2,4}$"                    # ICD-9 V/E codes without period
]
              match_on: any
              row_condition: "diagnosis_code_1 is not null"
              config:
                severity: warn
                enabled: "{{ ((target.type != 'fabric') and var('enable_input_layer_testing', true)) | as_bool }}"
      - name: diagnosis_code_14
        description: 14th ICD (9 or 10) CM diagnosis code on the claim.
        tests:
          - dbt_expectations.expect_column_to_exist:
              tags: ['tuva_dqi_sev_1', 'dqi', 'dqi_ccsr', 'dqi_tuva_chronic_conditions',
                'dqi_cms_hccs']
              config:
                severity: warn
                enabled: "{{ ((target.type != 'fabric') and var('enable_input_layer_testing', true)) | as_bool }}"
          - dbt_expectations.expect_column_values_to_match_regex_list:
              tags: ['tuva_dqi_sev_2', 'dqi', 'dqi_ccsr', 'dqi_tuva_chronic_conditions',
                'dqi_cms_hccs']
              regex_list: ["^[A-TV-Z][0-9A-Z]{2,7}$", "^[A-TV-Z][0-9]{1,2}[.][0-9A-Z]{1,7}$",
                "^[0-9]{3}([.][0-9]{1,2})?$", "^[0-9]{3,5}$", "^[VE][0-9]{3}([.][0-9]{1})?$",
                "^[VE][0-9]{2,4}$"                    # ICD-9 V/E codes without period
]
              match_on: any
              row_condition: "diagnosis_code_1 is not null"
              config:
                severity: warn
                enabled: "{{ ((target.type != 'fabric') and var('enable_input_layer_testing', true)) | as_bool }}"
      - name: diagnosis_code_15
        description: 15th ICD (9 or 10) CM diagnosis code on the claim.
        tests:
          - dbt_expectations.expect_column_to_exist:
              tags: ['tuva_dqi_sev_1', 'dqi', 'dqi_ccsr', 'dqi_tuva_chronic_conditions',
                'dqi_cms_hccs']
              config:
                severity: warn
                enabled: "{{ ((target.type != 'fabric') and var('enable_input_layer_testing', true)) | as_bool }}"
          - dbt_expectations.expect_column_values_to_match_regex_list:
              tags: ['tuva_dqi_sev_2', 'dqi', 'dqi_ccsr', 'dqi_tuva_chronic_conditions',
                'dqi_cms_hccs']
              regex_list: ["^[A-TV-Z][0-9A-Z]{2,7}$", "^[A-TV-Z][0-9]{1,2}[.][0-9A-Z]{1,7}$",
                "^[0-9]{3}([.][0-9]{1,2})?$", "^[0-9]{3,5}$", "^[VE][0-9]{3}([.][0-9]{1})?$",
                "^[VE][0-9]{2,4}$"                    # ICD-9 V/E codes without period
]
              match_on: any
              row_condition: "diagnosis_code_1 is not null"
              config:
                severity: warn
                enabled: "{{ ((target.type != 'fabric') and var('enable_input_layer_testing', true)) | as_bool }}"
      - name: diagnosis_code_16
        description: 16th ICD (9 or 10) CM diagnosis code on the claim.
        tests:
          - dbt_expectations.expect_column_to_exist:
              tags: ['tuva_dqi_sev_1', 'dqi', 'dqi_ccsr', 'dqi_tuva_chronic_conditions',
                'dqi_cms_hccs']
              config:
                severity: warn
                enabled: "{{ ((target.type != 'fabric') and var('enable_input_layer_testing', true)) | as_bool }}"
          - dbt_expectations.expect_column_values_to_match_regex_list:
              tags: ['tuva_dqi_sev_2', 'dqi', 'dqi_ccsr', 'dqi_tuva_chronic_conditions',
                'dqi_cms_hccs']
              regex_list: ["^[A-TV-Z][0-9A-Z]{2,7}$", "^[A-TV-Z][0-9]{1,2}[.][0-9A-Z]{1,7}$",
                "^[0-9]{3}([.][0-9]{1,2})?$", "^[0-9]{3,5}$", "^[VE][0-9]{3}([.][0-9]{1})?$",
                "^[VE][0-9]{2,4}$"                    # ICD-9 V/E codes without period
]
              match_on: any
              row_condition: "diagnosis_code_1 is not null"
              config:
                severity: warn
                enabled: "{{ ((target.type != 'fabric') and var('enable_input_layer_testing', true)) | as_bool }}"
      - name: diagnosis_code_17
        description: 17th ICD (9 or 10) CM diagnosis code on the claim.
        tests:
          - dbt_expectations.expect_column_to_exist:
              tags: ['tuva_dqi_sev_1', 'dqi', 'dqi_ccsr', 'dqi_tuva_chronic_conditions',
                'dqi_cms_hccs']
              config:
                severity: warn
                enabled: "{{ ((target.type != 'fabric') and var('enable_input_layer_testing', true)) | as_bool }}"
          - dbt_expectations.expect_column_values_to_match_regex_list:
              tags: ['tuva_dqi_sev_2', 'dqi', 'dqi_ccsr', 'dqi_tuva_chronic_conditions',
                'dqi_cms_hccs']
              regex_list: ["^[A-TV-Z][0-9A-Z]{2,7}$", "^[A-TV-Z][0-9]{1,2}[.][0-9A-Z]{1,7}$",
                "^[0-9]{3}([.][0-9]{1,2})?$", "^[0-9]{3,5}$", "^[VE][0-9]{3}([.][0-9]{1})?$",
                "^[VE][0-9]{2,4}$"                    # ICD-9 V/E codes without period
]
              match_on: any
              row_condition: "diagnosis_code_1 is not null"
              config:
                severity: warn
                enabled: "{{ ((target.type != 'fabric') and var('enable_input_layer_testing', true)) | as_bool }}"
      - name: diagnosis_code_18
        description: 18th ICD (9 or 10) CM diagnosis code on the claim.
        tests:
          - dbt_expectations.expect_column_to_exist:
              tags: ['tuva_dqi_sev_1', 'dqi', 'dqi_ccsr', 'dqi_tuva_chronic_conditions',
                'dqi_cms_hccs']
              config:
                severity: warn
                enabled: "{{ ((target.type != 'fabric') and var('enable_input_layer_testing', true)) | as_bool }}"
          - dbt_expectations.expect_column_values_to_match_regex_list:
              tags: ['tuva_dqi_sev_2', 'dqi', 'dqi_ccsr', 'dqi_tuva_chronic_conditions',
                'dqi_cms_hccs']
              regex_list: ["^[A-TV-Z][0-9A-Z]{2,7}$", "^[A-TV-Z][0-9]{1,2}[.][0-9A-Z]{1,7}$",
                "^[0-9]{3}([.][0-9]{1,2})?$", "^[0-9]{3,5}$", "^[VE][0-9]{3}([.][0-9]{1})?$",
                "^[VE][0-9]{2,4}$"                    # ICD-9 V/E codes without period
]
              match_on: any
              row_condition: "diagnosis_code_1 is not null"
              config:
                severity: warn
                enabled: "{{ ((target.type != 'fabric') and var('enable_input_layer_testing', true)) | as_bool }}"
      - name: diagnosis_code_19
        description: 19th ICD (9 or 10) CM diagnosis code on the claim.
        tests:
          - dbt_expectations.expect_column_to_exist:
              tags: ['tuva_dqi_sev_1', 'dqi', 'dqi_ccsr', 'dqi_tuva_chronic_conditions',
                'dqi_cms_hccs']
              config:
                severity: warn
                enabled: "{{ ((target.type != 'fabric') and var('enable_input_layer_testing', true)) | as_bool }}"
          - dbt_expectations.expect_column_values_to_match_regex_list:
              tags: ['tuva_dqi_sev_2', 'dqi', 'dqi_ccsr', 'dqi_tuva_chronic_conditions',
                'dqi_cms_hccs']
              regex_list: ["^[A-TV-Z][0-9A-Z]{2,7}$", "^[A-TV-Z][0-9]{1,2}[.][0-9A-Z]{1,7}$",
                "^[0-9]{3}([.][0-9]{1,2})?$", "^[0-9]{3,5}$", "^[VE][0-9]{3}([.][0-9]{1})?$",
                "^[VE][0-9]{2,4}$"                    # ICD-9 V/E codes without period
]
              match_on: any
              row_condition: "diagnosis_code_1 is not null"
              config:
                severity: warn
                enabled: "{{ ((target.type != 'fabric') and var('enable_input_layer_testing', true)) | as_bool }}"
      - name: diagnosis_code_20
        description: 20th ICD (9 or 10) CM diagnosis code on the claim.
        tests:
          - dbt_expectations.expect_column_to_exist:
              tags: ['tuva_dqi_sev_1', 'dqi', 'dqi_ccsr', 'dqi_tuva_chronic_conditions',
                'dqi_cms_hccs']
              config:
                severity: warn
                enabled: "{{ ((target.type != 'fabric') and var('enable_input_layer_testing', true)) | as_bool }}"
          - dbt_expectations.expect_column_values_to_match_regex_list:
              tags: ['tuva_dqi_sev_2', 'dqi', 'dqi_ccsr', 'dqi_tuva_chronic_conditions',
                'dqi_cms_hccs']
              regex_list: ["^[A-TV-Z][0-9A-Z]{2,7}$", "^[A-TV-Z][0-9]{1,2}[.][0-9A-Z]{1,7}$",
                "^[0-9]{3}([.][0-9]{1,2})?$", "^[0-9]{3,5}$", "^[VE][0-9]{3}([.][0-9]{1})?$",
                "^[VE][0-9]{2,4}$"                    # ICD-9 V/E codes without period
]
              match_on: any
              row_condition: "diagnosis_code_1 is not null"
              config:
                severity: warn
                enabled: "{{ ((target.type != 'fabric') and var('enable_input_layer_testing', true)) | as_bool }}"
      - name: diagnosis_code_21
        description: 21st ICD (9 or 10) CM diagnosis code on the claim.
        tests:
          - dbt_expectations.expect_column_to_exist:
              tags: ['tuva_dqi_sev_1', 'dqi', 'dqi_ccsr', 'dqi_tuva_chronic_conditions',
                'dqi_cms_hccs']
              config:
                severity: warn
                enabled: "{{ ((target.type != 'fabric') and var('enable_input_layer_testing', true)) | as_bool }}"
          - dbt_expectations.expect_column_values_to_match_regex_list:
              tags: ['tuva_dqi_sev_2', 'dqi', 'dqi_ccsr', 'dqi_tuva_chronic_conditions',
                'dqi_cms_hccs']
              regex_list: ["^[A-TV-Z][0-9A-Z]{2,7}$", "^[A-TV-Z][0-9]{1,2}[.][0-9A-Z]{1,7}$",
                "^[0-9]{3}([.][0-9]{1,2})?$", "^[0-9]{3,5}$", "^[VE][0-9]{3}([.][0-9]{1})?$",
                "^[VE][0-9]{2,4}$"                    # ICD-9 V/E codes without period
]
              match_on: any
              row_condition: "diagnosis_code_1 is not null"
              config:
                severity: warn
                enabled: "{{ ((target.type != 'fabric') and var('enable_input_layer_testing', true)) | as_bool }}"
      - name: diagnosis_code_22
        description: 22nd ICD (9 or 10) CM diagnosis code on the claim.
        tests:
          - dbt_expectations.expect_column_to_exist:
              tags: ['tuva_dqi_sev_1', 'dqi', 'dqi_ccsr', 'dqi_tuva_chronic_conditions',
                'dqi_cms_hccs']
              config:
                severity: warn
                enabled: "{{ ((target.type != 'fabric') and var('enable_input_layer_testing', true)) | as_bool }}"
          - dbt_expectations.expect_column_values_to_match_regex_list:
              tags: ['tuva_dqi_sev_2', 'dqi', 'dqi_ccsr', 'dqi_tuva_chronic_conditions',
                'dqi_cms_hccs']
              regex_list: ["^[A-TV-Z][0-9A-Z]{2,7}$", "^[A-TV-Z][0-9]{1,2}[.][0-9A-Z]{1,7}$",
                "^[0-9]{3}([.][0-9]{1,2})?$", "^[0-9]{3,5}$", "^[VE][0-9]{3}([.][0-9]{1})?$",
                "^[VE][0-9]{2,4}$"                    # ICD-9 V/E codes without period
]
              match_on: any
              row_condition: "diagnosis_code_1 is not null"
              config:
                severity: warn
                enabled: "{{ ((target.type != 'fabric') and var('enable_input_layer_testing', true)) | as_bool }}"
      - name: diagnosis_code_23
        description: 23rd ICD (9 or 10) CM diagnosis code on the claim.
        tests:
          - dbt_expectations.expect_column_to_exist:
              tags: ['tuva_dqi_sev_1', 'dqi', 'dqi_ccsr', 'dqi_tuva_chronic_conditions',
                'dqi_cms_hccs']
              config:
                severity: warn
                enabled: "{{ ((target.type != 'fabric') and var('enable_input_layer_testing', true)) | as_bool }}"
          - dbt_expectations.expect_column_values_to_match_regex_list:
              tags: ['tuva_dqi_sev_2', 'dqi', 'dqi_ccsr', 'dqi_tuva_chronic_conditions',
                'dqi_cms_hccs']
              regex_list: ["^[A-TV-Z][0-9A-Z]{2,7}$", "^[A-TV-Z][0-9]{1,2}[.][0-9A-Z]{1,7}$",
                "^[0-9]{3}([.][0-9]{1,2})?$", "^[0-9]{3,5}$", "^[VE][0-9]{3}([.][0-9]{1})?$",
                "^[VE][0-9]{2,4}$"                    # ICD-9 V/E codes without period
]
              match_on: any
              row_condition: "diagnosis_code_1 is not null"
              config:
                severity: warn
                enabled: "{{ ((target.type != 'fabric') and var('enable_input_layer_testing', true)) | as_bool }}"
      - name: diagnosis_code_24
        description: 24th ICD (9 or 10) CM diagnosis code on the claim.
        tests:
          - dbt_expectations.expect_column_to_exist:
              tags: ['tuva_dqi_sev_1', 'dqi', 'dqi_ccsr', 'dqi_tuva_chronic_conditions',
                'dqi_cms_hccs']
              config:
                severity: warn
                enabled: "{{ ((target.type != 'fabric') and var('enable_input_layer_testing', true)) | as_bool }}"
          - dbt_expectations.expect_column_values_to_match_regex_list:
              tags: ['tuva_dqi_sev_2', 'dqi', 'dqi_ccsr', 'dqi_tuva_chronic_conditions',
                'dqi_cms_hccs']
              regex_list: ["^[A-TV-Z][0-9A-Z]{2,7}$", "^[A-TV-Z][0-9]{1,2}[.][0-9A-Z]{1,7}$",
                "^[0-9]{3}([.][0-9]{1,2})?$", "^[0-9]{3,5}$", "^[VE][0-9]{3}([.][0-9]{1})?$",
                "^[VE][0-9]{2,4}$"                    # ICD-9 V/E codes without period
]
              match_on: any
              row_condition: "diagnosis_code_1 is not null"
              config:
                severity: warn
                enabled: "{{ ((target.type != 'fabric') and var('enable_input_layer_testing', true)) | as_bool }}"
      - name: diagnosis_code_25
        description: 25th ICD (9 or 10) CM diagnosis code on the claim.
        tests:
          - dbt_expectations.expect_column_to_exist:
              tags: ['tuva_dqi_sev_1', 'dqi', 'dqi_ccsr', 'dqi_tuva_chronic_conditions',
                'dqi_cms_hccs']
              config:
                severity: warn
                enabled: "{{ ((target.type != 'fabric') and var('enable_input_layer_testing', true)) | as_bool }}"
          - dbt_expectations.expect_column_values_to_match_regex_list:
              tags: ['tuva_dqi_sev_2', 'dqi', 'dqi_ccsr', 'dqi_tuva_chronic_conditions',
                'dqi_cms_hccs']
              regex_list: ["^[A-TV-Z][0-9A-Z]{2,7}$", "^[A-TV-Z][0-9]{1,2}[.][0-9A-Z]{1,7}$",
                "^[0-9]{3}([.][0-9]{1,2})?$", "^[0-9]{3,5}$", "^[VE][0-9]{3}([.][0-9]{1})?$",
                "^[VE][0-9]{2,4}$"                    # ICD-9 V/E codes without period
]
              match_on: any
              row_condition: "diagnosis_code_1 is not null"
              config:
                severity: warn
                enabled: "{{ ((target.type != 'fabric') and var('enable_input_layer_testing', true)) | as_bool }}"
      - name: diagnosis_poa_1
        description: >
          Present on admission code for the 1st diagnosis on the claim.
        tests:
          - dbt_expectations.expect_column_to_exist:
              tags: ['tuva_dqi_sev_1', 'dqi']
              config:
                severity: warn
                enabled: "{{ ((target.type != 'fabric') and var('enable_input_layer_testing', true)) | as_bool }}"
          - relationships:
              to: ref('terminology__present_on_admission')
              field: present_on_admit_code
              tags: ['tuva_dqi_sev_3', 'dqi']
              config:
                severity: warn
                enabled: "{{ ((target.type != 'fabric') and var('enable_input_layer_testing', true)) | as_bool }}"
      - name: diagnosis_poa_2
        description: >
          Present on admission code for the 2nd diagnosis on the claim.
        tests:
          - dbt_expectations.expect_column_to_exist:
              tags: ['tuva_dqi_sev_1', 'dqi']
              config:
                severity: warn
                enabled: "{{ ((target.type != 'fabric') and var('enable_input_layer_testing', true)) | as_bool }}"
          - relationships:
              to: ref('terminology__present_on_admission')
              field: present_on_admit_code
              tags: ['tuva_dqi_sev_3', 'dqi']
              config:
                severity: warn
                enabled: "{{ ((target.type != 'fabric') and var('enable_input_layer_testing', true)) | as_bool }}"
      - name: diagnosis_poa_3
        description: >
          Present on admission code for the 3rd diagnosis on the claim.
        tests:
          - dbt_expectations.expect_column_to_exist:
              tags: ['tuva_dqi_sev_1', 'dqi']
              config:
                severity: warn
                enabled: "{{ ((target.type != 'fabric') and var('enable_input_layer_testing', true)) | as_bool }}"
          - relationships:
              to: ref('terminology__present_on_admission')
              field: present_on_admit_code
              tags: ['tuva_dqi_sev_3', 'dqi']
              config:
                severity: warn
                enabled: "{{ ((target.type != 'fabric') and var('enable_input_layer_testing', true)) | as_bool }}"
      - name: diagnosis_poa_4
        description: >
          Present on admission code for the 4th diagnosis on the claim.
        tests:
          - dbt_expectations.expect_column_to_exist:
              tags: ['tuva_dqi_sev_1', 'dqi']
              config:
                severity: warn
                enabled: "{{ ((target.type != 'fabric') and var('enable_input_layer_testing', true)) | as_bool }}"
          - relationships:
              to: ref('terminology__present_on_admission')
              field: present_on_admit_code
              tags: ['tuva_dqi_sev_3', 'dqi']
              config:
                severity: warn
                enabled: "{{ ((target.type != 'fabric') and var('enable_input_layer_testing', true)) | as_bool }}"
      - name: diagnosis_poa_5
        description: >
          Present on admission code for the 5th diagnosis on the claim.
        tests:
          - dbt_expectations.expect_column_to_exist:
              tags: ['tuva_dqi_sev_1', 'dqi']
              config:
                severity: warn
                enabled: "{{ ((target.type != 'fabric') and var('enable_input_layer_testing', true)) | as_bool }}"
          - relationships:
              to: ref('terminology__present_on_admission')
              field: present_on_admit_code
              tags: ['tuva_dqi_sev_3', 'dqi']
              config:
                severity: warn
                enabled: "{{ ((target.type != 'fabric') and var('enable_input_layer_testing', true)) | as_bool }}"
      - name: diagnosis_poa_6
        description: >
          Present on admission code for the 6th diagnosis on the claim.
        tests:
          - dbt_expectations.expect_column_to_exist:
              tags: ['tuva_dqi_sev_1', 'dqi']
              config:
                severity: warn
                enabled: "{{ ((target.type != 'fabric') and var('enable_input_layer_testing', true)) | as_bool }}"
          - relationships:
              to: ref('terminology__present_on_admission')
              field: present_on_admit_code
              tags: ['tuva_dqi_sev_3', 'dqi']
              config:
                severity: warn
                enabled: "{{ ((target.type != 'fabric') and var('enable_input_layer_testing', true)) | as_bool }}"
      - name: diagnosis_poa_7
        description: >
          Present on admission code for the 7th diagnosis on the claim.
        tests:
          - dbt_expectations.expect_column_to_exist:
              tags: ['tuva_dqi_sev_1', 'dqi']
              config:
                severity: warn
                enabled: "{{ ((target.type != 'fabric') and var('enable_input_layer_testing', true)) | as_bool }}"
          - relationships:
              to: ref('terminology__present_on_admission')
              field: present_on_admit_code
              tags: ['tuva_dqi_sev_3', 'dqi']
              config:
                severity: warn
                enabled: "{{ ((target.type != 'fabric') and var('enable_input_layer_testing', true)) | as_bool }}"
      - name: diagnosis_poa_8
        description: >
          Present on admission code for the 8th diagnosis on the claim.
        tests:
          - dbt_expectations.expect_column_to_exist:
              tags: ['tuva_dqi_sev_1', 'dqi']
              config:
                severity: warn
                enabled: "{{ ((target.type != 'fabric') and var('enable_input_layer_testing', true)) | as_bool }}"
          - relationships:
              to: ref('terminology__present_on_admission')
              field: present_on_admit_code
              tags: ['tuva_dqi_sev_3', 'dqi']
              config:
                severity: warn
                enabled: "{{ ((target.type != 'fabric') and var('enable_input_layer_testing', true)) | as_bool }}"
      - name: diagnosis_poa_9
        description: >
          Present on admission code for the 9th diagnosis on the claim.
        tests:
          - dbt_expectations.expect_column_to_exist:
              tags: ['tuva_dqi_sev_1', 'dqi']
              config:
                severity: warn
                enabled: "{{ ((target.type != 'fabric') and var('enable_input_layer_testing', true)) | as_bool }}"
          - relationships:
              to: ref('terminology__present_on_admission')
              field: present_on_admit_code
              tags: ['tuva_dqi_sev_3', 'dqi']
              config:
                severity: warn
                enabled: "{{ ((target.type != 'fabric') and var('enable_input_layer_testing', true)) | as_bool }}"
      - name: diagnosis_poa_10
        description: >
          Present on admission code for the 10th diagnosis on the claim.
        tests:
          - dbt_expectations.expect_column_to_exist:
              tags: ['tuva_dqi_sev_1', 'dqi']
              config:
                severity: warn
                enabled: "{{ ((target.type != 'fabric') and var('enable_input_layer_testing', true)) | as_bool }}"
          - relationships:
              to: ref('terminology__present_on_admission')
              field: present_on_admit_code
              tags: ['tuva_dqi_sev_3', 'dqi']
              config:
                severity: warn
                enabled: "{{ ((target.type != 'fabric') and var('enable_input_layer_testing', true)) | as_bool }}"
      - name: diagnosis_poa_11
        description: >
          Present on admission code for the 11th diagnosis on the claim.
        tests:
          - dbt_expectations.expect_column_to_exist:
              tags: ['tuva_dqi_sev_1', 'dqi']
              config:
                severity: warn
                enabled: "{{ ((target.type != 'fabric') and var('enable_input_layer_testing', true)) | as_bool }}"
          - relationships:
              to: ref('terminology__present_on_admission')
              field: present_on_admit_code
              tags: ['tuva_dqi_sev_3', 'dqi']
              config:
                severity: warn
                enabled: "{{ ((target.type != 'fabric') and var('enable_input_layer_testing', true)) | as_bool }}"
      - name: diagnosis_poa_12
        description: >
          Present on admission code for the 12th diagnosis on the claim.
        tests:
          - dbt_expectations.expect_column_to_exist:
              tags: ['tuva_dqi_sev_1', 'dqi']
              config:
                severity: warn
                enabled: "{{ ((target.type != 'fabric') and var('enable_input_layer_testing', true)) | as_bool }}"
          - relationships:
              to: ref('terminology__present_on_admission')
              field: present_on_admit_code
              tags: ['tuva_dqi_sev_3', 'dqi']
              config:
                severity: warn
                enabled: "{{ ((target.type != 'fabric') and var('enable_input_layer_testing', true)) | as_bool }}"
      - name: diagnosis_poa_13
        description: >
          Present on admission code for the 13th diagnosis on the claim.
        tests:
          - dbt_expectations.expect_column_to_exist:
              tags: ['tuva_dqi_sev_1', 'dqi']
              config:
                severity: warn
                enabled: "{{ ((target.type != 'fabric') and var('enable_input_layer_testing', true)) | as_bool }}"
          - relationships:
              to: ref('terminology__present_on_admission')
              field: present_on_admit_code
              tags: ['tuva_dqi_sev_3', 'dqi']
              config:
                severity: warn
                enabled: "{{ ((target.type != 'fabric') and var('enable_input_layer_testing', true)) | as_bool }}"
      - name: diagnosis_poa_14
        description: >
          Present on admission code for the 14th diagnosis on the claim.
        tests:
          - dbt_expectations.expect_column_to_exist:
              tags: ['tuva_dqi_sev_1', 'dqi']
              config:
                severity: warn
                enabled: "{{ ((target.type != 'fabric') and var('enable_input_layer_testing', true)) | as_bool }}"
          - relationships:
              to: ref('terminology__present_on_admission')
              field: present_on_admit_code
              tags: ['tuva_dqi_sev_3', 'dqi']
              config:
                severity: warn
                enabled: "{{ ((target.type != 'fabric') and var('enable_input_layer_testing', true)) | as_bool }}"
      - name: diagnosis_poa_15
        description: >
          Present on admission code for the 15th diagnosis on the claim.
        tests:
          - dbt_expectations.expect_column_to_exist:
              tags: ['tuva_dqi_sev_1', 'dqi']
              config:
                severity: warn
                enabled: "{{ ((target.type != 'fabric') and var('enable_input_layer_testing', true)) | as_bool }}"
          - relationships:
              to: ref('terminology__present_on_admission')
              field: present_on_admit_code
              tags: ['tuva_dqi_sev_3', 'dqi']
              config:
                severity: warn
                enabled: "{{ ((target.type != 'fabric') and var('enable_input_layer_testing', true)) | as_bool }}"
      - name: diagnosis_poa_16
        description: >
          Present on admission code for the 16th diagnosis on the claim.
        tests:
          - dbt_expectations.expect_column_to_exist:
              tags: ['tuva_dqi_sev_1', 'dqi']
              config:
                severity: warn
                enabled: "{{ ((target.type != 'fabric') and var('enable_input_layer_testing', true)) | as_bool }}"
          - relationships:
              to: ref('terminology__present_on_admission')
              field: present_on_admit_code
              tags: ['tuva_dqi_sev_3', 'dqi']
              config:
                severity: warn
                enabled: "{{ ((target.type != 'fabric') and var('enable_input_layer_testing', true)) | as_bool }}"
      - name: diagnosis_poa_17
        description: >
          Present on admission code for the 17th diagnosis on the claim.
        tests:
          - dbt_expectations.expect_column_to_exist:
              tags: ['tuva_dqi_sev_1', 'dqi']
              config:
                severity: warn
                enabled: "{{ ((target.type != 'fabric') and var('enable_input_layer_testing', true)) | as_bool }}"
          - relationships:
              to: ref('terminology__present_on_admission')
              field: present_on_admit_code
              tags: ['tuva_dqi_sev_3', 'dqi']
              config:
                severity: warn
                enabled: "{{ ((target.type != 'fabric') and var('enable_input_layer_testing', true)) | as_bool }}"
      - name: diagnosis_poa_18
        description: >
          Present on admission code for the 18th diagnosis on the claim.
        tests:
          - dbt_expectations.expect_column_to_exist:
              tags: ['tuva_dqi_sev_1', 'dqi']
              config:
                severity: warn
                enabled: "{{ ((target.type != 'fabric') and var('enable_input_layer_testing', true)) | as_bool }}"
          - relationships:
              to: ref('terminology__present_on_admission')
              field: present_on_admit_code
              tags: ['tuva_dqi_sev_3', 'dqi']
              config:
                severity: warn
                enabled: "{{ ((target.type != 'fabric') and var('enable_input_layer_testing', true)) | as_bool }}"
      - name: diagnosis_poa_19
        description: >
          Present on admission code for the 19th diagnosis on the claim.
        tests:
          - dbt_expectations.expect_column_to_exist:
              tags: ['tuva_dqi_sev_1', 'dqi']
              config:
                severity: warn
                enabled: "{{ ((target.type != 'fabric') and var('enable_input_layer_testing', true)) | as_bool }}"
          - relationships:
              to: ref('terminology__present_on_admission')
              field: present_on_admit_code
              tags: ['tuva_dqi_sev_3', 'dqi']
              config:
                severity: warn
                enabled: "{{ ((target.type != 'fabric') and var('enable_input_layer_testing', true)) | as_bool }}"
      - name: diagnosis_poa_20
        description: >
          Present on admission code for the 20th diagnosis on the claim.
        tests:
          - dbt_expectations.expect_column_to_exist:
              tags: ['tuva_dqi_sev_1', 'dqi']
              config:
                severity: warn
                enabled: "{{ ((target.type != 'fabric') and var('enable_input_layer_testing', true)) | as_bool }}"
          - relationships:
              to: ref('terminology__present_on_admission')
              field: present_on_admit_code
              tags: ['tuva_dqi_sev_3', 'dqi']
              config:
                severity: warn
                enabled: "{{ ((target.type != 'fabric') and var('enable_input_layer_testing', true)) | as_bool }}"
      - name: diagnosis_poa_21
        description: >
          Present on admission code for the 21st diagnosis on the claim.
        tests:
          - dbt_expectations.expect_column_to_exist:
              tags: ['tuva_dqi_sev_1', 'dqi']
              config:
                severity: warn
                enabled: "{{ ((target.type != 'fabric') and var('enable_input_layer_testing', true)) | as_bool }}"
          - relationships:
              to: ref('terminology__present_on_admission')
              field: present_on_admit_code
              tags: ['tuva_dqi_sev_3', 'dqi']
              config:
                severity: warn
                enabled: "{{ ((target.type != 'fabric') and var('enable_input_layer_testing', true)) | as_bool }}"
      - name: diagnosis_poa_22
        description: >
          Present on admission code for the 22nd diagnosis on the claim.
        tests:
          - dbt_expectations.expect_column_to_exist:
              tags: ['tuva_dqi_sev_1', 'dqi']
              config:
                severity: warn
                enabled: "{{ ((target.type != 'fabric') and var('enable_input_layer_testing', true)) | as_bool }}"
          - relationships:
              to: ref('terminology__present_on_admission')
              field: present_on_admit_code
              tags: ['tuva_dqi_sev_3', 'dqi']
              config:
                severity: warn
                enabled: "{{ ((target.type != 'fabric') and var('enable_input_layer_testing', true)) | as_bool }}"
      - name: diagnosis_poa_23
        description: >
          Present on admission code for the 23rd diagnosis on the claim.
        tests:
          - dbt_expectations.expect_column_to_exist:
              tags: ['tuva_dqi_sev_1', 'dqi']
              config:
                severity: warn
                enabled: "{{ ((target.type != 'fabric') and var('enable_input_layer_testing', true)) | as_bool }}"
          - relationships:
              to: ref('terminology__present_on_admission')
              field: present_on_admit_code
              tags: ['tuva_dqi_sev_3', 'dqi']
              config:
                severity: warn
                enabled: "{{ ((target.type != 'fabric') and var('enable_input_layer_testing', true)) | as_bool }}"
      - name: diagnosis_poa_24
        description: >
          Present on admission code for the 24th diagnosis on the claim.
        tests:
          - dbt_expectations.expect_column_to_exist:
              tags: ['tuva_dqi_sev_1', 'dqi']
              config:
                severity: warn
                enabled: "{{ ((target.type != 'fabric') and var('enable_input_layer_testing', true)) | as_bool }}"
          - relationships:
              to: ref('terminology__present_on_admission')
              field: present_on_admit_code
              tags: ['tuva_dqi_sev_3', 'dqi']
              config:
                severity: warn
                enabled: "{{ ((target.type != 'fabric') and var('enable_input_layer_testing', true)) | as_bool }}"
      - name: diagnosis_poa_25
        description: >
          Present on admission code for the 25th diagnosis on the claim.
        tests:
          - dbt_expectations.expect_column_to_exist:
              tags: ['tuva_dqi_sev_1', 'dqi']
              config:
                severity: warn
                enabled: "{{ ((target.type != 'fabric') and var('enable_input_layer_testing', true)) | as_bool }}"
          - relationships:
              to: ref('terminology__present_on_admission')
              field: present_on_admit_code
              tags: ['tuva_dqi_sev_3', 'dqi']
              config:
                severity: warn
                enabled: "{{ ((target.type != 'fabric') and var('enable_input_layer_testing', true)) | as_bool }}"
      - name: procedure_code_type
        description: Indicates the type of procedure code (e.g. ICD-10-PCS).
        tests:
          - dbt_expectations.expect_column_to_exist:
              tags: ['tuva_dqi_sev_1', 'dqi']
              config:
                severity: warn
                enabled: "{{ ((target.type != 'fabric') and var('enable_input_layer_testing', true)) | as_bool }}"
          - accepted_values:
              values: ['icd-10-pcs', 'icd-9-pcs', 'hcpcs_level_2']
              tags: ['tuva_dqi_sev_2', 'dqi']
              config:
                severity: warn
                enabled: "{{ var('enable_input_layer_testing', true) | as_bool }}"
      - name: procedure_code_1
        description: 1st ICD (9 or 10) procedure code on the claim.
        tests:
          - dbt_expectations.expect_column_to_exist:
              tags: ['tuva_dqi_sev_1', 'dqi']
              config:
                severity: warn
                enabled: "{{ ((target.type != 'fabric') and var('enable_input_layer_testing', true)) | as_bool }}"
      - name: procedure_code_2
        description: 2nd ICD (9 or 10) procedure code on the claim.
        tests:
          - dbt_expectations.expect_column_to_exist:
              tags: ['tuva_dqi_sev_1', 'dqi']
              config:
                severity: warn
                enabled: "{{ ((target.type != 'fabric') and var('enable_input_layer_testing', true)) | as_bool }}"
      - name: procedure_code_3
        description: 3rd ICD (9 or 10) procedure code on the claim.
        tests:
          - dbt_expectations.expect_column_to_exist:
              tags: ['tuva_dqi_sev_1', 'dqi']
              config:
                severity: warn
                enabled: "{{ ((target.type != 'fabric') and var('enable_input_layer_testing', true)) | as_bool }}"
      - name: procedure_code_4
        description: 4th ICD (9 or 10) procedure code on the claim.
        tests:
          - dbt_expectations.expect_column_to_exist:
              tags: ['tuva_dqi_sev_1', 'dqi']
              config:
                severity: warn
                enabled: "{{ ((target.type != 'fabric') and var('enable_input_layer_testing', true)) | as_bool }}"
      - name: procedure_code_5
        description: 5th ICD (9 or 10) procedure code on the claim.
        tests:
          - dbt_expectations.expect_column_to_exist:
              tags: ['tuva_dqi_sev_1', 'dqi']
              config:
                severity: warn
                enabled: "{{ ((target.type != 'fabric') and var('enable_input_layer_testing', true)) | as_bool }}"
      - name: procedure_code_6
        description: 6th ICD (9 or 10) procedure code on the claim.
        tests:
          - dbt_expectations.expect_column_to_exist:
              tags: ['tuva_dqi_sev_1', 'dqi']
              config:
                severity: warn
                enabled: "{{ ((target.type != 'fabric') and var('enable_input_layer_testing', true)) | as_bool }}"
      - name: procedure_code_7
        description: 7th ICD (9 or 10) procedure code on the claim.
        tests:
          - dbt_expectations.expect_column_to_exist:
              tags: ['tuva_dqi_sev_1', 'dqi']
              config:
                severity: warn
                enabled: "{{ ((target.type != 'fabric') and var('enable_input_layer_testing', true)) | as_bool }}"
      - name: procedure_code_8
        description: 8th ICD (9 or 10) procedure code on the claim.
        tests:
          - dbt_expectations.expect_column_to_exist:
              tags: ['tuva_dqi_sev_1', 'dqi']
              config:
                severity: warn
                enabled: "{{ ((target.type != 'fabric') and var('enable_input_layer_testing', true)) | as_bool }}"
      - name: procedure_code_9
        description: 9th ICD (9 or 10) procedure code on the claim.
        tests:
          - dbt_expectations.expect_column_to_exist:
              tags: ['tuva_dqi_sev_1', 'dqi']
              config:
                severity: warn
                enabled: "{{ ((target.type != 'fabric') and var('enable_input_layer_testing', true)) | as_bool }}"
      - name: procedure_code_10
        description: 10th ICD (9 or 10) procedure code on the claim.
        tests:
          - dbt_expectations.expect_column_to_exist:
              tags: ['tuva_dqi_sev_1', 'dqi']
              config:
                severity: warn
                enabled: "{{ ((target.type != 'fabric') and var('enable_input_layer_testing', true)) | as_bool }}"
      - name: procedure_code_11
        description: 11th ICD (9 or 10) procedure code on the claim.
        tests:
          - dbt_expectations.expect_column_to_exist:
              tags: ['tuva_dqi_sev_1', 'dqi']
              config:
                severity: warn
                enabled: "{{ ((target.type != 'fabric') and var('enable_input_layer_testing', true)) | as_bool }}"
      - name: procedure_code_12
        description: 12th ICD (9 or 10) procedure code on the claim.
        tests:
          - dbt_expectations.expect_column_to_exist:
              tags: ['tuva_dqi_sev_1', 'dqi']
              config:
                severity: warn
                enabled: "{{ ((target.type != 'fabric') and var('enable_input_layer_testing', true)) | as_bool }}"
      - name: procedure_code_13
        description: 13th ICD (9 or 10) procedure code on the claim.
        tests:
          - dbt_expectations.expect_column_to_exist:
              tags: ['tuva_dqi_sev_1', 'dqi']
              config:
                severity: warn
                enabled: "{{ ((target.type != 'fabric') and var('enable_input_layer_testing', true)) | as_bool }}"
      - name: procedure_code_14
        description: 14th ICD (9 or 10) procedure code on the claim.
        tests:
          - dbt_expectations.expect_column_to_exist:
              tags: ['tuva_dqi_sev_1', 'dqi']
              config:
                severity: warn
                enabled: "{{ ((target.type != 'fabric') and var('enable_input_layer_testing', true)) | as_bool }}"
      - name: procedure_code_15
        description: 15th ICD (9 or 10) procedure code on the claim.
        tests:
          - dbt_expectations.expect_column_to_exist:
              tags: ['tuva_dqi_sev_1', 'dqi']
              config:
                severity: warn
                enabled: "{{ ((target.type != 'fabric') and var('enable_input_layer_testing', true)) | as_bool }}"
      - name: procedure_code_16
        description: 16th ICD (9 or 10) procedure code on the claim.
        tests:
          - dbt_expectations.expect_column_to_exist:
              tags: ['tuva_dqi_sev_1', 'dqi']
              config:
                severity: warn
                enabled: "{{ ((target.type != 'fabric') and var('enable_input_layer_testing', true)) | as_bool }}"
      - name: procedure_code_17
        description: 17th ICD (9 or 10) procedure code on the claim.
        tests:
          - dbt_expectations.expect_column_to_exist:
              tags: ['tuva_dqi_sev_1', 'dqi']
              config:
                severity: warn
                enabled: "{{ ((target.type != 'fabric') and var('enable_input_layer_testing', true)) | as_bool }}"
      - name: procedure_code_18
        description: 18th ICD (9 or 10) procedure code on the claim.
        tests:
          - dbt_expectations.expect_column_to_exist:
              tags: ['tuva_dqi_sev_1', 'dqi']
              config:
                severity: warn
                enabled: "{{ ((target.type != 'fabric') and var('enable_input_layer_testing', true)) | as_bool }}"
      - name: procedure_code_19
        description: 19th ICD (9 or 10) procedure code on the claim.
        tests:
          - dbt_expectations.expect_column_to_exist:
              tags: ['tuva_dqi_sev_1', 'dqi']
              config:
                severity: warn
                enabled: "{{ ((target.type != 'fabric') and var('enable_input_layer_testing', true)) | as_bool }}"
      - name: procedure_code_20
        description: 20th ICD (9 or 10) procedure code on the claim.
        tests:
          - dbt_expectations.expect_column_to_exist:
              tags: ['tuva_dqi_sev_1', 'dqi']
              config:
                severity: warn
                enabled: "{{ ((target.type != 'fabric') and var('enable_input_layer_testing', true)) | as_bool }}"
      - name: procedure_code_21
        description: 21st ICD (9 or 10) procedure code on the claim.
        tests:
          - dbt_expectations.expect_column_to_exist:
              tags: ['tuva_dqi_sev_1', 'dqi']
              config:
                severity: warn
                enabled: "{{ ((target.type != 'fabric') and var('enable_input_layer_testing', true)) | as_bool }}"
      - name: procedure_code_22
        description: 22nd ICD (9 or 10) procedure code on the claim.
        tests:
          - dbt_expectations.expect_column_to_exist:
              tags: ['tuva_dqi_sev_1', 'dqi']
              config:
                severity: warn
                enabled: "{{ ((target.type != 'fabric') and var('enable_input_layer_testing', true)) | as_bool }}"
      - name: procedure_code_23
        description: 23rd ICD (9 or 10) procedure code on the claim.
        tests:
          - dbt_expectations.expect_column_to_exist:
              tags: ['tuva_dqi_sev_1', 'dqi']
              config:
                severity: warn
                enabled: "{{ ((target.type != 'fabric') and var('enable_input_layer_testing', true)) | as_bool }}"
      - name: procedure_code_24
        description: 24th ICD (9 or 10) procedure code on the claim.
        tests:
          - dbt_expectations.expect_column_to_exist:
              tags: ['tuva_dqi_sev_1', 'dqi']
              config:
                severity: warn
                enabled: "{{ ((target.type != 'fabric') and var('enable_input_layer_testing', true)) | as_bool }}"
      - name: procedure_code_25
        description: 25th ICD (9 or 10) procedure code on the claim.
        tests:
          - dbt_expectations.expect_column_to_exist:
              tags: ['tuva_dqi_sev_1', 'dqi']
              config:
                severity: warn
                enabled: "{{ ((target.type != 'fabric') and var('enable_input_layer_testing', true)) | as_bool }}"
      - name: procedure_date_1
        description: Date of the 1st procedure on the claim.
        tests:
          - dbt_expectations.expect_column_to_exist:
              tags: ['tuva_dqi_sev_1', 'dqi']
              config:
                severity: warn
                enabled: "{{ ((target.type != 'fabric') and var('enable_input_layer_testing', true)) | as_bool }}"
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: date
              tags: ['tuva_dqi_sev_2', 'dqi']
              config:
                severity: warn
                enabled: "{{ ((target.type != 'fabric') and var('enable_input_layer_testing', true)) | as_bool }}"
      - name: procedure_date_2
        description: Date of the 2nd procedure on the claim.
        tests:
          - dbt_expectations.expect_column_to_exist:
              tags: ['tuva_dqi_sev_1', 'dqi']
              config:
                severity: warn
                enabled: "{{ ((target.type != 'fabric') and var('enable_input_layer_testing', true)) | as_bool }}"
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: date
              tags: ['tuva_dqi_sev_2', 'dqi']
              config:
                severity: warn
                enabled: "{{ ((target.type != 'fabric') and var('enable_input_layer_testing', true)) | as_bool }}"
      - name: procedure_date_3
        description: Date of the 3rd procedure on the claim.
        tests:
          - dbt_expectations.expect_column_to_exist:
              tags: ['tuva_dqi_sev_1', 'dqi']
              config:
                severity: warn
                enabled: "{{ ((target.type != 'fabric') and var('enable_input_layer_testing', true)) | as_bool }}"
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: date
              tags: ['tuva_dqi_sev_2', 'dqi']
              config:
                severity: warn
                enabled: "{{ ((target.type != 'fabric') and var('enable_input_layer_testing', true)) | as_bool }}"
      - name: procedure_date_4
        description: Date of the 4th procedure on the claim.
        tests:
          - dbt_expectations.expect_column_to_exist:
              tags: ['tuva_dqi_sev_1', 'dqi']
              config:
                severity: warn
                enabled: "{{ ((target.type != 'fabric') and var('enable_input_layer_testing', true)) | as_bool }}"
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: date
              tags: ['tuva_dqi_sev_2', 'dqi']
              config:
                severity: warn
                enabled: "{{ ((target.type != 'fabric') and var('enable_input_layer_testing', true)) | as_bool }}"
      - name: procedure_date_5
        description: Date of the 5th procedure on the claim.
        tests:
          - dbt_expectations.expect_column_to_exist:
              tags: ['tuva_dqi_sev_1', 'dqi']
              config:
                severity: warn
                enabled: "{{ ((target.type != 'fabric') and var('enable_input_layer_testing', true)) | as_bool }}"
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: date
              tags: ['tuva_dqi_sev_2', 'dqi']
              config:
                severity: warn
                enabled: "{{ ((target.type != 'fabric') and var('enable_input_layer_testing', true)) | as_bool }}"
      - name: procedure_date_6
        description: Date of the 6th procedure on the claim.
        tests:
          - dbt_expectations.expect_column_to_exist:
              tags: ['tuva_dqi_sev_1', 'dqi']
              config:
                severity: warn
                enabled: "{{ ((target.type != 'fabric') and var('enable_input_layer_testing', true)) | as_bool }}"
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: date
              tags: ['tuva_dqi_sev_2', 'dqi']
              config:
                severity: warn
                enabled: "{{ ((target.type != 'fabric') and var('enable_input_layer_testing', true)) | as_bool }}"
      - name: procedure_date_7
        description: Date of the 7th procedure on the claim.
        tests:
          - dbt_expectations.expect_column_to_exist:
              tags: ['tuva_dqi_sev_1', 'dqi']
              config:
                severity: warn
                enabled: "{{ ((target.type != 'fabric') and var('enable_input_layer_testing', true)) | as_bool }}"
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: date
              tags: ['tuva_dqi_sev_2', 'dqi']
              config:
                severity: warn
                enabled: "{{ ((target.type != 'fabric') and var('enable_input_layer_testing', true)) | as_bool }}"
      - name: procedure_date_8
        description: Date of the 8th procedure on the claim.
        tests:
          - dbt_expectations.expect_column_to_exist:
              tags: ['tuva_dqi_sev_1', 'dqi']
              config:
                severity: warn
                enabled: "{{ ((target.type != 'fabric') and var('enable_input_layer_testing', true)) | as_bool }}"
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: date
              tags: ['tuva_dqi_sev_2', 'dqi']
              config:
                severity: warn
                enabled: "{{ ((target.type != 'fabric') and var('enable_input_layer_testing', true)) | as_bool }}"
      - name: procedure_date_9
        description: Date of the 9th procedure on the claim.
        tests:
          - dbt_expectations.expect_column_to_exist:
              tags: ['tuva_dqi_sev_1', 'dqi']
              config:
                severity: warn
                enabled: "{{ ((target.type != 'fabric') and var('enable_input_layer_testing', true)) | as_bool }}"
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: date
              tags: ['tuva_dqi_sev_2', 'dqi']
              config:
                severity: warn
                enabled: "{{ ((target.type != 'fabric') and var('enable_input_layer_testing', true)) | as_bool }}"
      - name: procedure_date_10
        description: Date of the 10th procedure on the claim.
        tests:
          - dbt_expectations.expect_column_to_exist:
              tags: ['tuva_dqi_sev_1', 'dqi']
              config:
                severity: warn
                enabled: "{{ ((target.type != 'fabric') and var('enable_input_layer_testing', true)) | as_bool }}"
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: date
              tags: ['tuva_dqi_sev_2', 'dqi']
              config:
                severity: warn
                enabled: "{{ ((target.type != 'fabric') and var('enable_input_layer_testing', true)) | as_bool }}"
      - name: procedure_date_11
        description: Date of the 11th procedure on the claim.
        tests:
          - dbt_expectations.expect_column_to_exist:
              tags: ['tuva_dqi_sev_1', 'dqi']
              config:
                severity: warn
                enabled: "{{ ((target.type != 'fabric') and var('enable_input_layer_testing', true)) | as_bool }}"
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: date
              tags: ['tuva_dqi_sev_2', 'dqi']
              config:
                severity: warn
                enabled: "{{ ((target.type != 'fabric') and var('enable_input_layer_testing', true)) | as_bool }}"
      - name: procedure_date_12
        description: Date of the 12th procedure on the claim.
        tests:
          - dbt_expectations.expect_column_to_exist:
              tags: ['tuva_dqi_sev_1', 'dqi']
              config:
                severity: warn
                enabled: "{{ ((target.type != 'fabric') and var('enable_input_layer_testing', true)) | as_bool }}"
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: date
              tags: ['tuva_dqi_sev_2', 'dqi']
              config:
                severity: warn
                enabled: "{{ ((target.type != 'fabric') and var('enable_input_layer_testing', true)) | as_bool }}"
      - name: procedure_date_13
        description: Date of the 13th procedure on the claim.
        tests:
          - dbt_expectations.expect_column_to_exist:
              tags: ['tuva_dqi_sev_1', 'dqi']
              config:
                severity: warn
                enabled: "{{ ((target.type != 'fabric') and var('enable_input_layer_testing', true)) | as_bool }}"
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: date
              tags: ['tuva_dqi_sev_2', 'dqi']
              config:
                severity: warn
                enabled: "{{ ((target.type != 'fabric') and var('enable_input_layer_testing', true)) | as_bool }}"
      - name: procedure_date_14
        description: Date of the 14th procedure on the claim.
        tests:
          - dbt_expectations.expect_column_to_exist:
              tags: ['tuva_dqi_sev_1', 'dqi']
              config:
                severity: warn
                enabled: "{{ ((target.type != 'fabric') and var('enable_input_layer_testing', true)) | as_bool }}"
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: date
              tags: ['tuva_dqi_sev_2', 'dqi']
              config:
                severity: warn
                enabled: "{{ ((target.type != 'fabric') and var('enable_input_layer_testing', true)) | as_bool }}"
      - name: procedure_date_15
        description: Date of the 15th procedure on the claim.
        tests:
          - dbt_expectations.expect_column_to_exist:
              tags: ['tuva_dqi_sev_1', 'dqi']
              config:
                severity: warn
                enabled: "{{ ((target.type != 'fabric') and var('enable_input_layer_testing', true)) | as_bool }}"
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: date
              tags: ['tuva_dqi_sev_2', 'dqi']
              config:
                severity: warn
                enabled: "{{ ((target.type != 'fabric') and var('enable_input_layer_testing', true)) | as_bool }}"
      - name: procedure_date_16
        description: Date of the 16th procedure on the claim.
        tests:
          - dbt_expectations.expect_column_to_exist:
              tags: ['tuva_dqi_sev_1', 'dqi']
              config:
                severity: warn
                enabled: "{{ ((target.type != 'fabric') and var('enable_input_layer_testing', true)) | as_bool }}"
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: date
              tags: ['tuva_dqi_sev_2', 'dqi']
              config:
                severity: warn
                enabled: "{{ ((target.type != 'fabric') and var('enable_input_layer_testing', true)) | as_bool }}"
      - name: procedure_date_17
        description: Date of the 17th procedure on the claim.
        tests:
          - dbt_expectations.expect_column_to_exist:
              tags: ['tuva_dqi_sev_1', 'dqi']
              config:
                severity: warn
                enabled: "{{ ((target.type != 'fabric') and var('enable_input_layer_testing', true)) | as_bool }}"
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: date
              tags: ['tuva_dqi_sev_2', 'dqi']
              config:
                severity: warn
                enabled: "{{ ((target.type != 'fabric') and var('enable_input_layer_testing', true)) | as_bool }}"
      - name: procedure_date_18
        description: Date of the 18th procedure on the claim.
        tests:
          - dbt_expectations.expect_column_to_exist:
              tags: ['tuva_dqi_sev_1', 'dqi']
              config:
                severity: warn
                enabled: "{{ ((target.type != 'fabric') and var('enable_input_layer_testing', true)) | as_bool }}"
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: date
              tags: ['tuva_dqi_sev_2', 'dqi']
              config:
                severity: warn
                enabled: "{{ ((target.type != 'fabric') and var('enable_input_layer_testing', true)) | as_bool }}"
      - name: procedure_date_19
        description: Date of the 19th procedure on the claim.
        tests:
          - dbt_expectations.expect_column_to_exist:
              tags: ['tuva_dqi_sev_1', 'dqi']
              config:
                severity: warn
                enabled: "{{ ((target.type != 'fabric') and var('enable_input_layer_testing', true)) | as_bool }}"
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: date
              tags: ['tuva_dqi_sev_2', 'dqi']
              config:
                severity: warn
                enabled: "{{ ((target.type != 'fabric') and var('enable_input_layer_testing', true)) | as_bool }}"
      - name: procedure_date_20
        description: Date of the 20th procedure on the claim.
        tests:
          - dbt_expectations.expect_column_to_exist:
              tags: ['tuva_dqi_sev_1', 'dqi']
              config:
                severity: warn
                enabled: "{{ ((target.type != 'fabric') and var('enable_input_layer_testing', true)) | as_bool }}"
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: date
              tags: ['tuva_dqi_sev_2', 'dqi']
              config:
                severity: warn
                enabled: "{{ ((target.type != 'fabric') and var('enable_input_layer_testing', true)) | as_bool }}"
      - name: procedure_date_21
        description: Date of the 21st procedure on the claim.
        tests:
          - dbt_expectations.expect_column_to_exist:
              tags: ['tuva_dqi_sev_1', 'dqi']
              config:
                severity: warn
                enabled: "{{ ((target.type != 'fabric') and var('enable_input_layer_testing', true)) | as_bool }}"
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: date
              tags: ['tuva_dqi_sev_2', 'dqi']
              config:
                severity: warn
                enabled: "{{ ((target.type != 'fabric') and var('enable_input_layer_testing', true)) | as_bool }}"
      - name: procedure_date_22
        description: Date of the 22nd procedure on the claim.
        tests:
          - dbt_expectations.expect_column_to_exist:
              tags: ['tuva_dqi_sev_1', 'dqi']
              config:
                severity: warn
                enabled: "{{ ((target.type != 'fabric') and var('enable_input_layer_testing', true)) | as_bool }}"
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: date
              tags: ['tuva_dqi_sev_2', 'dqi']
              config:
                severity: warn
                enabled: "{{ ((target.type != 'fabric') and var('enable_input_layer_testing', true)) | as_bool }}"
      - name: procedure_date_23
        description: Date of the 23rd procedure on the claim.
        tests:
          - dbt_expectations.expect_column_to_exist:
              tags: ['tuva_dqi_sev_1', 'dqi']
              config:
                severity: warn
                enabled: "{{ ((target.type != 'fabric') and var('enable_input_layer_testing', true)) | as_bool }}"
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: date
              tags: ['tuva_dqi_sev_2', 'dqi']
              config:
                severity: warn
                enabled: "{{ ((target.type != 'fabric') and var('enable_input_layer_testing', true)) | as_bool }}"
      - name: procedure_date_24
        description: Date of the 24th procedure on the claim.
        tests:
          - dbt_expectations.expect_column_to_exist:
              tags: ['tuva_dqi_sev_1', 'dqi']
              config:
                severity: warn
                enabled: "{{ ((target.type != 'fabric') and var('enable_input_layer_testing', true)) | as_bool }}"
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: date
              tags: ['tuva_dqi_sev_2', 'dqi']
              config:
                severity: warn
                enabled: "{{ ((target.type != 'fabric') and var('enable_input_layer_testing', true)) | as_bool }}"
      - name: procedure_date_25
        description: Date of the 25th procedure on the claim.
        tests:
          - dbt_expectations.expect_column_to_exist:
              tags: ['tuva_dqi_sev_1', 'dqi']
              config:
                severity: warn
                enabled: "{{ ((target.type != 'fabric') and var('enable_input_layer_testing', true)) | as_bool }}"
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: date
              tags: ['tuva_dqi_sev_2', 'dqi']
              config:
                severity: warn
                enabled: "{{ ((target.type != 'fabric') and var('enable_input_layer_testing', true)) | as_bool }}"
      - name: in_network_flag
        description: '{{ doc("in_network_flag") }}'
        tests:
          - dbt_expectations.expect_column_to_exist:
              tags: ['tuva_dqi_sev_1', 'dqi']
              config:
                severity: warn
                enabled: "{{ ((target.type != 'fabric') and var('enable_input_layer_testing', true)) | as_bool }}"
      - name: data_source
        description: '{{ doc("data_source") }}'
        tests:
          - dbt_expectations.expect_column_to_exist:
              tags: ['tuva_dqi_sev_1', 'dqi']
              config:
                severity: warn
                enabled: "{{ ((target.type != 'fabric') and var('enable_input_layer_testing', true)) | as_bool }}"
      - name: file_name
        description: '{{ doc("file_name") }}'
        tests:
          - dbt_expectations.expect_column_to_exist:
              tags: ['tuva_dqi_sev_1', 'dqi']
              config:
                severity: warn
                enabled: "{{ ((target.type != 'fabric') and var('enable_input_layer_testing', true)) | as_bool }}"
      - name: file_date
        description: ''
        tests:
          - dbt_expectations.expect_column_to_exist:
              tags: ['tuva_dqi_sev_1', 'dqi']
              config:
                severity: warn
                enabled: "{{ ((target.type != 'fabric') and var('enable_input_layer_testing', true)) | as_bool }}"
      - name: ingest_datetime
        description: '{{ doc("ingest_datetime") }}'
        tests:
          - dbt_expectations.expect_column_to_exist:
              tags: ['tuva_dqi_sev_1', 'dqi']
              config:
                severity: warn
                enabled: "{{ ((target.type != 'fabric') and var('enable_input_layer_testing', true)) | as_bool }}"
          - dbt_expectations.expect_column_values_to_be_in_type_list:
              column_type_list: [date, datetime, time, timestamp, timestamp_ntz, timestampntz,
                timestamp_ltz, timestampltz, timestamp_tz, timestamptz, timestamp
                    with time zone, timestamp without time zone, datetime2, datetimeoffset]
              tags: ['tuva_dqi_sev_2', 'dqi']
              config:
                severity: warn
                enabled: "{{ ((target.type != 'fabric') and var('enable_input_layer_testing', true)) | as_bool }}"
