version: 2
models:
  - name: input_layer__immunization
    description: |
      Mapping check to make sure all columns are mapped appropriately into the input layer.
      The immunization table contains information about immunizations administered to patients.
    config:
      schema: |
        {%- if var('tuva_schema_prefix',None) != None -%}{{var('tuva_schema_prefix')}}_input_layer{% else %}input_layer{%- endif -%}
      tags: input_layer
      materialized: view
    columns:
      - name: immunization_id
        description: '{{ doc("immunization_id") }}'
        tests:
          - the_tuva_project.expect_column_to_exist:
              config:
                severity: error
                enabled: "{{ ((target.type != 'fabric') and var('enable_input_layer_testing', true)) | as_bool }}"
                tags: ['tuva_dqi_sev_1', 'dqi']
          - unique:
              config:
                severity: error
                enabled: "{{ var('enable_input_layer_testing', true) | as_bool }}"
                tags: ['tuva_dqi_sev_1', 'dqi']
          - not_null:
              arguments:
                column_name: immunization_id
              config:
                severity: error
                enabled: "{{ var('enable_input_layer_testing', true) | as_bool }}"
      - name: person_id
        description: '{{ doc("person_id") }}'
        tests:
          - the_tuva_project.expect_column_to_exist:
              config:
                severity: warn
                enabled: "{{ ((target.type != 'fabric') and var('enable_input_layer_testing', true)) | as_bool }}"
                tags: ['tuva_dqi_sev_1', 'dqi']
          - not_null:
              arguments:
                column_name: person_id
              config:
                severity: warn
                enabled: "{{ var('enable_input_layer_testing', true) | as_bool }}"
      - name: patient_id
        description: '{{ doc("patient_id") }}'
        tests:
          - the_tuva_project.expect_column_to_exist:
              config:
                severity: warn
                enabled: "{{ ((target.type != 'fabric') and var('enable_input_layer_testing', true)) | as_bool }}"
                tags: ['tuva_dqi_sev_1', 'dqi']
      - name: encounter_id
        description: '{{ doc("encounter_id") }}'
        tests:
          - the_tuva_project.expect_column_to_exist:
              config:
                severity: warn
                enabled: "{{ ((target.type != 'fabric') and var('enable_input_layer_testing', true)) | as_bool }}"
                tags: ['tuva_dqi_sev_1', 'dqi']
      - name: source_code_type
        description: '{{ doc("source_code_type") }}'
        tests:
          - the_tuva_project.expect_column_to_exist:
              config:
                severity: warn
                enabled: "{{ ((target.type != 'fabric') and var('enable_input_layer_testing', true)) | as_bool }}"
                tags: ['tuva_dqi_sev_1', 'dqi']
      - name: source_code
        description: '{{ doc("source_code") }}'
        tests:
          - the_tuva_project.expect_column_to_exist:
              config:
                severity: warn
                enabled: "{{ ((target.type != 'fabric') and var('enable_input_layer_testing', true)) | as_bool }}"
                tags: ['tuva_dqi_sev_1', 'dqi']
      - name: source_description
        description: '{{ doc("source_description") }}'
        tests:
          - the_tuva_project.expect_column_to_exist:
              config:
                severity: warn
                enabled: "{{ ((target.type != 'fabric') and var('enable_input_layer_testing', true)) | as_bool }}"
                tags: ['tuva_dqi_sev_1', 'dqi']
      - name: normalized_code_type
        description: '{{ doc("normalized_code_type") }}'
        tests:
          - the_tuva_project.expect_column_to_exist:
              config:
                severity: warn
                enabled: "{{ ((target.type != 'fabric') and var('enable_input_layer_testing', true)) | as_bool }}"
                tags: ['tuva_dqi_sev_1', 'dqi']
      - name: normalized_code
        description: '{{ doc("normalized_code") }}'
        tests:
          - the_tuva_project.expect_column_to_exist:
              config:
                severity: warn
                enabled: "{{ ((target.type != 'fabric') and var('enable_input_layer_testing', true)) | as_bool }}"
                tags: ['tuva_dqi_sev_1', 'dqi']
      - name: normalized_description
        description: '{{ doc("normalized_description") }}'
        tests:
          - the_tuva_project.expect_column_to_exist:
              config:
                severity: warn
                enabled: "{{ ((target.type != 'fabric') and var('enable_input_layer_testing', true)) | as_bool }}"
                tags: ['tuva_dqi_sev_1', 'dqi']
      - name: status
        description: '{{ doc("status") }}'
        tests:
          - the_tuva_project.expect_column_to_exist:
              config:
                severity: warn
                enabled: "{{ ((target.type != 'fabric') and var('enable_input_layer_testing', true)) | as_bool }}"
                tags: ['tuva_dqi_sev_1', 'dqi']
      - name: status_reason
        description: '{{ doc("status_reason") }}'
        tests:
          - the_tuva_project.expect_column_to_exist:
              config:
                severity: warn
                enabled: "{{ ((target.type != 'fabric') and var('enable_input_layer_testing', true)) | as_bool }}"
                tags: ['tuva_dqi_sev_1', 'dqi']
      - name: occurrence_date
        description: '{{ doc("occurrence_date") }}'
        tests:
          - the_tuva_project.expect_column_to_exist:
              config:
                severity: warn
                enabled: "{{ ((target.type != 'fabric') and var('enable_input_layer_testing', true)) | as_bool }}"
                tags: ['tuva_dqi_sev_1', 'dqi']
          - the_tuva_project.expect_column_values_to_be_of_type:
              config:
                severity: warn
                enabled: "{{ ((target.type != 'fabric') and var('enable_input_layer_testing', true)) | as_bool }}"
                tags: ['tuva_dqi_sev_1', 'dqi']
              arguments:
                column_type: date
      - name: source_dose
        description: '{{ doc("source_dose") }}'
        tests:
          - the_tuva_project.expect_column_to_exist:
              config:
                severity: warn
                enabled: "{{ ((target.type != 'fabric') and var('enable_input_layer_testing', true)) | as_bool }}"
                tags: ['tuva_dqi_sev_1', 'dqi']
      - name: normalized_dose
        description: '{{ doc("normalized_dose") }}'
        tests:
          - the_tuva_project.expect_column_to_exist:
              config:
                severity: warn
                enabled: "{{ ((target.type != 'fabric') and var('enable_input_layer_testing', true)) | as_bool }}"
                tags: ['tuva_dqi_sev_1', 'dqi']
      - name: lot_number
        description: '{{ doc("lot_number") }}'
        tests:
          - the_tuva_project.expect_column_to_exist:
              config:
                severity: warn
                enabled: "{{ ((target.type != 'fabric') and var('enable_input_layer_testing', true)) | as_bool }}"
                tags: ['tuva_dqi_sev_1', 'dqi']
      - name: body_site
        description: '{{ doc("body_site") }}'
        tests:
          - the_tuva_project.expect_column_to_exist:
              config:
                severity: warn
                enabled: "{{ ((target.type != 'fabric') and var('enable_input_layer_testing', true)) | as_bool }}"
                tags: ['tuva_dqi_sev_1', 'dqi']
      - name: route
        description: '{{ doc("route") }}'
        tests:
          - the_tuva_project.expect_column_to_exist:
              config:
                severity: warn
                enabled: "{{ ((target.type != 'fabric') and var('enable_input_layer_testing', true)) | as_bool }}"
                tags: ['tuva_dqi_sev_1', 'dqi']
      - name: location_id
        description: '{{ doc("location_id") }}'
        tests:
          - the_tuva_project.expect_column_to_exist:
              config:
                severity: warn
                enabled: "{{ ((target.type != 'fabric') and var('enable_input_layer_testing', true)) | as_bool }}"
                tags: ['tuva_dqi_sev_1', 'dqi']
      - name: practitioner_id
        description: '{{ doc("practitioner_id") }}'
        tests:
          - the_tuva_project.expect_column_to_exist:
              config:
                severity: warn
                enabled: "{{ ((target.type != 'fabric') and var('enable_input_layer_testing', true)) | as_bool }}"
                tags: ['tuva_dqi_sev_1', 'dqi']
      - name: data_source
        description: '{{ doc("data_source") }}'
        tests:
          - the_tuva_project.expect_column_to_exist:
              config:
                severity: warn
                enabled: "{{ ((target.type != 'fabric') and var('enable_input_layer_testing', true)) | as_bool }}"
                tags: ['tuva_dqi_sev_1', 'dqi']
      - name: file_name
        description: '{{ doc("file_name") }}'
        tests:
          - the_tuva_project.expect_column_to_exist:
              config:
                severity: warn
                enabled: "{{ ((target.type != 'fabric') and var('enable_input_layer_testing', true)) | as_bool }}"
                tags: ['tuva_dqi_sev_1', 'dqi']
      - name: ingest_datetime
        description: '{{ doc("ingest_datetime") }}'
        tests:
          - the_tuva_project.expect_column_to_exist:
              config:
                severity: warn
                enabled: "{{ ((target.type != 'fabric') and var('enable_input_layer_testing', true)) | as_bool }}"
                tags: ['tuva_dqi_sev_1', 'dqi']
          - the_tuva_project.expect_column_values_to_be_in_type_list:
              config:
                severity: warn
                enabled: "{{ ((target.type != 'fabric') and var('enable_input_layer_testing', true)) | as_bool }}"
                tags: ['tuva_dqi_sev_2', 'dqi']
              arguments:
                column_type_list: [date, datetime, time, timestamp, timestamp_ntz, timestampntz, timestamp_ltz, timestampltz, timestamp_tz, timestamptz, timestamp with time zone, timestamp without time zone, datetime2, datetimeoffset]