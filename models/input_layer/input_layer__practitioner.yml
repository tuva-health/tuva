version: 2
models:
- name: input_layer__practitioner
  description: >
      Mapping check to make sure all columns are mapped appropriately into the input layer.
      The practitioner table contains information on the providers in the 
      dataset e.g. physicians, physicians assistants, etc.
  config:
    schema: |
      {%- if var('tuva_schema_prefix',None) != None -%}{{var('tuva_schema_prefix')}}_input_layer{% else %}input_layer{%- endif -%}
    tags: input_layer
    materialized: view
  columns:
  - name: practitioner_id
    description: '{{ doc("practitioner_id") }}'
    tests:
      - dbt_expectations.expect_column_to_exist:
          tags: ['tuva_dqi_sev_1', 'dqi','dqi_service_categories','dqi_ccsr','dqi_cms_chronic_conditions','dqi_tuva_chronic_conditions','dqi_cms_hccs','dqi_ed_classification','dqi_financial_pmpm','dqi_quality_measures','dqi_readmission']
          config:
            severity: error
            enabled: "{{ ((target.type != 'fabric') and var('enable_input_layer_testing', true)) | as_bool }}"
      - unique:
          tags: ['tuva_dqi_sev_1', 'dqi','dqi_service_categories','dqi_ccsr','dqi_cms_chronic_conditions','dqi_tuva_chronic_conditions','dqi_cms_hccs','dqi_ed_classification','dqi_financial_pmpm','dqi_quality_measures','dqi_readmission']
          config:
            severity: error
            enabled: "{{ var('enable_input_layer_testing', true) | as_bool }}"
      - not_null:
          tags: ['tuva_dqi_sev_1', 'dqi','dqi_service_categories','dqi_ccsr','dqi_cms_chronic_conditions','dqi_tuva_chronic_conditions','dqi_cms_hccs','dqi_ed_classification','dqi_financial_pmpm','dqi_quality_measures','dqi_readmission']
          config:
            severity: error
            enabled: "{{ var('enable_input_layer_testing', true) | as_bool }}"
  - name: npi
    description: '{{ doc("npi") }}'
    tests:
      - dbt_expectations.expect_column_to_exist:
          tags: ['tuva_dqi_sev_1', 'dqi']
          config:
            severity: warn
            enabled: "{{ ((target.type != 'fabric') and var('enable_input_layer_testing', true)) | as_bool }}"
  - name: first_name
    description: '{{ doc("provider_first_name") }}'
    tests:
      - dbt_expectations.expect_column_to_exist:
          tags: ['tuva_dqi_sev_1', 'dqi']
          config:
            severity: warn
            enabled: "{{ ((target.type != 'fabric') and var('enable_input_layer_testing', true)) | as_bool }}"
  - name: last_name
    description: '{{ doc("provider_last_name") }}'
    tests:
      - dbt_expectations.expect_column_to_exist:
          tags: ['tuva_dqi_sev_1', 'dqi']
          config:
            severity: warn
            enabled: "{{ ((target.type != 'fabric') and var('enable_input_layer_testing', true)) | as_bool }}"
  - name: practice_affiliation
    description: '{{ doc("practice_affiliation") }}'
    tests:
      - dbt_expectations.expect_column_to_exist:
          tags: ['tuva_dqi_sev_1', 'dqi']
          config:
            severity: warn
            enabled: "{{ ((target.type != 'fabric') and var('enable_input_layer_testing', true)) | as_bool }}"
  - name: specialty
    description: '{{ doc("specialty") }}'
    tests:
      - dbt_expectations.expect_column_to_exist:
          tags: ['tuva_dqi_sev_1', 'dqi']
          config:
            severity: warn
            enabled: "{{ ((target.type != 'fabric') and var('enable_input_layer_testing', true)) | as_bool }}"
  - name: sub_specialty
    description: '{{ doc("sub_specialty") }}'
    tests:
      - dbt_expectations.expect_column_to_exist:
          tags: ['tuva_dqi_sev_1', 'dqi']
          config:
            severity: warn
            enabled: "{{ ((target.type != 'fabric') and var('enable_input_layer_testing', true)) | as_bool }}"
  - name: data_source
    description: '{{ doc("data_source") }}'
    tests:
      - dbt_expectations.expect_column_to_exist:
          tags: ['tuva_dqi_sev_1', 'dqi']
          config:
            severity: warn
            enabled: "{{ ((target.type != 'fabric') and var('enable_input_layer_testing', true)) | as_bool }}"
