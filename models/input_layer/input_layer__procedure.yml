version: 2
models:
  - name: input_layer__procedure
    description: >
      Mapping check to make sure all columns are mapped appropriately into the input
      layer.
      The procedure table contains information on procedures that were performed  on
      patients in the dataset.
    config:
      schema: |
        {%- if var('tuva_schema_prefix',None) != None -%}{{var('tuva_schema_prefix')}}_input_layer{% else %}input_layer{%- endif -%}
      tags: input_layer
      materialized: view
    columns:
      - name: procedure_id
        description: '{{ doc("procedure_id") }}'
        tests:
          - the_tuva_project.expect_column_to_exist:
              config:
                severity: error
                enabled: "{{ (var('enable_input_layer_testing', true)) | as_bool }}"
                tags: ['tuva_dqi_sev_1', 'dqi', 'dqi_service_categories', 'dqi_ccsr', 'dqi_cms_chronic_conditions', 'dqi_tuva_chronic_conditions', 'dqi_cms_hccs', 'dqi_ed_classification', 'dqi_financial_pmpm', 'dqi_quality_measures', 'dqi_readmission']
          - unique:
              config:
                severity: error
                enabled: "{{ var('enable_input_layer_testing', true) | as_bool }}"
                tags: ['tuva_dqi_sev_1', 'dqi', 'dqi_service_categories', 'dqi_ccsr', 'dqi_cms_chronic_conditions', 'dqi_tuva_chronic_conditions', 'dqi_cms_hccs', 'dqi_ed_classification', 'dqi_financial_pmpm', 'dqi_quality_measures', 'dqi_readmission']
          - not_null:
              arguments:
                column_name: procedure_id
              config:
                severity: error
                enabled: "{{ var('enable_input_layer_testing', true) | as_bool }}"
                tags: ['tuva_dqi_sev_1', 'dqi', 'dqi_service_categories', 'dqi_ccsr', 'dqi_cms_chronic_conditions', 'dqi_tuva_chronic_conditions', 'dqi_cms_hccs', 'dqi_ed_classification', 'dqi_financial_pmpm', 'dqi_quality_measures', 'dqi_readmission']
      - name: person_id
        description: '{{ doc("person_id") }}'
        tests:
          - the_tuva_project.expect_column_to_exist:
              config:
                severity: warn
                enabled: "{{ (var('enable_input_layer_testing', true)) | as_bool }}"
                tags: ['tuva_dqi_sev_1', 'dqi', 'dqi_cms_chronic_conditions', 'dqi_quality_measures', 'dqi_readmission']
          - not_null:
              arguments:
                column_name: person_id
              config:
                severity: warn
                enabled: "{{ var('enable_input_layer_testing', true) | as_bool }}"
                tags: ['tuva_dqi_sev_2', 'dqi', 'dqi_cms_chronic_conditions', 'dqi_quality_measures', 'dqi_readmission']
      - name: patient_id
        description: '{{ doc("patient_id") }}'
        tests:
          - the_tuva_project.expect_column_to_exist:
              config:
                severity: warn
                enabled: "{{ (var('enable_input_layer_testing', true)) | as_bool }}"
                tags: ['tuva_dqi_sev_1', 'dqi']
          - the_tuva_project.warn_if_null_percentage_above_zero:
              arguments: 
                column_name: patient_id
              description: "Percentage of values that are null."
              config:
                severity: warn
                enabled: "{{ var('enable_input_layer_testing', true) | as_bool }}"
                tags: ['tuva_dqi_sev_5', 'dqi']
      - name: encounter_id
        description: '{{ doc("encounter_id") }}'
        tests:
          - the_tuva_project.expect_column_to_exist:
              config:
                severity: warn
                enabled: "{{ (var('enable_input_layer_testing', true)) | as_bool }}"
                tags: ['tuva_dqi_sev_1', 'dqi', 'dqi_quality_measures', 'dqi_readmission']
          - the_tuva_project.warn_if_null_percentage_above_zero:
              arguments: 
                column_name: encounter_id
              description: "Percentage of values that are null."
              config:
                severity: warn
                enabled: "{{ var('enable_input_layer_testing', true) | as_bool }}"
                tags: ['tuva_dqi_sev_5', 'dqi', 'dqi_quality_measures', 'dqi_readmission']
      - name: claim_id
        description: '{{ doc("claim_id") }}'
        tests:
          - the_tuva_project.expect_column_to_exist:
              config:
                severity: warn
                enabled: "{{ (var('enable_input_layer_testing', true)) | as_bool }}"
                tags: ['tuva_dqi_sev_1', 'dqi']
          - the_tuva_project.warn_if_null_percentage_above_zero:
              arguments: 
                column_name: claim_id
              description: "Percentage of values that are null."
              config:
                severity: warn
                enabled: "{{ var('enable_input_layer_testing', true) | as_bool }}"
                tags: ['tuva_dqi_sev_5', 'dqi']
      - name: procedure_date
        description: '{{ doc("procedure_date") }}'
        tests:
          - the_tuva_project.expect_column_to_exist:
              config:
                severity: warn
                enabled: "{{ (var('enable_input_layer_testing', true)) | as_bool }}"
                tags: ['tuva_dqi_sev_1', 'dqi', 'dqi_cms_chronic_conditions', 'dqi_quality_measures']
          - the_tuva_project.expect_column_values_to_be_of_type:
              config:
                severity: warn
                enabled: "{{ (var('enable_input_layer_testing', true)) | as_bool }}"
                tags: ['tuva_dqi_sev_2', 'dqi', 'dqi_cms_chronic_conditions', 'dqi_quality_measures']
              arguments:
                column_type: date
          - the_tuva_project.expect_column_values_to_be_between:
              config:
                severity: warn
                enabled: "{{ (var('enable_input_layer_testing', true)) | as_bool }}"
                tags: ['tuva_dqi_sev_4', 'dqi']
              arguments:
                min_value: '''1900-01-01'''
                max_value: '''2100-01-01'''
                strictly: false
      - name: source_code_type
        description: '{{ doc("source_code_type") }}'
        tests:
          - the_tuva_project.expect_column_to_exist:
              config:
                severity: warn
                enabled: "{{ (var('enable_input_layer_testing', true)) | as_bool }}"
                tags: ['tuva_dqi_sev_1', 'dqi', 'dqi_quality_measures']
          - accepted_values:
              config:
                severity: warn
                tags: ['tuva_dqi_sev_2', 'dqi', 'dqi_cms_hccs', 'dqi_quality_measures']
              arguments:
                values: ['snomed-ct', 'hcpcs', 'icd-10-pcs', 'icd-9-pcs']
      - name: source_code
        description: '{{ doc("source_code") }}'
        tests:
          - the_tuva_project.expect_column_to_exist:
              config:
                severity: warn
                enabled: "{{ (var('enable_input_layer_testing', true)) | as_bool }}"
                tags: ['tuva_dqi_sev_1', 'dqi', 'dqi_quality_measures']
          - the_tuva_project.warn_if_null_percentage_above_zero:
              arguments: 
                column_name: source_code
              description: "Percentage of values that are null."
              config:
                severity: warn
                enabled: "{{ var('enable_input_layer_testing', true) | as_bool }}"
                tags: ['tuva_dqi_sev_5', 'dqi', 'dqi_quality_measures']
      - name: source_description
        description: '{{ doc("source_description") }}'
        tests:
          - the_tuva_project.expect_column_to_exist:
              config:
                severity: warn
                enabled: "{{ (var('enable_input_layer_testing', true)) | as_bool }}"
                tags: ['tuva_dqi_sev_1', 'dqi']
          - the_tuva_project.warn_if_null_percentage_above_zero:
              arguments: 
                column_name: source_description
              description: "Percentage of values that are null."
              config:
                severity: warn
                enabled: "{{ var('enable_input_layer_testing', true) | as_bool }}"
                tags: ['tuva_dqi_sev_5', 'dqi']
      - name: normalized_code_type
        description: '{{ doc("normalized_code_type") }}'
        tests:
          - the_tuva_project.expect_column_to_exist:
              config:
                severity: warn
                enabled: "{{ (var('enable_input_layer_testing', true)) | as_bool }}"
                tags: ['tuva_dqi_sev_1', 'dqi', 'dqi_cms_chronic_conditions', 'dqi_readmission']
          - relationships:
              config:
                severity: warn
                # Disabled for bigquery as relationships dbt test does not work when the alias and the field are the same name
                enabled: "{{ ((target.type != 'bigquery') and var('enable_input_layer_testing', true)) | as_bool }}"
                tags: ['tuva_dqi_sev_3', 'dqi', 'dqi_cms_chronic_conditions', 'dqi_readmission']
              arguments:
                to: ref('reference_data__code_type')
                field: code_type
      - name: normalized_code
        description: '{{ doc("normalized_code") }}'
        tests:
          - the_tuva_project.expect_column_to_exist:
              config:
                severity: warn
                enabled: "{{ (var('enable_input_layer_testing', true)) | as_bool }}"
                tags: ['tuva_dqi_sev_1', 'dqi', 'dqi_cms_chronic_conditions', 'dqi_readmission']
          - the_tuva_project.warn_if_null_percentage_above_zero:
              arguments: 
                column_name: normalized_code
              description: "Percentage of values that are null."
              config:
                severity: warn
                enabled: "{{ var('enable_input_layer_testing', true) | as_bool }}"
                tags: ['tuva_dqi_sev_5', 'dqi', 'dqi_cms_chronic_conditions', 'dqi_readmission']
      - name: normalized_description
        description: '{{ doc("normalized_description") }}'
        tests:
          - the_tuva_project.expect_column_to_exist:
              config:
                severity: warn
                enabled: "{{ (var('enable_input_layer_testing', true)) | as_bool }}"
                tags: ['tuva_dqi_sev_1', 'dqi']
          - the_tuva_project.warn_if_null_percentage_above_zero:
              arguments: 
                column_name: normalized_description
              description: "Percentage of values that are null."
              config:
                severity: warn
                enabled: "{{ var('enable_input_layer_testing', true) | as_bool }}"
                tags: ['tuva_dqi_sev_5', 'dqi']
      - name: modifier_1
        description: '{{ doc("modifier_1") }}'
        tests:
          - the_tuva_project.expect_column_to_exist:
              config:
                severity: warn
                enabled: "{{ (var('enable_input_layer_testing', true)) | as_bool }}"
                tags: ['tuva_dqi_sev_1', 'dqi', 'dqi_quality_measures']
          - relationships:
              description: "Procedure modifier should be a valid code set"
              config:
                severity: warn
                enabled: "{{ (var('enable_input_layer_testing', true)) | as_bool }}"
                tags: ['tuva_dqi_sev_4', 'dqi', 'dqi_quality_measures']
              arguments:
                to: ref('terminology__hcpcs_level_2')
                field: hcpcs
      - name: modifier_2
        description: '{{ doc("modifier_2") }}'
        tests:
          - the_tuva_project.expect_column_to_exist:
              config:
                severity: warn
                enabled: "{{ (var('enable_input_layer_testing', true)) | as_bool }}"
                tags: ['tuva_dqi_sev_1', 'dqi', 'dqi_quality_measures']
          - relationships:
              description: "Procedure modifier should be a valid code set"
              config:
                severity: warn
                enabled: "{{ (var('enable_input_layer_testing', true)) | as_bool }}"
                tags: ['tuva_dqi_sev_4', 'dqi', 'dqi_quality_measures']
              arguments:
                to: ref('terminology__hcpcs_level_2')
                field: hcpcs
      - name: modifier_3
        description: '{{ doc("modifier_3") }}'
        tests:
          - the_tuva_project.expect_column_to_exist:
              config:
                severity: warn
                enabled: "{{ (var('enable_input_layer_testing', true)) | as_bool }}"
                tags: ['tuva_dqi_sev_1', 'dqi', 'dqi_quality_measures']
          - relationships:
              description: "Procedure modifier should be a valid code set"
              config:
                severity: warn
                enabled: "{{ (var('enable_input_layer_testing', true)) | as_bool }}"
                tags: ['tuva_dqi_sev_4', 'dqi', 'dqi_quality_measures']
              arguments:
                to: ref('terminology__hcpcs_level_2')
                field: hcpcs
      - name: modifier_4
        description: '{{ doc("modifier_4") }}'
        tests:
          - the_tuva_project.expect_column_to_exist:
              config:
                severity: warn
                enabled: "{{ (var('enable_input_layer_testing', true)) | as_bool }}"
                tags: ['tuva_dqi_sev_1', 'dqi', 'dqi_quality_measures']
          - relationships:
              description: "Procedure modifier should be a valid code set"
              config:
                severity: warn
                enabled: "{{ (var('enable_input_layer_testing', true)) | as_bool }}"
                tags: ['tuva_dqi_sev_4', 'dqi', 'dqi_quality_measures']
              arguments:
                to: ref('terminology__hcpcs_level_2')
                field: hcpcs
      - name: modifier_5
        description: '{{ doc("modifier_5") }}'
        tests:
          - the_tuva_project.expect_column_to_exist:
              config:
                severity: warn
                enabled: "{{ (var('enable_input_layer_testing', true)) | as_bool }}"
                tags: ['tuva_dqi_sev_1', 'dqi', 'dqi_quality_measures']
          - relationships:
              description: "Procedure modifier should be a valid code set"
              config:
                severity: warn
                enabled: "{{ (var('enable_input_layer_testing', true)) | as_bool }}"
                tags: ['tuva_dqi_sev_4', 'dqi', 'dqi_quality_measures']
              arguments:
                to: ref('terminology__hcpcs_level_2')
                field: hcpcs
      - name: practitioner_id
        description: '{{ doc("practitioner_id") }}'
        tests:
          - the_tuva_project.expect_column_to_exist:
              config:
                severity: warn
                enabled: "{{ (var('enable_input_layer_testing', true)) | as_bool }}"
                tags: ['tuva_dqi_sev_1', 'dqi']
          - the_tuva_project.warn_if_null_percentage_above_zero:
              arguments: 
                column_name: practitioner_id
              description: "Percentage of values that are null."
              config:
                severity: warn
                enabled: "{{ var('enable_input_layer_testing', true) | as_bool }}"
                tags: ['tuva_dqi_sev_5', 'dqi']
      - name: data_source
        description: '{{ doc("data_source") }}'
        tests:
          - the_tuva_project.expect_column_to_exist:
              config:
                severity: warn
                enabled: "{{ (var('enable_input_layer_testing', true)) | as_bool }}"
                tags: ['tuva_dqi_sev_1', 'dqi', 'dqi_cms_chronic_conditions']
          - the_tuva_project.warn_if_null_percentage_above_zero:
              arguments: 
                column_name: data_source
              description: "Percentage of values that are null."
              config:
                severity: warn
                enabled: "{{ var('enable_input_layer_testing', true) | as_bool }}"
                tags: ['tuva_dqi_sev_5', 'dqi', 'dqi_cms_chronic_conditions']
      - name: file_name
        description: '{{ doc("file_name") }}'
        tests:
          - the_tuva_project.expect_column_to_exist:
              config:
                severity: warn
                enabled: "{{ (var('enable_input_layer_testing', true)) | as_bool }}"
                tags: ['tuva_dqi_sev_1', 'dqi']
      - name: ingest_datetime
        description: '{{ doc("ingest_datetime") }}'
        tests:
          - the_tuva_project.expect_column_to_exist:
              config:
                severity: warn
                enabled: "{{ (var('enable_input_layer_testing', true)) | as_bool }}"
                tags: ['tuva_dqi_sev_1', 'dqi']
          - the_tuva_project.expect_column_values_to_be_in_type_list:
              config:
                severity: warn
                enabled: "{{ (var('enable_input_layer_testing', true)) | as_bool }}"
                tags: ['tuva_dqi_sev_2', 'dqi']
              arguments:
                column_type_list: [date, datetime, time, timestamp, timestamp_ntz, timestampntz, timestamp_ltz, timestampltz, timestamp_tz, timestamptz, timestamp with time zone, timestamp without time zone, datetime2, datetimeoffset]