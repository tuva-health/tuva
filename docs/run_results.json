{"metadata": {"dbt_schema_version": "https://schemas.getdbt.com/dbt/run-results/v6.json", "dbt_version": "1.9.4", "generated_at": "2025-06-03T19:50:35.460739Z", "invocation_id": "2aa6d0c0-c70d-4955-809c-f7fa35b36ca2", "env": {}}, "results": [{"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:44.647325Z", "completed_at": "2025-06-03T19:49:44.663739Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:44.664044Z", "completed_at": "2025-06-03T19:49:44.664052Z"}], "thread_id": "Thread-4", "execution_time": 0.09144711494445801, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.elementary.dbt_invocations", "compiled": true, "compiled_code": "\n\nselect * from (\n            select\n            \n                \n        cast('this_is_just_a_long_dummy_string' as varchar) as invocation_id\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as varchar) as job_id\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as varchar) as job_name\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as varchar) as job_run_id\n\n,\n                \n        cast('dummy_string' as varchar) as run_started_at\n\n,\n                \n        cast('dummy_string' as varchar) as run_completed_at\n\n,\n                \n        cast('dummy_string' as varchar) as generated_at\n\n,\n                cast('2091-02-17' as timestamp) as created_at\n\n,\n                \n        cast('dummy_string' as varchar) as command\n\n,\n                \n        cast('dummy_string' as varchar) as dbt_version\n\n,\n                \n        cast('dummy_string' as varchar) as elementary_version\n\n,\n                \n        cast (True as boolean) as full_refresh\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as varchar) as invocation_vars\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as varchar) as vars\n\n,\n                \n        cast('dummy_string' as varchar) as target_name\n\n,\n                \n        cast('dummy_string' as varchar) as target_database\n\n,\n                \n        cast('dummy_string' as varchar) as target_schema\n\n,\n                \n        cast('dummy_string' as varchar) as target_profile_name\n\n,\n                \n        cast(123456789 as integer) as threads\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as varchar) as selected\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as varchar) as yaml_selector\n\n,\n                \n        cast('dummy_string' as varchar) as project_id\n\n,\n                \n        cast('dummy_string' as varchar) as project_name\n\n,\n                \n        cast('dummy_string' as varchar) as env\n\n,\n                \n        cast('dummy_string' as varchar) as env_id\n\n,\n                \n        cast('dummy_string' as varchar) as cause_category\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as varchar) as cause\n\n,\n                \n        cast('dummy_string' as varchar) as pull_request_id\n\n,\n                \n        cast('dummy_string' as varchar) as git_sha\n\n,\n                \n        cast('dummy_string' as varchar) as orchestrator\n\n,\n                \n        cast('dummy_string' as varchar) as dbt_user\n\n,\n                \n        cast('dummy_string' as varchar) as job_url\n\n,\n                \n        cast('dummy_string' as varchar) as job_run_url\n\n,\n                \n        cast('dummy_string' as varchar) as account_id\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as varchar) as target_adapter_specific_fields\n\n\n        ) as empty_table\n        where 1 = 0", "relation_name": "tuva.dbt_sarah.dbt_invocations", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:44.618304Z", "completed_at": "2025-06-03T19:49:44.664532Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:44.665563Z", "completed_at": "2025-06-03T19:49:44.665568Z"}], "thread_id": "Thread-3", "execution_time": 0.09318876266479492, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.elementary.dbt_exposures", "compiled": true, "compiled_code": "\n\nselect * from (\n            select\n            \n                \n        cast('dummy_string' as varchar) as unique_id\n\n,\n                \n        cast('dummy_string' as varchar) as name\n\n,\n                \n        cast('dummy_string' as varchar) as maturity\n\n,\n                \n        cast('dummy_string' as varchar) as type\n\n,\n                \n        cast('dummy_string' as varchar) as owner_email\n\n,\n                \n        cast('dummy_string' as varchar) as owner_name\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as varchar) as url\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as varchar) as depends_on_macros\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as varchar) as depends_on_nodes\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as varchar) as depends_on_columns\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as varchar) as description\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as varchar) as tags\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as varchar) as meta\n\n,\n                \n        cast('dummy_string' as varchar) as package_name\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as varchar) as original_path\n\n,\n                \n        cast('dummy_string' as varchar) as path\n\n,\n                \n        cast('dummy_string' as varchar) as generated_at\n\n,\n                \n        cast('dummy_string' as varchar) as metadata_hash\n\n,\n                \n        cast('dummy_string' as varchar) as label\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as varchar) as raw_queries\n\n\n        ) as empty_table\n        where 1 = 0", "relation_name": "tuva.dbt_sarah.dbt_exposures", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:44.586548Z", "completed_at": "2025-06-03T19:49:44.664769Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:44.665941Z", "completed_at": "2025-06-03T19:49:44.665946Z"}], "thread_id": "Thread-2", "execution_time": 0.09382200241088867, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.elementary.dbt_columns", "compiled": true, "compiled_code": "\n\nselect * from (\n            select\n            \n                \n        cast('dummy_string' as varchar) as unique_id\n\n,\n                \n        cast('dummy_string' as varchar) as parent_unique_id\n\n,\n                \n        cast('dummy_string' as varchar) as name\n\n,\n                \n        cast('dummy_string' as varchar) as data_type\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as varchar) as tags\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as varchar) as meta\n\n,\n                \n        cast('dummy_string' as varchar) as database_name\n\n,\n                \n        cast('dummy_string' as varchar) as schema_name\n\n,\n                \n        cast('dummy_string' as varchar) as table_name\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as varchar) as description\n\n,\n                \n        cast('dummy_string' as varchar) as resource_type\n\n,\n                \n        cast('dummy_string' as varchar) as generated_at\n\n,\n                \n        cast('dummy_string' as varchar) as metadata_hash\n\n\n        ) as empty_table\n        where 1 = 0", "relation_name": "tuva.dbt_sarah.dbt_columns", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:44.573774Z", "completed_at": "2025-06-03T19:49:44.665266Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:44.666535Z", "completed_at": "2025-06-03T19:49:44.666539Z"}], "thread_id": "Thread-1", "execution_time": 0.09471321105957031, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.elementary.data_monitoring_metrics", "compiled": true, "compiled_code": "\n\n\n    \n    \n        \n    \n    select * from (\n            select\n            \n                \n        cast('dummy_string' as varchar) as id\n\n,\n                \n        cast('dummy_string' as varchar) as full_table_name\n\n,\n                \n        cast('dummy_string' as varchar) as column_name\n\n,\n                \n        cast('dummy_string' as varchar) as metric_name\n\n,\n                \n        cast('dummy_string' as varchar) as metric_type\n\n,\n                \n        cast(123456789.99 as float) as metric_value\n\n,\n                \n        cast('dummy_string' as varchar) as source_value\n\n,\n                cast('2091-02-17' as timestamp) as bucket_start\n\n,\n                cast('2091-02-17' as timestamp) as bucket_end\n\n,\n                \n        cast(123456789 as integer) as bucket_duration_hours\n\n,\n                cast('2091-02-17' as timestamp) as updated_at\n\n,\n                \n        cast('dummy_string' as varchar) as dimension\n\n,\n                \n        cast('dummy_string' as varchar) as dimension_value\n\n,\n                \n        cast('dummy_string' as varchar) as metric_properties\n\n,\n                cast('2091-02-17' as timestamp) as created_at\n\n\n        ) as empty_table\n        where 1 = 0\n", "relation_name": "tuva.dbt_sarah.data_monitoring_metrics", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:44.668441Z", "completed_at": "2025-06-03T19:49:44.710200Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:44.713946Z", "completed_at": "2025-06-03T19:49:44.713954Z"}], "thread_id": "Thread-4", "execution_time": 0.04773712158203125, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.elementary.dbt_metrics", "compiled": true, "compiled_code": "\n\nselect * from (\n            select\n            \n                \n        cast('dummy_string' as varchar) as unique_id\n\n,\n                \n        cast('dummy_string' as varchar) as name\n\n,\n                \n        cast('dummy_string' as varchar) as label\n\n,\n                \n        cast('dummy_string' as varchar) as model\n\n,\n                \n        cast('dummy_string' as varchar) as type\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as varchar) as sql\n\n,\n                \n        cast('dummy_string' as varchar) as timestamp\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as varchar) as filters\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as varchar) as time_grains\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as varchar) as dimensions\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as varchar) as depends_on_macros\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as varchar) as depends_on_nodes\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as varchar) as description\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as varchar) as tags\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as varchar) as meta\n\n,\n                \n        cast('dummy_string' as varchar) as package_name\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as varchar) as original_path\n\n,\n                \n        cast('dummy_string' as varchar) as path\n\n,\n                \n        cast('dummy_string' as varchar) as generated_at\n\n,\n                \n        cast('dummy_string' as varchar) as metadata_hash\n\n\n        ) as empty_table\n        where 1 = 0", "relation_name": "tuva.dbt_sarah.dbt_metrics", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:44.679593Z", "completed_at": "2025-06-03T19:49:44.714534Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:44.715331Z", "completed_at": "2025-06-03T19:49:44.715335Z"}], "thread_id": "Thread-3", "execution_time": 0.047472238540649414, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.elementary.dbt_models", "compiled": true, "compiled_code": "\n\nselect * from (\n            select\n            \n                \n        cast('dummy_string' as varchar) as unique_id\n\n,\n                \n        cast('dummy_string' as varchar) as alias\n\n,\n                \n        cast('dummy_string' as varchar) as checksum\n\n,\n                \n        cast('dummy_string' as varchar) as materialization\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as varchar) as tags\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as varchar) as meta\n\n,\n                \n        cast('dummy_string' as varchar) as owner\n\n,\n                \n        cast('dummy_string' as varchar) as database_name\n\n,\n                \n        cast('dummy_string' as varchar) as schema_name\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as varchar) as depends_on_macros\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as varchar) as depends_on_nodes\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as varchar) as description\n\n,\n                \n        cast('dummy_string' as varchar) as name\n\n,\n                \n        cast('dummy_string' as varchar) as package_name\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as varchar) as original_path\n\n,\n                \n        cast('dummy_string' as varchar) as path\n\n,\n                \n        cast('dummy_string' as varchar) as patch_path\n\n,\n                \n        cast('dummy_string' as varchar) as generated_at\n\n,\n                \n        cast('dummy_string' as varchar) as metadata_hash\n\n,\n                \n        cast('dummy_string' as varchar) as unique_key\n\n,\n                \n        cast('dummy_string' as varchar) as incremental_strategy\n\n\n        ) as empty_table\n        where 1 = 0", "relation_name": "tuva.dbt_sarah.dbt_models", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:44.697584Z", "completed_at": "2025-06-03T19:49:44.715107Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:44.716152Z", "completed_at": "2025-06-03T19:49:44.716156Z"}], "thread_id": "Thread-1", "execution_time": 0.037682294845581055, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.elementary.dbt_seeds", "compiled": true, "compiled_code": "\n\nselect * from (\n            select\n            \n                \n        cast('dummy_string' as varchar) as unique_id\n\n,\n                \n        cast('dummy_string' as varchar) as alias\n\n,\n                \n        cast('dummy_string' as varchar) as checksum\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as varchar) as tags\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as varchar) as meta\n\n,\n                \n        cast('dummy_string' as varchar) as owner\n\n,\n                \n        cast('dummy_string' as varchar) as database_name\n\n,\n                \n        cast('dummy_string' as varchar) as schema_name\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as varchar) as description\n\n,\n                \n        cast('dummy_string' as varchar) as name\n\n,\n                \n        cast('dummy_string' as varchar) as package_name\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as varchar) as original_path\n\n,\n                \n        cast('dummy_string' as varchar) as path\n\n,\n                \n        cast('dummy_string' as varchar) as generated_at\n\n,\n                \n        cast('dummy_string' as varchar) as metadata_hash\n\n\n        ) as empty_table\n        where 1 = 0", "relation_name": "tuva.dbt_sarah.dbt_seeds", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:44.691250Z", "completed_at": "2025-06-03T19:49:44.715925Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:44.716948Z", "completed_at": "2025-06-03T19:49:44.716952Z"}], "thread_id": "Thread-2", "execution_time": 0.04879283905029297, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.elementary.dbt_run_results", "compiled": true, "compiled_code": "\n\nselect * from (\n            select\n            \n                \n        cast('this_is_just_a_long_dummy_string' as varchar) as model_execution_id\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as varchar) as unique_id\n\n,\n                \n        cast('dummy_string' as varchar) as invocation_id\n\n,\n                \n        cast('dummy_string' as varchar) as generated_at\n\n,\n                cast('2091-02-17' as timestamp) as created_at\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as varchar) as name\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as varchar) as message\n\n,\n                \n        cast('dummy_string' as varchar) as status\n\n,\n                \n        cast('dummy_string' as varchar) as resource_type\n\n,\n                \n        cast(123456789.99 as float) as execution_time\n\n,\n                \n        cast('dummy_string' as varchar) as execute_started_at\n\n,\n                \n        cast('dummy_string' as varchar) as execute_completed_at\n\n,\n                \n        cast('dummy_string' as varchar) as compile_started_at\n\n,\n                \n        cast('dummy_string' as varchar) as compile_completed_at\n\n,\n                \n        cast(31474836478 as bigint) as rows_affected\n\n,\n                \n        cast (True as boolean) as full_refresh\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as varchar) as compiled_code\n\n,\n                \n        cast(31474836478 as bigint) as failures\n\n,\n                \n        cast('dummy_string' as varchar) as query_id\n\n,\n                \n        cast('dummy_string' as varchar) as thread_id\n\n,\n                \n        cast('dummy_string' as varchar) as materialization\n\n,\n                \n        cast('dummy_string' as varchar) as adapter_response\n\n\n        ) as empty_table\n        where 1 = 0", "relation_name": "tuva.dbt_sarah.dbt_run_results", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:44.717744Z", "completed_at": "2025-06-03T19:49:44.732957Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:44.747505Z", "completed_at": "2025-06-03T19:49:44.747513Z"}], "thread_id": "Thread-4", "execution_time": 0.0318758487701416, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.elementary.dbt_snapshots", "compiled": true, "compiled_code": "\n\nselect * from (\n            select\n            \n                \n        cast('dummy_string' as varchar) as unique_id\n\n,\n                \n        cast('dummy_string' as varchar) as alias\n\n,\n                \n        cast('dummy_string' as varchar) as checksum\n\n,\n                \n        cast('dummy_string' as varchar) as materialization\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as varchar) as tags\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as varchar) as meta\n\n,\n                \n        cast('dummy_string' as varchar) as owner\n\n,\n                \n        cast('dummy_string' as varchar) as database_name\n\n,\n                \n        cast('dummy_string' as varchar) as schema_name\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as varchar) as depends_on_macros\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as varchar) as depends_on_nodes\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as varchar) as description\n\n,\n                \n        cast('dummy_string' as varchar) as name\n\n,\n                \n        cast('dummy_string' as varchar) as package_name\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as varchar) as original_path\n\n,\n                \n        cast('dummy_string' as varchar) as path\n\n,\n                \n        cast('dummy_string' as varchar) as patch_path\n\n,\n                \n        cast('dummy_string' as varchar) as generated_at\n\n,\n                \n        cast('dummy_string' as varchar) as metadata_hash\n\n,\n                \n        cast('dummy_string' as varchar) as unique_key\n\n,\n                \n        cast('dummy_string' as varchar) as incremental_strategy\n\n\n        ) as empty_table\n        where 1 = 0", "relation_name": "tuva.dbt_sarah.dbt_snapshots", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:44.727280Z", "completed_at": "2025-06-03T19:49:44.760738Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:44.761760Z", "completed_at": "2025-06-03T19:49:44.761766Z"}], "thread_id": "Thread-3", "execution_time": 0.04431891441345215, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.elementary.dbt_source_freshness_results", "compiled": true, "compiled_code": "\n\n\n    select * from (\n            select\n            \n                \n        cast('dummy_string' as varchar) as source_freshness_execution_id\n\n,\n                \n        cast('dummy_string' as varchar) as unique_id\n\n,\n                \n        cast('dummy_string' as varchar) as max_loaded_at\n\n,\n                \n        cast('dummy_string' as varchar) as snapshotted_at\n\n,\n                \n        cast('dummy_string' as varchar) as generated_at\n\n,\n                cast('2091-02-17' as timestamp) as created_at\n\n,\n                \n        cast(123456789.99 as float) as max_loaded_at_time_ago_in_s\n\n,\n                \n        cast('dummy_string' as varchar) as status\n\n,\n                \n        cast('dummy_string' as varchar) as error\n\n,\n                \n        cast('dummy_string' as varchar) as compile_started_at\n\n,\n                \n        cast('dummy_string' as varchar) as compile_completed_at\n\n,\n                \n        cast('dummy_string' as varchar) as execute_started_at\n\n,\n                \n        cast('dummy_string' as varchar) as execute_completed_at\n\n,\n                \n        cast('dummy_string' as varchar) as invocation_id\n\n,\n                \n        cast('dummy_string' as varchar) as warn_after\n\n,\n                \n        cast('dummy_string' as varchar) as error_after\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as varchar) as filter\n\n\n        ) as empty_table\n        where 1 = 0\n", "relation_name": "tuva.dbt_sarah.dbt_source_freshness_results", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:44.737175Z", "completed_at": "2025-06-03T19:49:44.761176Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:44.762166Z", "completed_at": "2025-06-03T19:49:44.762170Z"}], "thread_id": "Thread-1", "execution_time": 0.03618931770324707, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.elementary.dbt_sources", "compiled": true, "compiled_code": "\n\nselect * from (\n            select\n            \n                \n        cast('dummy_string' as varchar) as unique_id\n\n,\n                \n        cast('dummy_string' as varchar) as database_name\n\n,\n                \n        cast('dummy_string' as varchar) as schema_name\n\n,\n                \n        cast('dummy_string' as varchar) as source_name\n\n,\n                \n        cast('dummy_string' as varchar) as name\n\n,\n                \n        cast('dummy_string' as varchar) as identifier\n\n,\n                \n        cast('dummy_string' as varchar) as loaded_at_field\n\n,\n                \n        cast('dummy_string' as varchar) as freshness_warn_after\n\n,\n                \n        cast('dummy_string' as varchar) as freshness_error_after\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as varchar) as freshness_filter\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as varchar) as freshness_description\n\n,\n                \n        cast('dummy_string' as varchar) as relation_name\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as varchar) as tags\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as varchar) as meta\n\n,\n                \n        cast('dummy_string' as varchar) as owner\n\n,\n                \n        cast('dummy_string' as varchar) as package_name\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as varchar) as original_path\n\n,\n                \n        cast('dummy_string' as varchar) as path\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as varchar) as source_description\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as varchar) as description\n\n,\n                \n        cast('dummy_string' as varchar) as generated_at\n\n,\n                \n        cast('dummy_string' as varchar) as metadata_hash\n\n\n        ) as empty_table\n        where 1 = 0", "relation_name": "tuva.dbt_sarah.dbt_sources", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:44.747991Z", "completed_at": "2025-06-03T19:49:44.762522Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:44.763466Z", "completed_at": "2025-06-03T19:49:44.763470Z"}], "thread_id": "Thread-2", "execution_time": 0.036826133728027344, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.elementary.dbt_tests", "compiled": true, "compiled_code": "\n\nselect * from (\n            select\n            \n                \n        cast('dummy_string' as varchar) as unique_id\n\n,\n                \n        cast('dummy_string' as varchar) as database_name\n\n,\n                \n        cast('dummy_string' as varchar) as schema_name\n\n,\n                \n        cast('dummy_string' as varchar) as name\n\n,\n                \n        cast('dummy_string' as varchar) as short_name\n\n,\n                \n        cast('dummy_string' as varchar) as alias\n\n,\n                \n        cast('dummy_string' as varchar) as test_column_name\n\n,\n                \n        cast('dummy_string' as varchar) as severity\n\n,\n                \n        cast('dummy_string' as varchar) as warn_if\n\n,\n                \n        cast('dummy_string' as varchar) as error_if\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as varchar) as test_params\n\n,\n                \n        cast('dummy_string' as varchar) as test_namespace\n\n,\n                \n        cast('dummy_string' as varchar) as test_original_name\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as varchar) as tags\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as varchar) as model_tags\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as varchar) as model_owners\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as varchar) as meta\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as varchar) as depends_on_macros\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as varchar) as depends_on_nodes\n\n,\n                \n        cast('dummy_string' as varchar) as parent_model_unique_id\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as varchar) as description\n\n,\n                \n        cast('dummy_string' as varchar) as package_name\n\n,\n                \n        cast('dummy_string' as varchar) as type\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as varchar) as original_path\n\n,\n                \n        cast('dummy_string' as varchar) as path\n\n,\n                \n        cast('dummy_string' as varchar) as generated_at\n\n,\n                \n        cast('dummy_string' as varchar) as metadata_hash\n\n,\n                \n        cast('dummy_string' as varchar) as quality_dimension\n\n\n        ) as empty_table\n        where 1 = 0", "relation_name": "tuva.dbt_sarah.dbt_tests", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:44.763858Z", "completed_at": "2025-06-03T19:49:44.783654Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:44.792430Z", "completed_at": "2025-06-03T19:49:44.792438Z"}], "thread_id": "Thread-4", "execution_time": 0.031066179275512695, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.elementary.elementary_test_results", "compiled": true, "compiled_code": "\n\n\n    select * from (\n            select\n            \n                \n        cast('this_is_just_a_long_dummy_string' as varchar) as id\n\n,\n                \n        cast('dummy_string' as varchar) as data_issue_id\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as varchar) as test_execution_id\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as varchar) as test_unique_id\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as varchar) as model_unique_id\n\n,\n                \n        cast('dummy_string' as varchar) as invocation_id\n\n,\n                cast('2091-02-17' as timestamp) as detected_at\n\n,\n                cast('2091-02-17' as timestamp) as created_at\n\n,\n                \n        cast('dummy_string' as varchar) as database_name\n\n,\n                \n        cast('dummy_string' as varchar) as schema_name\n\n,\n                \n        cast('dummy_string' as varchar) as table_name\n\n,\n                \n        cast('dummy_string' as varchar) as column_name\n\n,\n                \n        cast('dummy_string' as varchar) as test_type\n\n,\n                \n        cast('dummy_string' as varchar) as test_sub_type\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as varchar) as test_results_description\n\n,\n                \n        cast('dummy_string' as varchar) as owners\n\n,\n                \n        cast('dummy_string' as varchar) as tags\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as varchar) as test_results_query\n\n,\n                \n        cast('dummy_string' as varchar) as other\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as varchar) as test_name\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as varchar) as test_params\n\n,\n                \n        cast('dummy_string' as varchar) as severity\n\n,\n                \n        cast('dummy_string' as varchar) as status\n\n,\n                \n        cast(31474836478 as bigint) as failures\n\n,\n                \n        cast('dummy_string' as varchar) as test_short_name\n\n,\n                \n        cast('dummy_string' as varchar) as test_alias\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as varchar) as result_rows\n\n,\n                \n        cast(31474836478 as bigint) as failed_row_count\n\n\n        ) as empty_table\n        where 1 = 0\n", "relation_name": "tuva.dbt_sarah.elementary_test_results", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:44.777714Z", "completed_at": "2025-06-03T19:49:44.799332Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:44.802556Z", "completed_at": "2025-06-03T19:49:44.802563Z"}], "thread_id": "Thread-3", "execution_time": 0.026664018630981445, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.elementary.metadata", "compiled": true, "compiled_code": "\n\nSELECT\n    '0.18.0' as dbt_pkg_version", "relation_name": "tuva.dbt_sarah.metadata", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:44.783939Z", "completed_at": "2025-06-03T19:49:44.802957Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:44.803818Z", "completed_at": "2025-06-03T19:49:44.803823Z"}], "thread_id": "Thread-1", "execution_time": 0.027612924575805664, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.elementary.schema_columns_snapshot", "compiled": true, "compiled_code": "\n\n\n    select * from (\n            select\n            \n                \n        cast('dummy_string' as varchar) as column_state_id\n\n,\n                \n        cast('dummy_string' as varchar) as full_column_name\n\n,\n                \n        cast('dummy_string' as varchar) as full_table_name\n\n,\n                \n        cast('dummy_string' as varchar) as column_name\n\n,\n                \n        cast('dummy_string' as varchar) as data_type\n\n,\n                \n        cast (True as boolean) as is_new\n\n,\n                cast('2091-02-17' as timestamp) as detected_at\n\n,\n                cast('2091-02-17' as timestamp) as created_at\n\n\n        ) as empty_table\n        where 1 = 0\n", "relation_name": "tuva.dbt_sarah.schema_columns_snapshot", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:44.793068Z", "completed_at": "2025-06-03T19:49:44.804273Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:44.805264Z", "completed_at": "2025-06-03T19:49:44.805269Z"}], "thread_id": "Thread-2", "execution_time": 0.027883052825927734, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.input_layer.condition", "compiled": true, "compiled_code": "select\n      cast(null as TEXT ) as condition_id\n    , cast(null as TEXT ) as person_id\n    , cast(null as TEXT ) as patient_id\n    , cast(null as TEXT ) as encounter_id\n    , cast(null as TEXT ) as claim_id\n    , cast(null as date) as recorded_date\n    , cast(null as date) as onset_date\n    , cast(null as date) as resolved_date\n    , cast(null as TEXT ) as status\n    , cast(null as TEXT ) as condition_type\n    , cast(null as TEXT ) as source_code_type\n    , cast(null as TEXT ) as source_code\n    , cast(null as TEXT ) as source_description\n    , cast(null as TEXT ) as normalized_code_type\n    , cast(null as TEXT ) as normalized_code\n    , cast(null as TEXT ) as normalized_description\n    , cast(null as integer ) as condition_rank\n    , cast(null as TEXT ) as present_on_admit_code\n    , cast(null as TEXT ) as present_on_admit_description\n    , cast(null as TEXT ) as data_source\n    , cast(null as TEXT ) as file_name\n    , cast(null as timestamp ) as ingest_datetime\nlimit 0", "relation_name": "tuva.input_layer.condition", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:44.805642Z", "completed_at": "2025-06-03T19:49:44.831608Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:44.839737Z", "completed_at": "2025-06-03T19:49:44.839746Z"}], "thread_id": "Thread-4", "execution_time": 0.03658294677734375, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.input_layer.encounter", "compiled": true, "compiled_code": "select \n      cast(null as TEXT ) as encounter_id\n    , cast(null as TEXT ) as person_id\n    , cast(null as TEXT ) as patient_id\n    , cast(null as TEXT ) as encounter_type\n    , cast(null as date) as encounter_start_date\n    , cast(null as date) as encounter_end_date\n    , cast(null as integer ) as length_of_stay\n    , cast(null as TEXT ) as admit_source_code\n    , cast(null as TEXT ) as admit_source_description\n    , cast(null as TEXT ) as admit_type_code\n    , cast(null as TEXT ) as admit_type_description\n    , cast(null as TEXT ) as discharge_disposition_code\n    , cast(null as TEXT ) as discharge_disposition_description\n    , cast(null as TEXT ) as attending_provider_id\n    , cast(null as TEXT ) as attending_provider_name\n    , cast(null as TEXT ) as facility_id\n    , cast(null as TEXT ) as facility_name\n    , cast(null as TEXT ) as primary_diagnosis_code_type\n    , cast(null as TEXT ) as primary_diagnosis_code\n    , cast(null as TEXT ) as primary_diagnosis_description\n    , cast(null as TEXT ) as drg_code_type\n    , cast(null as TEXT ) as drg_code\n     , cast(null as TEXT ) as drg_description\n    , cast(null as numeric(28,6) ) as paid_amount\n    , cast(null as numeric(28,6) ) as allowed_amount\n    , cast(null as numeric(28,6) ) as charge_amount\n    , cast(null as TEXT ) as data_source\n    , cast(null as TEXT ) as file_name\n    , cast(null as timestamp ) as ingest_datetime\nlimit 0", "relation_name": "tuva.input_layer.encounter", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:44.819268Z", "completed_at": "2025-06-03T19:49:44.840193Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:44.851449Z", "completed_at": "2025-06-03T19:49:44.851458Z"}], "thread_id": "Thread-3", "execution_time": 0.04683184623718262, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.input_layer.lab_result", "compiled": true, "compiled_code": "select\n      cast(null as TEXT ) as lab_result_id\n    , cast(null as TEXT ) as person_id\n    , cast(null as TEXT ) as patient_id\n    , cast(null as TEXT ) as encounter_id\n    , cast(null as TEXT ) as accession_number\n    , cast(null as TEXT ) as source_code_type\n    , cast(null as TEXT ) as source_code\n    , cast(null as TEXT ) as source_description\n    , cast(null as TEXT ) as source_component\n    , cast(null as TEXT ) as normalized_code_type\n    , cast(null as TEXT ) as normalized_code\n    , cast(null as TEXT ) as normalized_description\n    , cast(null as TEXT ) as normalized_component\n    , cast(null as TEXT ) as status\n    , cast(null as TEXT ) as result\n    , cast(null as date) as result_date\n    , cast(null as date) as collection_date\n    , cast(null as TEXT ) as source_units\n    , cast(null as TEXT ) as normalized_units\n    , cast(null as TEXT ) as source_reference_range_low\n    , cast(null as TEXT ) as source_reference_range_high\n    , cast(null as TEXT ) as normalized_reference_range_low\n    , cast(null as TEXT ) as normalized_reference_range_high\n    , cast(null as integer ) as source_abnormal_flag\n    , cast(null as integer ) as normalized_abnormal_flag\n    , cast(null as TEXT ) as specimen\n    , cast(null as TEXT ) as ordering_practitioner_id\n    , cast(null as TEXT ) as data_source\n    , cast(null as TEXT ) as file_name\n    , cast(null as timestamp ) as ingest_datetime\nlimit 0", "relation_name": "tuva.input_layer.lab_result", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:44.832015Z", "completed_at": "2025-06-03T19:49:44.850721Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:44.852253Z", "completed_at": "2025-06-03T19:49:44.852259Z"}], "thread_id": "Thread-1", "execution_time": 0.034390926361083984, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.input_layer.location", "compiled": true, "compiled_code": "select\n      cast(null as TEXT ) as location_id\n    , cast(null as TEXT ) as npi\n    , cast(null as TEXT ) as name\n    , cast(null as TEXT ) as facility_type\n    , cast(null as TEXT ) as parent_organization\n    , cast(null as TEXT ) as address\n    , cast(null as TEXT ) as city\n    , cast(null as TEXT ) as state\n    , cast(null as TEXT ) as zip_code\n    , cast(null as float ) as latitude\n    , cast(null as float ) as longitude\n    , cast(null as TEXT ) as data_source\n    , cast(null as TEXT ) as file_name\n    , cast(null as timestamp ) as ingest_datetime\nlimit 0", "relation_name": "tuva.input_layer.location", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:44.840528Z", "completed_at": "2025-06-03T19:49:44.854278Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:44.855436Z", "completed_at": "2025-06-03T19:49:44.855444Z"}], "thread_id": "Thread-2", "execution_time": 0.024360179901123047, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.input_layer.medication", "compiled": true, "compiled_code": "select \n      cast(null as TEXT ) as medication_id\n    , cast(null as TEXT ) as person_id\n    , cast(null as TEXT ) as patient_id\n    , cast(null as TEXT ) as encounter_id\n    , cast(null as date) as dispensing_date\n    , cast(null as date) as prescribing_date\n    , cast(null as TEXT ) as source_code_type\n    , cast(null as TEXT ) as source_code\n    , cast(null as TEXT ) as source_description\n    , cast(null as TEXT ) as ndc_code\n    , cast(null as TEXT ) as ndc_description\n    , cast(null as TEXT ) as rxnorm_code\n    , cast(null as TEXT ) as rxnorm_description\n    , cast(null as TEXT ) as atc_code\n    , cast(null as TEXT ) as atc_description\n    , cast(null as TEXT ) as route\n    , cast(null as TEXT ) as strength\n    , cast(null as integer ) as quantity\n    , cast(null as TEXT ) as quantity_unit\n    , cast(null as integer ) as days_supply\n    , cast(null as TEXT ) as practitioner_id\n    , cast(null as TEXT ) as data_source\n    , cast(null as TEXT ) as file_name\n    , cast(null as timestamp ) as ingest_datetime\nlimit 0", "relation_name": "tuva.input_layer.medication", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:44.855868Z", "completed_at": "2025-06-03T19:49:44.877635Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:44.878297Z", "completed_at": "2025-06-03T19:49:44.878305Z"}], "thread_id": "Thread-4", "execution_time": 0.025541305541992188, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.input_layer.observation", "compiled": true, "compiled_code": "select\n      cast(null as TEXT ) as observation_id\n    , cast(null as TEXT ) as person_id\n    , cast(null as TEXT ) as patient_id\n    , cast(null as TEXT ) as encounter_id\n    , cast(null as TEXT ) as panel_id\n    , cast(null as date) as observation_date\n    , cast(null as TEXT ) as observation_type\n    , cast(null as TEXT ) as source_code_type\n    , cast(null as TEXT ) as source_code\n    , cast(null as TEXT ) as source_description\n    , cast(null as TEXT ) as normalized_code_type\n    , cast(null as TEXT ) as normalized_code\n    , cast(null as TEXT ) as normalized_description\n    , cast(null as TEXT ) as result\n    , cast(null as TEXT ) as source_units\n    , cast(null as TEXT ) as normalized_units\n    , cast(null as TEXT ) as source_reference_range_low\n    , cast(null as TEXT ) as source_reference_range_high\n    , cast(null as TEXT ) as normalized_reference_range_low\n    , cast(null as TEXT ) as normalized_reference_range_high\n    , cast(null as TEXT ) as data_source\n    , cast(null as TEXT ) as file_name\n    , cast(null as timestamp ) as ingest_datetime\nlimit 0", "relation_name": "tuva.input_layer.observation", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:44.872114Z", "completed_at": "2025-06-03T19:49:44.879227Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:44.888076Z", "completed_at": "2025-06-03T19:49:44.888083Z"}], "thread_id": "Thread-1", "execution_time": 0.032965898513793945, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.input_layer.practitioner", "compiled": true, "compiled_code": "select\n      cast(null as TEXT ) as practitioner_id\n    , cast(null as TEXT ) as npi\n    , cast(null as TEXT ) as first_name\n    , cast(null as TEXT ) as last_name\n    , cast(null as TEXT ) as practice_affiliation\n    , cast(null as TEXT ) as specialty\n    , cast(null as TEXT ) as sub_specialty\n    , cast(null as TEXT ) as data_source\n    , cast(null as TEXT ) as file_name\n    , cast(null as timestamp ) as ingest_datetime\nlimit 0", "relation_name": "tuva.input_layer.practitioner", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:44.864660Z", "completed_at": "2025-06-03T19:49:44.879428Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:44.888467Z", "completed_at": "2025-06-03T19:49:44.888471Z"}], "thread_id": "Thread-3", "execution_time": 0.033644676208496094, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.input_layer.patient", "compiled": true, "compiled_code": "select\n      cast(null as TEXT ) as person_id\n    , cast(null as TEXT ) as patient_id\n    , cast(null as TEXT ) as first_name\n    , cast(null as TEXT ) as last_name\n    , cast(null as TEXT ) as sex\n    , cast(null as TEXT ) as race\n    , cast(null as date) as birth_date\n    , cast(null as date) as death_date\n    , cast(null as integer ) as death_flag\n    , cast(null as TEXT ) as social_security_number\n    , cast(null as TEXT ) as address\n    , cast(null as TEXT ) as city\n    , cast(null as TEXT ) as state\n    , cast(null as TEXT ) as zip_code\n    , cast(null as TEXT ) as county\n    , cast(null as float ) as latitude\n    , cast(null as float ) as longitude\n    , cast(null as TEXT ) as phone\n    , cast(null as TEXT ) as data_source\n    , cast(null as TEXT ) as file_name\n    , cast(null as timestamp ) as ingest_datetime\nlimit 0", "relation_name": "tuva.input_layer.patient", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:44.879732Z", "completed_at": "2025-06-03T19:49:44.889783Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:44.900073Z", "completed_at": "2025-06-03T19:49:44.900081Z"}], "thread_id": "Thread-2", "execution_time": 0.022243738174438477, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.input_layer.procedure", "compiled": true, "compiled_code": "select\n      cast(null as TEXT ) as procedure_id\n    , cast(null as TEXT ) as person_id\n    , cast(null as TEXT ) as patient_id\n    , cast(null as TEXT ) as encounter_id\n    , cast(null as TEXT ) as claim_id\n    , cast(null as date) as procedure_date\n    , cast(null as TEXT ) as source_code_type\n    , cast(null as TEXT ) as source_code\n    , cast(null as TEXT ) as source_description\n    , cast(null as TEXT ) as normalized_code_type\n    , cast(null as TEXT ) as normalized_code\n    , cast(null as TEXT ) as normalized_description\n    , cast(null as TEXT ) as modifier_1\n    , cast(null as TEXT ) as modifier_2\n    , cast(null as TEXT ) as modifier_3\n    , cast(null as TEXT ) as modifier_4\n    , cast(null as TEXT ) as modifier_5\n    , cast(null as TEXT ) as practitioner_id\n    , cast(null as TEXT ) as data_source\n    , cast(null as TEXT ) as file_name\n    , cast(null as timestamp ) as ingest_datetime\nlimit 0", "relation_name": "tuva.input_layer.procedure", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:44.890082Z", "completed_at": "2025-06-03T19:49:44.901311Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:44.937019Z", "completed_at": "2025-06-03T19:49:44.937026Z"}], "thread_id": "Thread-4", "execution_time": 0.04929780960083008, "adapter_response": {}, "message": null, "failures": null, "unique_id": "operation.elementary.elementary-on-run-end-0", "compiled": true, "compiled_code": "\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:44.901602Z", "completed_at": "2025-06-03T19:49:44.957548Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:44.958550Z", "completed_at": "2025-06-03T19:49:44.958558Z"}], "thread_id": "Thread-1", "execution_time": 0.059152841567993164, "adapter_response": {}, "message": null, "failures": null, "unique_id": "operation.elementary.elementary-on-run-start-0", "compiled": true, "compiled_code": "\n  \n  \n\n  \n  \n  \n\n  \n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:44.958947Z", "completed_at": "2025-06-03T19:49:44.963624Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:44.975796Z", "completed_at": "2025-06-03T19:49:44.975811Z"}], "thread_id": "Thread-4", "execution_time": 0.023487091064453125, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.input_layer.eligibility_seed", "compiled": null, "compiled_code": null, "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:44.977580Z", "completed_at": "2025-06-03T19:49:44.982166Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:44.983888Z", "completed_at": "2025-06-03T19:49:44.983896Z"}], "thread_id": "Thread-1", "execution_time": 0.012188911437988281, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.input_layer.lab_result_seed", "compiled": null, "compiled_code": null, "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:44.986932Z", "completed_at": "2025-06-03T19:49:44.990818Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:44.991600Z", "completed_at": "2025-06-03T19:49:44.991608Z"}], "thread_id": "Thread-4", "execution_time": 0.007313251495361328, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.input_layer.medical_claim_seed", "compiled": null, "compiled_code": null, "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:44.992066Z", "completed_at": "2025-06-03T19:49:44.995839Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:44.996503Z", "completed_at": "2025-06-03T19:49:44.996508Z"}], "thread_id": "Thread-1", "execution_time": 0.01011800765991211, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.input_layer.observation_seed", "compiled": null, "compiled_code": null, "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:44.997900Z", "completed_at": "2025-06-03T19:49:45.001177Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:45.001705Z", "completed_at": "2025-06-03T19:49:45.001711Z"}], "thread_id": "Thread-4", "execution_time": 0.0048770904541015625, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.input_layer.pharmacy_claim_seed", "compiled": null, "compiled_code": null, "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:45.002098Z", "completed_at": "2025-06-03T19:49:45.095359Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:45.096552Z", "completed_at": "2025-06-03T19:49:45.096557Z"}], "thread_id": "Thread-1", "execution_time": 0.09897089004516602, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.input_layer.provider_attribution_seed", "compiled": null, "compiled_code": null, "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:45.099307Z", "completed_at": "2025-06-03T19:49:45.102271Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:45.103328Z", "completed_at": "2025-06-03T19:49:45.103334Z"}], "thread_id": "Thread-4", "execution_time": 0.005425930023193359, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.the_tuva_project.ccsr__dxccsr_v2023_1_body_systems", "compiled": null, "compiled_code": null, "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:45.103797Z", "completed_at": "2025-06-03T19:49:45.106836Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:45.107807Z", "completed_at": "2025-06-03T19:49:45.107813Z"}], "thread_id": "Thread-1", "execution_time": 0.008899927139282227, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.the_tuva_project.ccsr__dxccsr_v2023_1_cleaned_map", "compiled": null, "compiled_code": null, "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:45.113392Z", "completed_at": "2025-06-03T19:49:45.116227Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:45.116878Z", "completed_at": "2025-06-03T19:49:45.116883Z"}], "thread_id": "Thread-4", "execution_time": 0.008440017700195312, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.the_tuva_project.ccsr__prccsr_v2023_1_cleaned_map", "compiled": null, "compiled_code": null, "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:45.117420Z", "completed_at": "2025-06-03T19:49:45.120265Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:45.121197Z", "completed_at": "2025-06-03T19:49:45.121202Z"}], "thread_id": "Thread-1", "execution_time": 0.008983850479125977, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.the_tuva_project.chronic_conditions__cms_chronic_conditions_hierarchy", "compiled": null, "compiled_code": null, "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:45.122590Z", "completed_at": "2025-06-03T19:49:45.126104Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:45.126644Z", "completed_at": "2025-06-03T19:49:45.126648Z"}], "thread_id": "Thread-4", "execution_time": 0.005105257034301758, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.the_tuva_project.chronic_conditions__tuva_chronic_conditions_hierarchy", "compiled": null, "compiled_code": null, "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:45.127309Z", "completed_at": "2025-06-03T19:49:45.130130Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:45.130679Z", "completed_at": "2025-06-03T19:49:45.130684Z"}], "thread_id": "Thread-1", "execution_time": 0.008371829986572266, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.the_tuva_project.clinical_concept_library__clinical_concepts", "compiled": null, "compiled_code": null, "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:45.131979Z", "completed_at": "2025-06-03T19:49:45.135318Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:45.135745Z", "completed_at": "2025-06-03T19:49:45.135749Z"}], "thread_id": "Thread-4", "execution_time": 0.004763126373291016, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.the_tuva_project.clinical_concept_library__coding_systems", "compiled": null, "compiled_code": null, "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:45.136086Z", "completed_at": "2025-06-03T19:49:45.138935Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:45.139428Z", "completed_at": "2025-06-03T19:49:45.139432Z"}], "thread_id": "Thread-1", "execution_time": 0.0077800750732421875, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.the_tuva_project.clinical_concept_library__value_set_members", "compiled": null, "compiled_code": null, "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:45.140722Z", "completed_at": "2025-06-03T19:49:45.143563Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:45.143985Z", "completed_at": "2025-06-03T19:49:45.143989Z"}], "thread_id": "Thread-4", "execution_time": 0.004256010055541992, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.the_tuva_project.cms_hcc__adjustment_rates", "compiled": null, "compiled_code": null, "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:45.144327Z", "completed_at": "2025-06-03T19:49:45.147797Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:45.148231Z", "completed_at": "2025-06-03T19:49:45.148234Z"}], "thread_id": "Thread-1", "execution_time": 0.007800102233886719, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.the_tuva_project.cms_hcc__cpt_hcpcs", "compiled": null, "compiled_code": null, "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:45.149438Z", "completed_at": "2025-06-03T19:49:45.152247Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:45.152656Z", "completed_at": "2025-06-03T19:49:45.152660Z"}], "thread_id": "Thread-4", "execution_time": 0.004117012023925781, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.the_tuva_project.cms_hcc__demographic_factors", "compiled": null, "compiled_code": null, "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:45.152999Z", "completed_at": "2025-06-03T19:49:45.156308Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:45.156758Z", "completed_at": "2025-06-03T19:49:45.156762Z"}], "thread_id": "Thread-1", "execution_time": 0.007584095001220703, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.the_tuva_project.cms_hcc__disabled_interaction_factors", "compiled": null, "compiled_code": null, "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:45.157958Z", "completed_at": "2025-06-03T19:49:45.160769Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:45.161184Z", "completed_at": "2025-06-03T19:49:45.161188Z"}], "thread_id": "Thread-4", "execution_time": 0.004139900207519531, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.the_tuva_project.cms_hcc__disease_factors", "compiled": null, "compiled_code": null, "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:45.161529Z", "completed_at": "2025-06-03T19:49:45.164335Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:45.164865Z", "completed_at": "2025-06-03T19:49:45.164870Z"}], "thread_id": "Thread-1", "execution_time": 0.007188081741333008, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.the_tuva_project.cms_hcc__disease_hierarchy", "compiled": null, "compiled_code": null, "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:45.166124Z", "completed_at": "2025-06-03T19:49:45.169657Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:45.170087Z", "completed_at": "2025-06-03T19:49:45.170091Z"}], "thread_id": "Thread-4", "execution_time": 0.004917144775390625, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.the_tuva_project.cms_hcc__disease_interaction_factors", "compiled": null, "compiled_code": null, "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:45.170430Z", "completed_at": "2025-06-03T19:49:45.173233Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:45.173682Z", "completed_at": "2025-06-03T19:49:45.173686Z"}], "thread_id": "Thread-1", "execution_time": 0.007832050323486328, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.the_tuva_project.cms_hcc__enrollment_interaction_factors", "compiled": null, "compiled_code": null, "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:45.174920Z", "completed_at": "2025-06-03T19:49:45.178395Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:45.178861Z", "completed_at": "2025-06-03T19:49:45.178866Z"}], "thread_id": "Thread-4", "execution_time": 0.004870891571044922, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.the_tuva_project.cms_hcc__icd_10_cm_mappings", "compiled": null, "compiled_code": null, "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:45.179232Z", "completed_at": "2025-06-03T19:49:45.182226Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:45.182800Z", "completed_at": "2025-06-03T19:49:45.182808Z"}], "thread_id": "Thread-1", "execution_time": 0.008215188980102539, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.the_tuva_project.cms_hcc__payment_hcc_count_factors", "compiled": null, "compiled_code": null, "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:45.184394Z", "completed_at": "2025-06-03T19:49:45.187819Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:45.188265Z", "completed_at": "2025-06-03T19:49:45.188269Z"}], "thread_id": "Thread-4", "execution_time": 0.004982709884643555, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.the_tuva_project.data_quality__crosswalk_field_info", "compiled": null, "compiled_code": null, "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:45.188621Z", "completed_at": "2025-06-03T19:49:45.191445Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:45.191901Z", "completed_at": "2025-06-03T19:49:45.191905Z"}], "thread_id": "Thread-1", "execution_time": 0.007825136184692383, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.the_tuva_project.data_quality__crosswalk_field_to_mart", "compiled": null, "compiled_code": null, "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:45.193158Z", "completed_at": "2025-06-03T19:49:45.196221Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:45.196732Z", "completed_at": "2025-06-03T19:49:45.196737Z"}], "thread_id": "Thread-4", "execution_time": 0.004526853561401367, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.the_tuva_project.data_quality__crosswalk_mart_to_outcome_measure", "compiled": null, "compiled_code": null, "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:45.197094Z", "completed_at": "2025-06-03T19:49:45.200685Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:45.201170Z", "completed_at": "2025-06-03T19:49:45.201175Z"}], "thread_id": "Thread-1", "execution_time": 0.008308887481689453, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.the_tuva_project.data_quality__crosswalk_measure_reasonable_ranges", "compiled": null, "compiled_code": null, "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:45.202420Z", "completed_at": "2025-06-03T19:49:45.205242Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:45.205652Z", "completed_at": "2025-06-03T19:49:45.205656Z"}], "thread_id": "Thread-4", "execution_time": 0.0041539669036865234, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.the_tuva_project.data_quality__reference_mart_analytics", "compiled": null, "compiled_code": null, "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:45.205985Z", "completed_at": "2025-06-03T19:49:45.209281Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:45.209771Z", "completed_at": "2025-06-03T19:49:45.209775Z"}], "thread_id": "Thread-1", "execution_time": 0.007622241973876953, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.the_tuva_project.ed_classification__categories", "compiled": null, "compiled_code": null, "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:45.211052Z", "completed_at": "2025-06-03T19:49:45.213980Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:45.214475Z", "completed_at": "2025-06-03T19:49:45.214480Z"}], "thread_id": "Thread-4", "execution_time": 0.004421234130859375, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.the_tuva_project.ed_classification__icd_10_cm_to_ccs", "compiled": null, "compiled_code": null, "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:45.214858Z", "completed_at": "2025-06-03T19:49:45.217843Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:45.218347Z", "completed_at": "2025-06-03T19:49:45.218352Z"}], "thread_id": "Thread-1", "execution_time": 0.0076220035552978516, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.the_tuva_project.ed_classification__johnston_icd10", "compiled": null, "compiled_code": null, "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:45.219722Z", "completed_at": "2025-06-03T19:49:45.223223Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:45.223665Z", "completed_at": "2025-06-03T19:49:45.223669Z"}], "thread_id": "Thread-4", "execution_time": 0.005014181137084961, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.the_tuva_project.ed_classification__johnston_icd9", "compiled": null, "compiled_code": null, "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:45.224014Z", "completed_at": "2025-06-03T19:49:45.226789Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:45.227253Z", "completed_at": "2025-06-03T19:49:45.227257Z"}], "thread_id": "Thread-1", "execution_time": 0.007818937301635742, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.the_tuva_project.hcc_suspecting__clinical_concepts", "compiled": null, "compiled_code": null, "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:45.228804Z", "completed_at": "2025-06-03T19:49:45.232134Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:45.232564Z", "completed_at": "2025-06-03T19:49:45.232569Z"}], "thread_id": "Thread-4", "execution_time": 0.004992008209228516, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.the_tuva_project.hcc_suspecting__hcc_descriptions", "compiled": null, "compiled_code": null, "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:45.232931Z", "completed_at": "2025-06-03T19:49:45.235794Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:45.236274Z", "completed_at": "2025-06-03T19:49:45.236278Z"}], "thread_id": "Thread-1", "execution_time": 0.007837295532226562, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.the_tuva_project.hcc_suspecting__icd_10_cm_mappings", "compiled": null, "compiled_code": null, "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:45.237520Z", "completed_at": "2025-06-03T19:49:45.240292Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:45.240697Z", "completed_at": "2025-06-03T19:49:45.240701Z"}], "thread_id": "Thread-4", "execution_time": 0.004097938537597656, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.the_tuva_project.pharmacy__rxnorm_generic_available", "compiled": null, "compiled_code": null, "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:45.241027Z", "completed_at": "2025-06-03T19:49:45.244513Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:45.245189Z", "completed_at": "2025-06-03T19:49:45.245194Z"}], "thread_id": "Thread-1", "execution_time": 0.007950067520141602, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.the_tuva_project.pqi__measures", "compiled": null, "compiled_code": null, "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:45.246443Z", "completed_at": "2025-06-03T19:49:45.249271Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:45.249759Z", "completed_at": "2025-06-03T19:49:45.249765Z"}], "thread_id": "Thread-4", "execution_time": 0.004260063171386719, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.the_tuva_project.pqi__value_sets", "compiled": null, "compiled_code": null, "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:45.250116Z", "completed_at": "2025-06-03T19:49:45.253455Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:45.253914Z", "completed_at": "2025-06-03T19:49:45.253918Z"}], "thread_id": "Thread-1", "execution_time": 0.007740020751953125, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.the_tuva_project.quality_measures__concepts", "compiled": null, "compiled_code": null, "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:45.256877Z", "completed_at": "2025-06-03T19:49:45.259752Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:45.260567Z", "completed_at": "2025-06-03T19:49:45.260575Z"}], "thread_id": "Thread-4", "execution_time": 0.006060123443603516, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.the_tuva_project.quality_measures__measures", "compiled": null, "compiled_code": null, "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:45.261616Z", "completed_at": "2025-06-03T19:49:45.264961Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:45.265515Z", "completed_at": "2025-06-03T19:49:45.265520Z"}], "thread_id": "Thread-1", "execution_time": 0.008931159973144531, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.the_tuva_project.quality_measures__value_sets", "compiled": null, "compiled_code": null, "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:45.267489Z", "completed_at": "2025-06-03T19:49:45.270883Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:45.271776Z", "completed_at": "2025-06-03T19:49:45.271784Z"}], "thread_id": "Thread-4", "execution_time": 0.005803108215332031, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.the_tuva_project.readmissions__acute_diagnosis_ccs", "compiled": null, "compiled_code": null, "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:45.272220Z", "completed_at": "2025-06-03T19:49:45.275653Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:45.276746Z", "completed_at": "2025-06-03T19:49:45.276753Z"}], "thread_id": "Thread-1", "execution_time": 0.009837865829467773, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.the_tuva_project.readmissions__acute_diagnosis_icd_10_cm", "compiled": null, "compiled_code": null, "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:45.278286Z", "completed_at": "2025-06-03T19:49:45.282424Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:45.284239Z", "completed_at": "2025-06-03T19:49:45.284247Z"}], "thread_id": "Thread-4", "execution_time": 0.007153034210205078, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.the_tuva_project.readmissions__always_planned_ccs_diagnosis_category", "compiled": null, "compiled_code": null, "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:45.284710Z", "completed_at": "2025-06-03T19:49:45.288549Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:45.289835Z", "completed_at": "2025-06-03T19:49:45.289843Z"}], "thread_id": "Thread-1", "execution_time": 0.012015819549560547, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.the_tuva_project.readmissions__always_planned_ccs_procedure_category", "compiled": null, "compiled_code": null, "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:45.292298Z", "completed_at": "2025-06-03T19:49:45.297316Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:45.299194Z", "completed_at": "2025-06-03T19:49:45.299255Z"}], "thread_id": "Thread-4", "execution_time": 0.009027957916259766, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.the_tuva_project.readmissions__exclusion_ccs_diagnosis_category", "compiled": null, "compiled_code": null, "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:45.300670Z", "completed_at": "2025-06-03T19:49:45.305785Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:45.306802Z", "completed_at": "2025-06-03T19:49:45.306811Z"}], "thread_id": "Thread-1", "execution_time": 0.015390872955322266, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.the_tuva_project.readmissions__icd_10_cm_to_ccs", "compiled": null, "compiled_code": null, "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:45.312428Z", "completed_at": "2025-06-03T19:49:45.316430Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:45.317557Z", "completed_at": "2025-06-03T19:49:45.317589Z"}], "thread_id": "Thread-4", "execution_time": 0.009195566177368164, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.the_tuva_project.readmissions__icd_10_pcs_to_ccs", "compiled": null, "compiled_code": null, "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:45.318571Z", "completed_at": "2025-06-03T19:49:45.323192Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:45.325339Z", "completed_at": "2025-06-03T19:49:45.325351Z"}], "thread_id": "Thread-1", "execution_time": 0.013928890228271484, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.the_tuva_project.readmissions__potentially_planned_ccs_procedure_category", "compiled": null, "compiled_code": null, "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:45.328281Z", "completed_at": "2025-06-03T19:49:45.331793Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:45.332709Z", "completed_at": "2025-06-03T19:49:45.332783Z"}], "thread_id": "Thread-4", "execution_time": 0.0064449310302734375, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.the_tuva_project.readmissions__potentially_planned_icd_10_pcs", "compiled": null, "compiled_code": null, "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:45.333405Z", "completed_at": "2025-06-03T19:49:45.337102Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:45.337689Z", "completed_at": "2025-06-03T19:49:45.337695Z"}], "thread_id": "Thread-1", "execution_time": 0.009760856628417969, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.the_tuva_project.readmissions__specialty_cohort", "compiled": null, "compiled_code": null, "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:45.339106Z", "completed_at": "2025-06-03T19:49:45.343042Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:45.344468Z", "completed_at": "2025-06-03T19:49:45.344477Z"}], "thread_id": "Thread-4", "execution_time": 0.0064640045166015625, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.the_tuva_project.readmissions__surgery_gynecology_cohort", "compiled": null, "compiled_code": null, "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:45.345015Z", "completed_at": "2025-06-03T19:49:45.348911Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:45.349906Z", "completed_at": "2025-06-03T19:49:45.349921Z"}], "thread_id": "Thread-1", "execution_time": 0.011245012283325195, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.the_tuva_project.reference_data__ansi_fips_state", "compiled": null, "compiled_code": null, "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:45.351593Z", "completed_at": "2025-06-03T19:49:45.355122Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:45.360445Z", "completed_at": "2025-06-03T19:49:45.360458Z"}], "thread_id": "Thread-4", "execution_time": 0.010064840316772461, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.the_tuva_project.reference_data__calendar", "compiled": null, "compiled_code": null, "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:45.364881Z", "completed_at": "2025-06-03T19:49:45.369663Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:45.371002Z", "completed_at": "2025-06-03T19:49:45.371010Z"}], "thread_id": "Thread-1", "execution_time": 0.019793033599853516, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.the_tuva_project.reference_data__code_type", "compiled": null, "compiled_code": null, "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:45.377373Z", "completed_at": "2025-06-03T19:49:45.383266Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:45.384534Z", "completed_at": "2025-06-03T19:49:45.384542Z"}], "thread_id": "Thread-4", "execution_time": 0.012977123260498047, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.the_tuva_project.reference_data__fips_county", "compiled": null, "compiled_code": null, "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:45.385329Z", "completed_at": "2025-06-03T19:49:45.390409Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:45.392149Z", "completed_at": "2025-06-03T19:49:45.392158Z"}], "thread_id": "Thread-1", "execution_time": 0.017551183700561523, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.the_tuva_project.reference_data__ssa_fips_state", "compiled": null, "compiled_code": null, "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:45.398910Z", "completed_at": "2025-06-03T19:49:45.403494Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:45.409500Z", "completed_at": "2025-06-03T19:49:45.409509Z"}], "thread_id": "Thread-4", "execution_time": 0.014635086059570312, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.the_tuva_project.service_category__service_categories", "compiled": null, "compiled_code": null, "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:45.404206Z", "completed_at": "2025-06-03T19:49:45.408815Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:45.410920Z", "completed_at": "2025-06-03T19:49:45.410939Z"}], "thread_id": "Thread-1", "execution_time": 0.014400959014892578, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.the_tuva_project.terminology__admit_source", "compiled": null, "compiled_code": null, "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:45.417257Z", "completed_at": "2025-06-03T19:49:45.421669Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:45.430208Z", "completed_at": "2025-06-03T19:49:45.430217Z"}], "thread_id": "Thread-4", "execution_time": 0.016952991485595703, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.the_tuva_project.terminology__admit_type", "compiled": null, "compiled_code": null, "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:45.422124Z", "completed_at": "2025-06-03T19:49:45.429577Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:45.431099Z", "completed_at": "2025-06-03T19:49:45.431106Z"}], "thread_id": "Thread-1", "execution_time": 0.0161590576171875, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.the_tuva_project.terminology__apr_drg", "compiled": null, "compiled_code": null, "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:45.435550Z", "completed_at": "2025-06-03T19:49:45.439760Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:45.446115Z", "completed_at": "2025-06-03T19:49:45.446124Z"}], "thread_id": "Thread-4", "execution_time": 0.013971805572509766, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.the_tuva_project.terminology__bill_type", "compiled": null, "compiled_code": null, "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:45.440214Z", "completed_at": "2025-06-03T19:49:45.445619Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:45.446802Z", "completed_at": "2025-06-03T19:49:45.446810Z"}], "thread_id": "Thread-1", "execution_time": 0.012804031372070312, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.the_tuva_project.terminology__ccs_services_procedures", "compiled": null, "compiled_code": null, "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:45.450049Z", "completed_at": "2025-06-03T19:49:45.455147Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:45.461907Z", "completed_at": "2025-06-03T19:49:45.461934Z"}], "thread_id": "Thread-4", "execution_time": 0.013828754425048828, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.the_tuva_project.terminology__claim_type", "compiled": null, "compiled_code": null, "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:45.455728Z", "completed_at": "2025-06-03T19:49:45.461147Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:45.463077Z", "completed_at": "2025-06-03T19:49:45.463087Z"}], "thread_id": "Thread-1", "execution_time": 0.014316797256469727, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.the_tuva_project.terminology__discharge_disposition", "compiled": null, "compiled_code": null, "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:45.468559Z", "completed_at": "2025-06-03T19:49:45.473678Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:45.479975Z", "completed_at": "2025-06-03T19:49:45.479984Z"}], "thread_id": "Thread-4", "execution_time": 0.014731645584106445, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.the_tuva_project.terminology__encounter_type", "compiled": null, "compiled_code": null, "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:45.475456Z", "completed_at": "2025-06-03T19:49:45.479303Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:45.484478Z", "completed_at": "2025-06-03T19:49:45.484488Z"}], "thread_id": "Thread-1", "execution_time": 0.01861715316772461, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.the_tuva_project.terminology__ethnicity", "compiled": null, "compiled_code": null, "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:45.489113Z", "completed_at": "2025-06-03T19:49:45.494206Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:45.499579Z", "completed_at": "2025-06-03T19:49:45.499590Z"}], "thread_id": "Thread-4", "execution_time": 0.01327824592590332, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.the_tuva_project.terminology__gender", "compiled": null, "compiled_code": null, "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:45.495106Z", "completed_at": "2025-06-03T19:49:45.499055Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:45.500445Z", "completed_at": "2025-06-03T19:49:45.500452Z"}], "thread_id": "Thread-1", "execution_time": 0.01289820671081543, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.the_tuva_project.terminology__hcpcs_level_2", "compiled": null, "compiled_code": null, "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:45.504633Z", "completed_at": "2025-06-03T19:49:45.509287Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:45.514207Z", "completed_at": "2025-06-03T19:49:45.514216Z"}], "thread_id": "Thread-4", "execution_time": 0.011989831924438477, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.the_tuva_project.terminology__hcpcs_to_rbcs", "compiled": null, "compiled_code": null, "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:45.509874Z", "completed_at": "2025-06-03T19:49:45.513594Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:45.514825Z", "completed_at": "2025-06-03T19:49:45.514832Z"}], "thread_id": "Thread-1", "execution_time": 0.011488199234008789, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.the_tuva_project.terminology__icd10_pcs_cms_ontology", "compiled": null, "compiled_code": null, "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:45.518622Z", "completed_at": "2025-06-03T19:49:45.523099Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:45.529100Z", "completed_at": "2025-06-03T19:49:45.529108Z"}], "thread_id": "Thread-4", "execution_time": 0.012156248092651367, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.the_tuva_project.terminology__icd_10_cm", "compiled": null, "compiled_code": null, "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:45.523616Z", "completed_at": "2025-06-03T19:49:45.528651Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:45.529585Z", "completed_at": "2025-06-03T19:49:45.529590Z"}], "thread_id": "Thread-1", "execution_time": 0.012161970138549805, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.the_tuva_project.terminology__icd_10_pcs", "compiled": null, "compiled_code": null, "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:45.531782Z", "completed_at": "2025-06-03T19:49:45.534980Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:45.635771Z", "completed_at": "2025-06-03T19:49:45.635778Z"}], "thread_id": "Thread-4", "execution_time": 0.10518479347229004, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.the_tuva_project.terminology__icd_9_cm", "compiled": null, "compiled_code": null, "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:45.535291Z", "completed_at": "2025-06-03T19:49:45.635462Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:45.636761Z", "completed_at": "2025-06-03T19:49:45.636767Z"}], "thread_id": "Thread-1", "execution_time": 0.10579895973205566, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.the_tuva_project.terminology__icd_9_pcs", "compiled": null, "compiled_code": null, "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:45.640159Z", "completed_at": "2025-06-03T19:49:45.643214Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:45.647302Z", "completed_at": "2025-06-03T19:49:45.647310Z"}], "thread_id": "Thread-4", "execution_time": 0.008666038513183594, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.the_tuva_project.terminology__loinc", "compiled": null, "compiled_code": null, "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:45.643955Z", "completed_at": "2025-06-03T19:49:45.646989Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:45.647732Z", "completed_at": "2025-06-03T19:49:45.647737Z"}], "thread_id": "Thread-1", "execution_time": 0.008464813232421875, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.the_tuva_project.terminology__loinc_deprecated_mapping", "compiled": null, "compiled_code": null, "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:45.650098Z", "completed_at": "2025-06-03T19:49:45.654080Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:45.657642Z", "completed_at": "2025-06-03T19:49:45.657649Z"}], "thread_id": "Thread-4", "execution_time": 0.008975028991699219, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.the_tuva_project.terminology__mdc", "compiled": null, "compiled_code": null, "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:45.654364Z", "completed_at": "2025-06-03T19:49:45.657341Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:45.658058Z", "completed_at": "2025-06-03T19:49:45.658062Z"}], "thread_id": "Thread-1", "execution_time": 0.009100914001464844, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.the_tuva_project.terminology__medicare_dual_eligibility", "compiled": null, "compiled_code": null, "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:45.659854Z", "completed_at": "2025-06-03T19:49:45.663410Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:45.666837Z", "completed_at": "2025-06-03T19:49:45.666842Z"}], "thread_id": "Thread-4", "execution_time": 0.007953882217407227, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.the_tuva_project.terminology__medicare_orec", "compiled": null, "compiled_code": null, "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:45.663646Z", "completed_at": "2025-06-03T19:49:45.666594Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:45.667211Z", "completed_at": "2025-06-03T19:49:45.667215Z"}], "thread_id": "Thread-1", "execution_time": 0.008071184158325195, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.the_tuva_project.terminology__medicare_status", "compiled": null, "compiled_code": null, "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:45.668998Z", "completed_at": "2025-06-03T19:49:45.672548Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:45.682561Z", "completed_at": "2025-06-03T19:49:45.682570Z"}], "thread_id": "Thread-4", "execution_time": 0.014614105224609375, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.the_tuva_project.terminology__ms_drg", "compiled": null, "compiled_code": null, "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:45.673840Z", "completed_at": "2025-06-03T19:49:45.682175Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:45.683072Z", "completed_at": "2025-06-03T19:49:45.683078Z"}], "thread_id": "Thread-1", "execution_time": 0.01478719711303711, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.the_tuva_project.terminology__ms_drg_weights_los", "compiled": null, "compiled_code": null, "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:45.689070Z", "completed_at": "2025-06-03T19:49:45.693474Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:45.701345Z", "completed_at": "2025-06-03T19:49:45.701359Z"}], "thread_id": "Thread-4", "execution_time": 0.01566004753112793, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.the_tuva_project.terminology__ndc", "compiled": null, "compiled_code": null, "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:45.694501Z", "completed_at": "2025-06-03T19:49:45.698800Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:45.708220Z", "completed_at": "2025-06-03T19:49:45.708238Z"}], "thread_id": "Thread-1", "execution_time": 0.023669004440307617, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.the_tuva_project.terminology__nitos", "compiled": null, "compiled_code": null, "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:45.709566Z", "completed_at": "2025-06-03T19:49:45.713244Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:45.716120Z", "completed_at": "2025-06-03T19:49:45.716128Z"}], "thread_id": "Thread-1", "execution_time": 0.007154941558837891, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.the_tuva_project.terminology__payer_type", "compiled": null, "compiled_code": null, "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:45.717311Z", "completed_at": "2025-06-03T19:49:45.725568Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:45.728059Z", "completed_at": "2025-06-03T19:49:45.728069Z"}], "thread_id": "Thread-1", "execution_time": 0.011382102966308594, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.the_tuva_project.terminology__place_of_service", "compiled": null, "compiled_code": null, "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:45.729050Z", "completed_at": "2025-06-03T19:49:45.736148Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:45.737626Z", "completed_at": "2025-06-03T19:49:45.737651Z"}], "thread_id": "Thread-4", "execution_time": 0.03559398651123047, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.the_tuva_project.terminology__other_provider_taxonomy", "compiled": null, "compiled_code": null, "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:45.739614Z", "completed_at": "2025-06-03T19:49:45.743039Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:45.744482Z", "completed_at": "2025-06-03T19:49:45.744491Z"}], "thread_id": "Thread-1", "execution_time": 0.006295919418334961, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.the_tuva_project.terminology__present_on_admission", "compiled": null, "compiled_code": null, "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:45.745039Z", "completed_at": "2025-06-03T19:49:45.749663Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:45.750662Z", "completed_at": "2025-06-03T19:49:45.750670Z"}], "thread_id": "Thread-4", "execution_time": 0.011439800262451172, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.the_tuva_project.terminology__provider", "compiled": null, "compiled_code": null, "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:45.754211Z", "completed_at": "2025-06-03T19:49:45.757583Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:45.758353Z", "completed_at": "2025-06-03T19:49:45.758361Z"}], "thread_id": "Thread-1", "execution_time": 0.006990909576416016, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.the_tuva_project.terminology__race", "compiled": null, "compiled_code": null, "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:45.758859Z", "completed_at": "2025-06-03T19:49:45.762962Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:45.763781Z", "completed_at": "2025-06-03T19:49:45.763790Z"}], "thread_id": "Thread-4", "execution_time": 0.010201692581176758, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.the_tuva_project.terminology__revenue_center", "compiled": null, "compiled_code": null, "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:45.765489Z", "completed_at": "2025-06-03T19:49:45.768952Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:45.769648Z", "completed_at": "2025-06-03T19:49:45.769655Z"}], "thread_id": "Thread-1", "execution_time": 0.005369901657104492, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.the_tuva_project.terminology__rxnorm_brand_generic", "compiled": null, "compiled_code": null, "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:45.770116Z", "completed_at": "2025-06-03T19:49:45.773401Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:45.774169Z", "completed_at": "2025-06-03T19:49:45.774177Z"}], "thread_id": "Thread-4", "execution_time": 0.009044408798217773, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.the_tuva_project.terminology__rxnorm_to_atc", "compiled": null, "compiled_code": null, "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:45.775921Z", "completed_at": "2025-06-03T19:49:45.780333Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:45.780990Z", "completed_at": "2025-06-03T19:49:45.780999Z"}], "thread_id": "Thread-1", "execution_time": 0.006432056427001953, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.the_tuva_project.terminology__snomed_ct", "compiled": null, "compiled_code": null, "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:45.781921Z", "completed_at": "2025-06-03T19:49:45.785235Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:45.785967Z", "completed_at": "2025-06-03T19:49:45.785974Z"}], "thread_id": "Thread-4", "execution_time": 0.010454893112182617, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.the_tuva_project.terminology__snomed_ct_transitive_closures", "compiled": null, "compiled_code": null, "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:45.787416Z", "completed_at": "2025-06-03T19:49:45.791753Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:45.792953Z", "completed_at": "2025-06-03T19:49:45.792962Z"}], "thread_id": "Thread-1", "execution_time": 0.006761074066162109, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.the_tuva_project.terminology__snomed_icd_10_map", "compiled": null, "compiled_code": null, "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:45.794602Z", "completed_at": "2025-06-03T19:49:45.840128Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:45.840567Z", "completed_at": "2025-06-03T19:49:45.840576Z"}], "thread_id": "Thread-4", "execution_time": 0.05350303649902344, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.elementary.job_run_results", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith jobs as (\n  select\n    job_name,\n    job_id,\n    job_run_id,\n    \nmin(cast(run_started_at as timestamp))\n as job_run_started_at,\n    \nmax(cast(run_completed_at as timestamp))\n as job_run_completed_at,\n    \n    datediff(\n        second,\n        \nmin(cast(run_started_at as timestamp))\n,\n        \nmax(cast(run_completed_at as timestamp))\n\n        )\n as job_run_execution_time\n  from tuva.dbt_sarah.dbt_invocations\n  where job_id is not null\n  group by job_name, job_id, job_run_id\n)\n\nselect\n  job_name as name,\n  job_id as id,\n  job_run_id as run_id,\n  job_run_started_at as run_started_at,\n  job_run_completed_at as run_completed_at,\n  job_run_execution_time as run_execution_time\nfrom jobs", "relation_name": "tuva.dbt_sarah.job_run_results", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:45.817417Z", "completed_at": "2025-06-03T19:49:45.841687Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:45.842707Z", "completed_at": "2025-06-03T19:49:45.842716Z"}], "thread_id": "Thread-1", "execution_time": 0.02663707733154297, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.elementary.metrics_anomaly_score", "compiled": true, "compiled_code": "\n\nwith data_monitoring_metrics as (\n\n    select * from tuva.dbt_sarah.data_monitoring_metrics\n\n),\n\ntime_window_aggregation as (\n\n    select\n        id,\n        full_table_name,\n        column_name,\n        dimension,\n        dimension_value,\n        metric_name,\n        metric_value,\n        source_value,\n        bucket_start,\n        bucket_end,\n        bucket_duration_hours,\n        updated_at,\n        avg(metric_value) over (partition by metric_name, full_table_name, column_name order by bucket_start asc rows between unbounded preceding and current row) as training_avg,\n        stddev(metric_value) over (partition by metric_name, full_table_name, column_name order by bucket_start asc rows between unbounded preceding and current row) as training_stddev,\n        count(metric_value) over (partition by metric_name, full_table_name, column_name order by bucket_start asc rows between unbounded preceding and current row) as training_set_size,\n        last_value(bucket_end) over (partition by metric_name, full_table_name, column_name order by bucket_start asc rows between unbounded preceding and current row) training_end,\n        first_value(bucket_end) over (partition by metric_name, full_table_name, column_name order by bucket_start asc rows between unbounded preceding and current row) as training_start\n    from data_monitoring_metrics\n    group by 1,2,3,4,5,6,7,8,9,10,11,12\n),\n\nmetrics_anomaly_score as (\n\n    select\n        id,\n        full_table_name,\n        column_name,\n        dimension,\n        dimension_value,\n        metric_name,\n        case\n            when training_stddev is null then null\n            when training_stddev = 0 then 0\n            else (metric_value - training_avg) / (training_stddev)\n        end as anomaly_score,\n        metric_value as latest_metric_value,\n        bucket_start,\n        bucket_end,\n        training_avg,\n        training_stddev,\n        training_start,\n        training_end,\n        training_set_size,\n        max(updated_at) as updated_at\n    from time_window_aggregation\n        where\n            metric_value is not null\n            and training_avg is not null\n            and bucket_end >= \n    dateadd(day, cast(-7 as integer), cast(date_trunc('day', \n  current_timestamp::timestamp\n) as timestamp))\n\n    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15\n    order by bucket_end desc\n\n\n),\n\nfinal as (\n\n    select\n        id,\n        full_table_name,\n        column_name,\n        dimension,\n        dimension_value,\n        metric_name,\n        anomaly_score,\n        latest_metric_value,\n        bucket_start,\n        bucket_end,\n        training_avg,\n        training_stddev,\n        training_start,\n        training_end,\n        training_set_size,\n        updated_at,\n        case\n            when abs(anomaly_score) > 3 then true\n            else false end\n        as is_anomaly\n    from metrics_anomaly_score\n)\n\nselect * from final", "relation_name": "tuva.dbt_sarah.metrics_anomaly_score", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:45.845596Z", "completed_at": "2025-06-03T19:49:45.861320Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:45.861840Z", "completed_at": "2025-06-03T19:49:45.861849Z"}], "thread_id": "Thread-4", "execution_time": 0.019671201705932617, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.elementary.monitors_runs", "compiled": true, "compiled_code": "\n\nwith data_monitoring_metrics as (\n\n    select * from tuva.dbt_sarah.data_monitoring_metrics\n\n),\n\nmax_bucket_end as (\n\n    select full_table_name,\n           column_name,\n           metric_name,\n           metric_properties,\n           max(bucket_end) as last_bucket_end,\n           min(bucket_end) as first_bucket_end\n    from data_monitoring_metrics\n    group by 1,2,3,4\n\n)\n\nselect * from max_bucket_end", "relation_name": "tuva.dbt_sarah.monitors_runs", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:45.852317Z", "completed_at": "2025-06-03T19:49:45.863180Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:45.868846Z", "completed_at": "2025-06-03T19:49:45.868856Z"}], "thread_id": "Thread-1", "execution_time": 0.01779627799987793, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.elementary.model_run_results", "compiled": true, "compiled_code": "\n\nwith dbt_run_results as (\n    select * from tuva.dbt_sarah.dbt_run_results\n),\n\ndbt_models as (\n    select * from tuva.dbt_sarah.dbt_models\n)\n\nSELECT\n    run_results.model_execution_id,\n    run_results.unique_id,\n    run_results.invocation_id,\n    run_results.query_id,\n    run_results.name,\n    run_results.generated_at,\n    run_results.status,\n    run_results.full_refresh,\n    run_results.message,\n    run_results.execution_time,\n    run_results.execute_started_at,\n    run_results.execute_completed_at,\n    run_results.compile_started_at,\n    run_results.compile_completed_at,\n    run_results.compiled_code,\n    run_results.adapter_response,\n    run_results.thread_id,\n    models.database_name,\n    models.schema_name,\n    coalesce(run_results.materialization, models.materialization) as materialization,\n    models.tags,\n    models.package_name,\n    models.path,\n    models.original_path,\n    models.owner,\n    models.alias,\n    ROW_NUMBER() OVER (PARTITION BY run_results.unique_id ORDER BY run_results.generated_at DESC) AS model_invocation_reverse_index,\n    CASE WHEN FIRST_VALUE(invocation_id) OVER (PARTITION BY \n    date_trunc('day', cast(run_results.generated_at as timestamp))\n ORDER BY run_results.generated_at ASC ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING ) = invocation_id\n              THEN TRUE\n              ELSE FALSE \n         END                                                               AS is_the_first_invocation_of_the_day,\n    CASE WHEN LAST_VALUE(invocation_id) OVER (PARTITION BY \n    date_trunc('day', cast(run_results.generated_at as timestamp))\n ORDER BY run_results.generated_at ASC ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING ) = invocation_id\n              THEN TRUE\n              ELSE FALSE \n         END                                                               AS is_the_last_invocation_of_the_day\n    \nFROM dbt_run_results run_results\nJOIN dbt_models models ON run_results.unique_id = models.unique_id", "relation_name": "tuva.dbt_sarah.model_run_results", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:45.863427Z", "completed_at": "2025-06-03T19:49:45.876631Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:45.877119Z", "completed_at": "2025-06-03T19:49:45.877127Z"}], "thread_id": "Thread-4", "execution_time": 0.014618158340454102, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.elementary.seed_run_results", "compiled": true, "compiled_code": "\n\nwith dbt_run_results as (\n    select * from tuva.dbt_sarah.dbt_run_results\n),\n\ndbt_seeds as (\n    select * from tuva.dbt_sarah.dbt_seeds\n)\n\nSELECT\n    run_results.model_execution_id,\n    run_results.unique_id,\n    run_results.invocation_id,\n    run_results.query_id,\n    run_results.name,\n    run_results.generated_at,\n    run_results.status,\n    run_results.full_refresh,\n    run_results.message,\n    run_results.execution_time,\n    run_results.execute_started_at,\n    run_results.execute_completed_at,\n    run_results.compile_started_at,\n    run_results.compile_completed_at,\n    run_results.compiled_code,\n    run_results.adapter_response,\n    run_results.thread_id,\n    seeds.database_name,\n    seeds.schema_name,\n    run_results.materialization,\n    seeds.tags,\n    seeds.package_name,\n    seeds.path,\n    seeds.original_path,\n    seeds.owner,\n    seeds.alias\nFROM dbt_run_results run_results\nJOIN dbt_seeds seeds ON run_results.unique_id = seeds.unique_id", "relation_name": "tuva.dbt_sarah.seed_run_results", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:45.870558Z", "completed_at": "2025-06-03T19:49:45.878337Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:45.878917Z", "completed_at": "2025-06-03T19:49:45.878924Z"}], "thread_id": "Thread-1", "execution_time": 0.009126901626586914, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.elementary.snapshot_run_results", "compiled": true, "compiled_code": "\n\nwith dbt_run_results as (\n    select * from tuva.dbt_sarah.dbt_run_results\n),\n\ndbt_snapshots as (\n    select * from tuva.dbt_sarah.dbt_snapshots\n)\n\nSELECT\n    run_results.model_execution_id,\n    run_results.unique_id,\n    run_results.invocation_id,\n    run_results.query_id,\n    run_results.name,\n    run_results.generated_at,\n    run_results.status,\n    run_results.full_refresh,\n    run_results.message,\n    run_results.execution_time,\n    run_results.execute_started_at,\n    run_results.execute_completed_at,\n    run_results.compile_started_at,\n    run_results.compile_completed_at,\n    run_results.compiled_code,\n    run_results.adapter_response,\n    run_results.thread_id,\n    snapshots.database_name,\n    snapshots.schema_name,\n    coalesce(run_results.materialization, snapshots.materialization) as materialization,\n    snapshots.tags,\n    snapshots.package_name,\n    snapshots.path,\n    snapshots.original_path,\n    snapshots.owner,\n    snapshots.alias\nFROM dbt_run_results run_results\nJOIN dbt_snapshots snapshots ON run_results.unique_id = snapshots.unique_id", "relation_name": "tuva.dbt_sarah.snapshot_run_results", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:45.879365Z", "completed_at": "2025-06-03T19:49:45.895119Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:45.895650Z", "completed_at": "2025-06-03T19:49:45.895665Z"}], "thread_id": "Thread-4", "execution_time": 0.017781972885131836, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.elementary.alerts_dbt_source_freshness", "compiled": true, "compiled_code": "\n\nwith results as (\n  select * from tuva.dbt_sarah.dbt_source_freshness_results\n),\n\nsources as (\n  select * from tuva.dbt_sarah.dbt_sources\n)\n\nselect\n  results.source_freshness_execution_id as alert_id,\n  results.max_loaded_at,\n  results.snapshotted_at,\n  cast(results.generated_at as timestamp) as detected_at,\n  results.max_loaded_at_time_ago_in_s,\n  results.status,\n  results.error,\n  results.warn_after,\n  results.error_after,\n  results.filter,\n  sources.unique_id,\n  sources.database_name,\n  sources.schema_name,\n  sources.source_name,\n  sources.identifier,\n  sources.tags,\n  sources.meta,\n  sources.owner,\n  sources.package_name,\n  sources.path,\n  -- These columns below are deprecated. We add them since this view\n  -- was used to be loaded into an incremental model with those columns, their names were later changed\n  -- and Databricks doesn't respect `on_schema_change = 'append_new_columns'` properly, as described here -\n  -- https://docs.databricks.com/en/delta/update-schema.html#automatic-schema-evolution-for-delta-lake-merge\n  results.error_after as freshness_error_after,\n  results.warn_after as freshness_warn_after,\n  results.filter as freshness_filter\nfrom results\njoin sources on results.unique_id = sources.unique_id\nwhere True and lower(status) != 'pass'", "relation_name": "tuva.dbt_sarah.alerts_dbt_source_freshness", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:45.887094Z", "completed_at": "2025-06-03T19:49:45.897343Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:45.898356Z", "completed_at": "2025-06-03T19:49:45.898367Z"}], "thread_id": "Thread-1", "execution_time": 0.012185096740722656, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.elementary.dbt_artifacts_hashes", "compiled": true, "compiled_code": "\n\n\n\n\nselect\n  'dbt_models' as artifacts_model,\n   metadata_hash\nfrom tuva.dbt_sarah.dbt_models\n union all \n\nselect\n  'dbt_tests' as artifacts_model,\n   metadata_hash\nfrom tuva.dbt_sarah.dbt_tests\n union all \n\nselect\n  'dbt_sources' as artifacts_model,\n   metadata_hash\nfrom tuva.dbt_sarah.dbt_sources\n union all \n\nselect\n  'dbt_snapshots' as artifacts_model,\n   metadata_hash\nfrom tuva.dbt_sarah.dbt_snapshots\n union all \n\nselect\n  'dbt_metrics' as artifacts_model,\n   metadata_hash\nfrom tuva.dbt_sarah.dbt_metrics\n union all \n\nselect\n  'dbt_exposures' as artifacts_model,\n   metadata_hash\nfrom tuva.dbt_sarah.dbt_exposures\n union all \n\nselect\n  'dbt_seeds' as artifacts_model,\n   metadata_hash\nfrom tuva.dbt_sarah.dbt_seeds\n union all \n\nselect\n  'dbt_columns' as artifacts_model,\n   metadata_hash\nfrom tuva.dbt_sarah.dbt_columns\n\n\norder by metadata_hash", "relation_name": "tuva.dbt_sarah.dbt_artifacts_hashes", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:45.899385Z", "completed_at": "2025-06-03T19:49:45.915726Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:45.916199Z", "completed_at": "2025-06-03T19:49:45.916214Z"}], "thread_id": "Thread-4", "execution_time": 0.0195009708404541, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.elementary.alerts_anomaly_detection", "compiled": true, "compiled_code": "\n\nwith elementary_test_results as (\n    select * from tuva.dbt_sarah.elementary_test_results\n),\n\nalerts_anomaly_detection as (\n    select id as alert_id,\n           data_issue_id,\n           test_execution_id,\n           test_unique_id,\n           model_unique_id,\n           detected_at,\n           database_name,\n           schema_name,\n           table_name,\n           column_name,\n           test_type as alert_type,\n           test_sub_type as sub_type,\n           test_results_description as alert_description,\n           owners,\n           tags,\n           test_results_query as alert_results_query,\n           other,\n           test_name,\n           test_short_name,\n           test_params,\n           severity,\n           status,\n           result_rows\n        from elementary_test_results\n        where True and lower(status) != 'pass'and lower(status) != 'skipped'and test_type = 'anomaly_detection'\n)\n\nselect * from alerts_anomaly_detection", "relation_name": "tuva.dbt_sarah.alerts_anomaly_detection", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:45.909391Z", "completed_at": "2025-06-03T19:49:45.924227Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:45.925406Z", "completed_at": "2025-06-03T19:49:45.925420Z"}], "thread_id": "Thread-1", "execution_time": 0.01692795753479004, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.elementary.alerts_dbt_tests", "compiled": true, "compiled_code": "\n\nwith elementary_test_results as (\n    select * from tuva.dbt_sarah.elementary_test_results\n),\n\nalerts_dbt_tests as (\n    select id as alert_id,\n           data_issue_id,\n           test_execution_id,\n           test_unique_id,\n           model_unique_id,\n           detected_at,\n           database_name,\n           schema_name,\n           table_name,\n           column_name,\n           test_type as alert_type,\n           test_sub_type as sub_type,\n           test_results_description as alert_description,\n           owners,\n           tags,\n           test_results_query as alert_results_query,\n           other,\n           test_name,\n           test_short_name,\n           test_params,\n           severity,\n           status,\n           result_rows\n        from elementary_test_results\n        where True and lower(status) != 'pass'   and lower(status) != 'skipped'  and test_type = 'dbt_test'\n)\n\nselect * from alerts_dbt_tests", "relation_name": "tuva.dbt_sarah.alerts_dbt_tests", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:45.917878Z", "completed_at": "2025-06-03T19:49:45.934303Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:45.934606Z", "completed_at": "2025-06-03T19:49:45.934614Z"}], "thread_id": "Thread-4", "execution_time": 0.01736903190612793, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.elementary.alerts_schema_changes", "compiled": true, "compiled_code": "\n\n\nwith elementary_test_results as (\n    select * from tuva.dbt_sarah.elementary_test_results\n),\n\nalerts_schema_changes as (\n    select id as alert_id,\n           data_issue_id,\n           test_execution_id,\n           test_unique_id,\n           model_unique_id,\n           detected_at,\n           database_name,\n           schema_name,\n           table_name,\n           column_name,\n           test_type as alert_type,\n           test_sub_type as sub_type,\n           test_results_description as alert_description,\n           owners,\n           tags,\n           test_results_query as alert_results_query,\n           other,\n           test_name,\n           test_short_name,\n           test_params,\n           severity,\n           status,\n           result_rows\n        from elementary_test_results\n        where True and lower(status) != 'pass'and lower(status) != 'skipped'and test_type = 'schema_change'\n)\n\nselect * from alerts_schema_changes", "relation_name": "tuva.dbt_sarah.alerts_schema_changes", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:45.926890Z", "completed_at": "2025-06-03T19:49:45.935578Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:45.936005Z", "completed_at": "2025-06-03T19:49:45.936009Z"}], "thread_id": "Thread-1", "execution_time": 0.009707927703857422, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.elementary.test_result_rows", "compiled": true, "compiled_code": "-- indexes are not supported in all warehouses, relevant to postgres only\n\n\n-- depends_on: tuva.dbt_sarah.elementary_test_results\nselect * from (\n            select\n            \n                \n        cast('this_is_just_a_long_dummy_string' as varchar) as elementary_test_results_id\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as varchar) as result_row\n\n,\n                cast('2091-02-17' as timestamp) as detected_at\n\n,\n                cast('2091-02-17' as timestamp) as created_at\n\n\n        ) as empty_table\n        where 1 = 0", "relation_name": "tuva.dbt_sarah.test_result_rows", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:45.936372Z", "completed_at": "2025-06-03T19:49:45.948920Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:45.949652Z", "completed_at": "2025-06-03T19:49:45.949662Z"}], "thread_id": "Thread-4", "execution_time": 0.014441967010498047, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.data_quality__testing_summary", "compiled": true, "compiled_code": "/* TO POPULATE RECORDS IN THIS TABLE, MAKE SURE TO RUN \"dbt test\" command after a full run and seed is completed*/\n\n\nwith latest_test_invocation as (\n    select\n        invocation_id\n        , generated_at\n    from (\n        select\n            invocation_id\n            , generated_at\n            , ROW_NUMBER() over (partition by command\norder by generated_at desc) as row_num\n        from tuva.dbt_sarah.dbt_invocations\n        where command = 'test'\n    ) as ranked_invocations\n    where row_num = 1\n)\n\nselect\n    dt.unique_id\n    , dt.database_name\n    , dt.schema_name\n    , etr.table_name\n    , dt.name as test_name\n    , dt.short_name as test_short_name\n    , dt.test_column_name\n    , dt.severity\n    , dt.warn_if\n    , dt.error_if\n    , dt.test_params\n    , dt.test_original_name\n    , dt.tags as test_tags\n    , dt.description as test_description\n    , dt.package_name as test_package_name\n    , dt.type as test_type\n    , dt.generated_at\n    , dt.metadata_hash\n    , dt.quality_dimension\n    , etr.detected_at\n    , etr.created_at\n    , etr.column_name\n    , etr.test_sub_type\n    , etr.test_results_description\n    , etr.test_results_query\n    , etr.status\n    , etr.failures\n    , etr.failed_row_count\n\n    -- Map test names to categories\n    , case\n\n        when dt.tags like '%\"dqi_usability\"%' then 'usability'\n\n        -- Completeness tests\n        when dt.short_name = 'expect_column_to_exist' then 'completeness'\n        when dt.short_name = 'not_null' then 'completeness'\n\n        -- Validity tests\n        when dt.short_name = 'expect_column_values_to_be_of_type' then 'validity'\n        when dt.short_name = 'relationships' then 'validity'\n        when dt.short_name = 'expect_column_values_to_match_regex_list' then 'validity'\n        when dt.short_name = 'expect_column_values_to_be_in_type_list' then 'validity'\n        when dt.short_name = 'accepted_values' then 'validity'\n        when dt.short_name = 'expect_column_values_to_match_regex' then 'validity'\n        when dt.short_name = 'expect_column_value_lengths_to_be_between' then 'validity'\n        when dt.short_name = 'expect_column_unique_value_count_to_be_between' then 'validity'\n        when dt.short_name = 'expect_column_value_lengths_to_equal' then 'validity'\n        when dt.short_name = 'expect_column_values_to_be_between' then 'validity'\n\n        -- Consistency tests\n        when dt.short_name = 'unique' then 'consistency'\n        when dt.short_name = 'expect_column_pair_values_A_to_be_greater_than_B' then 'consistency'\n        when dt.short_name = 'expect_table_row_count_to_be_between' then 'consistency'\n        when dt.short_name = 'unique_combination_of_columns' then 'consistency'\n\n        -- Default for unmapped tests\n        else 'other'\n    end as test_category\n\n     -- Extract severity level from tags\n    , case\n        when dt.tags like '%\"tuva_dqi_sev_1\"%' then 1\n        when dt.tags like '%\"tuva_dqi_sev_2\"%' then 2\n        when dt.tags like '%\"tuva_dqi_sev_3\"%' then 3\n        when dt.tags like '%\"tuva_dqi_sev_4\"%' then 4\n        when dt.tags like '%\"tuva_dqi_sev_5\"%' then 5\n        else null\n    end as severity_level\n\n    -- Create flag columns for different categories (0 or 1)\n    , case when dt.tags like '%\"dqi_service_categories\"%' then 1 else 0 end as flag_service_categories\n    , case when dt.tags like '%\"dqi_ccsr\"%' then 1 else 0 end as flag_ccsr\n    , case when dt.tags like '%\"dqi_cms_chronic_conditions\"%' then 1 else 0 end as flag_cms_chronic_conditions\n    , case when dt.tags like '%\"dqi_tuva_chronic_conditions\"%' then 1 else 0 end as flag_tuva_chronic_conditions\n    , case when dt.tags like '%\"dqi_cms_hccs\"%' then 1 else 0 end as flag_cms_hccs\n    , case when dt.tags like '%\"dqi_ed_classification\"%' then 1 else 0 end as flag_ed_classification\n    , case when dt.tags like '%\"dqi_financial_pmpm\"%' then 1 else 0 end as flag_financial_pmpm\n    , case when dt.tags like '%\"dqi_quality_measures\"%' then 1 else 0 end as flag_quality_measures\n    , case when dt.tags like '%\"dqi_readmission\"%' then 1 else 0 end as flag_readmission\n\nfrom tuva.dbt_sarah.dbt_tests as dt\nleft outer join tuva.dbt_sarah.elementary_test_results as etr\n    on dt.unique_id = etr.test_unique_id\ninner join latest_test_invocation as lti\n    on etr.invocation_id = lti.invocation_id", "relation_name": "tuva.data_quality.testing_summary", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:45.943711Z", "completed_at": "2025-06-03T19:49:45.953167Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:45.953805Z", "completed_at": "2025-06-03T19:49:45.953812Z"}], "thread_id": "Thread-1", "execution_time": 0.010721921920776367, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.data_quality__condition_claim_id", "compiled": true, "compiled_code": "\n\nselect\n      m.data_source\n    , coalesce(m.recorded_date,cast('1900-01-01' as date)) as source_date\n    , 'CONDITION' as table_name\n    , 'Condition ID' as drill_down_key\n    , coalesce(condition_id, 'NULL') as drill_down_value\n    , 'CLAIM_ID' as field_name\n    , case when m.claim_id is not null then 'valid' else 'null' end as bucket_name\n    , cast(null as TEXT) as invalid_reason\n    , cast(claim_id as TEXT) as field_value\n    , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom tuva.input_layer.condition as m", "relation_name": "tuva.data_quality.condition_claim_id", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:45.954356Z", "completed_at": "2025-06-03T19:49:45.967669Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:45.968060Z", "completed_at": "2025-06-03T19:49:45.968067Z"}], "thread_id": "Thread-4", "execution_time": 0.015549182891845703, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.data_quality__condition_condition_id", "compiled": true, "compiled_code": "\n\nselect\n      m.data_source\n    , coalesce(m.recorded_date,cast('1900-01-01' as date)) as source_date\n    , 'CONDITION' as table_name\n    , 'Condition ID' as drill_down_key\n    , coalesce(condition_id, 'NULL') as drill_down_value\n    , 'CONDITION_ID' as field_name\n    , case when m.condition_id is not null then 'valid' else 'null' end as bucket_name\n    , cast(null as TEXT) as invalid_reason\n    , cast(condition_id as TEXT) as field_value\n    , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom tuva.input_layer.condition as m", "relation_name": "tuva.data_quality.condition_condition_id", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:45.962048Z", "completed_at": "2025-06-03T19:49:45.969242Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:45.969957Z", "completed_at": "2025-06-03T19:49:45.969963Z"}], "thread_id": "Thread-1", "execution_time": 0.008562326431274414, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.data_quality__condition_condition_rank", "compiled": true, "compiled_code": "\n\nselect\n      m.data_source\n    , coalesce(m.recorded_date,cast('1900-01-01' as date)) as source_date\n    , 'CONDITION' as table_name\n    , 'Condition ID' as drill_down_key\n    , coalesce(condition_id, 'NULL') as drill_down_value\n    , 'CONDITION_RANK' as field_name\n    , case when m.condition_rank is not null then 'valid' else 'null' end as bucket_name\n    , cast(null as TEXT) as invalid_reason\n    , cast(condition_rank as TEXT) as field_value\n    , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom tuva.input_layer.condition as m", "relation_name": "tuva.data_quality.condition_condition_rank", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:45.970396Z", "completed_at": "2025-06-03T19:49:45.982987Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:45.983975Z", "completed_at": "2025-06-03T19:49:45.983982Z"}], "thread_id": "Thread-4", "execution_time": 0.015086174011230469, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.data_quality__condition_condition_type", "compiled": true, "compiled_code": "\n\nselect\n      m.data_source\n    , coalesce(m.recorded_date,cast('1900-01-01' as date)) as source_date\n    , 'CONDITION' as table_name\n    , 'Condition ID' as drill_down_key\n    , coalesce(condition_id, 'NULL') as drill_down_value\n    , 'CONDITION_TYPE' as field_name\n    , case when m.condition_type is not null then 'valid' else 'null' end as bucket_name\n    , cast(null as TEXT) as invalid_reason\n    , cast(condition_type as TEXT) as field_value\n    , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom tuva.input_layer.condition as m", "relation_name": "tuva.data_quality.condition_condition_type", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:45.977275Z", "completed_at": "2025-06-03T19:49:45.991054Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:45.991388Z", "completed_at": "2025-06-03T19:49:45.991396Z"}], "thread_id": "Thread-1", "execution_time": 0.014744997024536133, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.data_quality__condition_data_source", "compiled": true, "compiled_code": "\n\nselect\n      m.data_source\n    , coalesce(m.recorded_date,cast('1900-01-01' as date)) as source_date\n    , 'CONDITION' as table_name\n    , 'Condition ID' as drill_down_key\n    , coalesce(condition_id, 'NULL') as drill_down_value\n    , 'DATA_SOURCE' as field_name\n    , case when m.data_source is not null then 'valid' else 'null' end as bucket_name\n    , cast(null as TEXT) as invalid_reason\n    , cast(data_source as TEXT) as field_value\n    , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom tuva.input_layer.condition as m", "relation_name": "tuva.data_quality.condition_data_source", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:45.985366Z", "completed_at": "2025-06-03T19:49:45.992140Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:45.992636Z", "completed_at": "2025-06-03T19:49:45.992640Z"}], "thread_id": "Thread-4", "execution_time": 0.007932901382446289, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.data_quality__condition_encounter_id", "compiled": true, "compiled_code": "\n\nselect\n    m.data_source\n    ,coalesce(m.recorded_date,cast('1900-01-01' as date)) as source_date\n    ,'CONDITION' as table_name\n    ,'Condition ID' as drill_down_key\n    , coalesce(condition_id, 'NULL') as drill_down_value\n    ,'ENCOUNTER_ID' as field_name\n    ,case when m.encounter_id is not null then 'valid' else 'null' end as bucket_name\n    ,cast(null as TEXT) as invalid_reason\n    ,cast(encounter_id as TEXT) as field_value\n    , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom tuva.input_layer.condition as m", "relation_name": "tuva.data_quality.condition_encounter_id", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:45.993487Z", "completed_at": "2025-06-03T19:49:46.007295Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:46.007610Z", "completed_at": "2025-06-03T19:49:46.007618Z"}], "thread_id": "Thread-1", "execution_time": 0.015341997146606445, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.data_quality__condition_normalized_description", "compiled": true, "compiled_code": "\n\nselect\n      m.data_source\n    , coalesce(m.recorded_date,cast('1900-01-01' as date)) as source_date\n    , 'CONDITION' as table_name\n    , 'Condition ID' as drill_down_key\n    , coalesce(condition_id, 'NULL') as drill_down_value\n    , 'NORMALIZED_DESCRIPTION' as field_name\n    , case when m.normalized_description is not null then 'valid' else 'null' end as bucket_name\n    , cast(null as TEXT) as invalid_reason\n    , cast(substring(normalized_description, 1, 255) as TEXT) as field_value\n    , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom tuva.input_layer.condition as m", "relation_name": "tuva.data_quality.condition_normalized_description", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:46.000571Z", "completed_at": "2025-06-03T19:49:46.008657Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:46.009092Z", "completed_at": "2025-06-03T19:49:46.009097Z"}], "thread_id": "Thread-4", "execution_time": 0.009254932403564453, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.data_quality__condition_onset_date", "compiled": true, "compiled_code": "\n\nselect\n    m.data_source\n    ,coalesce(m.recorded_date,cast('1900-01-01' as date)) as source_date\n    ,'CONDITION' as table_name\n    ,'Condition ID' as drill_down_key\n    , coalesce(condition_id, 'NULL') as drill_down_value\n    ,'ONSET_DATE' as field_name\n    ,case\n        when m.onset_date > cast(substring('2025-06-03 19:49:40.396647+00:00',1,10) as date) then 'invalid'\n        when m.onset_date <= cast('1901-01-01' as date) then 'invalid'\n        when m.onset_date > m.resolved_date then 'invalid'\n        when m.onset_date is null then 'null'\n        else 'valid'\n    end as bucket_name\n    ,case\n        when m.onset_date > cast(substring('2025-06-03 19:49:40.396647+00:00',1,10) as date) then 'future'\n        when m.onset_date <= cast('1901-01-01' as date) then 'too old'\n        when m.onset_date < m.resolved_date then 'Onset date after resolved date'\n        else null\n    end as invalid_reason\n    ,cast(onset_date as TEXT) as field_value\n    , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom tuva.input_layer.condition as m", "relation_name": "tuva.data_quality.condition_onset_date", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:46.009463Z", "completed_at": "2025-06-03T19:49:46.022173Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:46.022465Z", "completed_at": "2025-06-03T19:49:46.022472Z"}], "thread_id": "Thread-1", "execution_time": 0.014181137084960938, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.data_quality__condition_patient_id", "compiled": true, "compiled_code": "\n\nselect\n    m.data_source\n    ,coalesce(m.recorded_date,cast('1900-01-01' as date) ) as source_date\n    ,'CONDITION' as table_name\n    ,'Condition ID' as drill_down_key\n    , coalesce(condition_id, 'NULL') as drill_down_value\n    ,'PATIENT_ID' as field_name\n    ,case when m.patient_id is not null then 'valid' else 'null' end as bucket_name\n    ,cast(null as TEXT) as invalid_reason\n    ,cast(patient_id as TEXT) as field_value\n    , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom tuva.input_layer.condition as m", "relation_name": "tuva.data_quality.condition_patient_id", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:46.016768Z", "completed_at": "2025-06-03T19:49:46.023637Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:46.030814Z", "completed_at": "2025-06-03T19:49:46.030821Z"}], "thread_id": "Thread-4", "execution_time": 0.014721155166625977, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.data_quality__condition_present_on_admit_description", "compiled": true, "compiled_code": "\n\nselect\n    m.data_source\n    ,coalesce(m.recorded_date,cast('1900-01-01' as date)) as source_date\n    ,'CONDITION' as table_name\n    ,'Condition ID' as drill_down_key\n    , coalesce(condition_id, 'NULL') as drill_down_value\n    ,'PRESENT_ON_ADMIT_DESCRIPTION' as field_name\n    ,case when m.present_on_admit_description is not null then 'valid' else 'null' end as bucket_name\n    ,cast(null as TEXT) as invalid_reason\n    ,cast(substring(present_on_admit_description, 1, 255) as TEXT) as field_value\n    , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom tuva.input_layer.condition as m", "relation_name": "tuva.data_quality.condition_present_on_admit_description", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:46.023856Z", "completed_at": "2025-06-03T19:49:46.038133Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:46.038373Z", "completed_at": "2025-06-03T19:49:46.038378Z"}], "thread_id": "Thread-1", "execution_time": 0.015260696411132812, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.data_quality__condition_recorded_date", "compiled": true, "compiled_code": "\n\nselect\n    m.data_source\n    ,coalesce(m.recorded_date,cast('1900-01-01' as date)) as source_date\n    ,'CONDITION' as table_name\n    ,'Condition ID' as drill_down_key\n    , coalesce(condition_id, 'NULL') as drill_down_value\n    ,'RECORDED_DATE' as field_name\n    ,case\n        when m.recorded_date > cast(substring('2025-06-03 19:49:40.396647+00:00',1,10) as date) then 'invalid'\n        when m.recorded_date <= cast('1901-01-01' as date) then 'invalid'\n        when m.recorded_date < m.onset_date then 'invalid'\n        when m.recorded_date is null then 'null'\n        else 'valid'\n    end as bucket_name\n    ,case\n        when m.recorded_date > cast(substring('2025-06-03 19:49:40.396647+00:00',1,10) as date) then 'future'\n        when m.recorded_date <= cast('1901-01-01' as date) then 'too old'\n        when m.recorded_date < m.onset_date then 'Recorded date before onset date'\n        else null\n    end as invalid_reason\n    ,cast(recorded_date as TEXT) as field_value\n    , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom tuva.input_layer.condition as m", "relation_name": "tuva.data_quality.condition_recorded_date", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:46.032071Z", "completed_at": "2025-06-03T19:49:46.044570Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:46.044818Z", "completed_at": "2025-06-03T19:49:46.044823Z"}], "thread_id": "Thread-4", "execution_time": 0.01335287094116211, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.data_quality__condition_resolved_date", "compiled": true, "compiled_code": "\n\nselect\n      m.data_source\n    , coalesce(m.recorded_date,cast('1900-01-01' as date)) as source_date\n    , 'CONDITION' as table_name\n    , 'Condition ID' as drill_down_key\n    , coalesce(condition_id, 'NULL') as drill_down_value\n    , 'RESOLVED_DATE' as field_name\n    , case\n        when m.resolved_date > cast(substring('2025-06-03 19:49:40.396647+00:00',1,10) as date) then 'invalid'\n        when m.resolved_date <= cast('1901-01-01' as date) then 'invalid'\n        when m.resolved_date < m.onset_date then 'invalid'\n        when m.resolved_date is null then 'null'\n        else 'valid'\n    end as bucket_name\n    , case\n        when m.resolved_date > cast(substring('2025-06-03 19:49:40.396647+00:00',1,10) as date) then 'future'\n        when m.resolved_date <= cast('1901-01-01' as date) then 'too old'\n        when m.resolved_date < m.onset_date then 'Resolved date before onset date'\n        else null\n    end as invalid_reason\n    , cast(resolved_date as TEXT) as field_value\n    , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom tuva.input_layer.condition as m", "relation_name": "tuva.data_quality.condition_resolved_date", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:46.039410Z", "completed_at": "2025-06-03T19:49:46.045682Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:46.046107Z", "completed_at": "2025-06-03T19:49:46.046111Z"}], "thread_id": "Thread-1", "execution_time": 0.0071868896484375, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.data_quality__condition_source_code", "compiled": true, "compiled_code": "\n\nselect\n    m.data_source\n    ,coalesce(m.recorded_date,cast('1900-01-01' as date)) as source_date\n    ,'CONDITION' as table_name\n    ,'Condition ID' as drill_down_key\n    , coalesce(condition_id, 'NULL') as drill_down_value\n    ,'SOURCE_CODE' as field_name\n    ,case when m.source_code is not null then 'valid' else 'null' end as bucket_name\n    ,cast(null as TEXT) as invalid_reason\n    ,cast(source_code as TEXT) as field_value\n    , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom tuva.input_layer.condition as m", "relation_name": "tuva.data_quality.condition_source_code", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:46.046456Z", "completed_at": "2025-06-03T19:49:46.057715Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:46.057966Z", "completed_at": "2025-06-03T19:49:46.057972Z"}], "thread_id": "Thread-4", "execution_time": 0.012573003768920898, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.data_quality__condition_source_code_type", "compiled": true, "compiled_code": "\n\nselect\n      m.data_source\n    , coalesce(m.recorded_date,cast('1900-01-01' as date)) as source_date\n    , 'CONDITION' as table_name\n    , 'Condition ID' as drill_down_key\n    , coalesce(condition_id, 'NULL') as drill_down_value\n    , 'SOURCE_CODE_TYPE' as field_name\n    , case when m.source_code_type is not null then 'valid' else 'null' end as bucket_name\n    , cast(null as TEXT) as invalid_reason\n    , cast(source_code_type as TEXT) as field_value\n    , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom tuva.input_layer.condition as m", "relation_name": "tuva.data_quality.condition_source_code_type", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:46.052807Z", "completed_at": "2025-06-03T19:49:46.064706Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:46.064971Z", "completed_at": "2025-06-03T19:49:46.064976Z"}], "thread_id": "Thread-1", "execution_time": 0.012743949890136719, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.data_quality__condition_source_description", "compiled": true, "compiled_code": "\n\nselect\n      m.data_source\n    , coalesce(m.recorded_date,cast('1900-01-01' as date)) as source_date\n    , 'CONDITION' as table_name\n    , 'Condition ID' as drill_down_key\n    , coalesce(condition_id, 'NULL') as drill_down_value\n    , 'SOURCE_DESCRIPTION' as field_name\n    , case when m.source_description is not null then 'valid' else 'null' end as bucket_name\n    , cast(null as TEXT) as invalid_reason\n    , cast(substring(source_description, 1, 255) as TEXT) as field_value\n    , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom tuva.input_layer.condition as m", "relation_name": "tuva.data_quality.condition_source_description", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:46.059061Z", "completed_at": "2025-06-03T19:49:46.066279Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:46.070274Z", "completed_at": "2025-06-03T19:49:46.070280Z"}], "thread_id": "Thread-4", "execution_time": 0.01176905632019043, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.data_quality__condition_status", "compiled": true, "compiled_code": "\n\nselect\n      m.data_source\n    , coalesce(m.recorded_date,cast('1900-01-01' as date)) as source_date\n    , 'CONDITION' as table_name\n    , 'Condition ID' as drill_down_key\n    , coalesce(condition_id, 'NULL') as drill_down_value\n    , 'STATUS' as field_name\n    , case when m.status is not null then 'valid' else 'null' end as bucket_name\n    , cast(null as TEXT) as invalid_reason\n    , cast(status as TEXT) as field_value\n    , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom tuva.input_layer.condition as m", "relation_name": "tuva.data_quality.condition_status", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:46.072832Z", "completed_at": "2025-06-03T19:49:46.080122Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:46.086515Z", "completed_at": "2025-06-03T19:49:46.086522Z"}], "thread_id": "Thread-1", "execution_time": 0.020538806915283203, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.input_layer__condition", "compiled": true, "compiled_code": "\n\nselect *\nfrom tuva.input_layer.condition", "relation_name": "tuva.input_layer.input_layer__condition", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:46.080814Z", "completed_at": "2025-06-03T19:49:46.089033Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:46.094461Z", "completed_at": "2025-06-03T19:49:46.094468Z"}], "thread_id": "Thread-4", "execution_time": 0.016228914260864258, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.data_quality__encounter_admit_source_description", "compiled": true, "compiled_code": "\n\nselect\n      m.data_source\n    , coalesce(m.encounter_start_date,cast('1900-01-01' as date)) as source_date\n    , 'ENCOUNTER' as table_name\n    , 'Encounter ID' as drill_down_key\n    , coalesce(encounter_id, 'NULL') as drill_down_value\n    , 'ADMIT_SOURCE_DESCRIPTION' as field_name\n    , case when m.admit_source_description is not null then 'valid' else 'null' end as bucket_name\n    , cast(null as TEXT) as invalid_reason\n    , cast(substring(admit_source_description, 1, 255) as TEXT) as field_value\n    , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom tuva.input_layer.encounter as m", "relation_name": "tuva.data_quality.encounter_admit_source_description", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:46.089234Z", "completed_at": "2025-06-03T19:49:46.100562Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:46.100904Z", "completed_at": "2025-06-03T19:49:46.100911Z"}], "thread_id": "Thread-1", "execution_time": 0.012951135635375977, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.data_quality__encounter_admit_type_description", "compiled": true, "compiled_code": "\n\nselect\n    m.data_source\n    ,coalesce(m.encounter_start_date,cast('1900-01-01' as date)) as source_date\n    ,'ENCOUNTER' as table_name\n    ,'Encounter ID' as drill_down_key\n    , coalesce(encounter_id, 'NULL') as drill_down_value\n    ,'ADMIT_TYPE_DESCRIPTION' as field_name\n    ,case when m.admit_type_description is not null then 'valid' else 'null' end as bucket_name\n    ,cast(null as TEXT) as invalid_reason\n    ,cast(substring(admit_type_description, 1, 255) as TEXT) as field_value\n    , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom tuva.input_layer.encounter as m", "relation_name": "tuva.data_quality.encounter_admit_type_description", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:46.095665Z", "completed_at": "2025-06-03T19:49:46.107994Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:46.108303Z", "completed_at": "2025-06-03T19:49:46.108310Z"}], "thread_id": "Thread-4", "execution_time": 0.013195037841796875, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.data_quality__encounter_allowed_amount", "compiled": true, "compiled_code": "\n\nselect\n      m.data_source\n    , coalesce(m.encounter_start_date,cast('1900-01-01' as date)) as source_date\n    , 'ENCOUNTER' as table_name\n    , 'Encounter ID' as drill_down_key\n    , coalesce(encounter_id, 'NULL') as drill_down_value\n    , 'ALLOWED_AMOUNT' as field_name\n    , case when m.allowed_amount is not null then 'valid' else 'null' end as bucket_name\n    , cast(null as TEXT) as invalid_reason\n    , cast(allowed_amount as TEXT) as field_value\n    , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom tuva.input_layer.encounter as m", "relation_name": "tuva.data_quality.encounter_allowed_amount", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:46.102355Z", "completed_at": "2025-06-03T19:49:46.109508Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:46.114731Z", "completed_at": "2025-06-03T19:49:46.114736Z"}], "thread_id": "Thread-1", "execution_time": 0.013118982315063477, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.data_quality__encounter_charge_amount", "compiled": true, "compiled_code": "\n\nselect\n      m.data_source\n    , coalesce(m.encounter_start_date,cast('1900-01-01' as date)) as source_date\n    , 'ENCOUNTER' as table_name\n    , 'Encounter ID' as drill_down_key\n    , coalesce(encounter_id, 'NULL') as drill_down_value\n    , 'CHARGE_AMOUNT' as field_name\n    , case when m.charge_amount is not null then 'valid' else 'null' end as bucket_name\n    , cast(null as TEXT) as invalid_reason\n    , cast(charge_amount as TEXT) as field_value\n    , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom tuva.input_layer.encounter as m", "relation_name": "tuva.data_quality.encounter_charge_amount", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:46.109721Z", "completed_at": "2025-06-03T19:49:46.121260Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:46.121560Z", "completed_at": "2025-06-03T19:49:46.121568Z"}], "thread_id": "Thread-4", "execution_time": 0.012584924697875977, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.data_quality__encounter_data_source", "compiled": true, "compiled_code": "\n\nselect\n    m.data_source\n    ,coalesce(m.encounter_start_date,cast('1900-01-01' as date)) as source_date\n    ,'ENCOUNTER' as table_name\n    ,'Encounter ID' as drill_down_key\n    , coalesce(encounter_id, 'NULL') as drill_down_value\n    ,'DATA_SOURCE' as field_name\n    ,case when m.data_source is not null then 'valid' else 'null' end as bucket_name\n    ,cast(null as TEXT) as invalid_reason\n    ,cast(data_source as TEXT) as field_value\n    , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom tuva.input_layer.encounter as m", "relation_name": "tuva.data_quality.encounter_data_source", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:46.115957Z", "completed_at": "2025-06-03T19:49:46.122538Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:46.122993Z", "completed_at": "2025-06-03T19:49:46.122998Z"}], "thread_id": "Thread-1", "execution_time": 0.007620096206665039, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.data_quality__encounter_discharge_disposition_description", "compiled": true, "compiled_code": "\n\nselect\n      m.data_source\n    , coalesce(m.encounter_start_date,cast('1900-01-01' as date)) as source_date\n    , 'ENCOUNTER' as table_name\n    , 'Encounter ID' as drill_down_key\n    , coalesce(encounter_id, 'NULL') as drill_down_value\n    , 'DISCHARGE_DISPOSITION_DESCRIPTION' as field_name\n    , case when m.discharge_disposition_description is not null then 'valid' else 'null' end as bucket_name\n    , cast(null as TEXT) as invalid_reason\n    , cast(substring(discharge_disposition_description, 1, 255) as TEXT) as field_value\n    , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom tuva.input_layer.encounter as m", "relation_name": "tuva.data_quality.encounter_discharge_disposition_description", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:46.123371Z", "completed_at": "2025-06-03T19:49:46.135914Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:46.136401Z", "completed_at": "2025-06-03T19:49:46.136407Z"}], "thread_id": "Thread-4", "execution_time": 0.014180898666381836, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.data_quality__encounter_drg_description", "compiled": true, "compiled_code": "\n\nselect\n      m.data_source\n    , coalesce(m.encounter_start_date,cast('1900-01-01' as date)) as source_date\n    , 'ENCOUNTER' as table_name\n    , 'Encounter ID' as drill_down_key\n    , coalesce(encounter_id, 'NULL') as drill_down_value\n    , 'DRG_DESCRIPTION' as field_name\n    , case when m.drg_description is not null then 'valid' else 'null' end as bucket_name\n    , cast(null as TEXT) as invalid_reason\n    , cast(substring(drg_description, 1, 255) as TEXT) as field_value\n    , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom tuva.input_layer.encounter as m", "relation_name": "tuva.data_quality.encounter_drg_description", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:46.129605Z", "completed_at": "2025-06-03T19:49:46.142587Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:46.142830Z", "completed_at": "2025-06-03T19:49:46.142836Z"}], "thread_id": "Thread-1", "execution_time": 0.013823986053466797, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.data_quality__encounter_encounter_end_date", "compiled": true, "compiled_code": "\n\nselect\n      m.data_source\n    , coalesce(m.encounter_start_date,cast('1900-01-01' as date)) as source_date\n    , 'ENCOUNTER' as table_name\n    , 'Encounter ID' as drill_down_key\n    , coalesce(encounter_id, 'NULL') as drill_down_value\n    , 'ENCOUNTER_END_DATE' as field_name\n    , case\n        when m.encounter_end_date > cast(substring('2025-06-03 19:49:40.396647+00:00',1,10) as date) then 'invalid'\n        when m.encounter_end_date <= cast('1901-01-01' as date) then 'invalid'\n        when m.encounter_end_date < m.encounter_start_date then 'invalid'\n        when m.encounter_end_date is null then 'null'\n        else 'valid'\n    end as bucket_name\n    , case\n        when m.encounter_end_date > cast(substring('2025-06-03 19:49:40.396647+00:00',1,10) as date) then 'future'\n        when m.encounter_end_date <= cast('1901-01-01' as date) then 'too old'\n        when m.encounter_end_date < m.encounter_start_date then 'Encounter end date before encounter start date'\n        else null\n    end as invalid_reason\n    , cast(encounter_end_date as TEXT) as field_value\n    , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom tuva.input_layer.encounter as m", "relation_name": "tuva.data_quality.encounter_encounter_end_date", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:46.137577Z", "completed_at": "2025-06-03T19:49:46.143665Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:46.144133Z", "completed_at": "2025-06-03T19:49:46.144138Z"}], "thread_id": "Thread-4", "execution_time": 0.007071018218994141, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.data_quality__encounter_encounter_id", "compiled": true, "compiled_code": "\n\nselect\n      m.data_source\n    , coalesce(m.encounter_start_date,cast('1900-01-01' as date)) as source_date\n    , 'ENCOUNTER' as table_name\n    , 'Encounter ID' as drill_down_key\n    , coalesce(encounter_id, 'NULL') as drill_down_value\n    , 'ENCOUNTER_ID' as field_name\n    , case when m.encounter_id is not null then 'valid' else 'null' end as bucket_name\n    , cast(null as TEXT) as invalid_reason\n    , cast(encounter_id as TEXT) as field_value\n    , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom tuva.input_layer.encounter as m", "relation_name": "tuva.data_quality.encounter_encounter_id", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:46.144496Z", "completed_at": "2025-06-03T19:49:46.244720Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:46.252833Z", "completed_at": "2025-06-03T19:49:46.252842Z"}], "thread_id": "Thread-1", "execution_time": 0.10949516296386719, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.data_quality__encounter_encounter_start_date", "compiled": true, "compiled_code": "\n\nselect\n      m.data_source\n    , coalesce(m.encounter_start_date,cast('1900-01-01' as date)) as source_date\n    , 'ENCOUNTER' as table_name\n    , 'Encounter ID' as drill_down_key\n    , coalesce(encounter_id, 'NULL') as drill_down_value\n    , 'ENCOUNTER_START_DATE' as field_name\n    , case\n        when m.encounter_start_date > cast(substring('2025-06-03 19:49:40.396647+00:00',1,10) as date) then 'invalid'\n        when m.encounter_start_date <= cast('1901-01-01' as date) then 'invalid'\n        when m.encounter_start_date > m.encounter_end_date then 'invalid'\n        when m.encounter_start_date is null then 'null'\n        else 'valid'\n    end as bucket_name\n    , case\n        when m.encounter_start_date > cast(substring('2025-06-03 19:49:40.396647+00:00',1,10) as date) then 'future'\n        when m.encounter_start_date <= cast('1901-01-01' as date) then 'too old'\n        when m.encounter_start_date > m.encounter_end_date then 'Encounter start date after encounter end date'\n        else null\n    end as invalid_reason\n    , cast(encounter_start_date as TEXT) as field_value\n    , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom tuva.input_layer.encounter as m", "relation_name": "tuva.data_quality.encounter_encounter_start_date", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:46.151431Z", "completed_at": "2025-06-03T19:49:46.265843Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:46.266149Z", "completed_at": "2025-06-03T19:49:46.266157Z"}], "thread_id": "Thread-4", "execution_time": 0.11530423164367676, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.data_quality__encounter_length_of_stay", "compiled": true, "compiled_code": "\n\nselect\n    m.data_source\n    ,coalesce(m.encounter_start_date,cast('1900-01-01' as date)) as source_date\n    ,'ENCOUNTER' as table_name\n    ,'Encounter ID' as drill_down_key\n    , coalesce(encounter_id, 'NULL') as drill_down_value\n    ,'LENGTH_OF_STAY' as field_name\n    ,case when m.length_of_stay is not null then 'valid' else 'null' end as bucket_name\n    ,cast(null as TEXT) as invalid_reason\n    ,cast(length_of_stay as TEXT) as field_value\n    , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom tuva.input_layer.encounter as m", "relation_name": "tuva.data_quality.encounter_length_of_stay", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:46.260679Z", "completed_at": "2025-06-03T19:49:46.267071Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:46.267516Z", "completed_at": "2025-06-03T19:49:46.267520Z"}], "thread_id": "Thread-1", "execution_time": 0.008096933364868164, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.data_quality__encounter_paid_amount", "compiled": true, "compiled_code": "\n\nselect\n    m.data_source\n    ,coalesce(m.encounter_start_date,cast('1900-01-01' as date)) as source_date\n    ,'ENCOUNTER' as table_name\n    ,'Encounter ID' as drill_down_key\n    , coalesce(encounter_id, 'NULL') as drill_down_value\n    ,'PAID_AMOUNT' as field_name\n    ,case when m.paid_amount is not null then 'valid' else 'null' end as bucket_name\n    ,cast(null as TEXT) as invalid_reason\n    ,cast(paid_amount as TEXT) as field_value\n    , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom tuva.input_layer.encounter as m", "relation_name": "tuva.data_quality.encounter_paid_amount", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:46.267935Z", "completed_at": "2025-06-03T19:49:46.279813Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:46.280052Z", "completed_at": "2025-06-03T19:49:46.280059Z"}], "thread_id": "Thread-4", "execution_time": 0.013298988342285156, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.data_quality__encounter_patient_id", "compiled": true, "compiled_code": "\n\nselect\n    m.data_source\n    ,coalesce(m.encounter_start_date,cast('1900-01-01' as date)) as source_date\n    ,'ENCOUNTER' as table_name\n    ,'Encounter ID' as drill_down_key\n    , coalesce(encounter_id, 'NULL') as drill_down_value\n    ,'PATIENT_ID' as field_name\n    ,case when m.patient_id is not null then 'valid' else 'null' end as bucket_name\n    ,cast(null as TEXT) as invalid_reason\n    ,cast(patient_id as TEXT) as field_value\n    , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom tuva.input_layer.encounter as m", "relation_name": "tuva.data_quality.encounter_patient_id", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:46.274881Z", "completed_at": "2025-06-03T19:49:46.280952Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:46.281369Z", "completed_at": "2025-06-03T19:49:46.281372Z"}], "thread_id": "Thread-1", "execution_time": 0.0072400569915771484, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.data_quality__encounter_primary_diagnosis_description", "compiled": true, "compiled_code": "\n\nselect\n      m.data_source\n    , coalesce(m.encounter_start_date,cast('1900-01-01' as date)) as source_date\n    , 'ENCOUNTER' as table_name\n    , 'Encounter ID' as drill_down_key\n    , coalesce(encounter_id, 'NULL') as drill_down_value\n    , 'PRIMARY_DIAGNOSIS_DESCRIPTION' as field_name\n    , case when m.primary_diagnosis_description is not null then 'valid' else 'null' end as bucket_name\n    , cast(null as TEXT) as invalid_reason\n    , cast(substring(primary_diagnosis_description, 1, 255) as TEXT) as field_value\n    , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom tuva.input_layer.encounter as m", "relation_name": "tuva.data_quality.encounter_primary_diagnosis_description", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:46.281783Z", "completed_at": "2025-06-03T19:49:46.292333Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:46.292630Z", "completed_at": "2025-06-03T19:49:46.292636Z"}], "thread_id": "Thread-4", "execution_time": 0.01199483871459961, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.input_layer__encounter", "compiled": true, "compiled_code": "\nselect *\nfrom tuva.input_layer.encounter", "relation_name": "tuva.input_layer.input_layer__encounter", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:46.287395Z", "completed_at": "2025-06-03T19:49:46.294380Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:46.301357Z", "completed_at": "2025-06-03T19:49:46.301364Z"}], "thread_id": "Thread-1", "execution_time": 0.014501094818115234, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.data_quality__lab_result_accession_number", "compiled": true, "compiled_code": "\n\n\nselect\n      m.data_source\n    , coalesce(m.result_date,cast('1900-01-01' as date)) as source_date\n    , 'LAB_RESULT' as table_name\n    , 'Lab Result ID' as drill_down_key\n    , coalesce(lab_result_id, 'NULL') as drill_down_value\n    , 'ACCESSION_NUMBER' as field_name\n    , case when m.accession_number is not null then 'valid' else 'null' end as bucket_name\n    , cast(null as TEXT) as invalid_reason\n    , cast(accession_number as TEXT) as field_value\n    , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom tuva.input_layer.lab_result as m", "relation_name": "tuva.data_quality.lab_result_accession_number", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:46.294587Z", "completed_at": "2025-06-03T19:49:46.307559Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:46.307791Z", "completed_at": "2025-06-03T19:49:46.307797Z"}], "thread_id": "Thread-4", "execution_time": 0.01397085189819336, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.data_quality__lab_result_collection_date", "compiled": true, "compiled_code": "\n\n\nselect\n      m.data_source\n    , coalesce(m.result_date,cast('1900-01-01' as date)) as source_date\n    , 'LAB_RESULT' as table_name\n    , 'Lab Result ID' as drill_down_key\n    , coalesce(lab_result_id, 'NULL') as drill_down_value\n    , 'COLLECTION_DATE' as field_name\n    , case\n        when m.collection_date > cast(substring('2025-06-03 19:49:40.396647+00:00',1,10) as date) then 'invalid'\n        when m.collection_date <= cast('1901-01-01' as date) then 'invalid'\n        when m.collection_date > m.result_date then 'invalid'\n        when m.collection_date is null then 'null'\n        else 'valid'\n    end as bucket_name\n    , case\n        when m.collection_date > cast(substring('2025-06-03 19:49:40.396647+00:00',1,10) as date) then 'future'\n        when m.collection_date <= cast('1901-01-01' as date) then 'too old'\n        when m.collection_date > m.result_date then 'Collection date after result date'\n        else null\n    end as invalid_reason\n    , cast(collection_date as TEXT) as field_value\n    , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom tuva.input_layer.lab_result as m", "relation_name": "tuva.data_quality.lab_result_collection_date", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:46.302535Z", "completed_at": "2025-06-03T19:49:46.308439Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:46.308895Z", "completed_at": "2025-06-03T19:49:46.308898Z"}], "thread_id": "Thread-1", "execution_time": 0.0068759918212890625, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.data_quality__lab_result_data_source", "compiled": true, "compiled_code": "\n\n\nselect\n      m.data_source\n    , coalesce(m.result_date,cast('1900-01-01' as date)) as source_date\n    , 'LAB_RESULT' as table_name\n    , 'Lab Result ID' as drill_down_key\n    , coalesce(lab_result_id, 'NULL') as drill_down_value\n    , 'DATA_SOURCE' as field_name\n    , case when m.data_source is not null then 'valid' else 'null' end as bucket_name\n    , cast(null as TEXT) as invalid_reason\n    , cast(data_source as TEXT) as field_value\n    , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom tuva.input_layer.lab_result as m", "relation_name": "tuva.data_quality.lab_result_data_source", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:46.309680Z", "completed_at": "2025-06-03T19:49:46.320886Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:46.321114Z", "completed_at": "2025-06-03T19:49:46.321120Z"}], "thread_id": "Thread-4", "execution_time": 0.012544870376586914, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.data_quality__lab_result_encounter_id", "compiled": true, "compiled_code": "\n\n\nselect\n      m.data_source\n    , coalesce(m.result_date,cast('1900-01-01' as date)) as source_date\n    , 'LAB_RESULT' as table_name\n    , 'Lab Result ID' as drill_down_key\n    , coalesce(lab_result_id, 'NULL') as drill_down_value\n    , 'ENCOUNTER_ID' as field_name\n    , case when m.encounter_id is not null then 'valid' else 'null' end as bucket_name\n    , cast(null as TEXT) as invalid_reason\n    , cast(encounter_id as TEXT) as field_value\n    , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom tuva.input_layer.lab_result as m", "relation_name": "tuva.data_quality.lab_result_encounter_id", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:46.315128Z", "completed_at": "2025-06-03T19:49:46.321757Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:46.322208Z", "completed_at": "2025-06-03T19:49:46.322211Z"}], "thread_id": "Thread-1", "execution_time": 0.007646083831787109, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.data_quality__lab_result_lab_result_id", "compiled": true, "compiled_code": "\n\n\nselect\n      m.data_source\n    , coalesce(m.result_date,cast('1900-01-01' as date)) as source_date\n    , 'LAB_RESULT' as table_name\n    , 'Lab Result ID' as drill_down_key\n    , coalesce(lab_result_id, 'NULL') as drill_down_value\n    , 'LAB_RESULT_ID' as field_name\n    , case when m.lab_result_id is not null then 'valid' else 'null' end as bucket_name\n    , cast(null as TEXT) as invalid_reason\n    , cast(lab_result_id as TEXT) as field_value\n    , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom tuva.input_layer.lab_result as m", "relation_name": "tuva.data_quality.lab_result_lab_result_id", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:46.323008Z", "completed_at": "2025-06-03T19:49:46.334122Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:46.334367Z", "completed_at": "2025-06-03T19:49:46.334373Z"}], "thread_id": "Thread-4", "execution_time": 0.012480974197387695, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.data_quality__lab_result_normalized_abnormal_flag", "compiled": true, "compiled_code": "\n\n\nselect\n      m.data_source\n    , coalesce(m.result_date,cast('1900-01-01' as date)) as source_date\n    , 'LAB_RESULT' as table_name\n    , 'Lab Result ID' as drill_down_key\n    , coalesce(lab_result_id, 'NULL') as drill_down_value\n    , 'NORMALIZED_ABNORMAL_FLAG' as field_name\n    , case when m.normalized_abnormal_flag is not null then 'valid' else 'null' end as bucket_name\n    , cast(null as TEXT) as invalid_reason\n    , cast(normalized_abnormal_flag as TEXT) as field_value\n    , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom tuva.input_layer.lab_result as m", "relation_name": "tuva.data_quality.lab_result_normalized_abnormal_flag", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:46.328596Z", "completed_at": "2025-06-03T19:49:46.334970Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:46.335454Z", "completed_at": "2025-06-03T19:49:46.335458Z"}], "thread_id": "Thread-1", "execution_time": 0.007426738739013672, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.data_quality__lab_result_normalized_description", "compiled": true, "compiled_code": "\n\n\nselect\n      m.data_source\n    , coalesce(m.result_date,cast('1900-01-01' as date)) as source_date\n    , 'LAB_RESULT' as table_name\n    , 'Lab Result ID' as drill_down_key\n    , coalesce(lab_result_id, 'NULL') as drill_down_value\n    , 'NORMALIZED_DESCRIPTION' as field_name\n    , case when m.normalized_description is not null then 'valid' else 'null' end as bucket_name\n    , cast(null as TEXT) as invalid_reason\n    , cast(substring(normalized_description, 1, 255) as TEXT) as field_value\n    , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom tuva.input_layer.lab_result as m", "relation_name": "tuva.data_quality.lab_result_normalized_description", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:46.336240Z", "completed_at": "2025-06-03T19:49:46.347278Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:46.347512Z", "completed_at": "2025-06-03T19:49:46.347517Z"}], "thread_id": "Thread-4", "execution_time": 0.012362003326416016, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.data_quality__lab_result_normalized_reference_range_high", "compiled": true, "compiled_code": "\n\n\nselect\n      m.data_source\n    , coalesce(m.result_date,cast('1900-01-01' as date)) as source_date\n    , 'LAB_RESULT' as table_name\n    , 'Lab Result ID' as drill_down_key\n    , coalesce(lab_result_id, 'NULL') as drill_down_value\n    , 'NORMALIZED_REFERENCE_RANGE_HIGH' as field_name\n    , case when m.normalized_reference_range_high is not null then 'valid' else 'null' end as bucket_name\n    , cast(null as TEXT) as invalid_reason\n    , cast(normalized_reference_range_high as TEXT) as field_value\n    , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom tuva.input_layer.lab_result as m", "relation_name": "tuva.data_quality.lab_result_normalized_reference_range_high", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:46.341679Z", "completed_at": "2025-06-03T19:49:46.348109Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:46.348622Z", "completed_at": "2025-06-03T19:49:46.348626Z"}], "thread_id": "Thread-1", "execution_time": 0.007505893707275391, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.data_quality__lab_result_normalized_reference_range_low", "compiled": true, "compiled_code": "\n\n\nselect\n      m.data_source\n    , coalesce(m.result_date,cast('1900-01-01' as date)) as source_date\n    , 'LAB_RESULT' as table_name\n    , 'Lab Result ID' as drill_down_key\n    , coalesce(lab_result_id, 'NULL') as drill_down_value\n    , 'NORMALIZED_REFERENCE_RANGE_LOW' as field_name\n    , case when m.normalized_reference_range_low is not null then 'valid' else 'null' end as bucket_name\n    , cast(null as TEXT) as invalid_reason\n    , cast(normalized_reference_range_low as TEXT) as field_value\n    , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom tuva.input_layer.lab_result as m", "relation_name": "tuva.data_quality.lab_result_normalized_reference_range_low", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:46.349412Z", "completed_at": "2025-06-03T19:49:46.359824Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:46.360050Z", "completed_at": "2025-06-03T19:49:46.360056Z"}], "thread_id": "Thread-4", "execution_time": 0.011754989624023438, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.data_quality__lab_result_normalized_units", "compiled": true, "compiled_code": "\n\n\nselect\n      m.data_source\n    , coalesce(m.result_date,cast('1900-01-01' as date)) as source_date\n    , 'LAB_RESULT' as table_name\n    , 'Lab Result ID' as drill_down_key\n    , coalesce(lab_result_id, 'NULL') as drill_down_value\n    , 'NORMALIZED_UNITS' as field_name\n    , case when m.normalized_units is not null then 'valid' else 'null' end as bucket_name\n    , cast(null as TEXT) as invalid_reason\n    , cast(normalized_units as TEXT) as field_value\n    , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom tuva.input_layer.lab_result as m", "relation_name": "tuva.data_quality.lab_result_normalized_units", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:46.354856Z", "completed_at": "2025-06-03T19:49:46.360663Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:46.361123Z", "completed_at": "2025-06-03T19:49:46.361127Z"}], "thread_id": "Thread-1", "execution_time": 0.0068171024322509766, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.data_quality__lab_result_patient_id", "compiled": true, "compiled_code": "\n\n\nselect\n      m.data_source\n    , coalesce(m.result_date,cast('1900-01-01' as date)) as source_date\n    , 'LAB_RESULT' as table_name\n    , 'Lab Result ID' as drill_down_key\n    , coalesce(lab_result_id, 'NULL') as drill_down_value\n    , 'PATIENT_ID' as field_name\n    , case when m.patient_id is not null then 'valid' else 'null' end as bucket_name\n    , cast(null as TEXT) as invalid_reason\n    , cast(patient_id as TEXT) as field_value\n    , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom tuva.input_layer.lab_result as m", "relation_name": "tuva.data_quality.lab_result_patient_id", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:46.361928Z", "completed_at": "2025-06-03T19:49:46.374388Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:46.374627Z", "completed_at": "2025-06-03T19:49:46.374634Z"}], "thread_id": "Thread-4", "execution_time": 0.013828754425048828, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.data_quality__lab_result_result", "compiled": true, "compiled_code": "\n\n\nselect\n      m.data_source\n    , coalesce(m.result_date,cast('1900-01-01' as date)) as source_date\n    , 'LAB_RESULT' as table_name\n    , 'Lab Result ID' as drill_down_key\n    , coalesce(lab_result_id, 'NULL') as drill_down_value\n    , 'RESULT' as field_name\n    , case when m.result is not null then 'valid' else 'null' end as bucket_name\n    , cast(null as TEXT) as invalid_reason\n    , cast(result as TEXT) as field_value\n    , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom tuva.input_layer.lab_result as m", "relation_name": "tuva.data_quality.lab_result_result", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:46.368379Z", "completed_at": "2025-06-03T19:49:46.375297Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:46.375748Z", "completed_at": "2025-06-03T19:49:46.375752Z"}], "thread_id": "Thread-1", "execution_time": 0.007955074310302734, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.data_quality__lab_result_result_date", "compiled": true, "compiled_code": "\n\n\nselect\n      m.data_source\n    , coalesce(m.result_date,cast('1900-01-01' as date)) as source_date\n    , 'LAB_RESULT' as table_name\n    , 'Lab Result ID' as drill_down_key\n    , coalesce(lab_result_id, 'NULL') as drill_down_value\n    , 'RESULT_DATE' as field_name\n    , case\n        when m.result_date > cast(substring('2025-06-03 19:49:40.396647+00:00',1,10) as date) then 'invalid'\n        when m.result_date <= cast('1901-01-01' as date) then 'invalid'\n        when m.result_date < m.collection_date then 'invalid'\n        when m.result_date is null then 'null'\n        else 'valid'\n    end as bucket_name\n    , case\n        when m.result_date > cast(substring('2025-06-03 19:49:40.396647+00:00',1,10) as date) then 'future'\n        when m.result_date <= cast('1901-01-01' as date) then 'too old'\n        when m.result_date < m.collection_date then 'Result date before collection date'\n        else null\n    end as invalid_reason\n    , cast(result_date as TEXT) as field_value\n    , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom tuva.input_layer.lab_result as m", "relation_name": "tuva.data_quality.lab_result_result_date", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:46.376529Z", "completed_at": "2025-06-03T19:49:46.388191Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:46.389446Z", "completed_at": "2025-06-03T19:49:46.389454Z"}], "thread_id": "Thread-4", "execution_time": 0.014015913009643555, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.data_quality__lab_result_source_abnormal_flag", "compiled": true, "compiled_code": "\n\n\nselect\n      m.data_source\n    , coalesce(m.result_date,cast('1900-01-01' as date)) as source_date\n    , 'LAB_RESULT' as table_name\n    , 'Lab Result ID' as drill_down_key\n    , coalesce(lab_result_id, 'NULL') as drill_down_value\n    , 'SOURCE_ABNORMAL_FLAG' as field_name\n    , case when m.source_abnormal_flag is not null then 'valid' else 'null' end as bucket_name\n    , cast(null as TEXT) as invalid_reason\n    , cast(source_abnormal_flag as TEXT) as field_value\n    , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom tuva.input_layer.lab_result as m", "relation_name": "tuva.data_quality.lab_result_source_abnormal_flag", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:46.382779Z", "completed_at": "2025-06-03T19:49:46.389834Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:46.390504Z", "completed_at": "2025-06-03T19:49:46.390508Z"}], "thread_id": "Thread-1", "execution_time": 0.008595943450927734, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.data_quality__lab_result_source_code", "compiled": true, "compiled_code": "\n\n\nselect\n      m.data_source\n    , coalesce(m.result_date,cast('1900-01-01' as date)) as source_date\n    , 'LAB_RESULT' as table_name\n    , 'Lab Result ID' as drill_down_key\n    , coalesce(lab_result_id, 'NULL') as drill_down_value\n    , 'SOURCE_CODE' as field_name\n    , case when m.source_code is not null then 'valid' else 'null' end as bucket_name\n    , cast(null as TEXT) as invalid_reason\n    , cast(source_code as TEXT) as field_value\n    , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom tuva.input_layer.lab_result as m", "relation_name": "tuva.data_quality.lab_result_source_code", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:46.392124Z", "completed_at": "2025-06-03T19:49:46.403581Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:46.403850Z", "completed_at": "2025-06-03T19:49:46.403856Z"}], "thread_id": "Thread-4", "execution_time": 0.013016223907470703, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.data_quality__lab_result_source_code_type", "compiled": true, "compiled_code": "\n\n\nselect\n      m.data_source\n    , coalesce(m.result_date,cast('1900-01-01' as date)) as source_date\n    , 'LAB_RESULT' as table_name\n    , 'Lab Result ID' as drill_down_key\n    , coalesce(lab_result_id, 'NULL') as drill_down_value\n    , 'SOURCE_CODE_TYPE' as field_name\n    , case when m.source_code_type is not null then 'valid' else 'null' end as bucket_name\n    , cast(null as TEXT) as invalid_reason\n    , cast(source_code_type as TEXT) as field_value\n    , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom tuva.input_layer.lab_result as m", "relation_name": "tuva.data_quality.lab_result_source_code_type", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:46.398382Z", "completed_at": "2025-06-03T19:49:46.404731Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:46.405255Z", "completed_at": "2025-06-03T19:49:46.405259Z"}], "thread_id": "Thread-1", "execution_time": 0.013471126556396484, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.data_quality__lab_result_source_component", "compiled": true, "compiled_code": "\n\n\nselect\n      m.data_source\n    , coalesce(m.result_date,cast('1900-01-01' as date)) as source_date\n    , 'LAB_RESULT' as table_name\n    , 'Lab Result ID' as drill_down_key\n    , coalesce(lab_result_id, 'NULL') as drill_down_value\n    , 'SOURCE_COMPONENT' as field_name\n    , case when m.source_component is not null then 'valid' else 'null' end as bucket_name\n    , cast(null as TEXT) as invalid_reason\n    , cast(source_component as TEXT) as field_value\n    , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom tuva.input_layer.lab_result as m", "relation_name": "tuva.data_quality.lab_result_source_component", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:46.406082Z", "completed_at": "2025-06-03T19:49:46.417254Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:46.417497Z", "completed_at": "2025-06-03T19:49:46.417503Z"}], "thread_id": "Thread-4", "execution_time": 0.012625932693481445, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.data_quality__lab_result_source_description", "compiled": true, "compiled_code": "\n\n\nselect\n      m.data_source\n    , coalesce(m.result_date,cast('1900-01-01' as date)) as source_date\n    , 'LAB_RESULT' as table_name\n    , 'Lab Result ID' as drill_down_key\n    , coalesce(lab_result_id, 'NULL') as drill_down_value\n    , 'SOURCE_DESCRIPTION' as field_name\n    , case when m.source_description is not null then 'valid' else 'null' end as bucket_name\n    , cast(null as TEXT) as invalid_reason\n    , cast(substring(source_description, 1, 255) as TEXT) as field_value\n    , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom tuva.input_layer.lab_result as m", "relation_name": "tuva.data_quality.lab_result_source_description", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:46.411527Z", "completed_at": "2025-06-03T19:49:46.418122Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:46.418689Z", "completed_at": "2025-06-03T19:49:46.418696Z"}], "thread_id": "Thread-1", "execution_time": 0.007749795913696289, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.data_quality__lab_result_source_reference_range_high", "compiled": true, "compiled_code": "\n\n\nselect\n      m.data_source\n    , coalesce(m.result_date,cast('1900-01-01' as date)) as source_date\n    , 'LAB_RESULT' as table_name\n    , 'Lab Result ID' as drill_down_key\n    , coalesce(lab_result_id, 'NULL') as drill_down_value\n    , 'SOURCE_REFERENCE_RANGE_HIGH' as field_name\n    , case when m.source_reference_range_high is not null then 'valid' else 'null' end as bucket_name\n    , cast(null as TEXT) as invalid_reason\n    , cast(source_reference_range_high as TEXT) as field_value\n    , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom tuva.input_layer.lab_result as m", "relation_name": "tuva.data_quality.lab_result_source_reference_range_high", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:46.419580Z", "completed_at": "2025-06-03T19:49:46.431659Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:46.431955Z", "completed_at": "2025-06-03T19:49:46.431963Z"}], "thread_id": "Thread-4", "execution_time": 0.01362299919128418, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.data_quality__lab_result_source_reference_range_low", "compiled": true, "compiled_code": "\n\n\nselect\n      m.data_source\n    , coalesce(m.result_date,cast('1900-01-01' as date)) as source_date\n    , 'LAB_RESULT' as table_name\n    , 'Lab Result ID' as drill_down_key\n    , coalesce(lab_result_id, 'NULL') as drill_down_value\n    , 'SOURCE_REFERENCE_RANGE_LOW' as field_name\n    , case when m.source_reference_range_low is not null then 'valid' else 'null' end as bucket_name\n    , cast(null as TEXT) as invalid_reason\n    , cast(source_reference_range_low as TEXT) as field_value\n    , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom tuva.input_layer.lab_result as m", "relation_name": "tuva.data_quality.lab_result_source_reference_range_low", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:46.425552Z", "completed_at": "2025-06-03T19:49:46.432634Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:46.433115Z", "completed_at": "2025-06-03T19:49:46.433120Z"}], "thread_id": "Thread-1", "execution_time": 0.008276939392089844, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.data_quality__lab_result_source_units", "compiled": true, "compiled_code": "\n\n\nselect\n    m.data_source\n    ,coalesce(m.result_date,cast('1900-01-01' as date)) as source_date\n    ,'LAB_RESULT' as table_name\n    ,'Lab Result ID' as drill_down_key\n    , coalesce(lab_result_id, 'NULL') as drill_down_value\n    ,'SOURCE_UNITS' as field_name\n    ,case when m.source_units is not null then 'valid' else 'null' end as bucket_name\n    ,cast(null as TEXT) as invalid_reason\n    ,cast(source_units as TEXT) as field_value\n    , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom tuva.input_layer.lab_result as m", "relation_name": "tuva.data_quality.lab_result_source_units", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:46.434096Z", "completed_at": "2025-06-03T19:49:46.445444Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:46.445688Z", "completed_at": "2025-06-03T19:49:46.445693Z"}], "thread_id": "Thread-4", "execution_time": 0.012924909591674805, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.data_quality__lab_result_specimen", "compiled": true, "compiled_code": "\n\n\nselect\n      m.data_source\n    , coalesce(m.result_date,cast('1900-01-01' as date)) as source_date\n    , 'LAB_RESULT' as table_name\n    , 'Lab Result ID' as drill_down_key\n    , coalesce(lab_result_id, 'NULL') as drill_down_value\n    , 'SPECIMEN' as field_name\n    , case when m.specimen is not null then 'valid' else 'null' end as bucket_name\n    , cast(null as TEXT) as invalid_reason\n    , cast(specimen as TEXT) as field_value\n    , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom tuva.input_layer.lab_result as m", "relation_name": "tuva.data_quality.lab_result_specimen", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:46.439763Z", "completed_at": "2025-06-03T19:49:46.446294Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:46.446801Z", "completed_at": "2025-06-03T19:49:46.446805Z"}], "thread_id": "Thread-1", "execution_time": 0.0076410770416259766, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.data_quality__lab_result_status", "compiled": true, "compiled_code": "\n\n\nselect\n      m.data_source\n    , coalesce(m.result_date,cast('1900-01-01' as date)) as source_date\n    , 'LAB_RESULT' as table_name\n    , 'Lab Result ID' as drill_down_key\n    , coalesce(lab_result_id, 'NULL') as drill_down_value\n    , 'STATUS' as field_name\n    , case when m.status is not null then 'valid' else 'null' end as bucket_name\n    , cast(null as TEXT) as invalid_reason\n    , cast(status as TEXT) as field_value\n    , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom tuva.input_layer.lab_result as m", "relation_name": "tuva.data_quality.lab_result_status", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:46.447619Z", "completed_at": "2025-06-03T19:49:46.458080Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:46.458329Z", "completed_at": "2025-06-03T19:49:46.458336Z"}], "thread_id": "Thread-4", "execution_time": 0.011845827102661133, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.input_layer__lab_result", "compiled": true, "compiled_code": "\nselect *\nfrom tuva.input_layer.lab_result", "relation_name": "tuva.input_layer.input_layer__lab_result", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:46.452537Z", "completed_at": "2025-06-03T19:49:46.459079Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:46.460128Z", "completed_at": "2025-06-03T19:49:46.460148Z"}], "thread_id": "Thread-1", "execution_time": 0.008536815643310547, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.data_quality__location_address", "compiled": true, "compiled_code": "\n\n\nselect\n      m.data_source\n    \n        , cast(coalesce(convert_timezone('UTC', current_timestamp()), cast('1900-01-01' as date)) as date) as source_date\n    \n    , 'LOCATION' as table_name\n    , 'Location ID' as drill_down_key\n    , coalesce(location_id, 'NULL') as drill_down_value\n    , 'ADDRESS' as field_name\n    , case when m.address is not null then 'valid' else 'null' end as bucket_name\n    , cast(null as TEXT) as invalid_reason\n    , cast(address as TEXT) as field_value\n    , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom tuva.input_layer.location as m", "relation_name": "tuva.data_quality.location_address", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:46.462272Z", "completed_at": "2025-06-03T19:49:46.477145Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:46.477422Z", "completed_at": "2025-06-03T19:49:46.477428Z"}], "thread_id": "Thread-4", "execution_time": 0.01822209358215332, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.data_quality__location_city", "compiled": true, "compiled_code": "\n\n\nselect\n      m.data_source\n    \n        , cast(coalesce(convert_timezone('UTC', current_timestamp()), cast('1900-01-01' as date)) as date) as source_date\n    \n    , 'LOCATION' as table_name\n    , 'Location ID' as drill_down_key\n    , coalesce(location_id, 'NULL') as drill_down_value\n    , 'CITY' as field_name\n    , case when m.city is not null then 'valid' else 'null' end as bucket_name\n    , cast(null as TEXT) as invalid_reason\n    , cast(city as TEXT) as field_value\n    , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom tuva.input_layer.location as m", "relation_name": "tuva.data_quality.location_city", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:44.940597Z", "completed_at": "2025-06-03T19:49:46.478038Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:46.478767Z", "completed_at": "2025-06-03T19:49:46.478771Z"}], "thread_id": "Thread-2", "execution_time": 1.5521719455718994, "adapter_response": {}, "message": null, "failures": null, "unique_id": "operation.the_tuva_project.the_tuva_project-on-run-start-0", "compiled": true, "compiled_code": "\n    \n        \n        \n        ", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:46.471533Z", "completed_at": "2025-06-03T19:49:46.478572Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:46.479324Z", "completed_at": "2025-06-03T19:49:46.479328Z"}], "thread_id": "Thread-1", "execution_time": 0.00941014289855957, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.data_quality__location_data_source", "compiled": true, "compiled_code": "\n\n\nselect\n      m.data_source\n    \n        , cast(coalesce(convert_timezone('UTC', current_timestamp()), cast('1900-01-01' as date)) as date) as source_date\n    \n    , 'LOCATION' as table_name\n    , 'Location ID' as drill_down_key\n    , coalesce(location_id, 'NULL') as drill_down_value\n    , 'DATA_SOURCE' as field_name\n    , case when m.data_source is not null then 'valid' else 'null' end as bucket_name\n    , cast(null as TEXT) as invalid_reason\n    , cast(data_source as TEXT) as field_value\n    , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom tuva.input_layer.location as m", "relation_name": "tuva.data_quality.location_data_source", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:46.479923Z", "completed_at": "2025-06-03T19:49:46.487000Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:46.498419Z", "completed_at": "2025-06-03T19:49:46.498426Z"}], "thread_id": "Thread-4", "execution_time": 0.020167827606201172, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.data_quality__location_facility_type", "compiled": true, "compiled_code": "\n\n\nselect\n    m.data_source\n    \n        , cast(coalesce(convert_timezone('UTC', current_timestamp()), cast('1900-01-01' as date)) as date) as source_date\n    \n    ,'LOCATION' as table_name\n    ,'Location ID' as drill_down_key\n    , coalesce(location_id, 'NULL') as drill_down_value\n    ,'FACILITY_TYPE' as field_name\n    ,case when m.facility_type is not null then 'valid' else 'null' end as bucket_name\n    ,cast(null as TEXT) as invalid_reason\n    ,cast(facility_type as TEXT) as field_value\n    , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom tuva.input_layer.location as m", "relation_name": "tuva.data_quality.location_facility_type", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:46.492529Z", "completed_at": "2025-06-03T19:49:46.505244Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:46.505701Z", "completed_at": "2025-06-03T19:49:46.505706Z"}], "thread_id": "Thread-1", "execution_time": 0.019438982009887695, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.data_quality__location_location_id", "compiled": true, "compiled_code": "\n\n\nselect\n    m.data_source\n    \n        , cast(coalesce(convert_timezone('UTC', current_timestamp()), cast('1900-01-01' as date)) as date) as source_date\n    \n    ,'LOCATION' as table_name\n    ,'Location ID' as drill_down_key\n    , coalesce(location_id, 'NULL') as drill_down_value\n    ,'LOCATION_ID' as field_name\n    ,case when m.location_id is not null then 'valid' else 'null' end as bucket_name\n    ,cast(null as TEXT) as invalid_reason\n    ,cast(location_id as TEXT) as field_value\n    , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom tuva.input_layer.location as m", "relation_name": "tuva.data_quality.location_location_id", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:46.487186Z", "completed_at": "2025-06-03T19:49:46.505455Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:46.506084Z", "completed_at": "2025-06-03T19:49:46.506088Z"}], "thread_id": "Thread-2", "execution_time": 0.020099878311157227, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.data_quality__location_latitude", "compiled": true, "compiled_code": "\n\n\nselect\n      m.data_source\n    \n        , cast(coalesce(convert_timezone('UTC', current_timestamp()), cast('1900-01-01' as date)) as date) as source_date\n    \n    , 'LOCATION' as table_name\n    , 'Location ID' as drill_down_key\n    , coalesce(location_id, 'NULL') as drill_down_value\n    , 'LATITUDE' as field_name\n    , case when m.latitude is not null then 'valid' else 'null' end as bucket_name\n    , cast(null as TEXT) as invalid_reason\n    , cast(latitude as TEXT) as field_value\n    , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom tuva.input_layer.location as m", "relation_name": "tuva.data_quality.location_latitude", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:46.499695Z", "completed_at": "2025-06-03T19:49:46.506685Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:46.507433Z", "completed_at": "2025-06-03T19:49:46.507437Z"}], "thread_id": "Thread-4", "execution_time": 0.008249998092651367, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.data_quality__location_longitude", "compiled": true, "compiled_code": "\n\n\nselect\n      m.data_source\n    \n        , cast(coalesce(convert_timezone('UTC', current_timestamp()), cast('1900-01-01' as date)) as date) as source_date\n    \n    , 'LOCATION' as table_name\n    , 'Location ID' as drill_down_key\n    , coalesce(location_id, 'NULL') as drill_down_value\n    , 'LONGITUDE' as field_name\n    , case when m.longitude is not null then 'valid' else 'null' end as bucket_name\n    , cast(null as TEXT) as invalid_reason\n    , cast(longitude as TEXT) as field_value\n    , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom tuva.input_layer.location as m", "relation_name": "tuva.data_quality.location_longitude", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:46.514221Z", "completed_at": "2025-06-03T19:49:46.526105Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:46.526547Z", "completed_at": "2025-06-03T19:49:46.526553Z"}], "thread_id": "Thread-2", "execution_time": 0.018841028213500977, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.data_quality__location_parent_organization", "compiled": true, "compiled_code": "\n\n\nselect\n      m.data_source\n    \n        , cast(coalesce(convert_timezone('UTC', current_timestamp()), cast('1900-01-01' as date)) as date) as source_date\n    \n    , 'LOCATION' as table_name\n    , 'Location ID' as drill_down_key\n    , coalesce(location_id, 'NULL') as drill_down_value\n    , 'PARENT_ORGANIZATION' as field_name\n    , case when m.parent_organization is not null then 'valid' else 'null' end as bucket_name\n    , cast(null as TEXT) as invalid_reason\n    , cast(parent_organization as TEXT) as field_value\n    , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom tuva.input_layer.location as m", "relation_name": "tuva.data_quality.location_parent_organization", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:46.508633Z", "completed_at": "2025-06-03T19:49:46.526340Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:46.526969Z", "completed_at": "2025-06-03T19:49:46.526974Z"}], "thread_id": "Thread-1", "execution_time": 0.01983499526977539, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.data_quality__location_name", "compiled": true, "compiled_code": "\n\n\nselect\n      m.data_source\n    \n        , cast(coalesce(convert_timezone('UTC', current_timestamp()), cast('1900-01-01' as date)) as date) as source_date\n    \n    , 'LOCATION' as table_name\n    , 'Location ID' as drill_down_key\n    , coalesce(location_id, 'NULL') as drill_down_value\n    , 'NAME' as field_name\n    , case when m.name is not null then 'valid' else 'null' end as bucket_name\n    , cast(null as TEXT) as invalid_reason\n    , cast(name as TEXT) as field_value\n    , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom tuva.input_layer.location as m", "relation_name": "tuva.data_quality.location_name", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:46.520745Z", "completed_at": "2025-06-03T19:49:46.527336Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:46.528053Z", "completed_at": "2025-06-03T19:49:46.528058Z"}], "thread_id": "Thread-4", "execution_time": 0.014137029647827148, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.data_quality__location_state", "compiled": true, "compiled_code": "\n\n\nselect\n      m.data_source\n    \n        , cast(coalesce(convert_timezone('UTC', current_timestamp()), cast('1900-01-01' as date)) as date) as source_date\n    \n    , 'LOCATION' as table_name\n    , 'Location ID' as drill_down_key\n    , coalesce(location_id, 'NULL') as drill_down_value\n    , 'STATE' as field_name\n    , case when m.state is not null then 'valid' else 'null' end as bucket_name\n    , cast(null as TEXT) as invalid_reason\n    , cast(state as TEXT) as field_value\n    , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom tuva.input_layer.location as m", "relation_name": "tuva.data_quality.location_state", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:46.535845Z", "completed_at": "2025-06-03T19:49:46.546134Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:46.546377Z", "completed_at": "2025-06-03T19:49:46.546385Z"}], "thread_id": "Thread-1", "execution_time": 0.017828941345214844, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.input_layer__location", "compiled": true, "compiled_code": "\nselect *\nfrom tuva.input_layer.location", "relation_name": "tuva.input_layer.input_layer__location", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:46.529737Z", "completed_at": "2025-06-03T19:49:46.547106Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:46.547676Z", "completed_at": "2025-06-03T19:49:46.547681Z"}], "thread_id": "Thread-2", "execution_time": 0.019322872161865234, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.data_quality__location_zip_code", "compiled": true, "compiled_code": "\n\n\nselect\n      m.data_source\n    \n        , cast(coalesce(convert_timezone('UTC', current_timestamp()), cast('1900-01-01' as date)) as date) as source_date\n    \n    , 'LOCATION' as table_name\n    , 'Location ID' as drill_down_key\n    , coalesce(location_id, 'NULL') as drill_down_value\n    , 'ZIP_CODE' as field_name\n    , case when m.zip_code is not null then 'valid' else 'null' end as bucket_name\n    , cast(null as TEXT) as invalid_reason\n    , cast(zip_code as TEXT) as field_value\n    , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom tuva.input_layer.location as m", "relation_name": "tuva.data_quality.location_zip_code", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:46.540199Z", "completed_at": "2025-06-03T19:49:46.548527Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:46.554018Z", "completed_at": "2025-06-03T19:49:46.554024Z"}], "thread_id": "Thread-4", "execution_time": 0.02456498146057129, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.data_quality__medication_atc_description", "compiled": true, "compiled_code": "\n\n\nselect\n      m.data_source\n    , coalesce(m.dispensing_date,cast('1900-01-01' as date)) as source_date\n    , 'MEDICATION' as table_name\n    , 'Medication ID' as drill_down_key\n    , coalesce(medication_id, 'NULL') as drill_down_value\n    , 'ATC_DESCRIPTION' as field_name\n    , case when m.atc_description is not null then 'valid' else 'null' end as bucket_name\n    , cast(null as TEXT) as invalid_reason\n    , cast(substring(atc_description, 1, 255) as TEXT) as field_value\n    , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom tuva.input_layer.medication as m", "relation_name": "tuva.data_quality.medication_atc_description", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:46.548984Z", "completed_at": "2025-06-03T19:49:46.555401Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:46.560976Z", "completed_at": "2025-06-03T19:49:46.560983Z"}], "thread_id": "Thread-1", "execution_time": 0.013735055923461914, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.data_quality__medication_data_source", "compiled": true, "compiled_code": "\n\n\nselect\n      m.data_source\n    , coalesce(m.dispensing_date,cast('1900-01-01' as date)) as source_date\n    , 'MEDICATION' as table_name\n    , 'Medication ID' as drill_down_key\n    , coalesce(medication_id, 'NULL') as drill_down_value\n    , 'DATA_SOURCE' as field_name\n    , case when m.data_source is not null then 'valid' else 'null' end as bucket_name\n    , cast(null as TEXT) as invalid_reason\n    , cast(data_source as TEXT) as field_value\n    , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom tuva.input_layer.medication as m", "relation_name": "tuva.data_quality.medication_data_source", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:46.555606Z", "completed_at": "2025-06-03T19:49:46.568900Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:46.569384Z", "completed_at": "2025-06-03T19:49:46.569390Z"}], "thread_id": "Thread-2", "execution_time": 0.015059947967529297, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.data_quality__medication_days_supply", "compiled": true, "compiled_code": "\n\n\nselect\n      m.data_source\n    , coalesce(m.dispensing_date,cast('1900-01-01' as date)) as source_date\n    , 'MEDICATION' as table_name\n    , 'Medication ID' as drill_down_key\n    , coalesce(medication_id, 'NULL') as drill_down_value\n    , 'DAYS_SUPPLY' as field_name\n    , case when m.days_supply is not null then 'valid' else 'null' end as bucket_name\n    , cast(null as TEXT) as invalid_reason\n    , cast(days_supply as TEXT) as field_value\n    , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom tuva.input_layer.medication as m", "relation_name": "tuva.data_quality.medication_days_supply", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:46.561425Z", "completed_at": "2025-06-03T19:49:46.569737Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:46.575203Z", "completed_at": "2025-06-03T19:49:46.575208Z"}], "thread_id": "Thread-4", "execution_time": 0.02008819580078125, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.data_quality__medication_dispensing_date", "compiled": true, "compiled_code": "\n\n\nselect\n      m.data_source\n    , coalesce(m.dispensing_date,cast('1900-01-01' as date)) as source_date\n    , 'MEDICATION' as table_name\n    , 'Medication ID' as drill_down_key\n    , coalesce(medication_id, 'NULL') as drill_down_value\n    , 'DISPENSING_DATE' as field_name\n    , case\n        when m.dispensing_date > cast(substring('2025-06-03 19:49:40.396647+00:00',1,10) as date) then 'invalid'\n        when m.dispensing_date <= cast('1901-01-01' as date) then 'invalid'\n        when m.dispensing_date < m.prescribing_date then 'invalid'\n        when m.dispensing_date is null then 'null'\n        else 'valid'\n    end as bucket_name\n    , case\n        when m.dispensing_date > cast(substring('2025-06-03 19:49:40.396647+00:00',1,10) as date) then 'future'\n        when m.dispensing_date <= cast('1901-01-01' as date) then 'too old'\n        when m.dispensing_date < m.prescribing_date then 'Dispensing date before prescribing date'\n        else null\n    end as invalid_reason\n    , cast(dispensing_date as TEXT) as field_value\n    , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom tuva.input_layer.medication as m", "relation_name": "tuva.data_quality.medication_dispensing_date", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:46.569947Z", "completed_at": "2025-06-03T19:49:46.577849Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:46.578738Z", "completed_at": "2025-06-03T19:49:46.578743Z"}], "thread_id": "Thread-1", "execution_time": 0.01015782356262207, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.data_quality__medication_encounter_id", "compiled": true, "compiled_code": "\n\n\nselect\n      m.data_source\n    , coalesce(m.dispensing_date,cast('1900-01-01' as date)) as source_date\n    , 'MEDICATION' as table_name\n    , 'Medication ID' as drill_down_key\n    , coalesce(medication_id, 'NULL') as drill_down_value\n    , 'ENCOUNTER_ID' as field_name\n    , case when m.encounter_id is not null then 'valid' else 'null' end as bucket_name\n    , cast(null as TEXT) as invalid_reason\n    , cast(encounter_id as TEXT) as field_value\n    , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom tuva.input_layer.medication as m", "relation_name": "tuva.data_quality.medication_encounter_id", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:46.579092Z", "completed_at": "2025-06-03T19:49:46.591219Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:46.596923Z", "completed_at": "2025-06-03T19:49:46.596931Z"}], "thread_id": "Thread-2", "execution_time": 0.020647048950195312, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.data_quality__medication_medication_id", "compiled": true, "compiled_code": "\n\n\nselect\n      m.data_source\n    , coalesce(m.dispensing_date,cast('1900-01-01' as date)) as source_date\n    , 'MEDICATION' as table_name\n    , 'Medication ID' as drill_down_key\n    , coalesce(medication_id, 'NULL') as drill_down_value\n    , 'MEDICATION_ID' as field_name\n    , case when m.medication_id is not null then 'valid' else 'null' end as bucket_name\n    , cast(null as TEXT) as invalid_reason\n    , cast(medication_id as TEXT) as field_value\n    , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom tuva.input_layer.medication as m", "relation_name": "tuva.data_quality.medication_medication_id", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:46.585453Z", "completed_at": "2025-06-03T19:49:46.597297Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:46.598185Z", "completed_at": "2025-06-03T19:49:46.598190Z"}], "thread_id": "Thread-4", "execution_time": 0.019962072372436523, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.data_quality__medication_ndc_code", "compiled": true, "compiled_code": "\n\n\nselect\n      m.data_source\n    , coalesce(m.dispensing_date,cast('1900-01-01' as date)) as source_date\n    , 'MEDICATION' as table_name\n    , 'Medication ID' as drill_down_key\n    , coalesce(medication_id, 'NULL') as drill_down_value\n    , 'NDC_CODE' as field_name\n    , case when m.ndc_code is not null then 'valid' else 'null' end as bucket_name\n    , cast(null as TEXT) as invalid_reason\n    , cast(ndc_code as TEXT) as field_value\n    , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom tuva.input_layer.medication as m", "relation_name": "tuva.data_quality.medication_ndc_code", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:46.591437Z", "completed_at": "2025-06-03T19:49:46.598875Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:46.599594Z", "completed_at": "2025-06-03T19:49:46.599598Z"}], "thread_id": "Thread-1", "execution_time": 0.009289979934692383, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.data_quality__medication_patient_id", "compiled": true, "compiled_code": "\n\n\nselect\n      m.data_source\n    , coalesce(m.dispensing_date,cast('1900-01-01' as date)) as source_date\n    , 'MEDICATION' as table_name\n    , 'Medication ID' as drill_down_key\n    , coalesce(medication_id, 'NULL') as drill_down_value\n    , 'PATIENT_ID' as field_name\n    , case when m.patient_id is not null then 'valid' else 'null' end as bucket_name\n    , cast(null as TEXT) as invalid_reason\n    , cast(patient_id as TEXT) as field_value\n    , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom tuva.input_layer.medication as m", "relation_name": "tuva.data_quality.medication_patient_id", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:46.600155Z", "completed_at": "2025-06-03T19:49:46.612321Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:46.612801Z", "completed_at": "2025-06-03T19:49:46.612807Z"}], "thread_id": "Thread-2", "execution_time": 0.01425790786743164, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.data_quality__medication_practitioner_id", "compiled": true, "compiled_code": "\n\n\nselect\n      m.data_source\n    , coalesce(m.dispensing_date,cast('1900-01-01' as date)) as source_date\n    , 'MEDICATION' as table_name\n    , 'Medication ID' as drill_down_key\n    , coalesce(medication_id, 'NULL') as drill_down_value\n    , 'PRACTITIONER_ID' as field_name\n    , case when m.practitioner_id is not null then 'valid' else 'null' end as bucket_name\n    , cast(null as TEXT) as invalid_reason\n    , cast(practitioner_id as TEXT) as field_value\n    , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom tuva.input_layer.medication as m", "relation_name": "tuva.data_quality.medication_practitioner_id", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:46.605872Z", "completed_at": "2025-06-03T19:49:46.618321Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:46.618859Z", "completed_at": "2025-06-03T19:49:46.618864Z"}], "thread_id": "Thread-4", "execution_time": 0.018983125686645508, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.data_quality__medication_prescribing_date", "compiled": true, "compiled_code": "\n\n\nselect\n      m.data_source\n    , coalesce(m.dispensing_date,cast('1900-01-01' as date)) as source_date\n    , 'MEDICATION' as table_name\n    , 'Medication ID' as drill_down_key\n    , coalesce(medication_id, 'NULL') as drill_down_value\n    , 'PRESCRIBING_DATE' as field_name\n    , case\n        when m.prescribing_date > cast(substring('2025-06-03 19:49:40.396647+00:00',1,10) as date) then 'invalid'\n        when m.prescribing_date <= cast('1901-01-01' as date) then 'invalid'\n        when m.prescribing_date > m.dispensing_date then 'invalid'\n        when m.prescribing_date is null then 'null'\n        else 'valid'\n    end as bucket_name\n    , case\n        when m.prescribing_date > cast(substring('2025-06-03 19:49:40.396647+00:00',1,10) as date) then 'future'\n        when m.prescribing_date <= cast('1901-01-01' as date) then 'too old'\n        when m.prescribing_date > m.dispensing_date then 'Prescribing date after dispensing date'\n        else null\n    end as invalid_reason\n    , cast(prescribing_date as TEXT) as field_value\n    , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom tuva.input_layer.medication as m", "relation_name": "tuva.data_quality.medication_prescribing_date", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:46.613191Z", "completed_at": "2025-06-03T19:49:46.619450Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:46.624795Z", "completed_at": "2025-06-03T19:49:46.624799Z"}], "thread_id": "Thread-1", "execution_time": 0.01924729347229004, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.data_quality__medication_quantity", "compiled": true, "compiled_code": "\n\n\nselect\n      m.data_source\n    , coalesce(m.dispensing_date,cast('1900-01-01' as date)) as source_date\n    , 'MEDICATION' as table_name\n    , 'Medication ID' as drill_down_key\n    , coalesce(medication_id, 'NULL') as drill_down_value\n    , 'QUANTITY' as field_name\n    , case when m.quantity is not null then 'valid' else 'null' end as bucket_name\n    , cast(null as TEXT) as invalid_reason\n    , cast(quantity as TEXT) as field_value\n    , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom tuva.input_layer.medication as m", "relation_name": "tuva.data_quality.medication_quantity", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:46.619897Z", "completed_at": "2025-06-03T19:49:46.626152Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:46.632015Z", "completed_at": "2025-06-03T19:49:46.632021Z"}], "thread_id": "Thread-2", "execution_time": 0.01349782943725586, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.data_quality__medication_quantity_unit", "compiled": true, "compiled_code": "\n\n\nselect\n      m.data_source\n    , coalesce(m.dispensing_date,cast('1900-01-01' as date)) as source_date\n    , 'MEDICATION' as table_name\n    , 'Medication ID' as drill_down_key\n    , coalesce(medication_id, 'NULL') as drill_down_value\n    , 'QUANTITY_UNIT' as field_name\n    , case when m.quantity_unit is not null then 'valid' else 'null' end as bucket_name\n    , cast(null as TEXT) as invalid_reason\n    , cast(quantity_unit as TEXT) as field_value\n    , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom tuva.input_layer.medication as m", "relation_name": "tuva.data_quality.medication_quantity_unit", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:46.626362Z", "completed_at": "2025-06-03T19:49:46.637497Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:46.637963Z", "completed_at": "2025-06-03T19:49:46.637968Z"}], "thread_id": "Thread-4", "execution_time": 0.012849092483520508, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.data_quality__medication_route", "compiled": true, "compiled_code": "\n\n\nselect\n      m.data_source\n    , coalesce(m.dispensing_date,cast('1900-01-01' as date)) as source_date\n    , 'MEDICATION' as table_name\n    , 'Medication ID' as drill_down_key\n    , coalesce(medication_id, 'NULL') as drill_down_value\n    , 'ROUTE' as field_name\n    , case when m.route is not null then 'valid' else 'null' end as bucket_name\n    , cast(null as TEXT) as invalid_reason\n    , cast(route as TEXT) as field_value\n    , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom tuva.input_layer.medication as m", "relation_name": "tuva.data_quality.medication_route", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:46.632421Z", "completed_at": "2025-06-03T19:49:46.638302Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:46.638973Z", "completed_at": "2025-06-03T19:49:46.638978Z"}], "thread_id": "Thread-1", "execution_time": 0.013089179992675781, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.data_quality__medication_rxnorm_description", "compiled": true, "compiled_code": "\n\n\nselect\n      m.data_source\n    , coalesce(m.dispensing_date,cast('1900-01-01' as date)) as source_date\n    , 'MEDICATION' as table_name\n    , 'Medication ID' as drill_down_key\n    , coalesce(medication_id, 'NULL') as drill_down_value\n    , 'RXNORM_DESCRIPTION' as field_name\n    , case when m.rxnorm_description is not null then 'valid' else 'null' end as bucket_name\n    , cast(null as TEXT) as invalid_reason\n    , cast(substring(rxnorm_description, 1, 255) as TEXT) as field_value\n    , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom tuva.input_layer.medication as m", "relation_name": "tuva.data_quality.medication_rxnorm_description", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:46.639328Z", "completed_at": "2025-06-03T19:49:46.650485Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:46.650952Z", "completed_at": "2025-06-03T19:49:46.650959Z"}], "thread_id": "Thread-2", "execution_time": 0.01332712173461914, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.data_quality__medication_source_code", "compiled": true, "compiled_code": "\n\n\nselect\n      m.data_source\n    , coalesce(m.dispensing_date,cast('1900-01-01' as date)) as source_date\n    , 'MEDICATION' as table_name\n    , 'Medication ID' as drill_down_key\n    , coalesce(medication_id, 'NULL') as drill_down_value\n    , 'SOURCE_CODE' as field_name\n    , case when m.source_code is not null then 'valid' else 'null' end as bucket_name\n    , cast(null as TEXT) as invalid_reason\n    , cast(source_code as TEXT) as field_value\n    , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom tuva.input_layer.medication as m", "relation_name": "tuva.data_quality.medication_source_code", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:46.645714Z", "completed_at": "2025-06-03T19:49:46.657032Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:46.657546Z", "completed_at": "2025-06-03T19:49:46.657551Z"}], "thread_id": "Thread-4", "execution_time": 0.012905120849609375, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.data_quality__medication_source_code_type", "compiled": true, "compiled_code": "\n\n\nselect\n      m.data_source\n    , coalesce(m.dispensing_date,cast('1900-01-01' as date)) as source_date\n    , 'MEDICATION' as table_name\n    , 'Medication ID' as drill_down_key\n    , coalesce(medication_id, 'NULL') as drill_down_value\n    , 'SOURCE_CODE_TYPE' as field_name\n    , case when m.source_code_type is not null then 'valid' else 'null' end as bucket_name\n    , cast(null as TEXT) as invalid_reason\n    , cast(source_code_type as TEXT) as field_value\n    , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom tuva.input_layer.medication as m", "relation_name": "tuva.data_quality.medication_source_code_type", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:46.651380Z", "completed_at": "2025-06-03T19:49:46.658146Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:46.663374Z", "completed_at": "2025-06-03T19:49:46.663378Z"}], "thread_id": "Thread-1", "execution_time": 0.017958879470825195, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.data_quality__medication_source_description", "compiled": true, "compiled_code": "\n\n\nselect\n      m.data_source\n    , coalesce(m.dispensing_date,cast('1900-01-01' as date)) as source_date\n    , 'MEDICATION' as table_name\n    , 'Medication ID' as drill_down_key\n    , coalesce(medication_id, 'NULL') as drill_down_value\n    , 'SOURCE_DESCRIPTION' as field_name\n    , case when m.source_description is not null then 'valid' else 'null' end as bucket_name\n    , cast(null as TEXT) as invalid_reason\n    , cast(substring(source_description, 1, 255) as TEXT) as field_value\n    , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom tuva.input_layer.medication as m", "relation_name": "tuva.data_quality.medication_source_description", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:46.658570Z", "completed_at": "2025-06-03T19:49:46.664755Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:46.669237Z", "completed_at": "2025-06-03T19:49:46.669243Z"}], "thread_id": "Thread-2", "execution_time": 0.012015104293823242, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.data_quality__medication_strength", "compiled": true, "compiled_code": "\n\n\nselect\n      m.data_source\n    , coalesce(m.dispensing_date,cast('1900-01-01' as date)) as source_date\n    , 'MEDICATION' as table_name\n    , 'Medication ID' as drill_down_key\n    , coalesce(medication_id, 'NULL') as drill_down_value\n    , 'STRENGTH' as field_name\n    , case when m.strength is not null then 'valid' else 'null' end as bucket_name\n    , cast(null as TEXT) as invalid_reason\n    , cast(strength as TEXT) as field_value\n    , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom tuva.input_layer.medication as m", "relation_name": "tuva.data_quality.medication_strength", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:46.664942Z", "completed_at": "2025-06-03T19:49:46.780067Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:46.781455Z", "completed_at": "2025-06-03T19:49:46.781462Z"}], "thread_id": "Thread-4", "execution_time": 0.1177830696105957, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.input_layer__medication", "compiled": true, "compiled_code": "\nselect *\nfrom tuva.input_layer.medication", "relation_name": "tuva.input_layer.input_layer__medication", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:46.669642Z", "completed_at": "2025-06-03T19:49:46.783116Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:46.789423Z", "completed_at": "2025-06-03T19:49:46.789429Z"}], "thread_id": "Thread-1", "execution_time": 0.1249699592590332, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.data_quality__observation_data_source", "compiled": true, "compiled_code": "\n\n\nselect\n      m.data_source\n    , coalesce(m.observation_date,cast('1900-01-01' as date)) as source_date\n    , 'OBSERVATION' as table_name\n    , 'Observation ID' as drill_down_key\n    , coalesce(observation_id, 'NULL') as drill_down_value\n    , 'DATA_SOURCE' as field_name\n    , case when m.data_source is not null then 'valid' else 'null' end as bucket_name\n    , cast(null as TEXT) as invalid_reason\n    , cast(data_source as TEXT) as field_value\n    , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom tuva.input_layer.observation as m", "relation_name": "tuva.data_quality.observation_data_source", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:46.783671Z", "completed_at": "2025-06-03T19:49:46.791387Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:46.797558Z", "completed_at": "2025-06-03T19:49:46.797565Z"}], "thread_id": "Thread-2", "execution_time": 0.017312049865722656, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.data_quality__observation_encounter_id", "compiled": true, "compiled_code": "\n\nselect\n    m.data_source\n    ,coalesce(m.observation_date,cast('1900-01-01' as date)) as source_date\n    ,'OBSERVATION' as table_name\n    ,'Observation ID' as drill_down_key\n    , coalesce(observation_id, 'NULL') as drill_down_value\n    ,'ENCOUNTER_ID' as field_name\n    ,case when m.encounter_id is not null then 'valid' else 'null' end as bucket_name\n    ,cast(null as TEXT) as invalid_reason\n    ,cast(encounter_id as TEXT) as field_value\n    , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom tuva.input_layer.observation as m", "relation_name": "tuva.data_quality.observation_encounter_id", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:46.791844Z", "completed_at": "2025-06-03T19:49:46.803828Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:46.804390Z", "completed_at": "2025-06-03T19:49:46.804396Z"}], "thread_id": "Thread-4", "execution_time": 0.014627218246459961, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.data_quality__observation_normalized_code", "compiled": true, "compiled_code": "\n\n\nselect\n      m.data_source\n    , coalesce(m.observation_date,cast('1900-01-01' as date)) as source_date\n    , 'OBSERVATION' as table_name\n    , 'Observation ID' as drill_down_key\n    , coalesce(observation_id, 'NULL') as drill_down_value\n    , 'NORMALIZED_CODE' as field_name\n    , case when m.normalized_code is not null then 'valid' else 'null' end as bucket_name\n    , cast(null as TEXT) as invalid_reason\n    , cast(normalized_code as TEXT) as field_value\n    , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom tuva.input_layer.observation as m", "relation_name": "tuva.data_quality.observation_normalized_code", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:46.798797Z", "completed_at": "2025-06-03T19:49:46.810728Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:46.811302Z", "completed_at": "2025-06-03T19:49:46.811308Z"}], "thread_id": "Thread-1", "execution_time": 0.019765853881835938, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.data_quality__observation_normalized_code_type", "compiled": true, "compiled_code": "\n\n\nselect\n      m.data_source\n    , coalesce(m.observation_date,cast('1900-01-01' as date)) as source_date\n    , 'OBSERVATION' as table_name\n    , 'Observation ID' as drill_down_key\n    , coalesce(observation_id, 'NULL') as drill_down_value\n    , 'NORMALIZED_CODE_TYPE' as field_name\n    , case when m.normalized_code_type is not null then 'valid' else 'null' end as bucket_name\n    , cast(null as TEXT) as invalid_reason\n    , cast(normalized_code_type as TEXT) as field_value\n    , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom tuva.input_layer.observation as m", "relation_name": "tuva.data_quality.observation_normalized_code_type", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:46.805254Z", "completed_at": "2025-06-03T19:49:46.812153Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:46.817513Z", "completed_at": "2025-06-03T19:49:46.817519Z"}], "thread_id": "Thread-2", "execution_time": 0.013498067855834961, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.data_quality__observation_normalized_description", "compiled": true, "compiled_code": "\n\n\nselect\n      m.data_source\n    , coalesce(m.observation_date,cast('1900-01-01' as date)) as source_date\n    , 'OBSERVATION' as table_name\n    , 'Observation ID' as drill_down_key\n    , coalesce(observation_id, 'NULL') as drill_down_value\n    , 'NORMALIZED_DESCRIPTION' as field_name\n    , case when m.normalized_description is not null then 'valid' else 'null' end as bucket_name\n    , cast(null as TEXT) as invalid_reason\n    , cast(substring(normalized_description, 1, 255) as TEXT) as field_value\n    , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom tuva.input_layer.observation as m", "relation_name": "tuva.data_quality.observation_normalized_description", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:46.812353Z", "completed_at": "2025-06-03T19:49:46.823461Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:46.823931Z", "completed_at": "2025-06-03T19:49:46.823936Z"}], "thread_id": "Thread-4", "execution_time": 0.012990951538085938, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.data_quality__observation_normalized_reference_range_high", "compiled": true, "compiled_code": "\n\n\nselect\n      m.data_source\n    , coalesce(m.observation_date,cast('1900-01-01' as date)) as source_date\n    , 'OBSERVATION' as table_name\n    , 'Observation ID' as drill_down_key\n    , coalesce(observation_id, 'NULL') as drill_down_value\n    , 'NORMALIZED_REFERENCE_RANGE_HIGH' as field_name\n    , case when m.normalized_reference_range_high is not null then 'valid' else 'null' end as bucket_name\n    , cast(null as TEXT) as invalid_reason\n    , cast(normalized_reference_range_high as TEXT) as field_value\n    , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom tuva.input_layer.observation as m", "relation_name": "tuva.data_quality.observation_normalized_reference_range_high", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:46.818427Z", "completed_at": "2025-06-03T19:49:46.829941Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:46.830485Z", "completed_at": "2025-06-03T19:49:46.830490Z"}], "thread_id": "Thread-1", "execution_time": 0.013298988342285156, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.data_quality__observation_normalized_reference_range_low", "compiled": true, "compiled_code": "\n\n\nselect\n      m.data_source\n    , coalesce(m.observation_date,cast('1900-01-01' as date)) as source_date\n    , 'OBSERVATION' as table_name\n    , 'Observation ID' as drill_down_key\n    , coalesce(observation_id, 'NULL') as drill_down_value\n    , 'NORMALIZED_REFERENCE_RANGE_LOW' as field_name\n    , case when m.normalized_reference_range_low is not null then 'valid' else 'null' end as bucket_name\n    , cast(null as TEXT) as invalid_reason\n    , cast(normalized_reference_range_low as TEXT) as field_value\n    , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom tuva.input_layer.observation as m", "relation_name": "tuva.data_quality.observation_normalized_reference_range_low", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:46.824302Z", "completed_at": "2025-06-03T19:49:46.831349Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:46.832007Z", "completed_at": "2025-06-03T19:49:46.832011Z"}], "thread_id": "Thread-2", "execution_time": 0.008840799331665039, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.data_quality__observation_normalized_units", "compiled": true, "compiled_code": "\n\n\nselect\n      m.data_source\n    , coalesce(m.observation_date,cast('1900-01-01' as date)) as source_date\n    , 'OBSERVATION' as table_name\n    , 'Observation ID' as drill_down_key\n    , coalesce(observation_id, 'NULL') as drill_down_value\n    , 'NORMALIZED_UNITS' as field_name\n    , case when m.normalized_units is not null then 'valid' else 'null' end as bucket_name\n    , cast(null as TEXT) as invalid_reason\n    , cast(normalized_units as TEXT) as field_value\n    , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom tuva.input_layer.observation as m", "relation_name": "tuva.data_quality.observation_normalized_units", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:46.832349Z", "completed_at": "2025-06-03T19:49:46.844604Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:46.845100Z", "completed_at": "2025-06-03T19:49:46.845106Z"}], "thread_id": "Thread-4", "execution_time": 0.014267206192016602, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.data_quality__observation_observation_date", "compiled": true, "compiled_code": "\n\n\nselect\n      m.data_source\n    , coalesce(m.observation_date,cast('1900-01-01' as date)) as source_date\n    , 'OBSERVATION' as table_name\n    , 'Observation ID' as drill_down_key\n    , coalesce(observation_id, 'NULL') as drill_down_value\n    , 'OBSERVATION_DATE' as field_name\n    , case\n        when m.observation_date > cast(substring('2025-06-03 19:49:40.396647+00:00',1,10) as date) then 'invalid'\n        when m.observation_date <= cast('1901-01-01' as date) then 'invalid'\n        when m.observation_date is null then 'null'\n        else 'valid'\n    end as bucket_name\n    , case\n        when m.observation_date > cast(substring('2025-06-03 19:49:40.396647+00:00',1,10) as date) then 'future'\n        when m.observation_date <= cast('1901-01-01' as date) then 'too old'\n        else null\n    end as invalid_reason\n    , cast(observation_date as TEXT) as field_value\n    , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom tuva.input_layer.observation as m", "relation_name": "tuva.data_quality.observation_observation_date", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:46.838879Z", "completed_at": "2025-06-03T19:49:46.850346Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:46.850867Z", "completed_at": "2025-06-03T19:49:46.850872Z"}], "thread_id": "Thread-1", "execution_time": 0.019143342971801758, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.data_quality__observation_observation_id", "compiled": true, "compiled_code": "\n\n\nselect\n      m.data_source\n    , coalesce(m.observation_date,cast('1900-01-01' as date)) as source_date\n    , 'OBSERVATION' as table_name\n    , 'Observation ID' as drill_down_key\n    , coalesce(observation_id, 'NULL') as drill_down_value\n    , 'OBSERVATION_ID' as field_name\n    , case when m.observation_id is not null then 'valid' else 'null' end as bucket_name\n    , cast(null as TEXT) as invalid_reason\n    , cast(observation_id as TEXT) as field_value\n    , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom tuva.input_layer.observation as m", "relation_name": "tuva.data_quality.observation_observation_id", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:46.845473Z", "completed_at": "2025-06-03T19:49:46.851743Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:46.852424Z", "completed_at": "2025-06-03T19:49:46.852428Z"}], "thread_id": "Thread-2", "execution_time": 0.008170366287231445, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.data_quality__observation_observation_type", "compiled": true, "compiled_code": "\n\n\nselect\n      m.data_source\n    , coalesce(m.observation_date,cast('1900-01-01' as date)) as source_date\n    , 'OBSERVATION' as table_name\n    , 'Observation ID' as drill_down_key\n    , coalesce(observation_id, 'NULL') as drill_down_value\n    , 'OBSERVATION_TYPE' as field_name\n    , case when m.observation_type is not null then 'valid' else 'null' end as bucket_name\n    , cast(null as TEXT) as invalid_reason\n    , cast(observation_type as TEXT) as field_value\n    , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom tuva.input_layer.observation as m", "relation_name": "tuva.data_quality.observation_observation_type", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:46.852761Z", "completed_at": "2025-06-03T19:49:46.864277Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:46.869411Z", "completed_at": "2025-06-03T19:49:46.869418Z"}], "thread_id": "Thread-4", "execution_time": 0.018223047256469727, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.data_quality__observation_panel_id", "compiled": true, "compiled_code": "\n\n\nselect\n      m.data_source\n    , coalesce(m.observation_date,cast('1900-01-01' as date)) as source_date\n    , 'OBSERVATION' as table_name\n    , 'Observation ID' as drill_down_key\n    , coalesce(observation_id, 'NULL') as drill_down_value\n    , 'PANEL_ID' as field_name\n    , case when m.panel_id is not null then 'valid' else 'null' end as bucket_name\n    , cast(null as TEXT) as invalid_reason\n    , cast(panel_id as TEXT) as field_value\n    , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom tuva.input_layer.observation as m", "relation_name": "tuva.data_quality.observation_panel_id", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:46.858858Z", "completed_at": "2025-06-03T19:49:46.869826Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:46.870336Z", "completed_at": "2025-06-03T19:49:46.870339Z"}], "thread_id": "Thread-1", "execution_time": 0.018192768096923828, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.data_quality__observation_patient_id", "compiled": true, "compiled_code": "\n\n\nselect\n      m.data_source\n    , coalesce(m.observation_date,cast('1900-01-01' as date)) as source_date\n    , 'OBSERVATION' as table_name\n    , 'Observation ID' as drill_down_key\n    , coalesce(observation_id, 'NULL') as drill_down_value\n    , 'PATIENT_ID' as field_name\n    , case when m.patient_id is not null then 'valid' else 'null' end as bucket_name\n    , cast(null as TEXT) as invalid_reason\n    , cast(patient_id as TEXT) as field_value\n    , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom tuva.input_layer.observation as m", "relation_name": "tuva.data_quality.observation_patient_id", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:46.864482Z", "completed_at": "2025-06-03T19:49:46.870934Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:46.871574Z", "completed_at": "2025-06-03T19:49:46.871578Z"}], "thread_id": "Thread-2", "execution_time": 0.007886171340942383, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.data_quality__observation_result", "compiled": true, "compiled_code": "\n\n\nselect\n    m.data_source\n    ,coalesce(m.observation_date,cast('1900-01-01' as date)) as source_date\n    ,'OBSERVATION' as table_name\n    ,'Observation ID' as drill_down_key\n    , coalesce(observation_id, 'NULL') as drill_down_value\n    ,'RESULT' as field_name\n    ,case when m.result is not null then 'valid' else 'null' end as bucket_name\n    ,cast(null as TEXT) as invalid_reason\n    ,cast(substring(result, 1, 255) as TEXT) as field_value\n    , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom tuva.input_layer.observation as m", "relation_name": "tuva.data_quality.observation_result", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:46.872141Z", "completed_at": "2025-06-03T19:49:46.883901Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:46.889474Z", "completed_at": "2025-06-03T19:49:46.889480Z"}], "thread_id": "Thread-4", "execution_time": 0.01884007453918457, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.data_quality__observation_source_code", "compiled": true, "compiled_code": "\n\n\nselect\n      m.data_source\n    , coalesce(m.observation_date,cast('1900-01-01' as date)) as source_date\n    , 'OBSERVATION' as table_name\n    , 'Observation ID' as drill_down_key\n    , coalesce(observation_id, 'NULL') as drill_down_value\n    , 'SOURCE_CODE' as field_name\n    , case when m.source_code is not null then 'valid' else 'null' end as bucket_name\n    , cast(null as TEXT) as invalid_reason\n    , cast(source_code as TEXT) as field_value\n    , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom tuva.input_layer.observation as m", "relation_name": "tuva.data_quality.observation_source_code", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:46.878679Z", "completed_at": "2025-06-03T19:49:46.889890Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:46.890377Z", "completed_at": "2025-06-03T19:49:46.890381Z"}], "thread_id": "Thread-1", "execution_time": 0.018512964248657227, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.data_quality__observation_source_code_type", "compiled": true, "compiled_code": "\n\n\nselect\n      m.data_source\n    , coalesce(m.observation_date,cast('1900-01-01' as date)) as source_date\n    , 'OBSERVATION' as table_name\n    , 'Observation ID' as drill_down_key\n    , coalesce(observation_id, 'NULL') as drill_down_value\n    , 'SOURCE_CODE_TYPE' as field_name\n    , case when m.source_code_type is not null then 'valid' else 'null' end as bucket_name\n    , cast(null as TEXT) as invalid_reason\n    , cast(source_code_type as TEXT) as field_value\n    , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom tuva.input_layer.observation as m", "relation_name": "tuva.data_quality.observation_source_code_type", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:46.884102Z", "completed_at": "2025-06-03T19:49:46.891007Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:46.891639Z", "completed_at": "2025-06-03T19:49:46.891643Z"}], "thread_id": "Thread-2", "execution_time": 0.013271093368530273, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.data_quality__observation_source_description", "compiled": true, "compiled_code": "\n\n\nselect\n      m.data_source\n    , coalesce(m.observation_date,cast('1900-01-01' as date)) as source_date\n    , 'OBSERVATION' as table_name\n    , 'Observation ID' as drill_down_key\n    , coalesce(observation_id, 'NULL') as drill_down_value\n    , 'SOURCE_DESCRIPTION' as field_name\n    , case when m.source_description is not null then 'valid' else 'null' end as bucket_name\n    , cast(null as TEXT) as invalid_reason\n    , cast(substring(source_description, 1, 255) as TEXT) as field_value\n    , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom tuva.input_layer.observation as m", "relation_name": "tuva.data_quality.observation_source_description", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:46.892207Z", "completed_at": "2025-06-03T19:49:46.903777Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:46.909369Z", "completed_at": "2025-06-03T19:49:46.909376Z"}], "thread_id": "Thread-4", "execution_time": 0.018681049346923828, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.data_quality__observation_source_reference_range_high", "compiled": true, "compiled_code": "\n\n\nselect\n      m.data_source\n    , coalesce(m.observation_date,cast('1900-01-01' as date)) as source_date\n    , 'OBSERVATION' as table_name\n    , 'Observation ID' as drill_down_key\n    , coalesce(observation_id, 'NULL') as drill_down_value\n    , 'SOURCE_REFERENCE_RANGE_HIGH' as field_name\n    , case when m.source_reference_range_high is not null then 'valid' else 'null' end as bucket_name\n    , cast(null as TEXT) as invalid_reason\n    , cast(source_reference_range_high as TEXT) as field_value\n    , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom tuva.input_layer.observation as m", "relation_name": "tuva.data_quality.observation_source_reference_range_high", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:46.897853Z", "completed_at": "2025-06-03T19:49:46.910279Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:46.911771Z", "completed_at": "2025-06-03T19:49:46.911776Z"}], "thread_id": "Thread-1", "execution_time": 0.019854068756103516, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.data_quality__observation_source_reference_range_low", "compiled": true, "compiled_code": "\n\n\nselect\n      m.data_source\n    , coalesce(m.observation_date,cast('1900-01-01' as date)) as source_date\n    , 'OBSERVATION' as table_name\n    , 'Observation ID' as drill_down_key\n    , coalesce(observation_id, 'NULL') as drill_down_value\n    , 'SOURCE_REFERENCE_RANGE_LOW' as field_name\n    , case when m.source_reference_range_low is not null then 'valid' else 'null' end as bucket_name\n    , cast(null as TEXT) as invalid_reason\n    , cast(source_reference_range_low as TEXT) as field_value\n    , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom tuva.input_layer.observation as m", "relation_name": "tuva.data_quality.observation_source_reference_range_low", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:46.904346Z", "completed_at": "2025-06-03T19:49:46.912355Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:46.913241Z", "completed_at": "2025-06-03T19:49:46.913245Z"}], "thread_id": "Thread-2", "execution_time": 0.01570296287536621, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.data_quality__observation_source_units", "compiled": true, "compiled_code": "\n\n\nselect\n      m.data_source\n    , coalesce(m.observation_date,cast('1900-01-01' as date)) as source_date\n    , 'OBSERVATION' as table_name\n    , 'Observation ID' as drill_down_key\n    , coalesce(observation_id, 'NULL') as drill_down_value\n    , 'SOURCE_UNITS' as field_name\n    , case when m.source_units is not null then 'valid' else 'null' end as bucket_name\n    , cast(null as TEXT) as invalid_reason\n    , cast(source_units as TEXT) as field_value\n    , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom tuva.input_layer.observation as m", "relation_name": "tuva.data_quality.observation_source_units", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:46.914086Z", "completed_at": "2025-06-03T19:49:46.926575Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:46.932424Z", "completed_at": "2025-06-03T19:49:46.932433Z"}], "thread_id": "Thread-4", "execution_time": 0.020359039306640625, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.input_layer__observation", "compiled": true, "compiled_code": "\nselect *\nfrom tuva.input_layer.observation", "relation_name": "tuva.input_layer.input_layer__observation", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:46.919492Z", "completed_at": "2025-06-03T19:49:46.932885Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:46.933403Z", "completed_at": "2025-06-03T19:49:46.933408Z"}], "thread_id": "Thread-1", "execution_time": 0.019733905792236328, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.data_quality__practitioner_data_source", "compiled": true, "compiled_code": "\n\n\nselect\n      m.data_source\n    \n        , cast(coalesce(convert_timezone('UTC', current_timestamp()), cast('1900-01-01' as date)) as date) as source_date\n    \n    , 'PRACTITIONER' as table_name\n    , 'Practitioner ID' as drill_down_key\n    , coalesce(practitioner_id, 'NULL') as drill_down_value\n    , 'DATA_SOURCE' as field_name\n    , case when m.data_source is not null then 'valid' else 'null' end as bucket_name\n    , cast(null as TEXT) as invalid_reason\n    , cast(data_source as TEXT) as field_value\n    , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom tuva.input_layer.practitioner as m", "relation_name": "tuva.data_quality.practitioner_data_source", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:46.926803Z", "completed_at": "2025-06-03T19:49:46.934496Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:46.935154Z", "completed_at": "2025-06-03T19:49:46.935158Z"}], "thread_id": "Thread-2", "execution_time": 0.01600790023803711, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.data_quality__practitioner_first_name", "compiled": true, "compiled_code": "\n\n\nselect\n      m.data_source\n    \n        , cast(coalesce(convert_timezone('UTC', current_timestamp()), cast('1900-01-01' as date)) as date) as source_date\n    \n    , 'PRACTITIONER' as table_name\n    , 'Practitioner ID' as drill_down_key\n    , coalesce(practitioner_id, 'NULL') as drill_down_value\n    , 'FIRST_NAME' as field_name\n    , case when m.first_name is not null then 'valid' else 'null' end as bucket_name\n    , cast(null as TEXT) as invalid_reason\n    , cast(first_name as TEXT) as field_value\n    , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom tuva.input_layer.practitioner as m", "relation_name": "tuva.data_quality.practitioner_first_name", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:46.935725Z", "completed_at": "2025-06-03T19:49:46.948396Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:46.955662Z", "completed_at": "2025-06-03T19:49:46.955671Z"}], "thread_id": "Thread-4", "execution_time": 0.02150702476501465, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.data_quality__practitioner_last_name", "compiled": true, "compiled_code": "\n\n\nselect\n      m.data_source\n    \n        , cast(coalesce(convert_timezone('UTC', current_timestamp()), cast('1900-01-01' as date)) as date) as source_date\n    \n    , 'PRACTITIONER' as table_name\n    , 'Practitioner ID' as drill_down_key\n    , coalesce(practitioner_id, 'NULL') as drill_down_value\n    , 'LAST_NAME' as field_name\n    , case when m.last_name is not null then 'valid' else 'null' end as bucket_name\n    , cast(null as TEXT) as invalid_reason\n    , cast(last_name as TEXT) as field_value\n    , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom tuva.input_layer.practitioner as m", "relation_name": "tuva.data_quality.practitioner_last_name", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:46.942612Z", "completed_at": "2025-06-03T19:49:46.956184Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:46.956672Z", "completed_at": "2025-06-03T19:49:46.956676Z"}], "thread_id": "Thread-1", "execution_time": 0.021231651306152344, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.data_quality__practitioner_practice_affiliation", "compiled": true, "compiled_code": "\n\n\nselect\n      m.data_source\n    \n        , cast(coalesce(convert_timezone('UTC', current_timestamp()), cast('1900-01-01' as date)) as date) as source_date\n    \n    , 'PRACTITIONER' as table_name\n    , 'Practitioner ID' as drill_down_key\n    , coalesce(practitioner_id, 'NULL') as drill_down_value\n    , 'PRACTICE_AFFILIATION' as field_name\n    , case when m.practice_affiliation is not null then 'valid' else 'null' end as bucket_name\n    , cast(null as TEXT) as invalid_reason\n    , cast(practice_affiliation as TEXT) as field_value\n    , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom tuva.input_layer.practitioner as m", "relation_name": "tuva.data_quality.practitioner_practice_affiliation", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:46.948668Z", "completed_at": "2025-06-03T19:49:46.957333Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:46.958107Z", "completed_at": "2025-06-03T19:49:46.958112Z"}], "thread_id": "Thread-2", "execution_time": 0.01581597328186035, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.data_quality__practitioner_practitioner_id", "compiled": true, "compiled_code": "\n\n\nselect\n      m.data_source\n    \n        , cast(coalesce(convert_timezone('UTC', current_timestamp()), cast('1900-01-01' as date)) as date) as source_date\n    \n    , 'PRACTITIONER' as table_name\n    , 'Practitioner ID' as drill_down_key\n    , coalesce(practitioner_id, 'NULL') as drill_down_value\n    , 'PRACTITIONER_ID' as field_name\n    , case when m.practitioner_id is not null then 'valid' else 'null' end as bucket_name\n    , cast(null as TEXT) as invalid_reason\n    , cast(practitioner_id as TEXT) as field_value\n    , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom tuva.input_layer.practitioner as m", "relation_name": "tuva.data_quality.practitioner_practitioner_id", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:46.958796Z", "completed_at": "2025-06-03T19:49:46.972780Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:46.979008Z", "completed_at": "2025-06-03T19:49:46.979016Z"}], "thread_id": "Thread-4", "execution_time": 0.022042274475097656, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.data_quality__practitioner_specialty", "compiled": true, "compiled_code": "\n\n\nselect\n      m.data_source\n    \n        , cast(coalesce(convert_timezone('UTC', current_timestamp()), cast('1900-01-01' as date)) as date) as source_date\n    \n    , 'PRACTITIONER' as table_name\n    , 'Practitioner ID' as drill_down_key\n    , coalesce(practitioner_id, 'NULL') as drill_down_value\n    , 'SPECIALTY' as field_name\n    , case when m.specialty is not null then 'valid' else 'null' end as bucket_name\n    , cast(null as TEXT) as invalid_reason\n    , cast(specialty as TEXT) as field_value\n    , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom tuva.input_layer.practitioner as m", "relation_name": "tuva.data_quality.practitioner_specialty", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:46.966179Z", "completed_at": "2025-06-03T19:49:46.979564Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:46.980122Z", "completed_at": "2025-06-03T19:49:46.980127Z"}], "thread_id": "Thread-1", "execution_time": 0.02169489860534668, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.data_quality__practitioner_sub_specialty", "compiled": true, "compiled_code": "\n\n\nselect\n      m.data_source\n    \n        , cast(coalesce(convert_timezone('UTC', current_timestamp()), cast('1900-01-01' as date)) as date) as source_date\n    \n    , 'PRACTITIONER' as table_name\n    , 'Practitioner ID' as drill_down_key\n    , coalesce(practitioner_id, 'NULL') as drill_down_value\n    , 'SUB_SPECIALTY' as field_name\n    , case when m.sub_specialty is not null then 'valid' else 'null' end as bucket_name\n    , cast(null as TEXT) as invalid_reason\n    , cast(sub_specialty as TEXT) as field_value\n    , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom tuva.input_layer.practitioner as m", "relation_name": "tuva.data_quality.practitioner_sub_specialty", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:46.973131Z", "completed_at": "2025-06-03T19:49:46.980953Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:46.981776Z", "completed_at": "2025-06-03T19:49:46.981782Z"}], "thread_id": "Thread-2", "execution_time": 0.015970945358276367, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.input_layer__practitioner", "compiled": true, "compiled_code": "\nselect *\nfrom tuva.input_layer.practitioner", "relation_name": "tuva.input_layer.input_layer__practitioner", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:46.982439Z", "completed_at": "2025-06-03T19:49:46.998836Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:47.005385Z", "completed_at": "2025-06-03T19:49:47.005394Z"}], "thread_id": "Thread-4", "execution_time": 0.024818897247314453, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.data_quality__patient_address", "compiled": true, "compiled_code": "\n\n\nselect\n      m.data_source\n    \n        , cast(coalesce(convert_timezone('UTC', current_timestamp()), cast('1900-01-01' as date)) as date) as source_date\n    \n    , 'PATIENT' as table_name\n    , 'Person ID' as drill_down_key\n    , coalesce(person_id, 'NULL') as drill_down_value\n    , 'ADDRESS' as field_name\n    , case when m.address is not null then 'valid' else 'null' end as bucket_name\n    , cast(null as TEXT) as invalid_reason\n    , cast(address as TEXT) as field_value\n    , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom tuva.input_layer.patient as m", "relation_name": "tuva.data_quality.patient_address", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:46.990117Z", "completed_at": "2025-06-03T19:49:47.005995Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:47.006539Z", "completed_at": "2025-06-03T19:49:47.006543Z"}], "thread_id": "Thread-1", "execution_time": 0.02442193031311035, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.data_quality__patient_birth_date", "compiled": true, "compiled_code": "\n\n\nselect\n      m.data_source\n    \n        , cast(coalesce(convert_timezone('UTC', current_timestamp()), cast('1900-01-01' as date)) as date) as source_date\n    \n    , 'PATIENT' as table_name\n    , 'Person ID' as drill_down_key\n    , coalesce(person_id, 'NULL') as drill_down_value\n    , 'BIRTH_DATE' as field_name\n    , case\n        when m.birth_date > cast(substring('2025-06-03 19:49:40.396647+00:00',1,10) as date) then 'invalid'\n        when m.birth_date <= cast('1901-01-01' as date) then 'invalid'\n        when m.birth_date > m.death_date then 'invalid'\n        when m.birth_date is null then 'null'\n        else 'valid'\n    end as bucket_name\n    , case\n        when m.birth_date > cast(substring('2025-06-03 19:49:40.396647+00:00',1,10) as date) then 'future'\n        when m.birth_date <= cast('1901-01-01' as date) then 'too old'\n        when m.birth_date > m.death_date then 'Birth date after death date'\n        else null\n    end as invalid_reason\n    , cast(birth_date as TEXT) as field_value\n    , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom tuva.input_layer.patient as m", "relation_name": "tuva.data_quality.patient_birth_date", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:46.999076Z", "completed_at": "2025-06-03T19:49:47.007550Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:47.008270Z", "completed_at": "2025-06-03T19:49:47.008275Z"}], "thread_id": "Thread-2", "execution_time": 0.018524169921875, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.data_quality__patient_city", "compiled": true, "compiled_code": "\n\n\nselect\n    m.data_source\n    \n        , cast(coalesce(convert_timezone('UTC', current_timestamp()), cast('1900-01-01' as date)) as date) as source_date\n    \n    ,'PATIENT' as table_name\n    ,'Person ID' as drill_down_key\n    , coalesce(person_id, 'NULL') as drill_down_value\n    ,'CITY' as field_name\n    ,case when m.city is not null then 'valid' else 'null' end as bucket_name\n    ,cast(null as TEXT) as invalid_reason\n    ,cast(city as TEXT) as field_value\n    , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom tuva.input_layer.patient as m", "relation_name": "tuva.data_quality.patient_city", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:47.008725Z", "completed_at": "2025-06-03T19:49:47.029912Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:47.032242Z", "completed_at": "2025-06-03T19:49:47.032250Z"}], "thread_id": "Thread-4", "execution_time": 0.02531909942626953, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.data_quality__patient_county", "compiled": true, "compiled_code": "\n\n\nselect\n    m.data_source\n    \n        , cast(coalesce(convert_timezone('UTC', current_timestamp()), cast('1900-01-01' as date)) as date) as source_date\n    \n    ,'PATIENT' as table_name\n    ,'Person ID' as drill_down_key\n    , coalesce(person_id, 'NULL') as drill_down_value\n    ,'COUNTY' as field_name\n    ,case when m.county is not null then 'valid' else 'null' end as bucket_name\n    ,cast(null as TEXT) as invalid_reason\n    ,cast(county as TEXT) as field_value\n    , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom tuva.input_layer.patient as m", "relation_name": "tuva.data_quality.patient_county", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:47.016480Z", "completed_at": "2025-06-03T19:49:47.032732Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:47.033346Z", "completed_at": "2025-06-03T19:49:47.033350Z"}], "thread_id": "Thread-1", "execution_time": 0.025393962860107422, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.data_quality__patient_data_source", "compiled": true, "compiled_code": "\n\n\nselect\n      m.data_source\n    \n        , cast(coalesce(convert_timezone('UTC', current_timestamp()), cast('1900-01-01' as date)) as date) as source_date\n    \n    , 'PATIENT' as table_name\n    , 'Person ID' as drill_down_key\n    , coalesce(person_id, 'NULL') as drill_down_value\n    , 'DATA_SOURCE' as field_name\n    , case when m.data_source is not null then 'valid' else 'null' end as bucket_name\n    , cast(null as TEXT) as invalid_reason\n    , cast(data_source as TEXT) as field_value\n    , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom tuva.input_layer.patient as m", "relation_name": "tuva.data_quality.patient_data_source", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:47.023614Z", "completed_at": "2025-06-03T19:49:47.034028Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:47.034760Z", "completed_at": "2025-06-03T19:49:47.034765Z"}], "thread_id": "Thread-2", "execution_time": 0.011898279190063477, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.data_quality__patient_death_date", "compiled": true, "compiled_code": "\n\n\nselect\n      m.data_source\n    \n        , cast(coalesce(convert_timezone('UTC', current_timestamp()), cast('1900-01-01' as date)) as date) as source_date\n    \n    , 'PATIENT' as table_name\n    , 'Person ID' as drill_down_key\n    , coalesce(person_id, 'NULL') as drill_down_value\n    , 'DEATH_DATE' as field_name\n    , case\n        when m.death_date > cast(substring('2025-06-03 19:49:40.396647+00:00',1,10) as date) then 'invalid'\n        when m.death_date <= cast('1901-01-01' as date) then 'invalid'\n        when m.death_date > m.birth_date then 'invalid'\n        when m.death_date is null then 'null'\n        else 'valid'\n    end as bucket_name\n    , case\n        when m.death_date > cast(substring('2025-06-03 19:49:40.396647+00:00',1,10) as date) then 'future'\n        when m.death_date <= cast('1901-01-01' as date) then 'too old'\n        when m.death_date > m.birth_date then 'Death date after birth date'\n        else null\n    end as invalid_reason\n    , cast(death_date as TEXT) as field_value\n    , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom tuva.input_layer.patient as m", "relation_name": "tuva.data_quality.patient_death_date", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:47.035382Z", "completed_at": "2025-06-03T19:49:47.052009Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:47.052648Z", "completed_at": "2025-06-03T19:49:47.052659Z"}], "thread_id": "Thread-4", "execution_time": 0.018997907638549805, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.data_quality__patient_death_flag", "compiled": true, "compiled_code": "\n\n\nselect\n      m.data_source\n    \n        , cast(coalesce(convert_timezone('UTC', current_timestamp()), cast('1900-01-01' as date)) as date) as source_date\n    \n    , 'PATIENT' as table_name\n    , 'Person ID' as drill_down_key\n    , coalesce(person_id, 'NULL') as drill_down_value\n    , 'DEATH_FLAG' as field_name\n    , case when m.death_flag is not null then 'valid' else 'null' end as bucket_name\n    , cast(null as TEXT) as invalid_reason\n    , cast(death_flag as TEXT) as field_value\n    , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom tuva.input_layer.patient as m", "relation_name": "tuva.data_quality.patient_death_flag", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:47.044111Z", "completed_at": "2025-06-03T19:49:47.061880Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:47.062667Z", "completed_at": "2025-06-03T19:49:47.062675Z"}], "thread_id": "Thread-1", "execution_time": 0.027614831924438477, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.data_quality__patient_first_name", "compiled": true, "compiled_code": "\n\n\nselect\n      m.data_source\n    \n        , cast(coalesce(convert_timezone('UTC', current_timestamp()), cast('1900-01-01' as date)) as date) as source_date\n    \n    , 'PATIENT' as table_name\n    , 'Person ID' as drill_down_key\n    , coalesce(person_id, 'NULL') as drill_down_value\n    , 'FIRST_NAME' as field_name\n    , case when m.first_name is not null then 'valid' else 'null' end as bucket_name\n    , cast(null as TEXT) as invalid_reason\n    , cast(first_name as TEXT) as field_value\n    , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom tuva.input_layer.patient as m", "relation_name": "tuva.data_quality.patient_first_name", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:47.053305Z", "completed_at": "2025-06-03T19:49:47.063484Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:47.071588Z", "completed_at": "2025-06-03T19:49:47.071597Z"}], "thread_id": "Thread-2", "execution_time": 0.028139829635620117, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.data_quality__patient_last_name", "compiled": true, "compiled_code": "\n\n\nselect\n      m.data_source\n    \n        , cast(coalesce(convert_timezone('UTC', current_timestamp()), cast('1900-01-01' as date)) as date) as source_date\n    \n    , 'PATIENT' as table_name\n    , 'Person ID' as drill_down_key\n    , coalesce(person_id, 'NULL') as drill_down_value\n    , 'LAST_NAME' as field_name\n    , case when m.last_name is not null then 'valid' else 'null' end as bucket_name\n    , cast(null as TEXT) as invalid_reason\n    , cast(last_name as TEXT) as field_value\n    , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom tuva.input_layer.patient as m", "relation_name": "tuva.data_quality.patient_last_name", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:47.064051Z", "completed_at": "2025-06-03T19:49:47.080303Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:47.082327Z", "completed_at": "2025-06-03T19:49:47.082335Z"}], "thread_id": "Thread-4", "execution_time": 0.020101070404052734, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.data_quality__patient_latitude", "compiled": true, "compiled_code": "\n\n\nselect\n      m.data_source\n    \n        , cast(coalesce(convert_timezone('UTC', current_timestamp()), cast('1900-01-01' as date)) as date) as source_date\n    \n    , 'PATIENT' as table_name\n    , 'Person ID' as drill_down_key\n    , coalesce(person_id, 'NULL') as drill_down_value\n    , 'LATITUDE' as field_name\n    , case when m.latitude is not null then 'valid' else 'null' end as bucket_name\n    , cast(null as TEXT) as invalid_reason\n    , cast(latitude as TEXT) as field_value\n    , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom tuva.input_layer.patient as m", "relation_name": "tuva.data_quality.patient_latitude", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:47.073932Z", "completed_at": "2025-06-03T19:49:47.090368Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:47.091551Z", "completed_at": "2025-06-03T19:49:47.091559Z"}], "thread_id": "Thread-1", "execution_time": 0.019336223602294922, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.data_quality__patient_longitude", "compiled": true, "compiled_code": "\n\n\nselect\n      m.data_source\n    \n        , cast(coalesce(convert_timezone('UTC', current_timestamp()), cast('1900-01-01' as date)) as date) as source_date\n    \n    , 'PATIENT' as table_name\n    , 'Person ID' as drill_down_key\n    , coalesce(person_id, 'NULL') as drill_down_value\n    , 'LONGITUDE' as field_name\n    , case when m.longitude is not null then 'valid' else 'null' end as bucket_name\n    , cast(null as TEXT) as invalid_reason\n    , cast(longitude as TEXT) as field_value\n    , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom tuva.input_layer.patient as m", "relation_name": "tuva.data_quality.patient_longitude", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:47.082890Z", "completed_at": "2025-06-03T19:49:47.093491Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:47.101433Z", "completed_at": "2025-06-03T19:49:47.101449Z"}], "thread_id": "Thread-2", "execution_time": 0.027952194213867188, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.data_quality__patient_patient_id", "compiled": true, "compiled_code": "\n\n\nselect\n      m.data_source\n    \n        , cast(coalesce(convert_timezone('UTC', current_timestamp()), cast('1900-01-01' as date)) as date) as source_date\n    \n    , 'PATIENT' as table_name\n    , 'Person ID' as drill_down_key\n    , coalesce(patient_id, 'NULL') as drill_down_value\n    , 'PATIENT_ID' as field_name\n    , case when m.patient_id is not null then 'valid' else 'null' end as bucket_name\n    , cast(null as TEXT) as invalid_reason\n    , cast(patient_id as TEXT) as field_value\n    , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom tuva.input_layer.patient as m", "relation_name": "tuva.data_quality.patient_patient_id", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:47.094277Z", "completed_at": "2025-06-03T19:49:47.110751Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:47.112077Z", "completed_at": "2025-06-03T19:49:47.112088Z"}], "thread_id": "Thread-4", "execution_time": 0.02098679542541504, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.data_quality__patient_state", "compiled": true, "compiled_code": "\n\n\nselect\n      m.data_source\n    \n        , cast(coalesce(convert_timezone('UTC', current_timestamp()), cast('1900-01-01' as date)) as date) as source_date\n    \n    , 'PATIENT' as table_name\n    , 'Person ID' as drill_down_key\n    , coalesce(person_id, 'NULL') as drill_down_value\n    , 'STATE' as field_name\n    , case when m.state is not null then 'valid' else 'null' end as bucket_name\n    , cast(null as TEXT) as invalid_reason\n    , cast(state as TEXT) as field_value\n    , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom tuva.input_layer.patient as m", "relation_name": "tuva.data_quality.patient_state", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:47.104403Z", "completed_at": "2025-06-03T19:49:47.118929Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:47.119620Z", "completed_at": "2025-06-03T19:49:47.119627Z"}], "thread_id": "Thread-1", "execution_time": 0.0177309513092041, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.data_quality__patient_zip_code", "compiled": true, "compiled_code": "\n\n\nselect\n      m.data_source\n    \n        , cast(coalesce(convert_timezone('UTC', current_timestamp()), cast('1900-01-01' as date)) as date) as source_date\n    \n    , 'PATIENT' as table_name\n    , 'Person ID' as drill_down_key\n    , coalesce(person_id, 'NULL') as drill_down_value\n    , 'ZIP_CODE' as field_name\n    , case when m.zip_code is not null then 'valid' else 'null' end as bucket_name\n    , cast(null as TEXT) as invalid_reason\n    , cast(zip_code as TEXT) as field_value\n    , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom tuva.input_layer.patient as m", "relation_name": "tuva.data_quality.patient_zip_code", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:47.113021Z", "completed_at": "2025-06-03T19:49:47.120344Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:47.128606Z", "completed_at": "2025-06-03T19:49:47.128646Z"}], "thread_id": "Thread-2", "execution_time": 0.024705886840820312, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.input_layer__patient", "compiled": true, "compiled_code": "\nselect *\nfrom tuva.input_layer.patient", "relation_name": "tuva.input_layer.input_layer__patient", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:47.120992Z", "completed_at": "2025-06-03T19:49:47.131274Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:47.138598Z", "completed_at": "2025-06-03T19:49:47.138608Z"}], "thread_id": "Thread-4", "execution_time": 0.01944899559020996, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.data_quality__procedure_claim_id", "compiled": true, "compiled_code": "\n\n\nselect\n      m.data_source\n    , coalesce(m.procedure_date,cast('1900-01-01' as date)) as source_date\n    , 'PROCEDURE' as table_name\n    , 'Procedure ID' as drill_down_key\n    , coalesce(procedure_id, 'NULL') as drill_down_value\n    , 'CLAIM_ID' as field_name\n    , case when m.claim_id is not null then 'valid' else 'null' end as bucket_name\n    , cast(null as TEXT) as invalid_reason\n    , cast(claim_id as TEXT) as field_value\n    , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom tuva.input_layer.procedure as m", "relation_name": "tuva.data_quality.procedure_claim_id", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:47.131533Z", "completed_at": "2025-06-03T19:49:47.146640Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:47.147388Z", "completed_at": "2025-06-03T19:49:47.147395Z"}], "thread_id": "Thread-1", "execution_time": 0.018244028091430664, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.data_quality__procedure_data_source", "compiled": true, "compiled_code": "\n\n\nselect\n      m.data_source\n    , coalesce(m.procedure_date,cast('1900-01-01' as date)) as source_date\n    , 'PROCEDURE' as table_name\n    , 'Procedure ID' as drill_down_key\n    , coalesce(procedure_id, 'NULL') as drill_down_value\n    , 'DATA_SOURCE' as field_name\n    , case when m.data_source is not null then 'valid' else 'null' end as bucket_name\n    , cast(null as TEXT) as invalid_reason\n    , cast(data_source as TEXT) as field_value\n    , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom tuva.input_layer.procedure as m", "relation_name": "tuva.data_quality.procedure_data_source", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:47.139242Z", "completed_at": "2025-06-03T19:49:47.148209Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:47.154627Z", "completed_at": "2025-06-03T19:49:47.154636Z"}], "thread_id": "Thread-2", "execution_time": 0.023854970932006836, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.data_quality__procedure_encounter_id", "compiled": true, "compiled_code": "\n\n\nselect\n      m.data_source\n    , coalesce(m.procedure_date,cast('1900-01-01' as date)) as source_date\n    , 'PROCEDURE' as table_name\n    , 'Procedure ID' as drill_down_key\n    , coalesce(procedure_id, 'NULL') as drill_down_value\n    , 'ENCOUNTER_ID' as field_name\n    , case when m.encounter_id is not null then 'valid' else 'null' end as bucket_name\n    , cast(null as TEXT) as invalid_reason\n    , cast(encounter_id as TEXT) as field_value\n    , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom tuva.input_layer.procedure as m", "relation_name": "tuva.data_quality.procedure_encounter_id", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:47.148765Z", "completed_at": "2025-06-03T19:49:47.162068Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:47.163958Z", "completed_at": "2025-06-03T19:49:47.163967Z"}], "thread_id": "Thread-4", "execution_time": 0.017061233520507812, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.data_quality__procedure_normalized_description", "compiled": true, "compiled_code": "\n\n\nselect\n      m.data_source\n    , coalesce(m.procedure_date,cast('1900-01-01' as date)) as source_date\n    , 'PROCEDURE' as table_name\n    , 'Procedure ID' as drill_down_key\n    , coalesce(procedure_id, 'NULL') as drill_down_value\n    , 'NORMALIZED_DESCRIPTION' as field_name\n    , case when m.normalized_description is not null then 'valid' else 'null' end as bucket_name\n    , cast(null as TEXT) as invalid_reason\n    , cast(substring(normalized_description, 1, 255) as TEXT) as field_value\n    , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom tuva.input_layer.procedure as m", "relation_name": "tuva.data_quality.procedure_normalized_description", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:47.156434Z", "completed_at": "2025-06-03T19:49:47.170929Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:47.171585Z", "completed_at": "2025-06-03T19:49:47.171593Z"}], "thread_id": "Thread-1", "execution_time": 0.016555070877075195, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.data_quality__procedure_patient_id", "compiled": true, "compiled_code": "\n\n\nselect\n      m.data_source\n    , coalesce(m.procedure_date,cast('1900-01-01' as date)) as source_date\n    , 'PROCEDURE' as table_name\n    , 'Procedure ID' as drill_down_key\n    , coalesce(procedure_id, 'NULL') as drill_down_value\n    , 'PATIENT_ID' as field_name\n    , case when m.patient_id is not null then 'valid' else 'null' end as bucket_name\n    , cast(null as TEXT) as invalid_reason\n    , cast(patient_id as TEXT) as field_value\n    , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom tuva.input_layer.procedure as m", "relation_name": "tuva.data_quality.procedure_patient_id", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:47.164502Z", "completed_at": "2025-06-03T19:49:47.178308Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:47.180452Z", "completed_at": "2025-06-03T19:49:47.180460Z"}], "thread_id": "Thread-2", "execution_time": 0.024367809295654297, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.data_quality__procedure_practitioner_id", "compiled": true, "compiled_code": "\n\n\nselect\n      m.data_source\n    , coalesce(m.procedure_date,cast('1900-01-01' as date)) as source_date\n    , 'PROCEDURE' as table_name\n    , 'Procedure ID' as drill_down_key\n    , coalesce(procedure_id, 'NULL') as drill_down_value\n    , 'PRACTITIONER_ID' as field_name\n    , case when m.practitioner_id is not null then 'valid' else 'null' end as bucket_name\n    , cast(null as TEXT) as invalid_reason\n    , cast(practitioner_id as TEXT) as field_value\n    , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom tuva.input_layer.procedure as m", "relation_name": "tuva.data_quality.procedure_practitioner_id", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:47.172585Z", "completed_at": "2025-06-03T19:49:47.188402Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:47.189072Z", "completed_at": "2025-06-03T19:49:47.189079Z"}], "thread_id": "Thread-4", "execution_time": 0.01791214942932129, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.data_quality__procedure_procedure_date", "compiled": true, "compiled_code": "\n\n\nselect\n      m.data_source\n    , coalesce(m.procedure_date,cast('1900-01-01' as date)) as source_date\n    , 'PROCEDURE' as table_name\n    , 'Procedure ID' as drill_down_key\n    , coalesce(procedure_id, 'NULL') as drill_down_value\n    , 'PROCEDURE_DATE' as field_name\n    , case\n        when m.procedure_date > cast(substring('2025-06-03 19:49:40.396647+00:00',1,10) as date) then 'invalid'\n        when m.procedure_date <= cast('1901-01-01' as date) then 'invalid'\n        when m.procedure_date is null then 'null'\n        else 'valid'\n    end as bucket_name\n    , case\n        when m.procedure_date > cast(substring('2025-06-03 19:49:40.396647+00:00',1,10) as date) then 'future'\n        when m.procedure_date <= cast('1901-01-01' as date) then 'too old'\n        else null\n    end as invalid_reason\n    , cast(procedure_date as TEXT) as field_value\n    , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom tuva.input_layer.procedure as m", "relation_name": "tuva.data_quality.procedure_procedure_date", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:47.181654Z", "completed_at": "2025-06-03T19:49:47.195451Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:47.196008Z", "completed_at": "2025-06-03T19:49:47.196014Z"}], "thread_id": "Thread-1", "execution_time": 0.015959978103637695, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.data_quality__procedure_procedure_id", "compiled": true, "compiled_code": "\n\n\nselect\n      m.data_source\n    , coalesce(m.procedure_date,cast('1900-01-01' as date)) as source_date\n    , 'PROCEDURE' as table_name\n    , 'Procedure ID' as drill_down_key\n    , coalesce(procedure_id, 'NULL') as drill_down_value\n    , 'PROCEDURE_ID' as field_name\n    , case when m.procedure_id is not null then 'valid' else 'null' end as bucket_name\n    , cast(null as TEXT) as invalid_reason\n    , cast(procedure_id as TEXT) as field_value\n    , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom tuva.input_layer.procedure as m", "relation_name": "tuva.data_quality.procedure_procedure_id", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:47.190079Z", "completed_at": "2025-06-03T19:49:47.196902Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:47.202800Z", "completed_at": "2025-06-03T19:49:47.202805Z"}], "thread_id": "Thread-2", "execution_time": 0.014214277267456055, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.data_quality__procedure_source_code", "compiled": true, "compiled_code": "\n\n\nselect\n      m.data_source\n    , coalesce(m.procedure_date,cast('1900-01-01' as date)) as source_date\n    , 'PROCEDURE' as table_name\n    , 'Procedure ID' as drill_down_key\n    , coalesce(procedure_id, 'NULL') as drill_down_value\n    , 'SOURCE_CODE' as field_name\n    , case when m.source_code is not null then 'valid' else 'null' end as bucket_name\n    , cast(null as TEXT) as invalid_reason\n    , cast(source_code as TEXT) as field_value\n    , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom tuva.input_layer.procedure as m", "relation_name": "tuva.data_quality.procedure_source_code", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:47.197093Z", "completed_at": "2025-06-03T19:49:47.208465Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:47.208947Z", "completed_at": "2025-06-03T19:49:47.208951Z"}], "thread_id": "Thread-4", "execution_time": 0.013322114944458008, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.data_quality__procedure_source_code_type", "compiled": true, "compiled_code": "\n\n\nselect\n      m.data_source\n    , coalesce(m.procedure_date,cast('1900-01-01' as date)) as source_date\n    , 'PROCEDURE' as table_name\n    , 'Procedure ID' as drill_down_key\n    , coalesce(procedure_id, 'NULL') as drill_down_value\n    , 'SOURCE_CODE_TYPE' as field_name\n    , case when m.source_code_type is not null then 'valid' else 'null' end as bucket_name\n    , cast(null as TEXT) as invalid_reason\n    , cast(source_code_type as TEXT) as field_value\n    , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom tuva.input_layer.procedure as m", "relation_name": "tuva.data_quality.procedure_source_code_type", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:47.203695Z", "completed_at": "2025-06-03T19:49:47.209768Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:47.215386Z", "completed_at": "2025-06-03T19:49:47.215393Z"}], "thread_id": "Thread-1", "execution_time": 0.012913703918457031, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.data_quality__procedure_source_description", "compiled": true, "compiled_code": "\n\n\nselect\n      m.data_source\n    , coalesce(m.procedure_date,cast('1900-01-01' as date)) as source_date\n    , 'PROCEDURE' as table_name\n    , 'Procedure ID' as drill_down_key\n    , coalesce(procedure_id, 'NULL') as drill_down_value\n    , 'SOURCE_DESCRIPTION' as field_name\n    , case when m.source_description is not null then 'valid' else 'null' end as bucket_name\n    , cast(null as TEXT) as invalid_reason\n    , cast(substring(source_description, 1, 255) as TEXT) as field_value\n    , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom tuva.input_layer.procedure as m", "relation_name": "tuva.data_quality.procedure_source_description", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:47.209954Z", "completed_at": "2025-06-03T19:49:47.220760Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:47.221364Z", "completed_at": "2025-06-03T19:49:47.221372Z"}], "thread_id": "Thread-2", "execution_time": 0.01277017593383789, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.input_layer__procedure", "compiled": true, "compiled_code": "\nselect *\nfrom tuva.input_layer.procedure", "relation_name": "tuva.input_layer.input_layer__procedure", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:47.216757Z", "completed_at": "2025-06-03T19:49:47.222363Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:47.227718Z", "completed_at": "2025-06-03T19:49:47.227724Z"}], "thread_id": "Thread-4", "execution_time": 0.01270294189453125, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.input_layer.eligibility", "compiled": true, "compiled_code": "select\n      person_id\n    , member_id\n    , subscriber_id\n    , gender\n    , race\n    , birth_date\n    , death_date\n    , death_flag\n    , enrollment_start_date\n    , enrollment_end_date\n    , payer\n    , payer_type\n    , plan\n    , original_reason_entitlement_code\n    , dual_status_code\n    , medicare_status_code\n    , group_id\n    , group_name\n    , first_name\n    , last_name\n    , social_security_number\n    , subscriber_relation\n    , address\n    , city\n    , state\n    , zip_code\n    , phone\n    , data_source\n    , file_name\n    , file_date\n    , ingest_datetime\nfrom tuva._tuva_synthetic.eligibility_seed", "relation_name": "tuva.input_layer.eligibility", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:47.222553Z", "completed_at": "2025-06-03T19:49:47.232404Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:47.234152Z", "completed_at": "2025-06-03T19:49:47.234159Z"}], "thread_id": "Thread-1", "execution_time": 0.013208150863647461, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.input_layer.medical_claim", "compiled": true, "compiled_code": "select\n      claim_id\n    , claim_line_number\n    , claim_type\n    , person_id\n    , member_id\n    , payer\n    , plan\n    , claim_start_date\n    , claim_end_date\n    , claim_line_start_date\n    , claim_line_end_date\n    , admission_date\n    , discharge_date\n    , admit_source_code\n    , admit_type_code\n    , discharge_disposition_code\n    , place_of_service_code\n    , bill_type_code\n    , drg_code_type\n    , drg_code\n    , revenue_center_code\n    , service_unit_quantity\n    , hcpcs_code\n    , hcpcs_modifier_1\n    , hcpcs_modifier_2\n    , hcpcs_modifier_3\n    , hcpcs_modifier_4\n    , hcpcs_modifier_5\n    , rendering_npi\n    , rendering_tin\n    , billing_npi\n    , billing_tin\n    , facility_npi\n    , paid_date\n    , paid_amount\n    , allowed_amount\n    , charge_amount\n    , coinsurance_amount\n    , copayment_amount\n    , deductible_amount\n    , total_cost_amount\n    , diagnosis_code_type\n    , diagnosis_code_1\n    , diagnosis_code_2\n    , diagnosis_code_3\n    , diagnosis_code_4\n    , diagnosis_code_5\n    , diagnosis_code_6\n    , diagnosis_code_7\n    , diagnosis_code_8\n    , diagnosis_code_9\n    , diagnosis_code_10\n    , diagnosis_code_11\n    , diagnosis_code_12\n    , diagnosis_code_13\n    , diagnosis_code_14\n    , diagnosis_code_15\n    , diagnosis_code_16\n    , diagnosis_code_17\n    , diagnosis_code_18\n    , diagnosis_code_19\n    , diagnosis_code_20\n    , diagnosis_code_21\n    , diagnosis_code_22\n    , diagnosis_code_23\n    , diagnosis_code_24\n    , diagnosis_code_25\n    , diagnosis_poa_1\n    , diagnosis_poa_2\n    , diagnosis_poa_3\n    , diagnosis_poa_4\n    , diagnosis_poa_5\n    , diagnosis_poa_6\n    , diagnosis_poa_7\n    , diagnosis_poa_8\n    , diagnosis_poa_9\n    , diagnosis_poa_10\n    , diagnosis_poa_11\n    , diagnosis_poa_12\n    , diagnosis_poa_13\n    , diagnosis_poa_14\n    , diagnosis_poa_15\n    , diagnosis_poa_16\n    , diagnosis_poa_17\n    , diagnosis_poa_18\n    , diagnosis_poa_19\n    , diagnosis_poa_20\n    , diagnosis_poa_21\n    , diagnosis_poa_22\n    , diagnosis_poa_23\n    , diagnosis_poa_24\n    , diagnosis_poa_25\n    , procedure_code_type\n    , procedure_code_1\n    , procedure_code_2\n    , procedure_code_3\n    , procedure_code_4\n    , procedure_code_5\n    , procedure_code_6\n    , procedure_code_7\n    , procedure_code_8\n    , procedure_code_9\n    , procedure_code_10\n    , procedure_code_11\n    , procedure_code_12\n    , procedure_code_13\n    , procedure_code_14\n    , procedure_code_15\n    , procedure_code_16\n    , procedure_code_17\n    , procedure_code_18\n    , procedure_code_19\n    , procedure_code_20\n    , procedure_code_21\n    , procedure_code_22\n    , procedure_code_23\n    , procedure_code_24\n    , procedure_code_25\n    , procedure_date_1\n    , procedure_date_2\n    , procedure_date_3\n    , procedure_date_4\n    , procedure_date_5\n    , procedure_date_6\n    , procedure_date_7\n    , procedure_date_8\n    , procedure_date_9\n    , procedure_date_10\n    , procedure_date_11\n    , procedure_date_12\n    , procedure_date_13\n    , procedure_date_14\n    , procedure_date_15\n    , procedure_date_16\n    , procedure_date_17\n    , procedure_date_18\n    , procedure_date_19\n    , procedure_date_20\n    , procedure_date_21\n    , procedure_date_22\n    , procedure_date_23\n    , procedure_date_24\n    , procedure_date_25\n    , in_network_flag\n    , data_source\n    , file_name\n    , file_date\n    , ingest_datetime\nfrom tuva._tuva_synthetic.medical_claim_seed", "relation_name": "tuva.input_layer.medical_claim", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:47.228582Z", "completed_at": "2025-06-03T19:49:47.235855Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:47.241555Z", "completed_at": "2025-06-03T19:49:47.241561Z"}], "thread_id": "Thread-2", "execution_time": 0.014173746109008789, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.input_layer.pharmacy_claim", "compiled": true, "compiled_code": "select\n      claim_id\n    , claim_line_number\n    , person_id\n    , member_id\n    , payer\n    , plan\n    , prescribing_provider_npi\n    , dispensing_provider_npi\n    , dispensing_date\n    , ndc_code\n    , quantity\n    , days_supply\n    , refills\n    , paid_date\n    , paid_amount\n    , allowed_amount\n    , charge_amount\n    , coinsurance_amount\n    , copayment_amount\n    , deductible_amount\n    , in_network_flag\n    , data_source\n    , file_name\n    , file_date\n    , ingest_datetime\nfrom tuva._tuva_synthetic.pharmacy_claim_seed", "relation_name": "tuva.input_layer.pharmacy_claim", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:47.236976Z", "completed_at": "2025-06-03T19:49:47.243185Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:47.341677Z", "completed_at": "2025-06-03T19:49:47.341686Z"}], "thread_id": "Thread-4", "execution_time": 0.1084752082824707, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.input_layer.provider_attribution", "compiled": true, "compiled_code": "select\n      person_id\n    , year_month\n    , payer\n    , plan\n    , data_source\n    , payer_attributed_provider\n    , payer_attributed_provider_practice\n    , payer_attributed_provider_organization\n    , payer_attributed_provider_lob\n    , custom_attributed_provider\n    , custom_attributed_provider_practice\n    , custom_attributed_provider_organization\n    , custom_attributed_provider_lob\nfrom tuva._tuva_synthetic.provider_attribution_seed", "relation_name": "tuva.input_layer.provider_attribution", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:47.244155Z", "completed_at": "2025-06-03T19:49:47.347679Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:47.357728Z", "completed_at": "2025-06-03T19:49:47.357735Z"}], "thread_id": "Thread-1", "execution_time": 0.11584615707397461, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.ccsr__dx_vertical_pivot", "compiled": true, "compiled_code": "\n\nwith codes as (\n\n    select\n          icd_10_cm_code as code\n        , icd_10_cm_code_description as code_description\n        -- loop to generate columns for CCSR categories 1-6\n        , ccsr_category_1\n        , ccsr_category_1_description\n        , ccsr_category_2\n        , ccsr_category_2_description\n        , ccsr_category_3\n        , ccsr_category_3_description\n        , ccsr_category_4\n        , ccsr_category_4_description\n        , ccsr_category_5\n        , ccsr_category_5_description\n        , ccsr_category_6\n        , ccsr_category_6_description\n        , default_ccsr_category_ip\n        , default_ccsr_category_op\n    from tuva.ccsr._value_set_dxccsr_v2023_1_cleaned_map\n\n)\n\n, long_union as (\n    -- generate select & union statements to pivot category columns to rows\n    \n    select\n          code\n        , code_description\n        , substring(ccsr_category_1, 1, 3) as ccsr_parent_category\n        , ccsr_category_1 as ccsr_category\n        , ccsr_category_1_description as ccsr_category_description\n        , 1 as ccsr_category_rank\n        , case when ccsr_category_1 = default_ccsr_category_ip then 1 else 0 end as is_ip_default_category\n        , case when ccsr_category_1 = default_ccsr_category_op then 1 else 0 end as is_op_default_category\n    from codes\n    union all\n    select\n          code\n        , code_description\n        , substring(ccsr_category_2, 1, 3) as ccsr_parent_category\n        , ccsr_category_2 as ccsr_category\n        , ccsr_category_2_description as ccsr_category_description\n        , 2 as ccsr_category_rank\n        , case when ccsr_category_2 = default_ccsr_category_ip then 1 else 0 end as is_ip_default_category\n        , case when ccsr_category_2 = default_ccsr_category_op then 1 else 0 end as is_op_default_category\n    from codes\n    union all\n    select\n          code\n        , code_description\n        , substring(ccsr_category_3, 1, 3) as ccsr_parent_category\n        , ccsr_category_3 as ccsr_category\n        , ccsr_category_3_description as ccsr_category_description\n        , 3 as ccsr_category_rank\n        , case when ccsr_category_3 = default_ccsr_category_ip then 1 else 0 end as is_ip_default_category\n        , case when ccsr_category_3 = default_ccsr_category_op then 1 else 0 end as is_op_default_category\n    from codes\n    union all\n    select\n          code\n        , code_description\n        , substring(ccsr_category_4, 1, 3) as ccsr_parent_category\n        , ccsr_category_4 as ccsr_category\n        , ccsr_category_4_description as ccsr_category_description\n        , 4 as ccsr_category_rank\n        , case when ccsr_category_4 = default_ccsr_category_ip then 1 else 0 end as is_ip_default_category\n        , case when ccsr_category_4 = default_ccsr_category_op then 1 else 0 end as is_op_default_category\n    from codes\n    union all\n    select\n          code\n        , code_description\n        , substring(ccsr_category_5, 1, 3) as ccsr_parent_category\n        , ccsr_category_5 as ccsr_category\n        , ccsr_category_5_description as ccsr_category_description\n        , 5 as ccsr_category_rank\n        , case when ccsr_category_5 = default_ccsr_category_ip then 1 else 0 end as is_ip_default_category\n        , case when ccsr_category_5 = default_ccsr_category_op then 1 else 0 end as is_op_default_category\n    from codes\n    union all\n    select\n          code\n        , code_description\n        , substring(ccsr_category_6, 1, 3) as ccsr_parent_category\n        , ccsr_category_6 as ccsr_category\n        , ccsr_category_6_description as ccsr_category_description\n        , 6 as ccsr_category_rank\n        , case when ccsr_category_6 = default_ccsr_category_ip then 1 else 0 end as is_ip_default_category\n        , case when ccsr_category_6 = default_ccsr_category_op then 1 else 0 end as is_op_default_category\n    from codes\n    \n\n)\n\nselect distinct\n    *\n    , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom long_union\n-- as not all diagnosis codes have multiple categories, we can discard nulls\nwhere ccsr_category is not null", "relation_name": "tuva.ccsr.dx_vertical_pivot", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:47.343105Z", "completed_at": "2025-06-03T19:49:47.358104Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:47.358684Z", "completed_at": "2025-06-03T19:49:47.358688Z"}], "thread_id": "Thread-2", "execution_time": 0.11536097526550293, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.clinical_concept_library__value_set_member_relevant_fields", "compiled": true, "compiled_code": "with value_set_member_relevant_fields as (\nselect\n  aa.concept_id\n  , aa.concept_name\n  , aa.concept_type\n\n  , bb.value_set_member_id\n  , bb.code\n  , bb.coding_system_id\n  , bb.include_descendants\n\n  , cc.coding_system_name\n\nfrom tuva.clinical_concept_library.clinical_concepts as aa\n\nleft outer join tuva.clinical_concept_library.value_set_members as bb\non aa.concept_id = bb.concept_id\n\nleft outer join tuva.clinical_concept_library.coding_systems as cc\non bb.coding_system_id = cc.coding_system_id\n)\n\n\nselect *\nfrom value_set_member_relevant_fields", "relation_name": "tuva.clinical_concept_library.value_set_member_relevant_fields", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:47.347907Z", "completed_at": "2025-06-03T19:49:47.359313Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:47.359987Z", "completed_at": "2025-06-03T19:49:47.359990Z"}], "thread_id": "Thread-4", "execution_time": 0.012918710708618164, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.not_null_ed_classification__johnston_icd10_icd10.d04e7f84c7", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect icd10\nfrom tuva.ed_classification._value_set_johnston_icd10\nwhere icd10 is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:47.360568Z", "completed_at": "2025-06-03T19:49:47.371996Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:47.376357Z", "completed_at": "2025-06-03T19:49:47.376363Z"}], "thread_id": "Thread-1", "execution_time": 0.0173490047454834, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.unique_ed_classification__johnston_icd10_icd10.3d55f2b2dd", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    icd10 as unique_field,\n    count(*) as n_records\n\nfrom tuva.ed_classification._value_set_johnston_icd10\nwhere icd10 is not null\ngroup by icd10\nhaving count(*) > 1\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:47.366978Z", "completed_at": "2025-06-03T19:49:47.376799Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:47.377262Z", "completed_at": "2025-06-03T19:49:47.377266Z"}], "thread_id": "Thread-2", "execution_time": 0.01699209213256836, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.not_null_ed_classification__johnston_icd9_icd9.a7feea49c0", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect icd9\nfrom tuva.ed_classification._value_set_johnston_icd9\nwhere icd9 is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:47.372242Z", "completed_at": "2025-06-03T19:49:47.377642Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:47.378327Z", "completed_at": "2025-06-03T19:49:47.378331Z"}], "thread_id": "Thread-4", "execution_time": 0.01166391372680664, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.unique_ed_classification__johnston_icd9_icd9.08c1dc4617", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    icd9 as unique_field,\n    count(*) as n_records\n\nfrom tuva.ed_classification._value_set_johnston_icd9\nwhere icd9 is not null\ngroup by icd9\nhaving count(*) > 1\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:47.379341Z", "completed_at": "2025-06-03T19:49:47.390900Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:47.401655Z", "completed_at": "2025-06-03T19:49:47.401663Z"}], "thread_id": "Thread-1", "execution_time": 0.023891925811767578, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.pharmacy__int_brand_with_generic_available", "compiled": true, "compiled_code": "\n\nselect distinct\n    product_rxcui as brand_with_generic_available\n  , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom tuva.pharmacy.rxnorm_generic_available\nwhere\n    ndc_product_tty in ('SCD', 'GPCK')\n    \n        and cast(product_startmarketingdate as date) <= current_date\n", "relation_name": "tuva.pharmacy._int_brand_with_generic_available", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:47.385603Z", "completed_at": "2025-06-03T19:49:47.402049Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:47.402589Z", "completed_at": "2025-06-03T19:49:47.402594Z"}], "thread_id": "Thread-2", "execution_time": 0.023766040802001953, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.mart_review__quality_measures_value_set", "compiled": true, "compiled_code": "\n\nselect *    , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom tuva.quality_measures._value_set_measures as p", "relation_name": "tuva.data_quality.mart_review__quality_measures_value_set", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:47.391100Z", "completed_at": "2025-06-03T19:49:47.403211Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:47.403877Z", "completed_at": "2025-06-03T19:49:47.403881Z"}], "thread_id": "Thread-4", "execution_time": 0.018629074096679688, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.quality_measures__int_adh_diabetes__performance_period", "compiled": true, "compiled_code": "/*\n    set performance period end to the end of the current calendar year\n    or use the quality_measures_period_end variable if provided\n*/\n\nwith period_end as (\n\n    select\n        cast(\n        \n\n    dateadd(\n        day,\n        -1,\n        \n\n    dateadd(\n        year,\n        1,\n        date_trunc('year', convert_timezone('UTC', current_timestamp()))\n        )\n\n\n        )\n\n\n        as date)\n        \n         as performance_period_end\n\n)\n\n/*\n    set performance period begin to a year and a day prior\n    for a complete calendar year\n*/\n, period_begin as (\n\n    select\n          performance_period_end\n        , \n\n    dateadd(\n        day,\n        1,\n        \n\n    dateadd(\n        year,\n        -1,\n        performance_period_end\n        )\n\n\n        )\n\n as performance_period_begin\n    from period_end\n\n)\n\nselect\n      cast((select id\nfrom tuva.quality_measures._value_set_measures\nwhere id = 'ADH-Diabetes') as TEXT) as measure_id\n    , cast((select name\nfrom tuva.quality_measures._value_set_measures\nwhere id = 'ADH-Diabetes') as TEXT) as measure_name\n    , cast((select version\nfrom tuva.quality_measures._value_set_measures\nwhere id = 'ADH-Diabetes') as TEXT) as measure_version\n    , cast(performance_period_begin as date) as performance_period_begin\n    , cast(performance_period_end as date) as performance_period_end\nfrom period_begin", "relation_name": "tuva.quality_measures._int_adh_diabetes__performance_period", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:47.404465Z", "completed_at": "2025-06-03T19:49:47.430451Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:47.430762Z", "completed_at": "2025-06-03T19:49:47.430769Z"}], "thread_id": "Thread-1", "execution_time": 0.027858972549438477, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.quality_measures__int_adh_statins__performance_period", "compiled": true, "compiled_code": "/*\n    set performance period end to the end of the current calendar year\n    or use the quality_measures_period_end variable if provided\n*/\n\nwith period_end as (\n\n    select\n        cast(\n        \n\n    dateadd(\n        day,\n        -1,\n        \n\n    dateadd(\n        year,\n        1,\n        date_trunc('year', convert_timezone('UTC', current_timestamp()))\n        )\n\n\n        )\n\n\n        as date)\n        \n         as performance_period_end\n\n)\n\n/*\n    set performance period begin to following day of 1 year prior\n*/\n\n, period_begin as (\n\n    select\n          performance_period_end\n        , \n\n    dateadd(\n        day,\n        1,\n        \n\n    dateadd(\n        year,\n        -1,\n        performance_period_end\n        )\n\n\n        )\n\n as performance_period_begin\n    from period_end\n\n)\n\nselect\n      cast((\n  select id\n  from tuva.quality_measures._value_set_measures\n  where id = 'ADH-Statins'\n) as TEXT) as measure_id\n    , cast((\n  select name\n  from tuva.quality_measures._value_set_measures\n  where id = 'ADH-Statins'\n) as TEXT) as measure_name\n    , cast((\n  select version\n  from tuva.quality_measures._value_set_measures\n  where id = 'ADH-Statins'\n) as TEXT) as measure_version\n    , cast(performance_period_begin as date) as performance_period_begin\n    , cast(performance_period_end as date) as performance_period_end\nfrom period_begin", "relation_name": "tuva.quality_measures._int_adh_statins__performance_period", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:47.414153Z", "completed_at": "2025-06-03T19:49:47.431408Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:47.432170Z", "completed_at": "2025-06-03T19:49:47.432174Z"}], "thread_id": "Thread-2", "execution_time": 0.02799224853515625, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.quality_measures__int_adhras__performance_period", "compiled": true, "compiled_code": "/*\n    set performance period end to the end of the current calendar year\n    or use the quality_measures_period_end variable if provided\n*/\n\nwith period_end as (\n\n    select\n        cast(\n        \n\n    dateadd(\n        day,\n        -1,\n        \n\n    dateadd(\n        year,\n        1,\n        date_trunc('year', convert_timezone('UTC', current_timestamp()))\n        )\n\n\n        )\n\n\n        as date)\n        \n         as performance_period_end\n\n)\n\n/*\n    set performance period begin to following day of 1 year prior\n*/\n\n, period_begin as (\n\n    select\n          performance_period_end\n        , \n\n    dateadd(\n        day,\n        1,\n        \n\n    dateadd(\n        year,\n        -1,\n        performance_period_end\n        )\n\n\n        )\n\n as performance_period_begin\n    from period_end\n\n)\n\nselect\n      cast((\n  select id\n  from tuva.quality_measures._value_set_measures\n  where id = 'ADH-RAS'\n) as TEXT) as measure_id\n    , cast((\n  select name\n  from tuva.quality_measures._value_set_measures\n  where id = 'ADH-RAS'\n) as TEXT) as measure_name\n    , cast((\n  select version\n  from tuva.quality_measures._value_set_measures\n  where id = 'ADH-RAS'\n) as TEXT) as measure_version\n    , cast(performance_period_begin as date) as performance_period_begin\n    , cast(performance_period_end as date) as performance_period_end\nfrom period_begin", "relation_name": "tuva.quality_measures._int_adhras__performance_period", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:47.421347Z", "completed_at": "2025-06-03T19:49:47.431911Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:47.432754Z", "completed_at": "2025-06-03T19:49:47.432759Z"}], "thread_id": "Thread-4", "execution_time": 0.0189511775970459, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.quality_measures__int_cqm130__performance_period", "compiled": true, "compiled_code": "/*\n    set performance period end to the end of the current calendar year\n    or use the quality_measures_period_end variable if provided\n*/\nwith period_end as (\n\n    select\n        cast(\n        \n\n    dateadd(\n        day,\n        -1,\n        \n\n    dateadd(\n        year,\n        1,\n        date_trunc('year', convert_timezone('UTC', current_timestamp()))\n        )\n\n\n        )\n\n\n        as date)\n        \n         as performance_period_end\n)\n\n/*\n    set performance period begin to following day of 1 year prior\n*/\n\n, period_begin as (\n\n    select\n          performance_period_end\n        , \n\n    dateadd(\n        day,\n        1,\n        \n\n    dateadd(\n        year,\n        -1,\n        performance_period_end\n        )\n\n\n        )\n\n as performance_period_begin\n    from period_end\n\n)\n\nselect\n      cast((select id\nfrom tuva.quality_measures._value_set_measures\nwhere id = 'CQM130') as TEXT) as measure_id\n    , cast((select name\nfrom tuva.quality_measures._value_set_measures\nwhere id = 'CQM130') as TEXT) as measure_name\n    , cast((select version\nfrom tuva.quality_measures._value_set_measures\nwhere id = 'CQM130') as TEXT) as measure_version\n    , cast(performance_period_begin as date) as performance_period_begin\n    , cast(performance_period_end as date) as performance_period_end\nfrom period_begin", "relation_name": "tuva.quality_measures._int_cqm130__performance_period", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:47.433403Z", "completed_at": "2025-06-03T19:49:47.442524Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:47.458810Z", "completed_at": "2025-06-03T19:49:47.458818Z"}], "thread_id": "Thread-1", "execution_time": 0.027211904525756836, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.quality_measures__int_cqm438__performance_period", "compiled": true, "compiled_code": "/*\n    set performance period end to the end of the current calendar year\n    or use the quality_measures_period_end variable if provided\n*/\nwith period_end as (\n\n    select\n        cast(\n        \n\n    dateadd(\n        day,\n        -1,\n        \n\n    dateadd(\n        year,\n        1,\n        date_trunc('year', convert_timezone('UTC', current_timestamp()))\n        )\n\n\n        )\n\n\n        as date)\n        \n         as performance_period_end\n\n)\n\n/*\n    set performance period begin to a year and a day prior\n    for a complete calendar year\n*/\n, period_begin as (\n\n    select\n          performance_period_end\n        , \n\n    dateadd(\n        day,\n        1,\n        \n\n    dateadd(\n        year,\n        -1,\n        performance_period_end\n        )\n\n\n        )\n\n as performance_period_begin\n    from period_end\n\n)\n\nselect\n      cast((select id\nfrom tuva.quality_measures._value_set_measures\nwhere id = 'CQM438') as TEXT) as measure_id\n    , cast((select name\nfrom tuva.quality_measures._value_set_measures\nwhere id = 'CQM438') as TEXT) as measure_name\n    , cast((select version\nfrom tuva.quality_measures._value_set_measures\nwhere id = 'CQM438') as TEXT) as measure_version\n    , cast(performance_period_begin as date) as performance_period_begin\n    , cast(performance_period_end as date) as performance_period_end\nfrom period_begin", "relation_name": "tuva.quality_measures._int_cqm438__performance_period", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:47.442729Z", "completed_at": "2025-06-03T19:49:47.459711Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:47.461097Z", "completed_at": "2025-06-03T19:49:47.461103Z"}], "thread_id": "Thread-2", "execution_time": 0.019747018814086914, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.quality_measures__int_nqf0420__performance_period", "compiled": true, "compiled_code": "/*\n    set performance period end to the end of the current calendar year\n    or use the quality_measures_period_end variable if provided\n*/\nwith period_end as (\n\n    select\n        cast(\n        \n\n    dateadd(\n        day,\n        -1,\n        \n\n    dateadd(\n        year,\n        1,\n        date_trunc('year', convert_timezone('UTC', current_timestamp()))\n        )\n\n\n        )\n\n\n        as date)\n        \n         as performance_period_end\n\n)\n\n/*\n    set performance period begin to following day of 1 year prior\n*/\n, period_begin as (\n\n    select\n          performance_period_end\n        , \n\n    dateadd(\n        day,\n        1,\n        \n\n    dateadd(\n        year,\n        -1,\n        performance_period_end\n        )\n\n\n        )\n\n as performance_period_begin\n    from period_end\n\n)\n\nselect\n      cast((select id\nfrom tuva.quality_measures._value_set_measures\nwhere id = 'NQF0420') as TEXT) as measure_id\n    , cast((select name\nfrom tuva.quality_measures._value_set_measures\nwhere id = 'NQF0420') as TEXT) as measure_name\n    , cast((select version\nfrom tuva.quality_measures._value_set_measures\nwhere id = 'NQF0420') as TEXT) as measure_version\n    , cast(performance_period_begin as date) as performance_period_begin\n    , cast(performance_period_end as date) as performance_period_end\nfrom period_begin", "relation_name": "tuva.quality_measures._int_nqf0420__performance_period", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:47.451240Z", "completed_at": "2025-06-03T19:49:47.461465Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:47.463229Z", "completed_at": "2025-06-03T19:49:47.463234Z"}], "thread_id": "Thread-4", "execution_time": 0.021538734436035156, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.quality_measures__int_supd__performance_period", "compiled": true, "compiled_code": "/*\n    set performance period end to the end of the current calendar year\n    or use the quality_measures_period_end variable if provided\n*/\n\nwith period_end as (\n\n    select\n        cast(\n        \n\n    dateadd(\n        day,\n        -1,\n        \n\n    dateadd(\n        year,\n        1,\n        date_trunc('year', convert_timezone('UTC', current_timestamp()))\n        )\n\n\n        )\n\n\n        as date)\n        \n         as performance_period_end\n\n)\n\n/*\n    set performance period begin to following day of 1 year prior\n*/\n, period_begin as (\n\n    select\n          performance_period_end\n        , \n\n    dateadd(\n        day,\n        1,\n        \n\n    dateadd(\n        year,\n        -1,\n        performance_period_end\n        )\n\n\n        )\n\n as performance_period_begin\n    from period_end\n\n)\n\nselect\n      cast((select id\nfrom tuva.quality_measures._value_set_measures\nwhere id = 'SUPD') as TEXT) as measure_id\n    , cast((select name\nfrom tuva.quality_measures._value_set_measures\nwhere id = 'SUPD') as TEXT) as measure_name\n    , cast((select version\nfrom tuva.quality_measures._value_set_measures\nwhere id = 'SUPD') as TEXT) as measure_version\n    , cast(performance_period_begin as date) as performance_period_begin\n    , cast(performance_period_end as date) as performance_period_end\nfrom period_begin", "relation_name": "tuva.quality_measures._int_supd__performance_period", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:47.463604Z", "completed_at": "2025-06-03T19:49:47.471647Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:47.477584Z", "completed_at": "2025-06-03T19:49:47.477591Z"}], "thread_id": "Thread-1", "execution_time": 0.017693042755126953, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.mart_review__calendar_month", "compiled": true, "compiled_code": "\n\n\nselect distinct\ncast(year_month_int as TEXT) as year_month\n, full_date\n, '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom tuva.reference_data.calendar as c\nwhere day = 1", "relation_name": "tuva.data_quality.mart_review__calendar_month", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:47.471862Z", "completed_at": "2025-06-03T19:49:47.485560Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:47.491286Z", "completed_at": "2025-06-03T19:49:47.491295Z"}], "thread_id": "Thread-2", "execution_time": 0.0212860107421875, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.data_quality__condition_normalized_code_type", "compiled": true, "compiled_code": "\n\nselect\n      m.data_source\n    , coalesce(m.recorded_date,cast('1900-01-01' as date)) as source_date\n    , 'CONDITION' as table_name\n    , 'Condition ID' as drill_down_key\n    , coalesce(condition_id, 'NULL') as drill_down_value\n    , 'NORMALIZED_CODE_TYPE' as field_name\n    , case when term.code_type is not null then 'valid'\n           when m.normalized_code_type is not null then 'invalid'\n           else 'null'\n    end as bucket_name\n    , case when m.normalized_code_type is not null and term.code_type is null\n           then 'Normalized Code Type does not join to Terminology code_type table'\n           else null end as invalid_reason\n    , cast(normalized_code_type as TEXT) as field_value\n    , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom tuva.input_layer.condition as m\nleft outer join tuva.reference_data.code_type as term on m.normalized_code_type = term.code_type", "relation_name": "tuva.data_quality.condition_normalized_code_type", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:47.478066Z", "completed_at": "2025-06-03T19:49:47.491763Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:47.492449Z", "completed_at": "2025-06-03T19:49:47.492454Z"}], "thread_id": "Thread-4", "execution_time": 0.02129983901977539, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.data_quality__encounter_primary_diagnosis_code_type", "compiled": true, "compiled_code": "\n\nselect\n      m.data_source\n    , coalesce(m.encounter_start_date,cast('1900-01-01' as date)) as source_date\n    , 'ENCOUNTER' as table_name\n    , 'Encounter ID' as drill_down_key\n    , coalesce(encounter_id, 'NULL') as drill_down_value\n    , 'PRIMARY_DIAGNOSIS_CODE_TYPE' as field_name\n    , case when term.code_type is not null then 'valid'\n          when m.primary_diagnosis_code_type is not null then 'invalid'\n          else 'null'\n    end as bucket_name\n    , case when m.primary_diagnosis_code_type is not null and term.code_type is null\n          then 'Primary Diagnosis Code Type does not join to Terminology code_type table'\n          else null end as invalid_reason\n    , cast(primary_diagnosis_code_type as TEXT) as field_value\n    , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom tuva.input_layer.encounter as m\nleft outer join tuva.reference_data.code_type as term on m.primary_diagnosis_code_type = term.code_type", "relation_name": "tuva.data_quality.encounter_primary_diagnosis_code_type", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:47.485786Z", "completed_at": "2025-06-03T19:49:47.493114Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:47.493798Z", "completed_at": "2025-06-03T19:49:47.493802Z"}], "thread_id": "Thread-1", "execution_time": 0.008836030960083008, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.data_quality__lab_result_normalized_code_type", "compiled": true, "compiled_code": "\n\n\nselect\n      m.data_source\n    , coalesce(m.result_date,cast('1900-01-01' as date)) as source_date\n    , 'LAB_RESULT' as table_name\n    , 'Lab Result ID' as drill_down_key\n    , coalesce(lab_result_id, 'NULL') as drill_down_value\n    , 'NORMALIZED_CODE_TYPE' as field_name\n    , case when term.code_type is not null then 'valid'\n          when m.normalized_code_type is not null then 'invalid'\n          else 'null'\n    end as bucket_name\n    , case when m.normalized_code_type is not null and term.code_type is null\n           then 'Normalized code type does not join to Terminology code_type table'\n           else null end as invalid_reason\n    , cast(normalized_code_type as TEXT) as field_value\n    , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom tuva.input_layer.lab_result as m\nleft outer join tuva.reference_data.code_type as term on m.normalized_code_type = term.code_type", "relation_name": "tuva.data_quality.lab_result_normalized_code_type", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:47.494424Z", "completed_at": "2025-06-03T19:49:47.506771Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:47.512437Z", "completed_at": "2025-06-03T19:49:47.512445Z"}], "thread_id": "Thread-2", "execution_time": 0.01965785026550293, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.data_quality__procedure_normalized_code_type", "compiled": true, "compiled_code": "\n\n\nselect\n      m.data_source\n    , coalesce(m.procedure_date,cast('1900-01-01' as date)) as source_date\n    , 'PROCEDURE' as table_name\n    , 'Procedure ID' as drill_down_key\n    , coalesce(procedure_id, 'NULL') as drill_down_value\n    , 'NORMALIZED_CODE_TYPE' as field_name\n    , case when term.code_type is not null then 'valid'\n           when m.normalized_code_type is not null then 'invalid'\n           else 'null'\n    end as bucket_name\n    , case when m.normalized_code_type is not null and term.code_type is null\n           then 'Normalized code type does not join to Terminology code_type table'\n           else null end as invalid_reason\n    , cast(normalized_code_type as TEXT) as field_value\n    , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom tuva.input_layer.procedure as m\nleft outer join tuva.reference_data.code_type as term on m.normalized_code_type = term.code_type", "relation_name": "tuva.data_quality.procedure_normalized_code_type", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:47.507582Z", "completed_at": "2025-06-03T19:49:47.513539Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:47.514178Z", "completed_at": "2025-06-03T19:49:47.514182Z"}], "thread_id": "Thread-1", "execution_time": 0.013711929321289062, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.data_quality__encounter_admit_type_code", "compiled": true, "compiled_code": "\n\nselect\n      m.data_source\n    , coalesce(m.encounter_start_date,cast('1900-01-01' as date)) as source_date\n    , 'ENCOUNTER' as table_name\n    , 'Encounter ID' as drill_down_key\n    , coalesce(encounter_id, 'NULL') as drill_down_value\n    , 'ADMIT_TYPE_CODE' as field_name\n    , case when term.admit_type_code is not null then 'valid'\n          when m.admit_type_code is not null then 'invalid'\n          else 'null'\n    end as bucket_name\n    , case when m.admit_type_code is not null and term.admit_type_code is null\n          then 'Admit Type Code does not join to Terminology admit_type table'\n          else null end as invalid_reason\n    , cast(m.admit_type_code as TEXT) as field_value\n    , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom tuva.input_layer.encounter as m\nleft outer join tuva.terminology.admit_type as term on m.admit_type_code = term.admit_type_code", "relation_name": "tuva.data_quality.encounter_admit_type_code", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:47.500831Z", "completed_at": "2025-06-03T19:49:47.513987Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:47.520095Z", "completed_at": "2025-06-03T19:49:47.520100Z"}], "thread_id": "Thread-4", "execution_time": 0.02598404884338379, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.data_quality__encounter_admit_source_code", "compiled": true, "compiled_code": "\n\nselect\n      m.data_source\n    , coalesce(m.encounter_start_date,cast('1900-01-01' as date)) as source_date\n    , 'ENCOUNTER' as table_name\n    , 'Encounter ID' as drill_down_key\n    , coalesce(encounter_id, 'NULL') as drill_down_value\n    , 'ADMIT_SOURCE_CODE' as field_name\n    , case when term.admit_source_code is not null then 'valid'\n           when m.admit_source_code is not null then 'invalid'\n           else 'null'\n    end as bucket_name\n    , case when m.admit_source_code is not null and term.admit_source_code is null\n           then 'Admit source code does not join to Terminology admit source table'\n           else null end as invalid_reason\n    , cast(m.admit_source_code as TEXT) as field_value\n    , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom tuva.input_layer.encounter as m\nleft outer join tuva.terminology.admit_source as term on m.admit_source_code = term.admit_source_code", "relation_name": "tuva.data_quality.encounter_admit_source_code", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:47.514538Z", "completed_at": "2025-06-03T19:49:47.521737Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:47.526987Z", "completed_at": "2025-06-03T19:49:47.526993Z"}], "thread_id": "Thread-2", "execution_time": 0.01375579833984375, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.data_quality__encounter_discharge_disposition_code", "compiled": true, "compiled_code": "\n\nselect\n      m.data_source\n    , coalesce(m.encounter_start_date,cast('1900-01-01' as date)) as source_date\n    , 'ENCOUNTER' as table_name\n    , 'Encounter ID' as drill_down_key\n    , coalesce(encounter_id, 'NULL') as drill_down_value\n    , 'DISCHARGE_DISPOSITION_CODE' as field_name\n    , case when term.discharge_disposition_code is not null then 'valid'\n           when m.discharge_disposition_code is not null then 'invalid'\n           else 'null'\n    end as bucket_name\n    , case when m.discharge_disposition_code is not null and term.discharge_disposition_code is null\n           then 'Discharge Disposition Code does not join to Terminology discharge_disposition table'\n           else null end as invalid_reason\n    , cast(m.discharge_disposition_code as TEXT) as field_value\n    , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom tuva.input_layer.encounter as m\nleft outer join tuva.terminology.discharge_disposition as term on m.discharge_disposition_code = term.discharge_disposition_code", "relation_name": "tuva.data_quality.encounter_discharge_disposition_code", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:47.522144Z", "completed_at": "2025-06-03T19:49:47.533373Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:47.533821Z", "completed_at": "2025-06-03T19:49:47.533826Z"}], "thread_id": "Thread-1", "execution_time": 0.01281881332397461, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.data_quality__encounter_encounter_type", "compiled": true, "compiled_code": "\n\nselect\n      m.data_source\n    , coalesce(m.encounter_start_date,cast('1900-01-01' as date)) as source_date\n    , 'ENCOUNTER' as table_name\n    , 'Encounter ID' as drill_down_key\n    , coalesce(encounter_id, 'NULL') as drill_down_value\n    , 'ENCOUNTER_TYPE' as field_name\n    , case when term.encounter_type is not null then 'valid'\n          when m.encounter_type is not null then 'invalid'\n          else 'null'\n    end as bucket_name\n    , case when m.encounter_type is not null and term.encounter_type is null\n          then 'Encounter type does not join to Terminology encounter_type table'\n          else null end as invalid_reason\n    , cast(m.encounter_type as TEXT) as field_value\n    , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom tuva.input_layer.encounter as m\nleft outer join tuva.terminology.encounter_type as term on m.encounter_type = term.encounter_type", "relation_name": "tuva.data_quality.encounter_encounter_type", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:47.527375Z", "completed_at": "2025-06-03T19:49:47.539966Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:47.540538Z", "completed_at": "2025-06-03T19:49:47.540542Z"}], "thread_id": "Thread-4", "execution_time": 0.019290924072265625, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.data_quality__patient_sex", "compiled": true, "compiled_code": "\n\n\nselect\n      m.data_source\n    \n        , cast(coalesce(convert_timezone('UTC', current_timestamp()), cast('1900-01-01' as date)) as date) as source_date\n    \n    , 'PATIENT' as table_name\n    , 'Person ID' as drill_down_key\n    , coalesce(person_id, 'NULL') as drill_down_value\n    , 'SEX' as field_name\n    , case when term.gender is not null then 'valid'\n           when m.sex is not null then 'invalid'\n           else 'null'\n    end as bucket_name\n    , case when m.sex is not null and term.gender is null\n           then 'Sex does not join to Terminology gender table'\n           else null end as invalid_reason\n    , cast(sex as TEXT) as field_value\n    , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom tuva.input_layer.patient as m\nleft outer join tuva.terminology.gender as term on m.sex = term.gender", "relation_name": "tuva.data_quality.patient_sex", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:47.534180Z", "completed_at": "2025-06-03T19:49:47.541418Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:47.542101Z", "completed_at": "2025-06-03T19:49:47.542105Z"}], "thread_id": "Thread-2", "execution_time": 0.009021997451782227, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.data_quality__procedure_modifier_1", "compiled": true, "compiled_code": "\n\n\nselect\n      m.data_source\n    , coalesce(m.procedure_date,cast('1900-01-01' as date)) as source_date\n    , 'PROCEDURE' as table_name\n    , 'Procedure ID' as drill_down_key\n    , coalesce(procedure_id, 'NULL') as drill_down_value\n    , 'MODIFIER_1' as field_name\n    , case when term.hcpcs is not null then 'valid'\n           when m.modifier_1 is not null then 'invalid'\n           else 'null'\n    end as bucket_name\n    , case when m.modifier_1 is not null and term.hcpcs is null\n           then 'Modifier 1 does not join to Terminology hcpcs_level_2 table'\n           else null end as invalid_reason\n    , cast(modifier_1 as TEXT) as field_value\n    , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom tuva.input_layer.procedure as m\nleft outer join tuva.terminology.hcpcs_level_2 as term on m.modifier_1 = term.hcpcs", "relation_name": "tuva.data_quality.procedure_modifier_1", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:47.542448Z", "completed_at": "2025-06-03T19:49:47.553663Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:47.554113Z", "completed_at": "2025-06-03T19:49:47.554118Z"}], "thread_id": "Thread-1", "execution_time": 0.013242959976196289, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.data_quality__procedure_modifier_2", "compiled": true, "compiled_code": "\n\n\nselect\n      m.data_source\n    , coalesce(m.procedure_date,cast('1900-01-01' as date)) as source_date\n    , 'PROCEDURE' as table_name\n    , 'Procedure ID' as drill_down_key\n    , coalesce(procedure_id, 'NULL') as drill_down_value\n    , 'MODIFIER_2' as field_name\n    , case when term.hcpcs is not null then 'valid'\n           when m.modifier_2 is not null then 'invalid'\n           else 'null'\n    end as bucket_name\n    , case when m.modifier_2 is not null and term.hcpcs is null\n           then 'Modifier 2 does not join to Terminology hcpcs_level_2 table'\n           else null end as invalid_reason\n    , cast(modifier_2 as TEXT) as field_value\n    , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom tuva.input_layer.procedure as m\nleft outer join tuva.terminology.hcpcs_level_2 as term on m.modifier_2 = term.hcpcs", "relation_name": "tuva.data_quality.procedure_modifier_2", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:47.547917Z", "completed_at": "2025-06-03T19:49:47.559669Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:47.560212Z", "completed_at": "2025-06-03T19:49:47.560216Z"}], "thread_id": "Thread-4", "execution_time": 0.01839590072631836, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.data_quality__procedure_modifier_3", "compiled": true, "compiled_code": "\n\n\nselect\n      m.data_source\n    , coalesce(m.procedure_date,cast('1900-01-01' as date)) as source_date\n    , 'PROCEDURE' as table_name\n    , 'Procedure ID' as drill_down_key\n    , coalesce(procedure_id, 'NULL') as drill_down_value\n    , 'MODIFIER_3' as field_name\n    , case when term.hcpcs is not null then 'valid'\n           when m.modifier_3 is not null then 'invalid'\n           else 'null'\n    end as bucket_name\n    , case when m.modifier_3 is not null and term.hcpcs is null\n           then 'Modifier 3 does not join to Terminology hcpcs_level_2 table'\n           else null end as invalid_reason\n    , cast(modifier_3 as TEXT) as field_value\n    , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom tuva.input_layer.procedure as m\nleft outer join tuva.terminology.hcpcs_level_2 as term on m.modifier_3 = term.hcpcs", "relation_name": "tuva.data_quality.procedure_modifier_3", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:47.554493Z", "completed_at": "2025-06-03T19:49:47.560788Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:47.566669Z", "completed_at": "2025-06-03T19:49:47.566674Z"}], "thread_id": "Thread-2", "execution_time": 0.013378143310546875, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.data_quality__procedure_modifier_4", "compiled": true, "compiled_code": "\n\n\nselect\n    m.data_source\n    ,coalesce(m.procedure_date,cast('1900-01-01' as date)) as source_date\n    ,'PROCEDURE' as table_name\n    ,'Procedure ID' as drill_down_key\n    , coalesce(procedure_id, 'NULL') as drill_down_value\n    ,'MODIFIER_4' as field_name\n    ,case when term.hcpcs is not null then 'valid'\n          when m.modifier_4 is not null then 'invalid'\n          else 'null'\n    end as bucket_name\n    ,case when m.modifier_4 is not null and term.hcpcs is null\n          then 'Modifier 4 does not join to Terminology hcpcs_level_2 table'\n    else null end as invalid_reason\n    ,cast(modifier_4 as TEXT) as field_value\n    , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom tuva.input_layer.procedure as m\nleft outer join tuva.terminology.hcpcs_level_2 as term on m.modifier_4 = term.hcpcs", "relation_name": "tuva.data_quality.procedure_modifier_4", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:47.561216Z", "completed_at": "2025-06-03T19:49:47.568031Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:47.573651Z", "completed_at": "2025-06-03T19:49:47.573657Z"}], "thread_id": "Thread-1", "execution_time": 0.013775825500488281, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.data_quality__procedure_modifier_5", "compiled": true, "compiled_code": "\n\n\nselect\n      m.data_source\n    , coalesce(m.procedure_date,cast('1900-01-01' as date)) as source_date\n    , 'PROCEDURE' as table_name\n    , 'Procedure ID' as drill_down_key\n    , coalesce(procedure_id, 'NULL') as drill_down_value\n    , 'MODIFIER_5' as field_name\n    , case when term.hcpcs is not null then 'valid'\n           when m.modifier_5 is not null then 'invalid'\n           else 'null'\n    end as bucket_name\n    , case when m.modifier_5 is not null and term.hcpcs is null\n           then 'Modifier 5 does not join to Terminology hcpcs_level_2 table'\n           else null end as invalid_reason\n    , cast(modifier_5 as TEXT) as field_value\n    , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom tuva.input_layer.procedure as m\nleft outer join tuva.terminology.hcpcs_level_2 as term on m.modifier_5 = term.hcpcs", "relation_name": "tuva.data_quality.procedure_modifier_5", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:47.568222Z", "completed_at": "2025-06-03T19:49:47.579382Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:47.579866Z", "completed_at": "2025-06-03T19:49:47.579871Z"}], "thread_id": "Thread-4", "execution_time": 0.012881040573120117, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.ccsr__procedure_category_map", "compiled": true, "compiled_code": "\n\nselect\n     icd_10_pcs as code\n    , icd_10_pcs_description as code_description\n    , prccsr as ccsr_category\n    , substring(prccsr, 1, 3) as ccsr_parent_category\n    , prccsr_description as ccsr_category_description\n    , clinical_domain\n    , ont.section as procedure_section\n    , ont.operation\n    , ont.approach\n    , ont.device\n    , ont.qualifier\n    , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom tuva.ccsr._value_set_prccsr_v2023_1_cleaned_map as ccsr_map\nleft outer join tuva.terminology.icd10_pcs_cms_ontology as ont\n    on ccsr_map.icd_10_pcs = ont.icd10pcs_code", "relation_name": "tuva.ccsr.procedure_category_map", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:47.574081Z", "completed_at": "2025-06-03T19:49:47.580439Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:47.586558Z", "completed_at": "2025-06-03T19:49:47.586563Z"}], "thread_id": "Thread-2", "execution_time": 0.018815994262695312, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.data_quality__condition_normalized_code", "compiled": true, "compiled_code": "\n\nselect\n      m.data_source\n    , coalesce(m.recorded_date,cast('1900-01-01' as date)) as source_date\n    , 'CONDITION' as table_name\n    , 'Condition ID' as drill_down_key\n    , coalesce(condition_id, 'NULL') as drill_down_value\n    , 'NORMALIZED_CODE' as field_name\n    , case when term.icd_10_cm is not null then 'valid'\n          when m.normalized_code is not null then 'invalid'\n          else 'null'\n    end as bucket_name\n    , case when m.normalized_code is not null and term.icd_10_cm is null\n           then 'Normalized code does not join to Terminology icd_10_cm table'\n           else null end as invalid_reason\n    , cast(normalized_code as TEXT) as field_value\n    , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom tuva.input_layer.condition as m\nleft outer join tuva.terminology.icd_10_cm as term on m.normalized_code = term.icd_10_cm", "relation_name": "tuva.data_quality.condition_normalized_code", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:47.580872Z", "completed_at": "2025-06-03T19:49:47.587937Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:47.596416Z", "completed_at": "2025-06-03T19:49:47.596423Z"}], "thread_id": "Thread-1", "execution_time": 0.016888141632080078, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.data_quality__encounter_primary_diagnosis_code", "compiled": true, "compiled_code": "\n\nselect\n      m.data_source\n    , coalesce(m.encounter_start_date,cast('1900-01-01' as date)) as source_date\n    , 'ENCOUNTER' as table_name\n    , 'Encounter ID' as drill_down_key\n    , coalesce(encounter_id, 'NULL') as drill_down_value\n    , 'PRIMARY_DIAGNOSIS_CODE' as field_name\n    , case when term.icd_10_cm is not null then 'valid'\n          when m.primary_diagnosis_code is not null then 'invalid'\n          else 'null'\n    end as bucket_name\n    , case when m.primary_diagnosis_code is not null and term.icd_10_cm is null\n          then 'Primary diagnosis code does not join to Terminology icd_10_cm table'\n    else null end as invalid_reason\n    , cast(primary_diagnosis_code as TEXT) as field_value\n    , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom tuva.input_layer.encounter as m\nleft outer join tuva.terminology.icd_10_cm as term on m.primary_diagnosis_code = term.icd_10_cm", "relation_name": "tuva.data_quality.encounter_primary_diagnosis_code", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:47.588124Z", "completed_at": "2025-06-03T19:49:47.602631Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:47.603113Z", "completed_at": "2025-06-03T19:49:47.603117Z"}], "thread_id": "Thread-4", "execution_time": 0.016232967376708984, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.data_quality__procedure_normalized_code", "compiled": true, "compiled_code": "\n\nwith icd9 as (\n    select\n          m.data_source\n        , coalesce(m.procedure_date,cast('1900-01-01' as date)) as source_date\n        , 'PROCEDURE' as table_name\n        , 'Procedure ID' as drill_down_key\n        , coalesce(procedure_id, 'NULL') as drill_down_value\n        , 'NORMALIZED_CODE' as field_name\n        , case when term.icd_9_pcs is not null then 'valid'\n               when m.normalized_code is not null then 'invalid'\n               else 'null'\n        end as bucket_name\n        , case when m.normalized_code is not null and term.icd_9_pcs is null\n               then 'Normalized code does not join to Terminology icd_9_pcs table'\n               else null end as invalid_reason\n        , cast(normalized_code as TEXT) as field_value\n    from tuva.input_layer.procedure as m\n    left outer join tuva.terminology.icd_9_pcs as term on m.normalized_code = term.icd_9_pcs\n    where\n        m.normalized_code_type = 'icd-9-pcs'\n)\n, icd10 as (\n    select\n      m.data_source\n    , coalesce(m.procedure_date,cast('1900-01-01' as date)) as source_date\n    , 'PROCEDURE' as table_name\n    , 'Procedure ID' as drill_down_key\n    , coalesce(procedure_id, 'NULL') as drill_down_value\n    , 'NORMALIZED_CODE' as field_name\n    , case when term.icd_10_pcs is not null then 'valid'\n           when m.normalized_code is not null then 'invalid'\n           else 'null'\n    end as bucket_name\n    , case when m.normalized_code is not null and term.icd_10_pcs is null\n           then 'Normalized code does not join to Terminology icd_10_pcs table'\n           else null end as invalid_reason\n    , cast(normalized_code as TEXT) as field_value\nfrom tuva.input_layer.procedure as m\nleft outer join tuva.terminology.icd_10_pcs as term on m.normalized_code = term.icd_10_pcs\nwhere\n    m.normalized_code_type = 'icd_10_pcs'\n)\n, hcpcs_level_2 as (\n    select\n      m.data_source\n    , coalesce(m.procedure_date,cast('1900-01-01' as date)) as source_date\n    , 'PROCEDURE' as table_name\n    , 'Procedure ID' as drill_down_key\n    , coalesce(procedure_id, 'NULL') as drill_down_value\n    , 'NORMALIZED_CODE' as field_name\n    , case when term.hcpcs is not null then 'valid'\n           when m.normalized_code is not null then 'invalid'\n           else 'null'\n    end as bucket_name\n    , case when m.normalized_code is not null and term.hcpcs is null\n           then 'Normalized code does not join to Terminology hcpcs_level_2 table'\n           else null end as invalid_reason\n    , cast(normalized_code as TEXT) as field_value\nfrom tuva.input_layer.procedure as m\nleft outer join tuva.terminology.hcpcs_level_2 as term on m.normalized_code = term.hcpcs\nwhere\n    m.normalized_code_type = 'hcpcs_level_2'\n)\n\n, others as (\n    select\n      m.data_source\n    , coalesce(m.procedure_date,cast('1900-01-01' as date)) as source_date\n    , 'PROCEDURE' as table_name\n    , 'Procedure ID' as drill_down_key\n    , coalesce(procedure_id, 'NULL') as drill_down_value\n    , 'NORMALIZED_CODE' as field_name\n    , 'null' as bucket_name\n    , 'code type does not have a matching code terminology table' as invalid_reason\n    , cast(normalized_code as TEXT) as field_value\nfrom tuva.input_layer.procedure as m\nwhere\n    m.normalized_code_type not in ('icd-9-pcs', 'icd-10-pcs','hcpcs_level_2')\n)\n\nselect *, '2025-06-03 19:49:40.396647+00:00' as tuva_last_run from icd9\n\nunion all\n\nselect * , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run from icd10\n\nunion all\n\nselect * , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run from hcpcs_level_2\n\nunion all\n\nselect * , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run from others", "relation_name": "tuva.data_quality.procedure_normalized_code", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:47.596849Z", "completed_at": "2025-06-03T19:49:47.603465Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:47.604834Z", "completed_at": "2025-06-03T19:49:47.604838Z"}], "thread_id": "Thread-2", "execution_time": 0.017182111740112305, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.data_quality__lab_result_normalized_code", "compiled": true, "compiled_code": "\n\n\nselect\n      m.data_source\n    , coalesce(m.result_date,cast('1900-01-01' as date)) as source_date\n    , 'LAB_RESULT' as table_name\n    , 'Lab Result ID' as drill_down_key\n    , coalesce(lab_result_id, 'NULL') as drill_down_value\n    , 'NORMALIZED_CODE' as field_name\n    , case when term.loinc is not null then 'valid'\n          when m.normalized_code is not null then 'invalid'\n          else 'null'\n    end as bucket_name\n    , case when m.normalized_code is not null and term.loinc is null\n           then 'Normalized code does not join to Terminology loinc table'\n           else null end as invalid_reason\n    , cast(normalized_code as TEXT) as field_value\n    , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom tuva.input_layer.lab_result as m\nleft outer join tuva.terminology.loinc as term on m.normalized_code = term.loinc", "relation_name": "tuva.data_quality.lab_result_normalized_code", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:47.605201Z", "completed_at": "2025-06-03T19:49:47.612544Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:47.618700Z", "completed_at": "2025-06-03T19:49:47.618707Z"}], "thread_id": "Thread-1", "execution_time": 0.015928030014038086, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.data_quality__lab_result_normalized_component", "compiled": true, "compiled_code": "\n\n\nselect\n      m.data_source\n    , coalesce(m.result_date,cast('1900-01-01' as date)) as source_date\n    , 'LAB_RESULT' as table_name\n    , 'Lab Result ID' as drill_down_key\n    , coalesce(lab_result_id, 'NULL') as drill_down_value\n    , 'NORMALIZED_COMPONENT' as field_name\n    , case when term.loinc is not null then 'valid'\n          when m.normalized_component is not null then 'invalid'\n          else 'null'\n    end as bucket_name\n    , case when m.normalized_component is not null and term.loinc is null\n           then 'Normalized component does not join to Terminology loinc table'\n           else null end as invalid_reason\n    , cast(normalized_component as TEXT) as field_value\n    , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom tuva.input_layer.lab_result as m\nleft outer join tuva.terminology.loinc as term on m.normalized_component = term.loinc", "relation_name": "tuva.data_quality.lab_result_normalized_component", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:47.612766Z", "completed_at": "2025-06-03T19:49:47.625019Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:47.625598Z", "completed_at": "2025-06-03T19:49:47.625604Z"}], "thread_id": "Thread-4", "execution_time": 0.01541590690612793, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.data_quality__encounter_drg_code", "compiled": true, "compiled_code": "\n\nselect\n      m.data_source\n    , coalesce(m.encounter_start_date,cast('1900-01-01' as date)) as source_date\n    , 'ENCOUNTER' as table_name\n    , 'Encounter ID' as drill_down_key\n    , coalesce(encounter_id, 'NULL') as drill_down_value\n    , 'DRG_CODE' as field_name\n    , case when term.ms_drg_code is not null then 'valid'\n          when m.drg_code is not null then 'invalid'\n          else 'null'\n    end as bucket_name\n    , case when m.drg_code is not null and term.ms_drg_code is null\n          then 'DRG Code does not join to Terminology ms_drg table'\n          else null end as invalid_reason\n    , cast(m.drg_code as TEXT) as field_value\n    , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom tuva.input_layer.encounter as m\nleft outer join tuva.terminology.ms_drg as term on m.drg_code = term.ms_drg_code", "relation_name": "tuva.data_quality.encounter_drg_code", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:47.619281Z", "completed_at": "2025-06-03T19:49:47.626241Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:47.632850Z", "completed_at": "2025-06-03T19:49:47.632859Z"}], "thread_id": "Thread-2", "execution_time": 0.020610809326171875, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.data_quality__medication_ndc_description", "compiled": true, "compiled_code": "\n\n\nselect\n      m.data_source\n    , coalesce(m.dispensing_date,cast('1900-01-01' as date)) as source_date\n    , 'MEDICATION' as table_name\n    , 'Medication ID' as drill_down_key\n    , coalesce(medication_id, 'NULL') as drill_down_value\n    , 'NDC_DESCRIPTION' as field_name\n    , case when term.ndc is not null then 'valid'\n           when m.ndc_code is not null then 'invalid'\n           else 'null'\n    end as bucket_name\n    , case when m.ndc_code is not null and term.ndc is null\n           then 'NDC code type does not join to Terminology ndc table'\n           else null end as invalid_reason\n    , cast(substring(ndc_description, 1, 255) as TEXT) as field_value\n    , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom tuva.input_layer.medication as m\nleft outer join tuva.terminology.ndc as term on m.ndc_code = term.ndc", "relation_name": "tuva.data_quality.medication_ndc_description", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:47.626966Z", "completed_at": "2025-06-03T19:49:47.634609Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:47.641019Z", "completed_at": "2025-06-03T19:49:47.641026Z"}], "thread_id": "Thread-1", "execution_time": 0.01582956314086914, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.data_quality__condition_present_on_admit_code", "compiled": true, "compiled_code": "\n\nselect\n    m.data_source\n    ,coalesce(m.recorded_date,cast('1900-01-01' as date)) as source_date\n    ,'CONDITION' as table_name\n    ,'Condition ID' as drill_down_key\n    , coalesce(condition_id, 'NULL') as drill_down_value\n    ,'PRESENT_ON_ADMIT_CODE' as field_name\n    ,case when term.present_on_admit_code is not null then 'valid'\n          when m.present_on_admit_code is not null then 'invalid'\n          else 'null'\n    end as bucket_name\n    ,case when m.present_on_admit_code is not null and term.present_on_admit_code is null\n          then 'Present On Admit Code does not join to Terminology present_on_admission table'\n          else null\n    end as invalid_reason\n    ,cast(m.present_on_admit_code as TEXT) as field_value\n    , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom tuva.input_layer.condition as m\nleft outer join tuva.terminology.present_on_admission as term on m.present_on_admit_code = term.present_on_admit_code", "relation_name": "tuva.data_quality.condition_present_on_admit_code", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:47.634824Z", "completed_at": "2025-06-03T19:49:47.646821Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:47.647320Z", "completed_at": "2025-06-03T19:49:47.647325Z"}], "thread_id": "Thread-4", "execution_time": 0.014061689376831055, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.data_quality__encounter_attending_provider_id", "compiled": true, "compiled_code": "\n\nselect\n      m.data_source\n    , coalesce(m.encounter_start_date,cast('1900-01-01' as date)) as source_date\n    , 'ENCOUNTER' as table_name\n    , 'Encounter ID' as drill_down_key\n    , coalesce(encounter_id, 'NULL') as drill_down_value\n    , 'ATTENDING_PROVIDER_ID' as field_name\n    , case when term.npi is not null then 'valid'\n          when m.attending_provider_id is not null then 'invalid'\n          else 'null'\n    end as bucket_name\n    , case when m.attending_provider_id is not null and term.npi is null\n          then 'Attending provider ID does not join to Terminology provider table'\n          else null end as invalid_reason\n    , cast(attending_provider_id as TEXT) as field_value\n    , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom tuva.input_layer.encounter as m\nleft outer join tuva.terminology.provider as term on m.attending_provider_id = term.npi", "relation_name": "tuva.data_quality.encounter_attending_provider_id", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:47.641470Z", "completed_at": "2025-06-03T19:49:47.647914Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:47.653813Z", "completed_at": "2025-06-03T19:49:47.653818Z"}], "thread_id": "Thread-2", "execution_time": 0.019510746002197266, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.data_quality__encounter_facility_id", "compiled": true, "compiled_code": "\n\nselect\n      m.data_source\n    , coalesce(m.encounter_start_date,cast('1900-01-01' as date)) as source_date\n    , 'ENCOUNTER' as table_name\n    , 'Encounter ID' as drill_down_key\n    , coalesce(encounter_id, 'NULL') as drill_down_value\n    , 'FACILITY_ID' as field_name\n    , case when term.npi is not null then 'valid'\n          when m.facility_id is not null then 'invalid'\n          else 'null'\n    end as bucket_name\n    , case when m.facility_id is not null and term.npi is null\n          then 'Facility NPI does not join to Terminology provider table'\n          else null end as invalid_reason\n    , cast(facility_id as TEXT) as field_value\n    , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom tuva.input_layer.encounter as m\nleft outer join tuva.terminology.provider as term on m.facility_id = term.npi", "relation_name": "tuva.data_quality.encounter_facility_id", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:47.648368Z", "completed_at": "2025-06-03T19:49:47.655288Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:47.661172Z", "completed_at": "2025-06-03T19:49:47.661178Z"}], "thread_id": "Thread-1", "execution_time": 0.014190673828125, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.data_quality__lab_result_ordering_practitioner_id", "compiled": true, "compiled_code": "\n\n\nselect\n      m.data_source\n    , coalesce(m.result_date,cast('1900-01-01' as date)) as source_date\n    , 'LAB_RESULT' as table_name\n    , 'Lab Result ID' as drill_down_key\n    , coalesce(lab_result_id, 'NULL') as drill_down_value\n    , 'ORDERING_PRACTITIONER_ID' as field_name\n    , case when term.npi is not null then 'valid'\n          when m.ordering_practitioner_id is not null then 'invalid'\n          else 'null'\n    end as bucket_name\n    , case when m.ordering_practitioner_id is not null and term.npi is null\n           then 'Ordering practitioner ID does not join to Terminology provider table'\n           else null end as invalid_reason\n    , cast(ordering_practitioner_id as TEXT) as field_value\n    , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom tuva.input_layer.lab_result as m\nleft outer join tuva.terminology.provider as term on m.ordering_practitioner_id = term.npi", "relation_name": "tuva.data_quality.lab_result_ordering_practitioner_id", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:47.655486Z", "completed_at": "2025-06-03T19:49:47.668193Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:47.668634Z", "completed_at": "2025-06-03T19:49:47.668639Z"}], "thread_id": "Thread-4", "execution_time": 0.014489889144897461, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.data_quality__location_npi", "compiled": true, "compiled_code": "\n\n\nselect\n      m.data_source\n    \n        , cast(coalesce(convert_timezone('UTC', current_timestamp()), cast('1900-01-01' as date)) as date) as source_date\n    \n    , 'LOCATION' as table_name\n    , 'Location ID' as drill_down_key\n    , coalesce(location_id, 'NULL') as drill_down_value\n    , 'NPI' as field_name\n    , case when term.npi is not null then 'valid'\n          when m.npi is not null then 'invalid'\n          else 'null'\n    end as bucket_name\n    , case when m.npi is not null and term.npi is null\n          then 'NPI does not join to Terminology provider table'\n    else null end as invalid_reason\n    , cast(m.npi as TEXT) as field_value\n    , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom tuva.input_layer.location as m\nleft outer join tuva.terminology.provider as term on m.npi = term.npi", "relation_name": "tuva.data_quality.location_npi", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:47.661616Z", "completed_at": "2025-06-03T19:49:47.668993Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:47.674842Z", "completed_at": "2025-06-03T19:49:47.674846Z"}], "thread_id": "Thread-2", "execution_time": 0.019845962524414062, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.data_quality__practitioner_npi", "compiled": true, "compiled_code": "\n\n\nselect\n      m.data_source\n    \n        , cast(coalesce(convert_timezone('UTC', current_timestamp()), cast('1900-01-01' as date)) as date) as source_date\n    \n    , 'PRACTITIONER' as table_name\n    , 'Practitioner ID' as drill_down_key\n    , coalesce(practitioner_id, 'NULL') as drill_down_value\n    , 'NPI' as field_name\n    , case when term.npi is not null then 'valid'\n           when m.npi is not null then 'invalid'\n           else 'null'\n    end as bucket_name\n    , case when m.npi is not null and term.npi is null\n           then 'NPI does not join to Terminology provider table'\n           else null end as invalid_reason\n    , cast(m.npi as TEXT) as field_value\n    , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom tuva.input_layer.practitioner as m\nleft outer join tuva.terminology.provider as term on m.npi = term.npi", "relation_name": "tuva.data_quality.practitioner_npi", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:47.669186Z", "completed_at": "2025-06-03T19:49:47.675985Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:47.681854Z", "completed_at": "2025-06-03T19:49:47.681860Z"}], "thread_id": "Thread-1", "execution_time": 0.013989925384521484, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.data_quality__patient_race", "compiled": true, "compiled_code": "\n\n\nselect\n      m.data_source\n    \n        , cast(coalesce(convert_timezone('UTC', current_timestamp()), cast('1900-01-01' as date)) as date) as source_date\n    \n    , 'PATIENT' as table_name\n    , 'Person ID' as drill_down_key\n    , coalesce(person_id, 'NULL') as drill_down_value\n    , 'RACE' as field_name\n    , case when term.description is not null then 'valid'\n           when m.race is not null then 'invalid'\n           else 'null'\n    end as bucket_name\n    , case when m.race is not null and term.description is null\n           then 'Race description does not join to Terminology race table'\n           else null end as invalid_reason\n    , cast(race as TEXT) as field_value\n    , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom tuva.input_layer.patient as m\nleft outer join tuva.terminology.race as term on m.race = term.description", "relation_name": "tuva.data_quality.patient_race", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:47.676405Z", "completed_at": "2025-06-03T19:49:47.688476Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:47.688930Z", "completed_at": "2025-06-03T19:49:47.688935Z"}], "thread_id": "Thread-4", "execution_time": 0.013743877410888672, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.data_quality__medication_atc_code", "compiled": true, "compiled_code": "\n\n\nselect\n      m.data_source\n    , coalesce(m.dispensing_date,cast('1900-01-01' as date)) as source_date\n    , 'MEDICATION' as table_name\n    , 'Medication ID' as drill_down_key\n    , coalesce(medication_id, 'NULL') as drill_down_value\n    , 'ATC_CODE' as field_name\n    , case when coalesce(term_1.atc_1_name,term_2.atc_2_name,term_3.atc_3_name,term_4.atc_4_name) is not null then 'valid'\n           when m.atc_code is not null then 'invalid'\n           else 'null'\n    end as bucket_name\n    , case when m.atc_code is not null and coalesce(term_1.atc_1_name,term_2.atc_2_name,term_3.atc_3_name,term_4.atc_4_name) is null\n           then 'ATC Code does not join to Terminology rxnorm_to_atc table on any atc level'\n           else null end as invalid_reason\n    , cast(atc_code as TEXT) as field_value\n    , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom tuva.input_layer.medication as m\nleft outer join tuva.terminology.rxnorm_to_atc as term_1 on m.atc_code = term_1.atc_1_name\nleft outer join tuva.terminology.rxnorm_to_atc as term_2 on m.atc_code = term_2.atc_2_name\nleft outer join tuva.terminology.rxnorm_to_atc as term_3 on m.atc_code = term_3.atc_3_name\nleft outer join tuva.terminology.rxnorm_to_atc as term_4 on m.atc_code = term_4.atc_4_name", "relation_name": "tuva.data_quality.medication_atc_code", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:47.682741Z", "completed_at": "2025-06-03T19:49:47.696111Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:47.696766Z", "completed_at": "2025-06-03T19:49:47.696771Z"}], "thread_id": "Thread-2", "execution_time": 0.02064990997314453, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.data_quality__medication_rxnorm_code", "compiled": true, "compiled_code": "\n\n\nselect\n      m.data_source\n    , coalesce(m.dispensing_date,cast('1900-01-01' as date)) as source_date\n    , 'MEDICATION' as table_name\n    , 'Medication ID' as drill_down_key\n    , coalesce(medication_id, 'NULL') as drill_down_value\n    , 'RXNORM_CODE' as field_name\n    , case when term.rxcui is not null then 'valid'\n           when m.rxnorm_code is not null then 'invalid'\n           else 'null'\n    end as bucket_name\n    , case when m.rxnorm_code is not null and term.rxcui is null\n           then 'RX norm code does not join to Terminology rxnorm_to_atc table'\n           else null end as invalid_reason\n    , cast(rxnorm_code as TEXT) as field_value\n    , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom tuva.input_layer.medication as m\nleft outer join tuva.terminology.rxnorm_to_atc as term on m.rxnorm_code = term.rxcui", "relation_name": "tuva.data_quality.medication_rxnorm_code", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:47.689304Z", "completed_at": "2025-06-03T19:49:47.697141Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:47.697793Z", "completed_at": "2025-06-03T19:49:47.697797Z"}], "thread_id": "Thread-1", "execution_time": 0.009611129760742188, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.elementary.anomaly_threshold_sensitivity", "compiled": true, "compiled_code": "\n\nwith metrics_anomaly_score as (\n\n    select * from tuva.dbt_sarah.metrics_anomaly_score\n\n),\n\nscore_sensitivity as (\n\n    select\n        full_table_name,\n        column_name,\n        metric_name,\n        latest_metric_value,\n        training_avg as metric_avg,\n        training_stddev as metric_stddev,\n        anomaly_score,\n        case when abs(anomaly_score) >= 1.5 then true else false end as \"is_anomaly_1_5\",\n        case when abs(anomaly_score) >= 2 then true else false end as \"is_anomaly_2\",\n        case when abs(anomaly_score) >= 2.5 then true else false end as \"is_anomaly_2_5\",\n        case when abs(anomaly_score) >= 3 then true else false end as \"is_anomaly_3\",\n        case when abs(anomaly_score) >= 3.5 then true else false end as \"is_anomaly_3_5\",\n        case when abs(anomaly_score) >= 4 then true else false end as \"is_anomaly_4\",\n        case when abs(anomaly_score) >= 4.5 then true else false end as \"is_anomaly_4_5\"\n    from metrics_anomaly_score\n    where abs(anomaly_score) >= 1.5\n\n)\n\nselect * from score_sensitivity", "relation_name": "tuva.dbt_sarah.anomaly_threshold_sensitivity", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:47.698181Z", "completed_at": "2025-06-03T19:49:47.710371Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:47.710845Z", "completed_at": "2025-06-03T19:49:47.710852Z"}], "thread_id": "Thread-4", "execution_time": 0.014471054077148438, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.elementary.alerts_dbt_models", "compiled": true, "compiled_code": "\n\nwith error_models as (\n  \n    select  model_execution_id,\n            unique_id,\n            invocation_id,\n            name,\n            generated_at,\n            status,\n            full_refresh,\n            message,\n            execution_time,\n            execute_started_at,\n            execute_completed_at,\n            compile_started_at,\n            compile_completed_at,\n            compiled_code,\n            database_name,\n            schema_name,\n            materialization,\n            tags,\n            package_name,\n            path,\n            original_path,\n            owner,\n            alias \n    from tuva.dbt_sarah.model_run_results\n  \n    union all\n  \n    select  model_execution_id,\n            unique_id,\n            invocation_id,\n            name,\n            generated_at,\n            status,\n            full_refresh,\n            message,\n            execution_time,\n            execute_started_at,\n            execute_completed_at,\n            compile_started_at,\n            compile_completed_at,\n            compiled_code,\n            database_name,\n            schema_name,\n            materialization,\n            tags,\n            package_name,\n            path,\n            original_path,\n            owner,\n            alias  \n  from tuva.dbt_sarah.snapshot_run_results\n)\n\n\nselect model_execution_id as alert_id,\n       unique_id,\n       cast(generated_at as timestamp) as detected_at,\n       database_name,\n       materialization,\n       path,\n       original_path,\n       schema_name,\n       message,\n       owner as owners,\n       tags,\n       alias,\n       status,\n       full_refresh\nfrom error_models\nwhere True and lower(status) != 'success'and lower(status) != 'skipped'", "relation_name": "tuva.dbt_sarah.alerts_dbt_models", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:47.705024Z", "completed_at": "2025-06-03T19:49:47.721577Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:47.722140Z", "completed_at": "2025-06-03T19:49:47.722145Z"}], "thread_id": "Thread-2", "execution_time": 0.018198013305664062, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.data_quality__primary_keys_condition_condition_id", "compiled": true, "compiled_code": "\n\nwith valid_conditions as (\n    select\n        *\n    from\n        tuva.data_quality.condition_condition_id\n    where\n        bucket_name = 'valid'\n)\n, uniqueness_check as (\n        select\n                field_value\n                , COUNT(*) as duplicate_count\n        from\n                valid_conditions\n        group by\n                field_value\n        having\n                COUNT(*) > 1\n)\n\n, random_sample as (\n    select\n        data_source\n        , source_date\n        , table_name\n        , drill_down_key\n        , drill_down_value\n        , field_name\n        , field_value\n        , bucket_name\n        , ROW_NUMBER() over (\norder by drill_down_key) as row_number_value\n    from\n        tuva.data_quality.condition_condition_id\n    where\n        bucket_name = 'valid'\n\n)\n\n, duplicates_summary as (\n    select\n        a.data_source\n        , a.source_date\n        , a.table_name\n        , a.drill_down_key\n        , a.drill_down_value\n        , a.field_name\n        , a.field_value\n        , a.bucket_name\n        , b.duplicate_count\n        , ROW_NUMBER() over (\norder by drill_down_key) as row_number_value\n    from\n        tuva.data_quality.condition_condition_id as a\n    inner join\n        uniqueness_check as b on a.field_value = b.field_value\n)\n\nselect\n    *\n    , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom\n    duplicates_summary\nwhere row_number_value <= 5\n\nunion all\n\nselect\n    *\n    , 0 as duplicate_count\n    , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom\n    random_sample\nwhere\n    row_number_value <= 5\n    and not exists (select 1 from duplicates_summary)", "relation_name": "tuva.data_quality.primary_keys_condition_condition_id", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:47.711227Z", "completed_at": "2025-06-03T19:49:47.722973Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:47.731371Z", "completed_at": "2025-06-03T19:49:47.731378Z"}], "thread_id": "Thread-1", "execution_time": 0.02665114402770996, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.core__stg_clinical_condition", "compiled": true, "compiled_code": "\n\nselect\n    cast(condition_id as TEXT) as condition_id\n    , cast(person_id as TEXT) as person_id\n    , cast(null as TEXT) as member_id\n    , cast(patient_id as TEXT) as patient_id\n    , cast(encounter_id as TEXT) as encounter_id\n    , cast(claim_id as TEXT) as claim_id\n    , try_cast( recorded_date as date ) as recorded_date\n    , try_cast( onset_date as date ) as onset_date\n    , try_cast( resolved_date as date ) as resolved_date\n    , cast(status as TEXT) as status\n    , cast(condition_type as TEXT) as condition_type\n    , cast(source_code_type as TEXT) as source_code_type\n    , cast(source_code as TEXT) as source_code\n    , cast(source_description as TEXT) as source_description\n    , cast(normalized_code_type as TEXT) as normalized_code_type\n    , cast(normalized_code as TEXT) as normalized_code\n    , cast(normalized_description as TEXT) as normalized_description\n    , cast(condition_rank as integer) as condition_rank\n    , cast(present_on_admit_code as TEXT) as present_on_admit_code\n    , cast(present_on_admit_description as TEXT) as present_on_admit_description\n    , cast(data_source as TEXT) as data_source\n    , cast('2025-06-03 19:49:40.396647+00:00' as timestamp) as tuva_last_run\nfrom tuva.input_layer.input_layer__condition", "relation_name": "tuva.core._stg_clinical_condition", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:47.723212Z", "completed_at": "2025-06-03T19:49:47.738582Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:47.750080Z", "completed_at": "2025-06-03T19:49:47.750089Z"}], "thread_id": "Thread-4", "execution_time": 0.028270244598388672, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.accepted_values_input_layer__condition_source_code_type__icd_10_cm__icd_9_cm__snomed_ct.2ff10e2c42", "compiled": true, "compiled_code": "\n    \n    \n\nwith all_values as (\n\n    select\n        source_code_type as value_field,\n        count(*) as n_records\n\n    from tuva.input_layer.input_layer__condition\n    group by source_code_type\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    'icd-10-cm','icd-9-cm','snomed-ct'\n)\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:47.751647Z", "completed_at": "2025-06-03T19:49:48.005453Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:48.005955Z", "completed_at": "2025-06-03T19:49:48.005964Z"}], "thread_id": "Thread-1", "execution_time": 0.25632500648498535, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_expectations_expect_column_to_exist_input_layer__condition_condition_id.b43a68aa4c", "compiled": true, "compiled_code": "\n\n    with test_data as (\n\n        select\n            cast('CONDITION_ID' as TEXT) as column_name,\n            0 as matching_column_index,\n            True as column_index_matches\n\n    )\n    select *\n    from test_data\n    where\n        not(matching_column_index >= 0 and column_index_matches)", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:47.876705Z", "completed_at": "2025-06-03T19:49:48.006491Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:48.007760Z", "completed_at": "2025-06-03T19:49:48.007765Z"}], "thread_id": "Thread-4", "execution_time": 0.13763689994812012, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_expectations_expect_column_to_exist_input_layer__condition_condition_rank.52978e422a", "compiled": true, "compiled_code": "\n\n    with test_data as (\n\n        select\n            cast('CONDITION_RANK' as TEXT) as column_name,\n            16 as matching_column_index,\n            True as column_index_matches\n\n    )\n    select *\n    from test_data\n    where\n        not(matching_column_index >= 0 and column_index_matches)", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:47.732296Z", "completed_at": "2025-06-03T19:49:48.007410Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:48.008624Z", "completed_at": "2025-06-03T19:49:48.008629Z"}], "thread_id": "Thread-2", "execution_time": 0.2775869369506836, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_expectations_expect_column_to_exist_input_layer__condition_claim_id.3fda888a16", "compiled": true, "compiled_code": "\n\n    with test_data as (\n\n        select\n            cast('CLAIM_ID' as TEXT) as column_name,\n            4 as matching_column_index,\n            True as column_index_matches\n\n    )\n    select *\n    from test_data\n    where\n        not(matching_column_index >= 0 and column_index_matches)", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:48.030843Z", "completed_at": "2025-06-03T19:49:48.150656Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:48.151076Z", "completed_at": "2025-06-03T19:49:48.151086Z"}], "thread_id": "Thread-2", "execution_time": 0.13057303428649902, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_expectations_expect_column_to_exist_input_layer__condition_encounter_id.12271389ef", "compiled": true, "compiled_code": "\n\n    with test_data as (\n\n        select\n            cast('ENCOUNTER_ID' as TEXT) as column_name,\n            3 as matching_column_index,\n            True as column_index_matches\n\n    )\n    select *\n    from test_data\n    where\n        not(matching_column_index >= 0 and column_index_matches)", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:48.010286Z", "completed_at": "2025-06-03T19:49:48.152098Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:48.152802Z", "completed_at": "2025-06-03T19:49:48.152809Z"}], "thread_id": "Thread-1", "execution_time": 0.1446373462677002, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_expectations_expect_column_to_exist_input_layer__condition_condition_type.6ddf37572d", "compiled": true, "compiled_code": "\n\n    with test_data as (\n\n        select\n            cast('CONDITION_TYPE' as TEXT) as column_name,\n            9 as matching_column_index,\n            True as column_index_matches\n\n    )\n    select *\n    from test_data\n    where\n        not(matching_column_index >= 0 and column_index_matches)", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:48.021640Z", "completed_at": "2025-06-03T19:49:48.184036Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:48.184313Z", "completed_at": "2025-06-03T19:49:48.184320Z"}], "thread_id": "Thread-4", "execution_time": 0.1744072437286377, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_expectations_expect_column_to_exist_input_layer__condition_data_source.7d29125ced", "compiled": true, "compiled_code": "\n\n    with test_data as (\n\n        select\n            cast('DATA_SOURCE' as TEXT) as column_name,\n            19 as matching_column_index,\n            True as column_index_matches\n\n    )\n    select *\n    from test_data\n    where\n        not(matching_column_index >= 0 and column_index_matches)", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:48.167652Z", "completed_at": "2025-06-03T19:49:48.273867Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:48.274195Z", "completed_at": "2025-06-03T19:49:48.274203Z"}], "thread_id": "Thread-1", "execution_time": 0.10789918899536133, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_expectations_expect_column_to_exist_input_layer__condition_ingest_datetime.b1dd472e96", "compiled": true, "compiled_code": "\n\n    with test_data as (\n\n        select\n            cast('INGEST_DATETIME' as TEXT) as column_name,\n            21 as matching_column_index,\n            True as column_index_matches\n\n    )\n    select *\n    from test_data\n    where\n        not(matching_column_index >= 0 and column_index_matches)", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:48.154130Z", "completed_at": "2025-06-03T19:49:48.291198Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:48.291467Z", "completed_at": "2025-06-03T19:49:48.291474Z"}], "thread_id": "Thread-2", "execution_time": 0.13913488388061523, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_expectations_expect_column_to_exist_input_layer__condition_file_name.4662a1ba0f", "compiled": true, "compiled_code": "\n\n    with test_data as (\n\n        select\n            cast('FILE_NAME' as TEXT) as column_name,\n            20 as matching_column_index,\n            True as column_index_matches\n\n    )\n    select *\n    from test_data\n    where\n        not(matching_column_index >= 0 and column_index_matches)", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:48.185570Z", "completed_at": "2025-06-03T19:49:48.306784Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:48.307071Z", "completed_at": "2025-06-03T19:49:48.307078Z"}], "thread_id": "Thread-4", "execution_time": 0.12212491035461426, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_expectations_expect_column_to_exist_input_layer__condition_normalized_code.14b593e7a8", "compiled": true, "compiled_code": "\n\n    with test_data as (\n\n        select\n            cast('NORMALIZED_CODE' as TEXT) as column_name,\n            14 as matching_column_index,\n            True as column_index_matches\n\n    )\n    select *\n    from test_data\n    where\n        not(matching_column_index >= 0 and column_index_matches)", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:48.292751Z", "completed_at": "2025-06-03T19:49:48.435247Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:48.436016Z", "completed_at": "2025-06-03T19:49:48.436025Z"}], "thread_id": "Thread-2", "execution_time": 0.14392924308776855, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_expectations_expect_column_to_exist_input_layer__condition_normalized_description.65682f9235", "compiled": true, "compiled_code": "\n\n    with test_data as (\n\n        select\n            cast('NORMALIZED_DESCRIPTION' as TEXT) as column_name,\n            15 as matching_column_index,\n            True as column_index_matches\n\n    )\n    select *\n    from test_data\n    where\n        not(matching_column_index >= 0 and column_index_matches)", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:48.275735Z", "completed_at": "2025-06-03T19:49:48.435658Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:48.436645Z", "completed_at": "2025-06-03T19:49:48.436652Z"}], "thread_id": "Thread-1", "execution_time": 0.16166996955871582, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_expectations_expect_column_to_exist_input_layer__condition_normalized_code_type.65a84b6dcc", "compiled": true, "compiled_code": "\n\n    with test_data as (\n\n        select\n            cast('NORMALIZED_CODE_TYPE' as TEXT) as column_name,\n            13 as matching_column_index,\n            True as column_index_matches\n\n    )\n    select *\n    from test_data\n    where\n        not(matching_column_index >= 0 and column_index_matches)", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:48.308227Z", "completed_at": "2025-06-03T19:49:48.437231Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:48.438305Z", "completed_at": "2025-06-03T19:49:48.438311Z"}], "thread_id": "Thread-4", "execution_time": 0.13065409660339355, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_expectations_expect_column_to_exist_input_layer__condition_onset_date.94d66999ed", "compiled": true, "compiled_code": "\n\n    with test_data as (\n\n        select\n            cast('ONSET_DATE' as TEXT) as column_name,\n            6 as matching_column_index,\n            True as column_index_matches\n\n    )\n    select *\n    from test_data\n    where\n        not(matching_column_index >= 0 and column_index_matches)", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:48.464571Z", "completed_at": "2025-06-03T19:49:48.658408Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:48.658786Z", "completed_at": "2025-06-03T19:49:48.658795Z"}], "thread_id": "Thread-4", "execution_time": 0.21820688247680664, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_expectations_expect_column_to_exist_input_layer__condition_present_on_admit_description.a9389357c5", "compiled": true, "compiled_code": "\n\n    with test_data as (\n\n        select\n            cast('PRESENT_ON_ADMIT_DESCRIPTION' as TEXT) as column_name,\n            18 as matching_column_index,\n            True as column_index_matches\n\n    )\n    select *\n    from test_data\n    where\n        not(matching_column_index >= 0 and column_index_matches)", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:48.453535Z", "completed_at": "2025-06-03T19:49:48.659713Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:48.660514Z", "completed_at": "2025-06-03T19:49:48.660520Z"}], "thread_id": "Thread-1", "execution_time": 0.22133493423461914, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_expectations_expect_column_to_exist_input_layer__condition_present_on_admit_code.0267552996", "compiled": true, "compiled_code": "\n\n    with test_data as (\n\n        select\n            cast('PRESENT_ON_ADMIT_CODE' as TEXT) as column_name,\n            17 as matching_column_index,\n            True as column_index_matches\n\n    )\n    select *\n    from test_data\n    where\n        not(matching_column_index >= 0 and column_index_matches)", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:48.441062Z", "completed_at": "2025-06-03T19:49:48.689524Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:48.689818Z", "completed_at": "2025-06-03T19:49:48.689825Z"}], "thread_id": "Thread-2", "execution_time": 0.2510218620300293, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_expectations_expect_column_to_exist_input_layer__condition_patient_id.cfb61d4131", "compiled": true, "compiled_code": "\n\n    with test_data as (\n\n        select\n            cast('PATIENT_ID' as TEXT) as column_name,\n            2 as matching_column_index,\n            True as column_index_matches\n\n    )\n    select *\n    from test_data\n    where\n        not(matching_column_index >= 0 and column_index_matches)", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:48.661794Z", "completed_at": "2025-06-03T19:49:48.803762Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:48.807597Z", "completed_at": "2025-06-03T19:49:48.807609Z"}], "thread_id": "Thread-4", "execution_time": 0.14761710166931152, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_expectations_expect_column_to_exist_input_layer__condition_recorded_date.c7369a29e9", "compiled": true, "compiled_code": "\n\n    with test_data as (\n\n        select\n            cast('RECORDED_DATE' as TEXT) as column_name,\n            5 as matching_column_index,\n            True as column_index_matches\n\n    )\n    select *\n    from test_data\n    where\n        not(matching_column_index >= 0 and column_index_matches)", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:48.691051Z", "completed_at": "2025-06-03T19:49:48.806924Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:48.808419Z", "completed_at": "2025-06-03T19:49:48.808427Z"}], "thread_id": "Thread-2", "execution_time": 0.11800289154052734, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_expectations_expect_column_to_exist_input_layer__condition_source_code.928c7e865f", "compiled": true, "compiled_code": "\n\n    with test_data as (\n\n        select\n            cast('SOURCE_CODE' as TEXT) as column_name,\n            11 as matching_column_index,\n            True as column_index_matches\n\n    )\n    select *\n    from test_data\n    where\n        not(matching_column_index >= 0 and column_index_matches)", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:48.677796Z", "completed_at": "2025-06-03T19:49:48.810452Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:48.811771Z", "completed_at": "2025-06-03T19:49:48.811780Z"}], "thread_id": "Thread-1", "execution_time": 0.1382288932800293, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_expectations_expect_column_to_exist_input_layer__condition_resolved_date.753082c5ea", "compiled": true, "compiled_code": "\n\n    with test_data as (\n\n        select\n            cast('RESOLVED_DATE' as TEXT) as column_name,\n            7 as matching_column_index,\n            True as column_index_matches\n\n    )\n    select *\n    from test_data\n    where\n        not(matching_column_index >= 0 and column_index_matches)", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:48.838724Z", "completed_at": "2025-06-03T19:49:48.954484Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:48.955138Z", "completed_at": "2025-06-03T19:49:48.955146Z"}], "thread_id": "Thread-1", "execution_time": 0.1180877685546875, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_expectations_expect_column_to_exist_input_layer__condition_status.c9f8fa5cd4", "compiled": true, "compiled_code": "\n\n    with test_data as (\n\n        select\n            cast('STATUS' as TEXT) as column_name,\n            8 as matching_column_index,\n            True as column_index_matches\n\n    )\n    select *\n    from test_data\n    where\n        not(matching_column_index >= 0 and column_index_matches)", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:48.813991Z", "completed_at": "2025-06-03T19:49:48.954844Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:48.955671Z", "completed_at": "2025-06-03T19:49:48.955676Z"}], "thread_id": "Thread-4", "execution_time": 0.14478683471679688, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_expectations_expect_column_to_exist_input_layer__condition_source_code_type.d6d17972ab", "compiled": true, "compiled_code": "\n\n    with test_data as (\n\n        select\n            cast('SOURCE_CODE_TYPE' as TEXT) as column_name,\n            10 as matching_column_index,\n            True as column_index_matches\n\n    )\n    select *\n    from test_data\n    where\n        not(matching_column_index >= 0 and column_index_matches)", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:48.826721Z", "completed_at": "2025-06-03T19:49:48.956136Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:48.957173Z", "completed_at": "2025-06-03T19:49:48.957178Z"}], "thread_id": "Thread-2", "execution_time": 0.1458580493927002, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_expectations_expect_column_to_exist_input_layer__condition_source_description.0216bda7fc", "compiled": true, "compiled_code": "\n\n    with test_data as (\n\n        select\n            cast('SOURCE_DESCRIPTION' as TEXT) as column_name,\n            12 as matching_column_index,\n            True as column_index_matches\n\n    )\n    select *\n    from test_data\n    where\n        not(matching_column_index >= 0 and column_index_matches)", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:48.959630Z", "completed_at": "2025-06-03T19:49:49.102858Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:49.103187Z", "completed_at": "2025-06-03T19:49:49.103195Z"}], "thread_id": "Thread-1", "execution_time": 0.14561986923217773, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_expectations_expect_column_values_to_be_in_type_list_input_layer__condition_ingest_datetime__date__datetime__time__timestamp__timestamp_ntz__timestampntz__timestamp_ltz__timestampltz__timestamp_tz__timestamptz__timestamp_with_time_zone__timestamp_without_time_zone__datetime2__datetimeoffset.d8b07d215d", "compiled": true, "compiled_code": "with relation_columns as (\n\n        \n        select\n            cast('CONDITION_ID' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PERSON_ID' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PATIENT_ID' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('ENCOUNTER_ID' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('CLAIM_ID' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('RECORDED_DATE' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('ONSET_DATE' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('RESOLVED_DATE' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('STATUS' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('CONDITION_TYPE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('SOURCE_CODE_TYPE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('SOURCE_CODE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('SOURCE_DESCRIPTION' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('NORMALIZED_CODE_TYPE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('NORMALIZED_CODE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('NORMALIZED_DESCRIPTION' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('CONDITION_RANK' as TEXT) as relation_column,\n            cast('NUMBER' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PRESENT_ON_ADMIT_CODE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PRESENT_ON_ADMIT_DESCRIPTION' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DATA_SOURCE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('FILE_NAME' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('INGEST_DATETIME' as TEXT) as relation_column,\n            cast('TIMESTAMP_NTZ' as TEXT) as relation_column_type\n        \n        \n    ),\n    test_data as (\n\n        select\n            *\n        from\n            relation_columns\n        where\n            relation_column = 'INGEST_DATETIME'\n            and\n            relation_column_type not in ('DATE', 'DATETIME', 'TIME', 'TIMESTAMP', 'TIMESTAMP_NTZ', 'TIMESTAMPNTZ', 'TIMESTAMP_LTZ', 'TIMESTAMPLTZ', 'TIMESTAMP_TZ', 'TIMESTAMPTZ', 'TIMESTAMP WITH TIME ZONE', 'TIMESTAMP WITHOUT TIME ZONE', 'DATETIME2', 'DATETIMEOFFSET')\n\n    )\n    select *\n    from test_data", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:48.971259Z", "completed_at": "2025-06-03T19:49:49.126165Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:49.126441Z", "completed_at": "2025-06-03T19:49:49.126448Z"}], "thread_id": "Thread-4", "execution_time": 0.16851186752319336, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_expectations_expect_column_values_to_be_of_type_input_layer__condition_onset_date__date.b73e20c94c", "compiled": true, "compiled_code": "with relation_columns as (\n\n        \n        select\n            cast('CONDITION_ID' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PERSON_ID' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PATIENT_ID' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('ENCOUNTER_ID' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('CLAIM_ID' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('RECORDED_DATE' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('ONSET_DATE' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('RESOLVED_DATE' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('STATUS' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('CONDITION_TYPE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('SOURCE_CODE_TYPE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('SOURCE_CODE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('SOURCE_DESCRIPTION' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('NORMALIZED_CODE_TYPE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('NORMALIZED_CODE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('NORMALIZED_DESCRIPTION' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('CONDITION_RANK' as TEXT) as relation_column,\n            cast('NUMBER' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PRESENT_ON_ADMIT_CODE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PRESENT_ON_ADMIT_DESCRIPTION' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DATA_SOURCE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('FILE_NAME' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('INGEST_DATETIME' as TEXT) as relation_column,\n            cast('TIMESTAMP_NTZ' as TEXT) as relation_column_type\n        \n        \n    ),\n    test_data as (\n\n        select\n            *\n        from\n            relation_columns\n        where\n            relation_column = 'ONSET_DATE'\n            and\n            relation_column_type not in ('DATE')\n\n    )\n    select *\n    from test_data", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:48.989917Z", "completed_at": "2025-06-03T19:49:49.133358Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:49.133793Z", "completed_at": "2025-06-03T19:49:49.133798Z"}], "thread_id": "Thread-2", "execution_time": 0.17456293106079102, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_expectations_expect_column_values_to_be_of_type_input_layer__condition_recorded_date__date.110279ae18", "compiled": true, "compiled_code": "with relation_columns as (\n\n        \n        select\n            cast('CONDITION_ID' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PERSON_ID' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PATIENT_ID' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('ENCOUNTER_ID' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('CLAIM_ID' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('RECORDED_DATE' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('ONSET_DATE' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('RESOLVED_DATE' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('STATUS' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('CONDITION_TYPE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('SOURCE_CODE_TYPE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('SOURCE_CODE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('SOURCE_DESCRIPTION' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('NORMALIZED_CODE_TYPE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('NORMALIZED_CODE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('NORMALIZED_DESCRIPTION' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('CONDITION_RANK' as TEXT) as relation_column,\n            cast('NUMBER' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PRESENT_ON_ADMIT_CODE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PRESENT_ON_ADMIT_DESCRIPTION' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DATA_SOURCE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('FILE_NAME' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('INGEST_DATETIME' as TEXT) as relation_column,\n            cast('TIMESTAMP_NTZ' as TEXT) as relation_column_type\n        \n        \n    ),\n    test_data as (\n\n        select\n            *\n        from\n            relation_columns\n        where\n            relation_column = 'RECORDED_DATE'\n            and\n            relation_column_type not in ('DATE')\n\n    )\n    select *\n    from test_data", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:49.127708Z", "completed_at": "2025-06-03T19:49:49.134839Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:49.135517Z", "completed_at": "2025-06-03T19:49:49.135521Z"}], "thread_id": "Thread-4", "execution_time": 0.008483171463012695, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.not_null_input_layer__condition_condition_id.dd32700fdb", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect condition_id\nfrom tuva.input_layer.input_layer__condition\nwhere condition_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:49.135905Z", "completed_at": "2025-06-03T19:49:49.148814Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:49.149136Z", "completed_at": "2025-06-03T19:49:49.149142Z"}], "thread_id": "Thread-2", "execution_time": 0.014674186706542969, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.unique_input_layer__condition_condition_id.0f9bb22e22", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    condition_id as unique_field,\n    count(*) as n_records\n\nfrom tuva.input_layer.input_layer__condition\nwhere condition_id is not null\ngroup by condition_id\nhaving count(*) > 1\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:49.142414Z", "completed_at": "2025-06-03T19:49:49.150290Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:49.162860Z", "completed_at": "2025-06-03T19:49:49.162868Z"}], "thread_id": "Thread-4", "execution_time": 0.021153688430786133, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.data_quality__primary_keys_encounter_encounter_id", "compiled": true, "compiled_code": "\n\nwith valid_conditions as (\n    select\n        *\n    from\n        tuva.data_quality.encounter_encounter_id\n    where\n        bucket_name = 'valid'\n)\n, uniqueness_check as (\n        select\n                field_value\n                , COUNT(*) as duplicate_count\n        from\n                valid_conditions\n        group by\n                field_value\n        having\n                COUNT(*) > 1\n)\n\n, random_sample as (\n    select\n        data_source\n        , source_date\n        , table_name\n        , drill_down_key\n        , drill_down_value\n        , field_name\n        , field_value\n        , bucket_name\n        , ROW_NUMBER() over (\norder by drill_down_key) as row_number_value\n    from\n        tuva.data_quality.encounter_encounter_id\n    where\n        bucket_name = 'valid'\n\n)\n\n, duplicates_summary as (\n    select\n        a.data_source\n        , a.source_date\n        , a.table_name\n        , a.drill_down_key\n        , a.drill_down_value\n        , a.field_name\n        , a.field_value\n        , a.bucket_name\n        , b.duplicate_count\n        , ROW_NUMBER() over (\norder by drill_down_key) as row_number_value\n    from\n        tuva.data_quality.encounter_encounter_id as a\n    inner join\n        uniqueness_check as b on a.field_value = b.field_value\n)\n\nselect\n    *\n    , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom\n    duplicates_summary\nwhere row_number_value <= 5\n\nunion all\n\nselect\n    *\n    , 0 as duplicate_count\n    , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom\n    random_sample\nwhere\n    row_number_value <= 5\n    and not exists (select 1 from duplicates_summary)", "relation_name": "tuva.data_quality.primary_keys_encounter_encounter_id", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:49.150507Z", "completed_at": "2025-06-03T19:49:49.169831Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:49.172551Z", "completed_at": "2025-06-03T19:49:49.172557Z"}], "thread_id": "Thread-2", "execution_time": 0.022771835327148438, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.core__stg_clinical_encounter", "compiled": true, "compiled_code": "\n\nselect\n    cast(encounter_id as TEXT) as encounter_id\n  , cast(person_id as TEXT) as person_id\n  , cast(encounter_type as TEXT) as encounter_type\n  , cast('clinical' as TEXT) as encounter_group\n  , try_cast( encounter_start_date as date ) as encounter_start_date\n  , try_cast( encounter_end_date as date ) as encounter_end_date\n  , cast(length_of_stay as integer) as length_of_stay\n  , cast(admit_source_code as TEXT) as admit_source_code\n  , cast(admit_source_description as TEXT) as admit_source_description\n  , cast(admit_type_code as TEXT) as admit_type_code\n  , cast(admit_type_description as TEXT) as admit_type_description\n  , cast(discharge_disposition_code as TEXT) as discharge_disposition_code\n  , cast(discharge_disposition_description as TEXT) as discharge_disposition_description\n  , cast(attending_provider_id as TEXT) as attending_provider_id\n  , cast(attending_provider_name as TEXT) as attending_provider_name\n  , cast(facility_id as TEXT) as facility_id\n  , cast(facility_name as TEXT) as facility_name\n  , cast(null as TEXT) as facility_type\n  , cast(null as integer) as observation_flag\n  , cast(null as integer) as lab_flag\n  , cast(null as integer) as dme_flag\n  , cast(null as integer) as ambulance_flag\n  , cast(null as integer) as pharmacy_flag\n  , cast(null as integer) as ed_flag\n  , cast(null as integer) as delivery_flag\n  , cast(null as TEXT) as delivery_type\n  , cast(null as integer) as newborn_flag\n  , cast(null as integer) as nicu_flag\n  , cast(primary_diagnosis_code_type as TEXT) as primary_diagnosis_code_type\n  , cast(primary_diagnosis_code as TEXT) as primary_diagnosis_code\n  , cast(primary_diagnosis_description as TEXT) as primary_diagnosis_description\n  , cast(drg_code_type as TEXT) as drg_code_type\n  , cast(drg_code as TEXT) as drg_code\n  , cast(drg_description as TEXT) as drg_description\n  , cast(paid_amount as numeric(28,6)) as paid_amount\n  , cast(allowed_amount as numeric(28,6)) as allowed_amount\n  , cast(charge_amount as numeric(28,6)) as charge_amount\n  , cast(null as integer) as claim_count\n  , cast(null as integer) as inst_claim_count\n  , cast(null as integer) as prof_claim_count\n  , cast(null as TEXT) as source_model\n  , cast(data_source as TEXT) as data_source\n  , cast('2025-06-03 19:49:40.396647+00:00' as timestamp) as tuva_last_run\nfrom tuva.input_layer.input_layer__encounter", "relation_name": "tuva.core._stg_clinical_encounter", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:49.111609Z", "completed_at": "2025-06-03T19:49:49.288137Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:49.288517Z", "completed_at": "2025-06-03T19:49:49.288526Z"}], "thread_id": "Thread-1", "execution_time": 0.1843421459197998, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_expectations_expect_column_values_to_be_of_type_input_layer__condition_resolved_date__date.7edfccf72b", "compiled": true, "compiled_code": "with relation_columns as (\n\n        \n        select\n            cast('CONDITION_ID' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PERSON_ID' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PATIENT_ID' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('ENCOUNTER_ID' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('CLAIM_ID' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('RECORDED_DATE' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('ONSET_DATE' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('RESOLVED_DATE' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('STATUS' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('CONDITION_TYPE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('SOURCE_CODE_TYPE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('SOURCE_CODE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('SOURCE_DESCRIPTION' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('NORMALIZED_CODE_TYPE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('NORMALIZED_CODE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('NORMALIZED_DESCRIPTION' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('CONDITION_RANK' as TEXT) as relation_column,\n            cast('NUMBER' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PRESENT_ON_ADMIT_CODE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PRESENT_ON_ADMIT_DESCRIPTION' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DATA_SOURCE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('FILE_NAME' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('INGEST_DATETIME' as TEXT) as relation_column,\n            cast('TIMESTAMP_NTZ' as TEXT) as relation_column_type\n        \n        \n    ),\n    test_data as (\n\n        select\n            *\n        from\n            relation_columns\n        where\n            relation_column = 'RESOLVED_DATE'\n            and\n            relation_column_type not in ('DATE')\n\n    )\n    select *\n    from test_data", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:49.174048Z", "completed_at": "2025-06-03T19:49:49.310561Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:49.313610Z", "completed_at": "2025-06-03T19:49:49.313619Z"}], "thread_id": "Thread-2", "execution_time": 0.1401081085205078, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_expectations_expect_column_to_exist_input_layer__encounter_admit_source_description.8f6d3c9098", "compiled": true, "compiled_code": "\n\n    with test_data as (\n\n        select\n            cast('ADMIT_SOURCE_DESCRIPTION' as TEXT) as column_name,\n            8 as matching_column_index,\n            True as column_index_matches\n\n    )\n    select *\n    from test_data\n    where\n        not(matching_column_index >= 0 and column_index_matches)", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:49.164101Z", "completed_at": "2025-06-03T19:49:49.315528Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:49.411162Z", "completed_at": "2025-06-03T19:49:49.411175Z"}], "thread_id": "Thread-4", "execution_time": 0.24765896797180176, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_expectations_expect_column_to_exist_input_layer__encounter_admit_source_code.72f6d75287", "compiled": true, "compiled_code": "\n\n    with test_data as (\n\n        select\n            cast('ADMIT_SOURCE_CODE' as TEXT) as column_name,\n            7 as matching_column_index,\n            True as column_index_matches\n\n    )\n    select *\n    from test_data\n    where\n        not(matching_column_index >= 0 and column_index_matches)", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:49.290651Z", "completed_at": "2025-06-03T19:49:49.431090Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:49.431328Z", "completed_at": "2025-06-03T19:49:49.431333Z"}], "thread_id": "Thread-1", "execution_time": 0.14189481735229492, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_expectations_expect_column_to_exist_input_layer__encounter_admit_type_code.f10d9257b4", "compiled": true, "compiled_code": "\n\n    with test_data as (\n\n        select\n            cast('ADMIT_TYPE_CODE' as TEXT) as column_name,\n            9 as matching_column_index,\n            True as column_index_matches\n\n    )\n    select *\n    from test_data\n    where\n        not(matching_column_index >= 0 and column_index_matches)", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:49.419418Z", "completed_at": "2025-06-03T19:49:49.567058Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:49.567472Z", "completed_at": "2025-06-03T19:49:49.567481Z"}], "thread_id": "Thread-4", "execution_time": 0.14899301528930664, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_expectations_expect_column_to_exist_input_layer__encounter_allowed_amount.60613ad8f2", "compiled": true, "compiled_code": "\n\n    with test_data as (\n\n        select\n            cast('ALLOWED_AMOUNT' as TEXT) as column_name,\n            24 as matching_column_index,\n            True as column_index_matches\n\n    )\n    select *\n    from test_data\n    where\n        not(matching_column_index >= 0 and column_index_matches)", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:49.432345Z", "completed_at": "2025-06-03T19:49:49.568123Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:49.568895Z", "completed_at": "2025-06-03T19:49:49.568902Z"}], "thread_id": "Thread-1", "execution_time": 0.13707685470581055, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_expectations_expect_column_to_exist_input_layer__encounter_attending_provider_id.415ac651c8", "compiled": true, "compiled_code": "\n\n    with test_data as (\n\n        select\n            cast('ATTENDING_PROVIDER_ID' as TEXT) as column_name,\n            13 as matching_column_index,\n            True as column_index_matches\n\n    )\n    select *\n    from test_data\n    where\n        not(matching_column_index >= 0 and column_index_matches)", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:49.316037Z", "completed_at": "2025-06-03T19:49:49.569449Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:49.570555Z", "completed_at": "2025-06-03T19:49:49.570561Z"}], "thread_id": "Thread-2", "execution_time": 0.2556619644165039, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_expectations_expect_column_to_exist_input_layer__encounter_admit_type_description.2cda181819", "compiled": true, "compiled_code": "\n\n    with test_data as (\n\n        select\n            cast('ADMIT_TYPE_DESCRIPTION' as TEXT) as column_name,\n            10 as matching_column_index,\n            True as column_index_matches\n\n    )\n    select *\n    from test_data\n    where\n        not(matching_column_index >= 0 and column_index_matches)", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:49.585404Z", "completed_at": "2025-06-03T19:49:49.741424Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:49.742899Z", "completed_at": "2025-06-03T19:49:49.742911Z"}], "thread_id": "Thread-1", "execution_time": 0.17161917686462402, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_expectations_expect_column_to_exist_input_layer__encounter_charge_amount.715ac22faa", "compiled": true, "compiled_code": "\n\n    with test_data as (\n\n        select\n            cast('CHARGE_AMOUNT' as TEXT) as column_name,\n            25 as matching_column_index,\n            True as column_index_matches\n\n    )\n    select *\n    from test_data\n    where\n        not(matching_column_index >= 0 and column_index_matches)", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:49.572127Z", "completed_at": "2025-06-03T19:49:49.747166Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:49.748077Z", "completed_at": "2025-06-03T19:49:49.748084Z"}], "thread_id": "Thread-4", "execution_time": 0.17837977409362793, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_expectations_expect_column_to_exist_input_layer__encounter_attending_provider_name.e8448f37b4", "compiled": true, "compiled_code": "\n\n    with test_data as (\n\n        select\n            cast('ATTENDING_PROVIDER_NAME' as TEXT) as column_name,\n            14 as matching_column_index,\n            True as column_index_matches\n\n    )\n    select *\n    from test_data\n    where\n        not(matching_column_index >= 0 and column_index_matches)", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:49.596181Z", "completed_at": "2025-06-03T19:49:49.749970Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:49.751863Z", "completed_at": "2025-06-03T19:49:49.751870Z"}], "thread_id": "Thread-2", "execution_time": 0.16715598106384277, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_expectations_expect_column_to_exist_input_layer__encounter_data_source.6735e01479", "compiled": true, "compiled_code": "\n\n    with test_data as (\n\n        select\n            cast('DATA_SOURCE' as TEXT) as column_name,\n            26 as matching_column_index,\n            True as column_index_matches\n\n    )\n    select *\n    from test_data\n    where\n        not(matching_column_index >= 0 and column_index_matches)", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:49.767685Z", "completed_at": "2025-06-03T19:49:49.889254Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:49.889909Z", "completed_at": "2025-06-03T19:49:49.889918Z"}], "thread_id": "Thread-4", "execution_time": 0.13857722282409668, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_expectations_expect_column_to_exist_input_layer__encounter_discharge_disposition_description.9c0af0ad94", "compiled": true, "compiled_code": "\n\n    with test_data as (\n\n        select\n            cast('DISCHARGE_DISPOSITION_DESCRIPTION' as TEXT) as column_name,\n            12 as matching_column_index,\n            True as column_index_matches\n\n    )\n    select *\n    from test_data\n    where\n        not(matching_column_index >= 0 and column_index_matches)", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:49.780611Z", "completed_at": "2025-06-03T19:49:49.889603Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:49.890464Z", "completed_at": "2025-06-03T19:49:49.890469Z"}], "thread_id": "Thread-2", "execution_time": 0.11198115348815918, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_expectations_expect_column_to_exist_input_layer__encounter_drg_code.7ca87219d0", "compiled": true, "compiled_code": "\n\n    with test_data as (\n\n        select\n            cast('DRG_CODE' as TEXT) as column_name,\n            21 as matching_column_index,\n            True as column_index_matches\n\n    )\n    select *\n    from test_data\n    where\n        not(matching_column_index >= 0 and column_index_matches)", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:49.753954Z", "completed_at": "2025-06-03T19:49:49.926573Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:49.926886Z", "completed_at": "2025-06-03T19:49:49.926893Z"}], "thread_id": "Thread-1", "execution_time": 0.17822909355163574, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_expectations_expect_column_to_exist_input_layer__encounter_discharge_disposition_code.fc45289ccb", "compiled": true, "compiled_code": "\n\n    with test_data as (\n\n        select\n            cast('DISCHARGE_DISPOSITION_CODE' as TEXT) as column_name,\n            11 as matching_column_index,\n            True as column_index_matches\n\n    )\n    select *\n    from test_data\n    where\n        not(matching_column_index >= 0 and column_index_matches)", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:49.928095Z", "completed_at": "2025-06-03T19:49:50.056285Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:50.056965Z", "completed_at": "2025-06-03T19:49:50.056973Z"}], "thread_id": "Thread-1", "execution_time": 0.12943792343139648, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_expectations_expect_column_to_exist_input_layer__encounter_encounter_end_date.c98ee29438", "compiled": true, "compiled_code": "\n\n    with test_data as (\n\n        select\n            cast('ENCOUNTER_END_DATE' as TEXT) as column_name,\n            5 as matching_column_index,\n            True as column_index_matches\n\n    )\n    select *\n    from test_data\n    where\n        not(matching_column_index >= 0 and column_index_matches)", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:49.892875Z", "completed_at": "2025-06-03T19:49:50.056525Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:50.057383Z", "completed_at": "2025-06-03T19:49:50.057387Z"}], "thread_id": "Thread-4", "execution_time": 0.16576886177062988, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_expectations_expect_column_to_exist_input_layer__encounter_drg_code_type.f3f5499233", "compiled": true, "compiled_code": "\n\n    with test_data as (\n\n        select\n            cast('DRG_CODE_TYPE' as TEXT) as column_name,\n            20 as matching_column_index,\n            True as column_index_matches\n\n    )\n    select *\n    from test_data\n    where\n        not(matching_column_index >= 0 and column_index_matches)", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:49.904092Z", "completed_at": "2025-06-03T19:49:50.056764Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:50.057752Z", "completed_at": "2025-06-03T19:49:50.057755Z"}], "thread_id": "Thread-2", "execution_time": 0.16578412055969238, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_expectations_expect_column_to_exist_input_layer__encounter_drg_description.4f16a3480c", "compiled": true, "compiled_code": "\n\n    with test_data as (\n\n        select\n            cast('DRG_DESCRIPTION' as TEXT) as column_name,\n            22 as matching_column_index,\n            True as column_index_matches\n\n    )\n    select *\n    from test_data\n    where\n        not(matching_column_index >= 0 and column_index_matches)", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:50.069291Z", "completed_at": "2025-06-03T19:49:50.268672Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:50.268982Z", "completed_at": "2025-06-03T19:49:50.268991Z"}], "thread_id": "Thread-4", "execution_time": 0.20995020866394043, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_expectations_expect_column_to_exist_input_layer__encounter_encounter_start_date.56840a888b", "compiled": true, "compiled_code": "\n\n    with test_data as (\n\n        select\n            cast('ENCOUNTER_START_DATE' as TEXT) as column_name,\n            4 as matching_column_index,\n            True as column_index_matches\n\n    )\n    select *\n    from test_data\n    where\n        not(matching_column_index >= 0 and column_index_matches)", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:50.077548Z", "completed_at": "2025-06-03T19:49:50.305377Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:50.305645Z", "completed_at": "2025-06-03T19:49:50.305652Z"}], "thread_id": "Thread-2", "execution_time": 0.24634814262390137, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_expectations_expect_column_to_exist_input_layer__encounter_encounter_type.46395ce34c", "compiled": true, "compiled_code": "\n\n    with test_data as (\n\n        select\n            cast('ENCOUNTER_TYPE' as TEXT) as column_name,\n            3 as matching_column_index,\n            True as column_index_matches\n\n    )\n    select *\n    from test_data\n    where\n        not(matching_column_index >= 0 and column_index_matches)", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:50.060250Z", "completed_at": "2025-06-03T19:49:50.306306Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:50.306874Z", "completed_at": "2025-06-03T19:49:50.306878Z"}], "thread_id": "Thread-1", "execution_time": 0.248060941696167, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_expectations_expect_column_to_exist_input_layer__encounter_encounter_id.bef19f7734", "compiled": true, "compiled_code": "\n\n    with test_data as (\n\n        select\n            cast('ENCOUNTER_ID' as TEXT) as column_name,\n            0 as matching_column_index,\n            True as column_index_matches\n\n    )\n    select *\n    from test_data\n    where\n        not(matching_column_index >= 0 and column_index_matches)", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:50.270352Z", "completed_at": "2025-06-03T19:49:50.387388Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:50.387646Z", "completed_at": "2025-06-03T19:49:50.387653Z"}], "thread_id": "Thread-4", "execution_time": 0.11797881126403809, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_expectations_expect_column_to_exist_input_layer__encounter_facility_id.a9acc495dd", "compiled": true, "compiled_code": "\n\n    with test_data as (\n\n        select\n            cast('FACILITY_ID' as TEXT) as column_name,\n            15 as matching_column_index,\n            True as column_index_matches\n\n    )\n    select *\n    from test_data\n    where\n        not(matching_column_index >= 0 and column_index_matches)", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:50.307764Z", "completed_at": "2025-06-03T19:49:50.447090Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:50.447333Z", "completed_at": "2025-06-03T19:49:50.447339Z"}], "thread_id": "Thread-2", "execution_time": 0.14081597328186035, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_expectations_expect_column_to_exist_input_layer__encounter_facility_name.dbb511a529", "compiled": true, "compiled_code": "\n\n    with test_data as (\n\n        select\n            cast('FACILITY_NAME' as TEXT) as column_name,\n            16 as matching_column_index,\n            True as column_index_matches\n\n    )\n    select *\n    from test_data\n    where\n        not(matching_column_index >= 0 and column_index_matches)", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:50.317876Z", "completed_at": "2025-06-03T19:49:50.448463Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:50.457550Z", "completed_at": "2025-06-03T19:49:50.457558Z"}], "thread_id": "Thread-1", "execution_time": 0.14076995849609375, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_expectations_expect_column_to_exist_input_layer__encounter_file_name.7d430ae90f", "compiled": true, "compiled_code": "\n\n    with test_data as (\n\n        select\n            cast('FILE_NAME' as TEXT) as column_name,\n            27 as matching_column_index,\n            True as column_index_matches\n\n    )\n    select *\n    from test_data\n    where\n        not(matching_column_index >= 0 and column_index_matches)", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:50.388749Z", "completed_at": "2025-06-03T19:49:50.546269Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:50.546655Z", "completed_at": "2025-06-03T19:49:50.546665Z"}], "thread_id": "Thread-4", "execution_time": 0.15847086906433105, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_expectations_expect_column_to_exist_input_layer__encounter_ingest_datetime.b6b3b32f2b", "compiled": true, "compiled_code": "\n\n    with test_data as (\n\n        select\n            cast('INGEST_DATETIME' as TEXT) as column_name,\n            28 as matching_column_index,\n            True as column_index_matches\n\n    )\n    select *\n    from test_data\n    where\n        not(matching_column_index >= 0 and column_index_matches)", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:50.459392Z", "completed_at": "2025-06-03T19:49:50.571755Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:50.572052Z", "completed_at": "2025-06-03T19:49:50.572059Z"}], "thread_id": "Thread-1", "execution_time": 0.11338019371032715, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_expectations_expect_column_to_exist_input_layer__encounter_paid_amount.f71439296c", "compiled": true, "compiled_code": "\n\n    with test_data as (\n\n        select\n            cast('PAID_AMOUNT' as TEXT) as column_name,\n            23 as matching_column_index,\n            True as column_index_matches\n\n    )\n    select *\n    from test_data\n    where\n        not(matching_column_index >= 0 and column_index_matches)", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:50.448721Z", "completed_at": "2025-06-03T19:49:50.572800Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:50.573507Z", "completed_at": "2025-06-03T19:49:50.573512Z"}], "thread_id": "Thread-2", "execution_time": 0.1255631446838379, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_expectations_expect_column_to_exist_input_layer__encounter_length_of_stay.8f28ce7b68", "compiled": true, "compiled_code": "\n\n    with test_data as (\n\n        select\n            cast('LENGTH_OF_STAY' as TEXT) as column_name,\n            6 as matching_column_index,\n            True as column_index_matches\n\n    )\n    select *\n    from test_data\n    where\n        not(matching_column_index >= 0 and column_index_matches)", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:50.548406Z", "completed_at": "2025-06-03T19:49:50.708555Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:50.708996Z", "completed_at": "2025-06-03T19:49:50.709007Z"}], "thread_id": "Thread-4", "execution_time": 0.16147494316101074, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_expectations_expect_column_to_exist_input_layer__encounter_patient_id.d22f1d1550", "compiled": true, "compiled_code": "\n\n    with test_data as (\n\n        select\n            cast('PATIENT_ID' as TEXT) as column_name,\n            2 as matching_column_index,\n            True as column_index_matches\n\n    )\n    select *\n    from test_data\n    where\n        not(matching_column_index >= 0 and column_index_matches)", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:50.585889Z", "completed_at": "2025-06-03T19:49:50.733384Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:50.733715Z", "completed_at": "2025-06-03T19:49:50.733723Z"}], "thread_id": "Thread-2", "execution_time": 0.14903807640075684, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_expectations_expect_column_to_exist_input_layer__encounter_primary_diagnosis_code.591acc4ce0", "compiled": true, "compiled_code": "\n\n    with test_data as (\n\n        select\n            cast('PRIMARY_DIAGNOSIS_CODE' as TEXT) as column_name,\n            18 as matching_column_index,\n            True as column_index_matches\n\n    )\n    select *\n    from test_data\n    where\n        not(matching_column_index >= 0 and column_index_matches)", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:50.575286Z", "completed_at": "2025-06-03T19:49:50.734557Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:50.735273Z", "completed_at": "2025-06-03T19:49:50.735279Z"}], "thread_id": "Thread-1", "execution_time": 0.16230106353759766, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_expectations_expect_column_to_exist_input_layer__encounter_person_id.e66621f214", "compiled": true, "compiled_code": "\n\n    with test_data as (\n\n        select\n            cast('PERSON_ID' as TEXT) as column_name,\n            1 as matching_column_index,\n            True as column_index_matches\n\n    )\n    select *\n    from test_data\n    where\n        not(matching_column_index >= 0 and column_index_matches)", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:50.748252Z", "completed_at": "2025-06-03T19:49:50.761452Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:50.761710Z", "completed_at": "2025-06-03T19:49:50.761717Z"}], "thread_id": "Thread-1", "execution_time": 0.014653205871582031, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_expectations_expect_column_value_lengths_to_equal_input_layer__encounter_admit_source_code__1.2aac3242f2", "compiled": true, "compiled_code": "\n\n\n\n\n    with grouped_expression as (\n    select\n        \n        \n    \n  \n  length( admit_source_code )\n = 1 as expression\n\n\n    from tuva.input_layer.input_layer__encounter\n    \n\n),\nvalidation_errors as (\n\n    select\n        *\n    from\n        grouped_expression\n    where\n        not(expression = true)\n\n)\n\nselect *\nfrom validation_errors\n\n\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:50.710990Z", "completed_at": "2025-06-03T19:49:50.836056Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:50.836395Z", "completed_at": "2025-06-03T19:49:50.836403Z"}], "thread_id": "Thread-4", "execution_time": 0.1263871192932129, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_expectations_expect_column_to_exist_input_layer__encounter_primary_diagnosis_code_type.0d996ec33f", "compiled": true, "compiled_code": "\n\n    with test_data as (\n\n        select\n            cast('PRIMARY_DIAGNOSIS_CODE_TYPE' as TEXT) as column_name,\n            17 as matching_column_index,\n            True as column_index_matches\n\n    )\n    select *\n    from test_data\n    where\n        not(matching_column_index >= 0 and column_index_matches)", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:50.736723Z", "completed_at": "2025-06-03T19:49:50.955291Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:50.955816Z", "completed_at": "2025-06-03T19:49:50.955824Z"}], "thread_id": "Thread-2", "execution_time": 0.22105908393859863, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_expectations_expect_column_to_exist_input_layer__encounter_primary_diagnosis_description.735832562f", "compiled": true, "compiled_code": "\n\n    with test_data as (\n\n        select\n            cast('PRIMARY_DIAGNOSIS_DESCRIPTION' as TEXT) as column_name,\n            19 as matching_column_index,\n            True as column_index_matches\n\n    )\n    select *\n    from test_data\n    where\n        not(matching_column_index >= 0 and column_index_matches)", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:50.762976Z", "completed_at": "2025-06-03T19:49:50.956447Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:50.957661Z", "completed_at": "2025-06-03T19:49:50.957667Z"}], "thread_id": "Thread-1", "execution_time": 0.19533681869506836, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_expectations_expect_column_values_to_be_in_type_list_input_layer__encounter_ingest_datetime__date__datetime__time__timestamp__timestamp_ntz__timestampntz__timestamp_ltz__timestampltz__timestamp_tz__timestamptz__timestamp_with_time_zone__timestamp_without_time_zone__datetime2__datetimeoffset.2e4ebf6a22", "compiled": true, "compiled_code": "with relation_columns as (\n\n        \n        select\n            cast('ENCOUNTER_ID' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PERSON_ID' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PATIENT_ID' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('ENCOUNTER_TYPE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('ENCOUNTER_START_DATE' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('ENCOUNTER_END_DATE' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('LENGTH_OF_STAY' as TEXT) as relation_column,\n            cast('NUMBER' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('ADMIT_SOURCE_CODE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('ADMIT_SOURCE_DESCRIPTION' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('ADMIT_TYPE_CODE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('ADMIT_TYPE_DESCRIPTION' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DISCHARGE_DISPOSITION_CODE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DISCHARGE_DISPOSITION_DESCRIPTION' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('ATTENDING_PROVIDER_ID' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('ATTENDING_PROVIDER_NAME' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('FACILITY_ID' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('FACILITY_NAME' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PRIMARY_DIAGNOSIS_CODE_TYPE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PRIMARY_DIAGNOSIS_CODE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PRIMARY_DIAGNOSIS_DESCRIPTION' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DRG_CODE_TYPE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DRG_CODE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DRG_DESCRIPTION' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PAID_AMOUNT' as TEXT) as relation_column,\n            cast('NUMBER' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('ALLOWED_AMOUNT' as TEXT) as relation_column,\n            cast('NUMBER' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('CHARGE_AMOUNT' as TEXT) as relation_column,\n            cast('NUMBER' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DATA_SOURCE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('FILE_NAME' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('INGEST_DATETIME' as TEXT) as relation_column,\n            cast('TIMESTAMP_NTZ' as TEXT) as relation_column_type\n        \n        \n    ),\n    test_data as (\n\n        select\n            *\n        from\n            relation_columns\n        where\n            relation_column = 'INGEST_DATETIME'\n            and\n            relation_column_type not in ('DATE', 'DATETIME', 'TIME', 'TIMESTAMP', 'TIMESTAMP_NTZ', 'TIMESTAMPNTZ', 'TIMESTAMP_LTZ', 'TIMESTAMPLTZ', 'TIMESTAMP_TZ', 'TIMESTAMPTZ', 'TIMESTAMP WITH TIME ZONE', 'TIMESTAMP WITHOUT TIME ZONE', 'DATETIME2', 'DATETIMEOFFSET')\n\n    )\n    select *\n    from test_data", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:50.969505Z", "completed_at": "2025-06-03T19:49:50.975368Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:50.975602Z", "completed_at": "2025-06-03T19:49:50.975608Z"}], "thread_id": "Thread-1", "execution_time": 0.015641212463378906, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.not_null_input_layer__encounter_encounter_id.a4558e6430", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect encounter_id\nfrom tuva.input_layer.input_layer__encounter\nwhere encounter_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:50.976668Z", "completed_at": "2025-06-03T19:49:50.982390Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:50.982669Z", "completed_at": "2025-06-03T19:49:50.982674Z"}], "thread_id": "Thread-1", "execution_time": 0.006531238555908203, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.not_null_input_layer__encounter_person_id.da17f3fdcc", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect person_id\nfrom tuva.input_layer.input_layer__encounter\nwhere person_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:50.983717Z", "completed_at": "2025-06-03T19:49:50.991388Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:50.991617Z", "completed_at": "2025-06-03T19:49:50.991624Z"}], "thread_id": "Thread-1", "execution_time": 0.008400917053222656, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.relationships_input_layer__encounter_encounter_type__encounter_type__ref_terminology__encounter_type_.d799132437", "compiled": true, "compiled_code": "\n    \n    \n\nwith child as (\n    select encounter_type as from_field\n    from tuva.input_layer.input_layer__encounter\n    where encounter_type is not null\n),\n\nparent as (\n    select encounter_type as to_field\n    from tuva.terminology.encounter_type\n)\n\nselect\n    from_field\n\nfrom child\nleft join parent\n    on child.from_field = parent.to_field\n\nwhere parent.to_field is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:50.992669Z", "completed_at": "2025-06-03T19:49:50.998196Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:50.998409Z", "completed_at": "2025-06-03T19:49:50.998413Z"}], "thread_id": "Thread-1", "execution_time": 0.006230831146240234, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.unique_input_layer__encounter_encounter_id.cd9d983b1d", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    encounter_id as unique_field,\n    count(*) as n_records\n\nfrom tuva.input_layer.input_layer__encounter\nwhere encounter_id is not null\ngroup by encounter_id\nhaving count(*) > 1\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:50.999444Z", "completed_at": "2025-06-03T19:49:51.005152Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:51.005376Z", "completed_at": "2025-06-03T19:49:51.005381Z"}], "thread_id": "Thread-1", "execution_time": 0.006419181823730469, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.data_quality__primary_keys_lab_result_lab_result_id", "compiled": true, "compiled_code": "\n\nwith valid_conditions as (\n    select\n        *\n    from\n        tuva.data_quality.lab_result_lab_result_id\n    where\n        bucket_name = 'valid'\n)\n, uniqueness_check as (\n        select\n                field_value\n                , COUNT(*) as duplicate_count\n        from\n                valid_conditions\n        group by\n                field_value\n        having\n                COUNT(*) > 1\n)\n\n, random_sample as (\n    select\n        data_source\n        , source_date\n        , table_name\n        , drill_down_key\n        , drill_down_value\n        , field_name\n        , field_value\n        , bucket_name\n        , ROW_NUMBER() over (\norder by drill_down_key) as row_number_value\n    from\n        tuva.data_quality.lab_result_lab_result_id\n    where\n        bucket_name = 'valid'\n)\n\n, duplicates_summary as (\n    select\n        a.data_source\n        , a.source_date\n        , a.table_name\n        , a.drill_down_key\n        , a.drill_down_value\n        , a.field_name\n        , a.field_value\n        , a.bucket_name\n        , b.duplicate_count\n        , ROW_NUMBER() over (\norder by drill_down_key) as row_number_value\n    from\n        tuva.data_quality.lab_result_lab_result_id as a\n    inner join\n        uniqueness_check as b on a.field_value = b.field_value\n)\n\nselect\n    *\n    , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom\n    duplicates_summary\nwhere row_number_value <= 5\n\nunion all\n\nselect\n    *\n    , 0 as duplicate_count\n    , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom\n    random_sample\nwhere\n    row_number_value <= 5\n    and not exists (select 1 from duplicates_summary)", "relation_name": "tuva.data_quality.primary_keys_lab_result_lab_result_id", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:51.006374Z", "completed_at": "2025-06-03T19:49:51.016573Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:51.016789Z", "completed_at": "2025-06-03T19:49:51.016794Z"}], "thread_id": "Thread-1", "execution_time": 0.010889053344726562, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.core__stg_clinical_lab_result", "compiled": true, "compiled_code": "\n\nselect\n    cast(lab_result_id as TEXT) as lab_result_id\n    , cast(person_id as TEXT) as person_id\n    , cast(patient_id as TEXT) as patient_id\n    , cast(encounter_id as TEXT) as encounter_id\n    , cast(accession_number as TEXT) as accession_number\n    , cast(source_code_type as TEXT) as source_code_type\n    , cast(source_code as TEXT) as source_code\n    , cast(source_description as TEXT) as source_description\n    , cast(source_component as TEXT) as source_component\n    , cast(normalized_code_type as TEXT) as normalized_code_type\n    , cast(normalized_code as TEXT) as normalized_code\n    , cast(normalized_description as TEXT) as normalized_description\n    , cast(normalized_component as TEXT) as normalized_component\n    , cast(status as TEXT) as status\n    , cast(result as TEXT) as result\n    , try_cast( result_date as date ) as result_date\n    , try_cast( collection_date as date ) as collection_date\n    , cast(source_units as TEXT) as source_units\n    , cast(normalized_units as TEXT) as normalized_units\n    , cast(source_reference_range_low as TEXT) as source_reference_range_low\n    , cast(source_reference_range_high as TEXT) as source_reference_range_high\n    , cast(normalized_reference_range_low as TEXT) as normalized_reference_range_low\n    , cast(normalized_reference_range_high as TEXT) as normalized_reference_range_high\n    , cast(source_abnormal_flag as TEXT) as source_abnormal_flag\n    , cast(normalized_abnormal_flag as TEXT) as normalized_abnormal_flag\n    , cast(specimen as TEXT) as specimen\n    , cast(ordering_practitioner_id as TEXT) as ordering_practitioner_id\n    , cast(data_source as TEXT) as data_source\n    , cast('2025-06-03 19:49:40.396647+00:00' as timestamp) as tuva_last_run\nfrom tuva.input_layer.input_layer__lab_result", "relation_name": "tuva.core._stg_clinical_lab_result", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:51.017905Z", "completed_at": "2025-06-03T19:49:51.023776Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:51.024005Z", "completed_at": "2025-06-03T19:49:51.024011Z"}], "thread_id": "Thread-1", "execution_time": 0.006627082824707031, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.accepted_values_input_layer__lab_result_source_code_type__loinc__snomed_ct__dqi_quality_measures.8539b6d1eb", "compiled": true, "compiled_code": "\n    \n    \n\nwith all_values as (\n\n    select\n        source_code_type as value_field,\n        count(*) as n_records\n\n    from tuva.input_layer.input_layer__lab_result\n    group by source_code_type\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    'loinc','snomed-ct','dqi_quality_measures'\n)\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:50.837798Z", "completed_at": "2025-06-03T19:49:51.057697Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:51.057961Z", "completed_at": "2025-06-03T19:49:51.057968Z"}], "thread_id": "Thread-4", "execution_time": 0.22081589698791504, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_expectations_expect_column_values_to_be_of_type_input_layer__encounter_encounter_end_date__date.feb3a7290f", "compiled": true, "compiled_code": "with relation_columns as (\n\n        \n        select\n            cast('ENCOUNTER_ID' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PERSON_ID' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PATIENT_ID' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('ENCOUNTER_TYPE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('ENCOUNTER_START_DATE' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('ENCOUNTER_END_DATE' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('LENGTH_OF_STAY' as TEXT) as relation_column,\n            cast('NUMBER' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('ADMIT_SOURCE_CODE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('ADMIT_SOURCE_DESCRIPTION' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('ADMIT_TYPE_CODE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('ADMIT_TYPE_DESCRIPTION' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DISCHARGE_DISPOSITION_CODE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DISCHARGE_DISPOSITION_DESCRIPTION' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('ATTENDING_PROVIDER_ID' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('ATTENDING_PROVIDER_NAME' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('FACILITY_ID' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('FACILITY_NAME' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PRIMARY_DIAGNOSIS_CODE_TYPE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PRIMARY_DIAGNOSIS_CODE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PRIMARY_DIAGNOSIS_DESCRIPTION' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DRG_CODE_TYPE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DRG_CODE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DRG_DESCRIPTION' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PAID_AMOUNT' as TEXT) as relation_column,\n            cast('NUMBER' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('ALLOWED_AMOUNT' as TEXT) as relation_column,\n            cast('NUMBER' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('CHARGE_AMOUNT' as TEXT) as relation_column,\n            cast('NUMBER' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DATA_SOURCE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('FILE_NAME' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('INGEST_DATETIME' as TEXT) as relation_column,\n            cast('TIMESTAMP_NTZ' as TEXT) as relation_column_type\n        \n        \n    ),\n    test_data as (\n\n        select\n            *\n        from\n            relation_columns\n        where\n            relation_column = 'ENCOUNTER_END_DATE'\n            and\n            relation_column_type not in ('DATE')\n\n    )\n    select *\n    from test_data", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:50.960326Z", "completed_at": "2025-06-03T19:49:51.092447Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:51.092705Z", "completed_at": "2025-06-03T19:49:51.092712Z"}], "thread_id": "Thread-2", "execution_time": 0.13434600830078125, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_expectations_expect_column_values_to_be_of_type_input_layer__encounter_encounter_start_date__date.2d6e6cfd06", "compiled": true, "compiled_code": "with relation_columns as (\n\n        \n        select\n            cast('ENCOUNTER_ID' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PERSON_ID' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PATIENT_ID' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('ENCOUNTER_TYPE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('ENCOUNTER_START_DATE' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('ENCOUNTER_END_DATE' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('LENGTH_OF_STAY' as TEXT) as relation_column,\n            cast('NUMBER' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('ADMIT_SOURCE_CODE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('ADMIT_SOURCE_DESCRIPTION' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('ADMIT_TYPE_CODE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('ADMIT_TYPE_DESCRIPTION' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DISCHARGE_DISPOSITION_CODE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DISCHARGE_DISPOSITION_DESCRIPTION' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('ATTENDING_PROVIDER_ID' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('ATTENDING_PROVIDER_NAME' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('FACILITY_ID' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('FACILITY_NAME' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PRIMARY_DIAGNOSIS_CODE_TYPE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PRIMARY_DIAGNOSIS_CODE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PRIMARY_DIAGNOSIS_DESCRIPTION' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DRG_CODE_TYPE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DRG_CODE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DRG_DESCRIPTION' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PAID_AMOUNT' as TEXT) as relation_column,\n            cast('NUMBER' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('ALLOWED_AMOUNT' as TEXT) as relation_column,\n            cast('NUMBER' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('CHARGE_AMOUNT' as TEXT) as relation_column,\n            cast('NUMBER' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DATA_SOURCE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('FILE_NAME' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('INGEST_DATETIME' as TEXT) as relation_column,\n            cast('TIMESTAMP_NTZ' as TEXT) as relation_column_type\n        \n        \n    ),\n    test_data as (\n\n        select\n            *\n        from\n            relation_columns\n        where\n            relation_column = 'ENCOUNTER_START_DATE'\n            and\n            relation_column_type not in ('DATE')\n\n    )\n    select *\n    from test_data", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:51.025040Z", "completed_at": "2025-06-03T19:49:51.145926Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:51.146224Z", "completed_at": "2025-06-03T19:49:51.146231Z"}], "thread_id": "Thread-1", "execution_time": 0.12169384956359863, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_expectations_expect_column_to_exist_input_layer__lab_result_accession_number.40c5f57fb9", "compiled": true, "compiled_code": "\n\n    with test_data as (\n\n        select\n            cast('ACCESSION_NUMBER' as TEXT) as column_name,\n            4 as matching_column_index,\n            True as column_index_matches\n\n    )\n    select *\n    from test_data\n    where\n        not(matching_column_index >= 0 and column_index_matches)", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:51.093913Z", "completed_at": "2025-06-03T19:49:51.242314Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:51.242868Z", "completed_at": "2025-06-03T19:49:51.242877Z"}], "thread_id": "Thread-2", "execution_time": 0.14954900741577148, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_expectations_expect_column_to_exist_input_layer__lab_result_data_source.ec05f29978", "compiled": true, "compiled_code": "\n\n    with test_data as (\n\n        select\n            cast('DATA_SOURCE' as TEXT) as column_name,\n            27 as matching_column_index,\n            True as column_index_matches\n\n    )\n    select *\n    from test_data\n    where\n        not(matching_column_index >= 0 and column_index_matches)", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:51.059165Z", "completed_at": "2025-06-03T19:49:51.263291Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:51.263607Z", "completed_at": "2025-06-03T19:49:51.263615Z"}], "thread_id": "Thread-4", "execution_time": 0.2050321102142334, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_expectations_expect_column_to_exist_input_layer__lab_result_collection_date.cd0ba9a4ee", "compiled": true, "compiled_code": "\n\n    with test_data as (\n\n        select\n            cast('COLLECTION_DATE' as TEXT) as column_name,\n            16 as matching_column_index,\n            True as column_index_matches\n\n    )\n    select *\n    from test_data\n    where\n        not(matching_column_index >= 0 and column_index_matches)", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:51.147632Z", "completed_at": "2025-06-03T19:49:51.279757Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:51.280028Z", "completed_at": "2025-06-03T19:49:51.280035Z"}], "thread_id": "Thread-1", "execution_time": 0.13308501243591309, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_expectations_expect_column_to_exist_input_layer__lab_result_encounter_id.161a8ce5eb", "compiled": true, "compiled_code": "\n\n    with test_data as (\n\n        select\n            cast('ENCOUNTER_ID' as TEXT) as column_name,\n            3 as matching_column_index,\n            True as column_index_matches\n\n    )\n    select *\n    from test_data\n    where\n        not(matching_column_index >= 0 and column_index_matches)", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:51.244975Z", "completed_at": "2025-06-03T19:49:51.434872Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:51.435582Z", "completed_at": "2025-06-03T19:49:51.435592Z"}], "thread_id": "Thread-2", "execution_time": 0.19144296646118164, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_expectations_expect_column_to_exist_input_layer__lab_result_file_name.a566fca98a", "compiled": true, "compiled_code": "\n\n    with test_data as (\n\n        select\n            cast('FILE_NAME' as TEXT) as column_name,\n            28 as matching_column_index,\n            True as column_index_matches\n\n    )\n    select *\n    from test_data\n    where\n        not(matching_column_index >= 0 and column_index_matches)", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:51.265015Z", "completed_at": "2025-06-03T19:49:51.435244Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:51.436223Z", "completed_at": "2025-06-03T19:49:51.436230Z"}], "thread_id": "Thread-4", "execution_time": 0.1719050407409668, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_expectations_expect_column_to_exist_input_layer__lab_result_ingest_datetime.edec31046d", "compiled": true, "compiled_code": "\n\n    with test_data as (\n\n        select\n            cast('INGEST_DATETIME' as TEXT) as column_name,\n            29 as matching_column_index,\n            True as column_index_matches\n\n    )\n    select *\n    from test_data\n    where\n        not(matching_column_index >= 0 and column_index_matches)", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:51.281330Z", "completed_at": "2025-06-03T19:49:51.436789Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:51.437874Z", "completed_at": "2025-06-03T19:49:51.437880Z"}], "thread_id": "Thread-1", "execution_time": 0.15723276138305664, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_expectations_expect_column_to_exist_input_layer__lab_result_lab_result_id.5af2f2ff4e", "compiled": true, "compiled_code": "\n\n    with test_data as (\n\n        select\n            cast('LAB_RESULT_ID' as TEXT) as column_name,\n            0 as matching_column_index,\n            True as column_index_matches\n\n    )\n    select *\n    from test_data\n    where\n        not(matching_column_index >= 0 and column_index_matches)", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:51.452816Z", "completed_at": "2025-06-03T19:49:51.700082Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:51.701302Z", "completed_at": "2025-06-03T19:49:51.701312Z"}], "thread_id": "Thread-4", "execution_time": 0.26259613037109375, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_expectations_expect_column_to_exist_input_layer__lab_result_normalized_code.82ba094557", "compiled": true, "compiled_code": "\n\n    with test_data as (\n\n        select\n            cast('NORMALIZED_CODE' as TEXT) as column_name,\n            10 as matching_column_index,\n            True as column_index_matches\n\n    )\n    select *\n    from test_data\n    where\n        not(matching_column_index >= 0 and column_index_matches)", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:51.463953Z", "completed_at": "2025-06-03T19:49:51.700406Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:51.701940Z", "completed_at": "2025-06-03T19:49:51.701946Z"}], "thread_id": "Thread-1", "execution_time": 0.26182103157043457, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_expectations_expect_column_to_exist_input_layer__lab_result_normalized_code_type.8cec83a3ee", "compiled": true, "compiled_code": "\n\n    with test_data as (\n\n        select\n            cast('NORMALIZED_CODE_TYPE' as TEXT) as column_name,\n            9 as matching_column_index,\n            True as column_index_matches\n\n    )\n    select *\n    from test_data\n    where\n        not(matching_column_index >= 0 and column_index_matches)", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:51.440568Z", "completed_at": "2025-06-03T19:49:51.702479Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:51.704070Z", "completed_at": "2025-06-03T19:49:51.704076Z"}], "thread_id": "Thread-2", "execution_time": 0.2657132148742676, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_expectations_expect_column_to_exist_input_layer__lab_result_normalized_abnormal_flag.2a25348eb4", "compiled": true, "compiled_code": "\n\n    with test_data as (\n\n        select\n            cast('NORMALIZED_ABNORMAL_FLAG' as TEXT) as column_name,\n            24 as matching_column_index,\n            True as column_index_matches\n\n    )\n    select *\n    from test_data\n    where\n        not(matching_column_index >= 0 and column_index_matches)", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:51.719002Z", "completed_at": "2025-06-03T19:49:51.934313Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:51.934681Z", "completed_at": "2025-06-03T19:49:51.934690Z"}], "thread_id": "Thread-1", "execution_time": 0.22948122024536133, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_expectations_expect_column_to_exist_input_layer__lab_result_normalized_description.4eb2c3f7a8", "compiled": true, "compiled_code": "\n\n    with test_data as (\n\n        select\n            cast('NORMALIZED_DESCRIPTION' as TEXT) as column_name,\n            11 as matching_column_index,\n            True as column_index_matches\n\n    )\n    select *\n    from test_data\n    where\n        not(matching_column_index >= 0 and column_index_matches)", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:51.707045Z", "completed_at": "2025-06-03T19:49:51.954791Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:51.959026Z", "completed_at": "2025-06-03T19:49:51.959034Z"}], "thread_id": "Thread-4", "execution_time": 0.25418996810913086, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_expectations_expect_column_to_exist_input_layer__lab_result_normalized_component.9224c0b80a", "compiled": true, "compiled_code": "\n\n    with test_data as (\n\n        select\n            cast('NORMALIZED_COMPONENT' as TEXT) as column_name,\n            12 as matching_column_index,\n            True as column_index_matches\n\n    )\n    select *\n    from test_data\n    where\n        not(matching_column_index >= 0 and column_index_matches)", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:51.729843Z", "completed_at": "2025-06-03T19:49:51.960226Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:51.961220Z", "completed_at": "2025-06-03T19:49:51.961226Z"}], "thread_id": "Thread-2", "execution_time": 0.25467991828918457, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_expectations_expect_column_to_exist_input_layer__lab_result_normalized_reference_range_high.8e50763825", "compiled": true, "compiled_code": "\n\n    with test_data as (\n\n        select\n            cast('NORMALIZED_REFERENCE_RANGE_HIGH' as TEXT) as column_name,\n            22 as matching_column_index,\n            True as column_index_matches\n\n    )\n    select *\n    from test_data\n    where\n        not(matching_column_index >= 0 and column_index_matches)", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:51.936830Z", "completed_at": "2025-06-03T19:49:52.061004Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:52.061337Z", "completed_at": "2025-06-03T19:49:52.061345Z"}], "thread_id": "Thread-1", "execution_time": 0.12540602684020996, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_expectations_expect_column_to_exist_input_layer__lab_result_normalized_reference_range_low.797a715daf", "compiled": true, "compiled_code": "\n\n    with test_data as (\n\n        select\n            cast('NORMALIZED_REFERENCE_RANGE_LOW' as TEXT) as column_name,\n            21 as matching_column_index,\n            True as column_index_matches\n\n    )\n    select *\n    from test_data\n    where\n        not(matching_column_index >= 0 and column_index_matches)", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:51.974400Z", "completed_at": "2025-06-03T19:49:52.093940Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:52.094217Z", "completed_at": "2025-06-03T19:49:52.094225Z"}], "thread_id": "Thread-2", "execution_time": 0.12134385108947754, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_expectations_expect_column_to_exist_input_layer__lab_result_ordering_practitioner_id.db6464dca6", "compiled": true, "compiled_code": "\n\n    with test_data as (\n\n        select\n            cast('ORDERING_PRACTITIONER_ID' as TEXT) as column_name,\n            26 as matching_column_index,\n            True as column_index_matches\n\n    )\n    select *\n    from test_data\n    where\n        not(matching_column_index >= 0 and column_index_matches)", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:51.962726Z", "completed_at": "2025-06-03T19:49:52.109553Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:52.109841Z", "completed_at": "2025-06-03T19:49:52.109848Z"}], "thread_id": "Thread-4", "execution_time": 0.14933013916015625, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_expectations_expect_column_to_exist_input_layer__lab_result_normalized_units.477112d256", "compiled": true, "compiled_code": "\n\n    with test_data as (\n\n        select\n            cast('NORMALIZED_UNITS' as TEXT) as column_name,\n            18 as matching_column_index,\n            True as column_index_matches\n\n    )\n    select *\n    from test_data\n    where\n        not(matching_column_index >= 0 and column_index_matches)", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:52.062875Z", "completed_at": "2025-06-03T19:49:52.224667Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:52.225070Z", "completed_at": "2025-06-03T19:49:52.225080Z"}], "thread_id": "Thread-1", "execution_time": 0.16295814514160156, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_expectations_expect_column_to_exist_input_layer__lab_result_patient_id.63ec875f4f", "compiled": true, "compiled_code": "\n\n    with test_data as (\n\n        select\n            cast('PATIENT_ID' as TEXT) as column_name,\n            2 as matching_column_index,\n            True as column_index_matches\n\n    )\n    select *\n    from test_data\n    where\n        not(matching_column_index >= 0 and column_index_matches)", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:52.095525Z", "completed_at": "2025-06-03T19:49:52.247894Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:52.248418Z", "completed_at": "2025-06-03T19:49:52.248425Z"}], "thread_id": "Thread-2", "execution_time": 0.1535358428955078, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_expectations_expect_column_to_exist_input_layer__lab_result_person_id.3ed66908ec", "compiled": true, "compiled_code": "\n\n    with test_data as (\n\n        select\n            cast('PERSON_ID' as TEXT) as column_name,\n            1 as matching_column_index,\n            True as column_index_matches\n\n    )\n    select *\n    from test_data\n    where\n        not(matching_column_index >= 0 and column_index_matches)", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:52.111053Z", "completed_at": "2025-06-03T19:49:52.248170Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:52.248880Z", "completed_at": "2025-06-03T19:49:52.248884Z"}], "thread_id": "Thread-4", "execution_time": 0.13840627670288086, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_expectations_expect_column_to_exist_input_layer__lab_result_result.4d71d081dd", "compiled": true, "compiled_code": "\n\n    with test_data as (\n\n        select\n            cast('RESULT' as TEXT) as column_name,\n            14 as matching_column_index,\n            True as column_index_matches\n\n    )\n    select *\n    from test_data\n    where\n        not(matching_column_index >= 0 and column_index_matches)", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:52.226793Z", "completed_at": "2025-06-03T19:49:52.352457Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:52.352808Z", "completed_at": "2025-06-03T19:49:52.352817Z"}], "thread_id": "Thread-1", "execution_time": 0.12685537338256836, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_expectations_expect_column_to_exist_input_layer__lab_result_result_date.1d99ce13bc", "compiled": true, "compiled_code": "\n\n    with test_data as (\n\n        select\n            cast('RESULT_DATE' as TEXT) as column_name,\n            15 as matching_column_index,\n            True as column_index_matches\n\n    )\n    select *\n    from test_data\n    where\n        not(matching_column_index >= 0 and column_index_matches)", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:52.251441Z", "completed_at": "2025-06-03T19:49:52.370000Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:52.370280Z", "completed_at": "2025-06-03T19:49:52.370287Z"}], "thread_id": "Thread-2", "execution_time": 0.12037324905395508, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_expectations_expect_column_to_exist_input_layer__lab_result_source_abnormal_flag.d9b57a7405", "compiled": true, "compiled_code": "\n\n    with test_data as (\n\n        select\n            cast('SOURCE_ABNORMAL_FLAG' as TEXT) as column_name,\n            23 as matching_column_index,\n            True as column_index_matches\n\n    )\n    select *\n    from test_data\n    where\n        not(matching_column_index >= 0 and column_index_matches)", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:52.260458Z", "completed_at": "2025-06-03T19:49:52.398503Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:52.398772Z", "completed_at": "2025-06-03T19:49:52.398779Z"}], "thread_id": "Thread-4", "execution_time": 0.14845895767211914, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_expectations_expect_column_to_exist_input_layer__lab_result_source_code.cfb91d9b40", "compiled": true, "compiled_code": "\n\n    with test_data as (\n\n        select\n            cast('SOURCE_CODE' as TEXT) as column_name,\n            6 as matching_column_index,\n            True as column_index_matches\n\n    )\n    select *\n    from test_data\n    where\n        not(matching_column_index >= 0 and column_index_matches)", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:52.371516Z", "completed_at": "2025-06-03T19:49:52.478100Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:52.478465Z", "completed_at": "2025-06-03T19:49:52.478473Z"}], "thread_id": "Thread-2", "execution_time": 0.10759806632995605, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_expectations_expect_column_to_exist_input_layer__lab_result_source_component.4868565a97", "compiled": true, "compiled_code": "\n\n    with test_data as (\n\n        select\n            cast('SOURCE_COMPONENT' as TEXT) as column_name,\n            8 as matching_column_index,\n            True as column_index_matches\n\n    )\n    select *\n    from test_data\n    where\n        not(matching_column_index >= 0 and column_index_matches)", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:52.354636Z", "completed_at": "2025-06-03T19:49:52.590704Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:52.590955Z", "completed_at": "2025-06-03T19:49:52.590962Z"}], "thread_id": "Thread-1", "execution_time": 0.23734498023986816, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_expectations_expect_column_to_exist_input_layer__lab_result_source_code_type.d650df78ff", "compiled": true, "compiled_code": "\n\n    with test_data as (\n\n        select\n            cast('SOURCE_CODE_TYPE' as TEXT) as column_name,\n            5 as matching_column_index,\n            True as column_index_matches\n\n    )\n    select *\n    from test_data\n    where\n        not(matching_column_index >= 0 and column_index_matches)", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:52.400083Z", "completed_at": "2025-06-03T19:49:52.601479Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:52.602318Z", "completed_at": "2025-06-03T19:49:52.602324Z"}], "thread_id": "Thread-4", "execution_time": 0.20287489891052246, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_expectations_expect_column_to_exist_input_layer__lab_result_source_description.bec58f2654", "compiled": true, "compiled_code": "\n\n    with test_data as (\n\n        select\n            cast('SOURCE_DESCRIPTION' as TEXT) as column_name,\n            7 as matching_column_index,\n            True as column_index_matches\n\n    )\n    select *\n    from test_data\n    where\n        not(matching_column_index >= 0 and column_index_matches)", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:52.480141Z", "completed_at": "2025-06-03T19:49:52.691619Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:52.692185Z", "completed_at": "2025-06-03T19:49:52.692194Z"}], "thread_id": "Thread-2", "execution_time": 0.21283483505249023, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_expectations_expect_column_to_exist_input_layer__lab_result_source_reference_range_high.3235b412ea", "compiled": true, "compiled_code": "\n\n    with test_data as (\n\n        select\n            cast('SOURCE_REFERENCE_RANGE_HIGH' as TEXT) as column_name,\n            20 as matching_column_index,\n            True as column_index_matches\n\n    )\n    select *\n    from test_data\n    where\n        not(matching_column_index >= 0 and column_index_matches)", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:52.592010Z", "completed_at": "2025-06-03T19:49:52.711354Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:52.711633Z", "completed_at": "2025-06-03T19:49:52.711640Z"}], "thread_id": "Thread-1", "execution_time": 0.12014222145080566, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_expectations_expect_column_to_exist_input_layer__lab_result_source_reference_range_low.32dbbd12de", "compiled": true, "compiled_code": "\n\n    with test_data as (\n\n        select\n            cast('SOURCE_REFERENCE_RANGE_LOW' as TEXT) as column_name,\n            19 as matching_column_index,\n            True as column_index_matches\n\n    )\n    select *\n    from test_data\n    where\n        not(matching_column_index >= 0 and column_index_matches)", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:52.603549Z", "completed_at": "2025-06-03T19:49:52.726899Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:52.727208Z", "completed_at": "2025-06-03T19:49:52.727216Z"}], "thread_id": "Thread-4", "execution_time": 0.12428402900695801, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_expectations_expect_column_to_exist_input_layer__lab_result_source_units.49ebfdd120", "compiled": true, "compiled_code": "\n\n    with test_data as (\n\n        select\n            cast('SOURCE_UNITS' as TEXT) as column_name,\n            17 as matching_column_index,\n            True as column_index_matches\n\n    )\n    select *\n    from test_data\n    where\n        not(matching_column_index >= 0 and column_index_matches)", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:52.694252Z", "completed_at": "2025-06-03T19:49:52.839418Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:52.839786Z", "completed_at": "2025-06-03T19:49:52.839796Z"}], "thread_id": "Thread-2", "execution_time": 0.14634394645690918, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_expectations_expect_column_to_exist_input_layer__lab_result_specimen.1fe1e88ca5", "compiled": true, "compiled_code": "\n\n    with test_data as (\n\n        select\n            cast('SPECIMEN' as TEXT) as column_name,\n            25 as matching_column_index,\n            True as column_index_matches\n\n    )\n    select *\n    from test_data\n    where\n        not(matching_column_index >= 0 and column_index_matches)", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:52.728834Z", "completed_at": "2025-06-03T19:49:52.911445Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:52.911820Z", "completed_at": "2025-06-03T19:49:52.911829Z"}], "thread_id": "Thread-4", "execution_time": 0.18400001525878906, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_expectations_expect_column_values_to_be_in_type_list_input_layer__lab_result_ingest_datetime__date__datetime__time__timestamp__timestamp_ntz__timestampntz__timestamp_ltz__timestampltz__timestamp_tz__timestamptz__timestamp_with_time_zone__timestamp_without_time_zone__datetime2__datetimeoffset.756b76afc4", "compiled": true, "compiled_code": "with relation_columns as (\n\n        \n        select\n            cast('LAB_RESULT_ID' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PERSON_ID' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PATIENT_ID' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('ENCOUNTER_ID' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('ACCESSION_NUMBER' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('SOURCE_CODE_TYPE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('SOURCE_CODE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('SOURCE_DESCRIPTION' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('SOURCE_COMPONENT' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('NORMALIZED_CODE_TYPE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('NORMALIZED_CODE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('NORMALIZED_DESCRIPTION' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('NORMALIZED_COMPONENT' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('STATUS' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('RESULT' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('RESULT_DATE' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('COLLECTION_DATE' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('SOURCE_UNITS' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('NORMALIZED_UNITS' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('SOURCE_REFERENCE_RANGE_LOW' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('SOURCE_REFERENCE_RANGE_HIGH' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('NORMALIZED_REFERENCE_RANGE_LOW' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('NORMALIZED_REFERENCE_RANGE_HIGH' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('SOURCE_ABNORMAL_FLAG' as TEXT) as relation_column,\n            cast('NUMBER' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('NORMALIZED_ABNORMAL_FLAG' as TEXT) as relation_column,\n            cast('NUMBER' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('SPECIMEN' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('ORDERING_PRACTITIONER_ID' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DATA_SOURCE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('FILE_NAME' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('INGEST_DATETIME' as TEXT) as relation_column,\n            cast('TIMESTAMP_NTZ' as TEXT) as relation_column_type\n        \n        \n    ),\n    test_data as (\n\n        select\n            *\n        from\n            relation_columns\n        where\n            relation_column = 'INGEST_DATETIME'\n            and\n            relation_column_type not in ('DATE', 'DATETIME', 'TIME', 'TIMESTAMP', 'TIMESTAMP_NTZ', 'TIMESTAMPNTZ', 'TIMESTAMP_LTZ', 'TIMESTAMPLTZ', 'TIMESTAMP_TZ', 'TIMESTAMPTZ', 'TIMESTAMP WITH TIME ZONE', 'TIMESTAMP WITHOUT TIME ZONE', 'DATETIME2', 'DATETIMEOFFSET')\n\n    )\n    select *\n    from test_data", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:52.713010Z", "completed_at": "2025-06-03T19:49:52.945110Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:52.945623Z", "completed_at": "2025-06-03T19:49:52.945632Z"}], "thread_id": "Thread-1", "execution_time": 0.23337602615356445, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_expectations_expect_column_to_exist_input_layer__lab_result_status.1f5d8edf6d", "compiled": true, "compiled_code": "\n\n    with test_data as (\n\n        select\n            cast('STATUS' as TEXT) as column_name,\n            13 as matching_column_index,\n            True as column_index_matches\n\n    )\n    select *\n    from test_data\n    where\n        not(matching_column_index >= 0 and column_index_matches)", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:52.948665Z", "completed_at": "2025-06-03T19:49:52.957599Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:52.965238Z", "completed_at": "2025-06-03T19:49:52.965248Z"}], "thread_id": "Thread-1", "execution_time": 0.017530202865600586, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.not_null_input_layer__lab_result_lab_result_id.3e2fa2a52d", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect lab_result_id\nfrom tuva.input_layer.input_layer__lab_result\nwhere lab_result_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:52.841546Z", "completed_at": "2025-06-03T19:49:52.974093Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:52.976337Z", "completed_at": "2025-06-03T19:49:52.976346Z"}], "thread_id": "Thread-2", "execution_time": 0.13564181327819824, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_expectations_expect_column_values_to_be_of_type_input_layer__lab_result_collection_date__date.bff531c79b", "compiled": true, "compiled_code": "with relation_columns as (\n\n        \n        select\n            cast('LAB_RESULT_ID' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PERSON_ID' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PATIENT_ID' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('ENCOUNTER_ID' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('ACCESSION_NUMBER' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('SOURCE_CODE_TYPE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('SOURCE_CODE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('SOURCE_DESCRIPTION' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('SOURCE_COMPONENT' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('NORMALIZED_CODE_TYPE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('NORMALIZED_CODE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('NORMALIZED_DESCRIPTION' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('NORMALIZED_COMPONENT' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('STATUS' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('RESULT' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('RESULT_DATE' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('COLLECTION_DATE' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('SOURCE_UNITS' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('NORMALIZED_UNITS' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('SOURCE_REFERENCE_RANGE_LOW' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('SOURCE_REFERENCE_RANGE_HIGH' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('NORMALIZED_REFERENCE_RANGE_LOW' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('NORMALIZED_REFERENCE_RANGE_HIGH' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('SOURCE_ABNORMAL_FLAG' as TEXT) as relation_column,\n            cast('NUMBER' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('NORMALIZED_ABNORMAL_FLAG' as TEXT) as relation_column,\n            cast('NUMBER' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('SPECIMEN' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('ORDERING_PRACTITIONER_ID' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DATA_SOURCE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('FILE_NAME' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('INGEST_DATETIME' as TEXT) as relation_column,\n            cast('TIMESTAMP_NTZ' as TEXT) as relation_column_type\n        \n        \n    ),\n    test_data as (\n\n        select\n            *\n        from\n            relation_columns\n        where\n            relation_column = 'COLLECTION_DATE'\n            and\n            relation_column_type not in ('DATE')\n\n    )\n    select *\n    from test_data", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:52.968316Z", "completed_at": "2025-06-03T19:49:52.983134Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:52.989412Z", "completed_at": "2025-06-03T19:49:52.989424Z"}], "thread_id": "Thread-1", "execution_time": 0.022433042526245117, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.not_null_input_layer__lab_result_person_id.e084c5ff2a", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect person_id\nfrom tuva.input_layer.input_layer__lab_result\nwhere person_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:52.977952Z", "completed_at": "2025-06-03T19:49:52.996850Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:53.000998Z", "completed_at": "2025-06-03T19:49:53.001047Z"}], "thread_id": "Thread-2", "execution_time": 0.024108171463012695, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.unique_input_layer__lab_result_lab_result_id.121b8d7c20", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    lab_result_id as unique_field,\n    count(*) as n_records\n\nfrom tuva.input_layer.input_layer__lab_result\nwhere lab_result_id is not null\ngroup by lab_result_id\nhaving count(*) > 1\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:52.991279Z", "completed_at": "2025-06-03T19:49:53.013956Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:53.014434Z", "completed_at": "2025-06-03T19:49:53.014443Z"}], "thread_id": "Thread-1", "execution_time": 0.023878097534179688, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.data_quality__primary_keys_location_location_id", "compiled": true, "compiled_code": "\n\nwith valid_conditions as (\n    select\n        *\n    from\n        tuva.data_quality.location_location_id\n    where\n        bucket_name = 'valid'\n)\n, uniqueness_check as (\n        select\n                field_value\n                , COUNT(*) as duplicate_count\n        from\n                valid_conditions\n        group by\n                field_value\n        having\n                COUNT(*) > 1\n)\n\n, random_sample as (\n    select\n        data_source\n        , source_date\n        , table_name\n        , drill_down_key\n        , drill_down_value\n        , field_name\n        , field_value\n        , bucket_name\n        , ROW_NUMBER() over (\norder by drill_down_key) as row_number_value\n    from\n        tuva.data_quality.location_location_id\n    where\n        bucket_name = 'valid'\n\n)\n\n, duplicates_summary as (\n    select\n        a.data_source\n        , a.source_date\n        , a.table_name\n        , a.drill_down_key\n        , a.drill_down_value\n        , a.field_name\n        , a.field_value\n        , a.bucket_name\n        , b.duplicate_count\n        , ROW_NUMBER() over (\norder by drill_down_key) as row_number_value\n    from\n        tuva.data_quality.location_location_id as a\n    inner join\n        uniqueness_check as b on a.field_value = b.field_value\n)\n\nselect\n    *\n    , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom\n    duplicates_summary\nwhere row_number_value <= 5\n\nunion all\n\nselect\n    *\n    , 0 as duplicate_count\n    , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom\n    random_sample\nwhere\n    row_number_value <= 5\n    and not exists (select 1 from duplicates_summary)", "relation_name": "tuva.data_quality.primary_keys_location_location_id", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:53.004036Z", "completed_at": "2025-06-03T19:49:53.016252Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:53.027443Z", "completed_at": "2025-06-03T19:49:53.027453Z"}], "thread_id": "Thread-2", "execution_time": 0.02455306053161621, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.core__stg_clinical_location", "compiled": true, "compiled_code": "\n\nselect\n    cast(location_id as TEXT) as location_id\n    , cast(npi as TEXT) as npi\n    , cast(name as TEXT) as name\n    , cast(facility_type as TEXT) as facility_type\n    , cast(parent_organization as TEXT) as parent_organization\n    , cast(address as TEXT) as address\n    , cast(city as TEXT) as city\n    , cast(state as TEXT) as state\n    , cast(zip_code as TEXT) as zip_code\n    , cast(latitude as float) as latitude\n    , cast(longitude as float) as longitude\n    , cast(data_source as TEXT) as data_source\n    , cast('2025-06-03 19:49:40.396647+00:00' as timestamp) as tuva_last_run\nfrom tuva.input_layer.input_layer__location", "relation_name": "tuva.core._stg_clinical_location", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:52.913368Z", "completed_at": "2025-06-03T19:49:53.050916Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:53.051357Z", "completed_at": "2025-06-03T19:49:53.051368Z"}], "thread_id": "Thread-4", "execution_time": 0.13873887062072754, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_expectations_expect_column_values_to_be_of_type_input_layer__lab_result_result_date__date.2cecd2c258", "compiled": true, "compiled_code": "with relation_columns as (\n\n        \n        select\n            cast('LAB_RESULT_ID' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PERSON_ID' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PATIENT_ID' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('ENCOUNTER_ID' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('ACCESSION_NUMBER' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('SOURCE_CODE_TYPE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('SOURCE_CODE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('SOURCE_DESCRIPTION' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('SOURCE_COMPONENT' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('NORMALIZED_CODE_TYPE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('NORMALIZED_CODE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('NORMALIZED_DESCRIPTION' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('NORMALIZED_COMPONENT' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('STATUS' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('RESULT' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('RESULT_DATE' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('COLLECTION_DATE' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('SOURCE_UNITS' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('NORMALIZED_UNITS' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('SOURCE_REFERENCE_RANGE_LOW' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('SOURCE_REFERENCE_RANGE_HIGH' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('NORMALIZED_REFERENCE_RANGE_LOW' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('NORMALIZED_REFERENCE_RANGE_HIGH' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('SOURCE_ABNORMAL_FLAG' as TEXT) as relation_column,\n            cast('NUMBER' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('NORMALIZED_ABNORMAL_FLAG' as TEXT) as relation_column,\n            cast('NUMBER' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('SPECIMEN' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('ORDERING_PRACTITIONER_ID' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DATA_SOURCE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('FILE_NAME' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('INGEST_DATETIME' as TEXT) as relation_column,\n            cast('TIMESTAMP_NTZ' as TEXT) as relation_column_type\n        \n        \n    ),\n    test_data as (\n\n        select\n            *\n        from\n            relation_columns\n        where\n            relation_column = 'RESULT_DATE'\n            and\n            relation_column_type not in ('DATE')\n\n    )\n    select *\n    from test_data", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:53.016519Z", "completed_at": "2025-06-03T19:49:53.174406Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:53.174703Z", "completed_at": "2025-06-03T19:49:53.174712Z"}], "thread_id": "Thread-1", "execution_time": 0.15933513641357422, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_expectations_expect_column_to_exist_input_layer__location_address.8b03728579", "compiled": true, "compiled_code": "\n\n    with test_data as (\n\n        select\n            cast('ADDRESS' as TEXT) as column_name,\n            5 as matching_column_index,\n            True as column_index_matches\n\n    )\n    select *\n    from test_data\n    where\n        not(matching_column_index >= 0 and column_index_matches)", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:53.029815Z", "completed_at": "2025-06-03T19:49:53.196404Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:53.197056Z", "completed_at": "2025-06-03T19:49:53.197063Z"}], "thread_id": "Thread-2", "execution_time": 0.1681971549987793, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_expectations_expect_column_to_exist_input_layer__location_city.b04d8b0e66", "compiled": true, "compiled_code": "\n\n    with test_data as (\n\n        select\n            cast('CITY' as TEXT) as column_name,\n            6 as matching_column_index,\n            True as column_index_matches\n\n    )\n    select *\n    from test_data\n    where\n        not(matching_column_index >= 0 and column_index_matches)", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:53.053021Z", "completed_at": "2025-06-03T19:49:53.196833Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:53.197937Z", "completed_at": "2025-06-03T19:49:53.197942Z"}], "thread_id": "Thread-4", "execution_time": 0.14569497108459473, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_expectations_expect_column_to_exist_input_layer__location_data_source.221273307d", "compiled": true, "compiled_code": "\n\n    with test_data as (\n\n        select\n            cast('DATA_SOURCE' as TEXT) as column_name,\n            11 as matching_column_index,\n            True as column_index_matches\n\n    )\n    select *\n    from test_data\n    where\n        not(matching_column_index >= 0 and column_index_matches)", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:53.176074Z", "completed_at": "2025-06-03T19:49:53.340124Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:53.340447Z", "completed_at": "2025-06-03T19:49:53.340462Z"}], "thread_id": "Thread-1", "execution_time": 0.1650090217590332, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_expectations_expect_column_to_exist_input_layer__location_facility_type.894dfdd82c", "compiled": true, "compiled_code": "\n\n    with test_data as (\n\n        select\n            cast('FACILITY_TYPE' as TEXT) as column_name,\n            3 as matching_column_index,\n            True as column_index_matches\n\n    )\n    select *\n    from test_data\n    where\n        not(matching_column_index >= 0 and column_index_matches)", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:53.200723Z", "completed_at": "2025-06-03T19:49:53.480294Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:53.480975Z", "completed_at": "2025-06-03T19:49:53.480984Z"}], "thread_id": "Thread-2", "execution_time": 0.2814610004425049, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_expectations_expect_column_to_exist_input_layer__location_latitude.78ffcee1c6", "compiled": true, "compiled_code": "\n\n    with test_data as (\n\n        select\n            cast('LATITUDE' as TEXT) as column_name,\n            9 as matching_column_index,\n            True as column_index_matches\n\n    )\n    select *\n    from test_data\n    where\n        not(matching_column_index >= 0 and column_index_matches)", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:53.341942Z", "completed_at": "2025-06-03T19:49:53.482735Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:53.483485Z", "completed_at": "2025-06-03T19:49:53.483492Z"}], "thread_id": "Thread-1", "execution_time": 0.14241409301757812, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_expectations_expect_column_to_exist_input_layer__location_longitude.0d5c49838a", "compiled": true, "compiled_code": "\n\n    with test_data as (\n\n        select\n            cast('LONGITUDE' as TEXT) as column_name,\n            10 as matching_column_index,\n            True as column_index_matches\n\n    )\n    select *\n    from test_data\n    where\n        not(matching_column_index >= 0 and column_index_matches)", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:53.210268Z", "completed_at": "2025-06-03T19:49:53.484018Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:53.496590Z", "completed_at": "2025-06-03T19:49:53.496597Z"}], "thread_id": "Thread-4", "execution_time": 0.29674816131591797, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_expectations_expect_column_to_exist_input_layer__location_location_id.b605e918de", "compiled": true, "compiled_code": "\n\n    with test_data as (\n\n        select\n            cast('LOCATION_ID' as TEXT) as column_name,\n            0 as matching_column_index,\n            True as column_index_matches\n\n    )\n    select *\n    from test_data\n    where\n        not(matching_column_index >= 0 and column_index_matches)", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:53.499377Z", "completed_at": "2025-06-03T19:49:53.626349Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:53.626803Z", "completed_at": "2025-06-03T19:49:53.626813Z"}], "thread_id": "Thread-1", "execution_time": 0.1295182704925537, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_expectations_expect_column_to_exist_input_layer__location_npi.20ab1de70f", "compiled": true, "compiled_code": "\n\n    with test_data as (\n\n        select\n            cast('NPI' as TEXT) as column_name,\n            1 as matching_column_index,\n            True as column_index_matches\n\n    )\n    select *\n    from test_data\n    where\n        not(matching_column_index >= 0 and column_index_matches)", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:53.484368Z", "completed_at": "2025-06-03T19:49:53.627876Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:53.628684Z", "completed_at": "2025-06-03T19:49:53.628690Z"}], "thread_id": "Thread-2", "execution_time": 0.14644384384155273, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_expectations_expect_column_to_exist_input_layer__location_name.c55aebfc93", "compiled": true, "compiled_code": "\n\n    with test_data as (\n\n        select\n            cast('NAME' as TEXT) as column_name,\n            2 as matching_column_index,\n            True as column_index_matches\n\n    )\n    select *\n    from test_data\n    where\n        not(matching_column_index >= 0 and column_index_matches)", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:53.509464Z", "completed_at": "2025-06-03T19:49:53.658979Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:53.659293Z", "completed_at": "2025-06-03T19:49:53.659300Z"}], "thread_id": "Thread-4", "execution_time": 0.1608121395111084, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_expectations_expect_column_to_exist_input_layer__location_parent_organization.1b7f77755c", "compiled": true, "compiled_code": "\n\n    with test_data as (\n\n        select\n            cast('PARENT_ORGANIZATION' as TEXT) as column_name,\n            4 as matching_column_index,\n            True as column_index_matches\n\n    )\n    select *\n    from test_data\n    where\n        not(matching_column_index >= 0 and column_index_matches)", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:53.660598Z", "completed_at": "2025-06-03T19:49:53.667791Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:53.668049Z", "completed_at": "2025-06-03T19:49:53.668054Z"}], "thread_id": "Thread-4", "execution_time": 0.008080005645751953, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.not_null_input_layer__location_location_id.5d3c30e26e", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect location_id\nfrom tuva.input_layer.input_layer__location\nwhere location_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:53.669186Z", "completed_at": "2025-06-03T19:49:53.674647Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:53.674872Z", "completed_at": "2025-06-03T19:49:53.674876Z"}], "thread_id": "Thread-4", "execution_time": 0.006217002868652344, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.unique_input_layer__location_location_id.7d1721b36e", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    location_id as unique_field,\n    count(*) as n_records\n\nfrom tuva.input_layer.input_layer__location\nwhere location_id is not null\ngroup by location_id\nhaving count(*) > 1\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:53.675916Z", "completed_at": "2025-06-03T19:49:53.681886Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:53.682113Z", "completed_at": "2025-06-03T19:49:53.682118Z"}], "thread_id": "Thread-4", "execution_time": 0.006696939468383789, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.data_quality__primary_keys_medication_medication_id", "compiled": true, "compiled_code": "\n\nwith valid_conditions as (\n    select\n        *\n    from\n        tuva.data_quality.medication_medication_id\n    where\n        bucket_name = 'valid'\n)\n, uniqueness_check as (\n        select\n                field_value\n                , COUNT(*) as duplicate_count\n        from\n                valid_conditions\n        group by\n                field_value\n        having\n                COUNT(*) > 1\n)\n\n, random_sample as (\n    select\n        data_source\n        , source_date\n        , table_name\n        , drill_down_key\n        , drill_down_value\n        , field_name\n        , field_value\n        , bucket_name\n        , ROW_NUMBER() over (\norder by drill_down_key) as row_number_value\n    from\n        tuva.data_quality.medication_medication_id\n    where\n        bucket_name = 'valid'\n)\n\n, duplicates_summary as (\n    select\n        a.data_source\n        , a.source_date\n        , a.table_name\n        , a.drill_down_key\n        , a.drill_down_value\n        , a.field_name\n        , a.field_value\n        , a.bucket_name\n        , b.duplicate_count\n        , ROW_NUMBER() over (\norder by drill_down_key) as row_number_value\n    from\n        tuva.data_quality.medication_medication_id as a\n    inner join\n        uniqueness_check as b on a.field_value = b.field_value\n)\n\nselect\n    *\n    , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom\n    duplicates_summary\nwhere row_number_value <= 5\n\nunion all\n\nselect\n    *\n    , 0 as duplicate_count\n    , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom\n    random_sample\nwhere\n    row_number_value <= 5\n    and not exists (select 1 from duplicates_summary)", "relation_name": "tuva.data_quality.primary_keys_medication_medication_id", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:53.683180Z", "completed_at": "2025-06-03T19:49:53.692812Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:53.693024Z", "completed_at": "2025-06-03T19:49:53.693029Z"}], "thread_id": "Thread-4", "execution_time": 0.010341882705688477, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.core__stg_clinical_medication", "compiled": true, "compiled_code": "\n\nselect\n    cast(medication_id as TEXT) as medication_id\n    , cast(person_id as TEXT) as person_id\n    , cast(patient_id as TEXT) as patient_id\n    , cast(encounter_id as TEXT) as encounter_id\n    , try_cast( dispensing_date as date ) as dispensing_date\n    , try_cast( prescribing_date as date ) as prescribing_date\n    , cast(source_code_type as TEXT) as source_code_type\n    , cast(source_code as TEXT) as source_code\n    , cast(source_description as TEXT) as source_description\n    , cast(ndc_code as TEXT) as ndc_code\n    , cast(ndc_description as TEXT) as ndc_description\n    , cast(rxnorm_code as TEXT) as rxnorm_code\n    , cast(rxnorm_description as TEXT) as rxnorm_description\n    , cast(atc_code as TEXT) as atc_code\n    , cast(atc_description as TEXT) as atc_description\n    , cast(route as TEXT) as route\n    , cast(strength as TEXT) as strength\n    , cast(quantity as integer) as quantity\n    , cast(quantity_unit as TEXT) as quantity_unit\n    , cast(days_supply as integer) as days_supply\n    , cast(practitioner_id as TEXT) as practitioner_id\n    , cast(data_source as TEXT) as data_source\n    , cast('2025-06-03 19:49:40.396647+00:00' as timestamp) as tuva_last_run\nfrom tuva.input_layer.input_layer__medication", "relation_name": "tuva.core._stg_clinical_medication", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:53.694080Z", "completed_at": "2025-06-03T19:49:53.699806Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:53.700026Z", "completed_at": "2025-06-03T19:49:53.700030Z"}], "thread_id": "Thread-4", "execution_time": 0.0064618587493896484, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.accepted_values_input_layer__medication_source_code_type__ndc__rxnorm.4bc2107225", "compiled": true, "compiled_code": "\n    \n    \n\nwith all_values as (\n\n    select\n        source_code_type as value_field,\n        count(*) as n_records\n\n    from tuva.input_layer.input_layer__medication\n    group by source_code_type\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    'ndc','rxnorm'\n)\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:53.644862Z", "completed_at": "2025-06-03T19:49:53.760652Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:53.761400Z", "completed_at": "2025-06-03T19:49:53.761408Z"}], "thread_id": "Thread-2", "execution_time": 0.11880898475646973, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_expectations_expect_column_to_exist_input_layer__location_zip_code.c760309596", "compiled": true, "compiled_code": "\n\n    with test_data as (\n\n        select\n            cast('ZIP_CODE' as TEXT) as column_name,\n            8 as matching_column_index,\n            True as column_index_matches\n\n    )\n    select *\n    from test_data\n    where\n        not(matching_column_index >= 0 and column_index_matches)", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:53.629975Z", "completed_at": "2025-06-03T19:49:53.777203Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:53.777483Z", "completed_at": "2025-06-03T19:49:53.777490Z"}], "thread_id": "Thread-1", "execution_time": 0.14929699897766113, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_expectations_expect_column_to_exist_input_layer__location_state.7979b2ea43", "compiled": true, "compiled_code": "\n\n    with test_data as (\n\n        select\n            cast('STATE' as TEXT) as column_name,\n            7 as matching_column_index,\n            True as column_index_matches\n\n    )\n    select *\n    from test_data\n    where\n        not(matching_column_index >= 0 and column_index_matches)", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:53.701027Z", "completed_at": "2025-06-03T19:49:53.819191Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:53.819490Z", "completed_at": "2025-06-03T19:49:53.819498Z"}], "thread_id": "Thread-4", "execution_time": 0.11896896362304688, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_expectations_expect_column_to_exist_input_layer__medication_atc_code.85f64669fe", "compiled": true, "compiled_code": "\n\n    with test_data as (\n\n        select\n            cast('ATC_CODE' as TEXT) as column_name,\n            13 as matching_column_index,\n            True as column_index_matches\n\n    )\n    select *\n    from test_data\n    where\n        not(matching_column_index >= 0 and column_index_matches)", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:53.779497Z", "completed_at": "2025-06-03T19:49:53.902089Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:53.902637Z", "completed_at": "2025-06-03T19:49:53.902645Z"}], "thread_id": "Thread-1", "execution_time": 0.12396597862243652, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_expectations_expect_column_to_exist_input_layer__medication_data_source.c002ccca63", "compiled": true, "compiled_code": "\n\n    with test_data as (\n\n        select\n            cast('DATA_SOURCE' as TEXT) as column_name,\n            21 as matching_column_index,\n            True as column_index_matches\n\n    )\n    select *\n    from test_data\n    where\n        not(matching_column_index >= 0 and column_index_matches)", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:53.765893Z", "completed_at": "2025-06-03T19:49:53.902378Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:53.903090Z", "completed_at": "2025-06-03T19:49:53.903095Z"}], "thread_id": "Thread-2", "execution_time": 0.14009881019592285, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_expectations_expect_column_to_exist_input_layer__medication_atc_description.14a7315ee8", "compiled": true, "compiled_code": "\n\n    with test_data as (\n\n        select\n            cast('ATC_DESCRIPTION' as TEXT) as column_name,\n            14 as matching_column_index,\n            True as column_index_matches\n\n    )\n    select *\n    from test_data\n    where\n        not(matching_column_index >= 0 and column_index_matches)", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:53.820876Z", "completed_at": "2025-06-03T19:49:53.933995Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:53.934366Z", "completed_at": "2025-06-03T19:49:53.934375Z"}], "thread_id": "Thread-4", "execution_time": 0.11416220664978027, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_expectations_expect_column_to_exist_input_layer__medication_days_supply.a33a0f50bf", "compiled": true, "compiled_code": "\n\n    with test_data as (\n\n        select\n            cast('DAYS_SUPPLY' as TEXT) as column_name,\n            19 as matching_column_index,\n            True as column_index_matches\n\n    )\n    select *\n    from test_data\n    where\n        not(matching_column_index >= 0 and column_index_matches)", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:53.917023Z", "completed_at": "2025-06-03T19:49:54.215526Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:54.216302Z", "completed_at": "2025-06-03T19:49:54.216312Z"}], "thread_id": "Thread-2", "execution_time": 0.3120081424713135, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_expectations_expect_column_to_exist_input_layer__medication_encounter_id.55f1a8049b", "compiled": true, "compiled_code": "\n\n    with test_data as (\n\n        select\n            cast('ENCOUNTER_ID' as TEXT) as column_name,\n            3 as matching_column_index,\n            True as column_index_matches\n\n    )\n    select *\n    from test_data\n    where\n        not(matching_column_index >= 0 and column_index_matches)", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:53.905211Z", "completed_at": "2025-06-03T19:49:54.215845Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:54.216950Z", "completed_at": "2025-06-03T19:49:54.216957Z"}], "thread_id": "Thread-1", "execution_time": 0.31296706199645996, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_expectations_expect_column_to_exist_input_layer__medication_dispensing_date.cfeb74cc06", "compiled": true, "compiled_code": "\n\n    with test_data as (\n\n        select\n            cast('DISPENSING_DATE' as TEXT) as column_name,\n            4 as matching_column_index,\n            True as column_index_matches\n\n    )\n    select *\n    from test_data\n    where\n        not(matching_column_index >= 0 and column_index_matches)", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:53.936199Z", "completed_at": "2025-06-03T19:49:54.618814Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:54.620667Z", "completed_at": "2025-06-03T19:49:54.620684Z"}], "thread_id": "Thread-4", "execution_time": 0.6856157779693604, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_expectations_expect_column_to_exist_input_layer__medication_file_name.31d2691b96", "compiled": true, "compiled_code": "\n\n    with test_data as (\n\n        select\n            cast('FILE_NAME' as TEXT) as column_name,\n            22 as matching_column_index,\n            True as column_index_matches\n\n    )\n    select *\n    from test_data\n    where\n        not(matching_column_index >= 0 and column_index_matches)", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:54.220282Z", "completed_at": "2025-06-03T19:49:54.621520Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:54.624477Z", "completed_at": "2025-06-03T19:49:54.624487Z"}], "thread_id": "Thread-2", "execution_time": 0.4058208465576172, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_expectations_expect_column_to_exist_input_layer__medication_ingest_datetime.847ff0c8ac", "compiled": true, "compiled_code": "\n\n    with test_data as (\n\n        select\n            cast('INGEST_DATETIME' as TEXT) as column_name,\n            23 as matching_column_index,\n            True as column_index_matches\n\n    )\n    select *\n    from test_data\n    where\n        not(matching_column_index >= 0 and column_index_matches)", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:54.230773Z", "completed_at": "2025-06-03T19:49:54.625220Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:54.627168Z", "completed_at": "2025-06-03T19:49:54.627176Z"}], "thread_id": "Thread-1", "execution_time": 0.40812110900878906, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_expectations_expect_column_to_exist_input_layer__medication_medication_id.25dadcaebc", "compiled": true, "compiled_code": "\n\n    with test_data as (\n\n        select\n            cast('MEDICATION_ID' as TEXT) as column_name,\n            0 as matching_column_index,\n            True as column_index_matches\n\n    )\n    select *\n    from test_data\n    where\n        not(matching_column_index >= 0 and column_index_matches)", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:54.660371Z", "completed_at": "2025-06-03T19:49:54.781441Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:54.782195Z", "completed_at": "2025-06-03T19:49:54.782205Z"}], "thread_id": "Thread-1", "execution_time": 0.1358799934387207, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_expectations_expect_column_to_exist_input_layer__medication_patient_id.7833ec196d", "compiled": true, "compiled_code": "\n\n    with test_data as (\n\n        select\n            cast('PATIENT_ID' as TEXT) as column_name,\n            2 as matching_column_index,\n            True as column_index_matches\n\n    )\n    select *\n    from test_data\n    where\n        not(matching_column_index >= 0 and column_index_matches)", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:54.646995Z", "completed_at": "2025-06-03T19:49:54.783280Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:54.784324Z", "completed_at": "2025-06-03T19:49:54.784331Z"}], "thread_id": "Thread-2", "execution_time": 0.15549588203430176, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_expectations_expect_column_to_exist_input_layer__medication_ndc_description.66d5e2154a", "compiled": true, "compiled_code": "\n\n    with test_data as (\n\n        select\n            cast('NDC_DESCRIPTION' as TEXT) as column_name,\n            10 as matching_column_index,\n            True as column_index_matches\n\n    )\n    select *\n    from test_data\n    where\n        not(matching_column_index >= 0 and column_index_matches)", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:54.630495Z", "completed_at": "2025-06-03T19:49:54.783981Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:54.785244Z", "completed_at": "2025-06-03T19:49:54.785250Z"}], "thread_id": "Thread-4", "execution_time": 0.1591811180114746, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_expectations_expect_column_to_exist_input_layer__medication_ndc_code.5fd4047ea9", "compiled": true, "compiled_code": "\n\n    with test_data as (\n\n        select\n            cast('NDC_CODE' as TEXT) as column_name,\n            9 as matching_column_index,\n            True as column_index_matches\n\n    )\n    select *\n    from test_data\n    where\n        not(matching_column_index >= 0 and column_index_matches)", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:54.786187Z", "completed_at": "2025-06-03T19:49:54.965941Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:54.970084Z", "completed_at": "2025-06-03T19:49:54.970165Z"}], "thread_id": "Thread-1", "execution_time": 0.18828201293945312, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_expectations_expect_column_to_exist_input_layer__medication_person_id.9339fcafa0", "compiled": true, "compiled_code": "\n\n    with test_data as (\n\n        select\n            cast('PERSON_ID' as TEXT) as column_name,\n            1 as matching_column_index,\n            True as column_index_matches\n\n    )\n    select *\n    from test_data\n    where\n        not(matching_column_index >= 0 and column_index_matches)", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:54.800783Z", "completed_at": "2025-06-03T19:49:54.952355Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:54.989392Z", "completed_at": "2025-06-03T19:49:54.989522Z"}], "thread_id": "Thread-2", "execution_time": 0.19076895713806152, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_expectations_expect_column_to_exist_input_layer__medication_practitioner_id.b4d6c23be7", "compiled": true, "compiled_code": "\n\n    with test_data as (\n\n        select\n            cast('PRACTITIONER_ID' as TEXT) as column_name,\n            20 as matching_column_index,\n            True as column_index_matches\n\n    )\n    select *\n    from test_data\n    where\n        not(matching_column_index >= 0 and column_index_matches)", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:54.807098Z", "completed_at": "2025-06-03T19:49:55.001873Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:55.021659Z", "completed_at": "2025-06-03T19:49:55.021694Z"}], "thread_id": "Thread-4", "execution_time": 0.22262787818908691, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_expectations_expect_column_to_exist_input_layer__medication_prescribing_date.5066cb3675", "compiled": true, "compiled_code": "\n\n    with test_data as (\n\n        select\n            cast('PRESCRIBING_DATE' as TEXT) as column_name,\n            5 as matching_column_index,\n            True as column_index_matches\n\n    )\n    select *\n    from test_data\n    where\n        not(matching_column_index >= 0 and column_index_matches)", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:55.004312Z", "completed_at": "2025-06-03T19:49:55.250817Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:55.251071Z", "completed_at": "2025-06-03T19:49:55.251078Z"}], "thread_id": "Thread-1", "execution_time": 0.2693979740142822, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_expectations_expect_column_to_exist_input_layer__medication_quantity.9c8f2bfd79", "compiled": true, "compiled_code": "\n\n    with test_data as (\n\n        select\n            cast('QUANTITY' as TEXT) as column_name,\n            17 as matching_column_index,\n            True as column_index_matches\n\n    )\n    select *\n    from test_data\n    where\n        not(matching_column_index >= 0 and column_index_matches)", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:55.127891Z", "completed_at": "2025-06-03T19:49:55.271024Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:55.271606Z", "completed_at": "2025-06-03T19:49:55.271615Z"}], "thread_id": "Thread-2", "execution_time": 0.21948695182800293, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_expectations_expect_column_to_exist_input_layer__medication_quantity_unit.c5be9594c8", "compiled": true, "compiled_code": "\n\n    with test_data as (\n\n        select\n            cast('QUANTITY_UNIT' as TEXT) as column_name,\n            18 as matching_column_index,\n            True as column_index_matches\n\n    )\n    select *\n    from test_data\n    where\n        not(matching_column_index >= 0 and column_index_matches)", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:55.140827Z", "completed_at": "2025-06-03T19:49:55.271335Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:55.272168Z", "completed_at": "2025-06-03T19:49:55.272173Z"}], "thread_id": "Thread-4", "execution_time": 0.15964269638061523, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_expectations_expect_column_to_exist_input_layer__medication_route.f47d727f00", "compiled": true, "compiled_code": "\n\n    with test_data as (\n\n        select\n            cast('ROUTE' as TEXT) as column_name,\n            15 as matching_column_index,\n            True as column_index_matches\n\n    )\n    select *\n    from test_data\n    where\n        not(matching_column_index >= 0 and column_index_matches)", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:55.252298Z", "completed_at": "2025-06-03T19:49:55.391933Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:55.392439Z", "completed_at": "2025-06-03T19:49:55.392447Z"}], "thread_id": "Thread-1", "execution_time": 0.14080071449279785, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_expectations_expect_column_to_exist_input_layer__medication_rxnorm_code.ef785844b8", "compiled": true, "compiled_code": "\n\n    with test_data as (\n\n        select\n            cast('RXNORM_CODE' as TEXT) as column_name,\n            11 as matching_column_index,\n            True as column_index_matches\n\n    )\n    select *\n    from test_data\n    where\n        not(matching_column_index >= 0 and column_index_matches)", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:55.285080Z", "completed_at": "2025-06-03T19:49:55.559285Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:55.560025Z", "completed_at": "2025-06-03T19:49:55.560033Z"}], "thread_id": "Thread-4", "execution_time": 0.28667330741882324, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_expectations_expect_column_to_exist_input_layer__medication_source_code.23f370df31", "compiled": true, "compiled_code": "\n\n    with test_data as (\n\n        select\n            cast('SOURCE_CODE' as TEXT) as column_name,\n            7 as matching_column_index,\n            True as column_index_matches\n\n    )\n    select *\n    from test_data\n    where\n        not(matching_column_index >= 0 and column_index_matches)", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:55.274111Z", "completed_at": "2025-06-03T19:49:55.559561Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:55.560481Z", "completed_at": "2025-06-03T19:49:55.560486Z"}], "thread_id": "Thread-2", "execution_time": 0.2873871326446533, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_expectations_expect_column_to_exist_input_layer__medication_rxnorm_description.f43b6bfe19", "compiled": true, "compiled_code": "\n\n    with test_data as (\n\n        select\n            cast('RXNORM_DESCRIPTION' as TEXT) as column_name,\n            12 as matching_column_index,\n            True as column_index_matches\n\n    )\n    select *\n    from test_data\n    where\n        not(matching_column_index >= 0 and column_index_matches)", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:55.562785Z", "completed_at": "2025-06-03T19:49:55.798697Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:55.800049Z", "completed_at": "2025-06-03T19:49:55.800061Z"}], "thread_id": "Thread-4", "execution_time": 0.23873305320739746, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_expectations_expect_column_to_exist_input_layer__medication_source_description.1af4fa04b6", "compiled": true, "compiled_code": "\n\n    with test_data as (\n\n        select\n            cast('SOURCE_DESCRIPTION' as TEXT) as column_name,\n            8 as matching_column_index,\n            True as column_index_matches\n\n    )\n    select *\n    from test_data\n    where\n        not(matching_column_index >= 0 and column_index_matches)", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:55.393645Z", "completed_at": "2025-06-03T19:49:55.799068Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:55.801248Z", "completed_at": "2025-06-03T19:49:55.801256Z"}], "thread_id": "Thread-1", "execution_time": 0.40816807746887207, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_expectations_expect_column_to_exist_input_layer__medication_source_code_type.ecc150313a", "compiled": true, "compiled_code": "\n\n    with test_data as (\n\n        select\n            cast('SOURCE_CODE_TYPE' as TEXT) as column_name,\n            6 as matching_column_index,\n            True as column_index_matches\n\n    )\n    select *\n    from test_data\n    where\n        not(matching_column_index >= 0 and column_index_matches)", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:55.572390Z", "completed_at": "2025-06-03T19:49:55.930862Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:55.938853Z", "completed_at": "2025-06-03T19:49:55.938870Z"}], "thread_id": "Thread-2", "execution_time": 0.3772149085998535, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_expectations_expect_column_to_exist_input_layer__medication_strength.242e971a28", "compiled": true, "compiled_code": "\n\n    with test_data as (\n\n        select\n            cast('STRENGTH' as TEXT) as column_name,\n            16 as matching_column_index,\n            True as column_index_matches\n\n    )\n    select *\n    from test_data\n    where\n        not(matching_column_index >= 0 and column_index_matches)", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:55.815873Z", "completed_at": "2025-06-03T19:49:56.002163Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:56.002799Z", "completed_at": "2025-06-03T19:49:56.002808Z"}], "thread_id": "Thread-1", "execution_time": 0.19834184646606445, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_expectations_expect_column_values_to_be_of_type_input_layer__medication_dispensing_date__date.049eea376f", "compiled": true, "compiled_code": "with relation_columns as (\n\n        \n        select\n            cast('MEDICATION_ID' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PERSON_ID' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PATIENT_ID' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('ENCOUNTER_ID' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DISPENSING_DATE' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PRESCRIBING_DATE' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('SOURCE_CODE_TYPE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('SOURCE_CODE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('SOURCE_DESCRIPTION' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('NDC_CODE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('NDC_DESCRIPTION' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('RXNORM_CODE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('RXNORM_DESCRIPTION' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('ATC_CODE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('ATC_DESCRIPTION' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('ROUTE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('STRENGTH' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('QUANTITY' as TEXT) as relation_column,\n            cast('NUMBER' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('QUANTITY_UNIT' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DAYS_SUPPLY' as TEXT) as relation_column,\n            cast('NUMBER' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PRACTITIONER_ID' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DATA_SOURCE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('FILE_NAME' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('INGEST_DATETIME' as TEXT) as relation_column,\n            cast('TIMESTAMP_NTZ' as TEXT) as relation_column_type\n        \n        \n    ),\n    test_data as (\n\n        select\n            *\n        from\n            relation_columns\n        where\n            relation_column = 'DISPENSING_DATE'\n            and\n            relation_column_type not in ('DATE')\n\n    )\n    select *\n    from test_data", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:55.805654Z", "completed_at": "2025-06-03T19:49:56.002539Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:56.003348Z", "completed_at": "2025-06-03T19:49:56.003353Z"}], "thread_id": "Thread-4", "execution_time": 0.19961333274841309, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_expectations_expect_column_values_to_be_in_type_list_input_layer__medication_ingest_datetime__date__datetime__time__timestamp__timestamp_ntz__timestampntz__timestamp_ltz__timestampltz__timestamp_tz__timestamptz__timestamp_with_time_zone__timestamp_without_time_zone__datetime2__datetimeoffset.90edb66359", "compiled": true, "compiled_code": "with relation_columns as (\n\n        \n        select\n            cast('MEDICATION_ID' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PERSON_ID' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PATIENT_ID' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('ENCOUNTER_ID' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DISPENSING_DATE' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PRESCRIBING_DATE' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('SOURCE_CODE_TYPE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('SOURCE_CODE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('SOURCE_DESCRIPTION' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('NDC_CODE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('NDC_DESCRIPTION' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('RXNORM_CODE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('RXNORM_DESCRIPTION' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('ATC_CODE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('ATC_DESCRIPTION' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('ROUTE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('STRENGTH' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('QUANTITY' as TEXT) as relation_column,\n            cast('NUMBER' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('QUANTITY_UNIT' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DAYS_SUPPLY' as TEXT) as relation_column,\n            cast('NUMBER' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PRACTITIONER_ID' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DATA_SOURCE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('FILE_NAME' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('INGEST_DATETIME' as TEXT) as relation_column,\n            cast('TIMESTAMP_NTZ' as TEXT) as relation_column_type\n        \n        \n    ),\n    test_data as (\n\n        select\n            *\n        from\n            relation_columns\n        where\n            relation_column = 'INGEST_DATETIME'\n            and\n            relation_column_type not in ('DATE', 'DATETIME', 'TIME', 'TIMESTAMP', 'TIMESTAMP_NTZ', 'TIMESTAMPNTZ', 'TIMESTAMP_LTZ', 'TIMESTAMPLTZ', 'TIMESTAMP_TZ', 'TIMESTAMPTZ', 'TIMESTAMP WITH TIME ZONE', 'TIMESTAMP WITHOUT TIME ZONE', 'DATETIME2', 'DATETIMEOFFSET')\n\n    )\n    select *\n    from test_data", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:56.005740Z", "completed_at": "2025-06-03T19:49:56.017659Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:56.017919Z", "completed_at": "2025-06-03T19:49:56.017926Z"}], "thread_id": "Thread-1", "execution_time": 0.013334035873413086, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.not_null_input_layer__medication_days_supply.a27adc85e2", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect days_supply\nfrom tuva.input_layer.input_layer__medication\nwhere days_supply is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:56.011193Z", "completed_at": "2025-06-03T19:49:56.018672Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:56.019177Z", "completed_at": "2025-06-03T19:49:56.019181Z"}], "thread_id": "Thread-4", "execution_time": 0.014239072799682617, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.not_null_input_layer__medication_medication_id.2d98cc31ac", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect medication_id\nfrom tuva.input_layer.input_layer__medication\nwhere medication_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:56.020092Z", "completed_at": "2025-06-03T19:49:56.031634Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:56.031883Z", "completed_at": "2025-06-03T19:49:56.031889Z"}], "thread_id": "Thread-1", "execution_time": 0.013042211532592773, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.not_null_input_layer__medication_ndc_code.c457d20713", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect ndc_code\nfrom tuva.input_layer.input_layer__medication\nwhere ndc_code is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:56.025852Z", "completed_at": "2025-06-03T19:49:56.038394Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:56.038650Z", "completed_at": "2025-06-03T19:49:56.038655Z"}], "thread_id": "Thread-4", "execution_time": 0.013458728790283203, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.not_null_input_layer__medication_person_id.4c09ab10c1", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect person_id\nfrom tuva.input_layer.input_layer__medication\nwhere person_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:56.033121Z", "completed_at": "2025-06-03T19:49:56.039547Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:56.039989Z", "completed_at": "2025-06-03T19:49:56.039993Z"}], "thread_id": "Thread-1", "execution_time": 0.0075151920318603516, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.unique_input_layer__medication_medication_id.d7793c3e33", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    medication_id as unique_field,\n    count(*) as n_records\n\nfrom tuva.input_layer.input_layer__medication\nwhere medication_id is not null\ngroup by medication_id\nhaving count(*) > 1\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:56.040342Z", "completed_at": "2025-06-03T19:49:56.057039Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:56.057349Z", "completed_at": "2025-06-03T19:49:56.057355Z"}], "thread_id": "Thread-4", "execution_time": 0.018105030059814453, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.data_quality__primary_keys_observation_observation_id", "compiled": true, "compiled_code": "\n\nwith valid_conditions as (\n    select\n        *\n    from\n        tuva.data_quality.observation_observation_id\n    where\n        bucket_name = 'valid'\n)\n, uniqueness_check as (\n        select\n                field_value\n                , COUNT(*) as duplicate_count\n        from\n                valid_conditions\n        group by\n                field_value\n        having\n                COUNT(*) > 1\n)\n\n, random_sample as (\n    select\n        data_source\n        , source_date\n        , table_name\n        , drill_down_key\n        , drill_down_value\n        , field_name\n        , field_value\n        , bucket_name\n        , ROW_NUMBER() over (\norder by drill_down_key) as row_number_value\n    from\n        tuva.data_quality.observation_observation_id\n    where\n        bucket_name = 'valid'\n)\n\n, duplicates_summary as (\n    select\n        a.data_source\n        , a.source_date\n        , a.table_name\n        , a.drill_down_key\n        , a.drill_down_value\n        , a.field_name\n        , a.field_value\n        , a.bucket_name\n        , b.duplicate_count\n        , ROW_NUMBER() over (\norder by drill_down_key) as row_number_value\n    from\n        tuva.data_quality.observation_observation_id as a\n    inner join\n        uniqueness_check as b on a.field_value = b.field_value\n)\n\nselect\n    *\n    , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom\n    duplicates_summary\nwhere row_number_value <= 5\n\nunion all\n\nselect\n    *\n    , 0 as duplicate_count\n    , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom\n    random_sample\nwhere\n    row_number_value <= 5\n    and not exists (select 1 from duplicates_summary)", "relation_name": "tuva.data_quality.primary_keys_observation_observation_id", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:56.047880Z", "completed_at": "2025-06-03T19:49:56.058605Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:56.065841Z", "completed_at": "2025-06-03T19:49:56.065849Z"}], "thread_id": "Thread-1", "execution_time": 0.018556833267211914, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.core__stg_clinical_observation", "compiled": true, "compiled_code": "\n\n\nselect\n    cast(observation_id as TEXT) as observation_id\n    , cast(person_id as TEXT) as person_id\n    , cast(patient_id as TEXT) as patient_id\n    , cast(encounter_id as TEXT) as encounter_id\n    , cast(panel_id as TEXT) as panel_id\n    , try_cast( observation_date as date ) as observation_date\n    , cast(observation_type as TEXT) as observation_type\n    , cast(source_code_type as TEXT) as source_code_type\n    , cast(source_code as TEXT) as source_code\n    , cast(source_description as TEXT) as source_description\n    , cast(normalized_code_type as TEXT) as normalized_code_type\n    , cast(normalized_code as TEXT) as normalized_code\n    , cast(normalized_description as TEXT) as normalized_description\n    , cast(result as TEXT) as result\n    , cast(source_units as TEXT) as source_units\n    , cast(normalized_units as TEXT) as normalized_units\n    , cast(source_reference_range_low as TEXT) as source_reference_range_low\n    , cast(source_reference_range_high as TEXT) as source_reference_range_high\n    , cast(normalized_reference_range_low as TEXT) as normalized_reference_range_low\n    , cast(normalized_reference_range_high as TEXT) as normalized_reference_range_high\n    , cast(data_source as TEXT) as data_source\n    , cast('2025-06-03 19:49:40.396647+00:00' as timestamp) as tuva_last_run\nfrom tuva.input_layer.input_layer__observation", "relation_name": "tuva.core._stg_clinical_observation", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:56.058793Z", "completed_at": "2025-06-03T19:49:56.075694Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:56.076272Z", "completed_at": "2025-06-03T19:49:56.076279Z"}], "thread_id": "Thread-4", "execution_time": 0.018265962600708008, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.accepted_values_input_layer__observation_source_code_type__icd_10_cm__icd_9_cm__snomed_ct__hcpcs__icd_10_pcs__icd_9_pcs__loinc.c800d9c96b", "compiled": true, "compiled_code": "\n    \n    \n\nwith all_values as (\n\n    select\n        source_code_type as value_field,\n        count(*) as n_records\n\n    from tuva.input_layer.input_layer__observation\n    group by source_code_type\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    'icd-10-cm','icd-9-cm','snomed-ct','hcpcs','icd-10-pcs','icd-9-pcs','loinc'\n)\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:55.953342Z", "completed_at": "2025-06-03T19:49:56.115649Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:56.116003Z", "completed_at": "2025-06-03T19:49:56.116010Z"}], "thread_id": "Thread-2", "execution_time": 0.17097711563110352, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_expectations_expect_column_values_to_be_of_type_input_layer__medication_prescribing_date__date.5c38624ad0", "compiled": true, "compiled_code": "with relation_columns as (\n\n        \n        select\n            cast('MEDICATION_ID' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PERSON_ID' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PATIENT_ID' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('ENCOUNTER_ID' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DISPENSING_DATE' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PRESCRIBING_DATE' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('SOURCE_CODE_TYPE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('SOURCE_CODE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('SOURCE_DESCRIPTION' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('NDC_CODE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('NDC_DESCRIPTION' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('RXNORM_CODE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('RXNORM_DESCRIPTION' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('ATC_CODE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('ATC_DESCRIPTION' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('ROUTE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('STRENGTH' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('QUANTITY' as TEXT) as relation_column,\n            cast('NUMBER' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('QUANTITY_UNIT' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DAYS_SUPPLY' as TEXT) as relation_column,\n            cast('NUMBER' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PRACTITIONER_ID' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DATA_SOURCE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('FILE_NAME' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('INGEST_DATETIME' as TEXT) as relation_column,\n            cast('TIMESTAMP_NTZ' as TEXT) as relation_column_type\n        \n        \n    ),\n    test_data as (\n\n        select\n            *\n        from\n            relation_columns\n        where\n            relation_column = 'PRESCRIBING_DATE'\n            and\n            relation_column_type not in ('DATE')\n\n    )\n    select *\n    from test_data", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:56.077695Z", "completed_at": "2025-06-03T19:49:56.198239Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:56.198624Z", "completed_at": "2025-06-03T19:49:56.198635Z"}], "thread_id": "Thread-4", "execution_time": 0.12151503562927246, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_expectations_expect_column_to_exist_input_layer__observation_encounter_id.d2aedbd349", "compiled": true, "compiled_code": "\n\n    with test_data as (\n\n        select\n            cast('ENCOUNTER_ID' as TEXT) as column_name,\n            3 as matching_column_index,\n            True as column_index_matches\n\n    )\n    select *\n    from test_data\n    where\n        not(matching_column_index >= 0 and column_index_matches)", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:56.117411Z", "completed_at": "2025-06-03T19:49:56.224441Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:56.224802Z", "completed_at": "2025-06-03T19:49:56.224809Z"}], "thread_id": "Thread-2", "execution_time": 0.10802316665649414, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_expectations_expect_column_to_exist_input_layer__observation_file_name.3992fe983c", "compiled": true, "compiled_code": "\n\n    with test_data as (\n\n        select\n            cast('FILE_NAME' as TEXT) as column_name,\n            21 as matching_column_index,\n            True as column_index_matches\n\n    )\n    select *\n    from test_data\n    where\n        not(matching_column_index >= 0 and column_index_matches)", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:56.067316Z", "completed_at": "2025-06-03T19:49:56.282820Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:56.283282Z", "completed_at": "2025-06-03T19:49:56.283291Z"}], "thread_id": "Thread-1", "execution_time": 0.21665000915527344, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_expectations_expect_column_to_exist_input_layer__observation_data_source.586e7bb192", "compiled": true, "compiled_code": "\n\n    with test_data as (\n\n        select\n            cast('DATA_SOURCE' as TEXT) as column_name,\n            20 as matching_column_index,\n            True as column_index_matches\n\n    )\n    select *\n    from test_data\n    where\n        not(matching_column_index >= 0 and column_index_matches)", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:56.200596Z", "completed_at": "2025-06-03T19:49:56.404898Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:56.405370Z", "completed_at": "2025-06-03T19:49:56.405380Z"}], "thread_id": "Thread-4", "execution_time": 0.20590496063232422, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_expectations_expect_column_to_exist_input_layer__observation_ingest_datetime.c8754f2274", "compiled": true, "compiled_code": "\n\n    with test_data as (\n\n        select\n            cast('INGEST_DATETIME' as TEXT) as column_name,\n            22 as matching_column_index,\n            True as column_index_matches\n\n    )\n    select *\n    from test_data\n    where\n        not(matching_column_index >= 0 and column_index_matches)", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:56.284860Z", "completed_at": "2025-06-03T19:49:56.525992Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:56.526637Z", "completed_at": "2025-06-03T19:49:56.526646Z"}], "thread_id": "Thread-1", "execution_time": 0.24246716499328613, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_expectations_expect_column_to_exist_input_layer__observation_normalized_code_type.9f0da237ce", "compiled": true, "compiled_code": "\n\n    with test_data as (\n\n        select\n            cast('NORMALIZED_CODE_TYPE' as TEXT) as column_name,\n            10 as matching_column_index,\n            True as column_index_matches\n\n    )\n    select *\n    from test_data\n    where\n        not(matching_column_index >= 0 and column_index_matches)", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:56.226098Z", "completed_at": "2025-06-03T19:49:56.537684Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:56.537981Z", "completed_at": "2025-06-03T19:49:56.537987Z"}], "thread_id": "Thread-2", "execution_time": 0.31247997283935547, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_expectations_expect_column_to_exist_input_layer__observation_normalized_code.343bed6f97", "compiled": true, "compiled_code": "\n\n    with test_data as (\n\n        select\n            cast('NORMALIZED_CODE' as TEXT) as column_name,\n            11 as matching_column_index,\n            True as column_index_matches\n\n    )\n    select *\n    from test_data\n    where\n        not(matching_column_index >= 0 and column_index_matches)", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:56.539026Z", "completed_at": "2025-06-03T19:49:56.697648Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:56.698101Z", "completed_at": "2025-06-03T19:49:56.698112Z"}], "thread_id": "Thread-2", "execution_time": 0.15962815284729004, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_expectations_expect_column_to_exist_input_layer__observation_normalized_reference_range_low.8097139ce6", "compiled": true, "compiled_code": "\n\n    with test_data as (\n\n        select\n            cast('NORMALIZED_REFERENCE_RANGE_LOW' as TEXT) as column_name,\n            18 as matching_column_index,\n            True as column_index_matches\n\n    )\n    select *\n    from test_data\n    where\n        not(matching_column_index >= 0 and column_index_matches)", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:56.407156Z", "completed_at": "2025-06-03T19:49:56.698769Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:56.700328Z", "completed_at": "2025-06-03T19:49:56.700335Z"}], "thread_id": "Thread-4", "execution_time": 0.2939939498901367, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_expectations_expect_column_to_exist_input_layer__observation_normalized_description.f9dc79dbed", "compiled": true, "compiled_code": "\n\n    with test_data as (\n\n        select\n            cast('NORMALIZED_DESCRIPTION' as TEXT) as column_name,\n            12 as matching_column_index,\n            True as column_index_matches\n\n    )\n    select *\n    from test_data\n    where\n        not(matching_column_index >= 0 and column_index_matches)", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:56.527907Z", "completed_at": "2025-06-03T19:49:56.699715Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:56.701743Z", "completed_at": "2025-06-03T19:49:56.701751Z"}], "thread_id": "Thread-1", "execution_time": 0.17450690269470215, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_expectations_expect_column_to_exist_input_layer__observation_normalized_reference_range_high.53f010b8a0", "compiled": true, "compiled_code": "\n\n    with test_data as (\n\n        select\n            cast('NORMALIZED_REFERENCE_RANGE_HIGH' as TEXT) as column_name,\n            19 as matching_column_index,\n            True as column_index_matches\n\n    )\n    select *\n    from test_data\n    where\n        not(matching_column_index >= 0 and column_index_matches)", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:56.729178Z", "completed_at": "2025-06-03T19:49:56.845288Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:56.845653Z", "completed_at": "2025-06-03T19:49:56.845662Z"}], "thread_id": "Thread-1", "execution_time": 0.12879109382629395, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_expectations_expect_column_to_exist_input_layer__observation_observation_id.efd371d929", "compiled": true, "compiled_code": "\n\n    with test_data as (\n\n        select\n            cast('OBSERVATION_ID' as TEXT) as column_name,\n            0 as matching_column_index,\n            True as column_index_matches\n\n    )\n    select *\n    from test_data\n    where\n        not(matching_column_index >= 0 and column_index_matches)", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:56.718255Z", "completed_at": "2025-06-03T19:49:56.846226Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:56.847114Z", "completed_at": "2025-06-03T19:49:56.847120Z"}], "thread_id": "Thread-4", "execution_time": 0.14358806610107422, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_expectations_expect_column_to_exist_input_layer__observation_observation_date.30713333be", "compiled": true, "compiled_code": "\n\n    with test_data as (\n\n        select\n            cast('OBSERVATION_DATE' as TEXT) as column_name,\n            5 as matching_column_index,\n            True as column_index_matches\n\n    )\n    select *\n    from test_data\n    where\n        not(matching_column_index >= 0 and column_index_matches)", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:56.703989Z", "completed_at": "2025-06-03T19:49:56.871176Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:56.875907Z", "completed_at": "2025-06-03T19:49:56.875915Z"}], "thread_id": "Thread-2", "execution_time": 0.17482614517211914, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_expectations_expect_column_to_exist_input_layer__observation_normalized_units.ca60a861d8", "compiled": true, "compiled_code": "\n\n    with test_data as (\n\n        select\n            cast('NORMALIZED_UNITS' as TEXT) as column_name,\n            15 as matching_column_index,\n            True as column_index_matches\n\n    )\n    select *\n    from test_data\n    where\n        not(matching_column_index >= 0 and column_index_matches)", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:56.878574Z", "completed_at": "2025-06-03T19:49:56.986459Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:56.990075Z", "completed_at": "2025-06-03T19:49:56.990085Z"}], "thread_id": "Thread-2", "execution_time": 0.11216497421264648, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_expectations_expect_column_to_exist_input_layer__observation_patient_id.a8754fc3f8", "compiled": true, "compiled_code": "\n\n    with test_data as (\n\n        select\n            cast('PATIENT_ID' as TEXT) as column_name,\n            2 as matching_column_index,\n            True as column_index_matches\n\n    )\n    select *\n    from test_data\n    where\n        not(matching_column_index >= 0 and column_index_matches)", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:56.865544Z", "completed_at": "2025-06-03T19:49:56.990833Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:56.991727Z", "completed_at": "2025-06-03T19:49:56.991733Z"}], "thread_id": "Thread-4", "execution_time": 0.1387031078338623, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_expectations_expect_column_to_exist_input_layer__observation_panel_id.f0f1d33334", "compiled": true, "compiled_code": "\n\n    with test_data as (\n\n        select\n            cast('PANEL_ID' as TEXT) as column_name,\n            4 as matching_column_index,\n            True as column_index_matches\n\n    )\n    select *\n    from test_data\n    where\n        not(matching_column_index >= 0 and column_index_matches)", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:56.853498Z", "completed_at": "2025-06-03T19:49:56.992424Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:56.993654Z", "completed_at": "2025-06-03T19:49:56.993660Z"}], "thread_id": "Thread-1", "execution_time": 0.14568710327148438, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_expectations_expect_column_to_exist_input_layer__observation_observation_type.5f1967c8b6", "compiled": true, "compiled_code": "\n\n    with test_data as (\n\n        select\n            cast('OBSERVATION_TYPE' as TEXT) as column_name,\n            6 as matching_column_index,\n            True as column_index_matches\n\n    )\n    select *\n    from test_data\n    where\n        not(matching_column_index >= 0 and column_index_matches)", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:56.995183Z", "completed_at": "2025-06-03T19:49:57.148037Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:57.148422Z", "completed_at": "2025-06-03T19:49:57.148431Z"}], "thread_id": "Thread-2", "execution_time": 0.1558220386505127, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_expectations_expect_column_to_exist_input_layer__observation_person_id.236ae80c80", "compiled": true, "compiled_code": "\n\n    with test_data as (\n\n        select\n            cast('PERSON_ID' as TEXT) as column_name,\n            1 as matching_column_index,\n            True as column_index_matches\n\n    )\n    select *\n    from test_data\n    where\n        not(matching_column_index >= 0 and column_index_matches)", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:57.007766Z", "completed_at": "2025-06-03T19:49:57.149424Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:57.150462Z", "completed_at": "2025-06-03T19:49:57.150468Z"}], "thread_id": "Thread-4", "execution_time": 0.15602326393127441, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_expectations_expect_column_to_exist_input_layer__observation_result.39164fa5b0", "compiled": true, "compiled_code": "\n\n    with test_data as (\n\n        select\n            cast('RESULT' as TEXT) as column_name,\n            13 as matching_column_index,\n            True as column_index_matches\n\n    )\n    select *\n    from test_data\n    where\n        not(matching_column_index >= 0 and column_index_matches)", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:57.018345Z", "completed_at": "2025-06-03T19:49:57.150158Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:57.151347Z", "completed_at": "2025-06-03T19:49:57.151353Z"}], "thread_id": "Thread-1", "execution_time": 0.14428305625915527, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_expectations_expect_column_to_exist_input_layer__observation_source_code.b9ea23dd5b", "compiled": true, "compiled_code": "\n\n    with test_data as (\n\n        select\n            cast('SOURCE_CODE' as TEXT) as column_name,\n            8 as matching_column_index,\n            True as column_index_matches\n\n    )\n    select *\n    from test_data\n    where\n        not(matching_column_index >= 0 and column_index_matches)", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:57.179791Z", "completed_at": "2025-06-03T19:49:57.318479Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:57.319125Z", "completed_at": "2025-06-03T19:49:57.319134Z"}], "thread_id": "Thread-1", "execution_time": 0.15309691429138184, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_expectations_expect_column_to_exist_input_layer__observation_source_reference_range_high.a42d0b7362", "compiled": true, "compiled_code": "\n\n    with test_data as (\n\n        select\n            cast('SOURCE_REFERENCE_RANGE_HIGH' as TEXT) as column_name,\n            17 as matching_column_index,\n            True as column_index_matches\n\n    )\n    select *\n    from test_data\n    where\n        not(matching_column_index >= 0 and column_index_matches)", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:57.152310Z", "completed_at": "2025-06-03T19:49:57.318769Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:57.320032Z", "completed_at": "2025-06-03T19:49:57.320038Z"}], "thread_id": "Thread-2", "execution_time": 0.17035484313964844, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_expectations_expect_column_to_exist_input_layer__observation_source_code_type.4ca2f71271", "compiled": true, "compiled_code": "\n\n    with test_data as (\n\n        select\n            cast('SOURCE_CODE_TYPE' as TEXT) as column_name,\n            7 as matching_column_index,\n            True as column_index_matches\n\n    )\n    select *\n    from test_data\n    where\n        not(matching_column_index >= 0 and column_index_matches)", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:57.168161Z", "completed_at": "2025-06-03T19:49:57.319678Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:57.320864Z", "completed_at": "2025-06-03T19:49:57.320868Z"}], "thread_id": "Thread-4", "execution_time": 0.15547394752502441, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_expectations_expect_column_to_exist_input_layer__observation_source_description.dcf7463106", "compiled": true, "compiled_code": "\n\n    with test_data as (\n\n        select\n            cast('SOURCE_DESCRIPTION' as TEXT) as column_name,\n            9 as matching_column_index,\n            True as column_index_matches\n\n    )\n    select *\n    from test_data\n    where\n        not(matching_column_index >= 0 and column_index_matches)", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:57.516019Z", "completed_at": "2025-06-03T19:49:57.663918Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:57.668129Z", "completed_at": "2025-06-03T19:49:57.668140Z"}], "thread_id": "Thread-4", "execution_time": 0.3442809581756592, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_expectations_expect_column_values_to_be_in_type_list_input_layer__observation_ingest_datetime__date__datetime__time__timestamp__timestamp_ntz__timestampntz__timestamp_ltz__timestampltz__timestamp_tz__timestamptz__timestamp_with_time_zone__timestamp_without_time_zone__datetime2__datetimeoffset.eac602b76d", "compiled": true, "compiled_code": "with relation_columns as (\n\n        \n        select\n            cast('OBSERVATION_ID' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PERSON_ID' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PATIENT_ID' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('ENCOUNTER_ID' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PANEL_ID' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('OBSERVATION_DATE' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('OBSERVATION_TYPE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('SOURCE_CODE_TYPE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('SOURCE_CODE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('SOURCE_DESCRIPTION' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('NORMALIZED_CODE_TYPE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('NORMALIZED_CODE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('NORMALIZED_DESCRIPTION' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('RESULT' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('SOURCE_UNITS' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('NORMALIZED_UNITS' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('SOURCE_REFERENCE_RANGE_LOW' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('SOURCE_REFERENCE_RANGE_HIGH' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('NORMALIZED_REFERENCE_RANGE_LOW' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('NORMALIZED_REFERENCE_RANGE_HIGH' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DATA_SOURCE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('FILE_NAME' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('INGEST_DATETIME' as TEXT) as relation_column,\n            cast('TIMESTAMP_NTZ' as TEXT) as relation_column_type\n        \n        \n    ),\n    test_data as (\n\n        select\n            *\n        from\n            relation_columns\n        where\n            relation_column = 'INGEST_DATETIME'\n            and\n            relation_column_type not in ('DATE', 'DATETIME', 'TIME', 'TIMESTAMP', 'TIMESTAMP_NTZ', 'TIMESTAMPNTZ', 'TIMESTAMP_LTZ', 'TIMESTAMPLTZ', 'TIMESTAMP_TZ', 'TIMESTAMPTZ', 'TIMESTAMP WITH TIME ZONE', 'TIMESTAMP WITHOUT TIME ZONE', 'DATETIME2', 'DATETIMEOFFSET')\n\n    )\n    select *\n    from test_data", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:57.325118Z", "completed_at": "2025-06-03T19:49:57.672173Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:57.673128Z", "completed_at": "2025-06-03T19:49:57.673135Z"}], "thread_id": "Thread-1", "execution_time": 0.3516550064086914, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_expectations_expect_column_to_exist_input_layer__observation_source_reference_range_low.91ca14b938", "compiled": true, "compiled_code": "\n\n    with test_data as (\n\n        select\n            cast('SOURCE_REFERENCE_RANGE_LOW' as TEXT) as column_name,\n            16 as matching_column_index,\n            True as column_index_matches\n\n    )\n    select *\n    from test_data\n    where\n        not(matching_column_index >= 0 and column_index_matches)", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:57.503607Z", "completed_at": "2025-06-03T19:49:57.673987Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:57.687904Z", "completed_at": "2025-06-03T19:49:57.687914Z"}], "thread_id": "Thread-2", "execution_time": 0.3650360107421875, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_expectations_expect_column_to_exist_input_layer__observation_source_units.3115751fc8", "compiled": true, "compiled_code": "\n\n    with test_data as (\n\n        select\n            cast('SOURCE_UNITS' as TEXT) as column_name,\n            14 as matching_column_index,\n            True as column_index_matches\n\n    )\n    select *\n    from test_data\n    where\n        not(matching_column_index >= 0 and column_index_matches)", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:57.691239Z", "completed_at": "2025-06-03T19:49:57.706002Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:57.706306Z", "completed_at": "2025-06-03T19:49:57.706313Z"}], "thread_id": "Thread-1", "execution_time": 0.017762184143066406, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.not_null_input_layer__observation_observation_id.a0f5ec8b7f", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect observation_id\nfrom tuva.input_layer.input_layer__observation\nwhere observation_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:57.699600Z", "completed_at": "2025-06-03T19:49:57.714620Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:57.714986Z", "completed_at": "2025-06-03T19:49:57.714993Z"}], "thread_id": "Thread-2", "execution_time": 0.02441096305847168, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.not_null_input_layer__observation_person_id.a99dacf937", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect person_id\nfrom tuva.input_layer.input_layer__observation\nwhere person_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:57.707905Z", "completed_at": "2025-06-03T19:49:57.722938Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:57.723241Z", "completed_at": "2025-06-03T19:49:57.723248Z"}], "thread_id": "Thread-1", "execution_time": 0.016019105911254883, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.unique_input_layer__observation_observation_id.730a9bad6c", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    observation_id as unique_field,\n    count(*) as n_records\n\nfrom tuva.input_layer.input_layer__observation\nwhere observation_id is not null\ngroup by observation_id\nhaving count(*) > 1\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:57.716653Z", "completed_at": "2025-06-03T19:49:57.724200Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:57.724638Z", "completed_at": "2025-06-03T19:49:57.724643Z"}], "thread_id": "Thread-2", "execution_time": 0.009014129638671875, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.data_quality__primary_keys_practitioner_practitioner_id", "compiled": true, "compiled_code": "\n\nwith valid_conditions as (\n    select\n        *\n    from\n        tuva.data_quality.practitioner_practitioner_id\n    where\n        bucket_name = 'valid'\n)\n, uniqueness_check as (\n        select\n                field_value\n                , COUNT(*) as duplicate_count\n        from\n                valid_conditions\n        group by\n                field_value\n        having\n                COUNT(*) > 1\n)\n\n, random_sample as (\n    select\n        data_source\n        , source_date\n        , table_name\n        , drill_down_key\n        , drill_down_value\n        , field_name\n        , field_value\n        , bucket_name\n        , ROW_NUMBER() over (\norder by drill_down_key) as row_number_value\n    from\n        tuva.data_quality.practitioner_practitioner_id\n    where\n        bucket_name = 'valid'\n)\n\n, duplicates_summary as (\n    select\n        a.data_source\n        , a.source_date\n        , a.table_name\n        , a.drill_down_key\n        , a.drill_down_value\n        , a.field_name\n        , a.field_value\n        , a.bucket_name\n        , b.duplicate_count\n        , ROW_NUMBER() over (\norder by drill_down_key) as row_number_value\n    from\n        tuva.data_quality.practitioner_practitioner_id as a\n    inner join\n        uniqueness_check as b on a.field_value = b.field_value\n)\n\nselect\n    *\n    , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom\n    duplicates_summary\nwhere row_number_value <= 5\n\nunion all\n\nselect\n    *\n    , 0 as duplicate_count\n    , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom\n    random_sample\nwhere\n    row_number_value <= 5\n    and not exists (select 1 from duplicates_summary)", "relation_name": "tuva.data_quality.primary_keys_practitioner_practitioner_id", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:57.725013Z", "completed_at": "2025-06-03T19:49:57.738730Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:57.741624Z", "completed_at": "2025-06-03T19:49:57.741630Z"}], "thread_id": "Thread-1", "execution_time": 0.01773524284362793, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.core__stg_clinical_practitioner", "compiled": true, "compiled_code": "\n\nselect\n    cast(practitioner_id as TEXT) as practitioner_id\n    , cast(npi as TEXT) as npi\n    , cast(first_name as TEXT) as first_name\n    , cast(last_name as TEXT) as last_name\n    , cast(practice_affiliation as TEXT) as practice_affiliation\n    , cast(specialty as TEXT) as specialty\n    , cast(sub_specialty as TEXT) as sub_specialty\n    , cast(data_source as TEXT) as data_source\n    , cast('2025-06-03 19:49:40.396647+00:00' as timestamp) as tuva_last_run\nfrom tuva.input_layer.input_layer__practitioner", "relation_name": "tuva.core._stg_clinical_practitioner", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:57.674957Z", "completed_at": "2025-06-03T19:49:57.806080Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:57.806458Z", "completed_at": "2025-06-03T19:49:57.806466Z"}], "thread_id": "Thread-4", "execution_time": 0.13398504257202148, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_expectations_expect_column_values_to_be_of_type_input_layer__observation_observation_date__date.a458e01873", "compiled": true, "compiled_code": "with relation_columns as (\n\n        \n        select\n            cast('OBSERVATION_ID' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PERSON_ID' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PATIENT_ID' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('ENCOUNTER_ID' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PANEL_ID' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('OBSERVATION_DATE' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('OBSERVATION_TYPE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('SOURCE_CODE_TYPE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('SOURCE_CODE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('SOURCE_DESCRIPTION' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('NORMALIZED_CODE_TYPE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('NORMALIZED_CODE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('NORMALIZED_DESCRIPTION' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('RESULT' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('SOURCE_UNITS' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('NORMALIZED_UNITS' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('SOURCE_REFERENCE_RANGE_LOW' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('SOURCE_REFERENCE_RANGE_HIGH' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('NORMALIZED_REFERENCE_RANGE_LOW' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('NORMALIZED_REFERENCE_RANGE_HIGH' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DATA_SOURCE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('FILE_NAME' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('INGEST_DATETIME' as TEXT) as relation_column,\n            cast('TIMESTAMP_NTZ' as TEXT) as relation_column_type\n        \n        \n    ),\n    test_data as (\n\n        select\n            *\n        from\n            relation_columns\n        where\n            relation_column = 'OBSERVATION_DATE'\n            and\n            relation_column_type not in ('DATE')\n\n    )\n    select *\n    from test_data", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:57.733380Z", "completed_at": "2025-06-03T19:49:57.865163Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:57.866062Z", "completed_at": "2025-06-03T19:49:57.866086Z"}], "thread_id": "Thread-2", "execution_time": 0.1335890293121338, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_expectations_expect_column_to_exist_input_layer__practitioner_data_source.a6595b7ebb", "compiled": true, "compiled_code": "\n\n    with test_data as (\n\n        select\n            cast('DATA_SOURCE' as TEXT) as column_name,\n            7 as matching_column_index,\n            True as column_index_matches\n\n    )\n    select *\n    from test_data\n    where\n        not(matching_column_index >= 0 and column_index_matches)", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:57.743372Z", "completed_at": "2025-06-03T19:49:57.896869Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:57.897269Z", "completed_at": "2025-06-03T19:49:57.897277Z"}], "thread_id": "Thread-1", "execution_time": 0.1546308994293213, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_expectations_expect_column_to_exist_input_layer__practitioner_first_name.7b5efa07c0", "compiled": true, "compiled_code": "\n\n    with test_data as (\n\n        select\n            cast('FIRST_NAME' as TEXT) as column_name,\n            2 as matching_column_index,\n            True as column_index_matches\n\n    )\n    select *\n    from test_data\n    where\n        not(matching_column_index >= 0 and column_index_matches)", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:57.807897Z", "completed_at": "2025-06-03T19:49:57.982479Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:57.982822Z", "completed_at": "2025-06-03T19:49:57.982831Z"}], "thread_id": "Thread-4", "execution_time": 0.17560482025146484, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_expectations_expect_column_to_exist_input_layer__practitioner_last_name.4c5f4ae618", "compiled": true, "compiled_code": "\n\n    with test_data as (\n\n        select\n            cast('LAST_NAME' as TEXT) as column_name,\n            3 as matching_column_index,\n            True as column_index_matches\n\n    )\n    select *\n    from test_data\n    where\n        not(matching_column_index >= 0 and column_index_matches)", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:57.870204Z", "completed_at": "2025-06-03T19:49:58.000440Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:58.000744Z", "completed_at": "2025-06-03T19:49:58.000753Z"}], "thread_id": "Thread-2", "execution_time": 0.1324450969696045, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_expectations_expect_column_to_exist_input_layer__practitioner_npi.1b1e7b7cd9", "compiled": true, "compiled_code": "\n\n    with test_data as (\n\n        select\n            cast('NPI' as TEXT) as column_name,\n            1 as matching_column_index,\n            True as column_index_matches\n\n    )\n    select *\n    from test_data\n    where\n        not(matching_column_index >= 0 and column_index_matches)", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:57.899125Z", "completed_at": "2025-06-03T19:49:58.018213Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:58.018504Z", "completed_at": "2025-06-03T19:49:58.018512Z"}], "thread_id": "Thread-1", "execution_time": 0.12007522583007812, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_expectations_expect_column_to_exist_input_layer__practitioner_practice_affiliation.0e1a43233b", "compiled": true, "compiled_code": "\n\n    with test_data as (\n\n        select\n            cast('PRACTICE_AFFILIATION' as TEXT) as column_name,\n            4 as matching_column_index,\n            True as column_index_matches\n\n    )\n    select *\n    from test_data\n    where\n        not(matching_column_index >= 0 and column_index_matches)", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:57.984907Z", "completed_at": "2025-06-03T19:49:58.118909Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:58.119320Z", "completed_at": "2025-06-03T19:49:58.119331Z"}], "thread_id": "Thread-4", "execution_time": 0.13538098335266113, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_expectations_expect_column_to_exist_input_layer__practitioner_practitioner_id.85ad439f43", "compiled": true, "compiled_code": "\n\n    with test_data as (\n\n        select\n            cast('PRACTITIONER_ID' as TEXT) as column_name,\n            0 as matching_column_index,\n            True as column_index_matches\n\n    )\n    select *\n    from test_data\n    where\n        not(matching_column_index >= 0 and column_index_matches)", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:58.121111Z", "completed_at": "2025-06-03T19:49:58.132077Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:58.132439Z", "completed_at": "2025-06-03T19:49:58.132447Z"}], "thread_id": "Thread-4", "execution_time": 0.012165307998657227, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.not_null_input_layer__practitioner_practitioner_id.f1f2aed05a", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect practitioner_id\nfrom tuva.input_layer.input_layer__practitioner\nwhere practitioner_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:58.002113Z", "completed_at": "2025-06-03T19:49:58.133542Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:58.134510Z", "completed_at": "2025-06-03T19:49:58.134516Z"}], "thread_id": "Thread-2", "execution_time": 0.13301587104797363, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_expectations_expect_column_to_exist_input_layer__practitioner_specialty.0230b64083", "compiled": true, "compiled_code": "\n\n    with test_data as (\n\n        select\n            cast('SPECIALTY' as TEXT) as column_name,\n            5 as matching_column_index,\n            True as column_index_matches\n\n    )\n    select *\n    from test_data\n    where\n        not(matching_column_index >= 0 and column_index_matches)", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:58.138001Z", "completed_at": "2025-06-03T19:49:58.153054Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:58.153400Z", "completed_at": "2025-06-03T19:49:58.153408Z"}], "thread_id": "Thread-4", "execution_time": 0.01967000961303711, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.unique_input_layer__practitioner_practitioner_id.f77e4e7a51", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    practitioner_id as unique_field,\n    count(*) as n_records\n\nfrom tuva.input_layer.input_layer__practitioner\nwhere practitioner_id is not null\ngroup by practitioner_id\nhaving count(*) > 1\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:58.019764Z", "completed_at": "2025-06-03T19:49:58.153860Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:58.154447Z", "completed_at": "2025-06-03T19:49:58.154451Z"}], "thread_id": "Thread-1", "execution_time": 0.13529205322265625, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_expectations_expect_column_to_exist_input_layer__practitioner_sub_specialty.4ab6b1e1db", "compiled": true, "compiled_code": "\n\n    with test_data as (\n\n        select\n            cast('SUB_SPECIALTY' as TEXT) as column_name,\n            6 as matching_column_index,\n            True as column_index_matches\n\n    )\n    select *\n    from test_data\n    where\n        not(matching_column_index >= 0 and column_index_matches)", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:58.146211Z", "completed_at": "2025-06-03T19:49:58.154834Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:58.155676Z", "completed_at": "2025-06-03T19:49:58.155681Z"}], "thread_id": "Thread-2", "execution_time": 0.010301351547241211, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.data_quality__primary_keys_patient_patient_id", "compiled": true, "compiled_code": "\n\nwith valid_conditions as (\n    select\n        *\n    from\n        tuva.data_quality.patient_patient_id\n    where\n        bucket_name = 'valid'\n)\n, uniqueness_check as (\n        select\n                field_value\n                , COUNT(*) as duplicate_count\n        from\n                valid_conditions\n        group by\n                field_value\n        having\n                COUNT(*) > 1\n)\n\n, random_sample as (\n    select\n        data_source\n        , source_date\n        , table_name\n        , drill_down_key\n        , drill_down_value\n        , field_name\n        , field_value\n        , bucket_name\n        , ROW_NUMBER() over (\norder by drill_down_key) as row_number_value\n    from\n        tuva.data_quality.patient_patient_id\n    where\n        bucket_name = 'valid'\n\n)\n\n, duplicates_summary as (\n    select\n        a.data_source\n        , a.source_date\n        , a.table_name\n        , a.drill_down_key\n        , a.drill_down_value\n        , a.field_name\n        , a.field_value\n        , a.bucket_name\n        , b.duplicate_count\n        , ROW_NUMBER() over (\norder by drill_down_key) as row_number_value\n    from\n        tuva.data_quality.patient_patient_id as a\n    inner join\n        uniqueness_check as b on a.field_value = b.field_value\n)\n\nselect\n    *\n    , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom\n    duplicates_summary\nwhere row_number_value <= 5\n\nunion all\n\nselect\n    *\n    , 0 as duplicate_count\n    , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom\n    random_sample\nwhere\n    row_number_value <= 5\n    and not exists (select 1 from duplicates_summary)", "relation_name": "tuva.data_quality.primary_keys_patient_patient_id", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:58.156927Z", "completed_at": "2025-06-03T19:49:58.273209Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:58.280284Z", "completed_at": "2025-06-03T19:49:58.280290Z"}], "thread_id": "Thread-4", "execution_time": 0.1252448558807373, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.core__stg_clinical_patient", "compiled": true, "compiled_code": "\n\nwith tuva_last_run as (\n    select\n       cast('2025-06-03 19:49:40.396647+00:00' as timestamp) as tuva_last_run_datetime\n       , cast(substring('2025-06-03 19:49:40.396647+00:00', 1, 10) as date) as tuva_last_run_date\n)\nselect\n      cast(person_id as TEXT) as person_id\n    , cast(first_name as TEXT) as first_name\n    , cast(last_name as TEXT) as last_name\n    , cast(sex as TEXT) as sex\n    , cast(race as TEXT) as race\n    , try_cast( birth_date as date ) as birth_date\n    , try_cast( death_date as date ) as death_date\n    , cast(death_flag as integer) as death_flag\n    , cast(social_security_number as TEXT) as social_security_number\n    , cast(address as TEXT) as address\n    , cast(city as TEXT) as city\n    , cast(state as TEXT) as state\n    , cast(zip_code as TEXT) as zip_code\n    , cast(county as TEXT) as county\n    , cast(latitude as float) as latitude\n    , cast(longitude as float) as longitude\n    , cast(phone as TEXT) as phone\n    , cast(data_source as TEXT) as data_source\n    , cast(floor(datediff(\n        hour,\n        birth_date,\n        tuva_last_run_date\n        ) / 8760.0) as integer) as age\n    , cast(\n        case\n            when cast(floor(datediff(\n        hour,\n        birth_date,\n        tuva_last_run_date\n        ) / 8760.0) as integer) < 10 then '0-9'\n            when cast(floor(datediff(\n        hour,\n        birth_date,\n        tuva_last_run_date\n        ) / 8760.0) as integer) < 20 then '10-19'\n            when cast(floor(datediff(\n        hour,\n        birth_date,\n        tuva_last_run_date\n        ) / 8760.0) as integer) < 30 then '20-29'\n            when cast(floor(datediff(\n        hour,\n        birth_date,\n        tuva_last_run_date\n        ) / 8760.0) as integer) < 40 then '30-39'\n            when cast(floor(datediff(\n        hour,\n        birth_date,\n        tuva_last_run_date\n        ) / 8760.0) as integer) < 50 then '40-49'\n            when cast(floor(datediff(\n        hour,\n        birth_date,\n        tuva_last_run_date\n        ) / 8760.0) as integer) < 60 then '50-59'\n            when cast(floor(datediff(\n        hour,\n        birth_date,\n        tuva_last_run_date\n        ) / 8760.0) as integer) < 70 then '60-69'\n            when cast(floor(datediff(\n        hour,\n        birth_date,\n        tuva_last_run_date\n        ) / 8760.0) as integer) < 80 then '70-79'\n            when cast(floor(datediff(\n        hour,\n        birth_date,\n        tuva_last_run_date\n        ) / 8760.0) as integer) < 90 then '80-89'\n            else '90+'\n        end as TEXT\n    ) as age_group\n    , tuva_last_run_datetime as tuva_last_run\nfrom tuva.input_layer.input_layer__patient\ncross join tuva_last_run", "relation_name": "tuva.core._stg_clinical_patient", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:58.267326Z", "completed_at": "2025-06-03T19:49:58.280081Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:58.280800Z", "completed_at": "2025-06-03T19:49:58.280805Z"}], "thread_id": "Thread-1", "execution_time": 0.1245119571685791, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.accepted_values_input_layer__patient_death_flag__0__1.f8cb4216cf", "compiled": true, "compiled_code": "\n    \n    \n\nwith all_values as (\n\n    select\n        death_flag as value_field,\n        count(*) as n_records\n\n    from tuva.input_layer.input_layer__patient\n    group by death_flag\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    '0','1'\n)\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:58.273493Z", "completed_at": "2025-06-03T19:49:58.281730Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:58.282407Z", "completed_at": "2025-06-03T19:49:58.282411Z"}], "thread_id": "Thread-2", "execution_time": 0.0164642333984375, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.accepted_values_input_layer__patient_sex__male__female__unknown.98e5fb760d", "compiled": true, "compiled_code": "\n    \n    \n\nwith all_values as (\n\n    select\n        sex as value_field,\n        count(*) as n_records\n\n    from tuva.input_layer.input_layer__patient\n    group by sex\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    'male','female','unknown'\n)\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:58.292028Z", "completed_at": "2025-06-03T19:49:58.434890Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:58.435612Z", "completed_at": "2025-06-03T19:49:58.435625Z"}], "thread_id": "Thread-1", "execution_time": 0.15356707572937012, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_expectations_expect_column_to_exist_input_layer__patient_birth_date.7a23eef543", "compiled": true, "compiled_code": "\n\n    with test_data as (\n\n        select\n            cast('BIRTH_DATE' as TEXT) as column_name,\n            6 as matching_column_index,\n            True as column_index_matches\n\n    )\n    select *\n    from test_data\n    where\n        not(matching_column_index >= 0 and column_index_matches)", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:58.302150Z", "completed_at": "2025-06-03T19:49:58.479572Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:58.479951Z", "completed_at": "2025-06-03T19:49:58.479960Z"}], "thread_id": "Thread-2", "execution_time": 0.18050622940063477, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_expectations_expect_column_to_exist_input_layer__patient_city.ff5c9932f3", "compiled": true, "compiled_code": "\n\n    with test_data as (\n\n        select\n            cast('CITY' as TEXT) as column_name,\n            11 as matching_column_index,\n            True as column_index_matches\n\n    )\n    select *\n    from test_data\n    where\n        not(matching_column_index >= 0 and column_index_matches)", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:58.283747Z", "completed_at": "2025-06-03T19:49:58.481284Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:58.481961Z", "completed_at": "2025-06-03T19:49:58.481967Z"}], "thread_id": "Thread-4", "execution_time": 0.20012211799621582, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_expectations_expect_column_to_exist_input_layer__patient_address.71894fd441", "compiled": true, "compiled_code": "\n\n    with test_data as (\n\n        select\n            cast('ADDRESS' as TEXT) as column_name,\n            10 as matching_column_index,\n            True as column_index_matches\n\n    )\n    select *\n    from test_data\n    where\n        not(matching_column_index >= 0 and column_index_matches)", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:58.438497Z", "completed_at": "2025-06-03T19:49:58.584179Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:58.584697Z", "completed_at": "2025-06-03T19:49:58.584708Z"}], "thread_id": "Thread-1", "execution_time": 0.14726805686950684, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_expectations_expect_column_to_exist_input_layer__patient_county.520125309c", "compiled": true, "compiled_code": "\n\n    with test_data as (\n\n        select\n            cast('COUNTY' as TEXT) as column_name,\n            14 as matching_column_index,\n            True as column_index_matches\n\n    )\n    select *\n    from test_data\n    where\n        not(matching_column_index >= 0 and column_index_matches)", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:58.482542Z", "completed_at": "2025-06-03T19:49:58.627996Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:58.628309Z", "completed_at": "2025-06-03T19:49:58.628316Z"}], "thread_id": "Thread-2", "execution_time": 0.1474778652191162, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_expectations_expect_column_to_exist_input_layer__patient_data_source.392acfe840", "compiled": true, "compiled_code": "\n\n    with test_data as (\n\n        select\n            cast('DATA_SOURCE' as TEXT) as column_name,\n            18 as matching_column_index,\n            True as column_index_matches\n\n    )\n    select *\n    from test_data\n    where\n        not(matching_column_index >= 0 and column_index_matches)", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:58.510882Z", "completed_at": "2025-06-03T19:49:58.639662Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:58.640280Z", "completed_at": "2025-06-03T19:49:58.640289Z"}], "thread_id": "Thread-4", "execution_time": 0.13155794143676758, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_expectations_expect_column_to_exist_input_layer__patient_death_date.8a01d3c169", "compiled": true, "compiled_code": "\n\n    with test_data as (\n\n        select\n            cast('DEATH_DATE' as TEXT) as column_name,\n            7 as matching_column_index,\n            True as column_index_matches\n\n    )\n    select *\n    from test_data\n    where\n        not(matching_column_index >= 0 and column_index_matches)", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:58.586557Z", "completed_at": "2025-06-03T19:49:58.686224Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:58.686560Z", "completed_at": "2025-06-03T19:49:58.686567Z"}], "thread_id": "Thread-1", "execution_time": 0.10075092315673828, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_expectations_expect_column_to_exist_input_layer__patient_death_flag.94d0f6138d", "compiled": true, "compiled_code": "\n\n    with test_data as (\n\n        select\n            cast('DEATH_FLAG' as TEXT) as column_name,\n            8 as matching_column_index,\n            True as column_index_matches\n\n    )\n    select *\n    from test_data\n    where\n        not(matching_column_index >= 0 and column_index_matches)", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:58.629523Z", "completed_at": "2025-06-03T19:49:58.769888Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:58.770283Z", "completed_at": "2025-06-03T19:49:58.770293Z"}], "thread_id": "Thread-2", "execution_time": 0.14137482643127441, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_expectations_expect_column_to_exist_input_layer__patient_file_name.27df6c0be9", "compiled": true, "compiled_code": "\n\n    with test_data as (\n\n        select\n            cast('FILE_NAME' as TEXT) as column_name,\n            19 as matching_column_index,\n            True as column_index_matches\n\n    )\n    select *\n    from test_data\n    where\n        not(matching_column_index >= 0 and column_index_matches)", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:58.641546Z", "completed_at": "2025-06-03T19:49:58.771303Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:58.771977Z", "completed_at": "2025-06-03T19:49:58.771983Z"}], "thread_id": "Thread-4", "execution_time": 0.13101506233215332, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_expectations_expect_column_to_exist_input_layer__patient_first_name.dfaa15b00e", "compiled": true, "compiled_code": "\n\n    with test_data as (\n\n        select\n            cast('FIRST_NAME' as TEXT) as column_name,\n            2 as matching_column_index,\n            True as column_index_matches\n\n    )\n    select *\n    from test_data\n    where\n        not(matching_column_index >= 0 and column_index_matches)", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:58.687985Z", "completed_at": "2025-06-03T19:49:58.805683Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:58.805942Z", "completed_at": "2025-06-03T19:49:58.805949Z"}], "thread_id": "Thread-1", "execution_time": 0.1186368465423584, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_expectations_expect_column_to_exist_input_layer__patient_ingest_datetime.eafc6e9bd0", "compiled": true, "compiled_code": "\n\n    with test_data as (\n\n        select\n            cast('INGEST_DATETIME' as TEXT) as column_name,\n            20 as matching_column_index,\n            True as column_index_matches\n\n    )\n    select *\n    from test_data\n    where\n        not(matching_column_index >= 0 and column_index_matches)", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:58.807183Z", "completed_at": "2025-06-03T19:49:58.965564Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:58.966328Z", "completed_at": "2025-06-03T19:49:58.966344Z"}], "thread_id": "Thread-1", "execution_time": 0.15987110137939453, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_expectations_expect_column_to_exist_input_layer__patient_longitude.e36d2aad3c", "compiled": true, "compiled_code": "\n\n    with test_data as (\n\n        select\n            cast('LONGITUDE' as TEXT) as column_name,\n            16 as matching_column_index,\n            True as column_index_matches\n\n    )\n    select *\n    from test_data\n    where\n        not(matching_column_index >= 0 and column_index_matches)", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:44.915089Z", "completed_at": "2025-06-03T19:49:58.967957Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:58.968963Z", "completed_at": "2025-06-03T19:49:58.968973Z"}], "thread_id": "Thread-3", "execution_time": 14.069313049316406, "adapter_response": {}, "message": null, "failures": null, "unique_id": "operation.the_tuva_project.the_tuva_project-on-run-end-0", "compiled": true, "compiled_code": "\n\n    \n\n    \n        \n        \n        \n        \n    \n        \n        \n        \n        \n    \n        \n        \n        \n        \n    \n        \n        \n        \n        \n    \n        \n        \n        \n        \n    \n        \n        \n        \n        \n    \n        \n        \n        \n        \n    \n        \n        \n        \n        \n    \n        \n        \n        \n        \n    \n        \n        \n        \n        \n    \n        \n        \n        \n        \n    \n        \n        \n        \n        \n    \n        \n        \n        \n        \n    \n        \n        \n        \n        \n    \n        \n        \n        \n        \n    \n        \n        \n        \n        \n    \n        \n        \n        \n        \n    \n        \n        \n        \n        \n    \n        \n        \n        \n        \n    \n        \n        \n        \n        \n    \n        \n        \n        \n        \n    \n        \n        \n        \n        \n    \n        \n        \n        \n        \n    \n        \n        \n        \n        \n    \n        \n        \n        \n        \n    \n        \n        \n        \n        \n    \n        \n        \n        \n        \n    \n        \n        \n        \n        \n    \n        \n        \n        \n        \n    \n        \n        \n        \n        \n    \n        \n        \n        \n        \n    \n        \n        \n        \n        \n    \n        \n        \n        \n        \n    \n        \n        \n        \n        \n    \n        \n        \n        \n        \n    \n        \n        \n        \n        \n    \n        \n        \n        \n        \n    \n        \n        \n        \n        \n    \n        \n        \n        \n        \n    \n        \n        \n        \n        \n    \n        \n        \n        \n        \n    \n        \n        \n        \n        \n    \n        \n        \n        \n        \n    \n        \n        \n        \n        \n    \n        \n        \n        \n        \n    \n        \n        \n        \n        \n    \n        \n        \n        \n        \n    \n        \n        \n        \n        \n    \n        \n        \n        \n        \n    \n        \n        \n        \n        \n    \n        \n        \n        \n        \n    \n        \n        \n        \n        \n    \n        \n        \n        \n        \n    \n        \n        \n        \n        \n    \n        \n        \n        \n        \n    \n        \n        \n        \n        \n    \n        \n        \n        \n        \n    \n        \n        \n        \n        \n    \n        \n        \n        \n        \n    \n        \n        \n        \n        \n    \n        \n        \n        \n        \n    \n        \n        \n        \n        \n    \n        \n        \n        \n        \n    \n        \n        \n        \n        \n    \n        \n        \n        \n        \n    \n        \n        \n        \n        \n    \n        \n        \n        \n        \n    \n        \n        \n        \n        \n    \n        \n        \n        \n        \n    \n        \n        \n        \n        \n    \n        \n        \n        \n        \n    \n        \n        \n        \n        \n    \n        \n        \n        \n        \n    \n        \n        \n        \n        \n    \n        \n        \n        \n        \n    \n        \n        \n        \n        \n    \n        \n        \n        \n        \n    \n        \n        \n        \n        \n    \n        \n        \n        \n        \n    \n        \n        \n        \n        \n    \n        \n        \n        \n        \n    \n        \n        \n        \n        \n    \n        \n        \n        \n        \n    \n        \n        \n        \n        \n    \n        \n        \n        \n        \n    \n        \n        \n        \n        \n    \n        \n        \n        \n        \n    \n        \n        \n        \n        \n    \n        \n        \n        \n        \n    \n        \n        \n        \n        \n    \n        \n        \n        \n        \n    \n        \n        \n        \n        \n    \n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:58.773130Z", "completed_at": "2025-06-03T19:49:59.096845Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:59.097109Z", "completed_at": "2025-06-03T19:49:59.097115Z"}], "thread_id": "Thread-2", "execution_time": 0.32555413246154785, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_expectations_expect_column_to_exist_input_layer__patient_last_name.a77d43aec0", "compiled": true, "compiled_code": "\n\n    with test_data as (\n\n        select\n            cast('LAST_NAME' as TEXT) as column_name,\n            3 as matching_column_index,\n            True as column_index_matches\n\n    )\n    select *\n    from test_data\n    where\n        not(matching_column_index >= 0 and column_index_matches)", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:58.785511Z", "completed_at": "2025-06-03T19:49:59.104439Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:59.106660Z", "completed_at": "2025-06-03T19:49:59.106667Z"}], "thread_id": "Thread-4", "execution_time": 0.3223099708557129, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_expectations_expect_column_to_exist_input_layer__patient_latitude.8220005a05", "compiled": true, "compiled_code": "\n\n    with test_data as (\n\n        select\n            cast('LATITUDE' as TEXT) as column_name,\n            15 as matching_column_index,\n            True as column_index_matches\n\n    )\n    select *\n    from test_data\n    where\n        not(matching_column_index >= 0 and column_index_matches)", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:58.970884Z", "completed_at": "2025-06-03T19:49:59.207011Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:59.207360Z", "completed_at": "2025-06-03T19:49:59.207368Z"}], "thread_id": "Thread-1", "execution_time": 0.23905587196350098, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_expectations_expect_column_to_exist_input_layer__patient_patient_id.21a2afa660", "compiled": true, "compiled_code": "\n\n    with test_data as (\n\n        select\n            cast('PATIENT_ID' as TEXT) as column_name,\n            1 as matching_column_index,\n            True as column_index_matches\n\n    )\n    select *\n    from test_data\n    where\n        not(matching_column_index >= 0 and column_index_matches)", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:59.087669Z", "completed_at": "2025-06-03T19:49:59.208314Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:59.209041Z", "completed_at": "2025-06-03T19:49:59.209047Z"}], "thread_id": "Thread-3", "execution_time": 0.12617969512939453, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_expectations_expect_column_to_exist_input_layer__patient_person_id.3d150cef23", "compiled": true, "compiled_code": "\n\n    with test_data as (\n\n        select\n            cast('PERSON_ID' as TEXT) as column_name,\n            0 as matching_column_index,\n            True as column_index_matches\n\n    )\n    select *\n    from test_data\n    where\n        not(matching_column_index >= 0 and column_index_matches)", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:59.109538Z", "completed_at": "2025-06-03T19:49:59.265977Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:59.266377Z", "completed_at": "2025-06-03T19:49:59.266386Z"}], "thread_id": "Thread-4", "execution_time": 0.15746283531188965, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_expectations_expect_column_to_exist_input_layer__patient_race.ef169c6c17", "compiled": true, "compiled_code": "\n\n    with test_data as (\n\n        select\n            cast('RACE' as TEXT) as column_name,\n            5 as matching_column_index,\n            True as column_index_matches\n\n    )\n    select *\n    from test_data\n    where\n        not(matching_column_index >= 0 and column_index_matches)", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:59.098140Z", "completed_at": "2025-06-03T19:49:59.282922Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:59.283247Z", "completed_at": "2025-06-03T19:49:59.283256Z"}], "thread_id": "Thread-2", "execution_time": 0.1856379508972168, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_expectations_expect_column_to_exist_input_layer__patient_phone.4b04ea8a83", "compiled": true, "compiled_code": "\n\n    with test_data as (\n\n        select\n            cast('PHONE' as TEXT) as column_name,\n            17 as matching_column_index,\n            True as column_index_matches\n\n    )\n    select *\n    from test_data\n    where\n        not(matching_column_index >= 0 and column_index_matches)", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:59.210172Z", "completed_at": "2025-06-03T19:49:59.346424Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:59.346772Z", "completed_at": "2025-06-03T19:49:59.346780Z"}], "thread_id": "Thread-1", "execution_time": 0.13821792602539062, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_expectations_expect_column_to_exist_input_layer__patient_sex.e5f528bf39", "compiled": true, "compiled_code": "\n\n    with test_data as (\n\n        select\n            cast('SEX' as TEXT) as column_name,\n            4 as matching_column_index,\n            True as column_index_matches\n\n    )\n    select *\n    from test_data\n    where\n        not(matching_column_index >= 0 and column_index_matches)", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:59.284954Z", "completed_at": "2025-06-03T19:49:59.403699Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:59.404030Z", "completed_at": "2025-06-03T19:49:59.404038Z"}], "thread_id": "Thread-2", "execution_time": 0.11995291709899902, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_expectations_expect_column_to_exist_input_layer__patient_zip_code.80049a4b3a", "compiled": true, "compiled_code": "\n\n    with test_data as (\n\n        select\n            cast('ZIP_CODE' as TEXT) as column_name,\n            13 as matching_column_index,\n            True as column_index_matches\n\n    )\n    select *\n    from test_data\n    where\n        not(matching_column_index >= 0 and column_index_matches)", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:59.223121Z", "completed_at": "2025-06-03T19:49:59.424753Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:59.425352Z", "completed_at": "2025-06-03T19:49:59.425361Z"}], "thread_id": "Thread-3", "execution_time": 0.20349812507629395, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_expectations_expect_column_to_exist_input_layer__patient_social_security_number.669f98a4f5", "compiled": true, "compiled_code": "\n\n    with test_data as (\n\n        select\n            cast('SOCIAL_SECURITY_NUMBER' as TEXT) as column_name,\n            9 as matching_column_index,\n            True as column_index_matches\n\n    )\n    select *\n    from test_data\n    where\n        not(matching_column_index >= 0 and column_index_matches)", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:59.267896Z", "completed_at": "2025-06-03T19:49:59.426676Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:59.427294Z", "completed_at": "2025-06-03T19:49:59.427299Z"}], "thread_id": "Thread-4", "execution_time": 0.16008710861206055, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_expectations_expect_column_to_exist_input_layer__patient_state.97598cc3f7", "compiled": true, "compiled_code": "\n\n    with test_data as (\n\n        select\n            cast('STATE' as TEXT) as column_name,\n            12 as matching_column_index,\n            True as column_index_matches\n\n    )\n    select *\n    from test_data\n    where\n        not(matching_column_index >= 0 and column_index_matches)", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:59.449892Z", "completed_at": "2025-06-03T19:49:59.463767Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:59.464029Z", "completed_at": "2025-06-03T19:49:59.464036Z"}], "thread_id": "Thread-4", "execution_time": 0.015666961669921875, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_utils_unique_combination_of_columns_input_layer__patient_person_id__patient_id.02df4ccca6", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith validation_errors as (\n\n    select\n        person_id, patient_id\n    from tuva.input_layer.input_layer__patient\n    group by person_id, patient_id\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:59.465171Z", "completed_at": "2025-06-03T19:49:59.477295Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:59.477564Z", "completed_at": "2025-06-03T19:49:59.477570Z"}], "thread_id": "Thread-4", "execution_time": 0.013002872467041016, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.not_null_input_layer__patient_patient_id.50d6712e81", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect patient_id\nfrom tuva.input_layer.input_layer__patient\nwhere patient_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:59.348624Z", "completed_at": "2025-06-03T19:49:59.483998Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:59.485714Z", "completed_at": "2025-06-03T19:49:59.485720Z"}], "thread_id": "Thread-1", "execution_time": 0.13808321952819824, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_expectations_expect_column_values_to_be_in_type_list_input_layer__patient_ingest_datetime__date__datetime__time__timestamp__timestamp_ntz__timestampntz__timestamp_ltz__timestampltz__timestamp_tz__timestamptz__timestamp_with_time_zone__timestamp_without_time_zone__datetime2__datetimeoffset.d7f8fa11f8", "compiled": true, "compiled_code": "with relation_columns as (\n\n        \n        select\n            cast('PERSON_ID' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PATIENT_ID' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('FIRST_NAME' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('LAST_NAME' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('SEX' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('RACE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('BIRTH_DATE' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DEATH_DATE' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DEATH_FLAG' as TEXT) as relation_column,\n            cast('NUMBER' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('SOCIAL_SECURITY_NUMBER' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('ADDRESS' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('CITY' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('STATE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('ZIP_CODE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('COUNTY' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('LATITUDE' as TEXT) as relation_column,\n            cast('FLOAT' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('LONGITUDE' as TEXT) as relation_column,\n            cast('FLOAT' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PHONE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DATA_SOURCE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('FILE_NAME' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('INGEST_DATETIME' as TEXT) as relation_column,\n            cast('TIMESTAMP_NTZ' as TEXT) as relation_column_type\n        \n        \n    ),\n    test_data as (\n\n        select\n            *\n        from\n            relation_columns\n        where\n            relation_column = 'INGEST_DATETIME'\n            and\n            relation_column_type not in ('DATE', 'DATETIME', 'TIME', 'TIMESTAMP', 'TIMESTAMP_NTZ', 'TIMESTAMPNTZ', 'TIMESTAMP_LTZ', 'TIMESTAMPLTZ', 'TIMESTAMP_TZ', 'TIMESTAMPTZ', 'TIMESTAMP WITH TIME ZONE', 'TIMESTAMP WITHOUT TIME ZONE', 'DATETIME2', 'DATETIMEOFFSET')\n\n    )\n    select *\n    from test_data", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:59.478631Z", "completed_at": "2025-06-03T19:49:59.492538Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:59.493080Z", "completed_at": "2025-06-03T19:49:59.493086Z"}], "thread_id": "Thread-4", "execution_time": 0.014966964721679688, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.not_null_input_layer__patient_person_id.e7921dc62e", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect person_id\nfrom tuva.input_layer.input_layer__patient\nwhere person_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:59.487061Z", "completed_at": "2025-06-03T19:49:59.500922Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:59.504560Z", "completed_at": "2025-06-03T19:49:59.504567Z"}], "thread_id": "Thread-1", "execution_time": 0.0181119441986084, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.data_quality__primary_keys_procedure_procedure_id", "compiled": true, "compiled_code": "\n\nwith valid_conditions as (\n    select\n        *\n    from\n        tuva.data_quality.procedure_procedure_id\n    where\n        bucket_name = 'valid'\n)\n, uniqueness_check as (\n        select\n                field_value\n                , COUNT(*) as duplicate_count\n        from\n                valid_conditions\n        group by\n                field_value\n        having\n                COUNT(*) > 1\n)\n\n, random_sample as (\n    select\n        data_source\n        , source_date\n        , table_name\n        , drill_down_key\n        , drill_down_value\n        , field_name\n        , field_value\n        , bucket_name\n        , ROW_NUMBER() over (\norder by drill_down_key) as row_number_value\n    from\n        tuva.data_quality.procedure_procedure_id\n    where\n        bucket_name = 'valid'\n)\n\n, duplicates_summary as (\n    select\n        a.data_source\n        , a.source_date\n        , a.table_name\n        , a.drill_down_key\n        , a.drill_down_value\n        , a.field_name\n        , a.field_value\n        , a.bucket_name\n        , b.duplicate_count\n        , ROW_NUMBER() over (\norder by drill_down_key) as row_number_value\n    from\n        tuva.data_quality.procedure_procedure_id as a\n    inner join\n        uniqueness_check as b on a.field_value = b.field_value\n)\n\nselect\n    *\n    , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom\n    duplicates_summary\nwhere row_number_value <= 5\n\nunion all\n\nselect\n    *\n    , 0 as duplicate_count\n    , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom\n    random_sample\nwhere\n    row_number_value <= 5\n    and not exists (select 1 from duplicates_summary)", "relation_name": "tuva.data_quality.primary_keys_procedure_procedure_id", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:59.494466Z", "completed_at": "2025-06-03T19:49:59.511007Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:59.511276Z", "completed_at": "2025-06-03T19:49:59.511282Z"}], "thread_id": "Thread-4", "execution_time": 0.017438173294067383, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.core__stg_clinical_procedure", "compiled": true, "compiled_code": "\n\nselect\n    cast(procedure_id as TEXT) as procedure_id\n    , cast(person_id as TEXT) as person_id\n    , cast(null as TEXT) as member_id\n    , cast(patient_id as TEXT) as patient_id\n    , cast(encounter_id as TEXT) as encounter_id\n    , cast(claim_id as TEXT) as claim_id\n    , try_cast( procedure_date as date ) as procedure_date\n    , cast(source_code_type as TEXT) as source_code_type\n    , cast(source_code as TEXT) as source_code\n    , cast(source_description as TEXT) as source_description\n    , cast(normalized_code_type as TEXT) as normalized_code_type\n    , cast(normalized_code as TEXT) as normalized_code\n    , cast(normalized_description as TEXT) as normalized_description\n    , cast(modifier_1 as TEXT) as modifier_1\n    , cast(modifier_2 as TEXT) as modifier_2\n    , cast(modifier_3 as TEXT) as modifier_3\n    , cast(modifier_4 as TEXT) as modifier_4\n    , cast(modifier_5 as TEXT) as modifier_5\n    , cast(practitioner_id as TEXT) as practitioner_id\n    , cast(data_source as TEXT) as data_source\n    , cast('2025-06-03 19:49:40.396647+00:00' as timestamp) as tuva_last_run\nfrom tuva.input_layer.input_layer__procedure", "relation_name": "tuva.core._stg_clinical_procedure", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:59.505936Z", "completed_at": "2025-06-03T19:49:59.511870Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:59.512376Z", "completed_at": "2025-06-03T19:49:59.512380Z"}], "thread_id": "Thread-1", "execution_time": 0.007050275802612305, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.accepted_values_input_layer__procedure_source_code_type__snomed_ct__hcpcs__icd_10_pcs__icd_9_pcs.7f308bb0f2", "compiled": true, "compiled_code": "\n    \n    \n\nwith all_values as (\n\n    select\n        source_code_type as value_field,\n        count(*) as n_records\n\n    from tuva.input_layer.input_layer__procedure\n    group by source_code_type\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    'snomed-ct','hcpcs','icd-10-pcs','icd-9-pcs'\n)\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:59.405610Z", "completed_at": "2025-06-03T19:49:59.662605Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:59.662863Z", "completed_at": "2025-06-03T19:49:59.662870Z"}], "thread_id": "Thread-2", "execution_time": 0.2580270767211914, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_expectations_expect_column_values_to_be_of_type_input_layer__patient_birth_date__date.eee569eb6d", "compiled": true, "compiled_code": "with relation_columns as (\n\n        \n        select\n            cast('PERSON_ID' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PATIENT_ID' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('FIRST_NAME' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('LAST_NAME' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('SEX' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('RACE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('BIRTH_DATE' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DEATH_DATE' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DEATH_FLAG' as TEXT) as relation_column,\n            cast('NUMBER' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('SOCIAL_SECURITY_NUMBER' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('ADDRESS' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('CITY' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('STATE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('ZIP_CODE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('COUNTY' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('LATITUDE' as TEXT) as relation_column,\n            cast('FLOAT' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('LONGITUDE' as TEXT) as relation_column,\n            cast('FLOAT' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PHONE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DATA_SOURCE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('FILE_NAME' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('INGEST_DATETIME' as TEXT) as relation_column,\n            cast('TIMESTAMP_NTZ' as TEXT) as relation_column_type\n        \n        \n    ),\n    test_data as (\n\n        select\n            *\n        from\n            relation_columns\n        where\n            relation_column = 'BIRTH_DATE'\n            and\n            relation_column_type not in ('DATE')\n\n    )\n    select *\n    from test_data", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:59.427874Z", "completed_at": "2025-06-03T19:49:59.670225Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:59.673063Z", "completed_at": "2025-06-03T19:49:59.673069Z"}], "thread_id": "Thread-3", "execution_time": 0.24689316749572754, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_expectations_expect_column_values_to_be_of_type_input_layer__patient_death_date__date.a2fbd5477f", "compiled": true, "compiled_code": "with relation_columns as (\n\n        \n        select\n            cast('PERSON_ID' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PATIENT_ID' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('FIRST_NAME' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('LAST_NAME' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('SEX' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('RACE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('BIRTH_DATE' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DEATH_DATE' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DEATH_FLAG' as TEXT) as relation_column,\n            cast('NUMBER' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('SOCIAL_SECURITY_NUMBER' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('ADDRESS' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('CITY' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('STATE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('ZIP_CODE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('COUNTY' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('LATITUDE' as TEXT) as relation_column,\n            cast('FLOAT' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('LONGITUDE' as TEXT) as relation_column,\n            cast('FLOAT' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PHONE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DATA_SOURCE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('FILE_NAME' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('INGEST_DATETIME' as TEXT) as relation_column,\n            cast('TIMESTAMP_NTZ' as TEXT) as relation_column_type\n        \n        \n    ),\n    test_data as (\n\n        select\n            *\n        from\n            relation_columns\n        where\n            relation_column = 'DEATH_DATE'\n            and\n            relation_column_type not in ('DATE')\n\n    )\n    select *\n    from test_data", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:59.513190Z", "completed_at": "2025-06-03T19:49:59.757002Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:59.757412Z", "completed_at": "2025-06-03T19:49:59.757421Z"}], "thread_id": "Thread-4", "execution_time": 0.24540281295776367, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_expectations_expect_column_to_exist_input_layer__procedure_claim_id.dcfe961a97", "compiled": true, "compiled_code": "\n\n    with test_data as (\n\n        select\n            cast('CLAIM_ID' as TEXT) as column_name,\n            4 as matching_column_index,\n            True as column_index_matches\n\n    )\n    select *\n    from test_data\n    where\n        not(matching_column_index >= 0 and column_index_matches)", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:59.663939Z", "completed_at": "2025-06-03T19:49:59.784131Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:59.785260Z", "completed_at": "2025-06-03T19:49:59.785269Z"}], "thread_id": "Thread-2", "execution_time": 0.1218721866607666, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_expectations_expect_column_to_exist_input_layer__procedure_encounter_id.bc2139a190", "compiled": true, "compiled_code": "\n\n    with test_data as (\n\n        select\n            cast('ENCOUNTER_ID' as TEXT) as column_name,\n            3 as matching_column_index,\n            True as column_index_matches\n\n    )\n    select *\n    from test_data\n    where\n        not(matching_column_index >= 0 and column_index_matches)", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:59.523536Z", "completed_at": "2025-06-03T19:49:59.784523Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:59.785874Z", "completed_at": "2025-06-03T19:49:59.785880Z"}], "thread_id": "Thread-1", "execution_time": 0.26338982582092285, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_expectations_expect_column_to_exist_input_layer__procedure_data_source.975c01f266", "compiled": true, "compiled_code": "\n\n    with test_data as (\n\n        select\n            cast('DATA_SOURCE' as TEXT) as column_name,\n            18 as matching_column_index,\n            True as column_index_matches\n\n    )\n    select *\n    from test_data\n    where\n        not(matching_column_index >= 0 and column_index_matches)", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:59.675572Z", "completed_at": "2025-06-03T19:49:59.786623Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:59.787502Z", "completed_at": "2025-06-03T19:49:59.787506Z"}], "thread_id": "Thread-3", "execution_time": 0.1127629280090332, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_expectations_expect_column_to_exist_input_layer__procedure_file_name.37ec1168f8", "compiled": true, "compiled_code": "\n\n    with test_data as (\n\n        select\n            cast('FILE_NAME' as TEXT) as column_name,\n            19 as matching_column_index,\n            True as column_index_matches\n\n    )\n    select *\n    from test_data\n    where\n        not(matching_column_index >= 0 and column_index_matches)", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:59.759352Z", "completed_at": "2025-06-03T19:49:59.937493Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:59.938872Z", "completed_at": "2025-06-03T19:49:59.938935Z"}], "thread_id": "Thread-4", "execution_time": 0.1807868480682373, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_expectations_expect_column_to_exist_input_layer__procedure_ingest_datetime.a6c2278e77", "compiled": true, "compiled_code": "\n\n    with test_data as (\n\n        select\n            cast('INGEST_DATETIME' as TEXT) as column_name,\n            20 as matching_column_index,\n            True as column_index_matches\n\n    )\n    select *\n    from test_data\n    where\n        not(matching_column_index >= 0 and column_index_matches)", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:59.789028Z", "completed_at": "2025-06-03T19:49:59.984918Z"}, {"name": "execute", "started_at": "2025-06-03T19:49:59.993310Z", "completed_at": "2025-06-03T19:49:59.993333Z"}], "thread_id": "Thread-2", "execution_time": 0.214461088180542, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_expectations_expect_column_to_exist_input_layer__procedure_modifier_1.e9255f54e7", "compiled": true, "compiled_code": "\n\n    with test_data as (\n\n        select\n            cast('MODIFIER_1' as TEXT) as column_name,\n            12 as matching_column_index,\n            True as column_index_matches\n\n    )\n    select *\n    from test_data\n    where\n        not(matching_column_index >= 0 and column_index_matches)", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:59.810990Z", "completed_at": "2025-06-03T19:49:59.990326Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:00.009351Z", "completed_at": "2025-06-03T19:50:00.009360Z"}], "thread_id": "Thread-3", "execution_time": 0.2098839282989502, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_expectations_expect_column_to_exist_input_layer__procedure_modifier_3.f53c3c1db7", "compiled": true, "compiled_code": "\n\n    with test_data as (\n\n        select\n            cast('MODIFIER_3' as TEXT) as column_name,\n            14 as matching_column_index,\n            True as column_index_matches\n\n    )\n    select *\n    from test_data\n    where\n        not(matching_column_index >= 0 and column_index_matches)", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:59.799994Z", "completed_at": "2025-06-03T19:50:00.002362Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:00.009959Z", "completed_at": "2025-06-03T19:50:00.009965Z"}], "thread_id": "Thread-1", "execution_time": 0.22211813926696777, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_expectations_expect_column_to_exist_input_layer__procedure_modifier_2.ed9bff8887", "compiled": true, "compiled_code": "\n\n    with test_data as (\n\n        select\n            cast('MODIFIER_2' as TEXT) as column_name,\n            13 as matching_column_index,\n            True as column_index_matches\n\n    )\n    select *\n    from test_data\n    where\n        not(matching_column_index >= 0 and column_index_matches)", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:49:59.942656Z", "completed_at": "2025-06-03T19:50:00.145166Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:00.145506Z", "completed_at": "2025-06-03T19:50:00.145515Z"}], "thread_id": "Thread-4", "execution_time": 0.20513629913330078, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_expectations_expect_column_to_exist_input_layer__procedure_modifier_4.9ad238487c", "compiled": true, "compiled_code": "\n\n    with test_data as (\n\n        select\n            cast('MODIFIER_4' as TEXT) as column_name,\n            15 as matching_column_index,\n            True as column_index_matches\n\n    )\n    select *\n    from test_data\n    where\n        not(matching_column_index >= 0 and column_index_matches)", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:00.013584Z", "completed_at": "2025-06-03T19:50:00.165396Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:00.165798Z", "completed_at": "2025-06-03T19:50:00.165809Z"}], "thread_id": "Thread-2", "execution_time": 0.15435314178466797, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_expectations_expect_column_to_exist_input_layer__procedure_modifier_5.36040817b5", "compiled": true, "compiled_code": "\n\n    with test_data as (\n\n        select\n            cast('MODIFIER_5' as TEXT) as column_name,\n            16 as matching_column_index,\n            True as column_index_matches\n\n    )\n    select *\n    from test_data\n    where\n        not(matching_column_index >= 0 and column_index_matches)", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:00.034558Z", "completed_at": "2025-06-03T19:50:00.188940Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:00.189207Z", "completed_at": "2025-06-03T19:50:00.189214Z"}], "thread_id": "Thread-1", "execution_time": 0.17686700820922852, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_expectations_expect_column_to_exist_input_layer__procedure_normalized_code_type.e89608c92b", "compiled": true, "compiled_code": "\n\n    with test_data as (\n\n        select\n            cast('NORMALIZED_CODE_TYPE' as TEXT) as column_name,\n            9 as matching_column_index,\n            True as column_index_matches\n\n    )\n    select *\n    from test_data\n    where\n        not(matching_column_index >= 0 and column_index_matches)", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:00.023649Z", "completed_at": "2025-06-03T19:50:00.189905Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:00.190559Z", "completed_at": "2025-06-03T19:50:00.190565Z"}], "thread_id": "Thread-3", "execution_time": 0.17872095108032227, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_expectations_expect_column_to_exist_input_layer__procedure_normalized_code.de4533f519", "compiled": true, "compiled_code": "\n\n    with test_data as (\n\n        select\n            cast('NORMALIZED_CODE' as TEXT) as column_name,\n            10 as matching_column_index,\n            True as column_index_matches\n\n    )\n    select *\n    from test_data\n    where\n        not(matching_column_index >= 0 and column_index_matches)", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:00.147273Z", "completed_at": "2025-06-03T19:50:00.317599Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:00.317867Z", "completed_at": "2025-06-03T19:50:00.317873Z"}], "thread_id": "Thread-4", "execution_time": 0.17141079902648926, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_expectations_expect_column_to_exist_input_layer__procedure_normalized_description.9c2d77c58a", "compiled": true, "compiled_code": "\n\n    with test_data as (\n\n        select\n            cast('NORMALIZED_DESCRIPTION' as TEXT) as column_name,\n            11 as matching_column_index,\n            True as column_index_matches\n\n    )\n    select *\n    from test_data\n    where\n        not(matching_column_index >= 0 and column_index_matches)", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:00.168811Z", "completed_at": "2025-06-03T19:50:00.328681Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:00.328951Z", "completed_at": "2025-06-03T19:50:00.328957Z"}], "thread_id": "Thread-2", "execution_time": 0.1619091033935547, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_expectations_expect_column_to_exist_input_layer__procedure_patient_id.0099c410a4", "compiled": true, "compiled_code": "\n\n    with test_data as (\n\n        select\n            cast('PATIENT_ID' as TEXT) as column_name,\n            2 as matching_column_index,\n            True as column_index_matches\n\n    )\n    select *\n    from test_data\n    where\n        not(matching_column_index >= 0 and column_index_matches)", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:00.330152Z", "completed_at": "2025-06-03T19:50:00.466879Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:00.468150Z", "completed_at": "2025-06-03T19:50:00.468173Z"}], "thread_id": "Thread-2", "execution_time": 0.13875794410705566, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_expectations_expect_column_to_exist_input_layer__procedure_procedure_id.18e30ad07c", "compiled": true, "compiled_code": "\n\n    with test_data as (\n\n        select\n            cast('PROCEDURE_ID' as TEXT) as column_name,\n            0 as matching_column_index,\n            True as column_index_matches\n\n    )\n    select *\n    from test_data\n    where\n        not(matching_column_index >= 0 and column_index_matches)", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:00.202754Z", "completed_at": "2025-06-03T19:50:00.467594Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:00.469023Z", "completed_at": "2025-06-03T19:50:00.469028Z"}], "thread_id": "Thread-3", "execution_time": 0.2673370838165283, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_expectations_expect_column_to_exist_input_layer__procedure_practitioner_id.3949d20c35", "compiled": true, "compiled_code": "\n\n    with test_data as (\n\n        select\n            cast('PRACTITIONER_ID' as TEXT) as column_name,\n            17 as matching_column_index,\n            True as column_index_matches\n\n    )\n    select *\n    from test_data\n    where\n        not(matching_column_index >= 0 and column_index_matches)", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:00.191845Z", "completed_at": "2025-06-03T19:50:00.467879Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:00.469512Z", "completed_at": "2025-06-03T19:50:00.469517Z"}], "thread_id": "Thread-1", "execution_time": 0.27939701080322266, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_expectations_expect_column_to_exist_input_layer__procedure_person_id.661a5cd324", "compiled": true, "compiled_code": "\n\n    with test_data as (\n\n        select\n            cast('PERSON_ID' as TEXT) as column_name,\n            1 as matching_column_index,\n            True as column_index_matches\n\n    )\n    select *\n    from test_data\n    where\n        not(matching_column_index >= 0 and column_index_matches)", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:00.319000Z", "completed_at": "2025-06-03T19:50:00.468769Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:00.470319Z", "completed_at": "2025-06-03T19:50:00.470325Z"}], "thread_id": "Thread-4", "execution_time": 0.1518840789794922, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_expectations_expect_column_to_exist_input_layer__procedure_procedure_date.f0338dda44", "compiled": true, "compiled_code": "\n\n    with test_data as (\n\n        select\n            cast('PROCEDURE_DATE' as TEXT) as column_name,\n            5 as matching_column_index,\n            True as column_index_matches\n\n    )\n    select *\n    from test_data\n    where\n        not(matching_column_index >= 0 and column_index_matches)", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:00.487845Z", "completed_at": "2025-06-03T19:50:00.635762Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:00.638748Z", "completed_at": "2025-06-03T19:50:00.638808Z"}], "thread_id": "Thread-3", "execution_time": 0.1667478084564209, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_expectations_expect_column_to_exist_input_layer__procedure_source_code_type.aa1ea0db74", "compiled": true, "compiled_code": "\n\n    with test_data as (\n\n        select\n            cast('SOURCE_CODE_TYPE' as TEXT) as column_name,\n            6 as matching_column_index,\n            True as column_index_matches\n\n    )\n    select *\n    from test_data\n    where\n        not(matching_column_index >= 0 and column_index_matches)", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:00.498441Z", "completed_at": "2025-06-03T19:50:00.636043Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:00.639806Z", "completed_at": "2025-06-03T19:50:00.639813Z"}], "thread_id": "Thread-1", "execution_time": 0.16730284690856934, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_expectations_expect_column_to_exist_input_layer__procedure_source_description.33757c82dd", "compiled": true, "compiled_code": "\n\n    with test_data as (\n\n        select\n            cast('SOURCE_DESCRIPTION' as TEXT) as column_name,\n            8 as matching_column_index,\n            True as column_index_matches\n\n    )\n    select *\n    from test_data\n    where\n        not(matching_column_index >= 0 and column_index_matches)", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:00.508230Z", "completed_at": "2025-06-03T19:50:00.642122Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:00.645878Z", "completed_at": "2025-06-03T19:50:00.645888Z"}], "thread_id": "Thread-4", "execution_time": 0.17275619506835938, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_expectations_expect_column_values_to_be_in_type_list_input_layer__procedure_ingest_datetime__date__datetime__time__timestamp__timestamp_ntz__timestampntz__timestamp_ltz__timestampltz__timestamp_tz__timestamptz__timestamp_with_time_zone__timestamp_without_time_zone__datetime2__datetimeoffset.94623dff77", "compiled": true, "compiled_code": "with relation_columns as (\n\n        \n        select\n            cast('PROCEDURE_ID' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PERSON_ID' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PATIENT_ID' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('ENCOUNTER_ID' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('CLAIM_ID' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('SOURCE_CODE_TYPE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('SOURCE_CODE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('SOURCE_DESCRIPTION' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('NORMALIZED_CODE_TYPE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('NORMALIZED_CODE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('NORMALIZED_DESCRIPTION' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('MODIFIER_1' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('MODIFIER_2' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('MODIFIER_3' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('MODIFIER_4' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('MODIFIER_5' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PRACTITIONER_ID' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DATA_SOURCE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('FILE_NAME' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('INGEST_DATETIME' as TEXT) as relation_column,\n            cast('TIMESTAMP_NTZ' as TEXT) as relation_column_type\n        \n        \n    ),\n    test_data as (\n\n        select\n            *\n        from\n            relation_columns\n        where\n            relation_column = 'INGEST_DATETIME'\n            and\n            relation_column_type not in ('DATE', 'DATETIME', 'TIME', 'TIMESTAMP', 'TIMESTAMP_NTZ', 'TIMESTAMPNTZ', 'TIMESTAMP_LTZ', 'TIMESTAMPLTZ', 'TIMESTAMP_TZ', 'TIMESTAMPTZ', 'TIMESTAMP WITH TIME ZONE', 'TIMESTAMP WITHOUT TIME ZONE', 'DATETIME2', 'DATETIMEOFFSET')\n\n    )\n    select *\n    from test_data", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:00.474172Z", "completed_at": "2025-06-03T19:50:00.644512Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:00.647112Z", "completed_at": "2025-06-03T19:50:00.647120Z"}], "thread_id": "Thread-2", "execution_time": 0.1757962703704834, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_expectations_expect_column_to_exist_input_layer__procedure_source_code.cffb207595", "compiled": true, "compiled_code": "\n\n    with test_data as (\n\n        select\n            cast('SOURCE_CODE' as TEXT) as column_name,\n            7 as matching_column_index,\n            True as column_index_matches\n\n    )\n    select *\n    from test_data\n    where\n        not(matching_column_index >= 0 and column_index_matches)", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:00.671951Z", "completed_at": "2025-06-03T19:50:00.691848Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:00.692817Z", "completed_at": "2025-06-03T19:50:00.692827Z"}], "thread_id": "Thread-1", "execution_time": 0.04369807243347168, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.not_null_input_layer__procedure_person_id.980a296bcb", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect person_id\nfrom tuva.input_layer.input_layer__procedure\nwhere person_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:00.678857Z", "completed_at": "2025-06-03T19:50:00.707082Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:00.707786Z", "completed_at": "2025-06-03T19:50:00.707798Z"}], "thread_id": "Thread-4", "execution_time": 0.05350995063781738, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.not_null_input_layer__procedure_procedure_id.95a43419f0", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect procedure_id\nfrom tuva.input_layer.input_layer__procedure\nwhere procedure_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:00.684694Z", "completed_at": "2025-06-03T19:50:00.711276Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:00.724722Z", "completed_at": "2025-06-03T19:50:00.724732Z"}], "thread_id": "Thread-2", "execution_time": 0.057057857513427734, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.unique_input_layer__procedure_procedure_id.ff019e0af8", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    procedure_id as unique_field,\n    count(*) as n_records\n\nfrom tuva.input_layer.input_layer__procedure\nwhere procedure_id is not null\ngroup by procedure_id\nhaving count(*) > 1\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:00.714698Z", "completed_at": "2025-06-03T19:50:00.726918Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:00.741347Z", "completed_at": "2025-06-03T19:50:00.741363Z"}], "thread_id": "Thread-1", "execution_time": 0.04785013198852539, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.data_quality__eligibility_address", "compiled": true, "compiled_code": "\n\nselect distinct \n    m.data_source\n    ,coalesce(cast(m.enrollment_start_date as TEXT),cast('1900-01-01' as TEXT)) as source_date\n    ,'eligibility' as table_name\n    ,'Member ID | Enrollment Start Date' as drill_down_key\n    ,coalesce(m.member_id, 'NULL') as drill_down_value\n    ,'ELIGIBILITY' as claim_type\n    ,'ADDRESS' as field_name\n    ,case when m.address is  null then 'null'\n                             else 'valid' end as bucket_name\n    ,cast(null as TEXT) as invalid_reason\n    ,cast(address as TEXT) as field_value\n    , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom tuva.input_layer.eligibility as m", "relation_name": "tuva.data_quality.eligibility_address", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:00.727157Z", "completed_at": "2025-06-03T19:50:00.749498Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:00.756976Z", "completed_at": "2025-06-03T19:50:00.756985Z"}], "thread_id": "Thread-4", "execution_time": 0.03174591064453125, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.data_quality__eligibility_birth_date", "compiled": true, "compiled_code": "\n\nwith base as (\n    select * \n    from tuva.input_layer.eligibility\n\n)\n, unique_field as (\n    select distinct member_id\n        ,cast(birth_date as TEXT) as field\n        ,data_source\n    from base\n)\n, claim_grain as (\n    select member_id\n        ,data_source\n        ,count(*) as frequency\n    from unique_field\n    group by member_id\n        ,data_source\n)\n, claim_agg as (\nselect\n    member_id\n    , data_source\n    , \n    listagg(\n        coalesce(field, 'null'),\n        ', '\n        )\n        within group (order by field desc) AS field_aggregated -- noqa\nfrom\n    unique_field\ngroup by\n    data_source\n    , member_id\n)\nselect distinct\n    m.data_source\n    ,coalesce(cast(m.enrollment_start_date as TEXT),cast('1900-01-01' as TEXT)) as source_date\n    ,'ELIGIBILITY' as table_name\n    ,'Member ID' as drill_down_key\n    ,coalesce(m.member_id, 'NULL') as drill_down_value\n    ,'ELIGIBILITY' as claim_type\n    ,'BIRTH_DATE' as field_name\n    ,case \n        when cg.frequency > 1 then 'multiple'\n        when m.birth_date > cast(substring('2025-06-03 19:49:40.396647+00:00',1,10) as date) then 'invalid'\n        when m.birth_date <= cast('1901-01-01' as date) then 'invalid'\n        when m.birth_date is null then 'null'\n        else 'valid' \n    end as bucket_name\n    ,case \n        when cg.frequency > 1 then 'multiple'\n        when m.birth_date > cast(substring('2025-06-03 19:49:40.396647+00:00',1,10) as date) then 'future'\n        when m.birth_date <= cast('1901-01-01' as date) then 'too old'\n        else null\n    end as invalid_reason\n,cast(\n  substr(agg.field_aggregated, 1, 255)\n as TEXT) as field_value\n, '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom base as m\nleft outer join claim_grain as cg on m.member_id = cg.member_id and m.data_source = cg.data_source\nleft outer join claim_agg as agg on m.member_id = agg.member_id and m.data_source = agg.data_source", "relation_name": "tuva.data_quality.eligibility_birth_date", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:00.741800Z", "completed_at": "2025-06-03T19:50:00.757541Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:00.758115Z", "completed_at": "2025-06-03T19:50:00.758120Z"}], "thread_id": "Thread-2", "execution_time": 0.031760215759277344, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.data_quality__eligibility_city", "compiled": true, "compiled_code": "\n\nSELECT DISTINCT \n    m.data_source\n    ,coalesce(cast(m.enrollment_start_date as TEXT),cast('1900-01-01' as TEXT)) as source_date\n    ,'ELIGIBILITY' AS table_name\n    ,'Member ID | Enrollment Start Date' AS drill_down_key\n        ,coalesce(m.member_id, 'NULL') as drill_down_value\n    ,'ELIGIBILITY' AS claim_type\n    ,'CITY' AS field_name\n    ,case when m.city is  null then 'null'\n                             else 'valid' end as bucket_name\n    ,cast(null as TEXT) as invalid_reason\n    ,CAST(city as TEXT) AS field_value\n    , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nFROM tuva.input_layer.eligibility m", "relation_name": "tuva.data_quality.eligibility_city", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:00.749869Z", "completed_at": "2025-06-03T19:50:00.759299Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:00.769075Z", "completed_at": "2025-06-03T19:50:00.769087Z"}], "thread_id": "Thread-1", "execution_time": 0.020358800888061523, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.data_quality__eligibility_data_source", "compiled": true, "compiled_code": "\n\nselect distinct -- to bring to claim_ID grain \n    m.data_source\n    ,coalesce(cast(m.enrollment_start_date as TEXT),cast('1900-01-01' as TEXT)) as source_date\n    ,'ELIGIBILITY' as table_name\n    ,'Member ID | Enrollment Start Date' as drill_down_key\n        ,coalesce(m.member_id, 'NULL') as drill_down_value\n    ,'ELIGIBILITY' as claim_type\n    ,'DATA_SOURCE' as field_name\n    ,case when m.data_source is not null then 'valid' else 'null' end as bucket_name\n    ,cast(null as TEXT) as invalid_reason\n    ,cast(data_source as TEXT) as field_value\n    , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom tuva.input_layer.eligibility as m", "relation_name": "tuva.data_quality.eligibility_data_source", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:00.759760Z", "completed_at": "2025-06-03T19:50:00.777297Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:00.777774Z", "completed_at": "2025-06-03T19:50:00.777782Z"}], "thread_id": "Thread-4", "execution_time": 0.019299030303955078, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.data_quality__eligibility_death_date", "compiled": true, "compiled_code": "\n\nwith base as (\n    select * \n    from tuva.input_layer.eligibility\n\n),\nunique_field as (\n    select distinct member_id\n        ,cast(death_date as TEXT) as field\n        ,data_source\n    from base\n),\nclaim_grain as (\n    select member_id\n        ,data_source\n        ,count(*) as frequency\n    from unique_field\n    group by member_id\n        ,data_source\n),\nclaim_agg as (\nselect\n    member_id,\n    data_source\n    , \n    listagg(\n        coalesce(field, 'null'),\n        ', '\n        )\n        within group (order by field desc) as field_aggregated -- noqa\nfrom\n    unique_field\ngroup by\n    data_source,\n    member_id\n)\nselect distinct\n    m.data_source\n    ,coalesce(cast(m.enrollment_start_date as TEXT),cast('1900-01-01' as TEXT)) as source_date\n    ,'ELIGIBILITY' as table_name\n    ,'Member ID' as drill_down_key\n    ,coalesce(m.member_id, 'NULL') as drill_down_value\n    ,'ELIGIBILITY' as claim_type\n    ,'DEATH_DATE' as field_name\n    ,case\n        when cg.frequency > 1 then 'multiple'\n        when m.death_date > cast(substring('2025-06-03 19:49:40.396647+00:00',1,10) as date) then 'invalid'\n        when m.death_date <= cast('1901-01-01' as date) then 'invalid'\n        when m.death_date <= m.birth_date then 'invalid'\n        when m.death_date is null then 'null'\n        else 'valid'\n    end as bucket_name\n    ,case\n        when cg.frequency > 1 then 'multiple'\n        when m.death_date > cast(substring('2025-06-03 19:49:40.396647+00:00',1,10) as date) then 'future'\n        when m.death_date <= cast('1901-01-01' as date) then 'too old'\n        when m.death_date <= m.birth_date then 'death date before birth date'\n        else null\n    end as invalid_reason\n    ,cast(\n  substr(agg.field_aggregated, 1, 255)\n as TEXT) as field_value\n    , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom base as m\nleft outer join claim_grain as cg on m.member_id = cg.member_id and m.data_source = cg.data_source\nleft outer join claim_agg as agg on m.member_id = agg.member_id and m.data_source = agg.data_source", "relation_name": "tuva.data_quality.eligibility_death_date", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:00.770401Z", "completed_at": "2025-06-03T19:50:00.784483Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:00.789411Z", "completed_at": "2025-06-03T19:50:00.789417Z"}], "thread_id": "Thread-2", "execution_time": 0.029988765716552734, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.data_quality__eligibility_death_flag", "compiled": true, "compiled_code": "\n\nselect distinct\n    m.data_source\n    ,coalesce(cast(m.enrollment_start_date as TEXT),cast('1900-01-01' as TEXT)) as source_date\n    ,'ELIGIBILITY' as table_name\n    ,'Member ID' as drill_down_key\n    ,coalesce(m.member_id, 'NULL') as drill_down_value\n    ,'ELIGIBILITY' as claim_type\n    ,'DEATH_FLAG' as field_name\n    ,case\n        when cast(cast(m.death_flag as integer) as TEXT) in ('1','0') then 'valid'\n        when m.death_flag is null then 'null'\n        else 'invalid'\n        end as bucket_name\n    ,cast(null as TEXT) as invalid_reason\n    ,cast(death_flag as TEXT) as field_value\n    , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom tuva.input_layer.eligibility as m", "relation_name": "tuva.data_quality.eligibility_death_flag", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:00.778210Z", "completed_at": "2025-06-03T19:50:00.796800Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:00.797369Z", "completed_at": "2025-06-03T19:50:00.797377Z"}], "thread_id": "Thread-1", "execution_time": 0.020503997802734375, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.data_quality__eligibility_dual_status_code", "compiled": true, "compiled_code": "\n\nselect distinct\n    m.data_source\n    ,coalesce(cast(m.enrollment_start_date as TEXT),cast('1900-01-01' as TEXT)) as source_date\n    ,'ELIGIBILITY' as table_name\n    ,'Member ID | Enrollment Start Date' as drill_down_key\n        ,coalesce(m.member_id, 'NULL') as drill_down_value\n    ,'ELIGIBILITY' as claim_type\n    ,'DUAL_STATUS_CODE' as field_name\n    ,case when m.dual_status_code is null then 'null'\n          when term.dual_status_code is null then 'invalid'\n                             else 'valid' end as bucket_name\n    ,case\n        when m.dual_status_code is not null and term.dual_status_code is null then 'Dual Status Code does not join to Terminology Medicare Dual Eligibility table'\n        else null\n    end as invalid_reason\n    , m.dual_status_code || '|' || coalesce(term.dual_status_description,'') as field_value\n    , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom tuva.input_layer.eligibility as m\nleft outer join tuva.terminology.medicare_dual_eligibility as term on m.dual_status_code = term.dual_status_code", "relation_name": "tuva.data_quality.eligibility_dual_status_code", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:00.791077Z", "completed_at": "2025-06-03T19:50:00.807842Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:00.808499Z", "completed_at": "2025-06-03T19:50:00.808507Z"}], "thread_id": "Thread-4", "execution_time": 0.018616676330566406, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.data_quality__eligibility_end_date", "compiled": true, "compiled_code": "\n\nselect distinct\n    m.data_source\n    ,coalesce(cast(m.enrollment_start_date as TEXT),cast('1900-01-01' as TEXT)) as source_date\n    ,'ELIGIBILITY' as table_name\n    ,'Member ID' as drill_down_key\n    ,coalesce(m.member_id,'NULL') as drill_down_value\n    ,'ELIGIBILITY' as claim_type\n    ,'ENROLLMENT_END_DATE' as field_name\n    ,case\n        when m.enrollment_end_date <= cast('1901-01-01' as date) then 'invalid'\n        when m.enrollment_end_date < m.enrollment_start_date then 'invalid'\n        when m.enrollment_end_date is null then 'null'\n        else 'valid'\n    end as bucket_name\n    ,case\n\n        when m.enrollment_end_date <= cast('1901-01-01' as date) then 'too old'\n        when m.enrollment_end_date < m.enrollment_start_date then 'end date before start date'\n        else null\n    end as invalid_reason\n    ,cast(enrollment_end_date as TEXT) as field_value\n    , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom tuva.input_layer.eligibility as m", "relation_name": "tuva.data_quality.eligibility_end_date", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:00.797782Z", "completed_at": "2025-06-03T19:50:00.809211Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:00.819860Z", "completed_at": "2025-06-03T19:50:00.819895Z"}], "thread_id": "Thread-2", "execution_time": 0.029180049896240234, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.data_quality__eligibility_first_name", "compiled": true, "compiled_code": "\n\nselect distinct \n    m.data_source\n    ,coalesce(cast(m.enrollment_start_date as TEXT),cast('1900-01-01' as TEXT)) as source_date\n    ,'ELIGIBILITY' as table_name\n    ,'Member ID | Enrollment Start Date' as drill_down_key\n    ,coalesce(m.member_id, 'NULL') as drill_down_value\n    ,'ELIGIBILITY' as claim_type\n    ,'FIRST_NAME' as field_name\n    ,case when m.first_name is null then 'null'\n                             else 'valid' end as bucket_name\n    ,cast(null as TEXT) as invalid_reason\n    ,cast(first_name as TEXT) as field_value\n    , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom tuva.input_layer.eligibility as m", "relation_name": "tuva.data_quality.eligibility_first_name", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:00.809792Z", "completed_at": "2025-06-03T19:50:00.827514Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:00.842080Z", "completed_at": "2025-06-03T19:50:00.842096Z"}], "thread_id": "Thread-1", "execution_time": 0.034097909927368164, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.data_quality__eligibility_gender", "compiled": true, "compiled_code": "\n\nselect distinct \n    m.data_source\n    ,coalesce(cast(m.enrollment_start_date as TEXT),cast('1900-01-01' as TEXT)) as source_date\n    ,'ELIGIBILITY' as table_name\n    ,'Member ID | Enrollment Start Date' as drill_down_key\n    ,coalesce(m.member_id, 'NULL') as drill_down_value\n    ,'ELIGIBILITY' as claim_type\n    ,'GENDER' as field_name\n    ,case when m.gender is  null then 'null'\n          when term.gender is null then 'invalid'\n                             else 'valid' end as bucket_name\n    ,case\n        when m.gender is not null and term.gender is null then 'Gender does not join to Terminology Gender table'\n        else null\n    end as invalid_reason\n    ,cast(m.gender as TEXT) as field_value\n    , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom tuva.input_layer.eligibility as m\nleft outer join tuva.terminology.gender as term on m.gender = term.gender", "relation_name": "tuva.data_quality.eligibility_gender", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:00.655363Z", "completed_at": "2025-06-03T19:50:00.841423Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:00.843504Z", "completed_at": "2025-06-03T19:50:00.843514Z"}], "thread_id": "Thread-3", "execution_time": 0.1974022388458252, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_expectations_expect_column_values_to_be_of_type_input_layer__procedure_procedure_date__date.047c95d347", "compiled": true, "compiled_code": "with relation_columns as (\n\n        \n        select\n            cast('PROCEDURE_ID' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PERSON_ID' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PATIENT_ID' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('ENCOUNTER_ID' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('CLAIM_ID' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('SOURCE_CODE_TYPE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('SOURCE_CODE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('SOURCE_DESCRIPTION' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('NORMALIZED_CODE_TYPE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('NORMALIZED_CODE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('NORMALIZED_DESCRIPTION' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('MODIFIER_1' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('MODIFIER_2' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('MODIFIER_3' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('MODIFIER_4' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('MODIFIER_5' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PRACTITIONER_ID' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DATA_SOURCE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('FILE_NAME' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('INGEST_DATETIME' as TEXT) as relation_column,\n            cast('TIMESTAMP_NTZ' as TEXT) as relation_column_type\n        \n        \n    ),\n    test_data as (\n\n        select\n            *\n        from\n            relation_columns\n        where\n            relation_column = 'PROCEDURE_DATE'\n            and\n            relation_column_type not in ('DATE')\n\n    )\n    select *\n    from test_data", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:00.828231Z", "completed_at": "2025-06-03T19:50:00.854563Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:00.878285Z", "completed_at": "2025-06-03T19:50:00.878294Z"}], "thread_id": "Thread-4", "execution_time": 0.05787086486816406, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.data_quality__eligibility_last_name", "compiled": true, "compiled_code": "\n\nselect distinct \n    m.data_source\n    ,coalesce(cast(m.enrollment_start_date as TEXT),cast('1900-01-01' as TEXT)) as source_date\n    ,'ELIGIBILITY' as table_name\n    ,'Member ID | Enrollment Start Date' as drill_down_key\n    ,coalesce(m.member_id, 'NULL') as drill_down_value\n    ,'ELIGIBILITY' as claim_type\n    ,'LAST_NAME' as field_name\n    ,case when m.last_name is null then 'null'\n                             else 'valid' end as bucket_name\n    ,cast(null as TEXT) as invalid_reason\n    ,cast(last_name as TEXT) as field_value\n    , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom tuva.input_layer.eligibility as m", "relation_name": "tuva.data_quality.eligibility_last_name", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:00.848048Z", "completed_at": "2025-06-03T19:50:00.891512Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:00.896635Z", "completed_at": "2025-06-03T19:50:00.896644Z"}], "thread_id": "Thread-2", "execution_time": 0.06964802742004395, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.data_quality__eligibility_medicare_status_code", "compiled": true, "compiled_code": "\n\nselect distinct \n    m.data_source\n    ,coalesce(cast(m.enrollment_start_date as TEXT),cast('1900-01-01' as TEXT)) as source_date\n    ,'ELIGIBILITY' as table_name\n    ,'Member ID | Enrollment Start Date' as drill_down_key\n    ,coalesce(m.member_id, 'NULL') as drill_down_value\n    ,'ELIGIBILITY' as claim_type\n    ,'MEDICARE_STATUS_CODE' as field_name\n    ,case when m.medicare_status_code is null then 'null'\n          when term.medicare_status_code is null then 'invalid'\n                             else 'valid' end as bucket_name\n    ,case\n        when m.medicare_status_code is not null and term.medicare_status_code is null then 'Medicare Status Code does not join to Terminology Medicare Status table'\n        else null\n    end as invalid_reason\n    , m.medicare_status_code || '|' || coalesce(term.medicare_status_description,'') as field_value\n    , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom tuva.input_layer.eligibility as m\nleft outer join tuva.terminology.medicare_status as term on m.medicare_status_code = term.medicare_status_code", "relation_name": "tuva.data_quality.eligibility_medicare_status_code", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:00.878827Z", "completed_at": "2025-06-03T19:50:00.921012Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:00.923495Z", "completed_at": "2025-06-03T19:50:00.923507Z"}], "thread_id": "Thread-1", "execution_time": 0.04765176773071289, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.data_quality__eligibility_member_id", "compiled": true, "compiled_code": "\n\nselect distinct -- to bring to claim_ID grain \n    m.data_source\n    ,coalesce(cast(m.enrollment_start_date as TEXT),cast('1900-01-01' as TEXT)) as source_date\n    ,'ELIGIBILITY' as table_name\n    ,'Member ID | Enrollment Start Date' as drill_down_key\n    ,coalesce(m.member_id, 'NULL') as drill_down_value\n    ,'ELIGIBILITY' as claim_type\n    ,'MEMBER_ID' as field_name\n    ,case when m.member_id is not null then 'valid' else 'null' end as bucket_name\n    ,cast(null as TEXT) as invalid_reason\n    ,cast(member_id as TEXT) as field_value\n    , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom tuva.input_layer.eligibility as m", "relation_name": "tuva.data_quality.eligibility_member_id", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:00.901887Z", "completed_at": "2025-06-03T19:50:00.924092Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:00.931320Z", "completed_at": "2025-06-03T19:50:00.931327Z"}], "thread_id": "Thread-3", "execution_time": 0.05381608009338379, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.data_quality__eligibility_original_reason_entitlement_code", "compiled": true, "compiled_code": "\n\nselect distinct \n    m.data_source\n    ,coalesce(cast(m.enrollment_start_date as TEXT),cast('1900-01-01' as TEXT)) as source_date\n    ,'ELIGIBILITY' as table_name\n    ,'Member ID | Enrollment Start Date' as drill_down_key\n    ,coalesce(m.member_id, 'NULL') as drill_down_value\n    ,'ELIGIBILITY' as claim_type\n    ,'ORIGINAL_REASON_ENTITLEMENT_CODE' as field_name\n    ,case when m.original_reason_entitlement_code is null then 'null'\n          when term.original_reason_entitlement_code is null then 'invalid'\n                             else 'valid' end as bucket_name\n    ,case\n        when m.original_reason_entitlement_code is not null and term.original_reason_entitlement_code is null then 'Original Reason Entitlement Code does not join to Terminology Original Reason Entitlement Code table'\n        else null\n    end as invalid_reason\n    , m.original_reason_entitlement_code || '|' || coalesce(term.original_reason_entitlement_description,'') as field_value\n    , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom tuva.input_layer.eligibility as m\nleft outer join tuva.terminology.medicare_orec as term on m.original_reason_entitlement_code = term.original_reason_entitlement_code", "relation_name": "tuva.data_quality.eligibility_original_reason_entitlement_code", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:00.924324Z", "completed_at": "2025-06-03T19:50:00.940680Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:00.941708Z", "completed_at": "2025-06-03T19:50:00.941716Z"}], "thread_id": "Thread-4", "execution_time": 0.0239717960357666, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.data_quality__eligibility_payer", "compiled": true, "compiled_code": "\n\nselect distinct\n    m.data_source\n    ,coalesce(cast(m.enrollment_start_date as TEXT),cast('1900-01-01' as TEXT)) as source_date\n    ,'ELIGIBILITY' as table_name\n    ,'Member ID | Enrollment Start Date' as drill_down_key\n    ,coalesce(m.member_id, 'NULL') as drill_down_value\n    ,'ELIGIBILITY' as claim_type\n    ,'PAYER' as field_name\n    ,case when m.payer is not null then 'valid' else 'null' end as bucket_name\n    ,cast(null as TEXT) as invalid_reason\n    ,cast(payer as TEXT) as field_value\n    , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom tuva.input_layer.eligibility as m", "relation_name": "tuva.data_quality.eligibility_payer", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:00.931964Z", "completed_at": "2025-06-03T19:50:00.941499Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:00.948484Z", "completed_at": "2025-06-03T19:50:00.948492Z"}], "thread_id": "Thread-2", "execution_time": 0.025658130645751953, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.data_quality__eligibility_payer_type", "compiled": true, "compiled_code": "\n\nselect distinct \n    m.data_source\n    ,coalesce(cast(m.enrollment_start_date as TEXT),cast('1900-01-01' as TEXT)) as source_date\n    ,'ELIGIBILITY' as table_name\n    ,'Member ID | Enrollment Start Date' as drill_down_key\n    ,coalesce(m.member_id, 'NULL') as drill_down_value\n    ,'ELIGIBILITY' as claim_type\n    ,'PAYER_TYPE' as field_name\n    ,case when m.payer_type is  null then 'null'\n          when term.payer_type is null then 'invalid'\n                             else 'valid' end as bucket_name\n    ,case\n        when m.payer_type is not null and term.payer_type is null then 'Payer Type does not join to Terminology Payer Type table'\n        else null\n    end as invalid_reason\n    ,cast(m.payer_type as TEXT) as field_value\n    , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom tuva.input_layer.eligibility as m\nleft outer join tuva.terminology.payer_type as term on m.payer_type = term.payer_type", "relation_name": "tuva.data_quality.eligibility_payer_type", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:00.942152Z", "completed_at": "2025-06-03T19:50:00.958789Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:00.959683Z", "completed_at": "2025-06-03T19:50:00.959690Z"}], "thread_id": "Thread-1", "execution_time": 0.019781112670898438, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.data_quality__eligibility_person_id", "compiled": true, "compiled_code": "\n\nselect distinct\n    m.data_source\n    ,coalesce(cast(m.enrollment_start_date as TEXT),cast('1900-01-01' as TEXT)) as source_date\n    ,'ELIGIBILITY' as table_name\n    ,'Member ID | Enrollment Start Date' as drill_down_key\n    ,coalesce(m.member_id, 'NULL') as drill_down_value\n    ,'ELIGIBILITY' as claim_type\n    ,'PERSON_ID' as field_name\n    ,case when m.person_id is not null then 'valid' else 'null' end as bucket_name\n    ,cast(null as TEXT) as invalid_reason\n    ,cast(person_id as TEXT) as field_value\n    , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom tuva.input_layer.eligibility as m", "relation_name": "tuva.data_quality.eligibility_person_id", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:00.949247Z", "completed_at": "2025-06-03T19:50:00.960272Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:00.978708Z", "completed_at": "2025-06-03T19:50:00.978730Z"}], "thread_id": "Thread-3", "execution_time": 0.037613868713378906, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.data_quality__eligibility_phone", "compiled": true, "compiled_code": "\n\nselect distinct \n    m.data_source\n    ,coalesce(cast(m.enrollment_start_date as TEXT),cast('1900-01-01' as TEXT)) as source_date\n    ,'ELIGIBILITY' as table_name\n    ,'Member ID | Enrollment Start Date' as drill_down_key\n    ,coalesce(m.member_id, 'NULL') as drill_down_value\n    ,'ELIGIBILITY' as claim_type\n    ,'PHONE' as field_name\n    ,case when m.phone is null then 'null'\n                             else 'valid' end as bucket_name\n    ,cast(null as TEXT) as invalid_reason\n    ,cast(phone as TEXT) as field_value\n    , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom tuva.input_layer.eligibility as m", "relation_name": "tuva.data_quality.eligibility_phone", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:00.960520Z", "completed_at": "2025-06-03T19:50:00.980411Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:00.981705Z", "completed_at": "2025-06-03T19:50:00.981713Z"}], "thread_id": "Thread-4", "execution_time": 0.023266077041625977, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.data_quality__eligibility_plan", "compiled": true, "compiled_code": "\n\nselect distinct\n    m.data_source\n    ,coalesce(cast(m.enrollment_start_date as TEXT),cast('1900-01-01' as TEXT)) as source_date\n    ,'ELIGIBILITY' as table_name\n    ,'Member ID | Enrollment Start Date' as drill_down_key\n    ,coalesce(m.member_id, 'NULL') as drill_down_value\n    ,'ELIGIBILITY' as claim_type\n    ,'PLAN' as field_name\n    ,case when m.plan is not null then 'valid' else 'null' end as bucket_name\n    ,cast(null as TEXT) as invalid_reason\n    ,cast(m.plan as TEXT) as field_value\n, '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom tuva.input_layer.eligibility as m", "relation_name": "tuva.data_quality.eligibility_plan", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:00.968691Z", "completed_at": "2025-06-03T19:50:00.981149Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:00.993455Z", "completed_at": "2025-06-03T19:50:00.993464Z"}], "thread_id": "Thread-2", "execution_time": 0.03440213203430176, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.data_quality__eligibility_race", "compiled": true, "compiled_code": "\n\nselect distinct -- to bring to claim_ID grain \n    m.data_source\n    ,coalesce(cast(m.enrollment_start_date as TEXT),cast('1900-01-01' as TEXT)) as source_date\n    ,'ELIGIBILITY' as table_name\n    ,'Member ID | Enrollment Start Date' as drill_down_key\n    ,coalesce(m.member_id, 'NULL') as drill_down_value\n    ,'ELIGIBILITY' as claim_type\n    ,'RACE' as field_name\n    ,case when m.race is  null then 'null'\n          when r.description is  null then 'invalid'\n                             else 'valid' end as bucket_name\n    ,case\n        when m.race is not null and r.description is null then 'Race does not join to terminology race table'\n        else null\n    end as invalid_reason\n    ,cast(race as TEXT) as field_value\n, '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom tuva.input_layer.eligibility as m\nleft outer join tuva.terminology.race as r on m.race=r.description", "relation_name": "tuva.data_quality.eligibility_race", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:00.982181Z", "completed_at": "2025-06-03T19:50:01.003169Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:01.004161Z", "completed_at": "2025-06-03T19:50:01.004170Z"}], "thread_id": "Thread-1", "execution_time": 0.024785757064819336, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.data_quality__eligibility_start_date", "compiled": true, "compiled_code": "\n\nselect distinct\n    m.data_source\n    ,coalesce(cast(m.enrollment_start_date as TEXT),cast('1900-01-01' as TEXT)) as source_date\n    ,'ELIGIBILITY' as table_name\n    ,'Member ID' as drill_down_key\n    ,coalesce(m.member_id, 'NULL') as drill_down_value\n    ,'ELIGIBILITY' as claim_type\n    ,'ENROLLMENT_START_DATE' as field_name\n    ,case\n        when m.enrollment_start_date > cast(substring('2025-06-03 19:49:40.396647+00:00',1,10) as date) then 'invalid'\n        when m.enrollment_start_date <= cast('1901-01-01' as date) then 'invalid'\n        when m.enrollment_start_date is null then 'null'\n        else 'valid'\n    end as bucket_name\n    ,case\n        when m.enrollment_start_date > cast(substring('2025-06-03 19:49:40.396647+00:00',1,10) as date) then 'future'\n        when m.enrollment_start_date <= cast('1901-01-01' as date) then 'too old'\n    else null\n    end as invalid_reason\n    ,cast(enrollment_start_date as TEXT) as field_value\n, '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom tuva.input_layer.eligibility as m", "relation_name": "tuva.data_quality.eligibility_start_date", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:00.994908Z", "completed_at": "2025-06-03T19:50:01.004965Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:01.019275Z", "completed_at": "2025-06-03T19:50:01.019286Z"}], "thread_id": "Thread-3", "execution_time": 0.03806281089782715, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.data_quality__eligibility_state", "compiled": true, "compiled_code": "\n\nselect distinct \n    m.data_source\n    ,coalesce(cast(m.enrollment_start_date as TEXT),cast('1900-01-01' as TEXT)) as source_date\n    ,'ELIGIBILITY' as table_name\n    ,'Member ID | Enrollment Start Date' as drill_down_key\n    ,coalesce(m.member_id, 'NULL') as drill_down_value\n    ,'ELIGIBILITY' as claim_type\n    ,'STATE' as field_name\n    ,case when m.state is  null then 'null'\n          when term.ssa_fips_state_name is null then 'invalid'\n                             else 'valid' end as bucket_name\n    ,case\n        when m.state is not null and term.ssa_fips_state_name is null then 'State does not join to Terminology SSA_FIPS_STATE table'\n        else null\n    end as invalid_reason\n    ,cast(state as TEXT) as field_value\n, '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom tuva.input_layer.eligibility as m\nleft outer join tuva.reference_data.ssa_fips_state as term on m.state = term.ssa_fips_state_name", "relation_name": "tuva.data_quality.eligibility_state", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:01.005216Z", "completed_at": "2025-06-03T19:50:01.022162Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:01.029269Z", "completed_at": "2025-06-03T19:50:01.029279Z"}], "thread_id": "Thread-4", "execution_time": 0.026630163192749023, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.data_quality__eligibility_zip_code", "compiled": true, "compiled_code": "\n\nselect distinct -- to bring to claim_ID grain\n    m.data_source\n    ,coalesce(cast(m.enrollment_start_date as TEXT),cast('1900-01-01' as TEXT)) as source_date\n    ,'ELIGIBILITY' as table_name\n    ,'Member ID | Enrollment Start Date' as drill_down_key\n    ,coalesce(m.member_id, 'NULL') as drill_down_value\n    ,'ELIGIBILITY' as claim_type\n    ,'ZIP_CODE' as field_name\n    \n    ,case when m.zip_code is  null then 'null'\n          when length(m.zip_code) in  (5,9,10) then 'valid'\n                             else 'invalid' end as bucket_name\n    ,case\n        when m.zip_code is not null and length(m.zip_code) not in (5,9,10) then 'Invalid Zip Code Length'\n        else null\n     end as invalid_reason\n    \n    ,cast(zip_code as TEXT) as field_value\n, '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom tuva.input_layer.eligibility as m", "relation_name": "tuva.data_quality.eligibility_zip_code", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:01.022813Z", "completed_at": "2025-06-03T19:50:01.038392Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:01.039629Z", "completed_at": "2025-06-03T19:50:01.039638Z"}], "thread_id": "Thread-1", "execution_time": 0.019752025604248047, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.input_layer__eligibility", "compiled": true, "compiled_code": "\nselect *\nfrom tuva.input_layer.eligibility", "relation_name": "tuva.input_layer.input_layer__eligibility", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:01.030132Z", "completed_at": "2025-06-03T19:50:01.046526Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:01.050700Z", "completed_at": "2025-06-03T19:50:01.050710Z"}], "thread_id": "Thread-3", "execution_time": 0.02893805503845215, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.data_quality__claim_allowed_amount", "compiled": true, "compiled_code": "\n\nselect\n      m.data_source\n    , coalesce(cast(m.claim_start_date as TEXT),cast('1900-01-01' as TEXT)) as source_date\n    , 'MEDICAL_CLAIM' as table_name\n    , 'Claim ID | Claim Line Number' as drill_down_key\n    , coalesce(cast(m.claim_id as TEXT), 'null') || '|' || coalesce(cast(m.claim_line_number as TEXT), 'null') as drill_down_value\n    , m.claim_type as claim_type\n    , 'ALLOWED_AMOUNT' as field_name\n    , case when m.allowed_amount is null then 'null'\n                                    else 'valid' end as bucket_name\n    , cast(null as TEXT) as invalid_reason\n    , cast(allowed_amount as TEXT) as field_value\n, '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom tuva.input_layer.medical_claim as m", "relation_name": "tuva.data_quality.claim_allowed_amount", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:01.040240Z", "completed_at": "2025-06-03T19:50:01.059281Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:01.060372Z", "completed_at": "2025-06-03T19:50:01.060439Z"}], "thread_id": "Thread-2", "execution_time": 0.030781984329223633, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.data_quality__claim_charge_amount", "compiled": true, "compiled_code": "\n\nselect\n      m.data_source\n    , coalesce(cast(m.claim_start_date as TEXT),cast('1900-01-01' as TEXT)) as source_date\n    , 'MEDICAL_CLAIM' as table_name\n    , 'Claim ID | Claim Line Number' as drill_down_key\n    , coalesce(cast(m.claim_id as TEXT), 'null') || '|' || coalesce(cast(m.claim_line_number as TEXT), 'null') as drill_down_value\n    , m.claim_type as claim_type\n    , 'CHARGE_AMOUNT' as field_name\n    , case when m.charge_amount is null then 'null'\n                                    else 'valid' end as bucket_name\n    , cast(null as TEXT) as invalid_reason\n    , cast(charge_amount as TEXT) as field_value\n    , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom tuva.input_layer.medical_claim as m", "relation_name": "tuva.data_quality.claim_charge_amount", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:01.052139Z", "completed_at": "2025-06-03T19:50:01.060903Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:01.072741Z", "completed_at": "2025-06-03T19:50:01.072749Z"}], "thread_id": "Thread-4", "execution_time": 0.03372693061828613, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.data_quality__claim_claim_id", "compiled": true, "compiled_code": "\n\nselect distinct -- to bring to claim_ID grain \n    m.data_source\n    ,coalesce(cast(m.claim_start_date as TEXT),cast('1900-01-01' as TEXT)) as source_date\n    ,'MEDICAL_CLAIM' as table_name\n    ,'Claim ID' as drill_down_key\n    ,coalesce(m.claim_id, 'NULL') as drill_down_value\n    ,m.claim_type as claim_type\n    ,'CLAIM_ID' as field_name\n    ,case when m.claim_id is not null then 'valid' else 'null' end as bucket_name\n    ,cast(null as TEXT) as invalid_reason\n    ,cast(claim_id as TEXT) as field_value\n    , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom tuva.input_layer.medical_claim as m", "relation_name": "tuva.data_quality.claim_claim_id", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:01.061445Z", "completed_at": "2025-06-03T19:50:01.080891Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:01.081835Z", "completed_at": "2025-06-03T19:50:01.081844Z"}], "thread_id": "Thread-1", "execution_time": 0.023345947265625, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.data_quality__claim_claim_line_end_date", "compiled": true, "compiled_code": "\n\nwith tuva_last_run as(\n\n    select cast(substring('2025-06-03 19:49:40.396647+00:00',1,10) as date) as tuva_last_run\n\n)\n\nselect\n      m.data_source\n    , coalesce(cast(m.claim_start_date as TEXT),cast('1900-01-01' as TEXT)) as source_date\n    , 'MEDICAL_CLAIM' as table_name\n    , 'Claim ID | Claim Line Number' as drill_down_key\n    , coalesce(cast(m.claim_id as TEXT), 'null') || '|' || coalesce(cast(m.claim_line_number as TEXT), 'null') as drill_down_value\n    , m.claim_type as claim_type\n    , 'CLAIM_LINE_END_DATE' as field_name\n    , case\n        when m.claim_line_end_date > cte.tuva_last_run then 'invalid'\n        when m.claim_line_end_date < \n\n    dateadd(\n        year,\n        -10,\n        cte.tuva_last_run\n        )\n\n then 'invalid'\n        when m.claim_line_end_date > m.claim_line_end_date then 'invalid'\n        when m.claim_line_end_date is null then 'null'\n        else 'valid'\n    end as bucket_name\n    , case\n        when m.claim_line_end_date > cte.tuva_last_run then 'future'\n        when m.claim_line_end_date < \n\n    dateadd(\n        year,\n        -10,\n        cte.tuva_last_run\n        )\n\n then 'too old'\n        when m.claim_line_end_date > m.claim_end_date then 'line date greater than claim date'\n        else null\n    end as invalid_reason\n    , cast(claim_line_end_date as TEXT) as field_value\n    , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom tuva.input_layer.medical_claim as m\ncross join tuva_last_run as cte", "relation_name": "tuva.data_quality.claim_claim_line_end_date", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:01.073337Z", "completed_at": "2025-06-03T19:50:01.082292Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:01.094075Z", "completed_at": "2025-06-03T19:50:01.094083Z"}], "thread_id": "Thread-3", "execution_time": 0.03431224822998047, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.data_quality__claim_claim_line_number", "compiled": true, "compiled_code": "\n\nselect\n    m.data_source\n    ,coalesce(cast(m.claim_start_date as TEXT),cast('1900-01-01' as TEXT)) as source_date\n    ,'MEDICAL_CLAIM' as table_name\n    ,'Claim ID' as drill_down_key\n    ,coalesce(claim_id, 'NULL') as drill_down_value\n    ,m.claim_type as claim_type\n    ,'CLAIM_LINE_NUMBER' as field_name\n    ,case when m.claim_line_number is not null then 'valid' else 'null' end as bucket_name\n    ,cast(null as TEXT) as invalid_reason\n    ,cast(claim_line_number as TEXT) as field_value\n    , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom tuva.input_layer.medical_claim as m", "relation_name": "tuva.data_quality.claim_claim_line_number", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:01.082654Z", "completed_at": "2025-06-03T19:50:01.272894Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:01.273897Z", "completed_at": "2025-06-03T19:50:01.273905Z"}], "thread_id": "Thread-2", "execution_time": 0.19381189346313477, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.data_quality__claim_claim_line_start_date", "compiled": true, "compiled_code": "\n\nwith tuva_last_run as(\n\n    select cast(substring('2025-06-03 19:49:40.396647+00:00',1,10) as date) as tuva_last_run\n\n)\nselect\n      m.data_source\n    , coalesce(cast(m.claim_start_date as TEXT),cast('1900-01-01' as TEXT)) as source_date\n    , 'MEDICAL_CLAIM' as table_name\n    , 'Claim ID | Claim Line Number' as drill_down_key\n    , coalesce(cast(m.claim_id as TEXT), 'null') || '|' || coalesce(cast(m.claim_line_number as TEXT), 'null') as drill_down_value\n    , m.claim_type as claim_type\n    , 'CLAIM_LINE_START_DATE' as field_name\n    , case\n        when m.claim_line_start_date > cte.tuva_last_run then 'invalid'\n        when m.claim_line_start_date < \n\n    dateadd(\n        year,\n        -10,\n        cte.tuva_last_run\n        )\n\n then 'invalid'\n        when m.claim_line_start_date < m.claim_start_date then 'invalid'\n        when m.claim_line_start_date is null then 'null'\n        else 'valid'\n    end as bucket_name\n    , case\n        when m.claim_line_start_date > cte.tuva_last_run then 'future'\n        when m.claim_line_start_date < \n\n    dateadd(\n        year,\n        -10,\n        cte.tuva_last_run\n        )\n\n then 'too old'\n        when m.claim_line_start_date < m.claim_start_date then 'line date less than than claim date'\n        else null\n    end as invalid_reason\n    , cast(claim_line_start_date as TEXT) as field_value\n    , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom tuva.input_layer.medical_claim as m\ncross join tuva_last_run as cte", "relation_name": "tuva.data_quality.claim_claim_line_start_date", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:01.094778Z", "completed_at": "2025-06-03T19:50:01.281025Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:01.282742Z", "completed_at": "2025-06-03T19:50:01.282750Z"}], "thread_id": "Thread-4", "execution_time": 0.20139288902282715, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.data_quality__claim_claim_type", "compiled": true, "compiled_code": "\n\nselect distinct -- to bring to claim_ID grain \n    m.data_source\n    ,coalesce(cast(m.claim_start_date as TEXT),cast('1900-01-01' as TEXT)) as source_date\n    ,'MEDICAL_CLAIM' as table_name\n    ,'Claim ID' as drill_down_key\n,coalesce(claim_id, 'NULL') as drill_down_value\n    ,m.claim_type as claim_type\n    ,'CLAIM_TYPE' as field_name\n    ,case when m.claim_type is null then 'null'\n          when term.claim_type is null then 'invalid'\n                             else 'valid' end as bucket_name\n    ,case\n        when m.claim_type is not null and term.claim_type is null then 'Claim Type does not join to Terminology Claim Type table'\n        else null\n    end as invalid_reason\n    ,cast(m.claim_type as TEXT) as field_value\n    , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom tuva.input_layer.medical_claim as m\nleft outer join tuva.terminology.claim_type as term on m.claim_type = term.claim_type", "relation_name": "tuva.data_quality.claim_claim_type", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:01.274698Z", "completed_at": "2025-06-03T19:50:01.291977Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:01.292897Z", "completed_at": "2025-06-03T19:50:01.292904Z"}], "thread_id": "Thread-1", "execution_time": 0.02689504623413086, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.data_quality__claim_coinsurance_amount", "compiled": true, "compiled_code": "\n\nselect\n      m.data_source\n    , coalesce(cast(m.claim_start_date as TEXT),cast('1900-01-01' as TEXT)) as source_date\n    , 'MEDICAL_CLAIM' as table_name\n    , 'Claim ID | Claim Line Number' as drill_down_key\n    , coalesce(cast(m.claim_id as TEXT), 'null') || '|' || coalesce(cast(m.claim_line_number as TEXT), 'null') as drill_down_value\n    , m.claim_type as claim_type\n    , 'COINSURANCE_AMOUNT' as field_name\n    , case when m.coinsurance_amount is null then 'null'\n                                    else 'valid' end as bucket_name\n    , cast(null as TEXT) as invalid_reason\n    , cast(coinsurance_amount as TEXT) as field_value\n    , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom tuva.input_layer.medical_claim as m", "relation_name": "tuva.data_quality.claim_coninsurance_amount", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:01.283746Z", "completed_at": "2025-06-03T19:50:01.302604Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:01.312112Z", "completed_at": "2025-06-03T19:50:01.312121Z"}], "thread_id": "Thread-3", "execution_time": 0.03784990310668945, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.data_quality__claim_copayment_amount", "compiled": true, "compiled_code": "\n\nselect\n      m.data_source\n    , coalesce(cast(m.claim_start_date as TEXT),cast('1900-01-01' as TEXT)) as source_date\n    , 'MEDICAL_CLAIM' as table_name\n    , 'Claim ID | Claim Line Number' as drill_down_key\n    , coalesce(cast(m.claim_id as TEXT), 'null') || '|' || coalesce(cast(m.claim_line_number as TEXT), 'null') as drill_down_value\n    , m.claim_type as claim_type\n    , 'COPAYMENT_AMOUNT' as field_name\n    , case when m.copayment_amount is null then 'null'\n                                    else 'valid' end as bucket_name\n    , cast(null as TEXT) as invalid_reason\n    , cast(copayment_amount as TEXT) as field_value\n    , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom tuva.input_layer.medical_claim as m", "relation_name": "tuva.data_quality.claim_copayment_amount", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:01.293766Z", "completed_at": "2025-06-03T19:50:01.312963Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:01.321272Z", "completed_at": "2025-06-03T19:50:01.321283Z"}], "thread_id": "Thread-2", "execution_time": 0.03793787956237793, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.data_quality__claim_data_source", "compiled": true, "compiled_code": "\n\nselect distinct -- to bring to claim_ID grain \n    m.data_source\n    ,coalesce(cast(m.claim_start_date as TEXT),cast('1900-01-01' as TEXT)) as source_date\n    ,'MEDICAL_CLAIM' as table_name\n    ,'Claim ID' as drill_down_key\n    ,coalesce(m.claim_id, 'NULL') as drill_down_value\n    ,m.claim_type as claim_type\n    ,'DATA_SOURCE' as field_name\n    ,case when m.data_source is not null then 'valid' else 'null' end as bucket_name\n    ,cast(null as TEXT) as invalid_reason\n    ,cast(data_source as TEXT) as field_value\n    , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom tuva.input_layer.medical_claim as m", "relation_name": "tuva.data_quality.claim_data_source", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:01.303329Z", "completed_at": "2025-06-03T19:50:01.322123Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:01.323034Z", "completed_at": "2025-06-03T19:50:01.323040Z"}], "thread_id": "Thread-4", "execution_time": 0.029664993286132812, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.data_quality__claim_deductible_amount", "compiled": true, "compiled_code": "\n\nselect\n      m.data_source\n    , coalesce(cast(m.claim_start_date as TEXT),cast('1900-01-01' as TEXT)) as source_date\n    , 'MEDICAL_CLAIM' as table_name\n    , 'Claim ID | Claim Line Number' as drill_down_key\n     , coalesce(cast(m.claim_id as TEXT), 'null') || '|' || coalesce(cast(m.claim_line_number as TEXT), 'null') as drill_down_value\n    , m.claim_type as claim_type\n    , 'DEDUCTIBLE_AMOUNT' as field_name\n    , case when m.deductible_amount is null then 'null'\n                                    else 'valid' end as bucket_name\n    , cast(null as TEXT) as invalid_reason\n    , cast(deductible_amount as TEXT) as field_value\n    , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom tuva.input_layer.medical_claim as m", "relation_name": "tuva.data_quality.claim_deductible_amount", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:01.313672Z", "completed_at": "2025-06-03T19:50:01.323527Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:01.331437Z", "completed_at": "2025-06-03T19:50:01.331444Z"}], "thread_id": "Thread-1", "execution_time": 0.028630733489990234, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.data_quality__claim_diagnosis_code_type", "compiled": true, "compiled_code": "\n\nselect distinct -- to bring to claim_ID grain \n    m.data_source\n    ,coalesce(cast(m.claim_start_date as TEXT),cast('1900-01-01' as TEXT)) as source_date\n    ,'MEDICAL_CLAIM' as table_name\n    ,'Claim ID' as drill_down_key\n    ,coalesce(m.claim_id, 'NULL') as drill_down_value\n    ,m.claim_type as claim_type\n    ,'DIAGNOSIS_CODE_TYPE' as field_name\n    ,case when m.diagnosis_code_type is null then 'null'\n          when term.code_type is null then 'invalid'\n                             else 'valid' end as bucket_name\n    ,case\n        when m.diagnosis_code_type is not null and term.code_type is null then 'Diagnosis Code Type does not join to Terminology Code Type table'\n        else null\n    end as invalid_reason\n    ,cast(m.diagnosis_code_type as TEXT) as field_value\n    , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom tuva.input_layer.medical_claim as m\nleft outer join tuva.reference_data.code_type as term on m.diagnosis_code_type = term.code_type", "relation_name": "tuva.data_quality.claim_diagnosis_code_type", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:01.324084Z", "completed_at": "2025-06-03T19:50:01.339236Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:01.341913Z", "completed_at": "2025-06-03T19:50:01.341922Z"}], "thread_id": "Thread-3", "execution_time": 0.020161151885986328, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.data_quality__claim_drg_code_type", "compiled": true, "compiled_code": "\n\nselect distinct -- to bring to claim_ID grain \n    m.data_source\n    ,coalesce(cast(m.claim_start_date as TEXT),cast('1900-01-01' as TEXT)) as source_date\n    ,'MEDICAL_CLAIM' as table_name\n    ,'Claim ID' as drill_down_key\n    ,coalesce(m.claim_id, 'NULL') as drill_down_value\n    ,m.claim_type as claim_type\n    ,'DRG_CODE_TYPE' as field_name\n    ,case when m.drg_code_type is null then 'null'\n          when term.code_type is null then 'invalid'\n                             else 'valid' end as bucket_name\n    ,case\n        when m.drg_code_type is not null and term.code_type is null then 'DRG Code Type does not join to Terminology Code Type table'\n        else null\n    end as invalid_reason\n    ,cast(m.drg_code_type as TEXT) as field_value\n    , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom tuva.input_layer.medical_claim as m\nleft outer join tuva.reference_data.code_type as term on m.drg_code_type = term.code_type", "relation_name": "tuva.data_quality.claim_drg_code_type", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:01.332868Z", "completed_at": "2025-06-03T19:50:01.353090Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:01.361421Z", "completed_at": "2025-06-03T19:50:01.361429Z"}], "thread_id": "Thread-2", "execution_time": 0.03773021697998047, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.data_quality__claim_hcpcs_code", "compiled": true, "compiled_code": "\n\nselect\n      m.data_source\n    , coalesce(cast(m.claim_start_date as TEXT),cast('1900-01-01' as TEXT)) as source_date\n    , 'MEDICAL_CLAIM' as table_name\n    , 'Claim ID | Claim Line Number' as drill_down_key\n    , coalesce(cast(m.claim_id as TEXT), 'null') || '|' || coalesce(cast(m.claim_line_number as TEXT), 'null') as drill_down_value\n    , m.claim_type as claim_type\n    , 'HCPCS_CODE' as field_name\n    , case\n          when term.hcpcs is not null then 'valid'\n          when m.hcpcs_code is not null then 'invalid'\n          else 'null'\n    end as bucket_name\n    , case\n        when m.hcpcs_code is not null and term.hcpcs is null then 'HCPCS does not join to Terminology HCPCS_LEVEL_2 table'\n        else null\n     end as invalid_reason\n    , m.hcpcs_code || '|' || coalesce(term.short_description, '') as field_value\n    , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\n    from tuva.input_layer.medical_claim as m\nleft outer join tuva.terminology.hcpcs_level_2 as term on m.hcpcs_code = term.hcpcs", "relation_name": "tuva.data_quality.claim_hcpcs_code", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:01.342493Z", "completed_at": "2025-06-03T19:50:01.361967Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:01.362909Z", "completed_at": "2025-06-03T19:50:01.362916Z"}], "thread_id": "Thread-4", "execution_time": 0.030780315399169922, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.data_quality__claim_member_id", "compiled": true, "compiled_code": "\n\nselect distinct -- to bring to claim_ID grain \n    m.data_source\n    ,coalesce(cast(m.claim_start_date as TEXT),cast('1900-01-01' as TEXT)) as source_date\n    ,'MEDICAL_CLAIM' as table_name\n    ,'Claim ID' as drill_down_key\n    ,coalesce(m.claim_id, 'NULL') as drill_down_value\n    ,m.claim_type as claim_type\n    ,'MEMBER_ID' as field_name\n    ,case when m.member_id is not null then 'valid' else 'null' end as bucket_name\n    ,cast(null as TEXT) as invalid_reason\n    ,cast(member_id as TEXT) as field_value\n    , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom tuva.input_layer.medical_claim as m", "relation_name": "tuva.data_quality.claim_member_id", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:01.353495Z", "completed_at": "2025-06-03T19:50:01.363355Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:01.373178Z", "completed_at": "2025-06-03T19:50:01.373186Z"}], "thread_id": "Thread-1", "execution_time": 0.03171682357788086, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.data_quality__claim_paid_amount", "compiled": true, "compiled_code": "\n\nselect\n      m.data_source\n    , coalesce(cast(m.claim_start_date as TEXT),cast('1900-01-01' as TEXT)) as source_date\n    , 'MEDICAL_CLAIM' as table_name\n    , 'Claim ID | Claim Line Number' as drill_down_key\n    , coalesce(cast(m.claim_id as TEXT), 'null') || '|' || coalesce(cast(m.claim_line_number as TEXT), 'null') as drill_down_value\n    , m.claim_type as claim_type\n    , 'PAID_AMOUNT' as field_name\n    , case when m.paid_amount is null then 'null'\n                                    else 'valid' end as bucket_name\n    , cast(null as TEXT) as invalid_reason\n    , cast(paid_amount as TEXT) as field_value\n    , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom tuva.input_layer.medical_claim as m", "relation_name": "tuva.data_quality.claim_paid_amount", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:01.363596Z", "completed_at": "2025-06-03T19:50:01.380998Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:01.383728Z", "completed_at": "2025-06-03T19:50:01.383736Z"}], "thread_id": "Thread-3", "execution_time": 0.022700071334838867, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.data_quality__claim_paid_date", "compiled": true, "compiled_code": "\n\nwith tuva_last_run as(\n\n     select cast(substring('2025-06-03 19:49:40.396647+00:00',1,10) as date) as tuva_last_run\n\n)\nselect\n      m.data_source\n    , coalesce(cast(m.claim_start_date as TEXT),cast('1900-01-01' as TEXT)) as source_date\n    , 'MEDICAL_CLAIM' as table_name\n    , 'Claim ID | Claim Line Number' as drill_down_key\n    , coalesce(cast(m.claim_id as TEXT), 'null') || '|' || coalesce(cast(m.claim_line_number as TEXT), 'null') as drill_down_value\n    , m.claim_type as claim_type\n    , 'PAID_DATE' as field_name\n    , case\n        when m.paid_date > cte.tuva_last_run then 'invalid'\n        when m.paid_date < \n\n    dateadd(\n        year,\n        -10,\n        cte.tuva_last_run\n        )\n\n then 'invalid'\n        when m.paid_date < m.claim_start_date then 'invalid'\n        when m.paid_date is null then 'null'\n        else 'valid'\n    end as bucket_name\n    , case\n        when m.paid_date > cte.tuva_last_run then 'future'\n        when m.paid_date < \n\n    dateadd(\n        year,\n        -10,\n        cte.tuva_last_run\n        )\n\n then 'too old'\n        when m.paid_date < m.claim_start_date then 'paid date before claim start date'\n        else null\n    end as invalid_reason\n    , cast(paid_date as TEXT) as field_value\n    , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom tuva.input_layer.medical_claim as m\ncross join tuva_last_run as cte", "relation_name": "tuva.data_quality.claim_paid_date", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:01.374730Z", "completed_at": "2025-06-03T19:50:01.391723Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:01.399896Z", "completed_at": "2025-06-03T19:50:01.399904Z"}], "thread_id": "Thread-2", "execution_time": 0.027480125427246094, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.data_quality__claim_payer", "compiled": true, "compiled_code": "\n\nselect distinct -- to bring to claim_ID grain \n    m.data_source\n    ,coalesce(cast(m.claim_start_date as TEXT),cast('1900-01-01' as TEXT)) as source_date\n    ,'MEDICAL_CLAIM' as table_name\n    ,'Claim ID' as drill_down_key\n,coalesce(claim_id, 'NULL') as drill_down_value\n    ,m.claim_type as claim_type\n    ,'PAYER' as field_name\n    ,case when m.payer is not null then 'valid' else 'null' end as bucket_name\n    ,cast(null as TEXT) as invalid_reason\n    ,cast(m.payer as TEXT) as field_value\n    , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom tuva.input_layer.medical_claim as m", "relation_name": "tuva.data_quality.claim_payer", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:01.384283Z", "completed_at": "2025-06-03T19:50:01.400700Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:01.402197Z", "completed_at": "2025-06-03T19:50:01.402208Z"}], "thread_id": "Thread-4", "execution_time": 0.028310060501098633, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.data_quality__claim_person_id", "compiled": true, "compiled_code": "\n\nselect distinct -- to bring to claim_ID grain \n    m.data_source\n    ,coalesce(cast(m.claim_start_date as TEXT),cast('1900-01-01' as TEXT)) as source_date\n    ,'MEDICAL_CLAIM' as table_name\n    ,'Claim ID' as drill_down_key\n,coalesce(claim_id, 'NULL') as drill_down_value\n    ,m.claim_type as claim_type\n    ,'PERSON_ID' as field_name\n    ,case when m.person_id is not null then 'valid' else 'null' end as bucket_name\n    ,cast(null as TEXT) as invalid_reason\n    ,cast(person_id as TEXT) as field_value\n    , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom tuva.input_layer.medical_claim as m", "relation_name": "tuva.data_quality.claim_person_id", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:01.392017Z", "completed_at": "2025-06-03T19:50:01.402782Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:01.410495Z", "completed_at": "2025-06-03T19:50:01.410502Z"}], "thread_id": "Thread-1", "execution_time": 0.02721691131591797, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.data_quality__claim_plan", "compiled": true, "compiled_code": "\n\nselect distinct -- to bring to claim_ID grain\n    m.data_source\n    ,coalesce(cast(m.claim_start_date as TEXT),cast('1900-01-01' as TEXT)) as source_date\n    ,'MEDICAL_CLAIM' as table_name\n    ,'Claim ID' as drill_down_key\n,coalesce(claim_id, 'NULL') as drill_down_value\n    ,m.claim_type as claim_type\n    ,'PLAN' as field_name\n    ,case when m.plan is not null then 'valid' else 'null' end as bucket_name\n    ,cast(null as TEXT) as invalid_reason\n    ,cast(plan as TEXT) as field_value\n    , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom tuva.input_layer.medical_claim as m", "relation_name": "tuva.data_quality.claim_plan", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:01.403079Z", "completed_at": "2025-06-03T19:50:01.418926Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:01.419882Z", "completed_at": "2025-06-03T19:50:01.419889Z"}], "thread_id": "Thread-3", "execution_time": 0.020433902740478516, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.data_quality__claim_total_cost_amount", "compiled": true, "compiled_code": "\n\nselect\n      m.data_source\n    , coalesce(cast(m.claim_start_date as TEXT),cast('1900-01-01' as TEXT)) as source_date\n    , 'MEDICAL_CLAIM' as table_name\n    , 'Claim ID | Claim Line Number' as drill_down_key\n    , coalesce(cast(m.claim_id as TEXT), 'null') || '|' || coalesce(cast(m.claim_line_number as TEXT), 'null') as drill_down_value\n    , m.claim_type as claim_type\n    , 'TOTAL_COST_AMOUNT' as field_name\n    , case when m.total_cost_amount is null then 'null'\n                                    else 'valid' end as bucket_name\n    , cast(null as TEXT) as invalid_reason\n    , cast(total_cost_amount as TEXT) as field_value\n    , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom tuva.input_layer.medical_claim as m", "relation_name": "tuva.data_quality.claim_total_cost_amount", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:01.411995Z", "completed_at": "2025-06-03T19:50:01.428466Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:01.437881Z", "completed_at": "2025-06-03T19:50:01.437890Z"}], "thread_id": "Thread-2", "execution_time": 0.02812027931213379, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.data_quality__claim_type_summary", "compiled": true, "compiled_code": "select\n    data_source\n    ,claim_type\n    ,count(distinct claim_id) as claim_count\n    ,sum(paid_amount) as paid_amount\n    , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom tuva.input_layer.medical_claim\ngroup by\n    data_source\n    ,claim_type\n\n", "relation_name": "tuva.data_quality.claim_type_summary", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:01.420340Z", "completed_at": "2025-06-03T19:50:01.438827Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:01.439741Z", "completed_at": "2025-06-03T19:50:01.439746Z"}], "thread_id": "Thread-4", "execution_time": 0.0285189151763916, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.data_quality__institutional_bill_type_code", "compiled": true, "compiled_code": "\n\nwith base as (\n    select *\n    from tuva.input_layer.medical_claim\n    where claim_type = 'institutional'\n),\n\nunique_field as (\n    select distinct claim_id\n        , base.bill_type_code || '|' || coalesce(term.bill_type_description, '') as field\n        , data_source\n    from base\n    left outer join tuva.terminology.bill_type as term on base.bill_type_code = term.bill_type_code\n),\n\nclaim_grain as (\n    select claim_id\n        , data_source\n        , count(*) as frequency\n    from unique_field\n    group by claim_id\n        , data_source\n),\n\nclaim_agg as (\nselect\n      claim_id\n    , data_source\n    , \n    listagg(\n        coalesce(field, 'null'),\n        ', '\n        )\n        within group (order by field desc) as field_aggregated -- noqa\nfrom\n    unique_field\ngroup by\n      claim_id\n    , data_source\n\t)\n\nselect distinct -- to bring to claim_id grain\n      m.data_source\n    , coalesce(cast(m.claim_start_date as TEXT),cast('1900-01-01' as TEXT)) as source_date\n    , 'MEDICAL_CLAIM' as table_name\n    , 'Claim ID' as drill_down_key\n    , coalesce(m.claim_id, 'NULL') as drill_down_value\n    , 'institutional' as claim_type\n    , 'BILL_TYPE_CODE' as field_name\n    , case when cg.frequency > 1                then 'multiple'\n          when term.bill_type_code is not null then 'valid'\n          when m.bill_type_code is not null    then 'invalid'\n                                               else 'null' end as bucket_name\n    , case\n        when m.bill_type_code is not null\n            and term.bill_type_code is null\n            and cg.frequency = 1\n            then 'Bill Type Code does not join to Terminology Bill_Type table'\n        else null\n    end as invalid_reason\n    , cast(\n  substr(agg.field_aggregated, 1, 255)\n as TEXT) as field_value\n    , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom base as m\nleft outer join claim_grain as cg on m.claim_id = cg.claim_id and m.data_source = cg.data_source\nleft outer join tuva.terminology.bill_type as term on m.bill_type_code = term.bill_type_code\nleft outer join claim_agg as agg on m.claim_id = agg.claim_id and m.data_source = agg.data_source", "relation_name": "tuva.data_quality.institutional_bill_type_code", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:01.429170Z", "completed_at": "2025-06-03T19:50:01.440151Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:01.452143Z", "completed_at": "2025-06-03T19:50:01.452150Z"}], "thread_id": "Thread-1", "execution_time": 0.03278613090515137, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.data_quality__institutional_billing_npi", "compiled": true, "compiled_code": "\n\nwith base as (\n    select *\n    from tuva.input_layer.medical_claim\n    where claim_type = 'institutional'\n),\nunique_field as (\n    select distinct claim_id\n        ,cast(billing_npi as TEXT) as field\n        ,data_source\n    from base\n),\nclaim_grain as (\n    select claim_id\n        ,data_source\n        ,count(*) as frequency\n    from unique_field\n    group by claim_id\n        ,data_source\n),\nclaim_agg as (\nselect\n    claim_id,\n    data_source,\n    \n    listagg(\n        coalesce(field, 'null'),\n        ', '\n        )\n        within group (order by field desc) as field_aggregated -- noqa\nfrom\n    unique_field\ngroup by\n    claim_id,\n    data_source\n\t)\nselect distinct -- to bring to claim_id grain\n    m.data_source\n    ,coalesce(cast(m.claim_start_date as TEXT),cast('1900-01-01' as TEXT)) as source_date\n    ,'MEDICAL_CLAIM' as table_name\n    ,'Claim ID' as drill_down_key\n    ,coalesce(m.claim_id, 'NULL') as drill_down_value\n    ,'institutional' as claim_type\n    ,'BILLING_NPI' as field_name\n    ,case when cg.frequency > 1                then 'multiple'\n          when term.npi is not null            then 'valid'\n          when m.billing_npi is not null      then 'invalid'\n                                               else 'null' end as bucket_name\n    ,case\n        when cg.frequency = 1\n            and m.billing_npi is not null\n            and term.npi is null\n            then 'NPI is not in Terminology Provider table'\n        else null\n    end as invalid_reason\n    ,cast(\n  substr(agg.field_aggregated, 1, 255)\n as TEXT) as field_value\n    , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom base as m\nleft outer join claim_grain as cg on m.claim_id = cg.claim_id and m.data_source = cg.data_source\nleft outer join tuva.terminology.provider as term on m.billing_npi = term.npi\nleft outer join claim_agg as agg on m.claim_id = agg.claim_id and m.data_source = agg.data_source", "relation_name": "tuva.data_quality.institutional_billing_npi", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:01.440721Z", "completed_at": "2025-06-03T19:50:01.468048Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:01.477031Z", "completed_at": "2025-06-03T19:50:01.477043Z"}], "thread_id": "Thread-3", "execution_time": 0.038610219955444336, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.data_quality__institutional_claim_end_date", "compiled": true, "compiled_code": "\n\nwith base as (\n    select *\n    from tuva.input_layer.medical_claim\n    where claim_type = 'institutional'\n)\n, tuva_last_run as(\n    select cast(substring('2025-06-03 19:49:40.396647+00:00',1,10) as date) as tuva_last_run\n)\n,unique_field as (\n    select distinct claim_id\n        ,cast(claim_end_date as TEXT) as field\n        ,data_source\n    from base\n),\nclaim_grain as (\n    select claim_id\n        ,data_source\n        ,count(*) as frequency\n    from unique_field\n    group by claim_id\n        ,data_source\n),\nclaim_agg as (\nselect\n    claim_id,\n    data_source\n    , \n    listagg(\n        coalesce(field, 'null'),\n        ', '\n        )\n        within group (order by field desc) as field_aggregated -- noqa\nfrom\n    unique_field\ngroup by\n    claim_id,\n    data_source\n\t)\nselect distinct -- to bring to claim_id grain\n    m.data_source\n    ,coalesce(cast(m.claim_start_date as TEXT),cast('1900-01-01' as TEXT)) as source_date\n    ,'MEDICAL_CLAIM' as table_name\n    ,'Claim ID' as drill_down_key\n    ,coalesce(m.claim_id, 'NULL') as drill_down_value\n    ,'institutional' as claim_type\n    ,'CLAIM_END_DATE' as field_name\n    ,case\n        when cg.frequency > 1 then 'multiple'\n        when m.claim_end_date > cast(substring('2025-06-03 19:49:40.396647+00:00',1,10) as date) then 'invalid'\n        when m.claim_end_date < \n\n    dateadd(\n        year,\n        -10,\n        cte.tuva_last_run\n        )\n\n then 'invalid'\n        when m.claim_end_date < m.claim_start_date then 'invalid'\n        when m.claim_end_date is null then 'null'\n        else 'valid'\n    end as bucket_name\n    ,case\n        when cg.frequency > 1 then 'multiple'\n        when m.claim_end_date > cast(substring('2025-06-03 19:49:40.396647+00:00',1,10) as date) then 'future'\n        when m.claim_end_date < \n\n    dateadd(\n        year,\n        -10,\n        cte.tuva_last_run\n        )\n\n then 'too old'\n        when m.claim_end_date < m.claim_start_date then 'claim end date before claim start date'\n        else null\n        end as invalid_reason\n    ,cast(\n  substr(agg.field_aggregated, 1, 255)\n as TEXT) as field_value\n    , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom base as m\nleft outer join claim_grain as cg on m.claim_id = cg.claim_id and m.data_source = cg.data_source\nleft outer join claim_agg as agg on m.claim_id = agg.claim_id and m.data_source = agg.data_source\ncross join tuva_last_run as cte", "relation_name": "tuva.data_quality.institutional_claim_end_date", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:01.453367Z", "completed_at": "2025-06-03T19:50:01.477846Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:01.487228Z", "completed_at": "2025-06-03T19:50:01.487235Z"}], "thread_id": "Thread-4", "execution_time": 0.035629987716674805, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.data_quality__institutional_diagnosis_code_1", "compiled": true, "compiled_code": "\n\nwith base as (\n    select *\n    from tuva.input_layer.medical_claim\n    where claim_type = 'institutional'\n),\n\nunique_field as (\n    select distinct claim_id\n        , diagnosis_code_1 || '|' || coalesce(term.short_description, '') as field\n        , data_source\n    from base\n    left outer join tuva.terminology.icd_10_cm as term on base.diagnosis_code_1 = term.icd_10_cm\n),\n\nclaim_grain as (\n    select claim_id\n        , data_source\n        , count(*) as frequency\n    from unique_field\n    group by claim_id\n        , data_source\n),\n\nclaim_agg as (\nselect\n      claim_id\n    , data_source\n    , \n    listagg(\n        coalesce(field, 'null'),\n        ', '\n        )\n        within group (order by field desc) as field_aggregated -- noqa\nfrom\n    unique_field\ngroup by\n      claim_id\n    , data_source\n\t)\n\nselect distinct -- to bring to claim_id grain\n      m.data_source\n    , coalesce(cast(m.claim_start_date as TEXT),cast('1900-01-01' as TEXT)) as source_date\n    , 'MEDICAL_CLAIM' as table_name\n    , 'Claim ID' as drill_down_key\n    , coalesce(m.claim_id, 'NULL') as drill_down_value\n    , 'institutional' as claim_type\n    , 'DIAGNOSIS_CODE_1' as field_name\n    , case when cg.frequency > 1                then 'multiple'\n          when term.icd_10_cm is not null      then 'valid'\n          when m.diagnosis_code_1 is not null  then 'invalid'\n        else 'null'\n    end as bucket_name\n    , case\n        when cg.frequency = 1\n            and m.diagnosis_code_1 is not null\n            and term.icd_10_cm is null\n            then 'Diagnosis Code is not in Terminology ICD_10_CM table'\n        else null\n    end as invalid_reason\n    , cast(\n  substr(agg.field_aggregated, 1, 255)\n as TEXT) as field_value\n    , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom base as m\nleft outer join claim_grain as cg on m.claim_id = cg.claim_id and m.data_source = cg.data_source\nleft outer join tuva.terminology.icd_10_cm as term on m.diagnosis_code_1 = term.icd_10_cm\nleft outer join claim_agg as agg on m.claim_id = agg.claim_id and m.data_source = agg.data_source", "relation_name": "tuva.data_quality.institutional_diagnosis_code_1", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:01.460694Z", "completed_at": "2025-06-03T19:50:01.487658Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:01.488649Z", "completed_at": "2025-06-03T19:50:01.488657Z"}], "thread_id": "Thread-2", "execution_time": 0.04832816123962402, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.data_quality__institutional_claim_start_date", "compiled": true, "compiled_code": "\n\nwith base as (\n    select *\n    from tuva.input_layer.medical_claim\n    where claim_type = 'institutional'\n)\n, tuva_last_run as(\n    select cast(substring('2025-06-03 19:49:40.396647+00:00',1,10) as date) as tuva_last_run\n)\n,unique_field as (\n    select distinct claim_id\n        ,cast(claim_start_date as TEXT) as field\n        ,data_source\n    from base\n),\nclaim_grain as (\n    select claim_id\n        ,data_source\n        ,count(*) as frequency\n    from unique_field\n    group by claim_id\n        ,data_source\n),\nclaim_agg as (\nselect\n    claim_id,\n    data_source\n    , \n    listagg(\n        coalesce(field, 'null'),\n        ', '\n        )\n        within group (order by field desc) as field_aggregated -- noqa\nfrom\n    unique_field\ngroup by\n    claim_id,\n    data_source\n\t)\nselect distinct -- to bring to claim_id grain\n    m.data_source\n    ,coalesce(cast(m.claim_start_date as TEXT),cast('1900-01-01' as TEXT)) as source_date\n    ,'MEDICAL_CLAIM' as table_name\n    ,'Claim ID' as drill_down_key\n    ,coalesce(m.claim_id, 'NULL') as drill_down_value\n    ,'institutional' as claim_type\n    ,'CLAIM_START_DATE' as field_name\n    ,case\n        when cg.frequency > 1 then 'multiple'\n        when m.claim_start_date > cast(substring('2025-06-03 19:49:40.396647+00:00',1,10) as date) then 'invalid'\n        when m.claim_start_date < \n\n    dateadd(\n        year,\n        -10,\n        cte.tuva_last_run\n        )\n\n then 'invalid'\n        when m.claim_start_date is null then 'null'\n        else 'valid'\n    end as bucket_name\n    ,case\n        when cg.frequency > 1 then 'multiple'\n        when m.claim_start_date > cast(substring('2025-06-03 19:49:40.396647+00:00',1,10) as date) then 'future'\n        when m.claim_start_date < \n\n    dateadd(\n        year,\n        -10,\n        cte.tuva_last_run\n        )\n\n then 'too old'\n        else null\n        end as invalid_reason\n    ,cast(\n  substr(agg.field_aggregated, 1, 255)\n as TEXT) as field_value\n    , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom base as m\nleft outer join claim_grain as cg on m.claim_id = cg.claim_id and m.data_source = cg.data_source\nleft outer join claim_agg as agg on m.claim_id = agg.claim_id and m.data_source = agg.data_source\ncross join tuva_last_run as cte", "relation_name": "tuva.data_quality.institutional_claim_start_date", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:01.478913Z", "completed_at": "2025-06-03T19:50:01.489342Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:01.499591Z", "completed_at": "2025-06-03T19:50:01.499602Z"}], "thread_id": "Thread-1", "execution_time": 0.03932809829711914, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.data_quality__institutional_diagnosis_code_2", "compiled": true, "compiled_code": "\n\nwith base as (\n    select *\n    from tuva.input_layer.medical_claim\n    where claim_type = 'institutional'\n),\n\nunique_field as (\n    select distinct claim_id\n        , diagnosis_code_2 || '|' || coalesce(term.short_description, '') as field\n        , data_source\n    from base\n    left outer join tuva.terminology.icd_10_cm as term on base.diagnosis_code_2 = term.icd_10_cm\n),\n\nclaim_grain as (\n    select claim_id\n        , data_source\n        , count(*) as frequency\n    from unique_field\n    group by claim_id\n        , data_source\n),\n\nclaim_agg as (\nselect\n      claim_id\n    , data_source\n    , \n    listagg(\n        coalesce(field, 'null'),\n        ', '\n        )\n        within group (order by field desc) as field_aggregated -- noqa\nfrom\n    unique_field\ngroup by\n      claim_id\n    , data_source\n\t)\n\nselect distinct -- to bring to claim_id grain\n      m.data_source\n    , coalesce(cast(m.claim_start_date as TEXT),cast('1900-01-01' as TEXT)) as source_date\n    , 'MEDICAL_CLAIM' as table_name\n    , 'Claim ID' as drill_down_key\n    , coalesce(m.claim_id, 'NULL') as drill_down_value\n    , 'institutional' as claim_type\n    , 'DIAGNOSIS_CODE_2' as field_name\n    , case when cg.frequency > 1                then 'multiple'\n          when term.icd_10_cm is not null      then 'valid'\n          when m.diagnosis_code_2 is not null  then 'invalid'\n                                               else 'null' end as bucket_name\n    , case\n        when cg.frequency = 1\n            and m.diagnosis_code_2 is not null\n            and term.icd_10_cm is null\n            then 'Diagnosis Code is not in Terminology ICD_10_CM table'\n        else null\n    end as invalid_reason\n    , cast(\n  substr(agg.field_aggregated, 1, 255)\n as TEXT) as field_value\n    , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom base as m\nleft outer join claim_grain as cg on m.claim_id = cg.claim_id and m.data_source = cg.data_source\nleft outer join tuva.terminology.icd_10_cm as term on m.diagnosis_code_2 = term.icd_10_cm\nleft outer join claim_agg as agg on m.claim_id = agg.claim_id and m.data_source = agg.data_source", "relation_name": "tuva.data_quality.institutional_diagnosis_code_2", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:01.490191Z", "completed_at": "2025-06-03T19:50:01.509438Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:01.518074Z", "completed_at": "2025-06-03T19:50:01.518083Z"}], "thread_id": "Thread-3", "execution_time": 0.030167102813720703, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.data_quality__institutional_diagnosis_code_3", "compiled": true, "compiled_code": "\n\nwith base as (\n    select *\n    from tuva.input_layer.medical_claim\n    where claim_type = 'institutional'\n),\n\nunique_field as (\n    select distinct claim_id\n        , diagnosis_code_3 || '|' || coalesce(term.short_description, '') as field\n        , data_source\n    from base\n    left outer join tuva.terminology.icd_10_cm as term on base.diagnosis_code_3 = term.icd_10_cm\n),\n\nclaim_grain as (\n    select claim_id\n        , data_source\n        , count(*) as frequency\n    from unique_field\n    group by claim_id\n        , data_source\n),\n\nclaim_agg as (\nselect\n      claim_id\n    , data_source\n    , \n    listagg(\n        coalesce(field, 'null'),\n        ', '\n        )\n        within group (order by field desc) as field_aggregated -- noqa\nfrom\n    unique_field\ngroup by\n      claim_id\n    , data_source\n\t)\n\nselect distinct -- to bring to claim_id grain\n      m.data_source\n    , coalesce(cast(m.claim_start_date as TEXT),cast('1900-01-01' as TEXT)) as source_date\n    , 'MEDICAL_CLAIM' as table_name\n    , 'Claim ID' as drill_down_key\n    , coalesce(m.claim_id, 'NULL') as drill_down_value\n    , 'institutional' as claim_type\n    , 'DIAGNOSIS_CODE_3' as field_name\n    , case when cg.frequency > 1                then 'multiple'\n          when term.icd_10_cm is not null      then 'valid'\n          when m.diagnosis_code_3 is not null  then 'invalid'\n                                               else 'null' end as bucket_name\n    , case\n        when cg.frequency = 1\n            and m.diagnosis_code_3 is not null\n            and term.icd_10_cm is null\n            then 'Diagnosis Code is not in Terminology ICD_10_CM table'\n        else null\n    end as invalid_reason\n    , cast(\n  substr(agg.field_aggregated, 1, 255)\n as TEXT) as field_value\n    , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom base as m\nleft outer join claim_grain as cg on m.claim_id = cg.claim_id and m.data_source = cg.data_source\nleft outer join tuva.terminology.icd_10_cm as term on m.diagnosis_code_3 = term.icd_10_cm\nleft outer join claim_agg as agg on m.claim_id = agg.claim_id and m.data_source = agg.data_source", "relation_name": "tuva.data_quality.institutional_diagnosis_code_3", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:01.501027Z", "completed_at": "2025-06-03T19:50:01.518526Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:01.526551Z", "completed_at": "2025-06-03T19:50:01.526557Z"}], "thread_id": "Thread-4", "execution_time": 0.03702497482299805, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.data_quality__institutional_discharge_disposition_code", "compiled": true, "compiled_code": "\n\nwith base as (\n    select *\n    from tuva.input_layer.medical_claim\n    where claim_type = 'institutional'\n)\n\n, unique_field as (\n    select distinct claim_id\n        , base.discharge_disposition_code || '|' || coalesce(term.discharge_disposition_description, '') as field\n        , data_source\n    from base\n    left outer join tuva.terminology.discharge_disposition as term on base.discharge_disposition_code = term.discharge_disposition_code\n)\n\n, claim_grain as (\n    select claim_id\n        , data_source\n        , count(*) as frequency\n    from unique_field\n    group by claim_id\n        , data_source\n)\n\n, claim_agg as (\nselect\n      claim_id\n    , data_source\n    , \n    listagg(\n        coalesce(field, 'null'),\n        ', '\n        )\n        within group (order by field desc) as field_aggregated -- noqa\nfrom\n    unique_field\ngroup by\n      claim_id\n    , data_source\n\t)\n\nselect distinct -- to bring to claim_id grain\n      m.data_source\n    , coalesce(cast(m.claim_start_date as TEXT),cast('1900-01-01' as TEXT)) as source_date\n    , 'MEDICAL_CLAIM' as table_name\n    , 'Claim ID' as drill_down_key\n    , coalesce(m.claim_id, 'NULL') as drill_down_value\n    , 'institutional' as claim_type\n    , 'DISCHARGE_DISPOSITION_CODE' as field_name\n    , case when cg.frequency > 1                then 'multiple'\n          when term.discharge_disposition_code is not null then 'valid'\n          when m.discharge_disposition_code is not null    then 'invalid'\n                                               else 'null' end as bucket_name\n    , case\n        when cg.frequency = 1\n            and m.discharge_disposition_code is not null\n            and term.discharge_disposition_code is null\n            then 'Discharge Disposition Code does not join to Terminology Discharge_Disposition Table'\n        else null\n    end as invalid_reason\n    , cast(\n  substr(agg.field_aggregated, 1, 255)\n as TEXT) as field_value\n    , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom base as m\nleft outer join claim_grain as cg on m.claim_id = cg.claim_id and m.data_source = cg.data_source\nleft outer join tuva.terminology.discharge_disposition as term on m.discharge_disposition_code = term.discharge_disposition_code\nleft outer join claim_agg as agg on m.claim_id = agg.claim_id and m.data_source = agg.data_source", "relation_name": "tuva.data_quality.institutional_discharge_disposition_code", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:01.509697Z", "completed_at": "2025-06-03T19:50:01.526302Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:01.527291Z", "completed_at": "2025-06-03T19:50:01.527296Z"}], "thread_id": "Thread-2", "execution_time": 0.02697014808654785, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.data_quality__institutional_facility_npi", "compiled": true, "compiled_code": "\n\nwith base as (\n    select *\n    from tuva.input_layer.medical_claim\n    where claim_type = 'institutional'\n),\nunique_field as (\n    select distinct claim_id\n        ,cast(facility_npi as TEXT) as field\n        ,data_source\n    from base\n),\nclaim_grain as (\n    select claim_id\n        ,data_source\n        ,count(*) as frequency\n    from unique_field\n    group by claim_id\n        ,data_source\n),\nclaim_agg as (\nselect\n    claim_id,\n    data_source\n    , \n    listagg(\n        coalesce(field, 'null'),\n        ', '\n        )\n        within group (order by field desc) as field_aggregated -- noqa\nfrom\n    unique_field\ngroup by\n    claim_id,\n    data_source\n\t)\nselect distinct -- to bring to claim_id grain\n    m.data_source\n    ,coalesce(cast(m.claim_start_date as TEXT),cast('1900-01-01' as TEXT)) as source_date\n    ,'MEDICAL_CLAIM' as table_name\n    ,'Claim ID' as drill_down_key\n    ,coalesce(m.claim_id, 'NULL') as drill_down_value\n    ,'institutional' as claim_type\n    ,'FACILITY_NPI' as field_name\n    ,case when cg.frequency > 1                then 'multiple'\n          when term.npi is not null then 'valid'\n          when m.facility_npi is not null    then 'invalid'\n                                               else 'null' end as bucket_name\n    ,case\n        when cg.frequency = 1\n            and m.facility_npi is not null\n            and term.npi is null\n            then 'NPI not in Terminology Provider Table'\n        else null\n    end as invalid_reason\n    ,cast(\n  substr(agg.field_aggregated, 1, 255)\n as TEXT) as field_value\n    , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom base as m\nleft outer join claim_grain as cg on m.claim_id = cg.claim_id and m.data_source = cg.data_source\nleft outer join tuva.terminology.provider as term on m.facility_npi = term.npi\nleft outer join claim_agg as agg on m.claim_id = agg.claim_id and m.data_source = agg.data_source", "relation_name": "tuva.data_quality.institutional_facility_npi", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:01.518831Z", "completed_at": "2025-06-03T19:50:01.528133Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:01.536279Z", "completed_at": "2025-06-03T19:50:01.536288Z"}], "thread_id": "Thread-1", "execution_time": 0.027309894561767578, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.data_quality__institutional_present_on_admission_1", "compiled": true, "compiled_code": "\n\nwith base as (\n    select *\n    from tuva.input_layer.medical_claim\n    where claim_type = 'institutional'\n\n),\nunique_field as (\n    select distinct claim_id\n        ,cast(diagnosis_poa_1 as TEXT)  as field\n        ,data_source\n    from base\n\n),\nclaim_grain as (\n    select claim_id\n        ,data_source\n        ,count(*) as frequency\n    from unique_field\n    group by claim_id\n        ,data_source\n),\nclaim_agg as (\nselect\n    claim_id,\n    data_source\n    , \n    listagg(\n        coalesce(field, 'null'),\n        ', '\n        )\n        within group (order by field desc) as field_aggregated -- noqa\nfrom\n    unique_field\ngroup by\n    claim_id,\n    data_source\n\t)\nselect distinct -- to bring to claim_id grain\n    m.data_source\n    ,coalesce(cast(m.claim_start_date as TEXT),cast('1900-01-01' as TEXT)) as source_date\n    ,'MEDICAL_CLAIM' as table_name\n    ,'Claim ID' as drill_down_key\n    ,coalesce(m.claim_id, 'NULL') as drill_down_value\n    ,'institutional' as claim_type\n    ,'DIAGNOSIS_POA_1' as field_name\n       ,case when cg.frequency > 1                then 'multiple'\n        when m.diagnosis_poa_1 in ('y','n')       then 'valid'\n        when m.diagnosis_poa_1 is null            then 'null'\n                                                  else 'invalid' end as bucket_name\n    ,cast(null as TEXT) as invalid_reason\n    ,cast(\n  substr(agg.field_aggregated, 1, 255)\n as TEXT) as field_value\n    , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom base as m\nleft outer join claim_grain as cg on m.claim_id = cg.claim_id and m.data_source = cg.data_source\nleft outer join claim_agg as agg on m.claim_id = agg.claim_id and m.data_source = agg.data_source", "relation_name": "tuva.data_quality.institutional_present_on_admission_1", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:01.528841Z", "completed_at": "2025-06-03T19:50:01.543671Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:01.550939Z", "completed_at": "2025-06-03T19:50:01.550952Z"}], "thread_id": "Thread-3", "execution_time": 0.024021148681640625, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.data_quality__institutional_present_on_admission_2", "compiled": true, "compiled_code": "\n\nwith base as (\n    select *\n    from tuva.input_layer.medical_claim\n    where claim_type = 'institutional'\n),\nunique_field as (\n    select distinct claim_id\n        ,cast(diagnosis_poa_2 as TEXT)  as field\n        ,data_source\n    from base\n\n),\nclaim_grain as (\n    select claim_id\n        ,data_source\n        ,count(*) as frequency\n    from unique_field\n    group by claim_id\n        ,data_source\n),\nclaim_agg as (\nselect\n    claim_id,\n    data_source\n    , \n    listagg(\n        coalesce(field, 'null'),\n        ', '\n        )\n        within group (order by field desc) as field_aggregated -- noqa\nfrom\n    unique_field\ngroup by\n    claim_id,\n    data_source\n\t)\nselect distinct -- to bring to claim_id grain\n    m.data_source\n    ,coalesce(cast(m.claim_start_date as TEXT),cast('1900-01-01' as TEXT)) as source_date\n    ,'MEDICAL_CLAIM' as table_name\n    ,'Claim ID' as drill_down_key\n    ,coalesce(m.claim_id, 'NULL') as drill_down_value\n    ,'institutional' as claim_type\n    ,'DIAGNOSIS_POA_2' as field_name\n       ,case when cg.frequency > 1                then 'multiple'\n        when m.diagnosis_poa_2 in ('y','n')       then 'valid'\n        when m.diagnosis_poa_2 is null            then 'null'\n                                                  else 'invalid' end as bucket_name\n    ,cast(null as TEXT) as invalid_reason\n    ,cast(\n  substr(agg.field_aggregated, 1, 255)\n as TEXT) as field_value\n    , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom base as m\nleft outer join claim_grain as cg on m.claim_id = cg.claim_id and m.data_source = cg.data_source\nleft outer join claim_agg as agg on m.claim_id = agg.claim_id and m.data_source = agg.data_source", "relation_name": "tuva.data_quality.institutional_present_on_admission_2", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:01.537823Z", "completed_at": "2025-06-03T19:50:01.554045Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:01.561383Z", "completed_at": "2025-06-03T19:50:01.561390Z"}], "thread_id": "Thread-4", "execution_time": 0.032839298248291016, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.data_quality__institutional_present_on_admission_3", "compiled": true, "compiled_code": "\n\nwith base as (\n    select *\n    from tuva.input_layer.medical_claim\n    where claim_type = 'institutional'\n),\nunique_field as (\n    select distinct claim_id\n        ,cast(diagnosis_poa_3 as TEXT)  as field\n        ,data_source\n    from base\n\n),\nclaim_grain as (\n    select claim_id\n        ,data_source\n        ,count(*) as frequency\n    from unique_field\n    group by claim_id\n        ,data_source\n),\nclaim_agg as (\nselect\n    claim_id,\n    data_source\n    , \n    listagg(\n        coalesce(field, 'null'),\n        ', '\n        )\n        within group (order by field desc) as field_aggregated -- noqa\nfrom\n    unique_field\ngroup by\n    claim_id,\n    data_source\n\t)\nselect distinct -- to bring to claim_id grain\n    m.data_source\n    ,coalesce(cast(m.claim_start_date as TEXT),cast('1900-01-01' as TEXT)) as source_date\n    ,'MEDICAL_CLAIM' as table_name\n    ,'Claim ID' as drill_down_key\n    ,coalesce(m.claim_id, 'NULL') as drill_down_value\n    ,'institutional' as claim_type\n    ,'DIAGNOSIS_POA_3' as field_name\n       ,case when cg.frequency > 1                then 'multiple'\n        when m.diagnosis_poa_3 in ('y','n')       then 'valid'\n        when m.diagnosis_poa_3 is null            then 'null'\n                                                  else 'invalid' end as bucket_name\n    ,cast(null as TEXT) as invalid_reason\n    ,cast(\n  substr(agg.field_aggregated, 1, 255)\n as TEXT) as field_value\n    , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom base as m\nleft outer join claim_grain as cg on m.claim_id = cg.claim_id and m.data_source = cg.data_source\nleft outer join claim_agg as agg on m.claim_id = agg.claim_id and m.data_source = agg.data_source", "relation_name": "tuva.data_quality.institutional_present_on_admission_3", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:01.545218Z", "completed_at": "2025-06-03T19:50:01.561772Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:01.562678Z", "completed_at": "2025-06-03T19:50:01.562683Z"}], "thread_id": "Thread-2", "execution_time": 0.026022911071777344, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.data_quality__institutional_rendering_npi", "compiled": true, "compiled_code": "\n\nwith base as (\n    select *\n    from tuva.input_layer.medical_claim\n    where claim_type = 'institutional'\n),\nunique_field as (\n    select distinct claim_id\n        ,cast(facility_npi as TEXT) as field\n        ,data_source\n    from base\n),\nclaim_grain as (\n    select claim_id\n        ,data_source\n        ,count(*) as frequency\n    from unique_field\n    group by claim_id\n        ,data_source\n),\nclaim_agg as (\nselect\n    claim_id,\n    data_source\n    , \n    listagg(\n        coalesce(field, 'null'),\n        ', '\n        )\n        within group (order by field desc) as field_aggregated -- noqa\nfrom\n    unique_field\ngroup by\n    claim_id,\n    data_source\n\t)\nselect distinct -- to bring to claim_id grain\n    m.data_source\n    ,coalesce(cast(m.claim_start_date as TEXT),cast('1900-01-01' as TEXT)) as source_date\n    ,'MEDICAL_CLAIM' as table_name\n    ,'Claim ID' as drill_down_key\n    ,coalesce(m.claim_id, 'NULL') as drill_down_value\n    ,'institutional' as claim_type\n    ,'RENDERING_NPI' as field_name\n    ,case when cg.frequency > 1                then 'multiple'\n          when term.npi is not null            then 'valid'\n          when m.rendering_npi is not null      then 'invalid'\n                                               else 'null' end as bucket_name\n    ,case\n        when cg.frequency = 1\n            and m.rendering_npi is not null\n            and term.npi is null\n        then 'provider npi does not join to terminology provider table'\n        else null\n    end as invalid_reason\n    ,cast(\n  substr(agg.field_aggregated, 1, 255)\n as TEXT) as field_value\n    , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom base as m\nleft outer join claim_grain as cg on m.claim_id = cg.claim_id and m.data_source = cg.data_source\nleft outer join tuva.terminology.provider as term on m.rendering_npi = term.npi\nleft outer join claim_agg as agg on m.claim_id = agg.claim_id and m.data_source = agg.data_source", "relation_name": "tuva.data_quality.institutional_rendering_npi", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:01.554283Z", "completed_at": "2025-06-03T19:50:01.568517Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:01.570390Z", "completed_at": "2025-06-03T19:50:01.570395Z"}], "thread_id": "Thread-1", "execution_time": 0.025575876235961914, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.data_quality__institutional_revenue_center_code", "compiled": true, "compiled_code": "\n\nselect\n      m.data_source\n    , coalesce(cast(m.claim_start_date as TEXT),cast('1900-01-01' as TEXT)) as source_date\n    , 'MEDICAL_CLAIM' as table_name\n    , 'Claim ID | Claim Line Number' as drill_down_key\n    , coalesce(cast(m.claim_id as TEXT), 'null') || '|' || coalesce(cast(m.claim_line_number as TEXT), 'null') as drill_down_value\n    , 'institutional' as claim_type\n    , 'REVENUE_CENTER_CODE' as field_name\n    , case\n          when term.revenue_center_code is not null then 'valid'\n          when m.revenue_center_code is not null    then 'invalid'\n                                                    else 'null' end as bucket_name\n    , case\n        when m.revenue_center_code is not null\n            and term.revenue_center_code is null\n            then 'Revenue center code does not join to Terminology Revenue Center table'\n        else null\n    end as invalid_reason\n    , m.revenue_center_code || '|' || coalesce(term.revenue_center_description, '') as field_value\n    , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\n    from tuva.input_layer.medical_claim as m\nleft outer join tuva.terminology.revenue_center as term on m.revenue_center_code = term.revenue_center_code", "relation_name": "tuva.data_quality.institutional_revenue_center_code", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:01.563062Z", "completed_at": "2025-06-03T19:50:01.571654Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:01.579488Z", "completed_at": "2025-06-03T19:50:01.579494Z"}], "thread_id": "Thread-3", "execution_time": 0.01847982406616211, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.data_quality__institutional_service_unit_quantity", "compiled": true, "compiled_code": "\n\nselect\n      m.data_source\n    , coalesce(cast(m.claim_start_date as TEXT),cast('1900-01-01' as TEXT)) as source_date\n    , 'MEDICAL_CLAIM' as table_name\n    , 'Claim ID | Claim Line Number' as drill_down_key\n    , coalesce(cast(m.claim_id as TEXT), 'null') || '|' || coalesce(cast(m.claim_line_number as TEXT), 'null') as drill_down_value\n    , m.claim_type as claim_type\n    , 'service_unit_quantity' as field_name\n    , case when m.service_unit_quantity is null then 'null'\n                                    else 'valid' end as bucket_name\n    , cast(null as TEXT) as invalid_reason\n    , cast(service_unit_quantity as TEXT) as field_value\n    , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom tuva.input_layer.medical_claim as m", "relation_name": "tuva.data_quality.institutional_service_unit_quantity", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:01.571862Z", "completed_at": "2025-06-03T19:50:01.589196Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:01.599365Z", "completed_at": "2025-06-03T19:50:01.599372Z"}], "thread_id": "Thread-4", "execution_time": 0.029587984085083008, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.data_quality__professional_billing_npi", "compiled": true, "compiled_code": "\n\nwith base as (\n    select *\n    from tuva.input_layer.medical_claim\n    where claim_type = 'professional'\n)\n\nselect\n      m.data_source\n    , coalesce(cast(m.claim_start_date as TEXT),cast('1900-01-01' as TEXT)) as source_date\n    , 'MEDICAL_CLAIM' as table_name\n    , 'Claim ID | Claim Line Number' as drill_down_key\n    , coalesce(cast(m.claim_id as TEXT), 'null') || '|' || coalesce(cast(m.claim_line_number as TEXT), 'null') as drill_down_value\n    , 'professional' as claim_type\n    , 'BILLING_NPI' as field_name\n    , case when term.npi is not null          then        'valid'\n          when m.billing_npi is not null    then 'invalid'\n                                             else 'null' end as bucket_name\n    , case\n        when m.billing_npi is not null\n            and term.npi is null\n            then 'Billing NPI does not join to Terminology Provider Table'\n        else null\n    end as invalid_reason\n    , cast(m.billing_npi as TEXT) as field_value\n    , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom base as m\nleft outer join tuva.terminology.provider as term on m.billing_npi = term.npi", "relation_name": "tuva.data_quality.professional_billing_npi", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:01.579914Z", "completed_at": "2025-06-03T19:50:01.599818Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:01.600768Z", "completed_at": "2025-06-03T19:50:01.600772Z"}], "thread_id": "Thread-2", "execution_time": 0.02972698211669922, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.data_quality__professional_claim_end_date", "compiled": true, "compiled_code": "\n\nwith base as (\n    select *\n    from tuva.input_layer.medical_claim\n    where claim_type = 'professional'\n)\n, tuva_last_run as(\n    select cast(substring('2025-06-03 19:49:40.396647+00:00',1,10) as date) as tuva_last_run\n)\n ,unique_field as (\n    select distinct claim_id\n        ,cast(claim_end_date as TEXT) as field\n        ,data_source\n    from base\n)\n, claim_grain as (\n    select claim_id\n        ,data_source\n        ,count(*) as frequency\n    from unique_field\n    group by claim_id\n        ,data_source\n)\n, claim_agg as (\nselect\n    claim_id\n    , data_source\n    , \n    listagg(\n        coalesce(field, 'null'),\n        ', '\n        )\n        within group (order by field desc) as field_aggregated -- noqa\nfrom\n    unique_field\ngroup by\n    claim_id\n    , data_source\n\t)\nselect\n    m.data_source\n    ,coalesce(cast(m.claim_start_date as TEXT),cast('1900-01-01' as TEXT)) as source_date\n    ,'MEDICAL_CLAIM' as table_name\n    ,'Claim ID' as drill_down_key\n    ,coalesce(m.claim_id,'NULL') as drill_down_value\n    ,'professional' as claim_type\n    ,'CLAIM_END_DATE' as field_name\n    ,case\n        when cg.frequency > 1 then 'multiple'\n        when m.claim_end_date > cast(substring('2025-06-03 19:49:40.396647+00:00',1,10) as date) then 'invalid'\n        when m.claim_end_date < \n\n    dateadd(\n        year,\n        -10,\n        cte.tuva_last_run\n        )\n\n then 'invalid'\n        when m.claim_end_date < m.claim_start_date then 'invalid'\n        when m.claim_end_date is null then 'null'\n        else 'valid'\n    end as bucket_name\n    ,case\n        when cg.frequency > 1 then 'multiple'\n        when m.claim_end_date > cast(substring('2025-06-03 19:49:40.396647+00:00',1,10) as date) then 'future'\n        when m.claim_end_date < \n\n    dateadd(\n        year,\n        -10,\n        cte.tuva_last_run\n        )\n\n then 'too old'\n        when m.claim_end_date < m.claim_start_date then 'claim end date before start date'\n        when m.claim_end_date is null then null\n        else 'valid'\n    end as invalid_reason\n    ,cast(\n  substr(agg.field_aggregated, 1, 255)\n as TEXT) as field_value\n    , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom base as m\nleft outer join claim_grain as cg on m.claim_id = cg.claim_id and m.data_source = cg.data_source\nleft outer join claim_agg as agg on m.claim_id = agg.claim_id and m.data_source = agg.data_source\ncross join tuva_last_run as cte", "relation_name": "tuva.data_quality.professional_claim_end_date", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:01.589484Z", "completed_at": "2025-06-03T19:50:01.600570Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:01.607877Z", "completed_at": "2025-06-03T19:50:01.607883Z"}], "thread_id": "Thread-1", "execution_time": 0.02873396873474121, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.data_quality__professional_claim_start_date", "compiled": true, "compiled_code": "\n\nwith base as (\n    select *\n    from tuva.input_layer.medical_claim\n    where claim_type = 'professional'\n)\n, tuva_last_run as(\n    select cast(substring('2025-06-03 19:49:40.396647+00:00',1,10) as date) as tuva_last_run\n)\n, unique_field as (\n    select distinct claim_id\n        ,cast(claim_start_date as TEXT) as field\n        ,data_source\n    from base\n),\nclaim_grain as (\n    select claim_id\n        ,data_source\n        ,count(*) as frequency\n    from unique_field\n    group by claim_id\n        ,data_source\n),\nclaim_agg as (\nselect\n    claim_id,\n    data_source\n    , \n    listagg(\n        coalesce(field, 'null'),\n        ', '\n        )\n        within group (order by field desc) as field_aggregated -- noqa\nfrom\n    unique_field\ngroup by\n    claim_id,\n    data_source\n\t)\nselect\n    m.data_source\n    ,coalesce(cast(m.claim_start_date as TEXT),cast('1900-01-01' as TEXT)) as source_date\n    ,'MEDICAL_CLAIM' as table_name\n    ,'Claim ID' as drill_down_key\n    ,coalesce(m.claim_id,'NULL') as drill_down_value\n    ,'professional' as claim_type\n    ,'CLAIM_START_DATE' as field_name\n    ,case\n        when cg.frequency > 1 then 'multiple'\n        when m.claim_start_date > cast(substring('2025-06-03 19:49:40.396647+00:00',1,10) as date) then 'invalid'\n        when m.claim_start_date < \n\n    dateadd(\n        year,\n        -10,\n        cte.tuva_last_run\n        )\n\n then 'invalid'\n        when m.claim_start_date is null then 'null'\n        else 'valid'\n    end as bucket_name\n    ,case\n        when cg.frequency > 1 then 'multiple'\n        when m.claim_start_date > cast(substring('2025-06-03 19:49:40.396647+00:00',1,10) as date) then 'future'\n        when m.claim_start_date < \n\n    dateadd(\n        year,\n        -10,\n        cte.tuva_last_run\n        )\n\n then 'too old'\n        else null\n    end as invalid_reason\n    ,cast(\n  substr(agg.field_aggregated, 1, 255)\n as TEXT) as field_value\n    , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom base as m\nleft outer join claim_grain as cg on m.claim_id = cg.claim_id and m.data_source = cg.data_source\nleft outer join claim_agg as agg on m.claim_id = agg.claim_id and m.data_source = agg.data_source\ncross join tuva_last_run as cte", "relation_name": "tuva.data_quality.professional_claim_start_date", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:01.601133Z", "completed_at": "2025-06-03T19:50:01.615622Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:01.617014Z", "completed_at": "2025-06-03T19:50:01.617020Z"}], "thread_id": "Thread-3", "execution_time": 0.018069982528686523, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.data_quality__professional_diagnosis_code_1", "compiled": true, "compiled_code": "\n\nwith base as (\n    select *\n    from tuva.input_layer.medical_claim\n    where claim_type = 'professional'\n)\n\nselect\n      m.data_source\n    , coalesce(cast(m.claim_start_date as TEXT),cast('1900-01-01' as TEXT)) as source_date\n    , 'MEDICAL_CLAIM' as table_name\n    , 'Claim ID | Claim Line Number' as drill_down_key\n    , coalesce(cast(m.claim_id as TEXT), 'null') || '|' || coalesce(cast(m.claim_line_number as TEXT), 'null') as drill_down_value\n    , 'professional' as claim_type\n    , 'DIAGNOSIS_CODE_1' as field_name\n    , case when term.icd_10_cm is not null          then 'valid'\n          when m.diagnosis_code_1 is not null      then 'invalid'\n                                                   else 'null' end as bucket_name\n    , case\n        when m.diagnosis_code_1 is not null\n            and term.icd_10_cm is null\n            then 'Diagnosis Code does not join to Terminology ICD_10_CM table'\n        else null\n    end as invalid_reason\n    , m.diagnosis_code_1 || '|' || coalesce(term.short_description, '') as field_value\n    , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom base as m\nleft outer join tuva.terminology.icd_10_cm as term on m.diagnosis_code_1 = term.icd_10_cm", "relation_name": "tuva.data_quality.professional_diagnosis_code_1", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:01.609285Z", "completed_at": "2025-06-03T19:50:01.624061Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:01.631506Z", "completed_at": "2025-06-03T19:50:01.631513Z"}], "thread_id": "Thread-4", "execution_time": 0.02398228645324707, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.data_quality__professional_diagnosis_code_2", "compiled": true, "compiled_code": "\n\nwith base as (\n    select *\n    from tuva.input_layer.medical_claim\n    where claim_type = 'professional'\n)\n\nselect\n      m.data_source\n    , coalesce(cast(m.claim_start_date as TEXT),cast('1900-01-01' as TEXT)) as source_date\n    , 'MEDICAL_CLAIM' as table_name\n    , 'Claim ID | Claim Line Number' as drill_down_key\n    , coalesce(cast(m.claim_id as TEXT), 'null') || '|' || coalesce(cast(m.claim_line_number as TEXT), 'null') as drill_down_value\n    , 'professional' as claim_type\n    , 'DIAGNOSIS_CODE_2' as field_name\n    , case when term.icd_10_cm is not null          then 'valid'\n          when m.diagnosis_code_2 is not null      then 'invalid'\n                                                   else 'null' end as bucket_name\n    , case\n        when m.diagnosis_code_2 is not null\n            and term.icd_10_cm is null\n            then 'Diagnosis Code does not join to Terminology ICD_10_CM table'\n        else null\n    end as invalid_reason\n    , m.diagnosis_code_2 || '|' || coalesce(term.short_description, '') as field_value\n    , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom base as m\nleft outer join tuva.terminology.icd_10_cm as term on m.diagnosis_code_2 = term.icd_10_cm", "relation_name": "tuva.data_quality.professional_diagnosis_code_2", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:01.617644Z", "completed_at": "2025-06-03T19:50:01.632466Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:01.633390Z", "completed_at": "2025-06-03T19:50:01.633394Z"}], "thread_id": "Thread-2", "execution_time": 0.02441692352294922, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.data_quality__professional_diagnosis_code_3", "compiled": true, "compiled_code": "\n\nwith base as (\n    select *\n    from tuva.input_layer.medical_claim\n    where claim_type = 'professional'\n)\n\nselect\n      m.data_source\n    , coalesce(cast(m.claim_start_date as TEXT),cast('1900-01-01' as TEXT)) as source_date\n    , 'MEDICAL_CLAIM' as table_name\n    , 'Claim ID | Claim Line Number' as drill_down_key\n    , coalesce(cast(m.claim_id as TEXT), 'null') || '|' || coalesce(cast(m.claim_line_number as TEXT), 'null') as drill_down_value\n    , 'professional' as claim_type\n    , 'DIAGNOSIS_CODE_3' as field_name\n    , case when term.icd_10_cm is not null          then 'valid'\n          when m.diagnosis_code_3 is not null      then 'invalid'\n                                                   else 'null' end as bucket_name\n    , case\n        when m.diagnosis_code_3 is not null\n            and term.icd_10_cm is null\n            then 'Diagnosis Code does not join to Terminology ICD_10_CM table'\n        else null\n    end as invalid_reason\n    , m.diagnosis_code_3 || '|' || coalesce(term.short_description, '') as field_value\n    , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom base as m\nleft outer join tuva.terminology.icd_10_cm as term on m.diagnosis_code_3 = term.icd_10_cm", "relation_name": "tuva.data_quality.professional_diagnosis_code_3", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:01.624597Z", "completed_at": "2025-06-03T19:50:01.632969Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:01.640019Z", "completed_at": "2025-06-03T19:50:01.640024Z"}], "thread_id": "Thread-1", "execution_time": 0.023559093475341797, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.data_quality__professional_facility_npi", "compiled": true, "compiled_code": "\n\nwith base as (\n    select *\n    from tuva.input_layer.medical_claim\n    where claim_type = 'professional'\n)\n\nselect\n      m.data_source\n    , coalesce(cast(m.claim_start_date as TEXT),cast('1900-01-01' as TEXT)) as source_date\n    , 'MEDICAL_CLAIM' as table_name\n    , 'Claim ID | Claim Line Number' as drill_down_key\n    , coalesce(cast(m.claim_id as TEXT), 'null') || '|' || coalesce(cast(m.claim_line_number as TEXT), 'null') as drill_down_value\n    , 'professional' as claim_type\n    , 'FACILITY_NPI' as field_name\n    , case when term.npi is not null          then        'valid'\n          when m.facility_npi is not null    then 'invalid'\n                                             else 'null' end as bucket_name\n    , case\n        when m.facility_npi is not null\n            and term.npi is null\n            then 'Facility NPI does not join to Terminology Provider Table'\n        else null\n    end as invalid_reason\n    , cast(m.facility_npi as TEXT) as field_value\n    , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom base as m\nleft outer join tuva.terminology.provider as term on m.facility_npi = term.npi", "relation_name": "tuva.data_quality.professional_facility_npi", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:01.633736Z", "completed_at": "2025-06-03T19:50:01.648542Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:01.649246Z", "completed_at": "2025-06-03T19:50:01.649252Z"}], "thread_id": "Thread-3", "execution_time": 0.017394065856933594, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.data_quality__professional_place_of_service_code", "compiled": true, "compiled_code": "\n\nwith base as (\n    select *\n    from tuva.input_layer.medical_claim\n    where claim_type = 'professional'\n)\n\nselect\n      m.data_source\n    , coalesce(cast(m.claim_start_date as TEXT),cast('1900-01-01' as TEXT)) as source_date\n    , 'MEDICAL_CLAIM' as table_name\n    , 'Claim ID | Claim Line Number' as drill_down_key\n    , coalesce(cast(m.claim_id as TEXT), 'null') || '|' || coalesce(cast(m.claim_line_number as TEXT), 'null') as drill_down_value\n    , 'professional' as claim_type\n    , 'PLACE_OF_SERVICE_CODE' as field_name\n    , case when term.place_of_service_code is not null then 'valid'\n          when m.place_of_service_code is not null    then 'invalid'\n                                               else 'null' end as bucket_name\n    , case\n        when m.place_of_service_code is not null\n            and term.place_of_service_code is null\n            then 'Place of Service Code does not join to Terminology Place of Service table'\n        else null\n    end as invalid_reason\n    , m.place_of_service_code || '|' || coalesce(term.place_of_service_description, '') as field_value\n    , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom base as m\nleft outer join tuva.terminology.place_of_service as term on m.place_of_service_code = term.place_of_service_code", "relation_name": "tuva.data_quality.professional_place_of_service_code", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:01.641174Z", "completed_at": "2025-06-03T19:50:01.649625Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:01.659072Z", "completed_at": "2025-06-03T19:50:01.659078Z"}], "thread_id": "Thread-4", "execution_time": 0.025989770889282227, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.data_quality__professional_rendering_npi", "compiled": true, "compiled_code": "\n\nwith base as (\n    select *\n    from tuva.input_layer.medical_claim\n    where claim_type = 'professional'\n)\n\nselect\n      m.data_source\n    , coalesce(cast(m.claim_start_date as TEXT),cast('1900-01-01' as TEXT)) as source_date\n    , 'MEDICAL_CLAIM' as table_name\n    , 'Claim ID | Claim Line Number' as drill_down_key\n    , coalesce(cast(m.claim_id as TEXT), 'null') || '|' || coalesce(cast(m.claim_line_number as TEXT), 'null') as drill_down_value\n    , 'professional' as claim_type\n    , 'RENDERING_NPI' as field_name\n    , case when term.npi is not null          then        'valid'\n          when m.rendering_npi is not null    then 'invalid'\n                                             else 'null' end as bucket_name\n    , case\n        when m.rendering_npi is not null\n            and term.npi is null\n            then 'Rendering Provider NPI does not join to Terminology Provider table'\n        else null\n    end as invalid_reason\n    , cast(m.rendering_npi as TEXT) as field_value\n    , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom base as m\nleft outer join tuva.terminology.provider as term on m.rendering_npi = term.npi", "relation_name": "tuva.data_quality.professional_rendering_npi", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:01.653887Z", "completed_at": "2025-06-03T19:50:01.660719Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:01.667296Z", "completed_at": "2025-06-03T19:50:01.667301Z"}], "thread_id": "Thread-1", "execution_time": 0.019018173217773438, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.input_layer__medical_claim", "compiled": true, "compiled_code": "\nselect *\nfrom tuva.input_layer.medical_claim", "relation_name": "tuva.input_layer.input_layer__medical_claim", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:01.661391Z", "completed_at": "2025-06-03T19:50:01.678699Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:01.685264Z", "completed_at": "2025-06-03T19:50:01.685272Z"}], "thread_id": "Thread-3", "execution_time": 0.025679826736450195, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.data_quality__pharmacy_allowed_amount", "compiled": true, "compiled_code": "\n\nselect distinct -- to bring to claim_ID grain\n      m.data_source\n    , coalesce(cast(m.paid_date as TEXT),cast('1900-01-01' as TEXT)) as source_date\n    , 'PHARMACY_CLAIM' as table_name\n    , 'Claim ID | Claim Line Number' as drill_down_key\n    , coalesce(cast(m.claim_id as TEXT), 'null') || '|' || coalesce(cast(m.claim_line_number as TEXT), 'null') as drill_down_value\n    , 'PHARMACY' as claim_type\n    , 'ALLOWED_AMOUNT' as field_name\n    , case when m.allowed_amount is null          then        'null'\n                                              else 'valid' end as bucket_name\n    , cast(null as TEXT) as invalid_reason\n    , cast(allowed_amount as TEXT) as field_value\n    , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom tuva.input_layer.pharmacy_claim as m", "relation_name": "tuva.data_quality.pharmacy_allowed_amount", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:01.669020Z", "completed_at": "2025-06-03T19:50:01.685901Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:01.693297Z", "completed_at": "2025-06-03T19:50:01.693303Z"}], "thread_id": "Thread-4", "execution_time": 0.03243684768676758, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.data_quality__pharmacy_claim_id", "compiled": true, "compiled_code": "\n\nselect\n      m.data_source\n    , coalesce(cast(m.paid_date as TEXT),cast('1900-01-01' as TEXT)) as source_date\n    , 'PHARMACY_CLAIM' as table_name\n    , 'Claim ID | Claim Line Number' as drill_down_key\n    , coalesce(cast(m.claim_id as TEXT), 'null') || '|' || coalesce(cast(m.claim_line_number as TEXT), 'null') as drill_down_value\n    , 'PHARMACY' as claim_type\n    , 'CLAIM_ID' as field_name\n    , case\n        when m.claim_id is null then 'null' else 'valid' end as bucket_name\n    , cast(null as TEXT) as invalid_reason\n    , cast(m.claim_id as TEXT) as field_value\n    , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom tuva.input_layer.pharmacy_claim as m", "relation_name": "tuva.data_quality.pharmacy_claim_id", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:01.679235Z", "completed_at": "2025-06-03T19:50:01.693074Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:01.693962Z", "completed_at": "2025-06-03T19:50:01.693967Z"}], "thread_id": "Thread-2", "execution_time": 0.02615070343017578, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.data_quality__pharmacy_claim_line_number", "compiled": true, "compiled_code": "\n\nselect\n      m.data_source\n    , coalesce(cast(m.paid_date as TEXT),cast('1900-01-01' as TEXT)) as source_date\n    , 'PHARMACY_CLAIM' as table_name\n    , 'Claim ID | Claim Line Number' as drill_down_key\n    , coalesce(cast(m.claim_id as TEXT), 'null') || '|' || coalesce(cast(m.claim_line_number as TEXT), 'null') as drill_down_value\n    , 'PHARMACY' as claim_type\n    , 'CLAIM_LINE_NUMBER' as field_name\n    , case\n        when m.claim_line_number is null then 'null' else 'valid' end as bucket_name\n    , cast(null as TEXT) as invalid_reason\n    , cast(claim_line_number as TEXT) as field_value\n    , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom tuva.input_layer.pharmacy_claim as m", "relation_name": "tuva.data_quality.pharmacy_claim_line_number", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:01.686429Z", "completed_at": "2025-06-03T19:50:01.695032Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:01.701586Z", "completed_at": "2025-06-03T19:50:01.701592Z"}], "thread_id": "Thread-1", "execution_time": 0.022710084915161133, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.data_quality__pharmacy_coinsurance_amount", "compiled": true, "compiled_code": "\n\nselect distinct -- to bring to claim_ID grain\n      m.data_source\n    , coalesce(cast(m.paid_date as TEXT),cast('1900-01-01' as TEXT)) as source_date\n    , 'PHARMACY_CLAIM' as table_name\n    , 'Claim ID | Claim Line Number' as drill_down_key\n    , coalesce(cast(m.claim_id as TEXT), 'null') || '|' || coalesce(cast(m.claim_line_number as TEXT), 'null') as drill_down_value\n    , 'PHARMACY' as claim_type\n    , 'COINSURANCE_AMOUNT' as field_name\n    , case when m.coinsurance_amount is null          then        'null'\n                                              else 'valid' end as bucket_name\n    , cast(null as TEXT) as invalid_reason\n    , cast(coinsurance_amount as TEXT) as field_value\n    , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom tuva.input_layer.pharmacy_claim as m", "relation_name": "tuva.data_quality.pharmacy_coinsurance_amount", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:01.695484Z", "completed_at": "2025-06-03T19:50:01.709175Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:01.715590Z", "completed_at": "2025-06-03T19:50:01.715598Z"}], "thread_id": "Thread-3", "execution_time": 0.021975040435791016, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.data_quality__pharmacy_copayment_amount", "compiled": true, "compiled_code": "\n\nselect distinct -- to bring to claim_ID grain\n      m.data_source\n    , coalesce(cast(m.paid_date as TEXT),cast('1900-01-01' as TEXT)) as source_date\n    , 'PHARMACY_CLAIM' as table_name\n    , 'Claim ID | Claim Line Number' as drill_down_key\n    , coalesce(cast(m.claim_id as TEXT), 'null') || '|' || coalesce(cast(m.claim_line_number as TEXT), 'null') as drill_down_value\n    , 'PHARMACY' as claim_type\n    , 'COPAYMENT_AMOUNT' as field_name\n    , case when m.copayment_amount is null then 'null'\n                                           else 'valid' end as bucket_name\n    , cast(null as TEXT) as invalid_reason\n    , cast(copayment_amount as TEXT) as field_value\n    , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom tuva.input_layer.pharmacy_claim as m", "relation_name": "tuva.data_quality.pharmacy_copayment_amount", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:01.702672Z", "completed_at": "2025-06-03T19:50:01.716258Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:01.723568Z", "completed_at": "2025-06-03T19:50:01.723573Z"}], "thread_id": "Thread-4", "execution_time": 0.02837204933166504, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.data_quality__pharmacy_data_source", "compiled": true, "compiled_code": "\n\nselect\n      m.data_source\n    , coalesce(cast(m.paid_date as TEXT),cast('1900-01-01' as TEXT)) as source_date\n    , 'PHARMACY_CLAIM' as table_name\n    , 'Claim ID | Claim Line Number' as drill_down_key\n    , coalesce(cast(m.claim_id as TEXT), 'null') || '|' || coalesce(cast(m.claim_line_number as TEXT), 'null') as drill_down_value\n    , 'PHARMACY' as claim_type\n    , 'DATA_SOURCE' as field_name\n    , case\n        when m.data_source is null then 'null' else 'valid' end as bucket_name\n    , cast(null as TEXT) as invalid_reason\n    , cast(data_source as TEXT) as field_value\n    , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom tuva.input_layer.pharmacy_claim as m", "relation_name": "tuva.data_quality.pharmacy_data_source", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:01.709377Z", "completed_at": "2025-06-03T19:50:01.722021Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:01.724170Z", "completed_at": "2025-06-03T19:50:01.724174Z"}], "thread_id": "Thread-2", "execution_time": 0.02288079261779785, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.data_quality__pharmacy_days_supply", "compiled": true, "compiled_code": "\n\nselect\n      m.data_source\n    , coalesce(cast(m.paid_date as TEXT),cast('1900-01-01' as TEXT)) as source_date\n    , 'PHARMACY_CLAIM' as table_name\n    , 'Claim ID | Claim Line Number' as drill_down_key\n    , coalesce(cast(m.claim_id as TEXT), 'null') || '|' || coalesce(cast(m.claim_line_number as TEXT), 'null') as drill_down_value\n    , 'PHARMACY' as claim_type\n    , 'DAYS_SUPPLY' as field_name\n    , case\n        when m.days_supply is null then 'null' else 'valid' end as bucket_name\n    , cast(null as TEXT) as invalid_reason\n    , cast(days_supply as TEXT) as field_value\n    , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom tuva.input_layer.pharmacy_claim as m", "relation_name": "tuva.data_quality.pharmacy_days_supply", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:01.716711Z", "completed_at": "2025-06-03T19:50:01.725289Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:01.732905Z", "completed_at": "2025-06-03T19:50:01.732910Z"}], "thread_id": "Thread-1", "execution_time": 0.017714977264404297, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.data_quality__pharmacy_deductible_amount", "compiled": true, "compiled_code": "\n\nselect distinct -- to bring to claim_ID grain\n      m.data_source\n    , coalesce(cast(m.paid_date as TEXT),cast('1900-01-01' as TEXT)) as source_date\n    , 'PHARMACY_CLAIM' as table_name\n    , 'Claim ID | Claim Line Number' as drill_down_key\n    , coalesce(cast(m.claim_id as TEXT), 'null') || '|' || coalesce(cast(m.claim_line_number as TEXT), 'null') as drill_down_value\n    , 'PHARMACY' as claim_type\n    , 'DEDUCTIBLE_AMOUNT' as field_name\n    , case when m.deductible_amount is null then 'null'\n                                            else 'valid' end as bucket_name\n    , cast(null as TEXT) as invalid_reason\n    , cast(deductible_amount as TEXT) as field_value\n    , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom tuva.input_layer.pharmacy_claim as m", "relation_name": "tuva.data_quality.pharmacy_deductible_amount", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:01.725710Z", "completed_at": "2025-06-03T19:50:01.740275Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:01.746760Z", "completed_at": "2025-06-03T19:50:01.746767Z"}], "thread_id": "Thread-3", "execution_time": 0.022880077362060547, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.data_quality__pharmacy_dispensing_date", "compiled": true, "compiled_code": "\nwith tuva_last_run as(\n    select cast(substring('2025-06-03 19:49:40.396647+00:00',1,10) as date) as tuva_last_run\n)\n\nselect\n      m.data_source\n    , coalesce(cast(m.paid_date as TEXT),cast('1900-01-01' as TEXT)) as source_date\n    , 'PHARMACY_CLAIM' as table_name\n    , 'Claim ID | Claim Line Number' as drill_down_key\n    , coalesce(cast(m.claim_id as TEXT), 'null') || '|' || coalesce(cast(m.claim_line_number as TEXT), 'null') as drill_down_value\n    , 'PHARMACY' as claim_type\n    , 'DISPENSING_DATE' as field_name\n    , case\n        when m.dispensing_date > cte.tuva_last_run then 'invalid'\n        when m.dispensing_date < \n\n    dateadd(\n        year,\n        -10,\n        cte.tuva_last_run\n        )\n\n then 'invalid'\n        when m.dispensing_date is null then 'null'\n        else 'valid'\n    end as bucket_name\n    , case\n        when m.dispensing_date > cte.tuva_last_run then 'future'\n        when m.dispensing_date < \n\n    dateadd(\n        year,\n        -10,\n        cte.tuva_last_run\n        )\n\n then 'too old'\n        else null\n        end as invalid_reason\n    , cast(dispensing_date as TEXT) as field_value\n    , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom tuva.input_layer.pharmacy_claim as m\ncross join tuva_last_run as cte", "relation_name": "tuva.data_quality.pharmacy_dispensing_date", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:01.734008Z", "completed_at": "2025-06-03T19:50:01.747733Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:01.755076Z", "completed_at": "2025-06-03T19:50:01.755082Z"}], "thread_id": "Thread-4", "execution_time": 0.029647111892700195, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.data_quality__pharmacy_dispensing_provider_npi", "compiled": true, "compiled_code": "\n\nselect distinct -- to bring to claim_ID grain\n      m.data_source\n    , coalesce(cast(m.paid_date as TEXT),cast('1900-01-01' as TEXT)) as source_date\n    , 'PHARMACY_CLAIM' as table_name\n    , 'Claim ID | Claim Line Number' as drill_down_key\n    , coalesce(cast(m.claim_id as TEXT), 'null') || '|' || coalesce(cast(m.claim_line_number as TEXT), 'null') as drill_down_value\n    , 'PHARMACY' as claim_type\n    , 'DISPENSING_PROVIDER_NPI' as field_name\n    , case when term.npi is not null                     then        'valid'\n          when m.dispensing_provider_npi is not null    then 'invalid'\n                                                        else 'null'\n                                                        end as bucket_name\n    , case\n        when m.dispensing_provider_npi is not null\n            and term.npi is null\n            then 'dispensing provider npi does not join to terminology provider table'\n        else null\n    end as invalid_reason\n    , cast(m.dispensing_provider_npi as TEXT) as field_value\n    , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom tuva.input_layer.pharmacy_claim as m\nleft outer join tuva.terminology.provider as term on m.dispensing_provider_npi = term.npi", "relation_name": "tuva.data_quality.pharmacy_dispensing_provider_npi", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:01.740709Z", "completed_at": "2025-06-03T19:50:01.753586Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:01.755444Z", "completed_at": "2025-06-03T19:50:01.755447Z"}], "thread_id": "Thread-2", "execution_time": 0.022836923599243164, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.data_quality__pharmacy_member_id", "compiled": true, "compiled_code": "\n\nselect\n      m.data_source\n    , coalesce(cast(m.paid_date as TEXT),cast('1900-01-01' as TEXT)) as source_date\n    , 'PHARMACY_CLAIM' as table_name\n    , 'Claim ID | Claim Line Number' as drill_down_key\n    , coalesce(cast(m.claim_id as TEXT), 'null') || '|' || coalesce(cast(m.claim_line_number as TEXT), 'null') as drill_down_value\n    , 'PHARMACY' as claim_type\n    , 'MEMBER_ID' as field_name\n    , case\n        when m.member_id is null then 'null' else 'valid' end as bucket_name\n    , cast(null as TEXT) as invalid_reason\n    , cast(member_id as TEXT) as field_value\n    , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom tuva.input_layer.pharmacy_claim as m", "relation_name": "tuva.data_quality.pharmacy_member_id", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:01.747940Z", "completed_at": "2025-06-03T19:50:01.756567Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:01.910943Z", "completed_at": "2025-06-03T19:50:01.910951Z"}], "thread_id": "Thread-1", "execution_time": 0.16451406478881836, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.data_quality__pharmacy_ndc_code", "compiled": true, "compiled_code": "\n\nselect distinct -- to bring to claim_ID grain\n      m.data_source\n    , coalesce(cast(m.paid_date as TEXT),cast('1900-01-01' as TEXT)) as source_date\n    , 'PHARMACY_CLAIM' as table_name\n    , 'Claim ID | Claim Line Number' as drill_down_key\n    , coalesce(cast(m.claim_id as TEXT), 'null') || '|' || coalesce(cast(m.claim_line_number as TEXT), 'null') as drill_down_value\n    , 'PHARMACY' as claim_type\n    , 'NDC_CODE' as field_name\n    , case when term.ndc is not null          then        'valid'\n          when m.ndc_code is not null        then 'invalid'\n                                             else 'null' end as bucket_name\n    , case\n        when m.ndc_code is not null\n            and term.ndc is null\n            then 'NDC Code does not join to Terminology NDC table'\n        else null\n    end as invalid_reason\n    , m.ndc_code || '|' || coalesce(term.rxnorm_description, term.fda_description, '') as field_value\n    , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom tuva.input_layer.pharmacy_claim as m\nleft outer join tuva.terminology.ndc as term on m.ndc_code = term.ndc", "relation_name": "tuva.data_quality.pharmacy_ndc_code", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:01.756753Z", "completed_at": "2025-06-03T19:50:01.930349Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:01.934491Z", "completed_at": "2025-06-03T19:50:01.934501Z"}], "thread_id": "Thread-3", "execution_time": 0.17978620529174805, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.data_quality__pharmacy_paid_amount", "compiled": true, "compiled_code": "\n\nselect distinct -- to bring to claim_ID grain\n      m.data_source\n    , coalesce(cast(m.paid_date as TEXT),cast('1900-01-01' as TEXT)) as source_date\n    , 'PHARMACY_CLAIM' as table_name\n    , 'Claim ID | Claim Line Number' as drill_down_key\n    , coalesce(cast(m.claim_id as TEXT), 'null') || '|' || coalesce(cast(m.claim_line_number as TEXT), 'null') as drill_down_value\n    , 'PHARMACY' as claim_type\n    , 'PAID_AMOUNT' as field_name\n    , case when m.paid_amount is null          then        'null'\n                                              else 'valid' end as bucket_name\n    , cast(null as TEXT) as invalid_reason\n    , cast(paid_amount as TEXT) as field_value\n    , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom tuva.input_layer.pharmacy_claim as m", "relation_name": "tuva.data_quality.pharmacy_paid_amount", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:01.912672Z", "completed_at": "2025-06-03T19:50:01.936289Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:01.944337Z", "completed_at": "2025-06-03T19:50:01.944344Z"}], "thread_id": "Thread-4", "execution_time": 0.034538984298706055, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.data_quality__pharmacy_paid_date", "compiled": true, "compiled_code": "\nwith tuva_last_run as(\n     select cast(substring('2025-06-03 19:49:40.396647+00:00',1,10) as date) as tuva_last_run\n)\n\nselect\n      m.data_source\n    , coalesce(cast(m.paid_date as TEXT),cast('1900-01-01' as TEXT)) as source_date\n    , 'PHARMACY_CLAIM' as table_name\n    , 'Claim ID | Claim Line Number' as drill_down_key\n    , coalesce(cast(m.claim_id as TEXT), 'null') || '|' || coalesce(cast(m.claim_line_number as TEXT), 'null') as drill_down_value\n    , 'PHARMACY' as claim_type\n    , 'PAID_DATE' as field_name\n    , case\n        when m.paid_date > cte.tuva_last_run then 'invalid'\n        when m.paid_date < \n\n    dateadd(\n        year,\n        -10,\n        cte.tuva_last_run\n        )\n\n then 'invalid'\n        when m.paid_date is null then 'null'\n        else 'valid'\n    end as bucket_name\n    , case\n        when m.paid_date > cte.tuva_last_run then 'future'\n        when m.paid_date < \n\n    dateadd(\n        year,\n        -10,\n        cte.tuva_last_run\n        )\n\n then 'too old'\n        else null\n        end as invalid_reason\n    , cast(paid_date as TEXT) as field_value\n    , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom tuva.input_layer.pharmacy_claim as m\ncross join tuva_last_run as cte", "relation_name": "tuva.data_quality.pharmacy_paid_date", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:01.924132Z", "completed_at": "2025-06-03T19:50:01.942974Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:01.944749Z", "completed_at": "2025-06-03T19:50:01.944753Z"}], "thread_id": "Thread-2", "execution_time": 0.0341649055480957, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.data_quality__pharmacy_payer", "compiled": true, "compiled_code": "\n\nselect\n      m.data_source\n    , coalesce(cast(m.paid_date as TEXT),cast('1900-01-01' as TEXT)) as source_date\n    , 'PHARMACY_CLAIM' as table_name\n    , 'Claim ID | Claim Line Number' as drill_down_key\n    , coalesce(cast(m.claim_id as TEXT), 'null') || '|' || coalesce(cast(m.claim_line_number as TEXT), 'null') as drill_down_value\n    , 'PHARMACY' as claim_type\n    , 'PAYER' as field_name\n    , case\n        when m.payer is null then 'null' else 'valid' end as bucket_name\n    , cast(null as TEXT) as invalid_reason\n    , cast(payer as TEXT) as field_value\n    , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom tuva.input_layer.pharmacy_claim as m", "relation_name": "tuva.data_quality.pharmacy_payer", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:01.936701Z", "completed_at": "2025-06-03T19:50:01.955243Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:01.956193Z", "completed_at": "2025-06-03T19:50:01.956200Z"}], "thread_id": "Thread-1", "execution_time": 0.02250981330871582, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.data_quality__pharmacy_person_id", "compiled": true, "compiled_code": "\n\nselect\n      m.data_source\n    , coalesce(cast(m.paid_date as TEXT),cast('1900-01-01' as TEXT)) as source_date\n    , 'PHARMACY_CLAIM' as table_name\n    , 'Claim ID | Claim Line Number' as drill_down_key\n    , coalesce(cast(m.claim_id as TEXT), 'null') || '|' || coalesce(cast(m.claim_line_number as TEXT), 'null') as drill_down_value\n    , 'PHARMACY' as claim_type\n    , 'PERSON_ID' as field_name\n    , case\n        when m.person_id is null then 'null' else 'valid' end as bucket_name\n    , cast(null as TEXT) as invalid_reason\n    , cast(person_id as TEXT) as field_value\n    , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom tuva.input_layer.pharmacy_claim as m", "relation_name": "tuva.data_quality.pharmacy_person_id", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:01.945937Z", "completed_at": "2025-06-03T19:50:01.963651Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:01.971563Z", "completed_at": "2025-06-03T19:50:01.971569Z"}], "thread_id": "Thread-3", "execution_time": 0.02757406234741211, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.data_quality__pharmacy_plan", "compiled": true, "compiled_code": "\n\nselect\n      m.data_source\n    , coalesce(cast(m.paid_date as TEXT),cast('1900-01-01' as TEXT)) as source_date\n    , 'PHARMACY_CLAIM' as table_name\n    , 'Claim ID | Claim Line Number' as drill_down_key\n    , coalesce(cast(m.claim_id as TEXT), 'null') || '|' || coalesce(cast(m.claim_line_number as TEXT), 'null') as drill_down_value\n    , 'PHARMACY' as claim_type\n    , 'PLAN' as field_name\n    , case\n        when m.plan is null then 'null' else 'valid' end as bucket_name\n    , cast(null as TEXT) as invalid_reason\n    , cast(plan as TEXT) as field_value\n    , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom tuva.input_layer.pharmacy_claim as m", "relation_name": "tuva.data_quality.pharmacy_plan", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:01.964139Z", "completed_at": "2025-06-03T19:50:01.972756Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:01.980266Z", "completed_at": "2025-06-03T19:50:01.980273Z"}], "thread_id": "Thread-2", "execution_time": 0.024482011795043945, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.data_quality__pharmacy_quantity", "compiled": true, "compiled_code": "\n\nselect\n      m.data_source\n    , coalesce(cast(m.paid_date as TEXT),cast('1900-01-01' as TEXT)) as source_date\n    , 'PHARMACY_CLAIM' as table_name\n    , 'Claim ID | Claim Line Number' as drill_down_key\n    , coalesce(cast(m.claim_id as TEXT), 'null') || '|' || coalesce(cast(m.claim_line_number as TEXT), 'null') as drill_down_value\n    , 'PHARMACY' as claim_type\n    , 'QUANTITY' as field_name\n    , case\n        when m.quantity is null then 'null' else 'valid' end as bucket_name\n    , cast(null as TEXT) as invalid_reason\n    , cast(quantity as TEXT) as field_value\n    , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom tuva.input_layer.pharmacy_claim as m", "relation_name": "tuva.data_quality.pharmacy_quantity", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:01.957376Z", "completed_at": "2025-06-03T19:50:01.972986Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:01.980645Z", "completed_at": "2025-06-03T19:50:01.980649Z"}], "thread_id": "Thread-4", "execution_time": 0.025207996368408203, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.data_quality__pharmacy_prescribing_provider_npi", "compiled": true, "compiled_code": "\n\nselect distinct -- to bring to claim_ID grain\n      m.data_source\n    , coalesce(cast(m.paid_date as TEXT),cast('1900-01-01' as TEXT)) as source_date\n    , 'PHARMACY_CLAIM' as table_name\n    , 'Claim ID | Claim Line Number' as drill_down_key\n    , coalesce(cast(m.claim_id as TEXT), 'null') || '|' || coalesce(cast(m.claim_line_number as TEXT), 'null') as drill_down_value\n    , 'PHARMACY' as claim_type\n    , 'PRESCRIBING_PROVIDER_NPI' as field_name\n    , case when term.npi is not null          then        'valid'\n          when m.prescribing_provider_npi is not null    then 'invalid'\n                                             else 'null' end as bucket_name\n    , case\n        when m.prescribing_provider_npi is not null\n            and term.npi is null\n            then 'Prescribing Provider NPI does not join to Terminology Provider table'\n        else null\n    end as invalid_reason\n    , cast(m.prescribing_provider_npi as TEXT) as field_value\n    , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom tuva.input_layer.pharmacy_claim as m\nleft outer join tuva.terminology.provider as term on m.prescribing_provider_npi = term.npi", "relation_name": "tuva.data_quality.pharmacy_prescribing_provider_npi", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:01.973176Z", "completed_at": "2025-06-03T19:50:01.981850Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:01.988297Z", "completed_at": "2025-06-03T19:50:01.988304Z"}], "thread_id": "Thread-1", "execution_time": 0.017174959182739258, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.data_quality__pharmacy_refills", "compiled": true, "compiled_code": "\n\nselect\n      m.data_source\n    , coalesce(cast(m.paid_date as TEXT),cast('1900-01-01' as TEXT)) as source_date\n    , 'PHARMACY_CLAIM' as table_name\n    , 'Claim ID | Claim Line Number' as drill_down_key\n    , coalesce(cast(m.claim_id as TEXT), 'null') || '|' || coalesce(cast(m.claim_line_number as TEXT), 'null') as drill_down_value\n    , 'PHARMACY' as claim_type\n    , 'REFILLS' as field_name\n    , case\n        when m.refills is null then 'null' else 'valid' end as bucket_name\n    , cast(null as TEXT) as invalid_reason\n    , cast(refills as TEXT) as field_value\n    , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom tuva.input_layer.pharmacy_claim as m", "relation_name": "tuva.data_quality.pharmacy_refills", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:01.989980Z", "completed_at": "2025-06-03T19:50:02.005572Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:02.024702Z", "completed_at": "2025-06-03T19:50:02.024718Z"}], "thread_id": "Thread-2", "execution_time": 0.03706812858581543, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.input_layer__pharmacy_claim", "compiled": true, "compiled_code": "\nselect *\nfrom tuva.input_layer.pharmacy_claim", "relation_name": "tuva.input_layer.input_layer__pharmacy_claim", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:01.994803Z", "completed_at": "2025-06-03T19:50:02.011649Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:02.038086Z", "completed_at": "2025-06-03T19:50:02.038093Z"}], "thread_id": "Thread-4", "execution_time": 0.05011296272277832, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.input_layer__provider_attribution", "compiled": true, "compiled_code": "\n\nselect *\nfrom tuva.input_layer.provider_attribution\n\n\n", "relation_name": "tuva.input_layer.input_layer__provider_attribution", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:02.006082Z", "completed_at": "2025-06-03T19:50:02.046538Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:02.047777Z", "completed_at": "2025-06-03T19:50:02.047784Z"}], "thread_id": "Thread-1", "execution_time": 0.04331517219543457, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.data_quality__data_quality_clinical_detail", "compiled": true, "compiled_code": "\n\nwith cte as (\nselect * from tuva.data_quality.condition_claim_id\n\nunion all\n\nselect * from tuva.data_quality.condition_condition_id\n\nunion all\n\nselect * from tuva.data_quality.condition_condition_rank\n\nunion all\n\nselect * from tuva.data_quality.condition_condition_type\n\nunion all\n\nselect * from tuva.data_quality.condition_data_source\n\nunion all\n\nselect * from tuva.data_quality.condition_encounter_id\n\nunion all\n\nselect * from tuva.data_quality.condition_normalized_code_type\n\nunion all\n\nselect * from tuva.data_quality.condition_normalized_code\n\nunion all\n\nselect * from tuva.data_quality.condition_normalized_description\n\nunion all\n\nselect * from tuva.data_quality.condition_onset_date\n\nunion all\n\nselect * from tuva.data_quality.condition_patient_id\n\nunion all\n\nselect * from tuva.data_quality.condition_present_on_admit_code\n\nunion all\n\nselect * from tuva.data_quality.condition_present_on_admit_description\n\nunion all\n\nselect * from tuva.data_quality.condition_recorded_date\n\nunion all\n\nselect * from tuva.data_quality.condition_resolved_date\n\nunion all\n\nselect * from tuva.data_quality.condition_source_code\n\nunion all\n\nselect * from tuva.data_quality.condition_source_code_type\n\nunion all\n\nselect * from tuva.data_quality.condition_source_description\n\nunion all\n\nselect * from tuva.data_quality.condition_status\n\nunion all\n\nselect * from tuva.data_quality.encounter_admit_source_code\n\nunion all\n\nselect * from tuva.data_quality.encounter_admit_source_description\n\nunion all\n\nselect * from tuva.data_quality.encounter_admit_type_code\n\nunion all\n\nselect * from tuva.data_quality.encounter_admit_type_description\n\nunion all\n\nselect * from tuva.data_quality.encounter_allowed_amount\n\nunion all\n\nselect * from tuva.data_quality.encounter_attending_provider_id\n\nunion all\n\nselect * from tuva.data_quality.encounter_charge_amount\n\nunion all\n\nselect * from tuva.data_quality.encounter_data_source\n\nunion all\n\nselect * from tuva.data_quality.encounter_discharge_disposition_code\n\nunion all\n\nselect * from tuva.data_quality.encounter_discharge_disposition_description\n\nunion all\n\nselect * from tuva.data_quality.encounter_encounter_end_date\n\nunion all\n\nselect * from tuva.data_quality.encounter_encounter_id\n\nunion all\n\nselect * from tuva.data_quality.encounter_encounter_start_date\n\nunion all\n\nselect * from tuva.data_quality.encounter_encounter_type\n\nunion all\n\nselect * from tuva.data_quality.encounter_facility_id\n\nunion all\n\nselect * from tuva.data_quality.encounter_length_of_stay\n\nunion all\n\nselect * from tuva.data_quality.encounter_drg_code\n\nunion all\n\nselect * from tuva.data_quality.encounter_drg_description\n\nunion all\n\nselect * from tuva.data_quality.encounter_paid_amount\n\nunion all\n\nselect * from tuva.data_quality.encounter_patient_id\n\nunion all\n\nselect * from tuva.data_quality.encounter_primary_diagnosis_code\n\nunion all\n\nselect * from tuva.data_quality.encounter_primary_diagnosis_code_type\n\nunion all\n\nselect * from tuva.data_quality.encounter_primary_diagnosis_description\n\nunion all\n\nselect * from tuva.data_quality.practitioner_practice_affiliation\n\nunion all\n\nselect * from tuva.data_quality.practitioner_sub_specialty\n\nunion all\n\nselect * from tuva.data_quality.practitioner_last_name\n\nunion all\n\nselect * from tuva.data_quality.practitioner_practitioner_id\n\nunion all\n\nselect * from tuva.data_quality.practitioner_data_source\n\nunion all\n\nselect * from tuva.data_quality.practitioner_npi\n\nunion all\n\nselect * from tuva.data_quality.practitioner_first_name\n\nunion all\n\nselect * from tuva.data_quality.practitioner_specialty\n\nunion all\n\nselect * from tuva.data_quality.location_parent_organization\n\nunion all\n\nselect * from tuva.data_quality.location_latitude\n\nunion all\n\nselect * from tuva.data_quality.location_facility_type\n\nunion all\n\nselect * from tuva.data_quality.location_zip_code\n\nunion all\n\nselect * from tuva.data_quality.location_data_source\n\nunion all\n\nselect * from tuva.data_quality.location_city\n\nunion all\n\nselect * from tuva.data_quality.location_npi\n\nunion all\n\nselect * from tuva.data_quality.location_location_id\n\nunion all\n\nselect * from tuva.data_quality.location_longitude\n\nunion all\n\nselect * from tuva.data_quality.location_address\n\nunion all\n\nselect * from tuva.data_quality.location_state\n\nunion all\n\nselect * from tuva.data_quality.location_name\n\nunion all\n\nselect * from tuva.data_quality.procedure_normalized_code_type\n\nunion all\n\nselect * from tuva.data_quality.procedure_normalized_description\n\nunion all\n\nselect * from tuva.data_quality.procedure_procedure_id\n\nunion all\n\nselect * from tuva.data_quality.procedure_claim_id\n\nunion all\n\nselect * from tuva.data_quality.procedure_source_code\n\nunion all\n\nselect * from tuva.data_quality.procedure_source_code_type\n\nunion all\n\nselect * from tuva.data_quality.procedure_source_description\n\nunion all\n\nselect * from tuva.data_quality.procedure_practitioner_id\n\nunion all\n\nselect * from tuva.data_quality.procedure_data_source\n\nunion all\n\nselect * from tuva.data_quality.procedure_patient_id\n\nunion all\n\nselect * from tuva.data_quality.procedure_procedure_date\n\nunion all\n\nselect * from tuva.data_quality.procedure_encounter_id\n\nunion all\n\nselect * from tuva.data_quality.procedure_modifier_5\n\nunion all\n\nselect * from tuva.data_quality.procedure_modifier_4\n\nunion all\n\nselect * from tuva.data_quality.procedure_normalized_code\n\nunion all\n\nselect * from tuva.data_quality.procedure_modifier_1\n\nunion all\n\nselect * from tuva.data_quality.procedure_modifier_3\n\nunion all\n\nselect * from tuva.data_quality.procedure_modifier_2\n\nunion all\n\nselect * from tuva.data_quality.lab_result_source_abnormal_flag\n\nunion all\n\nselect * from tuva.data_quality.lab_result_specimen\n\nunion all\n\nselect * from tuva.data_quality.lab_result_source_reference_range_low\n\nunion all\n\nselect * from tuva.data_quality.lab_result_source_units\n\nunion all\n\nselect * from tuva.data_quality.lab_result_lab_result_id\n\nunion all\n\nselect * from tuva.data_quality.lab_result_collection_date\n\nunion all\n\nselect * from tuva.data_quality.lab_result_normalized_component\n\nunion all\n\nselect * from tuva.data_quality.lab_result_ordering_practitioner_id\n\nunion all\n\nselect * from tuva.data_quality.lab_result_result\n\nunion all\n\nselect * from tuva.data_quality.lab_result_source_code_type\n\nunion all\n\nselect * from tuva.data_quality.lab_result_normalized_description\n\nunion all\n\nselect * from tuva.data_quality.lab_result_normalized_reference_range_low\n\nunion all\n\nselect * from tuva.data_quality.lab_result_normalized_reference_range_high\n\nunion all\n\nselect * from tuva.data_quality.lab_result_normalized_code\n\nunion all\n\nselect * from tuva.data_quality.lab_result_source_description\n\nunion all\n\nselect * from tuva.data_quality.lab_result_status\n\nunion all\n\nselect * from tuva.data_quality.lab_result_accession_number\n\nunion all\n\nselect * from tuva.data_quality.lab_result_result_date\n\nunion all\n\nselect * from tuva.data_quality.lab_result_normalized_abnormal_flag\n\nunion all\n\nselect * from tuva.data_quality.lab_result_data_source\n\nunion all\n\nselect * from tuva.data_quality.lab_result_normalized_units\n\nunion all\n\nselect * from tuva.data_quality.lab_result_normalized_code_type\n\nunion all\n\nselect * from tuva.data_quality.lab_result_source_reference_range_high\n\nunion all\n\nselect * from tuva.data_quality.lab_result_source_code\n\nunion all\n\nselect * from tuva.data_quality.lab_result_patient_id\n\nunion all\n\nselect * from tuva.data_quality.lab_result_source_component\n\nunion all\n\nselect * from tuva.data_quality.lab_result_encounter_id\n\nunion all\n\nselect * from tuva.data_quality.patient_sex\n\nunion all\n\nselect * from tuva.data_quality.patient_state\n\nunion all\n\nselect * from tuva.data_quality.patient_city\n\nunion all\n\nselect * from tuva.data_quality.patient_longitude\n\nunion all\n\nselect * from tuva.data_quality.patient_county\n\nunion all\n\nselect * from tuva.data_quality.patient_race\n\nunion all\n\nselect * from tuva.data_quality.patient_death_flag\n\nunion all\n\nselect * from tuva.data_quality.patient_address\n\nunion all\n\nselect * from tuva.data_quality.patient_data_source\n\nunion all\n\nselect * from tuva.data_quality.patient_zip_code\n\nunion all\n\nselect * from tuva.data_quality.patient_first_name\n\nunion all\n\nselect * from tuva.data_quality.patient_last_name\n\nunion all\n\nselect * from tuva.data_quality.patient_latitude\n\nunion all\n\nselect * from tuva.data_quality.patient_birth_date\n\nunion all\n\nselect * from tuva.data_quality.patient_death_date\n\nunion all\n\nselect * from tuva.data_quality.patient_patient_id\n\nunion all\n\nselect * from tuva.data_quality.medication_rxnorm_code\n\nunion all\n\nselect * from tuva.data_quality.medication_source_code\n\nunion all\n\nselect * from tuva.data_quality.medication_atc_code\n\nunion all\n\nselect * from tuva.data_quality.medication_dispensing_date\n\nunion all\n\nselect * from tuva.data_quality.medication_prescribing_date\n\nunion all\n\nselect * from tuva.data_quality.medication_days_supply\n\nunion all\n\nselect * from tuva.data_quality.medication_strength\n\nunion all\n\nselect * from tuva.data_quality.medication_patient_id\n\nunion all\n\nselect * from tuva.data_quality.medication_rxnorm_description\n\nunion all\n\nselect * from tuva.data_quality.medication_encounter_id\n\nunion all\n\nselect * from tuva.data_quality.medication_data_source\n\nunion all\n\nselect * from tuva.data_quality.medication_atc_description\n\nunion all\n\nselect * from tuva.data_quality.medication_quantity_unit\n\nunion all\n\nselect * from tuva.data_quality.medication_source_description\n\nunion all\n\nselect * from tuva.data_quality.medication_ndc_code\n\nunion all\n\nselect * from tuva.data_quality.medication_medication_id\n\nunion all\n\nselect * from tuva.data_quality.medication_source_code_type\n\nunion all\n\nselect * from tuva.data_quality.medication_ndc_description\n\nunion all\n\nselect * from tuva.data_quality.medication_quantity\n\nunion all\n\nselect * from tuva.data_quality.medication_practitioner_id\n\nunion all\n\nselect * from tuva.data_quality.medication_route\n\nunion all\n\nselect * from tuva.data_quality.observation_source_code\n\nunion all\n\nselect * from tuva.data_quality.observation_normalized_reference_range_high\n\nunion all\n\nselect * from tuva.data_quality.observation_source_units\n\nunion all\n\nselect * from tuva.data_quality.observation_observation_type\n\nunion all\n\nselect * from tuva.data_quality.observation_normalized_code\n\nunion all\n\nselect * from tuva.data_quality.observation_normalized_description\n\nunion all\n\nselect * from tuva.data_quality.observation_data_source\n\nunion all\n\nselect * from tuva.data_quality.observation_panel_id\n\nunion all\n\nselect * from tuva.data_quality.observation_observation_id\n\nunion all\n\nselect * from tuva.data_quality.observation_source_reference_range_low\n\nunion all\n\nselect * from tuva.data_quality.observation_result\n\nunion all\n\nselect * from tuva.data_quality.observation_source_code_type\n\nunion all\n\nselect * from tuva.data_quality.observation_normalized_reference_range_low\n\nunion all\n\nselect * from tuva.data_quality.observation_observation_date\n\nunion all\n\nselect * from tuva.data_quality.observation_encounter_id\n\nunion all\n\nselect * from tuva.data_quality.observation_source_description\n\nunion all\n\nselect * from tuva.data_quality.observation_source_reference_range_high\n\nunion all\n\nselect * from tuva.data_quality.observation_normalized_units\n\nunion all\n\nselect * from tuva.data_quality.observation_normalized_code_type\n\nunion all\n\nselect * from tuva.data_quality.observation_patient_id\n\n)\n\nselect\n    data_source\n    , cast(source_date as TEXT) as source_date\n    , table_name\n    , drill_down_key\n    , drill_down_value\n    , field_name\n    , bucket_name\n    , invalid_reason\n    , field_value\n    , tuva_last_run\n    , dense_rank() over (\norder by data_source, table_name, field_name) + 100000 as summary_sk\nfrom cte", "relation_name": "tuva.data_quality.data_quality_clinical_detail", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:02.039466Z", "completed_at": "2025-06-03T19:50:02.048898Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:02.056902Z", "completed_at": "2025-06-03T19:50:02.056910Z"}], "thread_id": "Thread-3", "execution_time": 0.05114102363586426, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.core__lab_result", "compiled": true, "compiled_code": "\n\n\n\n\nselect\n      labs.lab_result_id\n    , labs.person_id\n    , labs.patient_id\n    , labs.encounter_id\n    , labs.accession_number\n    , labs.source_code_type\n    , labs.source_code\n    , labs.source_description\n    , labs.source_component\n    , case\n        when labs.normalized_code_type is not null then labs.normalized_code_type\n        when loinc.loinc is not null then 'loinc'\n        when snomed_ct.snomed_ct is not null then 'snomed-ct'\n        else null end as normalized_code_type\n    , coalesce(\n        labs.normalized_code\n        , loinc.loinc\n        , snomed_ct.snomed_ct\n        ) as normalized_code\n    , coalesce(\n        labs.normalized_description\n        , loinc.long_common_name\n        , snomed_ct.description\n        ) as normalized_description\n    , case when coalesce(labs.normalized_code, labs.normalized_description) is not null then 'manual'\n         when coalesce(loinc.loinc, snomed_ct.snomed_ct) is not null then 'automatic'\n         end as mapping_method\n    , labs.normalized_component\n    , labs.status\n    , labs.result\n    , labs.result_date\n    , labs.collection_date\n    , labs.source_units\n    , labs.normalized_units\n    , labs.source_reference_range_low\n    , labs.source_reference_range_high\n    , labs.normalized_reference_range_low\n    , labs.normalized_reference_range_high\n    , labs.source_abnormal_flag\n    , labs.normalized_abnormal_flag\n    , labs.specimen\n    , labs.ordering_practitioner_id\n    , labs.data_source\n    , labs.tuva_last_run\nfrom tuva.core._stg_clinical_lab_result as labs\nleft outer join tuva.terminology.loinc as loinc\n    on labs.source_code_type = 'loinc'\n        and labs.source_code = loinc.loinc\nleft outer join tuva.terminology.snomed_ct as snomed_ct\n    on labs.source_code_type = 'snomed-ct'\n        and labs.source_code = snomed_ct.snomed_ct\n\n ", "relation_name": "tuva.core.lab_result", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:02.049444Z", "completed_at": "2025-06-03T19:50:02.072302Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:02.073178Z", "completed_at": "2025-06-03T19:50:02.073185Z"}], "thread_id": "Thread-2", "execution_time": 0.026131868362426758, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.core__medication", "compiled": true, "compiled_code": "\n\n\nwith source_mapping as (\n\n    select\n     meds.medication_id\n   , meds.person_id\n   , meds.patient_id\n   , meds.encounter_id\n   , meds.dispensing_date\n   , meds.prescribing_date\n   , meds.source_code_type\n   , meds.source_code\n   , meds.source_description\n   , coalesce(\n       meds.ndc_code\n       , ndc.ndc\n       ) as ndc_code\n   , coalesce(\n       meds.ndc_description\n       , ndc.fda_description\n       , ndc.rxnorm_description\n       ) as ndc_description\n   , case\n        when meds.ndc_code is not null then 'manual'\n        when ndc.ndc is not null then 'automatic'\n        end as ndc_mapping_method\n   , coalesce(\n        meds.rxnorm_code\n        , rxatc.rxcui\n        ) as rxnorm_code\n   , coalesce(\n       meds.rxnorm_description\n       , rxatc.rxnorm_description\n       ) as rxnorm_description\n   , case\n        when meds.rxnorm_code is not null then 'manual'\n        when rxatc.rxcui is not null then 'automatic'\n        end as rxnorm_mapping_method\n   , coalesce(\n        meds.atc_code\n        , rxatc.atc_3_code\n        ) as atc_code\n   , coalesce(\n        meds.atc_description\n        , rxatc.atc_4_name\n        ) as atc_description\n   , case\n        when meds.atc_code is not null then 'manual'\n        when rxatc.atc_3_name is not null then 'automatic'\n        end as atc_mapping_method\n   , meds.route\n   , meds.strength\n   , meds.quantity\n   , meds.quantity_unit\n   , meds.days_supply\n   , meds.practitioner_id\n   , meds.data_source\n   , meds.tuva_last_run\nfrom tuva.core._stg_clinical_medication as meds\n    left outer join tuva.terminology.ndc as ndc\n        on meds.source_code_type = 'ndc'\n        and meds.source_code = ndc.ndc\n    left outer join tuva.terminology.rxnorm_to_atc as rxatc\n        on meds.source_code_type = 'rxnorm'\n        and meds.source_code = rxatc.rxcui\n\n\n\n   )\n\n\n-- add auto rxnorm + atc\nselect\n     sm.medication_id\n   , sm.person_id\n   , sm.encounter_id\n   , sm.dispensing_date\n   , sm.prescribing_date\n   , sm.source_code_type\n   , sm.source_code\n   , sm.source_description\n   , sm.ndc_code\n   , sm.ndc_description\n   , sm.ndc_mapping_method\n   , coalesce(\n        sm.rxnorm_code\n        , ndc.rxcui\n        ) as rxnorm_code\n   , coalesce(\n        sm.rxnorm_description\n        , ndc.rxnorm_description\n        ) as rxnorm_description\n   , case\n        when sm.rxnorm_mapping_method is not null then sm.rxnorm_mapping_method\n        when ndc.rxcui is not null then 'automatic'\n        end as rxnorm_mapping_method\n   , coalesce(\n        sm.atc_code\n        , rxatc.atc_3_code\n        ) as atc_code\n   , coalesce(\n        sm.atc_description\n        , rxatc.atc_3_name\n        ) as atc_description\n   , case\n        when sm.atc_mapping_method is not null then sm.atc_mapping_method\n        when rxatc.atc_3_name is not null then 'automatic'\n        end as atc_mapping_method\n   , sm.route\n   , sm.strength\n   , sm.quantity\n   , sm.quantity_unit\n   , sm.days_supply\n   , sm.practitioner_id\n   , sm.data_source\n   , sm.tuva_last_run\nfrom source_mapping as sm\n    left outer join tuva.terminology.ndc as ndc\n        on sm.ndc_code = ndc.ndc\n    left outer join tuva.terminology.rxnorm_to_atc as rxatc\n        on coalesce(sm.rxnorm_code, ndc.rxcui) = rxatc.rxcui", "relation_name": "tuva.core.medication", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:02.057306Z", "completed_at": "2025-06-03T19:50:02.072943Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:02.073853Z", "completed_at": "2025-06-03T19:50:02.073858Z"}], "thread_id": "Thread-4", "execution_time": 0.02574014663696289, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.core__observation", "compiled": true, "compiled_code": "\n\n\nselect\n      obs.observation_id\n    , obs.person_id\n    , obs.patient_id\n    , obs.encounter_id\n    , obs.panel_id\n    , obs.observation_date\n    , obs.observation_type\n    , obs.source_code_type\n    , obs.source_code\n    , obs.source_description\n    , case\n        when obs.normalized_code_type is not null then obs.normalized_code_type\n        when icd10cm.icd_10_cm is not null then 'icd-10-cm'\n        when icd9cm.icd_9_cm is not null then 'icd-9-cm'\n        when icd10pcs.icd_10_pcs is not null then 'icd-10-pcs'\n        when icd9pcs.icd_9_pcs is not null then 'icd-10-pcs'\n        when hcpcs.hcpcs is not null then 'hcpcs'\n        when snomed_ct.snomed_ct is not null then 'snomed-ct'\n        when loinc.loinc is not null then 'loinc'\n        end as normalized_code_type\n  , coalesce(\n        obs.normalized_code\n      , icd10cm.icd_10_cm\n      , icd9cm.icd_9_cm\n      , icd10pcs.icd_10_pcs\n      , icd9pcs.icd_9_pcs\n      , hcpcs.hcpcs\n      , snomed_ct.snomed_ct\n      , loinc.loinc\n      ) as normalized_code\n      , coalesce(\n        obs.normalized_description\n      , icd10cm.short_description\n      , icd9cm.short_description\n      , icd10pcs.description\n      , icd9pcs.short_description\n      , hcpcs.short_description\n      , snomed_ct.description\n      , loinc.long_common_name\n      ) as normalized_description\n     , case\n         when coalesce(obs.normalized_code, obs.normalized_description) is not null then 'manual'\n         when coalesce(\n            icd10cm.icd_10_cm\n          , icd9cm.icd_9_cm\n          , icd10pcs.icd_10_pcs\n          , icd9pcs.icd_9_pcs\n          , hcpcs.hcpcs\n          , snomed_ct.snomed_ct\n          , loinc.loinc) is not null then 'automatic'\n         end as mapping_method\n    , obs.result\n    , obs.source_units\n    , obs.normalized_units\n    , obs.source_reference_range_low\n    , obs.source_reference_range_high\n    , obs.normalized_reference_range_low\n    , obs.normalized_reference_range_high\n    , obs.data_source\n    , obs.tuva_last_run\nfrom tuva.core._stg_clinical_observation as obs\nleft outer join tuva.terminology.icd_10_cm as icd10cm\n    on obs.source_code_type = 'icd-10-cm'\n        and replace(obs.source_code, '.', '') = icd10cm.icd_10_cm\nleft outer join tuva.terminology.icd_9_cm as icd9cm\n    on obs.source_code_type = 'icd-9-cm'\n        and replace(obs.source_code, '.', '') = icd9cm.icd_9_cm\nleft outer join tuva.terminology.icd_10_pcs as icd10pcs\n    on obs.source_code_type = 'icd-10-pcs'\n        and obs.source_code = icd10pcs.icd_10_pcs\nleft outer join tuva.terminology.icd_9_pcs as icd9pcs\n    on obs.source_code_type = 'icd-9-pcs'\n        and replace(obs.source_code, '.', '') = icd9pcs.icd_9_pcs\nleft outer join tuva.terminology.hcpcs_level_2 as hcpcs\n    on obs.source_code_type = 'hcpcs'\n        and obs.source_code = hcpcs.hcpcs\nleft outer join tuva.terminology.snomed_ct as snomed_ct\n    on obs.source_code_type = 'snomed-ct'\n        and obs.source_code = snomed_ct.snomed_ct\nleft outer join tuva.terminology.loinc as loinc\n    on obs.source_code_type = 'loinc'\n        and obs.source_code = loinc.loinc\n\n", "relation_name": "tuva.core.observation", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:02.066713Z", "completed_at": "2025-06-03T19:50:02.074218Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:02.081192Z", "completed_at": "2025-06-03T19:50:02.081198Z"}], "thread_id": "Thread-1", "execution_time": 0.024682044982910156, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.data_quality__unique_value_examples", "compiled": true, "compiled_code": "\n\nselect * from tuva.data_quality.primary_keys_condition_condition_id\n\nunion all\n\nselect * from tuva.data_quality.primary_keys_encounter_encounter_id\n\nunion all\n\nselect * from tuva.data_quality.primary_keys_lab_result_lab_result_id\n\nunion all\n\nselect * from tuva.data_quality.primary_keys_location_location_id\n\nunion all\n\nselect * from tuva.data_quality.primary_keys_medication_medication_id\n\nunion all\n\nselect * from tuva.data_quality.primary_keys_observation_observation_id\n\nunion all\n\nselect * from tuva.data_quality.primary_keys_patient_patient_id\n\nunion all\n\nselect * from tuva.data_quality.primary_keys_practitioner_practitioner_id\n\nunion all\n\nselect * from tuva.data_quality.primary_keys_procedure_procedure_id", "relation_name": "tuva.data_quality.unique_value_examples", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:02.083691Z", "completed_at": "2025-06-03T19:50:02.106195Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:02.113733Z", "completed_at": "2025-06-03T19:50:02.113740Z"}], "thread_id": "Thread-2", "execution_time": 0.03212285041809082, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.accepted_values_input_layer__eligibility_death_flag__0__1.4f9c6b355d", "compiled": true, "compiled_code": "\n    \n    \n\nwith all_values as (\n\n    select\n        death_flag as value_field,\n        count(*) as n_records\n\n    from tuva.input_layer.input_layer__eligibility\n    group by death_flag\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    '0','1'\n)\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:02.089955Z", "completed_at": "2025-06-03T19:50:02.112353Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:02.114151Z", "completed_at": "2025-06-03T19:50:02.114154Z"}], "thread_id": "Thread-4", "execution_time": 0.03219294548034668, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.accepted_values_input_layer__eligibility_dual_status_code__00__01__02__03__04__05__06__08__09__10.5f70cd2ab3", "compiled": true, "compiled_code": "\n    \n    \n\nwith all_values as (\n\n    select\n        dual_status_code as value_field,\n        count(*) as n_records\n\n    from tuva.input_layer.input_layer__eligibility\n    group by dual_status_code\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    '00','01','02','03','04','05','06','08','09','10'\n)\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:02.099990Z", "completed_at": "2025-06-03T19:50:02.114515Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:02.115364Z", "completed_at": "2025-06-03T19:50:02.115368Z"}], "thread_id": "Thread-1", "execution_time": 0.03204512596130371, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.accepted_values_input_layer__eligibility_gender__male__female__unknown.c5aa36e618", "compiled": true, "compiled_code": "\n    \n    \n\nwith all_values as (\n\n    select\n        gender as value_field,\n        count(*) as n_records\n\n    from tuva.input_layer.input_layer__eligibility\n    group by gender\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    'male','female','unknown'\n)\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:02.106438Z", "completed_at": "2025-06-03T19:50:02.116017Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:02.116987Z", "completed_at": "2025-06-03T19:50:02.116991Z"}], "thread_id": "Thread-3", "execution_time": 0.017377138137817383, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.accepted_values_input_layer__eligibility_medicare_status_code__00__10__11__20__21__31__40.34f13ee1cc", "compiled": true, "compiled_code": "\n    \n    \n\nwith all_values as (\n\n    select\n        medicare_status_code as value_field,\n        count(*) as n_records\n\n    from tuva.input_layer.input_layer__eligibility\n    group by medicare_status_code\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    '00','10','11','20','21','31','40'\n)\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:02.117837Z", "completed_at": "2025-06-03T19:50:02.139969Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:02.152289Z", "completed_at": "2025-06-03T19:50:02.152296Z"}], "thread_id": "Thread-2", "execution_time": 0.0366520881652832, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.accepted_values_input_layer__eligibility_original_reason_entitlement_code__0__1__2__3.7f677132e9", "compiled": true, "compiled_code": "\n    \n    \n\nwith all_values as (\n\n    select\n        original_reason_entitlement_code as value_field,\n        count(*) as n_records\n\n    from tuva.input_layer.input_layer__eligibility\n    group by original_reason_entitlement_code\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    '0','1','2','3'\n)\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:02.125153Z", "completed_at": "2025-06-03T19:50:02.149268Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:02.153021Z", "completed_at": "2025-06-03T19:50:02.153026Z"}], "thread_id": "Thread-4", "execution_time": 0.03682684898376465, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_expectations_expect_column_pair_values_A_to_be_greater_than_B_input_layer__eligibility_enrollment_end_date__enrollment_start_date__True.8e13f60714", "compiled": true, "compiled_code": "\n\n\n\n\n\n    with grouped_expression as (\n    select\n        \n        \n    \n  enrollment_end_date >= enrollment_start_date as expression\n\n\n    from tuva.input_layer.input_layer__eligibility\n    \n\n),\nvalidation_errors as (\n\n    select\n        *\n    from\n        grouped_expression\n    where\n        not(expression = true)\n\n)\n\nselect *\nfrom validation_errors\n\n\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:02.143462Z", "completed_at": "2025-06-03T19:50:02.299458Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:02.299919Z", "completed_at": "2025-06-03T19:50:02.299929Z"}], "thread_id": "Thread-3", "execution_time": 0.1668407917022705, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_expectations_expect_column_to_exist_input_layer__eligibility_birth_date.5a7fe6b662", "compiled": true, "compiled_code": "\n\n    with test_data as (\n\n        select\n            cast('BIRTH_DATE' as TEXT) as column_name,\n            5 as matching_column_index,\n            True as column_index_matches\n\n    )\n    select *\n    from test_data\n    where\n        not(matching_column_index >= 0 and column_index_matches)", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:02.156453Z", "completed_at": "2025-06-03T19:50:02.300892Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:02.302298Z", "completed_at": "2025-06-03T19:50:02.302305Z"}], "thread_id": "Thread-2", "execution_time": 0.14775705337524414, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_expectations_expect_column_to_exist_input_layer__eligibility_city.26feff7ef4", "compiled": true, "compiled_code": "\n\n    with test_data as (\n\n        select\n            cast('CITY' as TEXT) as column_name,\n            23 as matching_column_index,\n            True as column_index_matches\n\n    )\n    select *\n    from test_data\n    where\n        not(matching_column_index >= 0 and column_index_matches)", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:02.133588Z", "completed_at": "2025-06-03T19:50:02.301981Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:02.303283Z", "completed_at": "2025-06-03T19:50:02.303288Z"}], "thread_id": "Thread-1", "execution_time": 0.1857621669769287, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_expectations_expect_column_to_exist_input_layer__eligibility_address.959b2c670b", "compiled": true, "compiled_code": "\n\n    with test_data as (\n\n        select\n            cast('ADDRESS' as TEXT) as column_name,\n            22 as matching_column_index,\n            True as column_index_matches\n\n    )\n    select *\n    from test_data\n    where\n        not(matching_column_index >= 0 and column_index_matches)", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:02.165763Z", "completed_at": "2025-06-03T19:50:02.303017Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:02.313655Z", "completed_at": "2025-06-03T19:50:02.313669Z"}], "thread_id": "Thread-4", "execution_time": 0.15882182121276855, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_expectations_expect_column_to_exist_input_layer__eligibility_data_source.0cb3b6215a", "compiled": true, "compiled_code": "\n\n    with test_data as (\n\n        select\n            cast('DATA_SOURCE' as TEXT) as column_name,\n            27 as matching_column_index,\n            True as column_index_matches\n\n    )\n    select *\n    from test_data\n    where\n        not(matching_column_index >= 0 and column_index_matches)", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:02.316944Z", "completed_at": "2025-06-03T19:50:02.459321Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:02.459864Z", "completed_at": "2025-06-03T19:50:02.459875Z"}], "thread_id": "Thread-2", "execution_time": 0.14546489715576172, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_expectations_expect_column_to_exist_input_layer__eligibility_death_flag.a10e98b95d", "compiled": true, "compiled_code": "\n\n    with test_data as (\n\n        select\n            cast('DEATH_FLAG' as TEXT) as column_name,\n            7 as matching_column_index,\n            True as column_index_matches\n\n    )\n    select *\n    from test_data\n    where\n        not(matching_column_index >= 0 and column_index_matches)", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:02.303917Z", "completed_at": "2025-06-03T19:50:02.571136Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:02.571837Z", "completed_at": "2025-06-03T19:50:02.571844Z"}], "thread_id": "Thread-3", "execution_time": 0.2707180976867676, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_expectations_expect_column_to_exist_input_layer__eligibility_death_date.d8574e5c1e", "compiled": true, "compiled_code": "\n\n    with test_data as (\n\n        select\n            cast('DEATH_DATE' as TEXT) as column_name,\n            6 as matching_column_index,\n            True as column_index_matches\n\n    )\n    select *\n    from test_data\n    where\n        not(matching_column_index >= 0 and column_index_matches)", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:02.339682Z", "completed_at": "2025-06-03T19:50:02.571360Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:02.572788Z", "completed_at": "2025-06-03T19:50:02.572792Z"}], "thread_id": "Thread-4", "execution_time": 0.256666898727417, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_expectations_expect_column_to_exist_input_layer__eligibility_enrollment_end_date.f018e630b1", "compiled": true, "compiled_code": "\n\n    with test_data as (\n\n        select\n            cast('ENROLLMENT_END_DATE' as TEXT) as column_name,\n            9 as matching_column_index,\n            True as column_index_matches\n\n    )\n    select *\n    from test_data\n    where\n        not(matching_column_index >= 0 and column_index_matches)", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:02.329516Z", "completed_at": "2025-06-03T19:50:02.577515Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:02.594645Z", "completed_at": "2025-06-03T19:50:02.594653Z"}], "thread_id": "Thread-1", "execution_time": 0.27936291694641113, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_expectations_expect_column_to_exist_input_layer__eligibility_dual_status_code.17479d670d", "compiled": true, "compiled_code": "\n\n    with test_data as (\n\n        select\n            cast('DUAL_STATUS_CODE' as TEXT) as column_name,\n            14 as matching_column_index,\n            True as column_index_matches\n\n    )\n    select *\n    from test_data\n    where\n        not(matching_column_index >= 0 and column_index_matches)", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:02.461732Z", "completed_at": "2025-06-03T19:50:02.700043Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:02.700509Z", "completed_at": "2025-06-03T19:50:02.700518Z"}], "thread_id": "Thread-2", "execution_time": 0.2397303581237793, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_expectations_expect_column_to_exist_input_layer__eligibility_enrollment_start_date.549bafabb4", "compiled": true, "compiled_code": "\n\n    with test_data as (\n\n        select\n            cast('ENROLLMENT_START_DATE' as TEXT) as column_name,\n            8 as matching_column_index,\n            True as column_index_matches\n\n    )\n    select *\n    from test_data\n    where\n        not(matching_column_index >= 0 and column_index_matches)", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:02.577721Z", "completed_at": "2025-06-03T19:50:02.727897Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:02.729086Z", "completed_at": "2025-06-03T19:50:02.729098Z"}], "thread_id": "Thread-3", "execution_time": 0.15277409553527832, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_expectations_expect_column_to_exist_input_layer__eligibility_file_date.43d8e00417", "compiled": true, "compiled_code": "\n\n    with test_data as (\n\n        select\n            cast('FILE_DATE' as TEXT) as column_name,\n            29 as matching_column_index,\n            True as column_index_matches\n\n    )\n    select *\n    from test_data\n    where\n        not(matching_column_index >= 0 and column_index_matches)", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:02.597591Z", "completed_at": "2025-06-03T19:50:02.728764Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:02.729603Z", "completed_at": "2025-06-03T19:50:02.729608Z"}], "thread_id": "Thread-1", "execution_time": 0.13263487815856934, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_expectations_expect_column_to_exist_input_layer__eligibility_first_name.0c9284fbdf", "compiled": true, "compiled_code": "\n\n    with test_data as (\n\n        select\n            cast('FIRST_NAME' as TEXT) as column_name,\n            18 as matching_column_index,\n            True as column_index_matches\n\n    )\n    select *\n    from test_data\n    where\n        not(matching_column_index >= 0 and column_index_matches)", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:02.586468Z", "completed_at": "2025-06-03T19:50:02.730612Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:02.731494Z", "completed_at": "2025-06-03T19:50:02.731499Z"}], "thread_id": "Thread-4", "execution_time": 0.1547698974609375, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_expectations_expect_column_to_exist_input_layer__eligibility_file_name.1fd601e971", "compiled": true, "compiled_code": "\n\n    with test_data as (\n\n        select\n            cast('FILE_NAME' as TEXT) as column_name,\n            28 as matching_column_index,\n            True as column_index_matches\n\n    )\n    select *\n    from test_data\n    where\n        not(matching_column_index >= 0 and column_index_matches)", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:02.709179Z", "completed_at": "2025-06-03T19:50:02.983627Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:02.984788Z", "completed_at": "2025-06-03T19:50:02.984802Z"}], "thread_id": "Thread-2", "execution_time": 0.28288817405700684, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_expectations_expect_column_to_exist_input_layer__eligibility_gender.49eaaab2fa", "compiled": true, "compiled_code": "\n\n    with test_data as (\n\n        select\n            cast('GENDER' as TEXT) as column_name,\n            3 as matching_column_index,\n            True as column_index_matches\n\n    )\n    select *\n    from test_data\n    where\n        not(matching_column_index >= 0 and column_index_matches)", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:02.742435Z", "completed_at": "2025-06-03T19:50:02.984231Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:02.985608Z", "completed_at": "2025-06-03T19:50:02.985618Z"}], "thread_id": "Thread-1", "execution_time": 0.2538280487060547, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_expectations_expect_column_to_exist_input_layer__eligibility_group_name.b11673ec80", "compiled": true, "compiled_code": "\n\n    with test_data as (\n\n        select\n            cast('GROUP_NAME' as TEXT) as column_name,\n            17 as matching_column_index,\n            True as column_index_matches\n\n    )\n    select *\n    from test_data\n    where\n        not(matching_column_index >= 0 and column_index_matches)", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:02.732957Z", "completed_at": "2025-06-03T19:50:02.986335Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:02.988263Z", "completed_at": "2025-06-03T19:50:02.988271Z"}], "thread_id": "Thread-3", "execution_time": 0.2571580410003662, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_expectations_expect_column_to_exist_input_layer__eligibility_group_id.34398c00b1", "compiled": true, "compiled_code": "\n\n    with test_data as (\n\n        select\n            cast('GROUP_ID' as TEXT) as column_name,\n            16 as matching_column_index,\n            True as column_index_matches\n\n    )\n    select *\n    from test_data\n    where\n        not(matching_column_index >= 0 and column_index_matches)", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:02.752822Z", "completed_at": "2025-06-03T19:50:02.987341Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:02.989326Z", "completed_at": "2025-06-03T19:50:02.989332Z"}], "thread_id": "Thread-4", "execution_time": 0.24731898307800293, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_expectations_expect_column_to_exist_input_layer__eligibility_ingest_datetime.9c8980110d", "compiled": true, "compiled_code": "\n\n    with test_data as (\n\n        select\n            cast('INGEST_DATETIME' as TEXT) as column_name,\n            30 as matching_column_index,\n            True as column_index_matches\n\n    )\n    select *\n    from test_data\n    where\n        not(matching_column_index >= 0 and column_index_matches)", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:03.030183Z", "completed_at": "2025-06-03T19:50:03.145680Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:03.145972Z", "completed_at": "2025-06-03T19:50:03.145980Z"}], "thread_id": "Thread-4", "execution_time": 0.14191913604736328, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_expectations_expect_column_to_exist_input_layer__eligibility_original_reason_entitlement_code.4dc719ef35", "compiled": true, "compiled_code": "\n\n    with test_data as (\n\n        select\n            cast('ORIGINAL_REASON_ENTITLEMENT_CODE' as TEXT) as column_name,\n            13 as matching_column_index,\n            True as column_index_matches\n\n    )\n    select *\n    from test_data\n    where\n        not(matching_column_index >= 0 and column_index_matches)", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:02.992356Z", "completed_at": "2025-06-03T19:50:03.147307Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:03.159643Z", "completed_at": "2025-06-03T19:50:03.159653Z"}], "thread_id": "Thread-2", "execution_time": 0.17084574699401855, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_expectations_expect_column_to_exist_input_layer__eligibility_last_name.69bb0a1b6d", "compiled": true, "compiled_code": "\n\n    with test_data as (\n\n        select\n            cast('LAST_NAME' as TEXT) as column_name,\n            19 as matching_column_index,\n            True as column_index_matches\n\n    )\n    select *\n    from test_data\n    where\n        not(matching_column_index >= 0 and column_index_matches)", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:03.007811Z", "completed_at": "2025-06-03T19:50:03.176442Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:03.177339Z", "completed_at": "2025-06-03T19:50:03.177349Z"}], "thread_id": "Thread-1", "execution_time": 0.1875, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_expectations_expect_column_to_exist_input_layer__eligibility_medicare_status_code.c8927966de", "compiled": true, "compiled_code": "\n\n    with test_data as (\n\n        select\n            cast('MEDICARE_STATUS_CODE' as TEXT) as column_name,\n            15 as matching_column_index,\n            True as column_index_matches\n\n    )\n    select *\n    from test_data\n    where\n        not(matching_column_index >= 0 and column_index_matches)", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:03.020280Z", "completed_at": "2025-06-03T19:50:03.193018Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:03.193682Z", "completed_at": "2025-06-03T19:50:03.193690Z"}], "thread_id": "Thread-3", "execution_time": 0.20181894302368164, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_expectations_expect_column_to_exist_input_layer__eligibility_member_id.a76d1a874c", "compiled": true, "compiled_code": "\n\n    with test_data as (\n\n        select\n            cast('MEMBER_ID' as TEXT) as column_name,\n            1 as matching_column_index,\n            True as column_index_matches\n\n    )\n    select *\n    from test_data\n    where\n        not(matching_column_index >= 0 and column_index_matches)", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:03.147613Z", "completed_at": "2025-06-03T19:50:03.313734Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:03.313979Z", "completed_at": "2025-06-03T19:50:03.313985Z"}], "thread_id": "Thread-4", "execution_time": 0.16734099388122559, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_expectations_expect_column_to_exist_input_layer__eligibility_payer.f20644b40f", "compiled": true, "compiled_code": "\n\n    with test_data as (\n\n        select\n            cast('PAYER' as TEXT) as column_name,\n            10 as matching_column_index,\n            True as column_index_matches\n\n    )\n    select *\n    from test_data\n    where\n        not(matching_column_index >= 0 and column_index_matches)", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:03.165701Z", "completed_at": "2025-06-03T19:50:03.315084Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:03.323778Z", "completed_at": "2025-06-03T19:50:03.323784Z"}], "thread_id": "Thread-2", "execution_time": 0.1594388484954834, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_expectations_expect_column_to_exist_input_layer__eligibility_payer_type.2dd6f79507", "compiled": true, "compiled_code": "\n\n    with test_data as (\n\n        select\n            cast('PAYER_TYPE' as TEXT) as column_name,\n            11 as matching_column_index,\n            True as column_index_matches\n\n    )\n    select *\n    from test_data\n    where\n        not(matching_column_index >= 0 and column_index_matches)", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:03.183499Z", "completed_at": "2025-06-03T19:50:03.410561Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:03.410929Z", "completed_at": "2025-06-03T19:50:03.410939Z"}], "thread_id": "Thread-1", "execution_time": 0.2285609245300293, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_expectations_expect_column_to_exist_input_layer__eligibility_person_id.f684cf3981", "compiled": true, "compiled_code": "\n\n    with test_data as (\n\n        select\n            cast('PERSON_ID' as TEXT) as column_name,\n            0 as matching_column_index,\n            True as column_index_matches\n\n    )\n    select *\n    from test_data\n    where\n        not(matching_column_index >= 0 and column_index_matches)", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:03.315293Z", "completed_at": "2025-06-03T19:50:03.444421Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:03.445247Z", "completed_at": "2025-06-03T19:50:03.445255Z"}], "thread_id": "Thread-4", "execution_time": 0.1307530403137207, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_expectations_expect_column_to_exist_input_layer__eligibility_plan.0d5b1d2f56", "compiled": true, "compiled_code": "\n\n    with test_data as (\n\n        select\n            cast('PLAN' as TEXT) as column_name,\n            12 as matching_column_index,\n            True as column_index_matches\n\n    )\n    select *\n    from test_data\n    where\n        not(matching_column_index >= 0 and column_index_matches)", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:03.195165Z", "completed_at": "2025-06-03T19:50:03.444762Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:03.445763Z", "completed_at": "2025-06-03T19:50:03.445768Z"}], "thread_id": "Thread-3", "execution_time": 0.2512059211730957, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_expectations_expect_column_to_exist_input_layer__eligibility_phone.75e3c28f56", "compiled": true, "compiled_code": "\n\n    with test_data as (\n\n        select\n            cast('PHONE' as TEXT) as column_name,\n            26 as matching_column_index,\n            True as column_index_matches\n\n    )\n    select *\n    from test_data\n    where\n        not(matching_column_index >= 0 and column_index_matches)", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:03.325770Z", "completed_at": "2025-06-03T19:50:03.445013Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:03.446241Z", "completed_at": "2025-06-03T19:50:03.446249Z"}], "thread_id": "Thread-2", "execution_time": 0.12099814414978027, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_expectations_expect_column_to_exist_input_layer__eligibility_race.c29f2d9ba3", "compiled": true, "compiled_code": "\n\n    with test_data as (\n\n        select\n            cast('RACE' as TEXT) as column_name,\n            4 as matching_column_index,\n            True as column_index_matches\n\n    )\n    select *\n    from test_data\n    where\n        not(matching_column_index >= 0 and column_index_matches)", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:03.412803Z", "completed_at": "2025-06-03T19:50:03.600454Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:03.600783Z", "completed_at": "2025-06-03T19:50:03.600791Z"}], "thread_id": "Thread-1", "execution_time": 0.18889999389648438, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_expectations_expect_column_to_exist_input_layer__eligibility_social_security_number.429435ef3d", "compiled": true, "compiled_code": "\n\n    with test_data as (\n\n        select\n            cast('SOCIAL_SECURITY_NUMBER' as TEXT) as column_name,\n            20 as matching_column_index,\n            True as column_index_matches\n\n    )\n    select *\n    from test_data\n    where\n        not(matching_column_index >= 0 and column_index_matches)", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:03.459253Z", "completed_at": "2025-06-03T19:50:03.624974Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:03.625354Z", "completed_at": "2025-06-03T19:50:03.625363Z"}], "thread_id": "Thread-3", "execution_time": 0.17758679389953613, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_expectations_expect_column_to_exist_input_layer__eligibility_subscriber_id.8a72992bdf", "compiled": true, "compiled_code": "\n\n    with test_data as (\n\n        select\n            cast('SUBSCRIBER_ID' as TEXT) as column_name,\n            2 as matching_column_index,\n            True as column_index_matches\n\n    )\n    select *\n    from test_data\n    where\n        not(matching_column_index >= 0 and column_index_matches)", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:03.627341Z", "completed_at": "2025-06-03T19:50:03.650541Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:03.650934Z", "completed_at": "2025-06-03T19:50:03.650943Z"}], "thread_id": "Thread-3", "execution_time": 0.024522781372070312, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_expectations_expect_column_unique_value_count_to_be_between_input_layer__eligibility_birth_date__person_id__1__0__False.a5321c5f6f", "compiled": true, "compiled_code": "\n\n\n\n\n    with grouped_expression as (\n    select\n        \n        person_id as col_1,\n        \n        \n    \n  \n( 1=1 and count(distinct birth_date) >= 0 and count(distinct birth_date) <= 1\n)\n as expression\n\n\n    from tuva.input_layer.input_layer__eligibility\n    \n    group by\n    person_id\n    \n    \n\n),\nvalidation_errors as (\n\n    select\n        *\n    from\n        grouped_expression\n    where\n        not(expression = true)\n\n)\n\nselect *\nfrom validation_errors\n\n\n\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:03.468819Z", "completed_at": "2025-06-03T19:50:03.651754Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:03.652698Z", "completed_at": "2025-06-03T19:50:03.652704Z"}], "thread_id": "Thread-2", "execution_time": 0.2046358585357666, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_expectations_expect_column_to_exist_input_layer__eligibility_subscriber_relation.1a23e66981", "compiled": true, "compiled_code": "\n\n    with test_data as (\n\n        select\n            cast('SUBSCRIBER_RELATION' as TEXT) as column_name,\n            21 as matching_column_index,\n            True as column_index_matches\n\n    )\n    select *\n    from test_data\n    where\n        not(matching_column_index >= 0 and column_index_matches)", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:03.449136Z", "completed_at": "2025-06-03T19:50:03.652427Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:03.653429Z", "completed_at": "2025-06-03T19:50:03.653434Z"}], "thread_id": "Thread-4", "execution_time": 0.20591211318969727, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_expectations_expect_column_to_exist_input_layer__eligibility_state.d353f41c00", "compiled": true, "compiled_code": "\n\n    with test_data as (\n\n        select\n            cast('STATE' as TEXT) as column_name,\n            24 as matching_column_index,\n            True as column_index_matches\n\n    )\n    select *\n    from test_data\n    where\n        not(matching_column_index >= 0 and column_index_matches)", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:03.654151Z", "completed_at": "2025-06-03T19:50:03.661728Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:03.675651Z", "completed_at": "2025-06-03T19:50:03.675658Z"}], "thread_id": "Thread-3", "execution_time": 0.02359604835510254, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_expectations_expect_column_value_lengths_to_equal_input_layer__eligibility_original_reason_entitlement_code__1.4162c3d985", "compiled": true, "compiled_code": "\n\n\n\n\n    with grouped_expression as (\n    select\n        \n        \n    \n  \n  length( original_reason_entitlement_code )\n = 1 as expression\n\n\n    from tuva.input_layer.input_layer__eligibility\n    \n\n),\nvalidation_errors as (\n\n    select\n        *\n    from\n        grouped_expression\n    where\n        not(expression = true)\n\n)\n\nselect *\nfrom validation_errors\n\n\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:03.670598Z", "completed_at": "2025-06-03T19:50:03.683190Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:03.683687Z", "completed_at": "2025-06-03T19:50:03.683693Z"}], "thread_id": "Thread-4", "execution_time": 0.022819042205810547, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_expectations_expect_column_values_to_be_between_input_layer__eligibility_death_date___2050_01_02____1900_01_02___False.137f226008", "compiled": true, "compiled_code": "\n\n\n\n\n\n\n    with grouped_expression as (\n    select\n        \n        \n    \n  \n( 1=1 and death_date >= '1900-01-02' and death_date <= '2050-01-02'\n)\n as expression\n\n\n    from tuva.input_layer.input_layer__eligibility\n    \n\n),\nvalidation_errors as (\n\n    select\n        *\n    from\n        grouped_expression\n    where\n        not(expression = true)\n\n)\n\nselect *\nfrom validation_errors\n\n\n\n\n\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:03.661966Z", "completed_at": "2025-06-03T19:50:03.683469Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:03.684098Z", "completed_at": "2025-06-03T19:50:03.684101Z"}], "thread_id": "Thread-2", "execution_time": 0.02358078956604004, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_expectations_expect_column_values_to_be_between_input_layer__eligibility_birth_date___2050_01_02____1900_01_02___False.dc38e3cbe3", "compiled": true, "compiled_code": "\n\n\n\n\n\n\n    with grouped_expression as (\n    select\n        \n        \n    \n  \n( 1=1 and birth_date >= '1900-01-02' and birth_date <= '2050-01-02'\n)\n as expression\n\n\n    from tuva.input_layer.input_layer__eligibility\n    \n\n),\nvalidation_errors as (\n\n    select\n        *\n    from\n        grouped_expression\n    where\n        not(expression = true)\n\n)\n\nselect *\nfrom validation_errors\n\n\n\n\n\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:03.676970Z", "completed_at": "2025-06-03T19:50:03.684464Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:03.685244Z", "completed_at": "2025-06-03T19:50:03.685248Z"}], "thread_id": "Thread-3", "execution_time": 0.008855104446411133, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_expectations_expect_column_values_to_be_between_input_layer__eligibility_enrollment_end_date___2050_01_02____1900_01_02___False.f7ebac2d07", "compiled": true, "compiled_code": "\n\n\n\n\n\n\n    with grouped_expression as (\n    select\n        \n        \n    \n  \n( 1=1 and enrollment_end_date >= '1900-01-02' and enrollment_end_date <= '2050-01-02'\n)\n as expression\n\n\n    from tuva.input_layer.input_layer__eligibility\n    \n\n),\nvalidation_errors as (\n\n    select\n        *\n    from\n        grouped_expression\n    where\n        not(expression = true)\n\n)\n\nselect *\nfrom validation_errors\n\n\n\n\n\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:03.687069Z", "completed_at": "2025-06-03T19:50:03.709620Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:03.710742Z", "completed_at": "2025-06-03T19:50:03.710749Z"}], "thread_id": "Thread-4", "execution_time": 0.02519702911376953, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_expectations_expect_column_values_to_be_between_input_layer__eligibility_enrollment_start_date___2050_01_02____1900_01_02___False.23a737395b", "compiled": true, "compiled_code": "\n\n\n\n\n\n\n    with grouped_expression as (\n    select\n        \n        \n    \n  \n( 1=1 and enrollment_start_date >= '1900-01-02' and enrollment_start_date <= '2050-01-02'\n)\n as expression\n\n\n    from tuva.input_layer.input_layer__eligibility\n    \n\n),\nvalidation_errors as (\n\n    select\n        *\n    from\n        grouped_expression\n    where\n        not(expression = true)\n\n)\n\nselect *\nfrom validation_errors\n\n\n\n\n\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:03.602008Z", "completed_at": "2025-06-03T19:50:03.721504Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:03.724057Z", "completed_at": "2025-06-03T19:50:03.724065Z"}], "thread_id": "Thread-1", "execution_time": 0.12262821197509766, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_expectations_expect_column_to_exist_input_layer__eligibility_zip_code.c0caa24a6b", "compiled": true, "compiled_code": "\n\n    with test_data as (\n\n        select\n            cast('ZIP_CODE' as TEXT) as column_name,\n            25 as matching_column_index,\n            True as column_index_matches\n\n    )\n    select *\n    from test_data\n    where\n        not(matching_column_index >= 0 and column_index_matches)", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:03.700711Z", "completed_at": "2025-06-03T19:50:03.886488Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:03.887182Z", "completed_at": "2025-06-03T19:50:03.887192Z"}], "thread_id": "Thread-3", "execution_time": 0.2004530429840088, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_expectations_expect_column_values_to_be_in_type_list_input_layer__eligibility_ingest_datetime__date__datetime__time__timestamp__timestamp_ntz__timestampntz__timestamp_ltz__timestampltz__timestamp_tz__timestamptz__timestamp_with_time_zone__timestamp_without_time_zone__datetime2__datetimeoffset.1187fc2a2d", "compiled": true, "compiled_code": "with relation_columns as (\n\n        \n        select\n            cast('PERSON_ID' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('MEMBER_ID' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('SUBSCRIBER_ID' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('GENDER' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('RACE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('BIRTH_DATE' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DEATH_DATE' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DEATH_FLAG' as TEXT) as relation_column,\n            cast('NUMBER' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('ENROLLMENT_START_DATE' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('ENROLLMENT_END_DATE' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PAYER' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PAYER_TYPE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PLAN' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('ORIGINAL_REASON_ENTITLEMENT_CODE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DUAL_STATUS_CODE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('MEDICARE_STATUS_CODE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('GROUP_ID' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('GROUP_NAME' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('FIRST_NAME' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('LAST_NAME' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('SOCIAL_SECURITY_NUMBER' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('SUBSCRIBER_RELATION' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('ADDRESS' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('CITY' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('STATE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('ZIP_CODE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PHONE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DATA_SOURCE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('FILE_NAME' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('FILE_DATE' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('INGEST_DATETIME' as TEXT) as relation_column,\n            cast('TIMESTAMP_NTZ' as TEXT) as relation_column_type\n        \n        \n    ),\n    test_data as (\n\n        select\n            *\n        from\n            relation_columns\n        where\n            relation_column = 'INGEST_DATETIME'\n            and\n            relation_column_type not in ('DATE', 'DATETIME', 'TIME', 'TIMESTAMP', 'TIMESTAMP_NTZ', 'TIMESTAMPNTZ', 'TIMESTAMP_LTZ', 'TIMESTAMPLTZ', 'TIMESTAMP_TZ', 'TIMESTAMPTZ', 'TIMESTAMP WITH TIME ZONE', 'TIMESTAMP WITHOUT TIME ZONE', 'DATETIME2', 'DATETIMEOFFSET')\n\n    )\n    select *\n    from test_data", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:03.726211Z", "completed_at": "2025-06-03T19:50:03.886814Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:03.888191Z", "completed_at": "2025-06-03T19:50:03.888195Z"}], "thread_id": "Thread-1", "execution_time": 0.16258835792541504, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_expectations_expect_column_values_to_be_of_type_input_layer__eligibility_death_date__date.6cd382bcf6", "compiled": true, "compiled_code": "with relation_columns as (\n\n        \n        select\n            cast('PERSON_ID' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('MEMBER_ID' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('SUBSCRIBER_ID' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('GENDER' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('RACE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('BIRTH_DATE' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DEATH_DATE' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DEATH_FLAG' as TEXT) as relation_column,\n            cast('NUMBER' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('ENROLLMENT_START_DATE' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('ENROLLMENT_END_DATE' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PAYER' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PAYER_TYPE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PLAN' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('ORIGINAL_REASON_ENTITLEMENT_CODE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DUAL_STATUS_CODE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('MEDICARE_STATUS_CODE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('GROUP_ID' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('GROUP_NAME' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('FIRST_NAME' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('LAST_NAME' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('SOCIAL_SECURITY_NUMBER' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('SUBSCRIBER_RELATION' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('ADDRESS' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('CITY' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('STATE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('ZIP_CODE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PHONE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DATA_SOURCE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('FILE_NAME' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('FILE_DATE' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('INGEST_DATETIME' as TEXT) as relation_column,\n            cast('TIMESTAMP_NTZ' as TEXT) as relation_column_type\n        \n        \n    ),\n    test_data as (\n\n        select\n            *\n        from\n            relation_columns\n        where\n            relation_column = 'DEATH_DATE'\n            and\n            relation_column_type not in ('DATE')\n\n    )\n    select *\n    from test_data", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:03.715031Z", "completed_at": "2025-06-03T19:50:03.887705Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:03.888961Z", "completed_at": "2025-06-03T19:50:03.888965Z"}], "thread_id": "Thread-4", "execution_time": 0.17456912994384766, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_expectations_expect_column_values_to_be_of_type_input_layer__eligibility_birth_date__date.0becc72b1e", "compiled": true, "compiled_code": "with relation_columns as (\n\n        \n        select\n            cast('PERSON_ID' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('MEMBER_ID' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('SUBSCRIBER_ID' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('GENDER' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('RACE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('BIRTH_DATE' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DEATH_DATE' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DEATH_FLAG' as TEXT) as relation_column,\n            cast('NUMBER' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('ENROLLMENT_START_DATE' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('ENROLLMENT_END_DATE' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PAYER' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PAYER_TYPE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PLAN' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('ORIGINAL_REASON_ENTITLEMENT_CODE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DUAL_STATUS_CODE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('MEDICARE_STATUS_CODE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('GROUP_ID' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('GROUP_NAME' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('FIRST_NAME' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('LAST_NAME' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('SOCIAL_SECURITY_NUMBER' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('SUBSCRIBER_RELATION' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('ADDRESS' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('CITY' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('STATE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('ZIP_CODE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PHONE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DATA_SOURCE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('FILE_NAME' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('FILE_DATE' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('INGEST_DATETIME' as TEXT) as relation_column,\n            cast('TIMESTAMP_NTZ' as TEXT) as relation_column_type\n        \n        \n    ),\n    test_data as (\n\n        select\n            *\n        from\n            relation_columns\n        where\n            relation_column = 'BIRTH_DATE'\n            and\n            relation_column_type not in ('DATE')\n\n    )\n    select *\n    from test_data", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:03.692297Z", "completed_at": "2025-06-03T19:50:03.887956Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:03.889409Z", "completed_at": "2025-06-03T19:50:03.889413Z"}], "thread_id": "Thread-2", "execution_time": 0.20359086990356445, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_expectations_expect_column_values_to_be_in_type_list_input_layer__eligibility_file_date__date__datetime.4d1444384d", "compiled": true, "compiled_code": "with relation_columns as (\n\n        \n        select\n            cast('PERSON_ID' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('MEMBER_ID' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('SUBSCRIBER_ID' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('GENDER' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('RACE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('BIRTH_DATE' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DEATH_DATE' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DEATH_FLAG' as TEXT) as relation_column,\n            cast('NUMBER' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('ENROLLMENT_START_DATE' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('ENROLLMENT_END_DATE' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PAYER' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PAYER_TYPE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PLAN' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('ORIGINAL_REASON_ENTITLEMENT_CODE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DUAL_STATUS_CODE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('MEDICARE_STATUS_CODE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('GROUP_ID' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('GROUP_NAME' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('FIRST_NAME' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('LAST_NAME' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('SOCIAL_SECURITY_NUMBER' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('SUBSCRIBER_RELATION' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('ADDRESS' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('CITY' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('STATE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('ZIP_CODE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PHONE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DATA_SOURCE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('FILE_NAME' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('FILE_DATE' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('INGEST_DATETIME' as TEXT) as relation_column,\n            cast('TIMESTAMP_NTZ' as TEXT) as relation_column_type\n        \n        \n    ),\n    test_data as (\n\n        select\n            *\n        from\n            relation_columns\n        where\n            relation_column = 'FILE_DATE'\n            and\n            relation_column_type not in ('DATE', 'DATETIME')\n\n    )\n    select *\n    from test_data", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:04.010181Z", "completed_at": "2025-06-03T19:50:04.022712Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:04.022994Z", "completed_at": "2025-06-03T19:50:04.023001Z"}], "thread_id": "Thread-4", "execution_time": 0.13150906562805176, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_utils_unique_combination_of_columns_input_layer__eligibility_person_id__enrollment_start_date__enrollment_end_date___plan_if_target_type_fabric_else_plan___payer__data_source.bd5eb53d64", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith validation_errors as (\n\n    select\n        person_id, enrollment_start_date, enrollment_end_date, plan, payer, data_source\n    from tuva.input_layer.input_layer__eligibility\n    group by person_id, enrollment_start_date, enrollment_end_date, plan, payer, data_source\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:04.016824Z", "completed_at": "2025-06-03T19:50:04.029739Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:04.030006Z", "completed_at": "2025-06-03T19:50:04.030012Z"}], "thread_id": "Thread-2", "execution_time": 0.13824987411499023, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.not_null_input_layer__eligibility_birth_date.92b0c5a09c", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect birth_date\nfrom tuva.input_layer.input_layer__eligibility\nwhere birth_date is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:04.024392Z", "completed_at": "2025-06-03T19:50:04.030525Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:04.031328Z", "completed_at": "2025-06-03T19:50:04.031333Z"}], "thread_id": "Thread-4", "execution_time": 0.007768869400024414, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.not_null_input_layer__eligibility_gender.5032785684", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect gender\nfrom tuva.input_layer.input_layer__eligibility\nwhere gender is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:04.033158Z", "completed_at": "2025-06-03T19:50:04.047003Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:04.047287Z", "completed_at": "2025-06-03T19:50:04.047294Z"}], "thread_id": "Thread-2", "execution_time": 0.015424728393554688, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.not_null_input_layer__eligibility_person_id.902fc59f2c", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect person_id\nfrom tuva.input_layer.input_layer__eligibility\nwhere person_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:04.040656Z", "completed_at": "2025-06-03T19:50:04.048221Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:04.048720Z", "completed_at": "2025-06-03T19:50:04.048725Z"}], "thread_id": "Thread-4", "execution_time": 0.01594686508178711, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.relationships_input_layer__eligibility_payer_type__payer_type__ref_terminology__payer_type_.f67d1a40ad", "compiled": true, "compiled_code": "\n    \n    \n\nwith child as (\n    select payer_type as from_field\n    from tuva.input_layer.input_layer__eligibility\n    where payer_type is not null\n),\n\nparent as (\n    select payer_type as to_field\n    from tuva.terminology.payer_type\n)\n\nselect\n    from_field\n\nfrom child\nleft join parent\n    on child.from_field = parent.to_field\n\nwhere parent.to_field is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:04.056064Z", "completed_at": "2025-06-03T19:50:04.068178Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:04.068513Z", "completed_at": "2025-06-03T19:50:04.068521Z"}], "thread_id": "Thread-4", "execution_time": 0.013067007064819336, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.medical_claim_expanded", "compiled": true, "compiled_code": "\n\n\nselect *\nfrom tuva.input_layer.input_layer__medical_claim", "relation_name": "tuva.claims_expanded.medical_claim_expanded", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:04.070347Z", "completed_at": "2025-06-03T19:50:04.083004Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:04.083266Z", "completed_at": "2025-06-03T19:50:04.083272Z"}], "thread_id": "Thread-4", "execution_time": 0.014111995697021484, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.accepted_values_input_layer__medical_claim_claim_type__professional__institutional__undetermined.7f3e6bc4da", "compiled": true, "compiled_code": "\n    \n    \n\nwith all_values as (\n\n    select\n        claim_type as value_field,\n        count(*) as n_records\n\n    from tuva.input_layer.input_layer__medical_claim\n    group by claim_type\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    'professional','institutional','undetermined'\n)\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:04.077630Z", "completed_at": "2025-06-03T19:50:04.084357Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:04.084840Z", "completed_at": "2025-06-03T19:50:04.084845Z"}], "thread_id": "Thread-2", "execution_time": 0.007925987243652344, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.accepted_values_input_layer__medical_claim_diagnosis_code_type__icd_10_cm__icd_9_cm.7be4dac7fc", "compiled": true, "compiled_code": "\n    \n    \n\nwith all_values as (\n\n    select\n        diagnosis_code_type as value_field,\n        count(*) as n_records\n\n    from tuva.input_layer.input_layer__medical_claim\n    group by diagnosis_code_type\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    'icd-10-cm','icd-9-cm'\n)\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:04.085207Z", "completed_at": "2025-06-03T19:50:04.097693Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:04.097927Z", "completed_at": "2025-06-03T19:50:04.097932Z"}], "thread_id": "Thread-4", "execution_time": 0.013968944549560547, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.accepted_values_input_layer__medical_claim_drg_code_type__ms_drg__apr_drg.804aadfe9c", "compiled": true, "compiled_code": "\n    \n    \n\nwith all_values as (\n\n    select\n        drg_code_type as value_field,\n        count(*) as n_records\n\n    from tuva.input_layer.input_layer__medical_claim\n    group by drg_code_type\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    'ms-drg','apr-drg'\n)\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:04.092612Z", "completed_at": "2025-06-03T19:50:04.099030Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:04.105405Z", "completed_at": "2025-06-03T19:50:04.105411Z"}], "thread_id": "Thread-2", "execution_time": 0.013350248336791992, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.accepted_values_input_layer__medical_claim_procedure_code_type__icd_10_pcs__icd_9_pcs__hcpcs_level_2.3dfa07a1c2", "compiled": true, "compiled_code": "\n    \n    \n\nwith all_values as (\n\n    select\n        procedure_code_type as value_field,\n        count(*) as n_records\n\n    from tuva.input_layer.input_layer__medical_claim\n    group by procedure_code_type\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    'icd-10-pcs','icd-9-pcs','hcpcs_level_2'\n)\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:04.099238Z", "completed_at": "2025-06-03T19:50:04.106579Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:04.115182Z", "completed_at": "2025-06-03T19:50:04.115189Z"}], "thread_id": "Thread-4", "execution_time": 0.01667618751525879, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_expectations_expect_column_pair_values_A_to_be_greater_than_B_input_layer__medical_claim_claim_end_date__claim_start_date__True.29d8c8d44a", "compiled": true, "compiled_code": "\n\n\n\n\n\n    with grouped_expression as (\n    select\n        \n        \n    \n  claim_end_date >= claim_start_date as expression\n\n\n    from tuva.input_layer.input_layer__medical_claim\n    \n\n),\nvalidation_errors as (\n\n    select\n        *\n    from\n        grouped_expression\n    where\n        not(expression = true)\n\n)\n\nselect *\nfrom validation_errors\n\n\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:03.892366Z", "completed_at": "2025-06-03T19:50:04.135938Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:04.136206Z", "completed_at": "2025-06-03T19:50:04.136213Z"}], "thread_id": "Thread-3", "execution_time": 0.24614381790161133, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_expectations_expect_column_values_to_be_of_type_input_layer__eligibility_enrollment_end_date__date.747db01aec", "compiled": true, "compiled_code": "with relation_columns as (\n\n        \n        select\n            cast('PERSON_ID' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('MEMBER_ID' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('SUBSCRIBER_ID' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('GENDER' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('RACE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('BIRTH_DATE' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DEATH_DATE' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DEATH_FLAG' as TEXT) as relation_column,\n            cast('NUMBER' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('ENROLLMENT_START_DATE' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('ENROLLMENT_END_DATE' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PAYER' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PAYER_TYPE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PLAN' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('ORIGINAL_REASON_ENTITLEMENT_CODE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DUAL_STATUS_CODE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('MEDICARE_STATUS_CODE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('GROUP_ID' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('GROUP_NAME' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('FIRST_NAME' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('LAST_NAME' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('SOCIAL_SECURITY_NUMBER' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('SUBSCRIBER_RELATION' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('ADDRESS' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('CITY' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('STATE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('ZIP_CODE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PHONE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DATA_SOURCE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('FILE_NAME' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('FILE_DATE' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('INGEST_DATETIME' as TEXT) as relation_column,\n            cast('TIMESTAMP_NTZ' as TEXT) as relation_column_type\n        \n        \n    ),\n    test_data as (\n\n        select\n            *\n        from\n            relation_columns\n        where\n            relation_column = 'ENROLLMENT_END_DATE'\n            and\n            relation_column_type not in ('DATE')\n\n    )\n    select *\n    from test_data", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:03.902846Z", "completed_at": "2025-06-03T19:50:04.163386Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:04.163651Z", "completed_at": "2025-06-03T19:50:04.163658Z"}], "thread_id": "Thread-1", "execution_time": 0.2726907730102539, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_expectations_expect_column_values_to_be_of_type_input_layer__eligibility_enrollment_start_date__date.8626cc91aa", "compiled": true, "compiled_code": "with relation_columns as (\n\n        \n        select\n            cast('PERSON_ID' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('MEMBER_ID' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('SUBSCRIBER_ID' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('GENDER' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('RACE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('BIRTH_DATE' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DEATH_DATE' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DEATH_FLAG' as TEXT) as relation_column,\n            cast('NUMBER' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('ENROLLMENT_START_DATE' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('ENROLLMENT_END_DATE' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PAYER' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PAYER_TYPE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PLAN' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('ORIGINAL_REASON_ENTITLEMENT_CODE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DUAL_STATUS_CODE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('MEDICARE_STATUS_CODE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('GROUP_ID' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('GROUP_NAME' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('FIRST_NAME' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('LAST_NAME' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('SOCIAL_SECURITY_NUMBER' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('SUBSCRIBER_RELATION' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('ADDRESS' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('CITY' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('STATE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('ZIP_CODE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PHONE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DATA_SOURCE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('FILE_NAME' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('FILE_DATE' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('INGEST_DATETIME' as TEXT) as relation_column,\n            cast('TIMESTAMP_NTZ' as TEXT) as relation_column_type\n        \n        \n    ),\n    test_data as (\n\n        select\n            *\n        from\n            relation_columns\n        where\n            relation_column = 'ENROLLMENT_START_DATE'\n            and\n            relation_column_type not in ('DATE')\n\n    )\n    select *\n    from test_data", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:04.106795Z", "completed_at": "2025-06-03T19:50:04.286280Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:04.286706Z", "completed_at": "2025-06-03T19:50:04.286715Z"}], "thread_id": "Thread-2", "execution_time": 0.18067288398742676, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_expectations_expect_column_to_exist_input_layer__medical_claim_admission_date.7d84f4f8e1", "compiled": true, "compiled_code": "\n\n    with test_data as (\n\n        select\n            cast('ADMISSION_DATE' as TEXT) as column_name,\n            11 as matching_column_index,\n            True as column_index_matches\n\n    )\n    select *\n    from test_data\n    where\n        not(matching_column_index >= 0 and column_index_matches)", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:04.164893Z", "completed_at": "2025-06-03T19:50:04.288010Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:04.289163Z", "completed_at": "2025-06-03T19:50:04.289172Z"}], "thread_id": "Thread-1", "execution_time": 0.12489795684814453, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_expectations_expect_column_to_exist_input_layer__medical_claim_allowed_amount.37074d9eed", "compiled": true, "compiled_code": "\n\n    with test_data as (\n\n        select\n            cast('ALLOWED_AMOUNT' as TEXT) as column_name,\n            35 as matching_column_index,\n            True as column_index_matches\n\n    )\n    select *\n    from test_data\n    where\n        not(matching_column_index >= 0 and column_index_matches)", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:04.117004Z", "completed_at": "2025-06-03T19:50:04.330641Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:04.331239Z", "completed_at": "2025-06-03T19:50:04.331246Z"}], "thread_id": "Thread-4", "execution_time": 0.2148571014404297, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_expectations_expect_column_to_exist_input_layer__medical_claim_admit_source_code.575d187b3f", "compiled": true, "compiled_code": "\n\n    with test_data as (\n\n        select\n            cast('ADMIT_SOURCE_CODE' as TEXT) as column_name,\n            13 as matching_column_index,\n            True as column_index_matches\n\n    )\n    select *\n    from test_data\n    where\n        not(matching_column_index >= 0 and column_index_matches)", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:04.137413Z", "completed_at": "2025-06-03T19:50:04.331753Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:04.332756Z", "completed_at": "2025-06-03T19:50:04.332761Z"}], "thread_id": "Thread-3", "execution_time": 0.19589686393737793, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_expectations_expect_column_to_exist_input_layer__medical_claim_admit_type_code.b44f767f00", "compiled": true, "compiled_code": "\n\n    with test_data as (\n\n        select\n            cast('ADMIT_TYPE_CODE' as TEXT) as column_name,\n            14 as matching_column_index,\n            True as column_index_matches\n\n    )\n    select *\n    from test_data\n    where\n        not(matching_column_index >= 0 and column_index_matches)", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:04.289887Z", "completed_at": "2025-06-03T19:50:04.463946Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:04.464335Z", "completed_at": "2025-06-03T19:50:04.464344Z"}], "thread_id": "Thread-2", "execution_time": 0.17679738998413086, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_expectations_expect_column_to_exist_input_layer__medical_claim_bill_type_code.9d338bcdcb", "compiled": true, "compiled_code": "\n\n    with test_data as (\n\n        select\n            cast('BILL_TYPE_CODE' as TEXT) as column_name,\n            17 as matching_column_index,\n            True as column_index_matches\n\n    )\n    select *\n    from test_data\n    where\n        not(matching_column_index >= 0 and column_index_matches)", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:04.321460Z", "completed_at": "2025-06-03T19:50:04.472434Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:04.475306Z", "completed_at": "2025-06-03T19:50:04.475314Z"}], "thread_id": "Thread-1", "execution_time": 0.17091631889343262, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_expectations_expect_column_to_exist_input_layer__medical_claim_billing_npi.05811ef223", "compiled": true, "compiled_code": "\n\n    with test_data as (\n\n        select\n            cast('BILLING_NPI' as TEXT) as column_name,\n            30 as matching_column_index,\n            True as column_index_matches\n\n    )\n    select *\n    from test_data\n    where\n        not(matching_column_index >= 0 and column_index_matches)", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:04.334387Z", "completed_at": "2025-06-03T19:50:04.482213Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:04.488293Z", "completed_at": "2025-06-03T19:50:04.488300Z"}], "thread_id": "Thread-4", "execution_time": 0.15513396263122559, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_expectations_expect_column_to_exist_input_layer__medical_claim_billing_tin.42f3dd80c3", "compiled": true, "compiled_code": "\n\n    with test_data as (\n\n        select\n            cast('BILLING_TIN' as TEXT) as column_name,\n            31 as matching_column_index,\n            True as column_index_matches\n\n    )\n    select *\n    from test_data\n    where\n        not(matching_column_index >= 0 and column_index_matches)", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:04.343773Z", "completed_at": "2025-06-03T19:50:04.512375Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:04.601910Z", "completed_at": "2025-06-03T19:50:04.601926Z"}], "thread_id": "Thread-3", "execution_time": 0.26796889305114746, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_expectations_expect_column_to_exist_input_layer__medical_claim_charge_amount.8b303d8584", "compiled": true, "compiled_code": "\n\n    with test_data as (\n\n        select\n            cast('CHARGE_AMOUNT' as TEXT) as column_name,\n            36 as matching_column_index,\n            True as column_index_matches\n\n    )\n    select *\n    from test_data\n    where\n        not(matching_column_index >= 0 and column_index_matches)", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:04.476561Z", "completed_at": "2025-06-03T19:50:04.653345Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:04.653624Z", "completed_at": "2025-06-03T19:50:04.653631Z"}], "thread_id": "Thread-2", "execution_time": 0.17874407768249512, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_expectations_expect_column_to_exist_input_layer__medical_claim_claim_end_date.3ae11c8442", "compiled": true, "compiled_code": "\n\n    with test_data as (\n\n        select\n            cast('CLAIM_END_DATE' as TEXT) as column_name,\n            8 as matching_column_index,\n            True as column_index_matches\n\n    )\n    select *\n    from test_data\n    where\n        not(matching_column_index >= 0 and column_index_matches)", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:04.612034Z", "completed_at": "2025-06-03T19:50:04.738751Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:04.739099Z", "completed_at": "2025-06-03T19:50:04.739107Z"}], "thread_id": "Thread-3", "execution_time": 0.12781596183776855, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_expectations_expect_column_to_exist_input_layer__medical_claim_claim_line_number.4e8c4ad6ff", "compiled": true, "compiled_code": "\n\n    with test_data as (\n\n        select\n            cast('CLAIM_LINE_NUMBER' as TEXT) as column_name,\n            1 as matching_column_index,\n            True as column_index_matches\n\n    )\n    select *\n    from test_data\n    where\n        not(matching_column_index >= 0 and column_index_matches)", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:04.507219Z", "completed_at": "2025-06-03T19:50:04.740191Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:04.740703Z", "completed_at": "2025-06-03T19:50:04.740708Z"}], "thread_id": "Thread-4", "execution_time": 0.23505783081054688, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_expectations_expect_column_to_exist_input_layer__medical_claim_claim_line_end_date.5c9958bccf", "compiled": true, "compiled_code": "\n\n    with test_data as (\n\n        select\n            cast('CLAIM_LINE_END_DATE' as TEXT) as column_name,\n            10 as matching_column_index,\n            True as column_index_matches\n\n    )\n    select *\n    from test_data\n    where\n        not(matching_column_index >= 0 and column_index_matches)", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:04.497040Z", "completed_at": "2025-06-03T19:50:04.769413Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:04.769754Z", "completed_at": "2025-06-03T19:50:04.769761Z"}], "thread_id": "Thread-1", "execution_time": 0.28262996673583984, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_expectations_expect_column_to_exist_input_layer__medical_claim_claim_id.256ac4d5ba", "compiled": true, "compiled_code": "\n\n    with test_data as (\n\n        select\n            cast('CLAIM_ID' as TEXT) as column_name,\n            0 as matching_column_index,\n            True as column_index_matches\n\n    )\n    select *\n    from test_data\n    where\n        not(matching_column_index >= 0 and column_index_matches)", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:04.654951Z", "completed_at": "2025-06-03T19:50:04.810021Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:04.810295Z", "completed_at": "2025-06-03T19:50:04.810302Z"}], "thread_id": "Thread-2", "execution_time": 0.15599370002746582, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_expectations_expect_column_to_exist_input_layer__medical_claim_claim_line_start_date.8e8853d6ed", "compiled": true, "compiled_code": "\n\n    with test_data as (\n\n        select\n            cast('CLAIM_LINE_START_DATE' as TEXT) as column_name,\n            9 as matching_column_index,\n            True as column_index_matches\n\n    )\n    select *\n    from test_data\n    where\n        not(matching_column_index >= 0 and column_index_matches)", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:04.741118Z", "completed_at": "2025-06-03T19:50:04.886514Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:04.888105Z", "completed_at": "2025-06-03T19:50:04.888114Z"}], "thread_id": "Thread-3", "execution_time": 0.14827799797058105, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_expectations_expect_column_to_exist_input_layer__medical_claim_claim_start_date.4d33a3068b", "compiled": true, "compiled_code": "\n\n    with test_data as (\n\n        select\n            cast('CLAIM_START_DATE' as TEXT) as column_name,\n            7 as matching_column_index,\n            True as column_index_matches\n\n    )\n    select *\n    from test_data\n    where\n        not(matching_column_index >= 0 and column_index_matches)", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:04.760666Z", "completed_at": "2025-06-03T19:50:04.888895Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:04.889681Z", "completed_at": "2025-06-03T19:50:04.889685Z"}], "thread_id": "Thread-4", "execution_time": 0.13823890686035156, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_expectations_expect_column_to_exist_input_layer__medical_claim_claim_type.9edd2e4e4e", "compiled": true, "compiled_code": "\n\n    with test_data as (\n\n        select\n            cast('CLAIM_TYPE' as TEXT) as column_name,\n            2 as matching_column_index,\n            True as column_index_matches\n\n    )\n    select *\n    from test_data\n    where\n        not(matching_column_index >= 0 and column_index_matches)", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:04.771411Z", "completed_at": "2025-06-03T19:50:04.889476Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:04.890268Z", "completed_at": "2025-06-03T19:50:04.890271Z"}], "thread_id": "Thread-1", "execution_time": 0.11958193778991699, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_expectations_expect_column_to_exist_input_layer__medical_claim_coinsurance_amount.fce12fa680", "compiled": true, "compiled_code": "\n\n    with test_data as (\n\n        select\n            cast('COINSURANCE_AMOUNT' as TEXT) as column_name,\n            37 as matching_column_index,\n            True as column_index_matches\n\n    )\n    select *\n    from test_data\n    where\n        not(matching_column_index >= 0 and column_index_matches)", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:04.811587Z", "completed_at": "2025-06-03T19:50:04.928370Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:04.928618Z", "completed_at": "2025-06-03T19:50:04.928625Z"}], "thread_id": "Thread-2", "execution_time": 0.11763405799865723, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_expectations_expect_column_to_exist_input_layer__medical_claim_copayment_amount.e65f6d8fb9", "compiled": true, "compiled_code": "\n\n    with test_data as (\n\n        select\n            cast('COPAYMENT_AMOUNT' as TEXT) as column_name,\n            38 as matching_column_index,\n            True as column_index_matches\n\n    )\n    select *\n    from test_data\n    where\n        not(matching_column_index >= 0 and column_index_matches)", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:04.890874Z", "completed_at": "2025-06-03T19:50:05.059968Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:05.060521Z", "completed_at": "2025-06-03T19:50:05.060529Z"}], "thread_id": "Thread-3", "execution_time": 0.17140722274780273, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_expectations_expect_column_to_exist_input_layer__medical_claim_data_source.0ebc92513d", "compiled": true, "compiled_code": "\n\n    with test_data as (\n\n        select\n            cast('DATA_SOURCE' as TEXT) as column_name,\n            144 as matching_column_index,\n            True as column_index_matches\n\n    )\n    select *\n    from test_data\n    where\n        not(matching_column_index >= 0 and column_index_matches)", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:04.911288Z", "completed_at": "2025-06-03T19:50:05.060246Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:05.061230Z", "completed_at": "2025-06-03T19:50:05.061235Z"}], "thread_id": "Thread-1", "execution_time": 0.160844087600708, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_expectations_expect_column_to_exist_input_layer__medical_claim_diagnosis_code_1.c17ab21917", "compiled": true, "compiled_code": "\n\n    with test_data as (\n\n        select\n            cast('DIAGNOSIS_CODE_1' as TEXT) as column_name,\n            42 as matching_column_index,\n            True as column_index_matches\n\n    )\n    select *\n    from test_data\n    where\n        not(matching_column_index >= 0 and column_index_matches)", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:04.901723Z", "completed_at": "2025-06-03T19:50:05.060986Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:05.062054Z", "completed_at": "2025-06-03T19:50:05.062061Z"}], "thread_id": "Thread-4", "execution_time": 0.16223502159118652, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_expectations_expect_column_to_exist_input_layer__medical_claim_deductible_amount.a6f0493278", "compiled": true, "compiled_code": "\n\n    with test_data as (\n\n        select\n            cast('DEDUCTIBLE_AMOUNT' as TEXT) as column_name,\n            39 as matching_column_index,\n            True as column_index_matches\n\n    )\n    select *\n    from test_data\n    where\n        not(matching_column_index >= 0 and column_index_matches)", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:04.929775Z", "completed_at": "2025-06-03T19:50:05.102696Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:05.103347Z", "completed_at": "2025-06-03T19:50:05.103355Z"}], "thread_id": "Thread-2", "execution_time": 0.17417097091674805, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_expectations_expect_column_to_exist_input_layer__medical_claim_diagnosis_code_10.2d77a49a79", "compiled": true, "compiled_code": "\n\n    with test_data as (\n\n        select\n            cast('DIAGNOSIS_CODE_10' as TEXT) as column_name,\n            51 as matching_column_index,\n            True as column_index_matches\n\n    )\n    select *\n    from test_data\n    where\n        not(matching_column_index >= 0 and column_index_matches)", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:05.064516Z", "completed_at": "2025-06-03T19:50:05.302139Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:05.302505Z", "completed_at": "2025-06-03T19:50:05.302513Z"}], "thread_id": "Thread-3", "execution_time": 0.23974609375, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_expectations_expect_column_to_exist_input_layer__medical_claim_diagnosis_code_11.142074e28f", "compiled": true, "compiled_code": "\n\n    with test_data as (\n\n        select\n            cast('DIAGNOSIS_CODE_11' as TEXT) as column_name,\n            52 as matching_column_index,\n            True as column_index_matches\n\n    )\n    select *\n    from test_data\n    where\n        not(matching_column_index >= 0 and column_index_matches)", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:05.075889Z", "completed_at": "2025-06-03T19:50:05.343090Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:05.343721Z", "completed_at": "2025-06-03T19:50:05.343729Z"}], "thread_id": "Thread-1", "execution_time": 0.2803373336791992, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_expectations_expect_column_to_exist_input_layer__medical_claim_diagnosis_code_12.97f87085c0", "compiled": true, "compiled_code": "\n\n    with test_data as (\n\n        select\n            cast('DIAGNOSIS_CODE_12' as TEXT) as column_name,\n            53 as matching_column_index,\n            True as column_index_matches\n\n    )\n    select *\n    from test_data\n    where\n        not(matching_column_index >= 0 and column_index_matches)", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:05.084953Z", "completed_at": "2025-06-03T19:50:05.343342Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:05.344368Z", "completed_at": "2025-06-03T19:50:05.344373Z"}], "thread_id": "Thread-4", "execution_time": 0.2804138660430908, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_expectations_expect_column_to_exist_input_layer__medical_claim_diagnosis_code_13.0bcd48455d", "compiled": true, "compiled_code": "\n\n    with test_data as (\n\n        select\n            cast('DIAGNOSIS_CODE_13' as TEXT) as column_name,\n            54 as matching_column_index,\n            True as column_index_matches\n\n    )\n    select *\n    from test_data\n    where\n        not(matching_column_index >= 0 and column_index_matches)", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:05.105329Z", "completed_at": "2025-06-03T19:50:05.344130Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:05.345012Z", "completed_at": "2025-06-03T19:50:05.345016Z"}], "thread_id": "Thread-2", "execution_time": 0.2405691146850586, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_expectations_expect_column_to_exist_input_layer__medical_claim_diagnosis_code_14.79accf4565", "compiled": true, "compiled_code": "\n\n    with test_data as (\n\n        select\n            cast('DIAGNOSIS_CODE_14' as TEXT) as column_name,\n            55 as matching_column_index,\n            True as column_index_matches\n\n    )\n    select *\n    from test_data\n    where\n        not(matching_column_index >= 0 and column_index_matches)", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:05.304206Z", "completed_at": "2025-06-03T19:50:05.468434Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:05.469079Z", "completed_at": "2025-06-03T19:50:05.469089Z"}], "thread_id": "Thread-3", "execution_time": 0.16573309898376465, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_expectations_expect_column_to_exist_input_layer__medical_claim_diagnosis_code_15.f9b1ac31d0", "compiled": true, "compiled_code": "\n\n    with test_data as (\n\n        select\n            cast('DIAGNOSIS_CODE_15' as TEXT) as column_name,\n            56 as matching_column_index,\n            True as column_index_matches\n\n    )\n    select *\n    from test_data\n    where\n        not(matching_column_index >= 0 and column_index_matches)", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:05.356978Z", "completed_at": "2025-06-03T19:50:05.518696Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:05.530736Z", "completed_at": "2025-06-03T19:50:05.530744Z"}], "thread_id": "Thread-4", "execution_time": 0.18457388877868652, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_expectations_expect_column_to_exist_input_layer__medical_claim_diagnosis_code_17.90ecce5810", "compiled": true, "compiled_code": "\n\n    with test_data as (\n\n        select\n            cast('DIAGNOSIS_CODE_17' as TEXT) as column_name,\n            58 as matching_column_index,\n            True as column_index_matches\n\n    )\n    select *\n    from test_data\n    where\n        not(matching_column_index >= 0 and column_index_matches)", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:05.365989Z", "completed_at": "2025-06-03T19:50:05.531217Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:05.532298Z", "completed_at": "2025-06-03T19:50:05.532304Z"}], "thread_id": "Thread-2", "execution_time": 0.18564915657043457, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_expectations_expect_column_to_exist_input_layer__medical_claim_diagnosis_code_18.d7ff4a764d", "compiled": true, "compiled_code": "\n\n    with test_data as (\n\n        select\n            cast('DIAGNOSIS_CODE_18' as TEXT) as column_name,\n            59 as matching_column_index,\n            True as column_index_matches\n\n    )\n    select *\n    from test_data\n    where\n        not(matching_column_index >= 0 and column_index_matches)", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:05.347180Z", "completed_at": "2025-06-03T19:50:05.532084Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:05.533806Z", "completed_at": "2025-06-03T19:50:05.533812Z"}], "thread_id": "Thread-1", "execution_time": 0.18817520141601562, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_expectations_expect_column_to_exist_input_layer__medical_claim_diagnosis_code_16.c72bee9d42", "compiled": true, "compiled_code": "\n\n    with test_data as (\n\n        select\n            cast('DIAGNOSIS_CODE_16' as TEXT) as column_name,\n            57 as matching_column_index,\n            True as column_index_matches\n\n    )\n    select *\n    from test_data\n    where\n        not(matching_column_index >= 0 and column_index_matches)", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:05.536700Z", "completed_at": "2025-06-03T19:50:05.858355Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:05.893694Z", "completed_at": "2025-06-03T19:50:05.893710Z"}], "thread_id": "Thread-4", "execution_time": 0.36078906059265137, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_expectations_expect_column_to_exist_input_layer__medical_claim_diagnosis_code_2.cf7aa0acb6", "compiled": true, "compiled_code": "\n\n    with test_data as (\n\n        select\n            cast('DIAGNOSIS_CODE_2' as TEXT) as column_name,\n            43 as matching_column_index,\n            True as column_index_matches\n\n    )\n    select *\n    from test_data\n    where\n        not(matching_column_index >= 0 and column_index_matches)", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:05.548427Z", "completed_at": "2025-06-03T19:50:05.896847Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:05.898163Z", "completed_at": "2025-06-03T19:50:05.898187Z"}], "thread_id": "Thread-2", "execution_time": 0.36217808723449707, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_expectations_expect_column_to_exist_input_layer__medical_claim_diagnosis_code_20.cf022ccd19", "compiled": true, "compiled_code": "\n\n    with test_data as (\n\n        select\n            cast('DIAGNOSIS_CODE_20' as TEXT) as column_name,\n            61 as matching_column_index,\n            True as column_index_matches\n\n    )\n    select *\n    from test_data\n    where\n        not(matching_column_index >= 0 and column_index_matches)", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:05.520030Z", "completed_at": "2025-06-03T19:50:05.902204Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:05.906033Z", "completed_at": "2025-06-03T19:50:05.906048Z"}], "thread_id": "Thread-3", "execution_time": 0.42008304595947266, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_expectations_expect_column_to_exist_input_layer__medical_claim_diagnosis_code_19.3b88c95dbe", "compiled": true, "compiled_code": "\n\n    with test_data as (\n\n        select\n            cast('DIAGNOSIS_CODE_19' as TEXT) as column_name,\n            60 as matching_column_index,\n            True as column_index_matches\n\n    )\n    select *\n    from test_data\n    where\n        not(matching_column_index >= 0 and column_index_matches)", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:05.558263Z", "completed_at": "2025-06-03T19:50:05.904897Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:05.917000Z", "completed_at": "2025-06-03T19:50:05.917009Z"}], "thread_id": "Thread-1", "execution_time": 0.3703501224517822, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_expectations_expect_column_to_exist_input_layer__medical_claim_diagnosis_code_21.3eedb156cb", "compiled": true, "compiled_code": "\n\n    with test_data as (\n\n        select\n            cast('DIAGNOSIS_CODE_21' as TEXT) as column_name,\n            62 as matching_column_index,\n            True as column_index_matches\n\n    )\n    select *\n    from test_data\n    where\n        not(matching_column_index >= 0 and column_index_matches)", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:05.907213Z", "completed_at": "2025-06-03T19:50:06.075600Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:06.078955Z", "completed_at": "2025-06-03T19:50:06.078965Z"}], "thread_id": "Thread-4", "execution_time": 0.17778778076171875, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_expectations_expect_column_to_exist_input_layer__medical_claim_diagnosis_code_22.d661a25aa0", "compiled": true, "compiled_code": "\n\n    with test_data as (\n\n        select\n            cast('DIAGNOSIS_CODE_22' as TEXT) as column_name,\n            63 as matching_column_index,\n            True as column_index_matches\n\n    )\n    select *\n    from test_data\n    where\n        not(matching_column_index >= 0 and column_index_matches)", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:05.918863Z", "completed_at": "2025-06-03T19:50:06.079492Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:06.087964Z", "completed_at": "2025-06-03T19:50:06.087972Z"}], "thread_id": "Thread-2", "execution_time": 0.18120908737182617, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_expectations_expect_column_to_exist_input_layer__medical_claim_diagnosis_code_23.ffdd046325", "compiled": true, "compiled_code": "\n\n    with test_data as (\n\n        select\n            cast('DIAGNOSIS_CODE_23' as TEXT) as column_name,\n            64 as matching_column_index,\n            True as column_index_matches\n\n    )\n    select *\n    from test_data\n    where\n        not(matching_column_index >= 0 and column_index_matches)", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:05.941113Z", "completed_at": "2025-06-03T19:50:06.088369Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:06.089201Z", "completed_at": "2025-06-03T19:50:06.089205Z"}], "thread_id": "Thread-1", "execution_time": 0.15983080863952637, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_expectations_expect_column_to_exist_input_layer__medical_claim_diagnosis_code_25.9a83544477", "compiled": true, "compiled_code": "\n\n    with test_data as (\n\n        select\n            cast('DIAGNOSIS_CODE_25' as TEXT) as column_name,\n            66 as matching_column_index,\n            True as column_index_matches\n\n    )\n    select *\n    from test_data\n    where\n        not(matching_column_index >= 0 and column_index_matches)", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:05.930632Z", "completed_at": "2025-06-03T19:50:06.089612Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:06.090562Z", "completed_at": "2025-06-03T19:50:06.090566Z"}], "thread_id": "Thread-3", "execution_time": 0.17205214500427246, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_expectations_expect_column_to_exist_input_layer__medical_claim_diagnosis_code_24.def2cd0e27", "compiled": true, "compiled_code": "\n\n    with test_data as (\n\n        select\n            cast('DIAGNOSIS_CODE_24' as TEXT) as column_name,\n            65 as matching_column_index,\n            True as column_index_matches\n\n    )\n    select *\n    from test_data\n    where\n        not(matching_column_index >= 0 and column_index_matches)", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:06.090929Z", "completed_at": "2025-06-03T19:50:06.363908Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:06.364723Z", "completed_at": "2025-06-03T19:50:06.364738Z"}], "thread_id": "Thread-4", "execution_time": 0.2762150764465332, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_expectations_expect_column_to_exist_input_layer__medical_claim_diagnosis_code_3.fe5b294bbb", "compiled": true, "compiled_code": "\n\n    with test_data as (\n\n        select\n            cast('DIAGNOSIS_CODE_3' as TEXT) as column_name,\n            44 as matching_column_index,\n            True as column_index_matches\n\n    )\n    select *\n    from test_data\n    where\n        not(matching_column_index >= 0 and column_index_matches)", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:06.244963Z", "completed_at": "2025-06-03T19:50:06.412820Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:06.420221Z", "completed_at": "2025-06-03T19:50:06.420229Z"}], "thread_id": "Thread-3", "execution_time": 0.30963802337646484, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_expectations_expect_column_to_exist_input_layer__medical_claim_diagnosis_code_6.f0bd8f4b67", "compiled": true, "compiled_code": "\n\n    with test_data as (\n\n        select\n            cast('DIAGNOSIS_CODE_6' as TEXT) as column_name,\n            47 as matching_column_index,\n            True as column_index_matches\n\n    )\n    select *\n    from test_data\n    where\n        not(matching_column_index >= 0 and column_index_matches)", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:06.111488Z", "completed_at": "2025-06-03T19:50:06.420986Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:06.421526Z", "completed_at": "2025-06-03T19:50:06.421531Z"}], "thread_id": "Thread-1", "execution_time": 0.32076215744018555, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_expectations_expect_column_to_exist_input_layer__medical_claim_diagnosis_code_5.62d718eec4", "compiled": true, "compiled_code": "\n\n    with test_data as (\n\n        select\n            cast('DIAGNOSIS_CODE_5' as TEXT) as column_name,\n            46 as matching_column_index,\n            True as column_index_matches\n\n    )\n    select *\n    from test_data\n    where\n        not(matching_column_index >= 0 and column_index_matches)", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:06.101649Z", "completed_at": "2025-06-03T19:50:06.421894Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:06.422560Z", "completed_at": "2025-06-03T19:50:06.422564Z"}], "thread_id": "Thread-2", "execution_time": 0.3325679302215576, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_expectations_expect_column_to_exist_input_layer__medical_claim_diagnosis_code_4.e229243811", "compiled": true, "compiled_code": "\n\n    with test_data as (\n\n        select\n            cast('DIAGNOSIS_CODE_4' as TEXT) as column_name,\n            45 as matching_column_index,\n            True as column_index_matches\n\n    )\n    select *\n    from test_data\n    where\n        not(matching_column_index >= 0 and column_index_matches)", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:06.369023Z", "completed_at": "2025-06-03T19:50:06.512694Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:06.513017Z", "completed_at": "2025-06-03T19:50:06.513024Z"}], "thread_id": "Thread-4", "execution_time": 0.14627909660339355, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_expectations_expect_column_to_exist_input_layer__medical_claim_diagnosis_code_7.9a2175a4bb", "compiled": true, "compiled_code": "\n\n    with test_data as (\n\n        select\n            cast('DIAGNOSIS_CODE_7' as TEXT) as column_name,\n            48 as matching_column_index,\n            True as column_index_matches\n\n    )\n    select *\n    from test_data\n    where\n        not(matching_column_index >= 0 and column_index_matches)", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:06.433255Z", "completed_at": "2025-06-03T19:50:06.563565Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:06.571306Z", "completed_at": "2025-06-03T19:50:06.571314Z"}], "thread_id": "Thread-1", "execution_time": 0.13975191116333008, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_expectations_expect_column_to_exist_input_layer__medical_claim_diagnosis_code_9.08912cd8fa", "compiled": true, "compiled_code": "\n\n    with test_data as (\n\n        select\n            cast('DIAGNOSIS_CODE_9' as TEXT) as column_name,\n            50 as matching_column_index,\n            True as column_index_matches\n\n    )\n    select *\n    from test_data\n    where\n        not(matching_column_index >= 0 and column_index_matches)", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:06.442711Z", "completed_at": "2025-06-03T19:50:06.581060Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:06.591372Z", "completed_at": "2025-06-03T19:50:06.591380Z"}], "thread_id": "Thread-2", "execution_time": 0.1587677001953125, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_expectations_expect_column_to_exist_input_layer__medical_claim_diagnosis_code_type.575a23e942", "compiled": true, "compiled_code": "\n\n    with test_data as (\n\n        select\n            cast('DIAGNOSIS_CODE_TYPE' as TEXT) as column_name,\n            41 as matching_column_index,\n            True as column_index_matches\n\n    )\n    select *\n    from test_data\n    where\n        not(matching_column_index >= 0 and column_index_matches)", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:06.422913Z", "completed_at": "2025-06-03T19:50:06.592095Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:06.592806Z", "completed_at": "2025-06-03T19:50:06.592812Z"}], "thread_id": "Thread-3", "execution_time": 0.17167210578918457, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_expectations_expect_column_to_exist_input_layer__medical_claim_diagnosis_code_8.cb6f6f4654", "compiled": true, "compiled_code": "\n\n    with test_data as (\n\n        select\n            cast('DIAGNOSIS_CODE_8' as TEXT) as column_name,\n            49 as matching_column_index,\n            True as column_index_matches\n\n    )\n    select *\n    from test_data\n    where\n        not(matching_column_index >= 0 and column_index_matches)", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:06.514448Z", "completed_at": "2025-06-03T19:50:06.666329Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:06.666595Z", "completed_at": "2025-06-03T19:50:06.666603Z"}], "thread_id": "Thread-4", "execution_time": 0.1528329849243164, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_expectations_expect_column_to_exist_input_layer__medical_claim_diagnosis_poa_1.4c6e5e77a3", "compiled": true, "compiled_code": "\n\n    with test_data as (\n\n        select\n            cast('DIAGNOSIS_POA_1' as TEXT) as column_name,\n            67 as matching_column_index,\n            True as column_index_matches\n\n    )\n    select *\n    from test_data\n    where\n        not(matching_column_index >= 0 and column_index_matches)", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:06.594756Z", "completed_at": "2025-06-03T19:50:06.735241Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:06.735734Z", "completed_at": "2025-06-03T19:50:06.735741Z"}], "thread_id": "Thread-2", "execution_time": 0.14255905151367188, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_expectations_expect_column_to_exist_input_layer__medical_claim_diagnosis_poa_11.9ad2e7c2f3", "compiled": true, "compiled_code": "\n\n    with test_data as (\n\n        select\n            cast('DIAGNOSIS_POA_11' as TEXT) as column_name,\n            77 as matching_column_index,\n            True as column_index_matches\n\n    )\n    select *\n    from test_data\n    where\n        not(matching_column_index >= 0 and column_index_matches)", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:06.605512Z", "completed_at": "2025-06-03T19:50:06.735510Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:06.736178Z", "completed_at": "2025-06-03T19:50:06.736183Z"}], "thread_id": "Thread-3", "execution_time": 0.1417553424835205, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_expectations_expect_column_to_exist_input_layer__medical_claim_diagnosis_poa_12.12d7b5a597", "compiled": true, "compiled_code": "\n\n    with test_data as (\n\n        select\n            cast('DIAGNOSIS_POA_12' as TEXT) as column_name,\n            78 as matching_column_index,\n            True as column_index_matches\n\n    )\n    select *\n    from test_data\n    where\n        not(matching_column_index >= 0 and column_index_matches)", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:06.581479Z", "completed_at": "2025-06-03T19:50:06.736569Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:06.737410Z", "completed_at": "2025-06-03T19:50:06.737414Z"}], "thread_id": "Thread-1", "execution_time": 0.16453886032104492, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_expectations_expect_column_to_exist_input_layer__medical_claim_diagnosis_poa_10.a942fe6883", "compiled": true, "compiled_code": "\n\n    with test_data as (\n\n        select\n            cast('DIAGNOSIS_POA_10' as TEXT) as column_name,\n            76 as matching_column_index,\n            True as column_index_matches\n\n    )\n    select *\n    from test_data\n    where\n        not(matching_column_index >= 0 and column_index_matches)", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:06.668160Z", "completed_at": "2025-06-03T19:50:06.794291Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:06.794584Z", "completed_at": "2025-06-03T19:50:06.794591Z"}], "thread_id": "Thread-4", "execution_time": 0.12703204154968262, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_expectations_expect_column_to_exist_input_layer__medical_claim_diagnosis_poa_13.6daa94195f", "compiled": true, "compiled_code": "\n\n    with test_data as (\n\n        select\n            cast('DIAGNOSIS_POA_13' as TEXT) as column_name,\n            79 as matching_column_index,\n            True as column_index_matches\n\n    )\n    select *\n    from test_data\n    where\n        not(matching_column_index >= 0 and column_index_matches)", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:06.739377Z", "completed_at": "2025-06-03T19:50:06.936670Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:06.937278Z", "completed_at": "2025-06-03T19:50:06.937287Z"}], "thread_id": "Thread-2", "execution_time": 0.19960904121398926, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_expectations_expect_column_to_exist_input_layer__medical_claim_diagnosis_poa_14.a53ba540dd", "compiled": true, "compiled_code": "\n\n    with test_data as (\n\n        select\n            cast('DIAGNOSIS_POA_14' as TEXT) as column_name,\n            80 as matching_column_index,\n            True as column_index_matches\n\n    )\n    select *\n    from test_data\n    where\n        not(matching_column_index >= 0 and column_index_matches)", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:06.748671Z", "completed_at": "2025-06-03T19:50:06.937012Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:06.938070Z", "completed_at": "2025-06-03T19:50:06.938076Z"}], "thread_id": "Thread-3", "execution_time": 0.20009803771972656, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_expectations_expect_column_to_exist_input_layer__medical_claim_diagnosis_poa_15.4c0aaa9110", "compiled": true, "compiled_code": "\n\n    with test_data as (\n\n        select\n            cast('DIAGNOSIS_POA_15' as TEXT) as column_name,\n            81 as matching_column_index,\n            True as column_index_matches\n\n    )\n    select *\n    from test_data\n    where\n        not(matching_column_index >= 0 and column_index_matches)", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:06.758699Z", "completed_at": "2025-06-03T19:50:06.937739Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:06.939057Z", "completed_at": "2025-06-03T19:50:06.939064Z"}], "thread_id": "Thread-1", "execution_time": 0.20002508163452148, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_expectations_expect_column_to_exist_input_layer__medical_claim_diagnosis_poa_16.07a6b4aab8", "compiled": true, "compiled_code": "\n\n    with test_data as (\n\n        select\n            cast('DIAGNOSIS_POA_16' as TEXT) as column_name,\n            82 as matching_column_index,\n            True as column_index_matches\n\n    )\n    select *\n    from test_data\n    where\n        not(matching_column_index >= 0 and column_index_matches)", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:06.795757Z", "completed_at": "2025-06-03T19:50:07.078514Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:07.078842Z", "completed_at": "2025-06-03T19:50:07.078850Z"}], "thread_id": "Thread-4", "execution_time": 0.28369712829589844, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_expectations_expect_column_to_exist_input_layer__medical_claim_diagnosis_poa_17.e6a72cabdb", "compiled": true, "compiled_code": "\n\n    with test_data as (\n\n        select\n            cast('DIAGNOSIS_POA_17' as TEXT) as column_name,\n            83 as matching_column_index,\n            True as column_index_matches\n\n    )\n    select *\n    from test_data\n    where\n        not(matching_column_index >= 0 and column_index_matches)", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:06.961570Z", "completed_at": "2025-06-03T19:50:07.118568Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:07.118880Z", "completed_at": "2025-06-03T19:50:07.118888Z"}], "thread_id": "Thread-1", "execution_time": 0.17794203758239746, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_expectations_expect_column_to_exist_input_layer__medical_claim_diagnosis_poa_2.a21ce0ab94", "compiled": true, "compiled_code": "\n\n    with test_data as (\n\n        select\n            cast('DIAGNOSIS_POA_2' as TEXT) as column_name,\n            68 as matching_column_index,\n            True as column_index_matches\n\n    )\n    select *\n    from test_data\n    where\n        not(matching_column_index >= 0 and column_index_matches)", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:06.941526Z", "completed_at": "2025-06-03T19:50:07.120012Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:07.120910Z", "completed_at": "2025-06-03T19:50:07.120916Z"}], "thread_id": "Thread-2", "execution_time": 0.18107271194458008, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_expectations_expect_column_to_exist_input_layer__medical_claim_diagnosis_poa_18.b4c22ac255", "compiled": true, "compiled_code": "\n\n    with test_data as (\n\n        select\n            cast('DIAGNOSIS_POA_18' as TEXT) as column_name,\n            84 as matching_column_index,\n            True as column_index_matches\n\n    )\n    select *\n    from test_data\n    where\n        not(matching_column_index >= 0 and column_index_matches)", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:06.951590Z", "completed_at": "2025-06-03T19:50:07.120536Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:07.121626Z", "completed_at": "2025-06-03T19:50:07.121631Z"}], "thread_id": "Thread-3", "execution_time": 0.18114805221557617, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_expectations_expect_column_to_exist_input_layer__medical_claim_diagnosis_poa_19.a44f88f5ce", "compiled": true, "compiled_code": "\n\n    with test_data as (\n\n        select\n            cast('DIAGNOSIS_POA_19' as TEXT) as column_name,\n            85 as matching_column_index,\n            True as column_index_matches\n\n    )\n    select *\n    from test_data\n    where\n        not(matching_column_index >= 0 and column_index_matches)", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:07.080357Z", "completed_at": "2025-06-03T19:50:07.324831Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:07.325068Z", "completed_at": "2025-06-03T19:50:07.325074Z"}], "thread_id": "Thread-4", "execution_time": 0.24536705017089844, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_expectations_expect_column_to_exist_input_layer__medical_claim_diagnosis_poa_20.e38623af90", "compiled": true, "compiled_code": "\n\n    with test_data as (\n\n        select\n            cast('DIAGNOSIS_POA_20' as TEXT) as column_name,\n            86 as matching_column_index,\n            True as column_index_matches\n\n    )\n    select *\n    from test_data\n    where\n        not(matching_column_index >= 0 and column_index_matches)", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:07.122367Z", "completed_at": "2025-06-03T19:50:07.378886Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:07.379513Z", "completed_at": "2025-06-03T19:50:07.379521Z"}], "thread_id": "Thread-1", "execution_time": 0.25934696197509766, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_expectations_expect_column_to_exist_input_layer__medical_claim_diagnosis_poa_21.315a0708cb", "compiled": true, "compiled_code": "\n\n    with test_data as (\n\n        select\n            cast('DIAGNOSIS_POA_21' as TEXT) as column_name,\n            87 as matching_column_index,\n            True as column_index_matches\n\n    )\n    select *\n    from test_data\n    where\n        not(matching_column_index >= 0 and column_index_matches)", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:07.143048Z", "completed_at": "2025-06-03T19:50:07.379201Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:07.380290Z", "completed_at": "2025-06-03T19:50:07.380296Z"}], "thread_id": "Thread-3", "execution_time": 0.2477269172668457, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_expectations_expect_column_to_exist_input_layer__medical_claim_diagnosis_poa_23.eb7755338d", "compiled": true, "compiled_code": "\n\n    with test_data as (\n\n        select\n            cast('DIAGNOSIS_POA_23' as TEXT) as column_name,\n            89 as matching_column_index,\n            True as column_index_matches\n\n    )\n    select *\n    from test_data\n    where\n        not(matching_column_index >= 0 and column_index_matches)", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:07.326213Z", "completed_at": "2025-06-03T19:50:07.454515Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:07.454817Z", "completed_at": "2025-06-03T19:50:07.454825Z"}], "thread_id": "Thread-4", "execution_time": 0.1292119026184082, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_expectations_expect_column_to_exist_input_layer__medical_claim_diagnosis_poa_24.e1658b77a9", "compiled": true, "compiled_code": "\n\n    with test_data as (\n\n        select\n            cast('DIAGNOSIS_POA_24' as TEXT) as column_name,\n            90 as matching_column_index,\n            True as column_index_matches\n\n    )\n    select *\n    from test_data\n    where\n        not(matching_column_index >= 0 and column_index_matches)", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:07.134131Z", "completed_at": "2025-06-03T19:50:07.476462Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:07.476788Z", "completed_at": "2025-06-03T19:50:07.476800Z"}], "thread_id": "Thread-2", "execution_time": 0.34483885765075684, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_expectations_expect_column_to_exist_input_layer__medical_claim_diagnosis_poa_22.ef96d54a75", "compiled": true, "compiled_code": "\n\n    with test_data as (\n\n        select\n            cast('DIAGNOSIS_POA_22' as TEXT) as column_name,\n            88 as matching_column_index,\n            True as column_index_matches\n\n    )\n    select *\n    from test_data\n    where\n        not(matching_column_index >= 0 and column_index_matches)", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:07.382623Z", "completed_at": "2025-06-03T19:50:07.541790Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:07.542164Z", "completed_at": "2025-06-03T19:50:07.542172Z"}], "thread_id": "Thread-1", "execution_time": 0.16079163551330566, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_expectations_expect_column_to_exist_input_layer__medical_claim_diagnosis_poa_25.0dbcecda47", "compiled": true, "compiled_code": "\n\n    with test_data as (\n\n        select\n            cast('DIAGNOSIS_POA_25' as TEXT) as column_name,\n            91 as matching_column_index,\n            True as column_index_matches\n\n    )\n    select *\n    from test_data\n    where\n        not(matching_column_index >= 0 and column_index_matches)", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:07.393243Z", "completed_at": "2025-06-03T19:50:07.543424Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:07.553156Z", "completed_at": "2025-06-03T19:50:07.553164Z"}], "thread_id": "Thread-3", "execution_time": 0.17144203186035156, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_expectations_expect_column_to_exist_input_layer__medical_claim_diagnosis_poa_3.3fb5aa8f1c", "compiled": true, "compiled_code": "\n\n    with test_data as (\n\n        select\n            cast('DIAGNOSIS_POA_3' as TEXT) as column_name,\n            69 as matching_column_index,\n            True as column_index_matches\n\n    )\n    select *\n    from test_data\n    where\n        not(matching_column_index >= 0 and column_index_matches)", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:07.456234Z", "completed_at": "2025-06-03T19:50:07.678683Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:07.678984Z", "completed_at": "2025-06-03T19:50:07.678992Z"}], "thread_id": "Thread-4", "execution_time": 0.22344398498535156, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_expectations_expect_column_to_exist_input_layer__medical_claim_diagnosis_poa_4.15d68a2df2", "compiled": true, "compiled_code": "\n\n    with test_data as (\n\n        select\n            cast('DIAGNOSIS_POA_4' as TEXT) as column_name,\n            70 as matching_column_index,\n            True as column_index_matches\n\n    )\n    select *\n    from test_data\n    where\n        not(matching_column_index >= 0 and column_index_matches)", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:07.478036Z", "completed_at": "2025-06-03T19:50:07.689276Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:07.689539Z", "completed_at": "2025-06-03T19:50:07.689544Z"}], "thread_id": "Thread-2", "execution_time": 0.21207594871520996, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_expectations_expect_column_to_exist_input_layer__medical_claim_diagnosis_poa_5.103b375275", "compiled": true, "compiled_code": "\n\n    with test_data as (\n\n        select\n            cast('DIAGNOSIS_POA_5' as TEXT) as column_name,\n            71 as matching_column_index,\n            True as column_index_matches\n\n    )\n    select *\n    from test_data\n    where\n        not(matching_column_index >= 0 and column_index_matches)", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:07.680025Z", "completed_at": "2025-06-03T19:50:07.923178Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:07.923868Z", "completed_at": "2025-06-03T19:50:07.923876Z"}], "thread_id": "Thread-4", "execution_time": 0.24438095092773438, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_expectations_expect_column_to_exist_input_layer__medical_claim_diagnosis_poa_8.51f6f1e7ae", "compiled": true, "compiled_code": "\n\n    with test_data as (\n\n        select\n            cast('DIAGNOSIS_POA_8' as TEXT) as column_name,\n            74 as matching_column_index,\n            True as column_index_matches\n\n    )\n    select *\n    from test_data\n    where\n        not(matching_column_index >= 0 and column_index_matches)", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:07.554878Z", "completed_at": "2025-06-03T19:50:07.923542Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:07.924539Z", "completed_at": "2025-06-03T19:50:07.924544Z"}], "thread_id": "Thread-3", "execution_time": 0.3702857494354248, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_expectations_expect_column_to_exist_input_layer__medical_claim_diagnosis_poa_7.f03119e40f", "compiled": true, "compiled_code": "\n\n    with test_data as (\n\n        select\n            cast('DIAGNOSIS_POA_7' as TEXT) as column_name,\n            73 as matching_column_index,\n            True as column_index_matches\n\n    )\n    select *\n    from test_data\n    where\n        not(matching_column_index >= 0 and column_index_matches)", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:07.690564Z", "completed_at": "2025-06-03T19:50:07.925019Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:07.926405Z", "completed_at": "2025-06-03T19:50:07.926411Z"}], "thread_id": "Thread-2", "execution_time": 0.23635411262512207, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_expectations_expect_column_to_exist_input_layer__medical_claim_diagnosis_poa_9.fd6bae75dc", "compiled": true, "compiled_code": "\n\n    with test_data as (\n\n        select\n            cast('DIAGNOSIS_POA_9' as TEXT) as column_name,\n            75 as matching_column_index,\n            True as column_index_matches\n\n    )\n    select *\n    from test_data\n    where\n        not(matching_column_index >= 0 and column_index_matches)", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:07.543637Z", "completed_at": "2025-06-03T19:50:07.993230Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:07.993512Z", "completed_at": "2025-06-03T19:50:07.993519Z"}], "thread_id": "Thread-1", "execution_time": 0.45072197914123535, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_expectations_expect_column_to_exist_input_layer__medical_claim_diagnosis_poa_6.78bd7a661e", "compiled": true, "compiled_code": "\n\n    with test_data as (\n\n        select\n            cast('DIAGNOSIS_POA_6' as TEXT) as column_name,\n            72 as matching_column_index,\n            True as column_index_matches\n\n    )\n    select *\n    from test_data\n    where\n        not(matching_column_index >= 0 and column_index_matches)", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:07.939981Z", "completed_at": "2025-06-03T19:50:08.172352Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:08.191915Z", "completed_at": "2025-06-03T19:50:08.191923Z"}], "thread_id": "Thread-3", "execution_time": 0.2646620273590088, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_expectations_expect_column_to_exist_input_layer__medical_claim_discharge_disposition_code.2b9f98a682", "compiled": true, "compiled_code": "\n\n    with test_data as (\n\n        select\n            cast('DISCHARGE_DISPOSITION_CODE' as TEXT) as column_name,\n            15 as matching_column_index,\n            True as column_index_matches\n\n    )\n    select *\n    from test_data\n    where\n        not(matching_column_index >= 0 and column_index_matches)", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:07.950424Z", "completed_at": "2025-06-03T19:50:08.192479Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:08.193215Z", "completed_at": "2025-06-03T19:50:08.193221Z"}], "thread_id": "Thread-2", "execution_time": 0.2647228240966797, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_expectations_expect_column_to_exist_input_layer__medical_claim_drg_code.a4b7bf064e", "compiled": true, "compiled_code": "\n\n    with test_data as (\n\n        select\n            cast('DRG_CODE' as TEXT) as column_name,\n            19 as matching_column_index,\n            True as column_index_matches\n\n    )\n    select *\n    from test_data\n    where\n        not(matching_column_index >= 0 and column_index_matches)", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:07.994781Z", "completed_at": "2025-06-03T19:50:08.193692Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:08.194862Z", "completed_at": "2025-06-03T19:50:08.194867Z"}], "thread_id": "Thread-1", "execution_time": 0.2007150650024414, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_expectations_expect_column_to_exist_input_layer__medical_claim_drg_code_type.da048d6cca", "compiled": true, "compiled_code": "\n\n    with test_data as (\n\n        select\n            cast('DRG_CODE_TYPE' as TEXT) as column_name,\n            18 as matching_column_index,\n            True as column_index_matches\n\n    )\n    select *\n    from test_data\n    where\n        not(matching_column_index >= 0 and column_index_matches)", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:07.928870Z", "completed_at": "2025-06-03T19:50:08.194282Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:08.195590Z", "completed_at": "2025-06-03T19:50:08.195595Z"}], "thread_id": "Thread-4", "execution_time": 0.2686882019042969, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_expectations_expect_column_to_exist_input_layer__medical_claim_discharge_date.35620b56b8", "compiled": true, "compiled_code": "\n\n    with test_data as (\n\n        select\n            cast('DISCHARGE_DATE' as TEXT) as column_name,\n            12 as matching_column_index,\n            True as column_index_matches\n\n    )\n    select *\n    from test_data\n    where\n        not(matching_column_index >= 0 and column_index_matches)", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:08.207602Z", "completed_at": "2025-06-03T19:50:08.364681Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:08.365396Z", "completed_at": "2025-06-03T19:50:08.365404Z"}], "thread_id": "Thread-2", "execution_time": 0.16946697235107422, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_expectations_expect_column_to_exist_input_layer__medical_claim_file_date.554248be64", "compiled": true, "compiled_code": "\n\n    with test_data as (\n\n        select\n            cast('FILE_DATE' as TEXT) as column_name,\n            146 as matching_column_index,\n            True as column_index_matches\n\n    )\n    select *\n    from test_data\n    where\n        not(matching_column_index >= 0 and column_index_matches)", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:08.196578Z", "completed_at": "2025-06-03T19:50:08.366295Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:08.367439Z", "completed_at": "2025-06-03T19:50:08.367444Z"}], "thread_id": "Thread-3", "execution_time": 0.17354488372802734, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_expectations_expect_column_to_exist_input_layer__medical_claim_facility_npi.fe4e41303f", "compiled": true, "compiled_code": "\n\n    with test_data as (\n\n        select\n            cast('FACILITY_NPI' as TEXT) as column_name,\n            32 as matching_column_index,\n            True as column_index_matches\n\n    )\n    select *\n    from test_data\n    where\n        not(matching_column_index >= 0 and column_index_matches)", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:08.217881Z", "completed_at": "2025-06-03T19:50:08.367185Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:08.368144Z", "completed_at": "2025-06-03T19:50:08.368149Z"}], "thread_id": "Thread-1", "execution_time": 0.1614060401916504, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_expectations_expect_column_to_exist_input_layer__medical_claim_file_name.9865cf7c32", "compiled": true, "compiled_code": "\n\n    with test_data as (\n\n        select\n            cast('FILE_NAME' as TEXT) as column_name,\n            145 as matching_column_index,\n            True as column_index_matches\n\n    )\n    select *\n    from test_data\n    where\n        not(matching_column_index >= 0 and column_index_matches)", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:08.226206Z", "completed_at": "2025-06-03T19:50:08.461553Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:08.461854Z", "completed_at": "2025-06-03T19:50:08.461862Z"}], "thread_id": "Thread-4", "execution_time": 0.25460100173950195, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_expectations_expect_column_to_exist_input_layer__medical_claim_hcpcs_code.7a32efc3bd", "compiled": true, "compiled_code": "\n\n    with test_data as (\n\n        select\n            cast('HCPCS_CODE' as TEXT) as column_name,\n            22 as matching_column_index,\n            True as column_index_matches\n\n    )\n    select *\n    from test_data\n    where\n        not(matching_column_index >= 0 and column_index_matches)", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:08.388586Z", "completed_at": "2025-06-03T19:50:08.538502Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:08.538892Z", "completed_at": "2025-06-03T19:50:08.538900Z"}], "thread_id": "Thread-1", "execution_time": 0.15984201431274414, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_expectations_expect_column_to_exist_input_layer__medical_claim_hcpcs_modifier_3.fd09986dd7", "compiled": true, "compiled_code": "\n\n    with test_data as (\n\n        select\n            cast('HCPCS_MODIFIER_3' as TEXT) as column_name,\n            25 as matching_column_index,\n            True as column_index_matches\n\n    )\n    select *\n    from test_data\n    where\n        not(matching_column_index >= 0 and column_index_matches)", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:08.380545Z", "completed_at": "2025-06-03T19:50:08.641629Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:08.653974Z", "completed_at": "2025-06-03T19:50:08.653990Z"}], "thread_id": "Thread-3", "execution_time": 0.27559399604797363, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_expectations_expect_column_to_exist_input_layer__medical_claim_hcpcs_modifier_2.9ed24962a4", "compiled": true, "compiled_code": "\n\n    with test_data as (\n\n        select\n            cast('HCPCS_MODIFIER_2' as TEXT) as column_name,\n            24 as matching_column_index,\n            True as column_index_matches\n\n    )\n    select *\n    from test_data\n    where\n        not(matching_column_index >= 0 and column_index_matches)", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:08.368817Z", "completed_at": "2025-06-03T19:50:08.642025Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:08.661944Z", "completed_at": "2025-06-03T19:50:08.661952Z"}], "thread_id": "Thread-2", "execution_time": 0.29542112350463867, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_expectations_expect_column_to_exist_input_layer__medical_claim_hcpcs_modifier_1.f76832da2a", "compiled": true, "compiled_code": "\n\n    with test_data as (\n\n        select\n            cast('HCPCS_MODIFIER_1' as TEXT) as column_name,\n            23 as matching_column_index,\n            True as column_index_matches\n\n    )\n    select *\n    from test_data\n    where\n        not(matching_column_index >= 0 and column_index_matches)", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:08.463271Z", "completed_at": "2025-06-03T19:50:08.690426Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:08.690681Z", "completed_at": "2025-06-03T19:50:08.690688Z"}], "thread_id": "Thread-4", "execution_time": 0.22809290885925293, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_expectations_expect_column_to_exist_input_layer__medical_claim_hcpcs_modifier_4.01fb92ddea", "compiled": true, "compiled_code": "\n\n    with test_data as (\n\n        select\n            cast('HCPCS_MODIFIER_4' as TEXT) as column_name,\n            26 as matching_column_index,\n            True as column_index_matches\n\n    )\n    select *\n    from test_data\n    where\n        not(matching_column_index >= 0 and column_index_matches)", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:08.678450Z", "completed_at": "2025-06-03T19:50:08.846126Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:08.849615Z", "completed_at": "2025-06-03T19:50:08.849623Z"}], "thread_id": "Thread-2", "execution_time": 0.17838573455810547, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_expectations_expect_column_to_exist_input_layer__medical_claim_ingest_datetime.09e4cc193e", "compiled": true, "compiled_code": "\n\n    with test_data as (\n\n        select\n            cast('INGEST_DATETIME' as TEXT) as column_name,\n            147 as matching_column_index,\n            True as column_index_matches\n\n    )\n    select *\n    from test_data\n    where\n        not(matching_column_index >= 0 and column_index_matches)", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:08.541274Z", "completed_at": "2025-06-03T19:50:08.849317Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:08.850148Z", "completed_at": "2025-06-03T19:50:08.850153Z"}], "thread_id": "Thread-1", "execution_time": 0.30971598625183105, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_expectations_expect_column_to_exist_input_layer__medical_claim_hcpcs_modifier_5.9a4d11d803", "compiled": true, "compiled_code": "\n\n    with test_data as (\n\n        select\n            cast('HCPCS_MODIFIER_5' as TEXT) as column_name,\n            27 as matching_column_index,\n            True as column_index_matches\n\n    )\n    select *\n    from test_data\n    where\n        not(matching_column_index >= 0 and column_index_matches)", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:08.672137Z", "completed_at": "2025-06-03T19:50:08.850600Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:08.851644Z", "completed_at": "2025-06-03T19:50:08.851648Z"}], "thread_id": "Thread-3", "execution_time": 0.18776583671569824, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_expectations_expect_column_to_exist_input_layer__medical_claim_in_network_flag.75272febcf", "compiled": true, "compiled_code": "\n\n    with test_data as (\n\n        select\n            cast('IN_NETWORK_FLAG' as TEXT) as column_name,\n            143 as matching_column_index,\n            True as column_index_matches\n\n    )\n    select *\n    from test_data\n    where\n        not(matching_column_index >= 0 and column_index_matches)", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:08.691732Z", "completed_at": "2025-06-03T19:50:08.851379Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:08.852583Z", "completed_at": "2025-06-03T19:50:08.852587Z"}], "thread_id": "Thread-4", "execution_time": 0.1613457202911377, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_expectations_expect_column_to_exist_input_layer__medical_claim_member_id.02d2e0fb40", "compiled": true, "compiled_code": "\n\n    with test_data as (\n\n        select\n            cast('MEMBER_ID' as TEXT) as column_name,\n            4 as matching_column_index,\n            True as column_index_matches\n\n    )\n    select *\n    from test_data\n    where\n        not(matching_column_index >= 0 and column_index_matches)", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:08.863629Z", "completed_at": "2025-06-03T19:50:09.019768Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:09.027851Z", "completed_at": "2025-06-03T19:50:09.027858Z"}], "thread_id": "Thread-1", "execution_time": 0.17561817169189453, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_expectations_expect_column_to_exist_input_layer__medical_claim_paid_date.55519c4b63", "compiled": true, "compiled_code": "\n\n    with test_data as (\n\n        select\n            cast('PAID_DATE' as TEXT) as column_name,\n            33 as matching_column_index,\n            True as column_index_matches\n\n    )\n    select *\n    from test_data\n    where\n        not(matching_column_index >= 0 and column_index_matches)", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:08.881724Z", "completed_at": "2025-06-03T19:50:09.028396Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:09.029155Z", "completed_at": "2025-06-03T19:50:09.029159Z"}], "thread_id": "Thread-4", "execution_time": 0.15722393989562988, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_expectations_expect_column_to_exist_input_layer__medical_claim_person_id.632269d59f", "compiled": true, "compiled_code": "\n\n    with test_data as (\n\n        select\n            cast('PERSON_ID' as TEXT) as column_name,\n            3 as matching_column_index,\n            True as column_index_matches\n\n    )\n    select *\n    from test_data\n    where\n        not(matching_column_index >= 0 and column_index_matches)", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:08.854227Z", "completed_at": "2025-06-03T19:50:09.028868Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:09.030050Z", "completed_at": "2025-06-03T19:50:09.030054Z"}], "thread_id": "Thread-2", "execution_time": 0.17806625366210938, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_expectations_expect_column_to_exist_input_layer__medical_claim_paid_amount.7c29d07389", "compiled": true, "compiled_code": "\n\n    with test_data as (\n\n        select\n            cast('PAID_AMOUNT' as TEXT) as column_name,\n            34 as matching_column_index,\n            True as column_index_matches\n\n    )\n    select *\n    from test_data\n    where\n        not(matching_column_index >= 0 and column_index_matches)", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:08.873161Z", "completed_at": "2025-06-03T19:50:09.029520Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:09.030698Z", "completed_at": "2025-06-03T19:50:09.030703Z"}], "thread_id": "Thread-3", "execution_time": 0.17679500579833984, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_expectations_expect_column_to_exist_input_layer__medical_claim_payer.588fa20911", "compiled": true, "compiled_code": "\n\n    with test_data as (\n\n        select\n            cast('PAYER' as TEXT) as column_name,\n            5 as matching_column_index,\n            True as column_index_matches\n\n    )\n    select *\n    from test_data\n    where\n        not(matching_column_index >= 0 and column_index_matches)", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:09.052447Z", "completed_at": "2025-06-03T19:50:09.178596Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:09.178980Z", "completed_at": "2025-06-03T19:50:09.178989Z"}], "thread_id": "Thread-2", "execution_time": 0.13785910606384277, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_expectations_expect_column_to_exist_input_layer__medical_claim_procedure_code_1.f7751910fe", "compiled": true, "compiled_code": "\n\n    with test_data as (\n\n        select\n            cast('PROCEDURE_CODE_1' as TEXT) as column_name,\n            93 as matching_column_index,\n            True as column_index_matches\n\n    )\n    select *\n    from test_data\n    where\n        not(matching_column_index >= 0 and column_index_matches)", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:09.061488Z", "completed_at": "2025-06-03T19:50:09.221564Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:09.221839Z", "completed_at": "2025-06-03T19:50:09.221845Z"}], "thread_id": "Thread-3", "execution_time": 0.18015408515930176, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_expectations_expect_column_to_exist_input_layer__medical_claim_procedure_code_10.5423b065cd", "compiled": true, "compiled_code": "\n\n    with test_data as (\n\n        select\n            cast('PROCEDURE_CODE_10' as TEXT) as column_name,\n            102 as matching_column_index,\n            True as column_index_matches\n\n    )\n    select *\n    from test_data\n    where\n        not(matching_column_index >= 0 and column_index_matches)", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:09.042458Z", "completed_at": "2025-06-03T19:50:09.222476Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:09.223046Z", "completed_at": "2025-06-03T19:50:09.223051Z"}], "thread_id": "Thread-4", "execution_time": 0.1915130615234375, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_expectations_expect_column_to_exist_input_layer__medical_claim_plan.722364b0f6", "compiled": true, "compiled_code": "\n\n    with test_data as (\n\n        select\n            cast('PLAN' as TEXT) as column_name,\n            6 as matching_column_index,\n            True as column_index_matches\n\n    )\n    select *\n    from test_data\n    where\n        not(matching_column_index >= 0 and column_index_matches)", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:09.032102Z", "completed_at": "2025-06-03T19:50:09.223409Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:09.224169Z", "completed_at": "2025-06-03T19:50:09.224174Z"}], "thread_id": "Thread-1", "execution_time": 0.1944739818572998, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_expectations_expect_column_to_exist_input_layer__medical_claim_place_of_service_code.8206218aa7", "compiled": true, "compiled_code": "\n\n    with test_data as (\n\n        select\n            cast('PLACE_OF_SERVICE_CODE' as TEXT) as column_name,\n            16 as matching_column_index,\n            True as column_index_matches\n\n    )\n    select *\n    from test_data\n    where\n        not(matching_column_index >= 0 and column_index_matches)", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:09.180780Z", "completed_at": "2025-06-03T19:50:09.350980Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:09.351224Z", "completed_at": "2025-06-03T19:50:09.351230Z"}], "thread_id": "Thread-2", "execution_time": 0.1713240146636963, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_expectations_expect_column_to_exist_input_layer__medical_claim_procedure_code_11.580b894705", "compiled": true, "compiled_code": "\n\n    with test_data as (\n\n        select\n            cast('PROCEDURE_CODE_11' as TEXT) as column_name,\n            103 as matching_column_index,\n            True as column_index_matches\n\n    )\n    select *\n    from test_data\n    where\n        not(matching_column_index >= 0 and column_index_matches)", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:09.224589Z", "completed_at": "2025-06-03T19:50:09.438190Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:09.438514Z", "completed_at": "2025-06-03T19:50:09.438522Z"}], "thread_id": "Thread-3", "execution_time": 0.21583795547485352, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_expectations_expect_column_to_exist_input_layer__medical_claim_procedure_code_12.596c3db871", "compiled": true, "compiled_code": "\n\n    with test_data as (\n\n        select\n            cast('PROCEDURE_CODE_12' as TEXT) as column_name,\n            104 as matching_column_index,\n            True as column_index_matches\n\n    )\n    select *\n    from test_data\n    where\n        not(matching_column_index >= 0 and column_index_matches)", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:09.333263Z", "completed_at": "2025-06-03T19:50:09.468723Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:09.475587Z", "completed_at": "2025-06-03T19:50:09.475595Z"}], "thread_id": "Thread-1", "execution_time": 0.24138998985290527, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_expectations_expect_column_to_exist_input_layer__medical_claim_procedure_code_14.a0b966b75c", "compiled": true, "compiled_code": "\n\n    with test_data as (\n\n        select\n            cast('PROCEDURE_CODE_14' as TEXT) as column_name,\n            106 as matching_column_index,\n            True as column_index_matches\n\n    )\n    select *\n    from test_data\n    where\n        not(matching_column_index >= 0 and column_index_matches)", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:09.352236Z", "completed_at": "2025-06-03T19:50:09.483480Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:09.487224Z", "completed_at": "2025-06-03T19:50:09.487229Z"}], "thread_id": "Thread-2", "execution_time": 0.13547587394714355, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_expectations_expect_column_to_exist_input_layer__medical_claim_procedure_code_15.efec8d7882", "compiled": true, "compiled_code": "\n\n    with test_data as (\n\n        select\n            cast('PROCEDURE_CODE_15' as TEXT) as column_name,\n            107 as matching_column_index,\n            True as column_index_matches\n\n    )\n    select *\n    from test_data\n    where\n        not(matching_column_index >= 0 and column_index_matches)", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:09.234673Z", "completed_at": "2025-06-03T19:50:09.487022Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:09.487843Z", "completed_at": "2025-06-03T19:50:09.487847Z"}], "thread_id": "Thread-4", "execution_time": 0.25463128089904785, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_expectations_expect_column_to_exist_input_layer__medical_claim_procedure_code_13.6f2e8caa95", "compiled": true, "compiled_code": "\n\n    with test_data as (\n\n        select\n            cast('PROCEDURE_CODE_13' as TEXT) as column_name,\n            105 as matching_column_index,\n            True as column_index_matches\n\n    )\n    select *\n    from test_data\n    where\n        not(matching_column_index >= 0 and column_index_matches)", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:09.440043Z", "completed_at": "2025-06-03T19:50:09.596926Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:09.597255Z", "completed_at": "2025-06-03T19:50:09.597263Z"}], "thread_id": "Thread-3", "execution_time": 0.1579740047454834, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_expectations_expect_column_to_exist_input_layer__medical_claim_procedure_code_16.6c7a9e4ff3", "compiled": true, "compiled_code": "\n\n    with test_data as (\n\n        select\n            cast('PROCEDURE_CODE_16' as TEXT) as column_name,\n            108 as matching_column_index,\n            True as column_index_matches\n\n    )\n    select *\n    from test_data\n    where\n        not(matching_column_index >= 0 and column_index_matches)", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:09.478346Z", "completed_at": "2025-06-03T19:50:09.639562Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:09.639908Z", "completed_at": "2025-06-03T19:50:09.639917Z"}], "thread_id": "Thread-1", "execution_time": 0.16219091415405273, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_expectations_expect_column_to_exist_input_layer__medical_claim_procedure_code_17.8f879d2d43", "compiled": true, "compiled_code": "\n\n    with test_data as (\n\n        select\n            cast('PROCEDURE_CODE_17' as TEXT) as column_name,\n            109 as matching_column_index,\n            True as column_index_matches\n\n    )\n    select *\n    from test_data\n    where\n        not(matching_column_index >= 0 and column_index_matches)", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:09.498853Z", "completed_at": "2025-06-03T19:50:09.640976Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:09.641650Z", "completed_at": "2025-06-03T19:50:09.641662Z"}], "thread_id": "Thread-4", "execution_time": 0.1524050235748291, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_expectations_expect_column_to_exist_input_layer__medical_claim_procedure_code_19.17781aa240", "compiled": true, "compiled_code": "\n\n    with test_data as (\n\n        select\n            cast('PROCEDURE_CODE_19' as TEXT) as column_name,\n            111 as matching_column_index,\n            True as column_index_matches\n\n    )\n    select *\n    from test_data\n    where\n        not(matching_column_index >= 0 and column_index_matches)", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:09.490269Z", "completed_at": "2025-06-03T19:50:09.641179Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:09.642033Z", "completed_at": "2025-06-03T19:50:09.642038Z"}], "thread_id": "Thread-2", "execution_time": 0.15318512916564941, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_expectations_expect_column_to_exist_input_layer__medical_claim_procedure_code_18.be1be35dbf", "compiled": true, "compiled_code": "\n\n    with test_data as (\n\n        select\n            cast('PROCEDURE_CODE_18' as TEXT) as column_name,\n            110 as matching_column_index,\n            True as column_index_matches\n\n    )\n    select *\n    from test_data\n    where\n        not(matching_column_index >= 0 and column_index_matches)", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:09.598810Z", "completed_at": "2025-06-03T19:50:09.787995Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:09.788422Z", "completed_at": "2025-06-03T19:50:09.788432Z"}], "thread_id": "Thread-3", "execution_time": 0.19042110443115234, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_expectations_expect_column_to_exist_input_layer__medical_claim_procedure_code_2.5227b52e1e", "compiled": true, "compiled_code": "\n\n    with test_data as (\n\n        select\n            cast('PROCEDURE_CODE_2' as TEXT) as column_name,\n            94 as matching_column_index,\n            True as column_index_matches\n\n    )\n    select *\n    from test_data\n    where\n        not(matching_column_index >= 0 and column_index_matches)", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:09.663750Z", "completed_at": "2025-06-03T19:50:09.848705Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:09.850371Z", "completed_at": "2025-06-03T19:50:09.850379Z"}], "thread_id": "Thread-2", "execution_time": 0.19776296615600586, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_expectations_expect_column_to_exist_input_layer__medical_claim_procedure_code_22.68f00f2e5e", "compiled": true, "compiled_code": "\n\n    with test_data as (\n\n        select\n            cast('PROCEDURE_CODE_22' as TEXT) as column_name,\n            114 as matching_column_index,\n            True as column_index_matches\n\n    )\n    select *\n    from test_data\n    where\n        not(matching_column_index >= 0 and column_index_matches)", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:09.642424Z", "completed_at": "2025-06-03T19:50:09.851485Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:09.852038Z", "completed_at": "2025-06-03T19:50:09.852043Z"}], "thread_id": "Thread-1", "execution_time": 0.21139812469482422, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_expectations_expect_column_to_exist_input_layer__medical_claim_procedure_code_20.28c4a79df0", "compiled": true, "compiled_code": "\n\n    with test_data as (\n\n        select\n            cast('PROCEDURE_CODE_20' as TEXT) as column_name,\n            112 as matching_column_index,\n            True as column_index_matches\n\n    )\n    select *\n    from test_data\n    where\n        not(matching_column_index >= 0 and column_index_matches)", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:09.653664Z", "completed_at": "2025-06-03T19:50:09.852394Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:09.862055Z", "completed_at": "2025-06-03T19:50:09.862063Z"}], "thread_id": "Thread-4", "execution_time": 0.20975112915039062, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_expectations_expect_column_to_exist_input_layer__medical_claim_procedure_code_21.e4f05e42cd", "compiled": true, "compiled_code": "\n\n    with test_data as (\n\n        select\n            cast('PROCEDURE_CODE_21' as TEXT) as column_name,\n            113 as matching_column_index,\n            True as column_index_matches\n\n    )\n    select *\n    from test_data\n    where\n        not(matching_column_index >= 0 and column_index_matches)", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:09.790315Z", "completed_at": "2025-06-03T19:50:10.014008Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:10.014700Z", "completed_at": "2025-06-03T19:50:10.014710Z"}], "thread_id": "Thread-3", "execution_time": 0.2253413200378418, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_expectations_expect_column_to_exist_input_layer__medical_claim_procedure_code_23.09b689bdd1", "compiled": true, "compiled_code": "\n\n    with test_data as (\n\n        select\n            cast('PROCEDURE_CODE_23' as TEXT) as column_name,\n            115 as matching_column_index,\n            True as column_index_matches\n\n    )\n    select *\n    from test_data\n    where\n        not(matching_column_index >= 0 and column_index_matches)", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:09.864513Z", "completed_at": "2025-06-03T19:50:10.212841Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:10.213229Z", "completed_at": "2025-06-03T19:50:10.213238Z"}], "thread_id": "Thread-1", "execution_time": 0.3505580425262451, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_expectations_expect_column_to_exist_input_layer__medical_claim_procedure_code_25.1e274f0904", "compiled": true, "compiled_code": "\n\n    with test_data as (\n\n        select\n            cast('PROCEDURE_CODE_25' as TEXT) as column_name,\n            117 as matching_column_index,\n            True as column_index_matches\n\n    )\n    select *\n    from test_data\n    where\n        not(matching_column_index >= 0 and column_index_matches)", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:09.986009Z", "completed_at": "2025-06-03T19:50:10.213876Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:10.216972Z", "completed_at": "2025-06-03T19:50:10.217015Z"}], "thread_id": "Thread-4", "execution_time": 0.35362887382507324, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_expectations_expect_column_to_exist_input_layer__medical_claim_procedure_code_3.e5f4e6cfeb", "compiled": true, "compiled_code": "\n\n    with test_data as (\n\n        select\n            cast('PROCEDURE_CODE_3' as TEXT) as column_name,\n            95 as matching_column_index,\n            True as column_index_matches\n\n    )\n    select *\n    from test_data\n    where\n        not(matching_column_index >= 0 and column_index_matches)", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:10.017672Z", "completed_at": "2025-06-03T19:50:10.214291Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:10.218007Z", "completed_at": "2025-06-03T19:50:10.218014Z"}], "thread_id": "Thread-3", "execution_time": 0.20208311080932617, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_expectations_expect_column_to_exist_input_layer__medical_claim_procedure_code_4.a93f9afe50", "compiled": true, "compiled_code": "\n\n    with test_data as (\n\n        select\n            cast('PROCEDURE_CODE_4' as TEXT) as column_name,\n            96 as matching_column_index,\n            True as column_index_matches\n\n    )\n    select *\n    from test_data\n    where\n        not(matching_column_index >= 0 and column_index_matches)", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:09.852616Z", "completed_at": "2025-06-03T19:50:10.214657Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:10.218809Z", "completed_at": "2025-06-03T19:50:10.218827Z"}], "thread_id": "Thread-2", "execution_time": 0.3678882122039795, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_expectations_expect_column_to_exist_input_layer__medical_claim_procedure_code_24.f285411414", "compiled": true, "compiled_code": "\n\n    with test_data as (\n\n        select\n            cast('PROCEDURE_CODE_24' as TEXT) as column_name,\n            116 as matching_column_index,\n            True as column_index_matches\n\n    )\n    select *\n    from test_data\n    where\n        not(matching_column_index >= 0 and column_index_matches)", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:10.227465Z", "completed_at": "2025-06-03T19:50:10.453972Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:10.465198Z", "completed_at": "2025-06-03T19:50:10.465217Z"}], "thread_id": "Thread-1", "execution_time": 0.24542975425720215, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_expectations_expect_column_to_exist_input_layer__medical_claim_procedure_code_5.f325b7f3b5", "compiled": true, "compiled_code": "\n\n    with test_data as (\n\n        select\n            cast('PROCEDURE_CODE_5' as TEXT) as column_name,\n            97 as matching_column_index,\n            True as column_index_matches\n\n    )\n    select *\n    from test_data\n    where\n        not(matching_column_index >= 0 and column_index_matches)", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:10.285218Z", "completed_at": "2025-06-03T19:50:10.455046Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:10.474142Z", "completed_at": "2025-06-03T19:50:10.474167Z"}], "thread_id": "Thread-4", "execution_time": 0.22136878967285156, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_expectations_expect_column_to_exist_input_layer__medical_claim_procedure_code_6.526ea0e95d", "compiled": true, "compiled_code": "\n\n    with test_data as (\n\n        select\n            cast('PROCEDURE_CODE_6' as TEXT) as column_name,\n            98 as matching_column_index,\n            True as column_index_matches\n\n    )\n    select *\n    from test_data\n    where\n        not(matching_column_index >= 0 and column_index_matches)", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:10.259698Z", "completed_at": "2025-06-03T19:50:10.495094Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:10.495560Z", "completed_at": "2025-06-03T19:50:10.495572Z"}], "thread_id": "Thread-3", "execution_time": 0.2572212219238281, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_expectations_expect_column_to_exist_input_layer__medical_claim_procedure_code_7.22b18da13d", "compiled": true, "compiled_code": "\n\n    with test_data as (\n\n        select\n            cast('PROCEDURE_CODE_7' as TEXT) as column_name,\n            99 as matching_column_index,\n            True as column_index_matches\n\n    )\n    select *\n    from test_data\n    where\n        not(matching_column_index >= 0 and column_index_matches)", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:10.266712Z", "completed_at": "2025-06-03T19:50:10.496660Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:10.517630Z", "completed_at": "2025-06-03T19:50:10.517641Z"}], "thread_id": "Thread-2", "execution_time": 0.268143892288208, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_expectations_expect_column_to_exist_input_layer__medical_claim_procedure_code_8.fe42d1d8aa", "compiled": true, "compiled_code": "\n\n    with test_data as (\n\n        select\n            cast('PROCEDURE_CODE_8' as TEXT) as column_name,\n            100 as matching_column_index,\n            True as column_index_matches\n\n    )\n    select *\n    from test_data\n    where\n        not(matching_column_index >= 0 and column_index_matches)", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:10.530999Z", "completed_at": "2025-06-03T19:50:10.717702Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:10.730273Z", "completed_at": "2025-06-03T19:50:10.730304Z"}], "thread_id": "Thread-1", "execution_time": 0.254910945892334, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_expectations_expect_column_to_exist_input_layer__medical_claim_procedure_code_9.195cd74c30", "compiled": true, "compiled_code": "\n\n    with test_data as (\n\n        select\n            cast('PROCEDURE_CODE_9' as TEXT) as column_name,\n            101 as matching_column_index,\n            True as column_index_matches\n\n    )\n    select *\n    from test_data\n    where\n        not(matching_column_index >= 0 and column_index_matches)", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:10.519578Z", "completed_at": "2025-06-03T19:50:10.731287Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:10.734936Z", "completed_at": "2025-06-03T19:50:10.734946Z"}], "thread_id": "Thread-4", "execution_time": 0.24703121185302734, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_expectations_expect_column_to_exist_input_layer__medical_claim_procedure_code_type.74a1c8732e", "compiled": true, "compiled_code": "\n\n    with test_data as (\n\n        select\n            cast('PROCEDURE_CODE_TYPE' as TEXT) as column_name,\n            92 as matching_column_index,\n            True as column_index_matches\n\n    )\n    select *\n    from test_data\n    where\n        not(matching_column_index >= 0 and column_index_matches)", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:10.557601Z", "completed_at": "2025-06-03T19:50:10.732794Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:10.735910Z", "completed_at": "2025-06-03T19:50:10.735916Z"}], "thread_id": "Thread-2", "execution_time": 0.1820511817932129, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_expectations_expect_column_to_exist_input_layer__medical_claim_procedure_date_10.bc8be9f625", "compiled": true, "compiled_code": "\n\n    with test_data as (\n\n        select\n            cast('PROCEDURE_DATE_10' as TEXT) as column_name,\n            127 as matching_column_index,\n            True as column_index_matches\n\n    )\n    select *\n    from test_data\n    where\n        not(matching_column_index >= 0 and column_index_matches)", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:10.497152Z", "completed_at": "2025-06-03T19:50:10.735571Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:10.739082Z", "completed_at": "2025-06-03T19:50:10.739105Z"}], "thread_id": "Thread-3", "execution_time": 0.24295902252197266, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_expectations_expect_column_to_exist_input_layer__medical_claim_procedure_date_1.b1bf844119", "compiled": true, "compiled_code": "\n\n    with test_data as (\n\n        select\n            cast('PROCEDURE_DATE_1' as TEXT) as column_name,\n            118 as matching_column_index,\n            True as column_index_matches\n\n    )\n    select *\n    from test_data\n    where\n        not(matching_column_index >= 0 and column_index_matches)", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:10.760764Z", "completed_at": "2025-06-03T19:50:10.973763Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:10.996447Z", "completed_at": "2025-06-03T19:50:10.996485Z"}], "thread_id": "Thread-4", "execution_time": 0.2553527355194092, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_expectations_expect_column_to_exist_input_layer__medical_claim_procedure_date_12.2258293569", "compiled": true, "compiled_code": "\n\n    with test_data as (\n\n        select\n            cast('PROCEDURE_DATE_12' as TEXT) as column_name,\n            129 as matching_column_index,\n            True as column_index_matches\n\n    )\n    select *\n    from test_data\n    where\n        not(matching_column_index >= 0 and column_index_matches)", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:10.743323Z", "completed_at": "2025-06-03T19:50:10.994798Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:10.999002Z", "completed_at": "2025-06-03T19:50:10.999017Z"}], "thread_id": "Thread-1", "execution_time": 0.26244378089904785, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_expectations_expect_column_to_exist_input_layer__medical_claim_procedure_date_11.015958a3ff", "compiled": true, "compiled_code": "\n\n    with test_data as (\n\n        select\n            cast('PROCEDURE_DATE_11' as TEXT) as column_name,\n            128 as matching_column_index,\n            True as column_index_matches\n\n    )\n    select *\n    from test_data\n    where\n        not(matching_column_index >= 0 and column_index_matches)", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:10.778652Z", "completed_at": "2025-06-03T19:50:10.995777Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:11.001222Z", "completed_at": "2025-06-03T19:50:11.001236Z"}], "thread_id": "Thread-2", "execution_time": 0.25853800773620605, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_expectations_expect_column_to_exist_input_layer__medical_claim_procedure_date_13.9040ca1418", "compiled": true, "compiled_code": "\n\n    with test_data as (\n\n        select\n            cast('PROCEDURE_DATE_13' as TEXT) as column_name,\n            130 as matching_column_index,\n            True as column_index_matches\n\n    )\n    select *\n    from test_data\n    where\n        not(matching_column_index >= 0 and column_index_matches)", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:10.795140Z", "completed_at": "2025-06-03T19:50:11.003036Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:11.010564Z", "completed_at": "2025-06-03T19:50:11.010577Z"}], "thread_id": "Thread-3", "execution_time": 0.2516648769378662, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_expectations_expect_column_to_exist_input_layer__medical_claim_procedure_date_14.c3b2357442", "compiled": true, "compiled_code": "\n\n    with test_data as (\n\n        select\n            cast('PROCEDURE_DATE_14' as TEXT) as column_name,\n            131 as matching_column_index,\n            True as column_index_matches\n\n    )\n    select *\n    from test_data\n    where\n        not(matching_column_index >= 0 and column_index_matches)", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:11.323801Z", "completed_at": "2025-06-03T19:50:11.459305Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:11.459744Z", "completed_at": "2025-06-03T19:50:11.459754Z"}], "thread_id": "Thread-4", "execution_time": 0.44483399391174316, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_expectations_expect_column_to_exist_input_layer__medical_claim_procedure_date_15.2b8bbaef2b", "compiled": true, "compiled_code": "\n\n    with test_data as (\n\n        select\n            cast('PROCEDURE_DATE_15' as TEXT) as column_name,\n            132 as matching_column_index,\n            True as column_index_matches\n\n    )\n    select *\n    from test_data\n    where\n        not(matching_column_index >= 0 and column_index_matches)", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:11.332957Z", "completed_at": "2025-06-03T19:50:11.488472Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:11.497918Z", "completed_at": "2025-06-03T19:50:11.497927Z"}], "thread_id": "Thread-3", "execution_time": 0.1852858066558838, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_expectations_expect_column_to_exist_input_layer__medical_claim_procedure_date_18.07a4878c3c", "compiled": true, "compiled_code": "\n\n    with test_data as (\n\n        select\n            cast('PROCEDURE_DATE_18' as TEXT) as column_name,\n            135 as matching_column_index,\n            True as column_index_matches\n\n    )\n    select *\n    from test_data\n    where\n        not(matching_column_index >= 0 and column_index_matches)", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:11.023253Z", "completed_at": "2025-06-03T19:50:11.512860Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:11.517496Z", "completed_at": "2025-06-03T19:50:11.517505Z"}], "thread_id": "Thread-2", "execution_time": 0.5090560913085938, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_expectations_expect_column_to_exist_input_layer__medical_claim_procedure_date_17.0357e121e0", "compiled": true, "compiled_code": "\n\n    with test_data as (\n\n        select\n            cast('PROCEDURE_DATE_17' as TEXT) as column_name,\n            134 as matching_column_index,\n            True as column_index_matches\n\n    )\n    select *\n    from test_data\n    where\n        not(matching_column_index >= 0 and column_index_matches)", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:11.315243Z", "completed_at": "2025-06-03T19:50:11.513171Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:11.517978Z", "completed_at": "2025-06-03T19:50:11.517982Z"}], "thread_id": "Thread-1", "execution_time": 0.5056607723236084, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_expectations_expect_column_to_exist_input_layer__medical_claim_procedure_date_16.38c90db44e", "compiled": true, "compiled_code": "\n\n    with test_data as (\n\n        select\n            cast('PROCEDURE_DATE_16' as TEXT) as column_name,\n            133 as matching_column_index,\n            True as column_index_matches\n\n    )\n    select *\n    from test_data\n    where\n        not(matching_column_index >= 0 and column_index_matches)", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:11.461694Z", "completed_at": "2025-06-03T19:50:11.645989Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:11.646365Z", "completed_at": "2025-06-03T19:50:11.646374Z"}], "thread_id": "Thread-4", "execution_time": 0.18559789657592773, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_expectations_expect_column_to_exist_input_layer__medical_claim_procedure_date_19.a971557c8e", "compiled": true, "compiled_code": "\n\n    with test_data as (\n\n        select\n            cast('PROCEDURE_DATE_19' as TEXT) as column_name,\n            136 as matching_column_index,\n            True as column_index_matches\n\n    )\n    select *\n    from test_data\n    where\n        not(matching_column_index >= 0 and column_index_matches)", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:11.507685Z", "completed_at": "2025-06-03T19:50:11.689980Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:11.690323Z", "completed_at": "2025-06-03T19:50:11.690333Z"}], "thread_id": "Thread-3", "execution_time": 0.18329906463623047, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_expectations_expect_column_to_exist_input_layer__medical_claim_procedure_date_2.274be89e94", "compiled": true, "compiled_code": "\n\n    with test_data as (\n\n        select\n            cast('PROCEDURE_DATE_2' as TEXT) as column_name,\n            119 as matching_column_index,\n            True as column_index_matches\n\n    )\n    select *\n    from test_data\n    where\n        not(matching_column_index >= 0 and column_index_matches)", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:11.529704Z", "completed_at": "2025-06-03T19:50:11.691616Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:11.701785Z", "completed_at": "2025-06-03T19:50:11.701794Z"}], "thread_id": "Thread-1", "execution_time": 0.18203020095825195, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_expectations_expect_column_to_exist_input_layer__medical_claim_procedure_date_21.0a095ff6b1", "compiled": true, "compiled_code": "\n\n    with test_data as (\n\n        select\n            cast('PROCEDURE_DATE_21' as TEXT) as column_name,\n            138 as matching_column_index,\n            True as column_index_matches\n\n    )\n    select *\n    from test_data\n    where\n        not(matching_column_index >= 0 and column_index_matches)", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:11.520923Z", "completed_at": "2025-06-03T19:50:11.691875Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:11.702309Z", "completed_at": "2025-06-03T19:50:11.702315Z"}], "thread_id": "Thread-2", "execution_time": 0.18303489685058594, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_expectations_expect_column_to_exist_input_layer__medical_claim_procedure_date_20.498cf977be", "compiled": true, "compiled_code": "\n\n    with test_data as (\n\n        select\n            cast('PROCEDURE_DATE_20' as TEXT) as column_name,\n            137 as matching_column_index,\n            True as column_index_matches\n\n    )\n    select *\n    from test_data\n    where\n        not(matching_column_index >= 0 and column_index_matches)", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:11.648185Z", "completed_at": "2025-06-03T19:50:11.826518Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:11.826891Z", "completed_at": "2025-06-03T19:50:11.826899Z"}], "thread_id": "Thread-4", "execution_time": 0.17962002754211426, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_expectations_expect_column_to_exist_input_layer__medical_claim_procedure_date_22.b6f03bd11f", "compiled": true, "compiled_code": "\n\n    with test_data as (\n\n        select\n            cast('PROCEDURE_DATE_22' as TEXT) as column_name,\n            139 as matching_column_index,\n            True as column_index_matches\n\n    )\n    select *\n    from test_data\n    where\n        not(matching_column_index >= 0 and column_index_matches)", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:11.705227Z", "completed_at": "2025-06-03T19:50:11.858567Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:11.859044Z", "completed_at": "2025-06-03T19:50:11.859051Z"}], "thread_id": "Thread-1", "execution_time": 0.15539097785949707, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_expectations_expect_column_to_exist_input_layer__medical_claim_procedure_date_24.4fef0c7dbf", "compiled": true, "compiled_code": "\n\n    with test_data as (\n\n        select\n            cast('PROCEDURE_DATE_24' as TEXT) as column_name,\n            141 as matching_column_index,\n            True as column_index_matches\n\n    )\n    select *\n    from test_data\n    where\n        not(matching_column_index >= 0 and column_index_matches)", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:11.716526Z", "completed_at": "2025-06-03T19:50:11.858813Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:11.859454Z", "completed_at": "2025-06-03T19:50:11.859458Z"}], "thread_id": "Thread-2", "execution_time": 0.15535879135131836, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_expectations_expect_column_to_exist_input_layer__medical_claim_procedure_date_25.24ed1df43e", "compiled": true, "compiled_code": "\n\n    with test_data as (\n\n        select\n            cast('PROCEDURE_DATE_25' as TEXT) as column_name,\n            142 as matching_column_index,\n            True as column_index_matches\n\n    )\n    select *\n    from test_data\n    where\n        not(matching_column_index >= 0 and column_index_matches)", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:11.692115Z", "completed_at": "2025-06-03T19:50:11.988923Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:11.989243Z", "completed_at": "2025-06-03T19:50:11.989250Z"}], "thread_id": "Thread-3", "execution_time": 0.29822516441345215, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_expectations_expect_column_to_exist_input_layer__medical_claim_procedure_date_23.126b642690", "compiled": true, "compiled_code": "\n\n    with test_data as (\n\n        select\n            cast('PROCEDURE_DATE_23' as TEXT) as column_name,\n            140 as matching_column_index,\n            True as column_index_matches\n\n    )\n    select *\n    from test_data\n    where\n        not(matching_column_index >= 0 and column_index_matches)", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:11.829427Z", "completed_at": "2025-06-03T19:50:12.029417Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:12.029739Z", "completed_at": "2025-06-03T19:50:12.029746Z"}], "thread_id": "Thread-4", "execution_time": 0.20167279243469238, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_expectations_expect_column_to_exist_input_layer__medical_claim_procedure_date_3.9fbb861c12", "compiled": true, "compiled_code": "\n\n    with test_data as (\n\n        select\n            cast('PROCEDURE_DATE_3' as TEXT) as column_name,\n            120 as matching_column_index,\n            True as column_index_matches\n\n    )\n    select *\n    from test_data\n    where\n        not(matching_column_index >= 0 and column_index_matches)", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:11.870252Z", "completed_at": "2025-06-03T19:50:12.140026Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:12.141045Z", "completed_at": "2025-06-03T19:50:12.141053Z"}], "thread_id": "Thread-2", "execution_time": 0.28024816513061523, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_expectations_expect_column_to_exist_input_layer__medical_claim_procedure_date_5.b01c59dbad", "compiled": true, "compiled_code": "\n\n    with test_data as (\n\n        select\n            cast('PROCEDURE_DATE_5' as TEXT) as column_name,\n            122 as matching_column_index,\n            True as column_index_matches\n\n    )\n    select *\n    from test_data\n    where\n        not(matching_column_index >= 0 and column_index_matches)", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:11.861700Z", "completed_at": "2025-06-03T19:50:12.140776Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:12.141555Z", "completed_at": "2025-06-03T19:50:12.141560Z"}], "thread_id": "Thread-1", "execution_time": 0.2810177803039551, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_expectations_expect_column_to_exist_input_layer__medical_claim_procedure_date_4.ff50456b8c", "compiled": true, "compiled_code": "\n\n    with test_data as (\n\n        select\n            cast('PROCEDURE_DATE_4' as TEXT) as column_name,\n            121 as matching_column_index,\n            True as column_index_matches\n\n    )\n    select *\n    from test_data\n    where\n        not(matching_column_index >= 0 and column_index_matches)", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:11.990789Z", "completed_at": "2025-06-03T19:50:12.143186Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:12.152209Z", "completed_at": "2025-06-03T19:50:12.152218Z"}], "thread_id": "Thread-3", "execution_time": 0.16228604316711426, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_expectations_expect_column_to_exist_input_layer__medical_claim_procedure_date_6.9d20c90fbb", "compiled": true, "compiled_code": "\n\n    with test_data as (\n\n        select\n            cast('PROCEDURE_DATE_6' as TEXT) as column_name,\n            123 as matching_column_index,\n            True as column_index_matches\n\n    )\n    select *\n    from test_data\n    where\n        not(matching_column_index >= 0 and column_index_matches)", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:12.031170Z", "completed_at": "2025-06-03T19:50:12.154061Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:12.175442Z", "completed_at": "2025-06-03T19:50:12.175452Z"}], "thread_id": "Thread-4", "execution_time": 0.1449751853942871, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_expectations_expect_column_to_exist_input_layer__medical_claim_procedure_date_7.39ec916ad9", "compiled": true, "compiled_code": "\n\n    with test_data as (\n\n        select\n            cast('PROCEDURE_DATE_7' as TEXT) as column_name,\n            124 as matching_column_index,\n            True as column_index_matches\n\n    )\n    select *\n    from test_data\n    where\n        not(matching_column_index >= 0 and column_index_matches)", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:12.164792Z", "completed_at": "2025-06-03T19:50:12.319224Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:12.335508Z", "completed_at": "2025-06-03T19:50:12.335518Z"}], "thread_id": "Thread-1", "execution_time": 0.1828291416168213, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_expectations_expect_column_to_exist_input_layer__medical_claim_procedure_date_9.3b7bba758f", "compiled": true, "compiled_code": "\n\n    with test_data as (\n\n        select\n            cast('PROCEDURE_DATE_9' as TEXT) as column_name,\n            126 as matching_column_index,\n            True as column_index_matches\n\n    )\n    select *\n    from test_data\n    where\n        not(matching_column_index >= 0 and column_index_matches)", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:12.177515Z", "completed_at": "2025-06-03T19:50:12.344246Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:12.345181Z", "completed_at": "2025-06-03T19:50:12.345188Z"}], "thread_id": "Thread-3", "execution_time": 0.1808149814605713, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_expectations_expect_column_to_exist_input_layer__medical_claim_rendering_npi.cef753280b", "compiled": true, "compiled_code": "\n\n    with test_data as (\n\n        select\n            cast('RENDERING_NPI' as TEXT) as column_name,\n            28 as matching_column_index,\n            True as column_index_matches\n\n    )\n    select *\n    from test_data\n    where\n        not(matching_column_index >= 0 and column_index_matches)", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:12.189906Z", "completed_at": "2025-06-03T19:50:12.344919Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:12.346107Z", "completed_at": "2025-06-03T19:50:12.346112Z"}], "thread_id": "Thread-4", "execution_time": 0.1583099365234375, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_expectations_expect_column_to_exist_input_layer__medical_claim_rendering_tin.c67dc6d21b", "compiled": true, "compiled_code": "\n\n    with test_data as (\n\n        select\n            cast('RENDERING_TIN' as TEXT) as column_name,\n            29 as matching_column_index,\n            True as column_index_matches\n\n    )\n    select *\n    from test_data\n    where\n        not(matching_column_index >= 0 and column_index_matches)", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:12.154286Z", "completed_at": "2025-06-03T19:50:12.345900Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:12.357352Z", "completed_at": "2025-06-03T19:50:12.357363Z"}], "thread_id": "Thread-2", "execution_time": 0.2055957317352295, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_expectations_expect_column_to_exist_input_layer__medical_claim_procedure_date_8.e326099996", "compiled": true, "compiled_code": "\n\n    with test_data as (\n\n        select\n            cast('PROCEDURE_DATE_8' as TEXT) as column_name,\n            125 as matching_column_index,\n            True as column_index_matches\n\n    )\n    select *\n    from test_data\n    where\n        not(matching_column_index >= 0 and column_index_matches)", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:12.381759Z", "completed_at": "2025-06-03T19:50:12.392373Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:12.392852Z", "completed_at": "2025-06-03T19:50:12.392861Z"}], "thread_id": "Thread-2", "execution_time": 0.033049821853637695, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_expectations_expect_column_unique_value_count_to_be_between_input_layer__medical_claim_bill_type_code__claim_id__1__0__False.bdedc0064c", "compiled": true, "compiled_code": "\n\n\n\n\n    with grouped_expression as (\n    select\n        \n        claim_id as col_1,\n        \n        \n    \n  \n( 1=1 and count(distinct bill_type_code) >= 0 and count(distinct bill_type_code) <= 1\n)\n as expression\n\n\n    from tuva.input_layer.input_layer__medical_claim\n    \n    group by\n    claim_id\n    \n    \n\n),\nvalidation_errors as (\n\n    select\n        *\n    from\n        grouped_expression\n    where\n        not(expression = true)\n\n)\n\nselect *\nfrom validation_errors\n\n\n\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:12.394457Z", "completed_at": "2025-06-03T19:50:12.402728Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:12.403020Z", "completed_at": "2025-06-03T19:50:12.403027Z"}], "thread_id": "Thread-2", "execution_time": 0.009226083755493164, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_expectations_expect_column_unique_value_count_to_be_between_input_layer__medical_claim_claim_end_date__claim_id__1__0__False.d591b3a770", "compiled": true, "compiled_code": "\n\n\n\n\n    with grouped_expression as (\n    select\n        \n        claim_id as col_1,\n        \n        \n    \n  \n( 1=1 and count(distinct claim_end_date) >= 0 and count(distinct claim_end_date) <= 1\n)\n as expression\n\n\n    from tuva.input_layer.input_layer__medical_claim\n    \n    group by\n    claim_id\n    \n    \n\n),\nvalidation_errors as (\n\n    select\n        *\n    from\n        grouped_expression\n    where\n        not(expression = true)\n\n)\n\nselect *\nfrom validation_errors\n\n\n\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:12.404446Z", "completed_at": "2025-06-03T19:50:12.411586Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:12.411887Z", "completed_at": "2025-06-03T19:50:12.411895Z"}], "thread_id": "Thread-2", "execution_time": 0.008131742477416992, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_expectations_expect_column_unique_value_count_to_be_between_input_layer__medical_claim_claim_start_date__claim_id__1__0__False.0345cd771e", "compiled": true, "compiled_code": "\n\n\n\n\n    with grouped_expression as (\n    select\n        \n        claim_id as col_1,\n        \n        \n    \n  \n( 1=1 and count(distinct claim_start_date) >= 0 and count(distinct claim_start_date) <= 1\n)\n as expression\n\n\n    from tuva.input_layer.input_layer__medical_claim\n    \n    group by\n    claim_id\n    \n    \n\n),\nvalidation_errors as (\n\n    select\n        *\n    from\n        grouped_expression\n    where\n        not(expression = true)\n\n)\n\nselect *\nfrom validation_errors\n\n\n\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:12.413290Z", "completed_at": "2025-06-03T19:50:12.420592Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:12.421061Z", "completed_at": "2025-06-03T19:50:12.421071Z"}], "thread_id": "Thread-2", "execution_time": 0.008428096771240234, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_expectations_expect_column_unique_value_count_to_be_between_input_layer__medical_claim_claim_type__claim_id__1__0__False.5a79e4b19f", "compiled": true, "compiled_code": "\n\n\n\n\n    with grouped_expression as (\n    select\n        \n        claim_id as col_1,\n        \n        \n    \n  \n( 1=1 and count(distinct claim_type) >= 0 and count(distinct claim_type) <= 1\n)\n as expression\n\n\n    from tuva.input_layer.input_layer__medical_claim\n    \n    group by\n    claim_id\n    \n    \n\n),\nvalidation_errors as (\n\n    select\n        *\n    from\n        grouped_expression\n    where\n        not(expression = true)\n\n)\n\nselect *\nfrom validation_errors\n\n\n\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:12.422852Z", "completed_at": "2025-06-03T19:50:12.430528Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:12.430886Z", "completed_at": "2025-06-03T19:50:12.430895Z"}], "thread_id": "Thread-2", "execution_time": 0.008962869644165039, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_expectations_expect_column_unique_value_count_to_be_between_input_layer__medical_claim_person_id__claim_id__1__1__False.9de140c5fe", "compiled": true, "compiled_code": "\n\n\n\n\n    with grouped_expression as (\n    select\n        \n        claim_id as col_1,\n        \n        \n    \n  \n( 1=1 and count(distinct person_id) >= 1 and count(distinct person_id) <= 1\n)\n as expression\n\n\n    from tuva.input_layer.input_layer__medical_claim\n    \n    group by\n    claim_id\n    \n    \n\n),\nvalidation_errors as (\n\n    select\n        *\n    from\n        grouped_expression\n    where\n        not(expression = true)\n\n)\n\nselect *\nfrom validation_errors\n\n\n\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:12.432769Z", "completed_at": "2025-06-03T19:50:12.440495Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:12.440816Z", "completed_at": "2025-06-03T19:50:12.440825Z"}], "thread_id": "Thread-2", "execution_time": 0.009019136428833008, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_expectations_expect_column_unique_value_count_to_be_between_input_layer__medical_claim_revenue_center_code__data_source__1000__5__claim_type_institutional___False.fbf40791d4", "compiled": true, "compiled_code": "\n\n\n\n\n    with grouped_expression as (\n    select\n        \n        data_source as col_1,\n        \n        \n    \n  \n( 1=1 and count(distinct revenue_center_code) >= 5 and count(distinct revenue_center_code) <= 1000\n)\n as expression\n\n\n    from tuva.input_layer.input_layer__medical_claim\n    where\n        claim_type = 'institutional'\n    \n    \n    group by\n    data_source\n    \n    \n\n),\nvalidation_errors as (\n\n    select\n        *\n    from\n        grouped_expression\n    where\n        not(expression = true)\n\n)\n\nselect *\nfrom validation_errors\n\n\n\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:12.442038Z", "completed_at": "2025-06-03T19:50:12.451271Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:12.451847Z", "completed_at": "2025-06-03T19:50:12.451859Z"}], "thread_id": "Thread-2", "execution_time": 0.010516166687011719, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_expectations_expect_column_value_lengths_to_be_between_input_layer__medical_claim_bill_type_code__4__3.13dbc15626", "compiled": true, "compiled_code": "\n\n\n\n\n\n    with grouped_expression as (\n    select\n        \n        \n    \n  \n( 1=1 and length( bill_type_code ) >= 3 and length( bill_type_code ) <= 4\n)\n as expression\n\n\n    from tuva.input_layer.input_layer__medical_claim\n    \n\n),\nvalidation_errors as (\n\n    select\n        *\n    from\n        grouped_expression\n    where\n        not(expression = true)\n\n)\n\nselect *\nfrom validation_errors\n\n\n\n\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:12.453556Z", "completed_at": "2025-06-03T19:50:12.460153Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:12.460665Z", "completed_at": "2025-06-03T19:50:12.460677Z"}], "thread_id": "Thread-2", "execution_time": 0.007816791534423828, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_expectations_expect_column_value_lengths_to_be_between_input_layer__medical_claim_revenue_center_code__4__3.e84073bb9b", "compiled": true, "compiled_code": "\n\n\n\n\n\n    with grouped_expression as (\n    select\n        \n        \n    \n  \n( 1=1 and length( revenue_center_code ) >= 3 and length( revenue_center_code ) <= 4\n)\n as expression\n\n\n    from tuva.input_layer.input_layer__medical_claim\n    \n\n),\nvalidation_errors as (\n\n    select\n        *\n    from\n        grouped_expression\n    where\n        not(expression = true)\n\n)\n\nselect *\nfrom validation_errors\n\n\n\n\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:12.462297Z", "completed_at": "2025-06-03T19:50:12.469564Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:12.469875Z", "completed_at": "2025-06-03T19:50:12.469883Z"}], "thread_id": "Thread-2", "execution_time": 0.008352994918823242, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_expectations_expect_column_value_lengths_to_equal_input_layer__medical_claim_admit_source_code__1.f9605c76e6", "compiled": true, "compiled_code": "\n\n\n\n\n    with grouped_expression as (\n    select\n        \n        \n    \n  \n  length( admit_source_code )\n = 1 as expression\n\n\n    from tuva.input_layer.input_layer__medical_claim\n    \n\n),\nvalidation_errors as (\n\n    select\n        *\n    from\n        grouped_expression\n    where\n        not(expression = true)\n\n)\n\nselect *\nfrom validation_errors\n\n\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:12.471048Z", "completed_at": "2025-06-03T19:50:12.477967Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:12.478223Z", "completed_at": "2025-06-03T19:50:12.478230Z"}], "thread_id": "Thread-2", "execution_time": 0.007727146148681641, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_expectations_expect_column_value_lengths_to_equal_input_layer__medical_claim_admit_type_code__1.e78a85b394", "compiled": true, "compiled_code": "\n\n\n\n\n    with grouped_expression as (\n    select\n        \n        \n    \n  \n  length( admit_type_code )\n = 1 as expression\n\n\n    from tuva.input_layer.input_layer__medical_claim\n    \n\n),\nvalidation_errors as (\n\n    select\n        *\n    from\n        grouped_expression\n    where\n        not(expression = true)\n\n)\n\nselect *\nfrom validation_errors\n\n\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:12.479376Z", "completed_at": "2025-06-03T19:50:12.485282Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:12.485583Z", "completed_at": "2025-06-03T19:50:12.485591Z"}], "thread_id": "Thread-2", "execution_time": 0.0068149566650390625, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_expectations_expect_column_value_lengths_to_equal_input_layer__medical_claim_billing_npi__10.4e44a362a4", "compiled": true, "compiled_code": "\n\n\n\n\n    with grouped_expression as (\n    select\n        \n        \n    \n  \n  length( billing_npi )\n = 10 as expression\n\n\n    from tuva.input_layer.input_layer__medical_claim\n    \n\n),\nvalidation_errors as (\n\n    select\n        *\n    from\n        grouped_expression\n    where\n        not(expression = true)\n\n)\n\nselect *\nfrom validation_errors\n\n\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:12.487072Z", "completed_at": "2025-06-03T19:50:12.494158Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:12.494410Z", "completed_at": "2025-06-03T19:50:12.494416Z"}], "thread_id": "Thread-2", "execution_time": 0.008026123046875, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_expectations_expect_column_value_lengths_to_equal_input_layer__medical_claim_drg_code__3.746c93d85e", "compiled": true, "compiled_code": "\n\n\n\n\n    with grouped_expression as (\n    select\n        \n        \n    \n  \n  length( drg_code )\n = 3 as expression\n\n\n    from tuva.input_layer.input_layer__medical_claim\n    \n\n),\nvalidation_errors as (\n\n    select\n        *\n    from\n        grouped_expression\n    where\n        not(expression = true)\n\n)\n\nselect *\nfrom validation_errors\n\n\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:12.495639Z", "completed_at": "2025-06-03T19:50:12.501341Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:12.501592Z", "completed_at": "2025-06-03T19:50:12.501599Z"}], "thread_id": "Thread-2", "execution_time": 0.006497859954833984, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_expectations_expect_column_value_lengths_to_equal_input_layer__medical_claim_facility_npi__10.d807efe5a9", "compiled": true, "compiled_code": "\n\n\n\n\n    with grouped_expression as (\n    select\n        \n        \n    \n  \n  length( facility_npi )\n = 10 as expression\n\n\n    from tuva.input_layer.input_layer__medical_claim\n    \n\n),\nvalidation_errors as (\n\n    select\n        *\n    from\n        grouped_expression\n    where\n        not(expression = true)\n\n)\n\nselect *\nfrom validation_errors\n\n\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:12.502760Z", "completed_at": "2025-06-03T19:50:12.517639Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:12.524576Z", "completed_at": "2025-06-03T19:50:12.524583Z"}], "thread_id": "Thread-2", "execution_time": 0.022368907928466797, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_expectations_expect_column_value_lengths_to_equal_input_layer__medical_claim_place_of_service_code__2.74193af853", "compiled": true, "compiled_code": "\n\n\n\n\n    with grouped_expression as (\n    select\n        \n        \n    \n  \n  length( place_of_service_code )\n = 2 as expression\n\n\n    from tuva.input_layer.input_layer__medical_claim\n    \n\n),\nvalidation_errors as (\n\n    select\n        *\n    from\n        grouped_expression\n    where\n        not(expression = true)\n\n)\n\nselect *\nfrom validation_errors\n\n\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:12.360767Z", "completed_at": "2025-06-03T19:50:12.525274Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:12.526506Z", "completed_at": "2025-06-03T19:50:12.526510Z"}], "thread_id": "Thread-3", "execution_time": 0.16832208633422852, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_expectations_expect_column_to_exist_input_layer__medical_claim_service_unit_quantity.20ab70cee5", "compiled": true, "compiled_code": "\n\n    with test_data as (\n\n        select\n            cast('SERVICE_UNIT_QUANTITY' as TEXT) as column_name,\n            21 as matching_column_index,\n            True as column_index_matches\n\n    )\n    select *\n    from test_data\n    where\n        not(matching_column_index >= 0 and column_index_matches)", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:12.371991Z", "completed_at": "2025-06-03T19:50:12.526855Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:12.534205Z", "completed_at": "2025-06-03T19:50:12.534210Z"}], "thread_id": "Thread-4", "execution_time": 0.17503619194030762, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_expectations_expect_column_to_exist_input_layer__medical_claim_total_cost_amount.884f21e172", "compiled": true, "compiled_code": "\n\n    with test_data as (\n\n        select\n            cast('TOTAL_COST_AMOUNT' as TEXT) as column_name,\n            40 as matching_column_index,\n            True as column_index_matches\n\n    )\n    select *\n    from test_data\n    where\n        not(matching_column_index >= 0 and column_index_matches)", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:12.346819Z", "completed_at": "2025-06-03T19:50:12.535397Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:12.541143Z", "completed_at": "2025-06-03T19:50:12.541149Z"}], "thread_id": "Thread-1", "execution_time": 0.19660425186157227, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_expectations_expect_column_to_exist_input_layer__medical_claim_revenue_center_code.98c3c82154", "compiled": true, "compiled_code": "\n\n    with test_data as (\n\n        select\n            cast('REVENUE_CENTER_CODE' as TEXT) as column_name,\n            20 as matching_column_index,\n            True as column_index_matches\n\n    )\n    select *\n    from test_data\n    where\n        not(matching_column_index >= 0 and column_index_matches)", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:12.535607Z", "completed_at": "2025-06-03T19:50:12.547538Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:12.553133Z", "completed_at": "2025-06-03T19:50:12.553139Z"}], "thread_id": "Thread-2", "execution_time": 0.026116132736206055, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_expectations_expect_column_value_lengths_to_equal_input_layer__medical_claim_rendering_npi__10.f88327bb3c", "compiled": true, "compiled_code": "\n\n\n\n\n    with grouped_expression as (\n    select\n        \n        \n    \n  \n  length( rendering_npi )\n = 10 as expression\n\n\n    from tuva.input_layer.input_layer__medical_claim\n    \n\n),\nvalidation_errors as (\n\n    select\n        *\n    from\n        grouped_expression\n    where\n        not(expression = true)\n\n)\n\nselect *\nfrom validation_errors\n\n\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:12.541556Z", "completed_at": "2025-06-03T19:50:12.553526Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:12.554284Z", "completed_at": "2025-06-03T19:50:12.554288Z"}], "thread_id": "Thread-3", "execution_time": 0.019471168518066406, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_expectations_expect_column_values_to_be_between_input_layer__medical_claim_admission_date___2050_01_02____1900_01_02___False.861eedf895", "compiled": true, "compiled_code": "\n\n\n\n\n\n\n    with grouped_expression as (\n    select\n        \n        \n    \n  \n( 1=1 and admission_date >= '1900-01-02' and admission_date <= '2050-01-02'\n)\n as expression\n\n\n    from tuva.input_layer.input_layer__medical_claim\n    \n\n),\nvalidation_errors as (\n\n    select\n        *\n    from\n        grouped_expression\n    where\n        not(expression = true)\n\n)\n\nselect *\nfrom validation_errors\n\n\n\n\n\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:12.547790Z", "completed_at": "2025-06-03T19:50:12.554631Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:12.560227Z", "completed_at": "2025-06-03T19:50:12.560231Z"}], "thread_id": "Thread-4", "execution_time": 0.019398212432861328, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_expectations_expect_column_values_to_be_between_input_layer__medical_claim_claim_end_date___2050_01_02____1900_01_02___False.18e0bb6fca", "compiled": true, "compiled_code": "\n\n\n\n\n\n\n    with grouped_expression as (\n    select\n        \n        \n    \n  \n( 1=1 and claim_end_date >= '1900-01-02' and claim_end_date <= '2050-01-02'\n)\n as expression\n\n\n    from tuva.input_layer.input_layer__medical_claim\n    \n\n),\nvalidation_errors as (\n\n    select\n        *\n    from\n        grouped_expression\n    where\n        not(expression = true)\n\n)\n\nselect *\nfrom validation_errors\n\n\n\n\n\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:12.554845Z", "completed_at": "2025-06-03T19:50:12.561394Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:12.567929Z", "completed_at": "2025-06-03T19:50:12.567935Z"}], "thread_id": "Thread-1", "execution_time": 0.015127182006835938, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_expectations_expect_column_values_to_be_between_input_layer__medical_claim_claim_line_start_date___2050_01_02____1900_01_02___False.8d2c7a0302", "compiled": true, "compiled_code": "\n\n\n\n\n\n\n    with grouped_expression as (\n    select\n        \n        \n    \n  \n( 1=1 and claim_line_start_date >= '1900-01-02' and claim_line_start_date <= '2050-01-02'\n)\n as expression\n\n\n    from tuva.input_layer.input_layer__medical_claim\n    \n\n),\nvalidation_errors as (\n\n    select\n        *\n    from\n        grouped_expression\n    where\n        not(expression = true)\n\n)\n\nselect *\nfrom validation_errors\n\n\n\n\n\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:12.561591Z", "completed_at": "2025-06-03T19:50:12.573560Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:12.678649Z", "completed_at": "2025-06-03T19:50:12.678666Z"}], "thread_id": "Thread-2", "execution_time": 0.11908316612243652, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_expectations_expect_column_values_to_be_between_input_layer__medical_claim_claim_start_date___2050_01_02____1900_01_02___False.c332ff3b04", "compiled": true, "compiled_code": "\n\n\n\n\n\n\n    with grouped_expression as (\n    select\n        \n        \n    \n  \n( 1=1 and claim_start_date >= '1900-01-02' and claim_start_date <= '2050-01-02'\n)\n as expression\n\n\n    from tuva.input_layer.input_layer__medical_claim\n    \n\n),\nvalidation_errors as (\n\n    select\n        *\n    from\n        grouped_expression\n    where\n        not(expression = true)\n\n)\n\nselect *\nfrom validation_errors\n\n\n\n\n\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:12.568354Z", "completed_at": "2025-06-03T19:50:12.689142Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:12.690146Z", "completed_at": "2025-06-03T19:50:12.690151Z"}], "thread_id": "Thread-3", "execution_time": 0.12932395935058594, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_expectations_expect_column_values_to_be_between_input_layer__medical_claim_discharge_date___2050_01_02____1900_01_02___False.201dbd47b6", "compiled": true, "compiled_code": "\n\n\n\n\n\n\n    with grouped_expression as (\n    select\n        \n        \n    \n  \n( 1=1 and discharge_date >= '1900-01-02' and discharge_date <= '2050-01-02'\n)\n as expression\n\n\n    from tuva.input_layer.input_layer__medical_claim\n    \n\n),\nvalidation_errors as (\n\n    select\n        *\n    from\n        grouped_expression\n    where\n        not(expression = true)\n\n)\n\nselect *\nfrom validation_errors\n\n\n\n\n\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:12.574107Z", "completed_at": "2025-06-03T19:50:12.898437Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:12.912422Z", "completed_at": "2025-06-03T19:50:12.912429Z"}], "thread_id": "Thread-4", "execution_time": 0.34482574462890625, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_expectations_expect_column_values_to_be_in_type_list_input_layer__medical_claim_allowed_amount__date__datetime__number__decimal__numeric__float__float4__float8__double__double_precision__real__float64__bignumeric.a94b98ff43", "compiled": true, "compiled_code": "with relation_columns as (\n\n        \n        select\n            cast('CLAIM_ID' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('CLAIM_LINE_NUMBER' as TEXT) as relation_column,\n            cast('NUMBER' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('CLAIM_TYPE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PERSON_ID' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('MEMBER_ID' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PAYER' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PLAN' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('CLAIM_START_DATE' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('CLAIM_END_DATE' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('CLAIM_LINE_START_DATE' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('CLAIM_LINE_END_DATE' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('ADMISSION_DATE' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DISCHARGE_DATE' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('ADMIT_SOURCE_CODE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('ADMIT_TYPE_CODE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DISCHARGE_DISPOSITION_CODE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PLACE_OF_SERVICE_CODE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('BILL_TYPE_CODE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DRG_CODE_TYPE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DRG_CODE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('REVENUE_CENTER_CODE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('SERVICE_UNIT_QUANTITY' as TEXT) as relation_column,\n            cast('NUMBER' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('HCPCS_CODE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('HCPCS_MODIFIER_1' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('HCPCS_MODIFIER_2' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('HCPCS_MODIFIER_3' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('HCPCS_MODIFIER_4' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('HCPCS_MODIFIER_5' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('RENDERING_NPI' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('RENDERING_TIN' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('BILLING_NPI' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('BILLING_TIN' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('FACILITY_NPI' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PAID_DATE' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PAID_AMOUNT' as TEXT) as relation_column,\n            cast('FLOAT' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('ALLOWED_AMOUNT' as TEXT) as relation_column,\n            cast('FLOAT' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('CHARGE_AMOUNT' as TEXT) as relation_column,\n            cast('FLOAT' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('COINSURANCE_AMOUNT' as TEXT) as relation_column,\n            cast('FLOAT' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('COPAYMENT_AMOUNT' as TEXT) as relation_column,\n            cast('FLOAT' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DEDUCTIBLE_AMOUNT' as TEXT) as relation_column,\n            cast('FLOAT' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('TOTAL_COST_AMOUNT' as TEXT) as relation_column,\n            cast('FLOAT' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_TYPE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_1' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_2' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_3' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_4' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_5' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_6' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_7' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_8' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_9' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_10' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_11' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_12' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_13' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_14' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_15' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_16' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_17' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_18' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_19' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_20' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_21' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_22' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_23' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_24' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_25' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_1' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_2' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_3' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_4' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_5' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_6' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_7' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_8' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_9' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_10' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_11' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_12' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_13' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_14' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_15' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_16' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_17' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_18' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_19' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_20' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_21' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_22' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_23' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_24' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_25' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_TYPE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_1' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_2' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_3' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_4' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_5' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_6' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_7' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_8' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_9' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_10' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_11' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_12' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_13' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_14' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_15' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_16' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_17' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_18' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_19' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_20' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_21' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_22' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_23' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_24' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_25' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_1' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_2' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_3' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_4' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_5' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_6' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_7' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_8' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_9' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_10' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_11' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_12' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_13' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_14' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_15' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_16' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_17' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_18' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_19' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_20' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_21' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_22' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_23' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_24' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_25' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('IN_NETWORK_FLAG' as TEXT) as relation_column,\n            cast('NUMBER' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DATA_SOURCE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('FILE_NAME' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('FILE_DATE' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('INGEST_DATETIME' as TEXT) as relation_column,\n            cast('TIMESTAMP_NTZ' as TEXT) as relation_column_type\n        \n        \n    ),\n    test_data as (\n\n        select\n            *\n        from\n            relation_columns\n        where\n            relation_column = 'ALLOWED_AMOUNT'\n            and\n            relation_column_type not in ('DATE', 'DATETIME', 'NUMBER', 'DECIMAL', 'NUMERIC', 'FLOAT', 'FLOAT4', 'FLOAT8', 'DOUBLE', 'DOUBLE PRECISION', 'REAL', 'FLOAT64', 'BIGNUMERIC')\n\n    )\n    select *\n    from test_data", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:12.690808Z", "completed_at": "2025-06-03T19:50:12.919154Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:12.927236Z", "completed_at": "2025-06-03T19:50:12.927241Z"}], "thread_id": "Thread-1", "execution_time": 0.23842215538024902, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_expectations_expect_column_values_to_be_in_type_list_input_layer__medical_claim_charge_amount__date__datetime__number__decimal__numeric__float__float4__float8__double__double_precision__real__float64__bignumeric.1818dc3e10", "compiled": true, "compiled_code": "with relation_columns as (\n\n        \n        select\n            cast('CLAIM_ID' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('CLAIM_LINE_NUMBER' as TEXT) as relation_column,\n            cast('NUMBER' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('CLAIM_TYPE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PERSON_ID' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('MEMBER_ID' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PAYER' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PLAN' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('CLAIM_START_DATE' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('CLAIM_END_DATE' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('CLAIM_LINE_START_DATE' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('CLAIM_LINE_END_DATE' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('ADMISSION_DATE' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DISCHARGE_DATE' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('ADMIT_SOURCE_CODE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('ADMIT_TYPE_CODE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DISCHARGE_DISPOSITION_CODE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PLACE_OF_SERVICE_CODE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('BILL_TYPE_CODE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DRG_CODE_TYPE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DRG_CODE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('REVENUE_CENTER_CODE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('SERVICE_UNIT_QUANTITY' as TEXT) as relation_column,\n            cast('NUMBER' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('HCPCS_CODE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('HCPCS_MODIFIER_1' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('HCPCS_MODIFIER_2' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('HCPCS_MODIFIER_3' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('HCPCS_MODIFIER_4' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('HCPCS_MODIFIER_5' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('RENDERING_NPI' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('RENDERING_TIN' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('BILLING_NPI' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('BILLING_TIN' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('FACILITY_NPI' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PAID_DATE' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PAID_AMOUNT' as TEXT) as relation_column,\n            cast('FLOAT' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('ALLOWED_AMOUNT' as TEXT) as relation_column,\n            cast('FLOAT' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('CHARGE_AMOUNT' as TEXT) as relation_column,\n            cast('FLOAT' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('COINSURANCE_AMOUNT' as TEXT) as relation_column,\n            cast('FLOAT' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('COPAYMENT_AMOUNT' as TEXT) as relation_column,\n            cast('FLOAT' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DEDUCTIBLE_AMOUNT' as TEXT) as relation_column,\n            cast('FLOAT' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('TOTAL_COST_AMOUNT' as TEXT) as relation_column,\n            cast('FLOAT' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_TYPE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_1' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_2' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_3' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_4' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_5' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_6' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_7' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_8' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_9' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_10' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_11' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_12' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_13' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_14' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_15' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_16' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_17' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_18' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_19' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_20' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_21' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_22' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_23' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_24' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_25' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_1' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_2' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_3' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_4' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_5' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_6' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_7' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_8' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_9' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_10' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_11' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_12' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_13' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_14' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_15' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_16' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_17' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_18' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_19' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_20' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_21' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_22' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_23' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_24' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_25' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_TYPE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_1' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_2' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_3' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_4' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_5' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_6' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_7' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_8' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_9' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_10' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_11' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_12' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_13' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_14' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_15' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_16' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_17' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_18' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_19' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_20' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_21' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_22' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_23' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_24' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_25' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_1' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_2' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_3' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_4' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_5' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_6' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_7' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_8' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_9' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_10' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_11' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_12' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_13' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_14' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_15' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_16' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_17' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_18' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_19' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_20' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_21' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_22' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_23' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_24' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_25' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('IN_NETWORK_FLAG' as TEXT) as relation_column,\n            cast('NUMBER' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DATA_SOURCE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('FILE_NAME' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('FILE_DATE' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('INGEST_DATETIME' as TEXT) as relation_column,\n            cast('TIMESTAMP_NTZ' as TEXT) as relation_column_type\n        \n        \n    ),\n    test_data as (\n\n        select\n            *\n        from\n            relation_columns\n        where\n            relation_column = 'CHARGE_AMOUNT'\n            and\n            relation_column_type not in ('DATE', 'DATETIME', 'NUMBER', 'DECIMAL', 'NUMERIC', 'FLOAT', 'FLOAT4', 'FLOAT8', 'DOUBLE', 'DOUBLE PRECISION', 'REAL', 'FLOAT64', 'BIGNUMERIC')\n\n    )\n    select *\n    from test_data", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:12.717250Z", "completed_at": "2025-06-03T19:50:12.928323Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:12.929265Z", "completed_at": "2025-06-03T19:50:12.929269Z"}], "thread_id": "Thread-3", "execution_time": 0.22915315628051758, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_expectations_expect_column_values_to_be_in_type_list_input_layer__medical_claim_copayment_amount__date__datetime__number__decimal__numeric__float__float4__float8__double__double_precision__real__float64__bignumeric.4809b924b3", "compiled": true, "compiled_code": "with relation_columns as (\n\n        \n        select\n            cast('CLAIM_ID' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('CLAIM_LINE_NUMBER' as TEXT) as relation_column,\n            cast('NUMBER' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('CLAIM_TYPE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PERSON_ID' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('MEMBER_ID' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PAYER' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PLAN' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('CLAIM_START_DATE' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('CLAIM_END_DATE' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('CLAIM_LINE_START_DATE' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('CLAIM_LINE_END_DATE' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('ADMISSION_DATE' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DISCHARGE_DATE' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('ADMIT_SOURCE_CODE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('ADMIT_TYPE_CODE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DISCHARGE_DISPOSITION_CODE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PLACE_OF_SERVICE_CODE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('BILL_TYPE_CODE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DRG_CODE_TYPE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DRG_CODE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('REVENUE_CENTER_CODE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('SERVICE_UNIT_QUANTITY' as TEXT) as relation_column,\n            cast('NUMBER' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('HCPCS_CODE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('HCPCS_MODIFIER_1' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('HCPCS_MODIFIER_2' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('HCPCS_MODIFIER_3' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('HCPCS_MODIFIER_4' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('HCPCS_MODIFIER_5' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('RENDERING_NPI' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('RENDERING_TIN' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('BILLING_NPI' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('BILLING_TIN' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('FACILITY_NPI' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PAID_DATE' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PAID_AMOUNT' as TEXT) as relation_column,\n            cast('FLOAT' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('ALLOWED_AMOUNT' as TEXT) as relation_column,\n            cast('FLOAT' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('CHARGE_AMOUNT' as TEXT) as relation_column,\n            cast('FLOAT' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('COINSURANCE_AMOUNT' as TEXT) as relation_column,\n            cast('FLOAT' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('COPAYMENT_AMOUNT' as TEXT) as relation_column,\n            cast('FLOAT' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DEDUCTIBLE_AMOUNT' as TEXT) as relation_column,\n            cast('FLOAT' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('TOTAL_COST_AMOUNT' as TEXT) as relation_column,\n            cast('FLOAT' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_TYPE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_1' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_2' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_3' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_4' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_5' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_6' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_7' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_8' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_9' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_10' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_11' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_12' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_13' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_14' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_15' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_16' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_17' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_18' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_19' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_20' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_21' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_22' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_23' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_24' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_25' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_1' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_2' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_3' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_4' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_5' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_6' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_7' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_8' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_9' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_10' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_11' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_12' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_13' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_14' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_15' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_16' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_17' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_18' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_19' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_20' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_21' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_22' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_23' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_24' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_25' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_TYPE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_1' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_2' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_3' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_4' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_5' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_6' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_7' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_8' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_9' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_10' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_11' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_12' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_13' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_14' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_15' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_16' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_17' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_18' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_19' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_20' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_21' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_22' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_23' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_24' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_25' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_1' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_2' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_3' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_4' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_5' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_6' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_7' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_8' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_9' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_10' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_11' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_12' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_13' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_14' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_15' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_16' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_17' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_18' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_19' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_20' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_21' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_22' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_23' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_24' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_25' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('IN_NETWORK_FLAG' as TEXT) as relation_column,\n            cast('NUMBER' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DATA_SOURCE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('FILE_NAME' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('FILE_DATE' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('INGEST_DATETIME' as TEXT) as relation_column,\n            cast('TIMESTAMP_NTZ' as TEXT) as relation_column_type\n        \n        \n    ),\n    test_data as (\n\n        select\n            *\n        from\n            relation_columns\n        where\n            relation_column = 'COPAYMENT_AMOUNT'\n            and\n            relation_column_type not in ('DATE', 'DATETIME', 'NUMBER', 'DECIMAL', 'NUMERIC', 'FLOAT', 'FLOAT4', 'FLOAT8', 'DOUBLE', 'DOUBLE PRECISION', 'REAL', 'FLOAT64', 'BIGNUMERIC')\n\n    )\n    select *\n    from test_data", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:12.700411Z", "completed_at": "2025-06-03T19:50:12.929038Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:12.937832Z", "completed_at": "2025-06-03T19:50:12.937838Z"}], "thread_id": "Thread-2", "execution_time": 0.24739527702331543, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_expectations_expect_column_values_to_be_in_type_list_input_layer__medical_claim_coinsurance_amount__date__datetime__number__decimal__numeric__float__float4__float8__double__double_precision__real__float64__bignumeric.a5128cd816", "compiled": true, "compiled_code": "with relation_columns as (\n\n        \n        select\n            cast('CLAIM_ID' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('CLAIM_LINE_NUMBER' as TEXT) as relation_column,\n            cast('NUMBER' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('CLAIM_TYPE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PERSON_ID' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('MEMBER_ID' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PAYER' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PLAN' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('CLAIM_START_DATE' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('CLAIM_END_DATE' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('CLAIM_LINE_START_DATE' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('CLAIM_LINE_END_DATE' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('ADMISSION_DATE' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DISCHARGE_DATE' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('ADMIT_SOURCE_CODE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('ADMIT_TYPE_CODE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DISCHARGE_DISPOSITION_CODE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PLACE_OF_SERVICE_CODE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('BILL_TYPE_CODE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DRG_CODE_TYPE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DRG_CODE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('REVENUE_CENTER_CODE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('SERVICE_UNIT_QUANTITY' as TEXT) as relation_column,\n            cast('NUMBER' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('HCPCS_CODE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('HCPCS_MODIFIER_1' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('HCPCS_MODIFIER_2' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('HCPCS_MODIFIER_3' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('HCPCS_MODIFIER_4' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('HCPCS_MODIFIER_5' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('RENDERING_NPI' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('RENDERING_TIN' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('BILLING_NPI' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('BILLING_TIN' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('FACILITY_NPI' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PAID_DATE' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PAID_AMOUNT' as TEXT) as relation_column,\n            cast('FLOAT' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('ALLOWED_AMOUNT' as TEXT) as relation_column,\n            cast('FLOAT' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('CHARGE_AMOUNT' as TEXT) as relation_column,\n            cast('FLOAT' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('COINSURANCE_AMOUNT' as TEXT) as relation_column,\n            cast('FLOAT' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('COPAYMENT_AMOUNT' as TEXT) as relation_column,\n            cast('FLOAT' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DEDUCTIBLE_AMOUNT' as TEXT) as relation_column,\n            cast('FLOAT' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('TOTAL_COST_AMOUNT' as TEXT) as relation_column,\n            cast('FLOAT' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_TYPE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_1' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_2' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_3' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_4' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_5' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_6' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_7' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_8' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_9' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_10' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_11' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_12' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_13' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_14' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_15' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_16' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_17' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_18' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_19' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_20' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_21' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_22' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_23' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_24' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_25' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_1' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_2' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_3' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_4' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_5' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_6' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_7' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_8' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_9' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_10' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_11' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_12' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_13' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_14' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_15' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_16' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_17' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_18' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_19' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_20' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_21' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_22' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_23' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_24' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_25' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_TYPE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_1' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_2' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_3' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_4' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_5' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_6' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_7' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_8' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_9' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_10' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_11' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_12' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_13' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_14' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_15' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_16' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_17' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_18' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_19' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_20' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_21' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_22' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_23' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_24' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_25' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_1' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_2' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_3' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_4' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_5' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_6' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_7' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_8' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_9' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_10' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_11' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_12' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_13' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_14' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_15' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_16' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_17' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_18' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_19' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_20' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_21' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_22' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_23' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_24' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_25' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('IN_NETWORK_FLAG' as TEXT) as relation_column,\n            cast('NUMBER' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DATA_SOURCE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('FILE_NAME' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('FILE_DATE' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('INGEST_DATETIME' as TEXT) as relation_column,\n            cast('TIMESTAMP_NTZ' as TEXT) as relation_column_type\n        \n        \n    ),\n    test_data as (\n\n        select\n            *\n        from\n            relation_columns\n        where\n            relation_column = 'COINSURANCE_AMOUNT'\n            and\n            relation_column_type not in ('DATE', 'DATETIME', 'NUMBER', 'DECIMAL', 'NUMERIC', 'FLOAT', 'FLOAT4', 'FLOAT8', 'DOUBLE', 'DOUBLE PRECISION', 'REAL', 'FLOAT64', 'BIGNUMERIC')\n\n    )\n    select *\n    from test_data", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:12.949535Z", "completed_at": "2025-06-03T19:50:13.159749Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:13.188379Z", "completed_at": "2025-06-03T19:50:13.188389Z"}], "thread_id": "Thread-3", "execution_time": 0.2414100170135498, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_expectations_expect_column_values_to_be_in_type_list_input_layer__medical_claim_paid_amount__date__datetime__number__decimal__numeric__float__float4__float8__double__double_precision__real__float64__bignumeric.80ab660cd3", "compiled": true, "compiled_code": "with relation_columns as (\n\n        \n        select\n            cast('CLAIM_ID' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('CLAIM_LINE_NUMBER' as TEXT) as relation_column,\n            cast('NUMBER' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('CLAIM_TYPE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PERSON_ID' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('MEMBER_ID' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PAYER' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PLAN' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('CLAIM_START_DATE' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('CLAIM_END_DATE' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('CLAIM_LINE_START_DATE' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('CLAIM_LINE_END_DATE' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('ADMISSION_DATE' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DISCHARGE_DATE' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('ADMIT_SOURCE_CODE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('ADMIT_TYPE_CODE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DISCHARGE_DISPOSITION_CODE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PLACE_OF_SERVICE_CODE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('BILL_TYPE_CODE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DRG_CODE_TYPE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DRG_CODE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('REVENUE_CENTER_CODE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('SERVICE_UNIT_QUANTITY' as TEXT) as relation_column,\n            cast('NUMBER' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('HCPCS_CODE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('HCPCS_MODIFIER_1' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('HCPCS_MODIFIER_2' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('HCPCS_MODIFIER_3' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('HCPCS_MODIFIER_4' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('HCPCS_MODIFIER_5' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('RENDERING_NPI' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('RENDERING_TIN' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('BILLING_NPI' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('BILLING_TIN' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('FACILITY_NPI' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PAID_DATE' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PAID_AMOUNT' as TEXT) as relation_column,\n            cast('FLOAT' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('ALLOWED_AMOUNT' as TEXT) as relation_column,\n            cast('FLOAT' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('CHARGE_AMOUNT' as TEXT) as relation_column,\n            cast('FLOAT' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('COINSURANCE_AMOUNT' as TEXT) as relation_column,\n            cast('FLOAT' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('COPAYMENT_AMOUNT' as TEXT) as relation_column,\n            cast('FLOAT' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DEDUCTIBLE_AMOUNT' as TEXT) as relation_column,\n            cast('FLOAT' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('TOTAL_COST_AMOUNT' as TEXT) as relation_column,\n            cast('FLOAT' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_TYPE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_1' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_2' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_3' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_4' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_5' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_6' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_7' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_8' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_9' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_10' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_11' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_12' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_13' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_14' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_15' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_16' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_17' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_18' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_19' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_20' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_21' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_22' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_23' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_24' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_25' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_1' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_2' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_3' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_4' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_5' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_6' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_7' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_8' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_9' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_10' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_11' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_12' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_13' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_14' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_15' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_16' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_17' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_18' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_19' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_20' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_21' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_22' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_23' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_24' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_25' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_TYPE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_1' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_2' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_3' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_4' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_5' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_6' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_7' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_8' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_9' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_10' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_11' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_12' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_13' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_14' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_15' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_16' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_17' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_18' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_19' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_20' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_21' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_22' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_23' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_24' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_25' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_1' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_2' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_3' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_4' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_5' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_6' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_7' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_8' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_9' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_10' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_11' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_12' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_13' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_14' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_15' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_16' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_17' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_18' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_19' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_20' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_21' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_22' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_23' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_24' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_25' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('IN_NETWORK_FLAG' as TEXT) as relation_column,\n            cast('NUMBER' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DATA_SOURCE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('FILE_NAME' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('FILE_DATE' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('INGEST_DATETIME' as TEXT) as relation_column,\n            cast('TIMESTAMP_NTZ' as TEXT) as relation_column_type\n        \n        \n    ),\n    test_data as (\n\n        select\n            *\n        from\n            relation_columns\n        where\n            relation_column = 'PAID_AMOUNT'\n            and\n            relation_column_type not in ('DATE', 'DATETIME', 'NUMBER', 'DECIMAL', 'NUMERIC', 'FLOAT', 'FLOAT4', 'FLOAT8', 'DOUBLE', 'DOUBLE PRECISION', 'REAL', 'FLOAT64', 'BIGNUMERIC')\n\n    )\n    select *\n    from test_data", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:12.955836Z", "completed_at": "2025-06-03T19:50:13.219874Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:13.221205Z", "completed_at": "2025-06-03T19:50:13.221210Z"}], "thread_id": "Thread-2", "execution_time": 0.2730071544647217, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_expectations_expect_column_values_to_be_in_type_list_input_layer__medical_claim_total_cost_amount__date__datetime__number__decimal__numeric__float__float4__float8__double__double_precision__real__float64__bignumeric.412c0cb142", "compiled": true, "compiled_code": "with relation_columns as (\n\n        \n        select\n            cast('CLAIM_ID' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('CLAIM_LINE_NUMBER' as TEXT) as relation_column,\n            cast('NUMBER' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('CLAIM_TYPE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PERSON_ID' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('MEMBER_ID' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PAYER' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PLAN' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('CLAIM_START_DATE' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('CLAIM_END_DATE' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('CLAIM_LINE_START_DATE' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('CLAIM_LINE_END_DATE' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('ADMISSION_DATE' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DISCHARGE_DATE' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('ADMIT_SOURCE_CODE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('ADMIT_TYPE_CODE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DISCHARGE_DISPOSITION_CODE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PLACE_OF_SERVICE_CODE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('BILL_TYPE_CODE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DRG_CODE_TYPE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DRG_CODE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('REVENUE_CENTER_CODE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('SERVICE_UNIT_QUANTITY' as TEXT) as relation_column,\n            cast('NUMBER' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('HCPCS_CODE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('HCPCS_MODIFIER_1' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('HCPCS_MODIFIER_2' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('HCPCS_MODIFIER_3' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('HCPCS_MODIFIER_4' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('HCPCS_MODIFIER_5' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('RENDERING_NPI' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('RENDERING_TIN' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('BILLING_NPI' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('BILLING_TIN' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('FACILITY_NPI' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PAID_DATE' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PAID_AMOUNT' as TEXT) as relation_column,\n            cast('FLOAT' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('ALLOWED_AMOUNT' as TEXT) as relation_column,\n            cast('FLOAT' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('CHARGE_AMOUNT' as TEXT) as relation_column,\n            cast('FLOAT' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('COINSURANCE_AMOUNT' as TEXT) as relation_column,\n            cast('FLOAT' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('COPAYMENT_AMOUNT' as TEXT) as relation_column,\n            cast('FLOAT' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DEDUCTIBLE_AMOUNT' as TEXT) as relation_column,\n            cast('FLOAT' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('TOTAL_COST_AMOUNT' as TEXT) as relation_column,\n            cast('FLOAT' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_TYPE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_1' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_2' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_3' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_4' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_5' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_6' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_7' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_8' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_9' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_10' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_11' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_12' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_13' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_14' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_15' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_16' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_17' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_18' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_19' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_20' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_21' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_22' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_23' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_24' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_25' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_1' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_2' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_3' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_4' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_5' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_6' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_7' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_8' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_9' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_10' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_11' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_12' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_13' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_14' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_15' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_16' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_17' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_18' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_19' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_20' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_21' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_22' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_23' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_24' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_25' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_TYPE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_1' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_2' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_3' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_4' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_5' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_6' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_7' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_8' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_9' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_10' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_11' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_12' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_13' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_14' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_15' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_16' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_17' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_18' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_19' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_20' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_21' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_22' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_23' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_24' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_25' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_1' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_2' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_3' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_4' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_5' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_6' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_7' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_8' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_9' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_10' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_11' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_12' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_13' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_14' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_15' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_16' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_17' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_18' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_19' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_20' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_21' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_22' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_23' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_24' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_25' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('IN_NETWORK_FLAG' as TEXT) as relation_column,\n            cast('NUMBER' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DATA_SOURCE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('FILE_NAME' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('FILE_DATE' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('INGEST_DATETIME' as TEXT) as relation_column,\n            cast('TIMESTAMP_NTZ' as TEXT) as relation_column_type\n        \n        \n    ),\n    test_data as (\n\n        select\n            *\n        from\n            relation_columns\n        where\n            relation_column = 'TOTAL_COST_AMOUNT'\n            and\n            relation_column_type not in ('DATE', 'DATETIME', 'NUMBER', 'DECIMAL', 'NUMERIC', 'FLOAT', 'FLOAT4', 'FLOAT8', 'DOUBLE', 'DOUBLE PRECISION', 'REAL', 'FLOAT64', 'BIGNUMERIC')\n\n    )\n    select *\n    from test_data", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:12.938719Z", "completed_at": "2025-06-03T19:50:13.220289Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:13.221621Z", "completed_at": "2025-06-03T19:50:13.221626Z"}], "thread_id": "Thread-1", "execution_time": 0.2928900718688965, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_expectations_expect_column_values_to_be_in_type_list_input_layer__medical_claim_ingest_datetime__date__datetime__time__timestamp__timestamp_ntz__timestampntz__timestamp_ltz__timestampltz__timestamp_tz__timestamptz__timestamp_with_time_zone__timestamp_without_time_zone__datetime2__datetimeoffset.f4c09b6928", "compiled": true, "compiled_code": "with relation_columns as (\n\n        \n        select\n            cast('CLAIM_ID' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('CLAIM_LINE_NUMBER' as TEXT) as relation_column,\n            cast('NUMBER' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('CLAIM_TYPE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PERSON_ID' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('MEMBER_ID' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PAYER' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PLAN' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('CLAIM_START_DATE' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('CLAIM_END_DATE' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('CLAIM_LINE_START_DATE' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('CLAIM_LINE_END_DATE' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('ADMISSION_DATE' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DISCHARGE_DATE' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('ADMIT_SOURCE_CODE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('ADMIT_TYPE_CODE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DISCHARGE_DISPOSITION_CODE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PLACE_OF_SERVICE_CODE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('BILL_TYPE_CODE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DRG_CODE_TYPE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DRG_CODE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('REVENUE_CENTER_CODE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('SERVICE_UNIT_QUANTITY' as TEXT) as relation_column,\n            cast('NUMBER' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('HCPCS_CODE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('HCPCS_MODIFIER_1' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('HCPCS_MODIFIER_2' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('HCPCS_MODIFIER_3' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('HCPCS_MODIFIER_4' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('HCPCS_MODIFIER_5' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('RENDERING_NPI' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('RENDERING_TIN' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('BILLING_NPI' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('BILLING_TIN' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('FACILITY_NPI' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PAID_DATE' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PAID_AMOUNT' as TEXT) as relation_column,\n            cast('FLOAT' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('ALLOWED_AMOUNT' as TEXT) as relation_column,\n            cast('FLOAT' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('CHARGE_AMOUNT' as TEXT) as relation_column,\n            cast('FLOAT' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('COINSURANCE_AMOUNT' as TEXT) as relation_column,\n            cast('FLOAT' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('COPAYMENT_AMOUNT' as TEXT) as relation_column,\n            cast('FLOAT' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DEDUCTIBLE_AMOUNT' as TEXT) as relation_column,\n            cast('FLOAT' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('TOTAL_COST_AMOUNT' as TEXT) as relation_column,\n            cast('FLOAT' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_TYPE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_1' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_2' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_3' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_4' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_5' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_6' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_7' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_8' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_9' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_10' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_11' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_12' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_13' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_14' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_15' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_16' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_17' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_18' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_19' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_20' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_21' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_22' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_23' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_24' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_25' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_1' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_2' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_3' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_4' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_5' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_6' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_7' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_8' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_9' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_10' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_11' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_12' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_13' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_14' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_15' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_16' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_17' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_18' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_19' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_20' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_21' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_22' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_23' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_24' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_25' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_TYPE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_1' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_2' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_3' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_4' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_5' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_6' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_7' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_8' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_9' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_10' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_11' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_12' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_13' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_14' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_15' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_16' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_17' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_18' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_19' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_20' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_21' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_22' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_23' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_24' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_25' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_1' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_2' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_3' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_4' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_5' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_6' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_7' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_8' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_9' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_10' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_11' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_12' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_13' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_14' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_15' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_16' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_17' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_18' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_19' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_20' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_21' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_22' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_23' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_24' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_25' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('IN_NETWORK_FLAG' as TEXT) as relation_column,\n            cast('NUMBER' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DATA_SOURCE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('FILE_NAME' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('FILE_DATE' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('INGEST_DATETIME' as TEXT) as relation_column,\n            cast('TIMESTAMP_NTZ' as TEXT) as relation_column_type\n        \n        \n    ),\n    test_data as (\n\n        select\n            *\n        from\n            relation_columns\n        where\n            relation_column = 'INGEST_DATETIME'\n            and\n            relation_column_type not in ('DATE', 'DATETIME', 'TIME', 'TIMESTAMP', 'TIMESTAMP_NTZ', 'TIMESTAMPNTZ', 'TIMESTAMP_LTZ', 'TIMESTAMPLTZ', 'TIMESTAMP_TZ', 'TIMESTAMPTZ', 'TIMESTAMP WITH TIME ZONE', 'TIMESTAMP WITHOUT TIME ZONE', 'DATETIME2', 'DATETIMEOFFSET')\n\n    )\n    select *\n    from test_data", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:12.929625Z", "completed_at": "2025-06-03T19:50:13.220970Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:13.222020Z", "completed_at": "2025-06-03T19:50:13.222024Z"}], "thread_id": "Thread-4", "execution_time": 0.2943532466888428, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_expectations_expect_column_values_to_be_in_type_list_input_layer__medical_claim_deductible_amount__date__datetime__number__decimal__numeric__float__float4__float8__double__double_precision__real__float64__bignumeric.04a01e5a13", "compiled": true, "compiled_code": "with relation_columns as (\n\n        \n        select\n            cast('CLAIM_ID' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('CLAIM_LINE_NUMBER' as TEXT) as relation_column,\n            cast('NUMBER' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('CLAIM_TYPE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PERSON_ID' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('MEMBER_ID' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PAYER' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PLAN' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('CLAIM_START_DATE' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('CLAIM_END_DATE' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('CLAIM_LINE_START_DATE' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('CLAIM_LINE_END_DATE' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('ADMISSION_DATE' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DISCHARGE_DATE' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('ADMIT_SOURCE_CODE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('ADMIT_TYPE_CODE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DISCHARGE_DISPOSITION_CODE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PLACE_OF_SERVICE_CODE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('BILL_TYPE_CODE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DRG_CODE_TYPE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DRG_CODE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('REVENUE_CENTER_CODE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('SERVICE_UNIT_QUANTITY' as TEXT) as relation_column,\n            cast('NUMBER' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('HCPCS_CODE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('HCPCS_MODIFIER_1' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('HCPCS_MODIFIER_2' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('HCPCS_MODIFIER_3' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('HCPCS_MODIFIER_4' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('HCPCS_MODIFIER_5' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('RENDERING_NPI' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('RENDERING_TIN' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('BILLING_NPI' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('BILLING_TIN' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('FACILITY_NPI' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PAID_DATE' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PAID_AMOUNT' as TEXT) as relation_column,\n            cast('FLOAT' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('ALLOWED_AMOUNT' as TEXT) as relation_column,\n            cast('FLOAT' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('CHARGE_AMOUNT' as TEXT) as relation_column,\n            cast('FLOAT' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('COINSURANCE_AMOUNT' as TEXT) as relation_column,\n            cast('FLOAT' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('COPAYMENT_AMOUNT' as TEXT) as relation_column,\n            cast('FLOAT' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DEDUCTIBLE_AMOUNT' as TEXT) as relation_column,\n            cast('FLOAT' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('TOTAL_COST_AMOUNT' as TEXT) as relation_column,\n            cast('FLOAT' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_TYPE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_1' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_2' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_3' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_4' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_5' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_6' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_7' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_8' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_9' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_10' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_11' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_12' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_13' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_14' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_15' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_16' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_17' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_18' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_19' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_20' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_21' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_22' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_23' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_24' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_25' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_1' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_2' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_3' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_4' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_5' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_6' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_7' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_8' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_9' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_10' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_11' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_12' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_13' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_14' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_15' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_16' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_17' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_18' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_19' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_20' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_21' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_22' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_23' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_24' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_25' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_TYPE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_1' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_2' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_3' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_4' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_5' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_6' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_7' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_8' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_9' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_10' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_11' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_12' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_13' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_14' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_15' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_16' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_17' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_18' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_19' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_20' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_21' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_22' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_23' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_24' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_25' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_1' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_2' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_3' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_4' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_5' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_6' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_7' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_8' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_9' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_10' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_11' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_12' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_13' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_14' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_15' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_16' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_17' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_18' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_19' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_20' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_21' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_22' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_23' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_24' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_25' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('IN_NETWORK_FLAG' as TEXT) as relation_column,\n            cast('NUMBER' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DATA_SOURCE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('FILE_NAME' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('FILE_DATE' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('INGEST_DATETIME' as TEXT) as relation_column,\n            cast('TIMESTAMP_NTZ' as TEXT) as relation_column_type\n        \n        \n    ),\n    test_data as (\n\n        select\n            *\n        from\n            relation_columns\n        where\n            relation_column = 'DEDUCTIBLE_AMOUNT'\n            and\n            relation_column_type not in ('DATE', 'DATETIME', 'NUMBER', 'DECIMAL', 'NUMERIC', 'FLOAT', 'FLOAT4', 'FLOAT8', 'DOUBLE', 'DOUBLE PRECISION', 'REAL', 'FLOAT64', 'BIGNUMERIC')\n\n    )\n    select *\n    from test_data", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:13.211632Z", "completed_at": "2025-06-03T19:50:13.414069Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:13.414368Z", "completed_at": "2025-06-03T19:50:13.414375Z"}], "thread_id": "Thread-3", "execution_time": 0.20330119132995605, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_expectations_expect_column_values_to_be_of_type_input_layer__medical_claim_admission_date__date.c33787a0be", "compiled": true, "compiled_code": "with relation_columns as (\n\n        \n        select\n            cast('CLAIM_ID' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('CLAIM_LINE_NUMBER' as TEXT) as relation_column,\n            cast('NUMBER' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('CLAIM_TYPE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PERSON_ID' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('MEMBER_ID' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PAYER' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PLAN' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('CLAIM_START_DATE' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('CLAIM_END_DATE' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('CLAIM_LINE_START_DATE' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('CLAIM_LINE_END_DATE' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('ADMISSION_DATE' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DISCHARGE_DATE' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('ADMIT_SOURCE_CODE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('ADMIT_TYPE_CODE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DISCHARGE_DISPOSITION_CODE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PLACE_OF_SERVICE_CODE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('BILL_TYPE_CODE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DRG_CODE_TYPE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DRG_CODE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('REVENUE_CENTER_CODE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('SERVICE_UNIT_QUANTITY' as TEXT) as relation_column,\n            cast('NUMBER' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('HCPCS_CODE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('HCPCS_MODIFIER_1' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('HCPCS_MODIFIER_2' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('HCPCS_MODIFIER_3' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('HCPCS_MODIFIER_4' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('HCPCS_MODIFIER_5' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('RENDERING_NPI' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('RENDERING_TIN' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('BILLING_NPI' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('BILLING_TIN' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('FACILITY_NPI' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PAID_DATE' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PAID_AMOUNT' as TEXT) as relation_column,\n            cast('FLOAT' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('ALLOWED_AMOUNT' as TEXT) as relation_column,\n            cast('FLOAT' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('CHARGE_AMOUNT' as TEXT) as relation_column,\n            cast('FLOAT' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('COINSURANCE_AMOUNT' as TEXT) as relation_column,\n            cast('FLOAT' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('COPAYMENT_AMOUNT' as TEXT) as relation_column,\n            cast('FLOAT' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DEDUCTIBLE_AMOUNT' as TEXT) as relation_column,\n            cast('FLOAT' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('TOTAL_COST_AMOUNT' as TEXT) as relation_column,\n            cast('FLOAT' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_TYPE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_1' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_2' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_3' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_4' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_5' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_6' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_7' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_8' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_9' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_10' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_11' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_12' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_13' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_14' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_15' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_16' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_17' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_18' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_19' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_20' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_21' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_22' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_23' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_24' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_25' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_1' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_2' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_3' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_4' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_5' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_6' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_7' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_8' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_9' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_10' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_11' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_12' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_13' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_14' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_15' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_16' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_17' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_18' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_19' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_20' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_21' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_22' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_23' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_24' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_25' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_TYPE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_1' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_2' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_3' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_4' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_5' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_6' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_7' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_8' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_9' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_10' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_11' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_12' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_13' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_14' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_15' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_16' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_17' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_18' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_19' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_20' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_21' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_22' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_23' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_24' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_25' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_1' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_2' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_3' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_4' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_5' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_6' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_7' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_8' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_9' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_10' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_11' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_12' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_13' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_14' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_15' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_16' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_17' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_18' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_19' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_20' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_21' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_22' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_23' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_24' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_25' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('IN_NETWORK_FLAG' as TEXT) as relation_column,\n            cast('NUMBER' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DATA_SOURCE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('FILE_NAME' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('FILE_DATE' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('INGEST_DATETIME' as TEXT) as relation_column,\n            cast('TIMESTAMP_NTZ' as TEXT) as relation_column_type\n        \n        \n    ),\n    test_data as (\n\n        select\n            *\n        from\n            relation_columns\n        where\n            relation_column = 'ADMISSION_DATE'\n            and\n            relation_column_type not in ('DATE')\n\n    )\n    select *\n    from test_data", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:13.241426Z", "completed_at": "2025-06-03T19:50:13.563852Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:13.564116Z", "completed_at": "2025-06-03T19:50:13.564123Z"}], "thread_id": "Thread-4", "execution_time": 0.3404848575592041, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_expectations_expect_column_values_to_be_of_type_input_layer__medical_claim_claim_line_start_date__date.61671a2978", "compiled": true, "compiled_code": "with relation_columns as (\n\n        \n        select\n            cast('CLAIM_ID' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('CLAIM_LINE_NUMBER' as TEXT) as relation_column,\n            cast('NUMBER' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('CLAIM_TYPE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PERSON_ID' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('MEMBER_ID' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PAYER' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PLAN' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('CLAIM_START_DATE' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('CLAIM_END_DATE' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('CLAIM_LINE_START_DATE' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('CLAIM_LINE_END_DATE' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('ADMISSION_DATE' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DISCHARGE_DATE' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('ADMIT_SOURCE_CODE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('ADMIT_TYPE_CODE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DISCHARGE_DISPOSITION_CODE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PLACE_OF_SERVICE_CODE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('BILL_TYPE_CODE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DRG_CODE_TYPE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DRG_CODE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('REVENUE_CENTER_CODE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('SERVICE_UNIT_QUANTITY' as TEXT) as relation_column,\n            cast('NUMBER' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('HCPCS_CODE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('HCPCS_MODIFIER_1' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('HCPCS_MODIFIER_2' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('HCPCS_MODIFIER_3' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('HCPCS_MODIFIER_4' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('HCPCS_MODIFIER_5' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('RENDERING_NPI' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('RENDERING_TIN' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('BILLING_NPI' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('BILLING_TIN' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('FACILITY_NPI' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PAID_DATE' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PAID_AMOUNT' as TEXT) as relation_column,\n            cast('FLOAT' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('ALLOWED_AMOUNT' as TEXT) as relation_column,\n            cast('FLOAT' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('CHARGE_AMOUNT' as TEXT) as relation_column,\n            cast('FLOAT' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('COINSURANCE_AMOUNT' as TEXT) as relation_column,\n            cast('FLOAT' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('COPAYMENT_AMOUNT' as TEXT) as relation_column,\n            cast('FLOAT' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DEDUCTIBLE_AMOUNT' as TEXT) as relation_column,\n            cast('FLOAT' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('TOTAL_COST_AMOUNT' as TEXT) as relation_column,\n            cast('FLOAT' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_TYPE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_1' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_2' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_3' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_4' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_5' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_6' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_7' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_8' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_9' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_10' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_11' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_12' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_13' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_14' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_15' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_16' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_17' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_18' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_19' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_20' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_21' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_22' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_23' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_24' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_25' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_1' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_2' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_3' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_4' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_5' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_6' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_7' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_8' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_9' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_10' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_11' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_12' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_13' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_14' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_15' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_16' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_17' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_18' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_19' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_20' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_21' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_22' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_23' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_24' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_25' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_TYPE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_1' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_2' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_3' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_4' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_5' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_6' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_7' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_8' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_9' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_10' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_11' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_12' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_13' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_14' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_15' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_16' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_17' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_18' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_19' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_20' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_21' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_22' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_23' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_24' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_25' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_1' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_2' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_3' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_4' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_5' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_6' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_7' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_8' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_9' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_10' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_11' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_12' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_13' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_14' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_15' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_16' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_17' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_18' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_19' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_20' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_21' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_22' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_23' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_24' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_25' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('IN_NETWORK_FLAG' as TEXT) as relation_column,\n            cast('NUMBER' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DATA_SOURCE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('FILE_NAME' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('FILE_DATE' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('INGEST_DATETIME' as TEXT) as relation_column,\n            cast('TIMESTAMP_NTZ' as TEXT) as relation_column_type\n        \n        \n    ),\n    test_data as (\n\n        select\n            *\n        from\n            relation_columns\n        where\n            relation_column = 'CLAIM_LINE_START_DATE'\n            and\n            relation_column_type not in ('DATE')\n\n    )\n    select *\n    from test_data", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:13.233347Z", "completed_at": "2025-06-03T19:50:13.573542Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:13.573957Z", "completed_at": "2025-06-03T19:50:13.573963Z"}], "thread_id": "Thread-1", "execution_time": 0.3506450653076172, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_expectations_expect_column_values_to_be_of_type_input_layer__medical_claim_claim_line_end_date__date.87be360ac7", "compiled": true, "compiled_code": "with relation_columns as (\n\n        \n        select\n            cast('CLAIM_ID' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('CLAIM_LINE_NUMBER' as TEXT) as relation_column,\n            cast('NUMBER' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('CLAIM_TYPE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PERSON_ID' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('MEMBER_ID' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PAYER' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PLAN' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('CLAIM_START_DATE' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('CLAIM_END_DATE' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('CLAIM_LINE_START_DATE' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('CLAIM_LINE_END_DATE' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('ADMISSION_DATE' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DISCHARGE_DATE' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('ADMIT_SOURCE_CODE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('ADMIT_TYPE_CODE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DISCHARGE_DISPOSITION_CODE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PLACE_OF_SERVICE_CODE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('BILL_TYPE_CODE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DRG_CODE_TYPE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DRG_CODE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('REVENUE_CENTER_CODE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('SERVICE_UNIT_QUANTITY' as TEXT) as relation_column,\n            cast('NUMBER' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('HCPCS_CODE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('HCPCS_MODIFIER_1' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('HCPCS_MODIFIER_2' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('HCPCS_MODIFIER_3' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('HCPCS_MODIFIER_4' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('HCPCS_MODIFIER_5' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('RENDERING_NPI' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('RENDERING_TIN' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('BILLING_NPI' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('BILLING_TIN' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('FACILITY_NPI' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PAID_DATE' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PAID_AMOUNT' as TEXT) as relation_column,\n            cast('FLOAT' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('ALLOWED_AMOUNT' as TEXT) as relation_column,\n            cast('FLOAT' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('CHARGE_AMOUNT' as TEXT) as relation_column,\n            cast('FLOAT' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('COINSURANCE_AMOUNT' as TEXT) as relation_column,\n            cast('FLOAT' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('COPAYMENT_AMOUNT' as TEXT) as relation_column,\n            cast('FLOAT' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DEDUCTIBLE_AMOUNT' as TEXT) as relation_column,\n            cast('FLOAT' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('TOTAL_COST_AMOUNT' as TEXT) as relation_column,\n            cast('FLOAT' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_TYPE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_1' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_2' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_3' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_4' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_5' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_6' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_7' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_8' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_9' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_10' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_11' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_12' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_13' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_14' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_15' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_16' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_17' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_18' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_19' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_20' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_21' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_22' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_23' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_24' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_25' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_1' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_2' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_3' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_4' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_5' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_6' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_7' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_8' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_9' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_10' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_11' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_12' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_13' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_14' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_15' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_16' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_17' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_18' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_19' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_20' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_21' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_22' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_23' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_24' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_25' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_TYPE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_1' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_2' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_3' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_4' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_5' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_6' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_7' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_8' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_9' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_10' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_11' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_12' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_13' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_14' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_15' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_16' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_17' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_18' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_19' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_20' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_21' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_22' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_23' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_24' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_25' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_1' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_2' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_3' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_4' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_5' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_6' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_7' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_8' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_9' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_10' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_11' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_12' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_13' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_14' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_15' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_16' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_17' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_18' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_19' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_20' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_21' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_22' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_23' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_24' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_25' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('IN_NETWORK_FLAG' as TEXT) as relation_column,\n            cast('NUMBER' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DATA_SOURCE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('FILE_NAME' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('FILE_DATE' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('INGEST_DATETIME' as TEXT) as relation_column,\n            cast('TIMESTAMP_NTZ' as TEXT) as relation_column_type\n        \n        \n    ),\n    test_data as (\n\n        select\n            *\n        from\n            relation_columns\n        where\n            relation_column = 'CLAIM_LINE_END_DATE'\n            and\n            relation_column_type not in ('DATE')\n\n    )\n    select *\n    from test_data", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:13.224913Z", "completed_at": "2025-06-03T19:50:13.574890Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:13.575417Z", "completed_at": "2025-06-03T19:50:13.575421Z"}], "thread_id": "Thread-2", "execution_time": 0.3523411750793457, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_expectations_expect_column_values_to_be_of_type_input_layer__medical_claim_claim_end_date__date.ade4a2a418", "compiled": true, "compiled_code": "with relation_columns as (\n\n        \n        select\n            cast('CLAIM_ID' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('CLAIM_LINE_NUMBER' as TEXT) as relation_column,\n            cast('NUMBER' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('CLAIM_TYPE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PERSON_ID' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('MEMBER_ID' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PAYER' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PLAN' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('CLAIM_START_DATE' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('CLAIM_END_DATE' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('CLAIM_LINE_START_DATE' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('CLAIM_LINE_END_DATE' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('ADMISSION_DATE' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DISCHARGE_DATE' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('ADMIT_SOURCE_CODE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('ADMIT_TYPE_CODE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DISCHARGE_DISPOSITION_CODE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PLACE_OF_SERVICE_CODE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('BILL_TYPE_CODE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DRG_CODE_TYPE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DRG_CODE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('REVENUE_CENTER_CODE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('SERVICE_UNIT_QUANTITY' as TEXT) as relation_column,\n            cast('NUMBER' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('HCPCS_CODE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('HCPCS_MODIFIER_1' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('HCPCS_MODIFIER_2' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('HCPCS_MODIFIER_3' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('HCPCS_MODIFIER_4' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('HCPCS_MODIFIER_5' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('RENDERING_NPI' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('RENDERING_TIN' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('BILLING_NPI' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('BILLING_TIN' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('FACILITY_NPI' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PAID_DATE' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PAID_AMOUNT' as TEXT) as relation_column,\n            cast('FLOAT' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('ALLOWED_AMOUNT' as TEXT) as relation_column,\n            cast('FLOAT' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('CHARGE_AMOUNT' as TEXT) as relation_column,\n            cast('FLOAT' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('COINSURANCE_AMOUNT' as TEXT) as relation_column,\n            cast('FLOAT' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('COPAYMENT_AMOUNT' as TEXT) as relation_column,\n            cast('FLOAT' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DEDUCTIBLE_AMOUNT' as TEXT) as relation_column,\n            cast('FLOAT' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('TOTAL_COST_AMOUNT' as TEXT) as relation_column,\n            cast('FLOAT' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_TYPE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_1' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_2' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_3' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_4' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_5' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_6' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_7' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_8' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_9' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_10' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_11' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_12' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_13' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_14' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_15' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_16' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_17' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_18' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_19' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_20' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_21' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_22' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_23' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_24' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_25' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_1' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_2' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_3' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_4' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_5' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_6' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_7' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_8' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_9' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_10' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_11' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_12' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_13' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_14' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_15' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_16' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_17' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_18' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_19' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_20' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_21' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_22' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_23' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_24' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_25' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_TYPE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_1' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_2' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_3' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_4' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_5' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_6' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_7' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_8' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_9' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_10' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_11' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_12' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_13' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_14' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_15' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_16' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_17' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_18' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_19' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_20' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_21' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_22' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_23' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_24' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_25' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_1' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_2' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_3' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_4' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_5' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_6' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_7' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_8' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_9' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_10' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_11' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_12' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_13' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_14' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_15' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_16' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_17' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_18' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_19' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_20' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_21' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_22' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_23' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_24' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_25' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('IN_NETWORK_FLAG' as TEXT) as relation_column,\n            cast('NUMBER' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DATA_SOURCE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('FILE_NAME' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('FILE_DATE' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('INGEST_DATETIME' as TEXT) as relation_column,\n            cast('TIMESTAMP_NTZ' as TEXT) as relation_column_type\n        \n        \n    ),\n    test_data as (\n\n        select\n            *\n        from\n            relation_columns\n        where\n            relation_column = 'CLAIM_END_DATE'\n            and\n            relation_column_type not in ('DATE')\n\n    )\n    select *\n    from test_data", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:13.415458Z", "completed_at": "2025-06-03T19:50:13.717349Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:13.717626Z", "completed_at": "2025-06-03T19:50:13.717633Z"}], "thread_id": "Thread-3", "execution_time": 0.3027071952819824, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_expectations_expect_column_values_to_be_of_type_input_layer__medical_claim_claim_start_date__date.615f984a34", "compiled": true, "compiled_code": "with relation_columns as (\n\n        \n        select\n            cast('CLAIM_ID' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('CLAIM_LINE_NUMBER' as TEXT) as relation_column,\n            cast('NUMBER' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('CLAIM_TYPE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PERSON_ID' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('MEMBER_ID' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PAYER' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PLAN' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('CLAIM_START_DATE' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('CLAIM_END_DATE' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('CLAIM_LINE_START_DATE' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('CLAIM_LINE_END_DATE' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('ADMISSION_DATE' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DISCHARGE_DATE' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('ADMIT_SOURCE_CODE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('ADMIT_TYPE_CODE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DISCHARGE_DISPOSITION_CODE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PLACE_OF_SERVICE_CODE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('BILL_TYPE_CODE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DRG_CODE_TYPE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DRG_CODE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('REVENUE_CENTER_CODE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('SERVICE_UNIT_QUANTITY' as TEXT) as relation_column,\n            cast('NUMBER' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('HCPCS_CODE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('HCPCS_MODIFIER_1' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('HCPCS_MODIFIER_2' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('HCPCS_MODIFIER_3' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('HCPCS_MODIFIER_4' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('HCPCS_MODIFIER_5' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('RENDERING_NPI' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('RENDERING_TIN' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('BILLING_NPI' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('BILLING_TIN' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('FACILITY_NPI' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PAID_DATE' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PAID_AMOUNT' as TEXT) as relation_column,\n            cast('FLOAT' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('ALLOWED_AMOUNT' as TEXT) as relation_column,\n            cast('FLOAT' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('CHARGE_AMOUNT' as TEXT) as relation_column,\n            cast('FLOAT' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('COINSURANCE_AMOUNT' as TEXT) as relation_column,\n            cast('FLOAT' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('COPAYMENT_AMOUNT' as TEXT) as relation_column,\n            cast('FLOAT' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DEDUCTIBLE_AMOUNT' as TEXT) as relation_column,\n            cast('FLOAT' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('TOTAL_COST_AMOUNT' as TEXT) as relation_column,\n            cast('FLOAT' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_TYPE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_1' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_2' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_3' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_4' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_5' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_6' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_7' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_8' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_9' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_10' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_11' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_12' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_13' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_14' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_15' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_16' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_17' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_18' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_19' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_20' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_21' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_22' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_23' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_24' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_25' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_1' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_2' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_3' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_4' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_5' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_6' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_7' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_8' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_9' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_10' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_11' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_12' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_13' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_14' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_15' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_16' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_17' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_18' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_19' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_20' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_21' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_22' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_23' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_24' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_25' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_TYPE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_1' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_2' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_3' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_4' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_5' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_6' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_7' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_8' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_9' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_10' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_11' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_12' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_13' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_14' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_15' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_16' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_17' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_18' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_19' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_20' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_21' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_22' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_23' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_24' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_25' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_1' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_2' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_3' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_4' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_5' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_6' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_7' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_8' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_9' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_10' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_11' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_12' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_13' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_14' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_15' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_16' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_17' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_18' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_19' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_20' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_21' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_22' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_23' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_24' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_25' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('IN_NETWORK_FLAG' as TEXT) as relation_column,\n            cast('NUMBER' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DATA_SOURCE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('FILE_NAME' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('FILE_DATE' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('INGEST_DATETIME' as TEXT) as relation_column,\n            cast('TIMESTAMP_NTZ' as TEXT) as relation_column_type\n        \n        \n    ),\n    test_data as (\n\n        select\n            *\n        from\n            relation_columns\n        where\n            relation_column = 'CLAIM_START_DATE'\n            and\n            relation_column_type not in ('DATE')\n\n    )\n    select *\n    from test_data", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:13.585888Z", "completed_at": "2025-06-03T19:50:13.795408Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:13.795660Z", "completed_at": "2025-06-03T19:50:13.795667Z"}], "thread_id": "Thread-2", "execution_time": 0.21058416366577148, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_expectations_expect_column_values_to_be_of_type_input_layer__medical_claim_procedure_date_10__date.d552592c6f", "compiled": true, "compiled_code": "with relation_columns as (\n\n        \n        select\n            cast('CLAIM_ID' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('CLAIM_LINE_NUMBER' as TEXT) as relation_column,\n            cast('NUMBER' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('CLAIM_TYPE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PERSON_ID' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('MEMBER_ID' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PAYER' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PLAN' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('CLAIM_START_DATE' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('CLAIM_END_DATE' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('CLAIM_LINE_START_DATE' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('CLAIM_LINE_END_DATE' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('ADMISSION_DATE' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DISCHARGE_DATE' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('ADMIT_SOURCE_CODE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('ADMIT_TYPE_CODE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DISCHARGE_DISPOSITION_CODE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PLACE_OF_SERVICE_CODE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('BILL_TYPE_CODE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DRG_CODE_TYPE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DRG_CODE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('REVENUE_CENTER_CODE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('SERVICE_UNIT_QUANTITY' as TEXT) as relation_column,\n            cast('NUMBER' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('HCPCS_CODE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('HCPCS_MODIFIER_1' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('HCPCS_MODIFIER_2' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('HCPCS_MODIFIER_3' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('HCPCS_MODIFIER_4' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('HCPCS_MODIFIER_5' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('RENDERING_NPI' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('RENDERING_TIN' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('BILLING_NPI' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('BILLING_TIN' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('FACILITY_NPI' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PAID_DATE' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PAID_AMOUNT' as TEXT) as relation_column,\n            cast('FLOAT' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('ALLOWED_AMOUNT' as TEXT) as relation_column,\n            cast('FLOAT' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('CHARGE_AMOUNT' as TEXT) as relation_column,\n            cast('FLOAT' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('COINSURANCE_AMOUNT' as TEXT) as relation_column,\n            cast('FLOAT' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('COPAYMENT_AMOUNT' as TEXT) as relation_column,\n            cast('FLOAT' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DEDUCTIBLE_AMOUNT' as TEXT) as relation_column,\n            cast('FLOAT' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('TOTAL_COST_AMOUNT' as TEXT) as relation_column,\n            cast('FLOAT' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_TYPE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_1' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_2' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_3' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_4' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_5' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_6' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_7' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_8' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_9' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_10' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_11' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_12' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_13' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_14' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_15' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_16' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_17' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_18' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_19' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_20' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_21' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_22' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_23' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_24' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_25' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_1' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_2' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_3' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_4' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_5' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_6' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_7' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_8' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_9' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_10' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_11' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_12' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_13' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_14' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_15' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_16' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_17' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_18' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_19' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_20' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_21' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_22' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_23' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_24' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_25' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_TYPE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_1' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_2' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_3' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_4' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_5' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_6' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_7' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_8' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_9' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_10' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_11' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_12' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_13' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_14' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_15' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_16' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_17' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_18' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_19' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_20' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_21' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_22' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_23' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_24' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_25' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_1' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_2' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_3' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_4' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_5' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_6' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_7' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_8' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_9' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_10' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_11' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_12' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_13' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_14' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_15' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_16' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_17' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_18' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_19' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_20' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_21' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_22' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_23' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_24' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_25' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('IN_NETWORK_FLAG' as TEXT) as relation_column,\n            cast('NUMBER' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DATA_SOURCE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('FILE_NAME' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('FILE_DATE' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('INGEST_DATETIME' as TEXT) as relation_column,\n            cast('TIMESTAMP_NTZ' as TEXT) as relation_column_type\n        \n        \n    ),\n    test_data as (\n\n        select\n            *\n        from\n            relation_columns\n        where\n            relation_column = 'PROCEDURE_DATE_10'\n            and\n            relation_column_type not in ('DATE')\n\n    )\n    select *\n    from test_data", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:13.565193Z", "completed_at": "2025-06-03T19:50:13.802835Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:13.812240Z", "completed_at": "2025-06-03T19:50:13.812244Z"}], "thread_id": "Thread-4", "execution_time": 0.24755406379699707, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_expectations_expect_column_values_to_be_of_type_input_layer__medical_claim_discharge_date__date.29f02519a6", "compiled": true, "compiled_code": "with relation_columns as (\n\n        \n        select\n            cast('CLAIM_ID' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('CLAIM_LINE_NUMBER' as TEXT) as relation_column,\n            cast('NUMBER' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('CLAIM_TYPE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PERSON_ID' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('MEMBER_ID' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PAYER' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PLAN' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('CLAIM_START_DATE' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('CLAIM_END_DATE' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('CLAIM_LINE_START_DATE' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('CLAIM_LINE_END_DATE' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('ADMISSION_DATE' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DISCHARGE_DATE' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('ADMIT_SOURCE_CODE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('ADMIT_TYPE_CODE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DISCHARGE_DISPOSITION_CODE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PLACE_OF_SERVICE_CODE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('BILL_TYPE_CODE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DRG_CODE_TYPE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DRG_CODE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('REVENUE_CENTER_CODE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('SERVICE_UNIT_QUANTITY' as TEXT) as relation_column,\n            cast('NUMBER' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('HCPCS_CODE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('HCPCS_MODIFIER_1' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('HCPCS_MODIFIER_2' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('HCPCS_MODIFIER_3' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('HCPCS_MODIFIER_4' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('HCPCS_MODIFIER_5' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('RENDERING_NPI' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('RENDERING_TIN' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('BILLING_NPI' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('BILLING_TIN' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('FACILITY_NPI' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PAID_DATE' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PAID_AMOUNT' as TEXT) as relation_column,\n            cast('FLOAT' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('ALLOWED_AMOUNT' as TEXT) as relation_column,\n            cast('FLOAT' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('CHARGE_AMOUNT' as TEXT) as relation_column,\n            cast('FLOAT' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('COINSURANCE_AMOUNT' as TEXT) as relation_column,\n            cast('FLOAT' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('COPAYMENT_AMOUNT' as TEXT) as relation_column,\n            cast('FLOAT' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DEDUCTIBLE_AMOUNT' as TEXT) as relation_column,\n            cast('FLOAT' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('TOTAL_COST_AMOUNT' as TEXT) as relation_column,\n            cast('FLOAT' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_TYPE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_1' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_2' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_3' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_4' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_5' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_6' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_7' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_8' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_9' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_10' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_11' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_12' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_13' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_14' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_15' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_16' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_17' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_18' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_19' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_20' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_21' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_22' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_23' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_24' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_25' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_1' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_2' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_3' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_4' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_5' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_6' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_7' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_8' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_9' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_10' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_11' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_12' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_13' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_14' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_15' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_16' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_17' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_18' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_19' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_20' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_21' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_22' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_23' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_24' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_25' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_TYPE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_1' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_2' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_3' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_4' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_5' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_6' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_7' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_8' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_9' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_10' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_11' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_12' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_13' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_14' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_15' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_16' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_17' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_18' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_19' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_20' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_21' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_22' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_23' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_24' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_25' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_1' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_2' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_3' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_4' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_5' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_6' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_7' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_8' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_9' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_10' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_11' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_12' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_13' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_14' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_15' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_16' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_17' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_18' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_19' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_20' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_21' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_22' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_23' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_24' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_25' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('IN_NETWORK_FLAG' as TEXT) as relation_column,\n            cast('NUMBER' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DATA_SOURCE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('FILE_NAME' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('FILE_DATE' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('INGEST_DATETIME' as TEXT) as relation_column,\n            cast('TIMESTAMP_NTZ' as TEXT) as relation_column_type\n        \n        \n    ),\n    test_data as (\n\n        select\n            *\n        from\n            relation_columns\n        where\n            relation_column = 'DISCHARGE_DATE'\n            and\n            relation_column_type not in ('DATE')\n\n    )\n    select *\n    from test_data", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:13.576054Z", "completed_at": "2025-06-03T19:50:13.821197Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:13.821857Z", "completed_at": "2025-06-03T19:50:13.821862Z"}], "thread_id": "Thread-1", "execution_time": 0.24729418754577637, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_expectations_expect_column_values_to_be_of_type_input_layer__medical_claim_paid_date__date.01b009a3fc", "compiled": true, "compiled_code": "with relation_columns as (\n\n        \n        select\n            cast('CLAIM_ID' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('CLAIM_LINE_NUMBER' as TEXT) as relation_column,\n            cast('NUMBER' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('CLAIM_TYPE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PERSON_ID' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('MEMBER_ID' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PAYER' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PLAN' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('CLAIM_START_DATE' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('CLAIM_END_DATE' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('CLAIM_LINE_START_DATE' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('CLAIM_LINE_END_DATE' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('ADMISSION_DATE' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DISCHARGE_DATE' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('ADMIT_SOURCE_CODE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('ADMIT_TYPE_CODE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DISCHARGE_DISPOSITION_CODE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PLACE_OF_SERVICE_CODE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('BILL_TYPE_CODE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DRG_CODE_TYPE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DRG_CODE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('REVENUE_CENTER_CODE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('SERVICE_UNIT_QUANTITY' as TEXT) as relation_column,\n            cast('NUMBER' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('HCPCS_CODE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('HCPCS_MODIFIER_1' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('HCPCS_MODIFIER_2' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('HCPCS_MODIFIER_3' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('HCPCS_MODIFIER_4' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('HCPCS_MODIFIER_5' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('RENDERING_NPI' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('RENDERING_TIN' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('BILLING_NPI' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('BILLING_TIN' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('FACILITY_NPI' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PAID_DATE' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PAID_AMOUNT' as TEXT) as relation_column,\n            cast('FLOAT' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('ALLOWED_AMOUNT' as TEXT) as relation_column,\n            cast('FLOAT' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('CHARGE_AMOUNT' as TEXT) as relation_column,\n            cast('FLOAT' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('COINSURANCE_AMOUNT' as TEXT) as relation_column,\n            cast('FLOAT' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('COPAYMENT_AMOUNT' as TEXT) as relation_column,\n            cast('FLOAT' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DEDUCTIBLE_AMOUNT' as TEXT) as relation_column,\n            cast('FLOAT' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('TOTAL_COST_AMOUNT' as TEXT) as relation_column,\n            cast('FLOAT' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_TYPE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_1' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_2' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_3' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_4' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_5' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_6' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_7' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_8' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_9' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_10' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_11' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_12' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_13' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_14' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_15' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_16' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_17' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_18' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_19' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_20' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_21' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_22' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_23' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_24' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_25' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_1' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_2' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_3' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_4' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_5' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_6' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_7' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_8' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_9' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_10' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_11' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_12' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_13' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_14' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_15' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_16' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_17' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_18' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_19' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_20' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_21' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_22' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_23' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_24' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_25' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_TYPE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_1' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_2' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_3' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_4' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_5' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_6' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_7' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_8' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_9' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_10' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_11' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_12' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_13' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_14' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_15' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_16' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_17' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_18' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_19' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_20' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_21' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_22' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_23' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_24' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_25' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_1' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_2' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_3' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_4' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_5' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_6' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_7' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_8' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_9' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_10' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_11' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_12' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_13' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_14' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_15' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_16' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_17' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_18' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_19' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_20' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_21' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_22' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_23' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_24' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_25' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('IN_NETWORK_FLAG' as TEXT) as relation_column,\n            cast('NUMBER' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DATA_SOURCE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('FILE_NAME' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('FILE_DATE' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('INGEST_DATETIME' as TEXT) as relation_column,\n            cast('TIMESTAMP_NTZ' as TEXT) as relation_column_type\n        \n        \n    ),\n    test_data as (\n\n        select\n            *\n        from\n            relation_columns\n        where\n            relation_column = 'PAID_DATE'\n            and\n            relation_column_type not in ('DATE')\n\n    )\n    select *\n    from test_data", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:13.718895Z", "completed_at": "2025-06-03T19:50:13.927480Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:13.940025Z", "completed_at": "2025-06-03T19:50:13.940037Z"}], "thread_id": "Thread-3", "execution_time": 0.22176694869995117, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_expectations_expect_column_values_to_be_of_type_input_layer__medical_claim_procedure_date_11__date.73bbdd483c", "compiled": true, "compiled_code": "with relation_columns as (\n\n        \n        select\n            cast('CLAIM_ID' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('CLAIM_LINE_NUMBER' as TEXT) as relation_column,\n            cast('NUMBER' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('CLAIM_TYPE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PERSON_ID' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('MEMBER_ID' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PAYER' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PLAN' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('CLAIM_START_DATE' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('CLAIM_END_DATE' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('CLAIM_LINE_START_DATE' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('CLAIM_LINE_END_DATE' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('ADMISSION_DATE' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DISCHARGE_DATE' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('ADMIT_SOURCE_CODE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('ADMIT_TYPE_CODE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DISCHARGE_DISPOSITION_CODE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PLACE_OF_SERVICE_CODE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('BILL_TYPE_CODE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DRG_CODE_TYPE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DRG_CODE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('REVENUE_CENTER_CODE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('SERVICE_UNIT_QUANTITY' as TEXT) as relation_column,\n            cast('NUMBER' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('HCPCS_CODE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('HCPCS_MODIFIER_1' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('HCPCS_MODIFIER_2' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('HCPCS_MODIFIER_3' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('HCPCS_MODIFIER_4' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('HCPCS_MODIFIER_5' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('RENDERING_NPI' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('RENDERING_TIN' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('BILLING_NPI' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('BILLING_TIN' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('FACILITY_NPI' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PAID_DATE' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PAID_AMOUNT' as TEXT) as relation_column,\n            cast('FLOAT' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('ALLOWED_AMOUNT' as TEXT) as relation_column,\n            cast('FLOAT' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('CHARGE_AMOUNT' as TEXT) as relation_column,\n            cast('FLOAT' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('COINSURANCE_AMOUNT' as TEXT) as relation_column,\n            cast('FLOAT' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('COPAYMENT_AMOUNT' as TEXT) as relation_column,\n            cast('FLOAT' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DEDUCTIBLE_AMOUNT' as TEXT) as relation_column,\n            cast('FLOAT' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('TOTAL_COST_AMOUNT' as TEXT) as relation_column,\n            cast('FLOAT' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_TYPE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_1' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_2' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_3' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_4' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_5' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_6' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_7' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_8' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_9' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_10' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_11' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_12' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_13' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_14' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_15' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_16' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_17' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_18' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_19' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_20' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_21' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_22' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_23' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_24' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_25' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_1' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_2' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_3' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_4' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_5' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_6' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_7' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_8' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_9' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_10' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_11' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_12' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_13' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_14' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_15' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_16' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_17' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_18' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_19' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_20' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_21' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_22' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_23' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_24' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_25' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_TYPE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_1' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_2' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_3' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_4' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_5' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_6' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_7' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_8' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_9' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_10' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_11' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_12' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_13' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_14' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_15' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_16' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_17' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_18' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_19' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_20' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_21' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_22' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_23' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_24' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_25' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_1' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_2' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_3' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_4' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_5' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_6' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_7' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_8' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_9' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_10' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_11' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_12' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_13' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_14' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_15' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_16' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_17' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_18' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_19' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_20' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_21' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_22' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_23' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_24' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_25' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('IN_NETWORK_FLAG' as TEXT) as relation_column,\n            cast('NUMBER' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DATA_SOURCE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('FILE_NAME' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('FILE_DATE' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('INGEST_DATETIME' as TEXT) as relation_column,\n            cast('TIMESTAMP_NTZ' as TEXT) as relation_column_type\n        \n        \n    ),\n    test_data as (\n\n        select\n            *\n        from\n            relation_columns\n        where\n            relation_column = 'PROCEDURE_DATE_11'\n            and\n            relation_column_type not in ('DATE')\n\n    )\n    select *\n    from test_data", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:13.812668Z", "completed_at": "2025-06-03T19:50:13.984843Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:13.993824Z", "completed_at": "2025-06-03T19:50:13.993831Z"}], "thread_id": "Thread-2", "execution_time": 0.19133210182189941, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_expectations_expect_column_values_to_be_of_type_input_layer__medical_claim_procedure_date_12__date.34697960fd", "compiled": true, "compiled_code": "with relation_columns as (\n\n        \n        select\n            cast('CLAIM_ID' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('CLAIM_LINE_NUMBER' as TEXT) as relation_column,\n            cast('NUMBER' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('CLAIM_TYPE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PERSON_ID' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('MEMBER_ID' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PAYER' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PLAN' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('CLAIM_START_DATE' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('CLAIM_END_DATE' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('CLAIM_LINE_START_DATE' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('CLAIM_LINE_END_DATE' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('ADMISSION_DATE' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DISCHARGE_DATE' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('ADMIT_SOURCE_CODE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('ADMIT_TYPE_CODE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DISCHARGE_DISPOSITION_CODE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PLACE_OF_SERVICE_CODE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('BILL_TYPE_CODE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DRG_CODE_TYPE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DRG_CODE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('REVENUE_CENTER_CODE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('SERVICE_UNIT_QUANTITY' as TEXT) as relation_column,\n            cast('NUMBER' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('HCPCS_CODE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('HCPCS_MODIFIER_1' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('HCPCS_MODIFIER_2' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('HCPCS_MODIFIER_3' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('HCPCS_MODIFIER_4' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('HCPCS_MODIFIER_5' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('RENDERING_NPI' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('RENDERING_TIN' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('BILLING_NPI' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('BILLING_TIN' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('FACILITY_NPI' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PAID_DATE' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PAID_AMOUNT' as TEXT) as relation_column,\n            cast('FLOAT' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('ALLOWED_AMOUNT' as TEXT) as relation_column,\n            cast('FLOAT' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('CHARGE_AMOUNT' as TEXT) as relation_column,\n            cast('FLOAT' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('COINSURANCE_AMOUNT' as TEXT) as relation_column,\n            cast('FLOAT' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('COPAYMENT_AMOUNT' as TEXT) as relation_column,\n            cast('FLOAT' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DEDUCTIBLE_AMOUNT' as TEXT) as relation_column,\n            cast('FLOAT' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('TOTAL_COST_AMOUNT' as TEXT) as relation_column,\n            cast('FLOAT' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_TYPE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_1' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_2' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_3' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_4' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_5' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_6' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_7' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_8' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_9' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_10' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_11' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_12' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_13' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_14' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_15' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_16' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_17' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_18' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_19' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_20' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_21' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_22' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_23' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_24' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_25' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_1' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_2' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_3' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_4' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_5' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_6' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_7' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_8' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_9' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_10' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_11' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_12' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_13' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_14' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_15' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_16' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_17' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_18' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_19' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_20' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_21' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_22' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_23' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_24' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_25' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_TYPE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_1' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_2' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_3' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_4' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_5' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_6' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_7' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_8' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_9' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_10' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_11' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_12' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_13' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_14' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_15' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_16' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_17' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_18' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_19' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_20' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_21' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_22' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_23' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_24' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_25' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_1' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_2' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_3' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_4' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_5' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_6' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_7' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_8' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_9' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_10' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_11' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_12' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_13' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_14' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_15' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_16' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_17' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_18' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_19' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_20' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_21' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_22' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_23' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_24' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_25' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('IN_NETWORK_FLAG' as TEXT) as relation_column,\n            cast('NUMBER' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DATA_SOURCE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('FILE_NAME' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('FILE_DATE' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('INGEST_DATETIME' as TEXT) as relation_column,\n            cast('TIMESTAMP_NTZ' as TEXT) as relation_column_type\n        \n        \n    ),\n    test_data as (\n\n        select\n            *\n        from\n            relation_columns\n        where\n            relation_column = 'PROCEDURE_DATE_12'\n            and\n            relation_column_type not in ('DATE')\n\n    )\n    select *\n    from test_data", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:13.823137Z", "completed_at": "2025-06-03T19:50:14.020674Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:14.031483Z", "completed_at": "2025-06-03T19:50:14.031490Z"}], "thread_id": "Thread-4", "execution_time": 0.21012473106384277, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_expectations_expect_column_values_to_be_of_type_input_layer__medical_claim_procedure_date_13__date.3e13951664", "compiled": true, "compiled_code": "with relation_columns as (\n\n        \n        select\n            cast('CLAIM_ID' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('CLAIM_LINE_NUMBER' as TEXT) as relation_column,\n            cast('NUMBER' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('CLAIM_TYPE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PERSON_ID' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('MEMBER_ID' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PAYER' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PLAN' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('CLAIM_START_DATE' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('CLAIM_END_DATE' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('CLAIM_LINE_START_DATE' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('CLAIM_LINE_END_DATE' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('ADMISSION_DATE' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DISCHARGE_DATE' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('ADMIT_SOURCE_CODE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('ADMIT_TYPE_CODE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DISCHARGE_DISPOSITION_CODE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PLACE_OF_SERVICE_CODE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('BILL_TYPE_CODE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DRG_CODE_TYPE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DRG_CODE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('REVENUE_CENTER_CODE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('SERVICE_UNIT_QUANTITY' as TEXT) as relation_column,\n            cast('NUMBER' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('HCPCS_CODE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('HCPCS_MODIFIER_1' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('HCPCS_MODIFIER_2' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('HCPCS_MODIFIER_3' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('HCPCS_MODIFIER_4' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('HCPCS_MODIFIER_5' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('RENDERING_NPI' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('RENDERING_TIN' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('BILLING_NPI' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('BILLING_TIN' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('FACILITY_NPI' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PAID_DATE' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PAID_AMOUNT' as TEXT) as relation_column,\n            cast('FLOAT' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('ALLOWED_AMOUNT' as TEXT) as relation_column,\n            cast('FLOAT' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('CHARGE_AMOUNT' as TEXT) as relation_column,\n            cast('FLOAT' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('COINSURANCE_AMOUNT' as TEXT) as relation_column,\n            cast('FLOAT' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('COPAYMENT_AMOUNT' as TEXT) as relation_column,\n            cast('FLOAT' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DEDUCTIBLE_AMOUNT' as TEXT) as relation_column,\n            cast('FLOAT' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('TOTAL_COST_AMOUNT' as TEXT) as relation_column,\n            cast('FLOAT' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_TYPE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_1' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_2' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_3' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_4' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_5' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_6' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_7' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_8' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_9' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_10' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_11' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_12' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_13' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_14' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_15' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_16' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_17' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_18' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_19' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_20' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_21' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_22' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_23' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_24' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_25' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_1' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_2' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_3' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_4' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_5' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_6' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_7' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_8' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_9' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_10' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_11' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_12' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_13' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_14' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_15' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_16' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_17' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_18' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_19' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_20' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_21' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_22' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_23' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_24' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_25' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_TYPE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_1' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_2' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_3' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_4' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_5' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_6' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_7' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_8' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_9' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_10' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_11' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_12' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_13' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_14' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_15' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_16' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_17' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_18' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_19' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_20' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_21' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_22' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_23' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_24' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_25' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_1' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_2' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_3' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_4' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_5' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_6' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_7' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_8' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_9' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_10' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_11' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_12' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_13' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_14' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_15' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_16' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_17' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_18' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_19' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_20' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_21' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_22' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_23' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_24' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_25' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('IN_NETWORK_FLAG' as TEXT) as relation_column,\n            cast('NUMBER' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DATA_SOURCE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('FILE_NAME' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('FILE_DATE' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('INGEST_DATETIME' as TEXT) as relation_column,\n            cast('TIMESTAMP_NTZ' as TEXT) as relation_column_type\n        \n        \n    ),\n    test_data as (\n\n        select\n            *\n        from\n            relation_columns\n        where\n            relation_column = 'PROCEDURE_DATE_13'\n            and\n            relation_column_type not in ('DATE')\n\n    )\n    select *\n    from test_data", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:13.832763Z", "completed_at": "2025-06-03T19:50:14.042323Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:14.042565Z", "completed_at": "2025-06-03T19:50:14.042570Z"}], "thread_id": "Thread-1", "execution_time": 0.21112322807312012, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_expectations_expect_column_values_to_be_of_type_input_layer__medical_claim_procedure_date_14__date.bba5d05694", "compiled": true, "compiled_code": "with relation_columns as (\n\n        \n        select\n            cast('CLAIM_ID' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('CLAIM_LINE_NUMBER' as TEXT) as relation_column,\n            cast('NUMBER' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('CLAIM_TYPE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PERSON_ID' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('MEMBER_ID' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PAYER' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PLAN' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('CLAIM_START_DATE' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('CLAIM_END_DATE' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('CLAIM_LINE_START_DATE' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('CLAIM_LINE_END_DATE' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('ADMISSION_DATE' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DISCHARGE_DATE' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('ADMIT_SOURCE_CODE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('ADMIT_TYPE_CODE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DISCHARGE_DISPOSITION_CODE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PLACE_OF_SERVICE_CODE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('BILL_TYPE_CODE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DRG_CODE_TYPE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DRG_CODE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('REVENUE_CENTER_CODE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('SERVICE_UNIT_QUANTITY' as TEXT) as relation_column,\n            cast('NUMBER' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('HCPCS_CODE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('HCPCS_MODIFIER_1' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('HCPCS_MODIFIER_2' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('HCPCS_MODIFIER_3' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('HCPCS_MODIFIER_4' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('HCPCS_MODIFIER_5' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('RENDERING_NPI' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('RENDERING_TIN' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('BILLING_NPI' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('BILLING_TIN' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('FACILITY_NPI' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PAID_DATE' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PAID_AMOUNT' as TEXT) as relation_column,\n            cast('FLOAT' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('ALLOWED_AMOUNT' as TEXT) as relation_column,\n            cast('FLOAT' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('CHARGE_AMOUNT' as TEXT) as relation_column,\n            cast('FLOAT' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('COINSURANCE_AMOUNT' as TEXT) as relation_column,\n            cast('FLOAT' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('COPAYMENT_AMOUNT' as TEXT) as relation_column,\n            cast('FLOAT' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DEDUCTIBLE_AMOUNT' as TEXT) as relation_column,\n            cast('FLOAT' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('TOTAL_COST_AMOUNT' as TEXT) as relation_column,\n            cast('FLOAT' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_TYPE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_1' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_2' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_3' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_4' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_5' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_6' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_7' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_8' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_9' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_10' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_11' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_12' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_13' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_14' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_15' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_16' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_17' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_18' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_19' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_20' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_21' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_22' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_23' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_24' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_25' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_1' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_2' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_3' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_4' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_5' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_6' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_7' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_8' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_9' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_10' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_11' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_12' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_13' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_14' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_15' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_16' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_17' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_18' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_19' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_20' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_21' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_22' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_23' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_24' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_25' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_TYPE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_1' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_2' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_3' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_4' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_5' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_6' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_7' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_8' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_9' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_10' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_11' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_12' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_13' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_14' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_15' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_16' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_17' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_18' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_19' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_20' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_21' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_22' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_23' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_24' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_25' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_1' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_2' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_3' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_4' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_5' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_6' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_7' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_8' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_9' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_10' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_11' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_12' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_13' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_14' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_15' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_16' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_17' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_18' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_19' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_20' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_21' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_22' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_23' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_24' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_25' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('IN_NETWORK_FLAG' as TEXT) as relation_column,\n            cast('NUMBER' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DATA_SOURCE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('FILE_NAME' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('FILE_DATE' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('INGEST_DATETIME' as TEXT) as relation_column,\n            cast('TIMESTAMP_NTZ' as TEXT) as relation_column_type\n        \n        \n    ),\n    test_data as (\n\n        select\n            *\n        from\n            relation_columns\n        where\n            relation_column = 'PROCEDURE_DATE_14'\n            and\n            relation_column_type not in ('DATE')\n\n    )\n    select *\n    from test_data", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:13.947553Z", "completed_at": "2025-06-03T19:50:14.231656Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:14.252306Z", "completed_at": "2025-06-03T19:50:14.252313Z"}], "thread_id": "Thread-3", "execution_time": 0.3052961826324463, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_expectations_expect_column_values_to_be_of_type_input_layer__medical_claim_procedure_date_15__date.50299e9f1c", "compiled": true, "compiled_code": "with relation_columns as (\n\n        \n        select\n            cast('CLAIM_ID' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('CLAIM_LINE_NUMBER' as TEXT) as relation_column,\n            cast('NUMBER' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('CLAIM_TYPE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PERSON_ID' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('MEMBER_ID' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PAYER' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PLAN' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('CLAIM_START_DATE' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('CLAIM_END_DATE' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('CLAIM_LINE_START_DATE' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('CLAIM_LINE_END_DATE' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('ADMISSION_DATE' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DISCHARGE_DATE' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('ADMIT_SOURCE_CODE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('ADMIT_TYPE_CODE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DISCHARGE_DISPOSITION_CODE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PLACE_OF_SERVICE_CODE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('BILL_TYPE_CODE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DRG_CODE_TYPE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DRG_CODE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('REVENUE_CENTER_CODE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('SERVICE_UNIT_QUANTITY' as TEXT) as relation_column,\n            cast('NUMBER' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('HCPCS_CODE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('HCPCS_MODIFIER_1' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('HCPCS_MODIFIER_2' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('HCPCS_MODIFIER_3' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('HCPCS_MODIFIER_4' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('HCPCS_MODIFIER_5' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('RENDERING_NPI' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('RENDERING_TIN' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('BILLING_NPI' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('BILLING_TIN' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('FACILITY_NPI' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PAID_DATE' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PAID_AMOUNT' as TEXT) as relation_column,\n            cast('FLOAT' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('ALLOWED_AMOUNT' as TEXT) as relation_column,\n            cast('FLOAT' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('CHARGE_AMOUNT' as TEXT) as relation_column,\n            cast('FLOAT' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('COINSURANCE_AMOUNT' as TEXT) as relation_column,\n            cast('FLOAT' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('COPAYMENT_AMOUNT' as TEXT) as relation_column,\n            cast('FLOAT' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DEDUCTIBLE_AMOUNT' as TEXT) as relation_column,\n            cast('FLOAT' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('TOTAL_COST_AMOUNT' as TEXT) as relation_column,\n            cast('FLOAT' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_TYPE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_1' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_2' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_3' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_4' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_5' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_6' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_7' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_8' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_9' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_10' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_11' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_12' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_13' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_14' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_15' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_16' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_17' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_18' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_19' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_20' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_21' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_22' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_23' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_24' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_25' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_1' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_2' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_3' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_4' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_5' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_6' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_7' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_8' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_9' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_10' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_11' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_12' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_13' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_14' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_15' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_16' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_17' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_18' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_19' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_20' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_21' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_22' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_23' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_24' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_25' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_TYPE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_1' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_2' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_3' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_4' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_5' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_6' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_7' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_8' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_9' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_10' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_11' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_12' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_13' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_14' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_15' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_16' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_17' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_18' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_19' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_20' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_21' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_22' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_23' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_24' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_25' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_1' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_2' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_3' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_4' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_5' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_6' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_7' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_8' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_9' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_10' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_11' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_12' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_13' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_14' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_15' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_16' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_17' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_18' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_19' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_20' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_21' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_22' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_23' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_24' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_25' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('IN_NETWORK_FLAG' as TEXT) as relation_column,\n            cast('NUMBER' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DATA_SOURCE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('FILE_NAME' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('FILE_DATE' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('INGEST_DATETIME' as TEXT) as relation_column,\n            cast('TIMESTAMP_NTZ' as TEXT) as relation_column_type\n        \n        \n    ),\n    test_data as (\n\n        select\n            *\n        from\n            relation_columns\n        where\n            relation_column = 'PROCEDURE_DATE_15'\n            and\n            relation_column_type not in ('DATE')\n\n    )\n    select *\n    from test_data", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:14.020886Z", "completed_at": "2025-06-03T19:50:14.252871Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:14.253819Z", "completed_at": "2025-06-03T19:50:14.253824Z"}], "thread_id": "Thread-2", "execution_time": 0.24546408653259277, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_expectations_expect_column_values_to_be_of_type_input_layer__medical_claim_procedure_date_16__date.0dc3821b73", "compiled": true, "compiled_code": "with relation_columns as (\n\n        \n        select\n            cast('CLAIM_ID' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('CLAIM_LINE_NUMBER' as TEXT) as relation_column,\n            cast('NUMBER' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('CLAIM_TYPE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PERSON_ID' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('MEMBER_ID' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PAYER' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PLAN' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('CLAIM_START_DATE' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('CLAIM_END_DATE' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('CLAIM_LINE_START_DATE' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('CLAIM_LINE_END_DATE' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('ADMISSION_DATE' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DISCHARGE_DATE' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('ADMIT_SOURCE_CODE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('ADMIT_TYPE_CODE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DISCHARGE_DISPOSITION_CODE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PLACE_OF_SERVICE_CODE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('BILL_TYPE_CODE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DRG_CODE_TYPE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DRG_CODE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('REVENUE_CENTER_CODE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('SERVICE_UNIT_QUANTITY' as TEXT) as relation_column,\n            cast('NUMBER' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('HCPCS_CODE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('HCPCS_MODIFIER_1' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('HCPCS_MODIFIER_2' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('HCPCS_MODIFIER_3' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('HCPCS_MODIFIER_4' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('HCPCS_MODIFIER_5' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('RENDERING_NPI' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('RENDERING_TIN' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('BILLING_NPI' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('BILLING_TIN' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('FACILITY_NPI' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PAID_DATE' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PAID_AMOUNT' as TEXT) as relation_column,\n            cast('FLOAT' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('ALLOWED_AMOUNT' as TEXT) as relation_column,\n            cast('FLOAT' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('CHARGE_AMOUNT' as TEXT) as relation_column,\n            cast('FLOAT' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('COINSURANCE_AMOUNT' as TEXT) as relation_column,\n            cast('FLOAT' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('COPAYMENT_AMOUNT' as TEXT) as relation_column,\n            cast('FLOAT' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DEDUCTIBLE_AMOUNT' as TEXT) as relation_column,\n            cast('FLOAT' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('TOTAL_COST_AMOUNT' as TEXT) as relation_column,\n            cast('FLOAT' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_TYPE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_1' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_2' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_3' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_4' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_5' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_6' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_7' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_8' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_9' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_10' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_11' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_12' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_13' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_14' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_15' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_16' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_17' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_18' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_19' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_20' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_21' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_22' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_23' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_24' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_25' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_1' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_2' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_3' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_4' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_5' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_6' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_7' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_8' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_9' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_10' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_11' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_12' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_13' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_14' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_15' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_16' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_17' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_18' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_19' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_20' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_21' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_22' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_23' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_24' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_25' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_TYPE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_1' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_2' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_3' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_4' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_5' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_6' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_7' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_8' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_9' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_10' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_11' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_12' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_13' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_14' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_15' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_16' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_17' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_18' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_19' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_20' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_21' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_22' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_23' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_24' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_25' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_1' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_2' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_3' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_4' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_5' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_6' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_7' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_8' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_9' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_10' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_11' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_12' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_13' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_14' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_15' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_16' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_17' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_18' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_19' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_20' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_21' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_22' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_23' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_24' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_25' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('IN_NETWORK_FLAG' as TEXT) as relation_column,\n            cast('NUMBER' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DATA_SOURCE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('FILE_NAME' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('FILE_DATE' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('INGEST_DATETIME' as TEXT) as relation_column,\n            cast('TIMESTAMP_NTZ' as TEXT) as relation_column_type\n        \n        \n    ),\n    test_data as (\n\n        select\n            *\n        from\n            relation_columns\n        where\n            relation_column = 'PROCEDURE_DATE_16'\n            and\n            relation_column_type not in ('DATE')\n\n    )\n    select *\n    from test_data", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:14.033286Z", "completed_at": "2025-06-03T19:50:14.253083Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:14.254196Z", "completed_at": "2025-06-03T19:50:14.254200Z"}], "thread_id": "Thread-4", "execution_time": 0.22150683403015137, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_expectations_expect_column_values_to_be_of_type_input_layer__medical_claim_procedure_date_17__date.22c60f28c7", "compiled": true, "compiled_code": "with relation_columns as (\n\n        \n        select\n            cast('CLAIM_ID' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('CLAIM_LINE_NUMBER' as TEXT) as relation_column,\n            cast('NUMBER' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('CLAIM_TYPE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PERSON_ID' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('MEMBER_ID' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PAYER' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PLAN' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('CLAIM_START_DATE' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('CLAIM_END_DATE' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('CLAIM_LINE_START_DATE' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('CLAIM_LINE_END_DATE' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('ADMISSION_DATE' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DISCHARGE_DATE' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('ADMIT_SOURCE_CODE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('ADMIT_TYPE_CODE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DISCHARGE_DISPOSITION_CODE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PLACE_OF_SERVICE_CODE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('BILL_TYPE_CODE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DRG_CODE_TYPE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DRG_CODE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('REVENUE_CENTER_CODE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('SERVICE_UNIT_QUANTITY' as TEXT) as relation_column,\n            cast('NUMBER' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('HCPCS_CODE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('HCPCS_MODIFIER_1' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('HCPCS_MODIFIER_2' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('HCPCS_MODIFIER_3' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('HCPCS_MODIFIER_4' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('HCPCS_MODIFIER_5' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('RENDERING_NPI' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('RENDERING_TIN' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('BILLING_NPI' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('BILLING_TIN' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('FACILITY_NPI' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PAID_DATE' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PAID_AMOUNT' as TEXT) as relation_column,\n            cast('FLOAT' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('ALLOWED_AMOUNT' as TEXT) as relation_column,\n            cast('FLOAT' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('CHARGE_AMOUNT' as TEXT) as relation_column,\n            cast('FLOAT' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('COINSURANCE_AMOUNT' as TEXT) as relation_column,\n            cast('FLOAT' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('COPAYMENT_AMOUNT' as TEXT) as relation_column,\n            cast('FLOAT' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DEDUCTIBLE_AMOUNT' as TEXT) as relation_column,\n            cast('FLOAT' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('TOTAL_COST_AMOUNT' as TEXT) as relation_column,\n            cast('FLOAT' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_TYPE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_1' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_2' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_3' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_4' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_5' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_6' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_7' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_8' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_9' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_10' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_11' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_12' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_13' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_14' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_15' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_16' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_17' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_18' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_19' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_20' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_21' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_22' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_23' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_24' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_25' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_1' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_2' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_3' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_4' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_5' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_6' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_7' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_8' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_9' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_10' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_11' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_12' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_13' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_14' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_15' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_16' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_17' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_18' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_19' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_20' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_21' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_22' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_23' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_24' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_25' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_TYPE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_1' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_2' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_3' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_4' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_5' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_6' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_7' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_8' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_9' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_10' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_11' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_12' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_13' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_14' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_15' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_16' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_17' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_18' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_19' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_20' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_21' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_22' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_23' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_24' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_25' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_1' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_2' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_3' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_4' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_5' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_6' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_7' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_8' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_9' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_10' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_11' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_12' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_13' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_14' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_15' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_16' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_17' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_18' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_19' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_20' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_21' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_22' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_23' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_24' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_25' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('IN_NETWORK_FLAG' as TEXT) as relation_column,\n            cast('NUMBER' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DATA_SOURCE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('FILE_NAME' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('FILE_DATE' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('INGEST_DATETIME' as TEXT) as relation_column,\n            cast('TIMESTAMP_NTZ' as TEXT) as relation_column_type\n        \n        \n    ),\n    test_data as (\n\n        select\n            *\n        from\n            relation_columns\n        where\n            relation_column = 'PROCEDURE_DATE_17'\n            and\n            relation_column_type not in ('DATE')\n\n    )\n    select *\n    from test_data", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:14.043601Z", "completed_at": "2025-06-03T19:50:14.253572Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:14.254798Z", "completed_at": "2025-06-03T19:50:14.254802Z"}], "thread_id": "Thread-1", "execution_time": 0.21168184280395508, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_expectations_expect_column_values_to_be_of_type_input_layer__medical_claim_procedure_date_18__date.b8dfd383bd", "compiled": true, "compiled_code": "with relation_columns as (\n\n        \n        select\n            cast('CLAIM_ID' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('CLAIM_LINE_NUMBER' as TEXT) as relation_column,\n            cast('NUMBER' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('CLAIM_TYPE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PERSON_ID' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('MEMBER_ID' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PAYER' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PLAN' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('CLAIM_START_DATE' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('CLAIM_END_DATE' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('CLAIM_LINE_START_DATE' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('CLAIM_LINE_END_DATE' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('ADMISSION_DATE' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DISCHARGE_DATE' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('ADMIT_SOURCE_CODE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('ADMIT_TYPE_CODE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DISCHARGE_DISPOSITION_CODE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PLACE_OF_SERVICE_CODE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('BILL_TYPE_CODE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DRG_CODE_TYPE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DRG_CODE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('REVENUE_CENTER_CODE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('SERVICE_UNIT_QUANTITY' as TEXT) as relation_column,\n            cast('NUMBER' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('HCPCS_CODE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('HCPCS_MODIFIER_1' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('HCPCS_MODIFIER_2' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('HCPCS_MODIFIER_3' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('HCPCS_MODIFIER_4' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('HCPCS_MODIFIER_5' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('RENDERING_NPI' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('RENDERING_TIN' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('BILLING_NPI' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('BILLING_TIN' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('FACILITY_NPI' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PAID_DATE' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PAID_AMOUNT' as TEXT) as relation_column,\n            cast('FLOAT' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('ALLOWED_AMOUNT' as TEXT) as relation_column,\n            cast('FLOAT' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('CHARGE_AMOUNT' as TEXT) as relation_column,\n            cast('FLOAT' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('COINSURANCE_AMOUNT' as TEXT) as relation_column,\n            cast('FLOAT' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('COPAYMENT_AMOUNT' as TEXT) as relation_column,\n            cast('FLOAT' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DEDUCTIBLE_AMOUNT' as TEXT) as relation_column,\n            cast('FLOAT' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('TOTAL_COST_AMOUNT' as TEXT) as relation_column,\n            cast('FLOAT' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_TYPE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_1' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_2' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_3' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_4' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_5' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_6' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_7' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_8' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_9' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_10' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_11' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_12' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_13' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_14' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_15' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_16' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_17' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_18' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_19' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_20' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_21' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_22' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_23' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_24' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_25' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_1' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_2' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_3' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_4' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_5' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_6' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_7' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_8' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_9' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_10' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_11' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_12' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_13' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_14' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_15' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_16' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_17' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_18' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_19' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_20' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_21' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_22' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_23' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_24' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_25' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_TYPE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_1' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_2' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_3' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_4' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_5' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_6' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_7' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_8' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_9' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_10' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_11' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_12' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_13' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_14' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_15' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_16' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_17' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_18' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_19' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_20' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_21' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_22' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_23' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_24' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_25' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_1' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_2' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_3' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_4' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_5' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_6' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_7' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_8' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_9' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_10' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_11' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_12' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_13' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_14' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_15' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_16' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_17' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_18' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_19' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_20' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_21' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_22' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_23' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_24' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_25' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('IN_NETWORK_FLAG' as TEXT) as relation_column,\n            cast('NUMBER' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DATA_SOURCE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('FILE_NAME' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('FILE_DATE' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('INGEST_DATETIME' as TEXT) as relation_column,\n            cast('TIMESTAMP_NTZ' as TEXT) as relation_column_type\n        \n        \n    ),\n    test_data as (\n\n        select\n            *\n        from\n            relation_columns\n        where\n            relation_column = 'PROCEDURE_DATE_18'\n            and\n            relation_column_type not in ('DATE')\n\n    )\n    select *\n    from test_data", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:14.265789Z", "completed_at": "2025-06-03T19:50:14.597820Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:14.598060Z", "completed_at": "2025-06-03T19:50:14.598067Z"}], "thread_id": "Thread-2", "execution_time": 0.3420860767364502, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_expectations_expect_column_values_to_be_of_type_input_layer__medical_claim_procedure_date_1__date.6a687c24ff", "compiled": true, "compiled_code": "with relation_columns as (\n\n        \n        select\n            cast('CLAIM_ID' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('CLAIM_LINE_NUMBER' as TEXT) as relation_column,\n            cast('NUMBER' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('CLAIM_TYPE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PERSON_ID' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('MEMBER_ID' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PAYER' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PLAN' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('CLAIM_START_DATE' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('CLAIM_END_DATE' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('CLAIM_LINE_START_DATE' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('CLAIM_LINE_END_DATE' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('ADMISSION_DATE' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DISCHARGE_DATE' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('ADMIT_SOURCE_CODE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('ADMIT_TYPE_CODE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DISCHARGE_DISPOSITION_CODE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PLACE_OF_SERVICE_CODE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('BILL_TYPE_CODE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DRG_CODE_TYPE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DRG_CODE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('REVENUE_CENTER_CODE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('SERVICE_UNIT_QUANTITY' as TEXT) as relation_column,\n            cast('NUMBER' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('HCPCS_CODE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('HCPCS_MODIFIER_1' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('HCPCS_MODIFIER_2' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('HCPCS_MODIFIER_3' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('HCPCS_MODIFIER_4' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('HCPCS_MODIFIER_5' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('RENDERING_NPI' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('RENDERING_TIN' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('BILLING_NPI' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('BILLING_TIN' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('FACILITY_NPI' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PAID_DATE' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PAID_AMOUNT' as TEXT) as relation_column,\n            cast('FLOAT' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('ALLOWED_AMOUNT' as TEXT) as relation_column,\n            cast('FLOAT' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('CHARGE_AMOUNT' as TEXT) as relation_column,\n            cast('FLOAT' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('COINSURANCE_AMOUNT' as TEXT) as relation_column,\n            cast('FLOAT' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('COPAYMENT_AMOUNT' as TEXT) as relation_column,\n            cast('FLOAT' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DEDUCTIBLE_AMOUNT' as TEXT) as relation_column,\n            cast('FLOAT' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('TOTAL_COST_AMOUNT' as TEXT) as relation_column,\n            cast('FLOAT' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_TYPE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_1' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_2' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_3' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_4' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_5' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_6' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_7' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_8' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_9' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_10' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_11' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_12' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_13' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_14' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_15' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_16' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_17' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_18' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_19' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_20' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_21' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_22' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_23' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_24' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_25' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_1' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_2' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_3' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_4' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_5' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_6' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_7' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_8' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_9' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_10' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_11' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_12' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_13' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_14' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_15' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_16' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_17' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_18' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_19' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_20' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_21' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_22' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_23' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_24' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_25' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_TYPE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_1' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_2' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_3' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_4' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_5' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_6' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_7' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_8' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_9' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_10' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_11' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_12' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_13' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_14' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_15' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_16' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_17' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_18' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_19' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_20' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_21' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_22' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_23' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_24' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_25' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_1' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_2' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_3' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_4' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_5' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_6' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_7' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_8' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_9' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_10' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_11' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_12' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_13' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_14' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_15' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_16' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_17' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_18' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_19' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_20' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_21' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_22' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_23' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_24' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_25' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('IN_NETWORK_FLAG' as TEXT) as relation_column,\n            cast('NUMBER' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DATA_SOURCE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('FILE_NAME' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('FILE_DATE' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('INGEST_DATETIME' as TEXT) as relation_column,\n            cast('TIMESTAMP_NTZ' as TEXT) as relation_column_type\n        \n        \n    ),\n    test_data as (\n\n        select\n            *\n        from\n            relation_columns\n        where\n            relation_column = 'PROCEDURE_DATE_1'\n            and\n            relation_column_type not in ('DATE')\n\n    )\n    select *\n    from test_data", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:14.256592Z", "completed_at": "2025-06-03T19:50:14.598754Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:14.599682Z", "completed_at": "2025-06-03T19:50:14.599686Z"}], "thread_id": "Thread-3", "execution_time": 0.3451859951019287, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_expectations_expect_column_values_to_be_of_type_input_layer__medical_claim_procedure_date_19__date.460f55ec0d", "compiled": true, "compiled_code": "with relation_columns as (\n\n        \n        select\n            cast('CLAIM_ID' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('CLAIM_LINE_NUMBER' as TEXT) as relation_column,\n            cast('NUMBER' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('CLAIM_TYPE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PERSON_ID' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('MEMBER_ID' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PAYER' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PLAN' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('CLAIM_START_DATE' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('CLAIM_END_DATE' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('CLAIM_LINE_START_DATE' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('CLAIM_LINE_END_DATE' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('ADMISSION_DATE' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DISCHARGE_DATE' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('ADMIT_SOURCE_CODE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('ADMIT_TYPE_CODE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DISCHARGE_DISPOSITION_CODE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PLACE_OF_SERVICE_CODE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('BILL_TYPE_CODE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DRG_CODE_TYPE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DRG_CODE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('REVENUE_CENTER_CODE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('SERVICE_UNIT_QUANTITY' as TEXT) as relation_column,\n            cast('NUMBER' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('HCPCS_CODE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('HCPCS_MODIFIER_1' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('HCPCS_MODIFIER_2' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('HCPCS_MODIFIER_3' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('HCPCS_MODIFIER_4' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('HCPCS_MODIFIER_5' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('RENDERING_NPI' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('RENDERING_TIN' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('BILLING_NPI' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('BILLING_TIN' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('FACILITY_NPI' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PAID_DATE' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PAID_AMOUNT' as TEXT) as relation_column,\n            cast('FLOAT' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('ALLOWED_AMOUNT' as TEXT) as relation_column,\n            cast('FLOAT' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('CHARGE_AMOUNT' as TEXT) as relation_column,\n            cast('FLOAT' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('COINSURANCE_AMOUNT' as TEXT) as relation_column,\n            cast('FLOAT' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('COPAYMENT_AMOUNT' as TEXT) as relation_column,\n            cast('FLOAT' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DEDUCTIBLE_AMOUNT' as TEXT) as relation_column,\n            cast('FLOAT' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('TOTAL_COST_AMOUNT' as TEXT) as relation_column,\n            cast('FLOAT' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_TYPE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_1' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_2' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_3' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_4' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_5' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_6' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_7' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_8' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_9' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_10' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_11' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_12' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_13' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_14' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_15' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_16' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_17' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_18' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_19' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_20' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_21' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_22' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_23' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_24' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_25' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_1' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_2' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_3' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_4' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_5' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_6' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_7' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_8' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_9' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_10' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_11' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_12' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_13' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_14' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_15' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_16' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_17' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_18' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_19' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_20' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_21' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_22' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_23' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_24' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_25' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_TYPE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_1' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_2' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_3' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_4' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_5' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_6' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_7' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_8' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_9' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_10' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_11' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_12' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_13' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_14' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_15' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_16' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_17' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_18' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_19' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_20' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_21' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_22' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_23' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_24' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_25' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_1' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_2' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_3' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_4' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_5' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_6' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_7' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_8' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_9' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_10' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_11' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_12' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_13' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_14' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_15' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_16' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_17' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_18' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_19' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_20' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_21' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_22' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_23' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_24' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_25' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('IN_NETWORK_FLAG' as TEXT) as relation_column,\n            cast('NUMBER' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DATA_SOURCE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('FILE_NAME' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('FILE_DATE' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('INGEST_DATETIME' as TEXT) as relation_column,\n            cast('TIMESTAMP_NTZ' as TEXT) as relation_column_type\n        \n        \n    ),\n    test_data as (\n\n        select\n            *\n        from\n            relation_columns\n        where\n            relation_column = 'PROCEDURE_DATE_19'\n            and\n            relation_column_type not in ('DATE')\n\n    )\n    select *\n    from test_data", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:14.272102Z", "completed_at": "2025-06-03T19:50:14.599001Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:14.600032Z", "completed_at": "2025-06-03T19:50:14.600036Z"}], "thread_id": "Thread-4", "execution_time": 0.3437790870666504, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_expectations_expect_column_values_to_be_of_type_input_layer__medical_claim_procedure_date_20__date.cadfd27a9e", "compiled": true, "compiled_code": "with relation_columns as (\n\n        \n        select\n            cast('CLAIM_ID' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('CLAIM_LINE_NUMBER' as TEXT) as relation_column,\n            cast('NUMBER' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('CLAIM_TYPE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PERSON_ID' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('MEMBER_ID' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PAYER' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PLAN' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('CLAIM_START_DATE' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('CLAIM_END_DATE' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('CLAIM_LINE_START_DATE' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('CLAIM_LINE_END_DATE' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('ADMISSION_DATE' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DISCHARGE_DATE' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('ADMIT_SOURCE_CODE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('ADMIT_TYPE_CODE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DISCHARGE_DISPOSITION_CODE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PLACE_OF_SERVICE_CODE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('BILL_TYPE_CODE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DRG_CODE_TYPE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DRG_CODE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('REVENUE_CENTER_CODE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('SERVICE_UNIT_QUANTITY' as TEXT) as relation_column,\n            cast('NUMBER' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('HCPCS_CODE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('HCPCS_MODIFIER_1' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('HCPCS_MODIFIER_2' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('HCPCS_MODIFIER_3' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('HCPCS_MODIFIER_4' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('HCPCS_MODIFIER_5' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('RENDERING_NPI' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('RENDERING_TIN' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('BILLING_NPI' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('BILLING_TIN' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('FACILITY_NPI' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PAID_DATE' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PAID_AMOUNT' as TEXT) as relation_column,\n            cast('FLOAT' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('ALLOWED_AMOUNT' as TEXT) as relation_column,\n            cast('FLOAT' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('CHARGE_AMOUNT' as TEXT) as relation_column,\n            cast('FLOAT' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('COINSURANCE_AMOUNT' as TEXT) as relation_column,\n            cast('FLOAT' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('COPAYMENT_AMOUNT' as TEXT) as relation_column,\n            cast('FLOAT' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DEDUCTIBLE_AMOUNT' as TEXT) as relation_column,\n            cast('FLOAT' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('TOTAL_COST_AMOUNT' as TEXT) as relation_column,\n            cast('FLOAT' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_TYPE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_1' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_2' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_3' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_4' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_5' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_6' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_7' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_8' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_9' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_10' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_11' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_12' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_13' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_14' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_15' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_16' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_17' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_18' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_19' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_20' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_21' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_22' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_23' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_24' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_25' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_1' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_2' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_3' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_4' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_5' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_6' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_7' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_8' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_9' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_10' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_11' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_12' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_13' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_14' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_15' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_16' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_17' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_18' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_19' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_20' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_21' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_22' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_23' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_24' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_25' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_TYPE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_1' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_2' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_3' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_4' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_5' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_6' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_7' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_8' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_9' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_10' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_11' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_12' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_13' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_14' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_15' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_16' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_17' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_18' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_19' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_20' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_21' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_22' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_23' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_24' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_25' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_1' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_2' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_3' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_4' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_5' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_6' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_7' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_8' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_9' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_10' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_11' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_12' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_13' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_14' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_15' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_16' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_17' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_18' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_19' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_20' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_21' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_22' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_23' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_24' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_25' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('IN_NETWORK_FLAG' as TEXT) as relation_column,\n            cast('NUMBER' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DATA_SOURCE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('FILE_NAME' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('FILE_DATE' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('INGEST_DATETIME' as TEXT) as relation_column,\n            cast('TIMESTAMP_NTZ' as TEXT) as relation_column_type\n        \n        \n    ),\n    test_data as (\n\n        select\n            *\n        from\n            relation_columns\n        where\n            relation_column = 'PROCEDURE_DATE_20'\n            and\n            relation_column_type not in ('DATE')\n\n    )\n    select *\n    from test_data", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:14.374527Z", "completed_at": "2025-06-03T19:50:14.599464Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:14.600603Z", "completed_at": "2025-06-03T19:50:14.600607Z"}], "thread_id": "Thread-1", "execution_time": 0.3359692096710205, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_expectations_expect_column_values_to_be_of_type_input_layer__medical_claim_procedure_date_21__date.bc13a82956", "compiled": true, "compiled_code": "with relation_columns as (\n\n        \n        select\n            cast('CLAIM_ID' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('CLAIM_LINE_NUMBER' as TEXT) as relation_column,\n            cast('NUMBER' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('CLAIM_TYPE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PERSON_ID' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('MEMBER_ID' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PAYER' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PLAN' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('CLAIM_START_DATE' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('CLAIM_END_DATE' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('CLAIM_LINE_START_DATE' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('CLAIM_LINE_END_DATE' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('ADMISSION_DATE' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DISCHARGE_DATE' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('ADMIT_SOURCE_CODE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('ADMIT_TYPE_CODE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DISCHARGE_DISPOSITION_CODE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PLACE_OF_SERVICE_CODE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('BILL_TYPE_CODE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DRG_CODE_TYPE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DRG_CODE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('REVENUE_CENTER_CODE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('SERVICE_UNIT_QUANTITY' as TEXT) as relation_column,\n            cast('NUMBER' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('HCPCS_CODE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('HCPCS_MODIFIER_1' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('HCPCS_MODIFIER_2' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('HCPCS_MODIFIER_3' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('HCPCS_MODIFIER_4' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('HCPCS_MODIFIER_5' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('RENDERING_NPI' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('RENDERING_TIN' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('BILLING_NPI' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('BILLING_TIN' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('FACILITY_NPI' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PAID_DATE' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PAID_AMOUNT' as TEXT) as relation_column,\n            cast('FLOAT' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('ALLOWED_AMOUNT' as TEXT) as relation_column,\n            cast('FLOAT' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('CHARGE_AMOUNT' as TEXT) as relation_column,\n            cast('FLOAT' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('COINSURANCE_AMOUNT' as TEXT) as relation_column,\n            cast('FLOAT' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('COPAYMENT_AMOUNT' as TEXT) as relation_column,\n            cast('FLOAT' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DEDUCTIBLE_AMOUNT' as TEXT) as relation_column,\n            cast('FLOAT' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('TOTAL_COST_AMOUNT' as TEXT) as relation_column,\n            cast('FLOAT' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_TYPE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_1' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_2' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_3' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_4' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_5' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_6' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_7' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_8' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_9' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_10' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_11' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_12' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_13' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_14' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_15' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_16' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_17' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_18' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_19' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_20' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_21' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_22' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_23' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_24' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_25' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_1' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_2' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_3' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_4' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_5' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_6' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_7' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_8' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_9' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_10' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_11' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_12' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_13' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_14' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_15' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_16' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_17' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_18' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_19' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_20' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_21' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_22' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_23' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_24' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_25' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_TYPE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_1' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_2' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_3' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_4' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_5' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_6' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_7' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_8' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_9' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_10' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_11' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_12' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_13' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_14' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_15' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_16' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_17' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_18' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_19' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_20' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_21' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_22' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_23' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_24' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_25' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_1' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_2' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_3' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_4' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_5' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_6' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_7' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_8' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_9' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_10' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_11' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_12' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_13' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_14' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_15' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_16' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_17' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_18' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_19' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_20' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_21' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_22' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_23' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_24' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_25' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('IN_NETWORK_FLAG' as TEXT) as relation_column,\n            cast('NUMBER' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DATA_SOURCE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('FILE_NAME' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('FILE_DATE' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('INGEST_DATETIME' as TEXT) as relation_column,\n            cast('TIMESTAMP_NTZ' as TEXT) as relation_column_type\n        \n        \n    ),\n    test_data as (\n\n        select\n            *\n        from\n            relation_columns\n        where\n            relation_column = 'PROCEDURE_DATE_21'\n            and\n            relation_column_type not in ('DATE')\n\n    )\n    select *\n    from test_data", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:14.627443Z", "completed_at": "2025-06-03T19:50:14.859959Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:14.874085Z", "completed_at": "2025-06-03T19:50:14.874093Z"}], "thread_id": "Thread-1", "execution_time": 0.2636909484863281, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_expectations_expect_column_values_to_be_of_type_input_layer__medical_claim_procedure_date_25__date.d1b299907f", "compiled": true, "compiled_code": "with relation_columns as (\n\n        \n        select\n            cast('CLAIM_ID' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('CLAIM_LINE_NUMBER' as TEXT) as relation_column,\n            cast('NUMBER' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('CLAIM_TYPE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PERSON_ID' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('MEMBER_ID' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PAYER' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PLAN' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('CLAIM_START_DATE' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('CLAIM_END_DATE' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('CLAIM_LINE_START_DATE' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('CLAIM_LINE_END_DATE' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('ADMISSION_DATE' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DISCHARGE_DATE' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('ADMIT_SOURCE_CODE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('ADMIT_TYPE_CODE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DISCHARGE_DISPOSITION_CODE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PLACE_OF_SERVICE_CODE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('BILL_TYPE_CODE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DRG_CODE_TYPE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DRG_CODE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('REVENUE_CENTER_CODE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('SERVICE_UNIT_QUANTITY' as TEXT) as relation_column,\n            cast('NUMBER' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('HCPCS_CODE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('HCPCS_MODIFIER_1' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('HCPCS_MODIFIER_2' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('HCPCS_MODIFIER_3' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('HCPCS_MODIFIER_4' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('HCPCS_MODIFIER_5' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('RENDERING_NPI' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('RENDERING_TIN' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('BILLING_NPI' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('BILLING_TIN' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('FACILITY_NPI' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PAID_DATE' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PAID_AMOUNT' as TEXT) as relation_column,\n            cast('FLOAT' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('ALLOWED_AMOUNT' as TEXT) as relation_column,\n            cast('FLOAT' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('CHARGE_AMOUNT' as TEXT) as relation_column,\n            cast('FLOAT' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('COINSURANCE_AMOUNT' as TEXT) as relation_column,\n            cast('FLOAT' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('COPAYMENT_AMOUNT' as TEXT) as relation_column,\n            cast('FLOAT' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DEDUCTIBLE_AMOUNT' as TEXT) as relation_column,\n            cast('FLOAT' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('TOTAL_COST_AMOUNT' as TEXT) as relation_column,\n            cast('FLOAT' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_TYPE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_1' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_2' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_3' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_4' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_5' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_6' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_7' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_8' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_9' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_10' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_11' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_12' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_13' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_14' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_15' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_16' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_17' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_18' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_19' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_20' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_21' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_22' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_23' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_24' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_25' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_1' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_2' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_3' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_4' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_5' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_6' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_7' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_8' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_9' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_10' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_11' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_12' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_13' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_14' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_15' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_16' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_17' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_18' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_19' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_20' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_21' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_22' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_23' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_24' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_25' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_TYPE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_1' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_2' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_3' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_4' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_5' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_6' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_7' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_8' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_9' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_10' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_11' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_12' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_13' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_14' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_15' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_16' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_17' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_18' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_19' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_20' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_21' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_22' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_23' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_24' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_25' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_1' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_2' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_3' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_4' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_5' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_6' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_7' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_8' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_9' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_10' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_11' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_12' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_13' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_14' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_15' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_16' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_17' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_18' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_19' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_20' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_21' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_22' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_23' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_24' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_25' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('IN_NETWORK_FLAG' as TEXT) as relation_column,\n            cast('NUMBER' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DATA_SOURCE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('FILE_NAME' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('FILE_DATE' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('INGEST_DATETIME' as TEXT) as relation_column,\n            cast('TIMESTAMP_NTZ' as TEXT) as relation_column_type\n        \n        \n    ),\n    test_data as (\n\n        select\n            *\n        from\n            relation_columns\n        where\n            relation_column = 'PROCEDURE_DATE_25'\n            and\n            relation_column_type not in ('DATE')\n\n    )\n    select *\n    from test_data", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:14.601419Z", "completed_at": "2025-06-03T19:50:14.874606Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:14.875553Z", "completed_at": "2025-06-03T19:50:14.875558Z"}], "thread_id": "Thread-2", "execution_time": 0.27638769149780273, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_expectations_expect_column_values_to_be_of_type_input_layer__medical_claim_procedure_date_22__date.9516b96849", "compiled": true, "compiled_code": "with relation_columns as (\n\n        \n        select\n            cast('CLAIM_ID' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('CLAIM_LINE_NUMBER' as TEXT) as relation_column,\n            cast('NUMBER' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('CLAIM_TYPE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PERSON_ID' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('MEMBER_ID' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PAYER' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PLAN' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('CLAIM_START_DATE' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('CLAIM_END_DATE' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('CLAIM_LINE_START_DATE' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('CLAIM_LINE_END_DATE' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('ADMISSION_DATE' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DISCHARGE_DATE' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('ADMIT_SOURCE_CODE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('ADMIT_TYPE_CODE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DISCHARGE_DISPOSITION_CODE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PLACE_OF_SERVICE_CODE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('BILL_TYPE_CODE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DRG_CODE_TYPE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DRG_CODE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('REVENUE_CENTER_CODE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('SERVICE_UNIT_QUANTITY' as TEXT) as relation_column,\n            cast('NUMBER' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('HCPCS_CODE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('HCPCS_MODIFIER_1' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('HCPCS_MODIFIER_2' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('HCPCS_MODIFIER_3' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('HCPCS_MODIFIER_4' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('HCPCS_MODIFIER_5' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('RENDERING_NPI' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('RENDERING_TIN' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('BILLING_NPI' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('BILLING_TIN' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('FACILITY_NPI' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PAID_DATE' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PAID_AMOUNT' as TEXT) as relation_column,\n            cast('FLOAT' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('ALLOWED_AMOUNT' as TEXT) as relation_column,\n            cast('FLOAT' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('CHARGE_AMOUNT' as TEXT) as relation_column,\n            cast('FLOAT' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('COINSURANCE_AMOUNT' as TEXT) as relation_column,\n            cast('FLOAT' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('COPAYMENT_AMOUNT' as TEXT) as relation_column,\n            cast('FLOAT' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DEDUCTIBLE_AMOUNT' as TEXT) as relation_column,\n            cast('FLOAT' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('TOTAL_COST_AMOUNT' as TEXT) as relation_column,\n            cast('FLOAT' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_TYPE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_1' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_2' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_3' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_4' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_5' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_6' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_7' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_8' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_9' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_10' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_11' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_12' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_13' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_14' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_15' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_16' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_17' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_18' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_19' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_20' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_21' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_22' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_23' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_24' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_25' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_1' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_2' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_3' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_4' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_5' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_6' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_7' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_8' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_9' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_10' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_11' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_12' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_13' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_14' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_15' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_16' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_17' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_18' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_19' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_20' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_21' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_22' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_23' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_24' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_25' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_TYPE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_1' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_2' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_3' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_4' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_5' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_6' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_7' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_8' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_9' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_10' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_11' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_12' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_13' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_14' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_15' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_16' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_17' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_18' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_19' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_20' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_21' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_22' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_23' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_24' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_25' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_1' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_2' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_3' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_4' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_5' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_6' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_7' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_8' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_9' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_10' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_11' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_12' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_13' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_14' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_15' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_16' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_17' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_18' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_19' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_20' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_21' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_22' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_23' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_24' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_25' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('IN_NETWORK_FLAG' as TEXT) as relation_column,\n            cast('NUMBER' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DATA_SOURCE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('FILE_NAME' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('FILE_DATE' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('INGEST_DATETIME' as TEXT) as relation_column,\n            cast('TIMESTAMP_NTZ' as TEXT) as relation_column_type\n        \n        \n    ),\n    test_data as (\n\n        select\n            *\n        from\n            relation_columns\n        where\n            relation_column = 'PROCEDURE_DATE_22'\n            and\n            relation_column_type not in ('DATE')\n\n    )\n    select *\n    from test_data", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:14.611897Z", "completed_at": "2025-06-03T19:50:14.874852Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:14.875939Z", "completed_at": "2025-06-03T19:50:14.875943Z"}], "thread_id": "Thread-3", "execution_time": 0.2662379741668701, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_expectations_expect_column_values_to_be_of_type_input_layer__medical_claim_procedure_date_23__date.f12a661900", "compiled": true, "compiled_code": "with relation_columns as (\n\n        \n        select\n            cast('CLAIM_ID' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('CLAIM_LINE_NUMBER' as TEXT) as relation_column,\n            cast('NUMBER' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('CLAIM_TYPE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PERSON_ID' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('MEMBER_ID' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PAYER' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PLAN' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('CLAIM_START_DATE' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('CLAIM_END_DATE' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('CLAIM_LINE_START_DATE' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('CLAIM_LINE_END_DATE' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('ADMISSION_DATE' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DISCHARGE_DATE' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('ADMIT_SOURCE_CODE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('ADMIT_TYPE_CODE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DISCHARGE_DISPOSITION_CODE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PLACE_OF_SERVICE_CODE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('BILL_TYPE_CODE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DRG_CODE_TYPE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DRG_CODE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('REVENUE_CENTER_CODE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('SERVICE_UNIT_QUANTITY' as TEXT) as relation_column,\n            cast('NUMBER' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('HCPCS_CODE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('HCPCS_MODIFIER_1' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('HCPCS_MODIFIER_2' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('HCPCS_MODIFIER_3' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('HCPCS_MODIFIER_4' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('HCPCS_MODIFIER_5' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('RENDERING_NPI' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('RENDERING_TIN' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('BILLING_NPI' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('BILLING_TIN' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('FACILITY_NPI' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PAID_DATE' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PAID_AMOUNT' as TEXT) as relation_column,\n            cast('FLOAT' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('ALLOWED_AMOUNT' as TEXT) as relation_column,\n            cast('FLOAT' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('CHARGE_AMOUNT' as TEXT) as relation_column,\n            cast('FLOAT' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('COINSURANCE_AMOUNT' as TEXT) as relation_column,\n            cast('FLOAT' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('COPAYMENT_AMOUNT' as TEXT) as relation_column,\n            cast('FLOAT' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DEDUCTIBLE_AMOUNT' as TEXT) as relation_column,\n            cast('FLOAT' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('TOTAL_COST_AMOUNT' as TEXT) as relation_column,\n            cast('FLOAT' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_TYPE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_1' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_2' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_3' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_4' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_5' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_6' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_7' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_8' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_9' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_10' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_11' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_12' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_13' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_14' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_15' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_16' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_17' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_18' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_19' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_20' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_21' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_22' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_23' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_24' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_25' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_1' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_2' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_3' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_4' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_5' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_6' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_7' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_8' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_9' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_10' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_11' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_12' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_13' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_14' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_15' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_16' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_17' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_18' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_19' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_20' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_21' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_22' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_23' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_24' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_25' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_TYPE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_1' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_2' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_3' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_4' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_5' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_6' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_7' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_8' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_9' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_10' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_11' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_12' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_13' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_14' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_15' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_16' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_17' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_18' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_19' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_20' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_21' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_22' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_23' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_24' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_25' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_1' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_2' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_3' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_4' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_5' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_6' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_7' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_8' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_9' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_10' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_11' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_12' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_13' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_14' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_15' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_16' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_17' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_18' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_19' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_20' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_21' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_22' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_23' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_24' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_25' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('IN_NETWORK_FLAG' as TEXT) as relation_column,\n            cast('NUMBER' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DATA_SOURCE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('FILE_NAME' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('FILE_DATE' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('INGEST_DATETIME' as TEXT) as relation_column,\n            cast('TIMESTAMP_NTZ' as TEXT) as relation_column_type\n        \n        \n    ),\n    test_data as (\n\n        select\n            *\n        from\n            relation_columns\n        where\n            relation_column = 'PROCEDURE_DATE_23'\n            and\n            relation_column_type not in ('DATE')\n\n    )\n    select *\n    from test_data", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:14.619926Z", "completed_at": "2025-06-03T19:50:14.875348Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:14.876558Z", "completed_at": "2025-06-03T19:50:14.876562Z"}], "thread_id": "Thread-4", "execution_time": 0.2666158676147461, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_expectations_expect_column_values_to_be_of_type_input_layer__medical_claim_procedure_date_24__date.9fb7d9e449", "compiled": true, "compiled_code": "with relation_columns as (\n\n        \n        select\n            cast('CLAIM_ID' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('CLAIM_LINE_NUMBER' as TEXT) as relation_column,\n            cast('NUMBER' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('CLAIM_TYPE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PERSON_ID' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('MEMBER_ID' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PAYER' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PLAN' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('CLAIM_START_DATE' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('CLAIM_END_DATE' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('CLAIM_LINE_START_DATE' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('CLAIM_LINE_END_DATE' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('ADMISSION_DATE' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DISCHARGE_DATE' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('ADMIT_SOURCE_CODE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('ADMIT_TYPE_CODE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DISCHARGE_DISPOSITION_CODE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PLACE_OF_SERVICE_CODE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('BILL_TYPE_CODE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DRG_CODE_TYPE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DRG_CODE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('REVENUE_CENTER_CODE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('SERVICE_UNIT_QUANTITY' as TEXT) as relation_column,\n            cast('NUMBER' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('HCPCS_CODE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('HCPCS_MODIFIER_1' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('HCPCS_MODIFIER_2' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('HCPCS_MODIFIER_3' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('HCPCS_MODIFIER_4' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('HCPCS_MODIFIER_5' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('RENDERING_NPI' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('RENDERING_TIN' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('BILLING_NPI' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('BILLING_TIN' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('FACILITY_NPI' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PAID_DATE' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PAID_AMOUNT' as TEXT) as relation_column,\n            cast('FLOAT' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('ALLOWED_AMOUNT' as TEXT) as relation_column,\n            cast('FLOAT' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('CHARGE_AMOUNT' as TEXT) as relation_column,\n            cast('FLOAT' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('COINSURANCE_AMOUNT' as TEXT) as relation_column,\n            cast('FLOAT' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('COPAYMENT_AMOUNT' as TEXT) as relation_column,\n            cast('FLOAT' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DEDUCTIBLE_AMOUNT' as TEXT) as relation_column,\n            cast('FLOAT' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('TOTAL_COST_AMOUNT' as TEXT) as relation_column,\n            cast('FLOAT' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_TYPE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_1' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_2' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_3' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_4' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_5' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_6' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_7' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_8' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_9' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_10' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_11' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_12' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_13' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_14' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_15' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_16' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_17' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_18' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_19' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_20' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_21' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_22' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_23' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_24' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_25' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_1' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_2' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_3' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_4' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_5' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_6' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_7' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_8' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_9' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_10' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_11' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_12' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_13' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_14' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_15' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_16' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_17' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_18' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_19' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_20' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_21' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_22' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_23' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_24' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_25' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_TYPE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_1' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_2' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_3' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_4' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_5' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_6' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_7' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_8' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_9' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_10' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_11' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_12' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_13' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_14' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_15' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_16' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_17' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_18' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_19' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_20' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_21' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_22' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_23' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_24' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_25' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_1' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_2' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_3' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_4' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_5' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_6' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_7' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_8' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_9' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_10' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_11' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_12' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_13' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_14' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_15' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_16' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_17' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_18' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_19' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_20' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_21' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_22' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_23' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_24' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_25' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('IN_NETWORK_FLAG' as TEXT) as relation_column,\n            cast('NUMBER' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DATA_SOURCE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('FILE_NAME' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('FILE_DATE' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('INGEST_DATETIME' as TEXT) as relation_column,\n            cast('TIMESTAMP_NTZ' as TEXT) as relation_column_type\n        \n        \n    ),\n    test_data as (\n\n        select\n            *\n        from\n            relation_columns\n        where\n            relation_column = 'PROCEDURE_DATE_24'\n            and\n            relation_column_type not in ('DATE')\n\n    )\n    select *\n    from test_data", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:14.878323Z", "completed_at": "2025-06-03T19:50:15.056580Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:15.073613Z", "completed_at": "2025-06-03T19:50:15.073622Z"}], "thread_id": "Thread-1", "execution_time": 0.19739174842834473, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_expectations_expect_column_values_to_be_of_type_input_layer__medical_claim_procedure_date_2__date.2e2ee70542", "compiled": true, "compiled_code": "with relation_columns as (\n\n        \n        select\n            cast('CLAIM_ID' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('CLAIM_LINE_NUMBER' as TEXT) as relation_column,\n            cast('NUMBER' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('CLAIM_TYPE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PERSON_ID' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('MEMBER_ID' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PAYER' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PLAN' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('CLAIM_START_DATE' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('CLAIM_END_DATE' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('CLAIM_LINE_START_DATE' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('CLAIM_LINE_END_DATE' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('ADMISSION_DATE' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DISCHARGE_DATE' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('ADMIT_SOURCE_CODE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('ADMIT_TYPE_CODE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DISCHARGE_DISPOSITION_CODE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PLACE_OF_SERVICE_CODE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('BILL_TYPE_CODE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DRG_CODE_TYPE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DRG_CODE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('REVENUE_CENTER_CODE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('SERVICE_UNIT_QUANTITY' as TEXT) as relation_column,\n            cast('NUMBER' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('HCPCS_CODE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('HCPCS_MODIFIER_1' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('HCPCS_MODIFIER_2' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('HCPCS_MODIFIER_3' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('HCPCS_MODIFIER_4' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('HCPCS_MODIFIER_5' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('RENDERING_NPI' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('RENDERING_TIN' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('BILLING_NPI' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('BILLING_TIN' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('FACILITY_NPI' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PAID_DATE' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PAID_AMOUNT' as TEXT) as relation_column,\n            cast('FLOAT' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('ALLOWED_AMOUNT' as TEXT) as relation_column,\n            cast('FLOAT' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('CHARGE_AMOUNT' as TEXT) as relation_column,\n            cast('FLOAT' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('COINSURANCE_AMOUNT' as TEXT) as relation_column,\n            cast('FLOAT' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('COPAYMENT_AMOUNT' as TEXT) as relation_column,\n            cast('FLOAT' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DEDUCTIBLE_AMOUNT' as TEXT) as relation_column,\n            cast('FLOAT' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('TOTAL_COST_AMOUNT' as TEXT) as relation_column,\n            cast('FLOAT' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_TYPE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_1' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_2' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_3' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_4' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_5' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_6' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_7' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_8' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_9' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_10' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_11' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_12' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_13' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_14' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_15' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_16' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_17' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_18' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_19' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_20' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_21' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_22' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_23' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_24' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_25' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_1' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_2' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_3' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_4' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_5' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_6' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_7' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_8' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_9' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_10' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_11' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_12' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_13' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_14' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_15' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_16' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_17' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_18' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_19' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_20' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_21' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_22' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_23' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_24' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_25' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_TYPE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_1' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_2' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_3' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_4' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_5' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_6' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_7' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_8' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_9' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_10' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_11' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_12' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_13' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_14' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_15' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_16' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_17' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_18' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_19' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_20' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_21' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_22' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_23' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_24' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_25' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_1' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_2' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_3' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_4' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_5' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_6' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_7' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_8' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_9' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_10' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_11' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_12' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_13' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_14' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_15' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_16' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_17' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_18' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_19' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_20' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_21' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_22' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_23' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_24' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_25' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('IN_NETWORK_FLAG' as TEXT) as relation_column,\n            cast('NUMBER' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DATA_SOURCE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('FILE_NAME' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('FILE_DATE' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('INGEST_DATETIME' as TEXT) as relation_column,\n            cast('TIMESTAMP_NTZ' as TEXT) as relation_column_type\n        \n        \n    ),\n    test_data as (\n\n        select\n            *\n        from\n            relation_columns\n        where\n            relation_column = 'PROCEDURE_DATE_2'\n            and\n            relation_column_type not in ('DATE')\n\n    )\n    select *\n    from test_data", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:14.893908Z", "completed_at": "2025-06-03T19:50:15.112211Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:15.116308Z", "completed_at": "2025-06-03T19:50:15.116315Z"}], "thread_id": "Thread-3", "execution_time": 0.23828792572021484, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_expectations_expect_column_values_to_be_of_type_input_layer__medical_claim_procedure_date_4__date.600a802dbc", "compiled": true, "compiled_code": "with relation_columns as (\n\n        \n        select\n            cast('CLAIM_ID' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('CLAIM_LINE_NUMBER' as TEXT) as relation_column,\n            cast('NUMBER' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('CLAIM_TYPE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PERSON_ID' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('MEMBER_ID' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PAYER' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PLAN' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('CLAIM_START_DATE' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('CLAIM_END_DATE' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('CLAIM_LINE_START_DATE' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('CLAIM_LINE_END_DATE' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('ADMISSION_DATE' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DISCHARGE_DATE' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('ADMIT_SOURCE_CODE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('ADMIT_TYPE_CODE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DISCHARGE_DISPOSITION_CODE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PLACE_OF_SERVICE_CODE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('BILL_TYPE_CODE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DRG_CODE_TYPE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DRG_CODE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('REVENUE_CENTER_CODE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('SERVICE_UNIT_QUANTITY' as TEXT) as relation_column,\n            cast('NUMBER' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('HCPCS_CODE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('HCPCS_MODIFIER_1' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('HCPCS_MODIFIER_2' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('HCPCS_MODIFIER_3' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('HCPCS_MODIFIER_4' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('HCPCS_MODIFIER_5' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('RENDERING_NPI' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('RENDERING_TIN' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('BILLING_NPI' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('BILLING_TIN' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('FACILITY_NPI' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PAID_DATE' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PAID_AMOUNT' as TEXT) as relation_column,\n            cast('FLOAT' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('ALLOWED_AMOUNT' as TEXT) as relation_column,\n            cast('FLOAT' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('CHARGE_AMOUNT' as TEXT) as relation_column,\n            cast('FLOAT' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('COINSURANCE_AMOUNT' as TEXT) as relation_column,\n            cast('FLOAT' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('COPAYMENT_AMOUNT' as TEXT) as relation_column,\n            cast('FLOAT' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DEDUCTIBLE_AMOUNT' as TEXT) as relation_column,\n            cast('FLOAT' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('TOTAL_COST_AMOUNT' as TEXT) as relation_column,\n            cast('FLOAT' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_TYPE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_1' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_2' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_3' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_4' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_5' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_6' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_7' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_8' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_9' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_10' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_11' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_12' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_13' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_14' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_15' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_16' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_17' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_18' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_19' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_20' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_21' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_22' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_23' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_24' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_25' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_1' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_2' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_3' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_4' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_5' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_6' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_7' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_8' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_9' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_10' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_11' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_12' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_13' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_14' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_15' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_16' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_17' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_18' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_19' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_20' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_21' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_22' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_23' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_24' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_25' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_TYPE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_1' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_2' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_3' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_4' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_5' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_6' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_7' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_8' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_9' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_10' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_11' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_12' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_13' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_14' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_15' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_16' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_17' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_18' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_19' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_20' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_21' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_22' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_23' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_24' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_25' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_1' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_2' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_3' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_4' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_5' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_6' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_7' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_8' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_9' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_10' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_11' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_12' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_13' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_14' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_15' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_16' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_17' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_18' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_19' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_20' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_21' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_22' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_23' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_24' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_25' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('IN_NETWORK_FLAG' as TEXT) as relation_column,\n            cast('NUMBER' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DATA_SOURCE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('FILE_NAME' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('FILE_DATE' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('INGEST_DATETIME' as TEXT) as relation_column,\n            cast('TIMESTAMP_NTZ' as TEXT) as relation_column_type\n        \n        \n    ),\n    test_data as (\n\n        select\n            *\n        from\n            relation_columns\n        where\n            relation_column = 'PROCEDURE_DATE_4'\n            and\n            relation_column_type not in ('DATE')\n\n    )\n    select *\n    from test_data", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:14.887614Z", "completed_at": "2025-06-03T19:50:15.116814Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:15.117775Z", "completed_at": "2025-06-03T19:50:15.117780Z"}], "thread_id": "Thread-2", "execution_time": 0.23998713493347168, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_expectations_expect_column_values_to_be_of_type_input_layer__medical_claim_procedure_date_3__date.76082ccd2b", "compiled": true, "compiled_code": "with relation_columns as (\n\n        \n        select\n            cast('CLAIM_ID' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('CLAIM_LINE_NUMBER' as TEXT) as relation_column,\n            cast('NUMBER' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('CLAIM_TYPE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PERSON_ID' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('MEMBER_ID' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PAYER' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PLAN' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('CLAIM_START_DATE' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('CLAIM_END_DATE' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('CLAIM_LINE_START_DATE' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('CLAIM_LINE_END_DATE' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('ADMISSION_DATE' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DISCHARGE_DATE' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('ADMIT_SOURCE_CODE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('ADMIT_TYPE_CODE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DISCHARGE_DISPOSITION_CODE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PLACE_OF_SERVICE_CODE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('BILL_TYPE_CODE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DRG_CODE_TYPE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DRG_CODE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('REVENUE_CENTER_CODE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('SERVICE_UNIT_QUANTITY' as TEXT) as relation_column,\n            cast('NUMBER' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('HCPCS_CODE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('HCPCS_MODIFIER_1' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('HCPCS_MODIFIER_2' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('HCPCS_MODIFIER_3' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('HCPCS_MODIFIER_4' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('HCPCS_MODIFIER_5' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('RENDERING_NPI' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('RENDERING_TIN' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('BILLING_NPI' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('BILLING_TIN' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('FACILITY_NPI' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PAID_DATE' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PAID_AMOUNT' as TEXT) as relation_column,\n            cast('FLOAT' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('ALLOWED_AMOUNT' as TEXT) as relation_column,\n            cast('FLOAT' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('CHARGE_AMOUNT' as TEXT) as relation_column,\n            cast('FLOAT' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('COINSURANCE_AMOUNT' as TEXT) as relation_column,\n            cast('FLOAT' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('COPAYMENT_AMOUNT' as TEXT) as relation_column,\n            cast('FLOAT' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DEDUCTIBLE_AMOUNT' as TEXT) as relation_column,\n            cast('FLOAT' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('TOTAL_COST_AMOUNT' as TEXT) as relation_column,\n            cast('FLOAT' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_TYPE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_1' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_2' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_3' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_4' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_5' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_6' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_7' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_8' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_9' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_10' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_11' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_12' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_13' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_14' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_15' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_16' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_17' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_18' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_19' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_20' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_21' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_22' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_23' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_24' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_25' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_1' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_2' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_3' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_4' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_5' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_6' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_7' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_8' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_9' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_10' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_11' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_12' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_13' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_14' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_15' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_16' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_17' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_18' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_19' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_20' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_21' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_22' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_23' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_24' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_25' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_TYPE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_1' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_2' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_3' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_4' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_5' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_6' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_7' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_8' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_9' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_10' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_11' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_12' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_13' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_14' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_15' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_16' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_17' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_18' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_19' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_20' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_21' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_22' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_23' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_24' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_25' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_1' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_2' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_3' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_4' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_5' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_6' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_7' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_8' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_9' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_10' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_11' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_12' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_13' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_14' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_15' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_16' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_17' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_18' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_19' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_20' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_21' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_22' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_23' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_24' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_25' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('IN_NETWORK_FLAG' as TEXT) as relation_column,\n            cast('NUMBER' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DATA_SOURCE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('FILE_NAME' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('FILE_DATE' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('INGEST_DATETIME' as TEXT) as relation_column,\n            cast('TIMESTAMP_NTZ' as TEXT) as relation_column_type\n        \n        \n    ),\n    test_data as (\n\n        select\n            *\n        from\n            relation_columns\n        where\n            relation_column = 'PROCEDURE_DATE_3'\n            and\n            relation_column_type not in ('DATE')\n\n    )\n    select *\n    from test_data", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:14.903650Z", "completed_at": "2025-06-03T19:50:15.117560Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:15.127015Z", "completed_at": "2025-06-03T19:50:15.127023Z"}], "thread_id": "Thread-4", "execution_time": 0.24060416221618652, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_expectations_expect_column_values_to_be_of_type_input_layer__medical_claim_procedure_date_5__date.761ed8d861", "compiled": true, "compiled_code": "with relation_columns as (\n\n        \n        select\n            cast('CLAIM_ID' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('CLAIM_LINE_NUMBER' as TEXT) as relation_column,\n            cast('NUMBER' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('CLAIM_TYPE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PERSON_ID' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('MEMBER_ID' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PAYER' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PLAN' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('CLAIM_START_DATE' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('CLAIM_END_DATE' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('CLAIM_LINE_START_DATE' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('CLAIM_LINE_END_DATE' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('ADMISSION_DATE' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DISCHARGE_DATE' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('ADMIT_SOURCE_CODE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('ADMIT_TYPE_CODE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DISCHARGE_DISPOSITION_CODE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PLACE_OF_SERVICE_CODE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('BILL_TYPE_CODE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DRG_CODE_TYPE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DRG_CODE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('REVENUE_CENTER_CODE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('SERVICE_UNIT_QUANTITY' as TEXT) as relation_column,\n            cast('NUMBER' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('HCPCS_CODE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('HCPCS_MODIFIER_1' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('HCPCS_MODIFIER_2' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('HCPCS_MODIFIER_3' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('HCPCS_MODIFIER_4' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('HCPCS_MODIFIER_5' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('RENDERING_NPI' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('RENDERING_TIN' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('BILLING_NPI' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('BILLING_TIN' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('FACILITY_NPI' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PAID_DATE' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PAID_AMOUNT' as TEXT) as relation_column,\n            cast('FLOAT' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('ALLOWED_AMOUNT' as TEXT) as relation_column,\n            cast('FLOAT' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('CHARGE_AMOUNT' as TEXT) as relation_column,\n            cast('FLOAT' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('COINSURANCE_AMOUNT' as TEXT) as relation_column,\n            cast('FLOAT' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('COPAYMENT_AMOUNT' as TEXT) as relation_column,\n            cast('FLOAT' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DEDUCTIBLE_AMOUNT' as TEXT) as relation_column,\n            cast('FLOAT' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('TOTAL_COST_AMOUNT' as TEXT) as relation_column,\n            cast('FLOAT' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_TYPE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_1' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_2' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_3' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_4' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_5' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_6' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_7' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_8' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_9' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_10' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_11' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_12' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_13' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_14' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_15' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_16' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_17' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_18' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_19' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_20' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_21' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_22' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_23' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_24' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_25' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_1' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_2' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_3' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_4' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_5' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_6' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_7' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_8' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_9' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_10' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_11' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_12' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_13' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_14' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_15' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_16' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_17' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_18' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_19' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_20' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_21' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_22' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_23' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_24' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_25' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_TYPE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_1' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_2' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_3' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_4' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_5' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_6' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_7' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_8' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_9' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_10' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_11' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_12' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_13' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_14' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_15' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_16' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_17' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_18' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_19' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_20' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_21' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_22' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_23' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_24' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_25' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_1' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_2' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_3' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_4' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_5' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_6' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_7' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_8' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_9' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_10' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_11' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_12' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_13' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_14' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_15' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_16' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_17' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_18' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_19' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_20' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_21' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_22' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_23' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_24' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_25' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('IN_NETWORK_FLAG' as TEXT) as relation_column,\n            cast('NUMBER' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DATA_SOURCE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('FILE_NAME' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('FILE_DATE' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('INGEST_DATETIME' as TEXT) as relation_column,\n            cast('TIMESTAMP_NTZ' as TEXT) as relation_column_type\n        \n        \n    ),\n    test_data as (\n\n        select\n            *\n        from\n            relation_columns\n        where\n            relation_column = 'PROCEDURE_DATE_5'\n            and\n            relation_column_type not in ('DATE')\n\n    )\n    select *\n    from test_data", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:15.118139Z", "completed_at": "2025-06-03T19:50:15.372142Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:15.372409Z", "completed_at": "2025-06-03T19:50:15.372415Z"}], "thread_id": "Thread-1", "execution_time": 0.25649118423461914, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_expectations_expect_column_values_to_be_of_type_input_layer__medical_claim_procedure_date_6__date.4e2f1dbd37", "compiled": true, "compiled_code": "with relation_columns as (\n\n        \n        select\n            cast('CLAIM_ID' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('CLAIM_LINE_NUMBER' as TEXT) as relation_column,\n            cast('NUMBER' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('CLAIM_TYPE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PERSON_ID' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('MEMBER_ID' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PAYER' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PLAN' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('CLAIM_START_DATE' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('CLAIM_END_DATE' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('CLAIM_LINE_START_DATE' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('CLAIM_LINE_END_DATE' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('ADMISSION_DATE' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DISCHARGE_DATE' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('ADMIT_SOURCE_CODE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('ADMIT_TYPE_CODE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DISCHARGE_DISPOSITION_CODE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PLACE_OF_SERVICE_CODE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('BILL_TYPE_CODE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DRG_CODE_TYPE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DRG_CODE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('REVENUE_CENTER_CODE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('SERVICE_UNIT_QUANTITY' as TEXT) as relation_column,\n            cast('NUMBER' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('HCPCS_CODE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('HCPCS_MODIFIER_1' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('HCPCS_MODIFIER_2' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('HCPCS_MODIFIER_3' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('HCPCS_MODIFIER_4' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('HCPCS_MODIFIER_5' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('RENDERING_NPI' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('RENDERING_TIN' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('BILLING_NPI' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('BILLING_TIN' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('FACILITY_NPI' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PAID_DATE' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PAID_AMOUNT' as TEXT) as relation_column,\n            cast('FLOAT' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('ALLOWED_AMOUNT' as TEXT) as relation_column,\n            cast('FLOAT' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('CHARGE_AMOUNT' as TEXT) as relation_column,\n            cast('FLOAT' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('COINSURANCE_AMOUNT' as TEXT) as relation_column,\n            cast('FLOAT' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('COPAYMENT_AMOUNT' as TEXT) as relation_column,\n            cast('FLOAT' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DEDUCTIBLE_AMOUNT' as TEXT) as relation_column,\n            cast('FLOAT' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('TOTAL_COST_AMOUNT' as TEXT) as relation_column,\n            cast('FLOAT' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_TYPE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_1' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_2' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_3' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_4' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_5' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_6' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_7' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_8' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_9' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_10' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_11' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_12' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_13' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_14' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_15' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_16' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_17' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_18' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_19' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_20' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_21' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_22' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_23' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_24' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_25' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_1' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_2' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_3' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_4' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_5' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_6' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_7' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_8' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_9' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_10' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_11' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_12' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_13' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_14' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_15' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_16' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_17' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_18' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_19' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_20' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_21' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_22' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_23' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_24' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_25' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_TYPE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_1' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_2' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_3' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_4' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_5' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_6' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_7' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_8' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_9' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_10' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_11' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_12' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_13' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_14' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_15' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_16' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_17' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_18' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_19' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_20' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_21' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_22' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_23' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_24' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_25' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_1' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_2' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_3' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_4' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_5' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_6' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_7' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_8' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_9' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_10' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_11' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_12' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_13' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_14' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_15' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_16' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_17' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_18' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_19' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_20' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_21' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_22' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_23' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_24' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_25' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('IN_NETWORK_FLAG' as TEXT) as relation_column,\n            cast('NUMBER' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DATA_SOURCE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('FILE_NAME' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('FILE_DATE' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('INGEST_DATETIME' as TEXT) as relation_column,\n            cast('TIMESTAMP_NTZ' as TEXT) as relation_column_type\n        \n        \n    ),\n    test_data as (\n\n        select\n            *\n        from\n            relation_columns\n        where\n            relation_column = 'PROCEDURE_DATE_6'\n            and\n            relation_column_type not in ('DATE')\n\n    )\n    select *\n    from test_data", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:15.373979Z", "completed_at": "2025-06-03T19:50:15.405405Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:15.441763Z", "completed_at": "2025-06-03T19:50:15.441775Z"}], "thread_id": "Thread-1", "execution_time": 0.06875085830688477, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_expectations_expect_column_values_to_match_regex_input_layer__medical_claim_admit_type_code___0_59_.dbbe500698", "compiled": true, "compiled_code": "\n\n\n\n\n    with grouped_expression as (\n    select\n        \n        \n    \n  \n\n\n    \nregexp_instr(admit_type_code, '^[0-59]$', 1, 1, 0, '')\n\n\n > 0\n as expression\n\n\n    from tuva.input_layer.input_layer__medical_claim\n    \n\n),\nvalidation_errors as (\n\n    select\n        *\n    from\n        grouped_expression\n    where\n        not(expression = true)\n\n)\n\nselect *\nfrom validation_errors\n\n\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:15.149394Z", "completed_at": "2025-06-03T19:50:15.468334Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:15.469007Z", "completed_at": "2025-06-03T19:50:15.469012Z"}], "thread_id": "Thread-4", "execution_time": 0.33078622817993164, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_expectations_expect_column_values_to_be_of_type_input_layer__medical_claim_procedure_date_9__date.33db4bcb6f", "compiled": true, "compiled_code": "with relation_columns as (\n\n        \n        select\n            cast('CLAIM_ID' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('CLAIM_LINE_NUMBER' as TEXT) as relation_column,\n            cast('NUMBER' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('CLAIM_TYPE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PERSON_ID' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('MEMBER_ID' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PAYER' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PLAN' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('CLAIM_START_DATE' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('CLAIM_END_DATE' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('CLAIM_LINE_START_DATE' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('CLAIM_LINE_END_DATE' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('ADMISSION_DATE' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DISCHARGE_DATE' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('ADMIT_SOURCE_CODE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('ADMIT_TYPE_CODE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DISCHARGE_DISPOSITION_CODE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PLACE_OF_SERVICE_CODE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('BILL_TYPE_CODE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DRG_CODE_TYPE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DRG_CODE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('REVENUE_CENTER_CODE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('SERVICE_UNIT_QUANTITY' as TEXT) as relation_column,\n            cast('NUMBER' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('HCPCS_CODE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('HCPCS_MODIFIER_1' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('HCPCS_MODIFIER_2' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('HCPCS_MODIFIER_3' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('HCPCS_MODIFIER_4' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('HCPCS_MODIFIER_5' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('RENDERING_NPI' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('RENDERING_TIN' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('BILLING_NPI' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('BILLING_TIN' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('FACILITY_NPI' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PAID_DATE' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PAID_AMOUNT' as TEXT) as relation_column,\n            cast('FLOAT' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('ALLOWED_AMOUNT' as TEXT) as relation_column,\n            cast('FLOAT' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('CHARGE_AMOUNT' as TEXT) as relation_column,\n            cast('FLOAT' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('COINSURANCE_AMOUNT' as TEXT) as relation_column,\n            cast('FLOAT' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('COPAYMENT_AMOUNT' as TEXT) as relation_column,\n            cast('FLOAT' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DEDUCTIBLE_AMOUNT' as TEXT) as relation_column,\n            cast('FLOAT' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('TOTAL_COST_AMOUNT' as TEXT) as relation_column,\n            cast('FLOAT' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_TYPE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_1' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_2' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_3' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_4' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_5' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_6' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_7' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_8' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_9' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_10' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_11' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_12' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_13' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_14' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_15' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_16' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_17' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_18' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_19' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_20' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_21' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_22' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_23' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_24' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_25' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_1' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_2' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_3' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_4' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_5' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_6' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_7' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_8' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_9' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_10' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_11' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_12' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_13' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_14' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_15' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_16' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_17' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_18' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_19' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_20' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_21' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_22' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_23' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_24' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_25' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_TYPE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_1' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_2' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_3' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_4' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_5' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_6' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_7' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_8' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_9' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_10' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_11' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_12' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_13' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_14' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_15' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_16' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_17' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_18' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_19' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_20' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_21' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_22' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_23' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_24' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_25' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_1' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_2' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_3' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_4' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_5' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_6' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_7' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_8' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_9' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_10' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_11' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_12' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_13' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_14' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_15' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_16' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_17' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_18' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_19' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_20' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_21' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_22' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_23' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_24' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_25' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('IN_NETWORK_FLAG' as TEXT) as relation_column,\n            cast('NUMBER' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DATA_SOURCE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('FILE_NAME' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('FILE_DATE' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('INGEST_DATETIME' as TEXT) as relation_column,\n            cast('TIMESTAMP_NTZ' as TEXT) as relation_column_type\n        \n        \n    ),\n    test_data as (\n\n        select\n            *\n        from\n            relation_columns\n        where\n            relation_column = 'PROCEDURE_DATE_9'\n            and\n            relation_column_type not in ('DATE')\n\n    )\n    select *\n    from test_data", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:15.128838Z", "completed_at": "2025-06-03T19:50:15.468782Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:15.475386Z", "completed_at": "2025-06-03T19:50:15.475392Z"}], "thread_id": "Thread-3", "execution_time": 0.3487517833709717, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_expectations_expect_column_values_to_be_of_type_input_layer__medical_claim_procedure_date_7__date.bbe37aad98", "compiled": true, "compiled_code": "with relation_columns as (\n\n        \n        select\n            cast('CLAIM_ID' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('CLAIM_LINE_NUMBER' as TEXT) as relation_column,\n            cast('NUMBER' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('CLAIM_TYPE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PERSON_ID' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('MEMBER_ID' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PAYER' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PLAN' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('CLAIM_START_DATE' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('CLAIM_END_DATE' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('CLAIM_LINE_START_DATE' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('CLAIM_LINE_END_DATE' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('ADMISSION_DATE' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DISCHARGE_DATE' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('ADMIT_SOURCE_CODE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('ADMIT_TYPE_CODE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DISCHARGE_DISPOSITION_CODE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PLACE_OF_SERVICE_CODE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('BILL_TYPE_CODE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DRG_CODE_TYPE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DRG_CODE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('REVENUE_CENTER_CODE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('SERVICE_UNIT_QUANTITY' as TEXT) as relation_column,\n            cast('NUMBER' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('HCPCS_CODE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('HCPCS_MODIFIER_1' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('HCPCS_MODIFIER_2' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('HCPCS_MODIFIER_3' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('HCPCS_MODIFIER_4' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('HCPCS_MODIFIER_5' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('RENDERING_NPI' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('RENDERING_TIN' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('BILLING_NPI' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('BILLING_TIN' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('FACILITY_NPI' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PAID_DATE' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PAID_AMOUNT' as TEXT) as relation_column,\n            cast('FLOAT' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('ALLOWED_AMOUNT' as TEXT) as relation_column,\n            cast('FLOAT' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('CHARGE_AMOUNT' as TEXT) as relation_column,\n            cast('FLOAT' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('COINSURANCE_AMOUNT' as TEXT) as relation_column,\n            cast('FLOAT' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('COPAYMENT_AMOUNT' as TEXT) as relation_column,\n            cast('FLOAT' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DEDUCTIBLE_AMOUNT' as TEXT) as relation_column,\n            cast('FLOAT' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('TOTAL_COST_AMOUNT' as TEXT) as relation_column,\n            cast('FLOAT' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_TYPE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_1' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_2' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_3' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_4' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_5' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_6' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_7' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_8' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_9' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_10' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_11' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_12' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_13' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_14' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_15' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_16' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_17' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_18' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_19' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_20' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_21' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_22' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_23' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_24' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_25' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_1' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_2' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_3' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_4' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_5' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_6' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_7' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_8' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_9' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_10' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_11' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_12' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_13' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_14' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_15' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_16' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_17' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_18' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_19' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_20' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_21' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_22' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_23' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_24' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_25' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_TYPE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_1' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_2' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_3' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_4' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_5' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_6' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_7' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_8' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_9' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_10' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_11' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_12' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_13' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_14' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_15' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_16' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_17' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_18' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_19' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_20' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_21' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_22' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_23' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_24' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_25' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_1' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_2' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_3' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_4' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_5' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_6' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_7' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_8' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_9' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_10' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_11' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_12' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_13' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_14' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_15' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_16' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_17' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_18' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_19' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_20' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_21' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_22' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_23' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_24' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_25' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('IN_NETWORK_FLAG' as TEXT) as relation_column,\n            cast('NUMBER' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DATA_SOURCE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('FILE_NAME' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('FILE_DATE' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('INGEST_DATETIME' as TEXT) as relation_column,\n            cast('TIMESTAMP_NTZ' as TEXT) as relation_column_type\n        \n        \n    ),\n    test_data as (\n\n        select\n            *\n        from\n            relation_columns\n        where\n            relation_column = 'PROCEDURE_DATE_7'\n            and\n            relation_column_type not in ('DATE')\n\n    )\n    select *\n    from test_data", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:15.140007Z", "completed_at": "2025-06-03T19:50:15.475154Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:15.476153Z", "completed_at": "2025-06-03T19:50:15.476157Z"}], "thread_id": "Thread-2", "execution_time": 0.3477199077606201, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_expectations_expect_column_values_to_be_of_type_input_layer__medical_claim_procedure_date_8__date.f472adae57", "compiled": true, "compiled_code": "with relation_columns as (\n\n        \n        select\n            cast('CLAIM_ID' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('CLAIM_LINE_NUMBER' as TEXT) as relation_column,\n            cast('NUMBER' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('CLAIM_TYPE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PERSON_ID' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('MEMBER_ID' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PAYER' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PLAN' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('CLAIM_START_DATE' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('CLAIM_END_DATE' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('CLAIM_LINE_START_DATE' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('CLAIM_LINE_END_DATE' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('ADMISSION_DATE' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DISCHARGE_DATE' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('ADMIT_SOURCE_CODE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('ADMIT_TYPE_CODE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DISCHARGE_DISPOSITION_CODE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PLACE_OF_SERVICE_CODE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('BILL_TYPE_CODE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DRG_CODE_TYPE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DRG_CODE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('REVENUE_CENTER_CODE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('SERVICE_UNIT_QUANTITY' as TEXT) as relation_column,\n            cast('NUMBER' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('HCPCS_CODE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('HCPCS_MODIFIER_1' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('HCPCS_MODIFIER_2' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('HCPCS_MODIFIER_3' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('HCPCS_MODIFIER_4' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('HCPCS_MODIFIER_5' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('RENDERING_NPI' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('RENDERING_TIN' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('BILLING_NPI' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('BILLING_TIN' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('FACILITY_NPI' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PAID_DATE' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PAID_AMOUNT' as TEXT) as relation_column,\n            cast('FLOAT' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('ALLOWED_AMOUNT' as TEXT) as relation_column,\n            cast('FLOAT' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('CHARGE_AMOUNT' as TEXT) as relation_column,\n            cast('FLOAT' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('COINSURANCE_AMOUNT' as TEXT) as relation_column,\n            cast('FLOAT' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('COPAYMENT_AMOUNT' as TEXT) as relation_column,\n            cast('FLOAT' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DEDUCTIBLE_AMOUNT' as TEXT) as relation_column,\n            cast('FLOAT' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('TOTAL_COST_AMOUNT' as TEXT) as relation_column,\n            cast('FLOAT' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_TYPE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_1' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_2' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_3' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_4' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_5' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_6' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_7' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_8' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_9' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_10' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_11' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_12' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_13' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_14' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_15' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_16' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_17' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_18' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_19' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_20' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_21' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_22' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_23' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_24' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_CODE_25' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_1' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_2' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_3' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_4' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_5' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_6' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_7' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_8' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_9' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_10' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_11' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_12' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_13' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_14' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_15' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_16' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_17' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_18' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_19' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_20' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_21' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_22' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_23' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_24' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DIAGNOSIS_POA_25' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_TYPE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_1' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_2' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_3' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_4' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_5' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_6' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_7' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_8' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_9' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_10' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_11' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_12' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_13' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_14' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_15' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_16' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_17' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_18' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_19' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_20' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_21' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_22' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_23' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_24' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_CODE_25' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_1' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_2' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_3' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_4' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_5' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_6' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_7' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_8' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_9' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_10' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_11' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_12' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_13' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_14' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_15' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_16' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_17' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_18' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_19' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_20' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_21' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_22' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_23' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_24' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PROCEDURE_DATE_25' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('IN_NETWORK_FLAG' as TEXT) as relation_column,\n            cast('NUMBER' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DATA_SOURCE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('FILE_NAME' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('FILE_DATE' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('INGEST_DATETIME' as TEXT) as relation_column,\n            cast('TIMESTAMP_NTZ' as TEXT) as relation_column_type\n        \n        \n    ),\n    test_data as (\n\n        select\n            *\n        from\n            relation_columns\n        where\n            relation_column = 'PROCEDURE_DATE_8'\n            and\n            relation_column_type not in ('DATE')\n\n    )\n    select *\n    from test_data", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:15.469404Z", "completed_at": "2025-06-03T19:50:15.477094Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:15.478039Z", "completed_at": "2025-06-03T19:50:15.478044Z"}], "thread_id": "Thread-1", "execution_time": 0.018129825592041016, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_expectations_expect_column_values_to_match_regex_input_layer__medical_claim_bill_type_code___0_9_2_0_9A_Za_z_0_0_9_2_0_9A_Za_z_.6fb6f64bdd", "compiled": true, "compiled_code": "\n\n\n\n\n    with grouped_expression as (\n    select\n        \n        \n    \n  \n\n\n    \nregexp_instr(bill_type_code, '^([0-9]{2}[0-9A-Za-z]|0[0-9]{2}[0-9A-Za-z])$', 1, 1, 0, '')\n\n\n > 0\n as expression\n\n\n    from tuva.input_layer.input_layer__medical_claim\n    \n\n),\nvalidation_errors as (\n\n    select\n        *\n    from\n        grouped_expression\n    where\n        not(expression = true)\n\n)\n\nselect *\nfrom validation_errors\n\n\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:15.478852Z", "completed_at": "2025-06-03T19:50:15.496010Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:15.496756Z", "completed_at": "2025-06-03T19:50:15.496762Z"}], "thread_id": "Thread-4", "execution_time": 0.019996166229248047, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_expectations_expect_column_values_to_match_regex_input_layer__medical_claim_billing_npi___0_9_10_.b7b006ac35", "compiled": true, "compiled_code": "\n\n\n\n\n    with grouped_expression as (\n    select\n        \n        \n    \n  \n\n\n    \nregexp_instr(billing_npi, '^[0-9]{10}$', 1, 1, 0, '')\n\n\n > 0\n as expression\n\n\n    from tuva.input_layer.input_layer__medical_claim\n    \n\n),\nvalidation_errors as (\n\n    select\n        *\n    from\n        grouped_expression\n    where\n        not(expression = true)\n\n)\n\nselect *\nfrom validation_errors\n\n\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:15.485087Z", "completed_at": "2025-06-03T19:50:15.496521Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:15.501878Z", "completed_at": "2025-06-03T19:50:15.501883Z"}], "thread_id": "Thread-3", "execution_time": 0.024404048919677734, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_expectations_expect_column_values_to_match_regex_input_layer__medical_claim_facility_npi___0_9_10_.b0bfa570c7", "compiled": true, "compiled_code": "\n\n\n\n\n    with grouped_expression as (\n    select\n        \n        \n    \n  \n\n\n    \nregexp_instr(facility_npi, '^[0-9]{10}$', 1, 1, 0, '')\n\n\n > 0\n as expression\n\n\n    from tuva.input_layer.input_layer__medical_claim\n    \n\n),\nvalidation_errors as (\n\n    select\n        *\n    from\n        grouped_expression\n    where\n        not(expression = true)\n\n)\n\nselect *\nfrom validation_errors\n\n\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:15.490011Z", "completed_at": "2025-06-03T19:50:15.502484Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:15.503352Z", "completed_at": "2025-06-03T19:50:15.503357Z"}], "thread_id": "Thread-2", "execution_time": 0.024996042251586914, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_expectations_expect_column_values_to_match_regex_input_layer__medical_claim_place_of_service_code___0_9_2_.a35366c346", "compiled": true, "compiled_code": "\n\n\n\n\n    with grouped_expression as (\n    select\n        \n        \n    \n  \n\n\n    \nregexp_instr(place_of_service_code, '^[0-9]{2}$', 1, 1, 0, '')\n\n\n > 0\n as expression\n\n\n    from tuva.input_layer.input_layer__medical_claim\n    \n\n),\nvalidation_errors as (\n\n    select\n        *\n    from\n        grouped_expression\n    where\n        not(expression = true)\n\n)\n\nselect *\nfrom validation_errors\n\n\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:15.497153Z", "completed_at": "2025-06-03T19:50:15.503693Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:15.504623Z", "completed_at": "2025-06-03T19:50:15.504627Z"}], "thread_id": "Thread-1", "execution_time": 0.014944076538085938, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_expectations_expect_column_values_to_match_regex_input_layer__medical_claim_rendering_npi___0_9_10_.09fa1e0df7", "compiled": true, "compiled_code": "\n\n\n\n\n    with grouped_expression as (\n    select\n        \n        \n    \n  \n\n\n    \nregexp_instr(rendering_npi, '^[0-9]{10}$', 1, 1, 0, '')\n\n\n > 0\n as expression\n\n\n    from tuva.input_layer.input_layer__medical_claim\n    \n\n),\nvalidation_errors as (\n\n    select\n        *\n    from\n        grouped_expression\n    where\n        not(expression = true)\n\n)\n\nselect *\nfrom validation_errors\n\n\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:15.505212Z", "completed_at": "2025-06-03T19:50:15.521880Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:15.528264Z", "completed_at": "2025-06-03T19:50:15.528271Z"}], "thread_id": "Thread-4", "execution_time": 0.0252530574798584, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_expectations_expect_column_values_to_match_regex_input_layer__medical_claim_revenue_center_code___d_3_01239_d_3_.2f566a76ea", "compiled": true, "compiled_code": "\n\n\n\n\n    with grouped_expression as (\n    select\n        \n        \n    \n  \n\n\n    \nregexp_instr(revenue_center_code, '^(\\\\d{3}|[01239]\\\\d{3})$', 1, 1, 0, '')\n\n\n > 0\n as expression\n\n\n    from tuva.input_layer.input_layer__medical_claim\n    \n\n),\nvalidation_errors as (\n\n    select\n        *\n    from\n        grouped_expression\n    where\n        not(expression = true)\n\n)\n\nselect *\nfrom validation_errors\n\n\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:15.511534Z", "completed_at": "2025-06-03T19:50:15.528646Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:15.534394Z", "completed_at": "2025-06-03T19:50:15.534400Z"}], "thread_id": "Thread-3", "execution_time": 0.03055596351623535, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_expectations_expect_column_values_to_match_regex_list_input_layer__medical_claim_diagnosis_code_10__any___A_Z_0_9A_Z_2_7____A_Z_0_9_1_2_0_9A_Z_1_7____0_9_3_0_9_1_2____0_9_3_5____VE_0_9_3_0_9_1____VE_0_9_2_4___diagnosis_code_1_is_not_null.fe2b3e2c2e", "compiled": true, "compiled_code": "\n\n\n\n\n    with grouped_expression as (\n    select\n        \n        \n    \n  \n    \n    \n\n    \nregexp_instr(diagnosis_code_10, '^[A-Z][0-9A-Z]{2,7}$', 1, 1, 0, '')\n\n\n > 0\n     or \n    \n    \n\n    \nregexp_instr(diagnosis_code_10, '^[A-Z][0-9]{1,2}[.][0-9A-Z]{1,7}$', 1, 1, 0, '')\n\n\n > 0\n     or \n    \n    \n\n    \nregexp_instr(diagnosis_code_10, '^[0-9]{3}([.][0-9]{1,2})?$', 1, 1, 0, '')\n\n\n > 0\n     or \n    \n    \n\n    \nregexp_instr(diagnosis_code_10, '^[0-9]{3,5}$', 1, 1, 0, '')\n\n\n > 0\n     or \n    \n    \n\n    \nregexp_instr(diagnosis_code_10, '^[VE][0-9]{3}([.][0-9]{1})?$', 1, 1, 0, '')\n\n\n > 0\n     or \n    \n    \n\n    \nregexp_instr(diagnosis_code_10, '^[VE][0-9]{2,4}$', 1, 1, 0, '')\n\n\n > 0\n as expression\n\n\n    from tuva.input_layer.input_layer__medical_claim\n    where\n        diagnosis_code_1 is not null\n    \n    \n\n),\nvalidation_errors as (\n\n    select\n        *\n    from\n        grouped_expression\n    where\n        not(expression = true)\n\n)\n\nselect *\nfrom validation_errors\n\n\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:15.522102Z", "completed_at": "2025-06-03T19:50:15.534797Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:15.535630Z", "completed_at": "2025-06-03T19:50:15.535634Z"}], "thread_id": "Thread-2", "execution_time": 0.024671077728271484, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_expectations_expect_column_values_to_match_regex_list_input_layer__medical_claim_diagnosis_code_11__any___A_Z_0_9A_Z_2_7____A_Z_0_9_1_2_0_9A_Z_1_7____0_9_3_0_9_1_2____0_9_3_5____VE_0_9_3_0_9_1____VE_0_9_2_4___diagnosis_code_1_is_not_null.64fd8f0e29", "compiled": true, "compiled_code": "\n\n\n\n\n    with grouped_expression as (\n    select\n        \n        \n    \n  \n    \n    \n\n    \nregexp_instr(diagnosis_code_11, '^[A-Z][0-9A-Z]{2,7}$', 1, 1, 0, '')\n\n\n > 0\n     or \n    \n    \n\n    \nregexp_instr(diagnosis_code_11, '^[A-Z][0-9]{1,2}[.][0-9A-Z]{1,7}$', 1, 1, 0, '')\n\n\n > 0\n     or \n    \n    \n\n    \nregexp_instr(diagnosis_code_11, '^[0-9]{3}([.][0-9]{1,2})?$', 1, 1, 0, '')\n\n\n > 0\n     or \n    \n    \n\n    \nregexp_instr(diagnosis_code_11, '^[0-9]{3,5}$', 1, 1, 0, '')\n\n\n > 0\n     or \n    \n    \n\n    \nregexp_instr(diagnosis_code_11, '^[VE][0-9]{3}([.][0-9]{1})?$', 1, 1, 0, '')\n\n\n > 0\n     or \n    \n    \n\n    \nregexp_instr(diagnosis_code_11, '^[VE][0-9]{2,4}$', 1, 1, 0, '')\n\n\n > 0\n as expression\n\n\n    from tuva.input_layer.input_layer__medical_claim\n    where\n        diagnosis_code_1 is not null\n    \n    \n\n),\nvalidation_errors as (\n\n    select\n        *\n    from\n        grouped_expression\n    where\n        not(expression = true)\n\n)\n\nselect *\nfrom validation_errors\n\n\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:15.528896Z", "completed_at": "2025-06-03T19:50:15.536211Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:15.542099Z", "completed_at": "2025-06-03T19:50:15.542104Z"}], "thread_id": "Thread-1", "execution_time": 0.020609140396118164, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_expectations_expect_column_values_to_match_regex_list_input_layer__medical_claim_diagnosis_code_12__any___A_Z_0_9A_Z_2_7____A_Z_0_9_1_2_0_9A_Z_1_7____0_9_3_0_9_1_2____0_9_3_5____VE_0_9_3_0_9_1____VE_0_9_2_4___diagnosis_code_1_is_not_null.305fd6eb31", "compiled": true, "compiled_code": "\n\n\n\n\n    with grouped_expression as (\n    select\n        \n        \n    \n  \n    \n    \n\n    \nregexp_instr(diagnosis_code_12, '^[A-Z][0-9A-Z]{2,7}$', 1, 1, 0, '')\n\n\n > 0\n     or \n    \n    \n\n    \nregexp_instr(diagnosis_code_12, '^[A-Z][0-9]{1,2}[.][0-9A-Z]{1,7}$', 1, 1, 0, '')\n\n\n > 0\n     or \n    \n    \n\n    \nregexp_instr(diagnosis_code_12, '^[0-9]{3}([.][0-9]{1,2})?$', 1, 1, 0, '')\n\n\n > 0\n     or \n    \n    \n\n    \nregexp_instr(diagnosis_code_12, '^[0-9]{3,5}$', 1, 1, 0, '')\n\n\n > 0\n     or \n    \n    \n\n    \nregexp_instr(diagnosis_code_12, '^[VE][0-9]{3}([.][0-9]{1})?$', 1, 1, 0, '')\n\n\n > 0\n     or \n    \n    \n\n    \nregexp_instr(diagnosis_code_12, '^[VE][0-9]{2,4}$', 1, 1, 0, '')\n\n\n > 0\n as expression\n\n\n    from tuva.input_layer.input_layer__medical_claim\n    where\n        diagnosis_code_1 is not null\n    \n    \n\n),\nvalidation_errors as (\n\n    select\n        *\n    from\n        grouped_expression\n    where\n        not(expression = true)\n\n)\n\nselect *\nfrom validation_errors\n\n\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:15.536947Z", "completed_at": "2025-06-03T19:50:15.549420Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:15.555144Z", "completed_at": "2025-06-03T19:50:15.555151Z"}], "thread_id": "Thread-4", "execution_time": 0.020130157470703125, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_expectations_expect_column_values_to_match_regex_list_input_layer__medical_claim_diagnosis_code_13__any___A_Z_0_9A_Z_2_7____A_Z_0_9_1_2_0_9A_Z_1_7____0_9_3_0_9_1_2____0_9_3_5____VE_0_9_3_0_9_1____VE_0_9_2_4___diagnosis_code_1_is_not_null.6a5fb19a99", "compiled": true, "compiled_code": "\n\n\n\n\n    with grouped_expression as (\n    select\n        \n        \n    \n  \n    \n    \n\n    \nregexp_instr(diagnosis_code_13, '^[A-Z][0-9A-Z]{2,7}$', 1, 1, 0, '')\n\n\n > 0\n     or \n    \n    \n\n    \nregexp_instr(diagnosis_code_13, '^[A-Z][0-9]{1,2}[.][0-9A-Z]{1,7}$', 1, 1, 0, '')\n\n\n > 0\n     or \n    \n    \n\n    \nregexp_instr(diagnosis_code_13, '^[0-9]{3}([.][0-9]{1,2})?$', 1, 1, 0, '')\n\n\n > 0\n     or \n    \n    \n\n    \nregexp_instr(diagnosis_code_13, '^[0-9]{3,5}$', 1, 1, 0, '')\n\n\n > 0\n     or \n    \n    \n\n    \nregexp_instr(diagnosis_code_13, '^[VE][0-9]{3}([.][0-9]{1})?$', 1, 1, 0, '')\n\n\n > 0\n     or \n    \n    \n\n    \nregexp_instr(diagnosis_code_13, '^[VE][0-9]{2,4}$', 1, 1, 0, '')\n\n\n > 0\n as expression\n\n\n    from tuva.input_layer.input_layer__medical_claim\n    where\n        diagnosis_code_1 is not null\n    \n    \n\n),\nvalidation_errors as (\n\n    select\n        *\n    from\n        grouped_expression\n    where\n        not(expression = true)\n\n)\n\nselect *\nfrom validation_errors\n\n\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:15.543289Z", "completed_at": "2025-06-03T19:50:15.555819Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:15.562031Z", "completed_at": "2025-06-03T19:50:15.562036Z"}], "thread_id": "Thread-3", "execution_time": 0.025652170181274414, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_expectations_expect_column_values_to_match_regex_list_input_layer__medical_claim_diagnosis_code_14__any___A_Z_0_9A_Z_2_7____A_Z_0_9_1_2_0_9A_Z_1_7____0_9_3_0_9_1_2____0_9_3_5____VE_0_9_3_0_9_1____VE_0_9_2_4___diagnosis_code_1_is_not_null.4ef49314ae", "compiled": true, "compiled_code": "\n\n\n\n\n    with grouped_expression as (\n    select\n        \n        \n    \n  \n    \n    \n\n    \nregexp_instr(diagnosis_code_14, '^[A-Z][0-9A-Z]{2,7}$', 1, 1, 0, '')\n\n\n > 0\n     or \n    \n    \n\n    \nregexp_instr(diagnosis_code_14, '^[A-Z][0-9]{1,2}[.][0-9A-Z]{1,7}$', 1, 1, 0, '')\n\n\n > 0\n     or \n    \n    \n\n    \nregexp_instr(diagnosis_code_14, '^[0-9]{3}([.][0-9]{1,2})?$', 1, 1, 0, '')\n\n\n > 0\n     or \n    \n    \n\n    \nregexp_instr(diagnosis_code_14, '^[0-9]{3,5}$', 1, 1, 0, '')\n\n\n > 0\n     or \n    \n    \n\n    \nregexp_instr(diagnosis_code_14, '^[VE][0-9]{3}([.][0-9]{1})?$', 1, 1, 0, '')\n\n\n > 0\n     or \n    \n    \n\n    \nregexp_instr(diagnosis_code_14, '^[VE][0-9]{2,4}$', 1, 1, 0, '')\n\n\n > 0\n as expression\n\n\n    from tuva.input_layer.input_layer__medical_claim\n    where\n        diagnosis_code_1 is not null\n    \n    \n\n),\nvalidation_errors as (\n\n    select\n        *\n    from\n        grouped_expression\n    where\n        not(expression = true)\n\n)\n\nselect *\nfrom validation_errors\n\n\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:15.550000Z", "completed_at": "2025-06-03T19:50:15.562683Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:15.563490Z", "completed_at": "2025-06-03T19:50:15.563493Z"}], "thread_id": "Thread-2", "execution_time": 0.020838260650634766, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_expectations_expect_column_values_to_match_regex_list_input_layer__medical_claim_diagnosis_code_15__any___A_Z_0_9A_Z_2_7____A_Z_0_9_1_2_0_9A_Z_1_7____0_9_3_0_9_1_2____0_9_3_5____VE_0_9_3_0_9_1____VE_0_9_2_4___diagnosis_code_1_is_not_null.b4112eeaa0", "compiled": true, "compiled_code": "\n\n\n\n\n    with grouped_expression as (\n    select\n        \n        \n    \n  \n    \n    \n\n    \nregexp_instr(diagnosis_code_15, '^[A-Z][0-9A-Z]{2,7}$', 1, 1, 0, '')\n\n\n > 0\n     or \n    \n    \n\n    \nregexp_instr(diagnosis_code_15, '^[A-Z][0-9]{1,2}[.][0-9A-Z]{1,7}$', 1, 1, 0, '')\n\n\n > 0\n     or \n    \n    \n\n    \nregexp_instr(diagnosis_code_15, '^[0-9]{3}([.][0-9]{1,2})?$', 1, 1, 0, '')\n\n\n > 0\n     or \n    \n    \n\n    \nregexp_instr(diagnosis_code_15, '^[0-9]{3,5}$', 1, 1, 0, '')\n\n\n > 0\n     or \n    \n    \n\n    \nregexp_instr(diagnosis_code_15, '^[VE][0-9]{3}([.][0-9]{1})?$', 1, 1, 0, '')\n\n\n > 0\n     or \n    \n    \n\n    \nregexp_instr(diagnosis_code_15, '^[VE][0-9]{2,4}$', 1, 1, 0, '')\n\n\n > 0\n as expression\n\n\n    from tuva.input_layer.input_layer__medical_claim\n    where\n        diagnosis_code_1 is not null\n    \n    \n\n),\nvalidation_errors as (\n\n    select\n        *\n    from\n        grouped_expression\n    where\n        not(expression = true)\n\n)\n\nselect *\nfrom validation_errors\n\n\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:15.556311Z", "completed_at": "2025-06-03T19:50:15.564092Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:15.569958Z", "completed_at": "2025-06-03T19:50:15.569963Z"}], "thread_id": "Thread-1", "execution_time": 0.020369291305541992, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_expectations_expect_column_values_to_match_regex_list_input_layer__medical_claim_diagnosis_code_16__any___A_Z_0_9A_Z_2_7____A_Z_0_9_1_2_0_9A_Z_1_7____0_9_3_0_9_1_2____0_9_3_5____VE_0_9_3_0_9_1____VE_0_9_2_4___diagnosis_code_1_is_not_null.aff7cb9464", "compiled": true, "compiled_code": "\n\n\n\n\n    with grouped_expression as (\n    select\n        \n        \n    \n  \n    \n    \n\n    \nregexp_instr(diagnosis_code_16, '^[A-Z][0-9A-Z]{2,7}$', 1, 1, 0, '')\n\n\n > 0\n     or \n    \n    \n\n    \nregexp_instr(diagnosis_code_16, '^[A-Z][0-9]{1,2}[.][0-9A-Z]{1,7}$', 1, 1, 0, '')\n\n\n > 0\n     or \n    \n    \n\n    \nregexp_instr(diagnosis_code_16, '^[0-9]{3}([.][0-9]{1,2})?$', 1, 1, 0, '')\n\n\n > 0\n     or \n    \n    \n\n    \nregexp_instr(diagnosis_code_16, '^[0-9]{3,5}$', 1, 1, 0, '')\n\n\n > 0\n     or \n    \n    \n\n    \nregexp_instr(diagnosis_code_16, '^[VE][0-9]{3}([.][0-9]{1})?$', 1, 1, 0, '')\n\n\n > 0\n     or \n    \n    \n\n    \nregexp_instr(diagnosis_code_16, '^[VE][0-9]{2,4}$', 1, 1, 0, '')\n\n\n > 0\n as expression\n\n\n    from tuva.input_layer.input_layer__medical_claim\n    where\n        diagnosis_code_1 is not null\n    \n    \n\n),\nvalidation_errors as (\n\n    select\n        *\n    from\n        grouped_expression\n    where\n        not(expression = true)\n\n)\n\nselect *\nfrom validation_errors\n\n\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:15.564317Z", "completed_at": "2025-06-03T19:50:15.576614Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:15.577456Z", "completed_at": "2025-06-03T19:50:15.577461Z"}], "thread_id": "Thread-4", "execution_time": 0.015079021453857422, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_expectations_expect_column_values_to_match_regex_list_input_layer__medical_claim_diagnosis_code_17__any___A_Z_0_9A_Z_2_7____A_Z_0_9_1_2_0_9A_Z_1_7____0_9_3_0_9_1_2____0_9_3_5____VE_0_9_3_0_9_1____VE_0_9_2_4___diagnosis_code_1_is_not_null.e5da13369c", "compiled": true, "compiled_code": "\n\n\n\n\n    with grouped_expression as (\n    select\n        \n        \n    \n  \n    \n    \n\n    \nregexp_instr(diagnosis_code_17, '^[A-Z][0-9A-Z]{2,7}$', 1, 1, 0, '')\n\n\n > 0\n     or \n    \n    \n\n    \nregexp_instr(diagnosis_code_17, '^[A-Z][0-9]{1,2}[.][0-9A-Z]{1,7}$', 1, 1, 0, '')\n\n\n > 0\n     or \n    \n    \n\n    \nregexp_instr(diagnosis_code_17, '^[0-9]{3}([.][0-9]{1,2})?$', 1, 1, 0, '')\n\n\n > 0\n     or \n    \n    \n\n    \nregexp_instr(diagnosis_code_17, '^[0-9]{3,5}$', 1, 1, 0, '')\n\n\n > 0\n     or \n    \n    \n\n    \nregexp_instr(diagnosis_code_17, '^[VE][0-9]{3}([.][0-9]{1})?$', 1, 1, 0, '')\n\n\n > 0\n     or \n    \n    \n\n    \nregexp_instr(diagnosis_code_17, '^[VE][0-9]{2,4}$', 1, 1, 0, '')\n\n\n > 0\n as expression\n\n\n    from tuva.input_layer.input_layer__medical_claim\n    where\n        diagnosis_code_1 is not null\n    \n    \n\n),\nvalidation_errors as (\n\n    select\n        *\n    from\n        grouped_expression\n    where\n        not(expression = true)\n\n)\n\nselect *\nfrom validation_errors\n\n\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:15.570670Z", "completed_at": "2025-06-03T19:50:15.582937Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:15.583704Z", "completed_at": "2025-06-03T19:50:15.583709Z"}], "thread_id": "Thread-3", "execution_time": 0.019902944564819336, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_expectations_expect_column_values_to_match_regex_list_input_layer__medical_claim_diagnosis_code_18__any___A_Z_0_9A_Z_2_7____A_Z_0_9_1_2_0_9A_Z_1_7____0_9_3_0_9_1_2____0_9_3_5____VE_0_9_3_0_9_1____VE_0_9_2_4___diagnosis_code_1_is_not_null.4300869910", "compiled": true, "compiled_code": "\n\n\n\n\n    with grouped_expression as (\n    select\n        \n        \n    \n  \n    \n    \n\n    \nregexp_instr(diagnosis_code_18, '^[A-Z][0-9A-Z]{2,7}$', 1, 1, 0, '')\n\n\n > 0\n     or \n    \n    \n\n    \nregexp_instr(diagnosis_code_18, '^[A-Z][0-9]{1,2}[.][0-9A-Z]{1,7}$', 1, 1, 0, '')\n\n\n > 0\n     or \n    \n    \n\n    \nregexp_instr(diagnosis_code_18, '^[0-9]{3}([.][0-9]{1,2})?$', 1, 1, 0, '')\n\n\n > 0\n     or \n    \n    \n\n    \nregexp_instr(diagnosis_code_18, '^[0-9]{3,5}$', 1, 1, 0, '')\n\n\n > 0\n     or \n    \n    \n\n    \nregexp_instr(diagnosis_code_18, '^[VE][0-9]{3}([.][0-9]{1})?$', 1, 1, 0, '')\n\n\n > 0\n     or \n    \n    \n\n    \nregexp_instr(diagnosis_code_18, '^[VE][0-9]{2,4}$', 1, 1, 0, '')\n\n\n > 0\n as expression\n\n\n    from tuva.input_layer.input_layer__medical_claim\n    where\n        diagnosis_code_1 is not null\n    \n    \n\n),\nvalidation_errors as (\n\n    select\n        *\n    from\n        grouped_expression\n    where\n        not(expression = true)\n\n)\n\nselect *\nfrom validation_errors\n\n\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:15.577851Z", "completed_at": "2025-06-03T19:50:15.590029Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:15.590808Z", "completed_at": "2025-06-03T19:50:15.590813Z"}], "thread_id": "Thread-2", "execution_time": 0.020478010177612305, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_expectations_expect_column_values_to_match_regex_list_input_layer__medical_claim_diagnosis_code_19__any___A_Z_0_9A_Z_2_7____A_Z_0_9_1_2_0_9A_Z_1_7____0_9_3_0_9_1_2____0_9_3_5____VE_0_9_3_0_9_1____VE_0_9_2_4___diagnosis_code_1_is_not_null.2f34844e27", "compiled": true, "compiled_code": "\n\n\n\n\n    with grouped_expression as (\n    select\n        \n        \n    \n  \n    \n    \n\n    \nregexp_instr(diagnosis_code_19, '^[A-Z][0-9A-Z]{2,7}$', 1, 1, 0, '')\n\n\n > 0\n     or \n    \n    \n\n    \nregexp_instr(diagnosis_code_19, '^[A-Z][0-9]{1,2}[.][0-9A-Z]{1,7}$', 1, 1, 0, '')\n\n\n > 0\n     or \n    \n    \n\n    \nregexp_instr(diagnosis_code_19, '^[0-9]{3}([.][0-9]{1,2})?$', 1, 1, 0, '')\n\n\n > 0\n     or \n    \n    \n\n    \nregexp_instr(diagnosis_code_19, '^[0-9]{3,5}$', 1, 1, 0, '')\n\n\n > 0\n     or \n    \n    \n\n    \nregexp_instr(diagnosis_code_19, '^[VE][0-9]{3}([.][0-9]{1})?$', 1, 1, 0, '')\n\n\n > 0\n     or \n    \n    \n\n    \nregexp_instr(diagnosis_code_19, '^[VE][0-9]{2,4}$', 1, 1, 0, '')\n\n\n > 0\n as expression\n\n\n    from tuva.input_layer.input_layer__medical_claim\n    where\n        diagnosis_code_1 is not null\n    \n    \n\n),\nvalidation_errors as (\n\n    select\n        *\n    from\n        grouped_expression\n    where\n        not(expression = true)\n\n)\n\nselect *\nfrom validation_errors\n\n\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:15.584084Z", "completed_at": "2025-06-03T19:50:15.591450Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:15.597281Z", "completed_at": "2025-06-03T19:50:15.597286Z"}], "thread_id": "Thread-1", "execution_time": 0.020166873931884766, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_expectations_expect_column_values_to_match_regex_list_input_layer__medical_claim_diagnosis_code_1__any___A_Z_0_9A_Z_2_7____A_Z_0_9_1_2_0_9A_Z_1_7____0_9_3_0_9_1_2____0_9_3_5____VE_0_9_3_0_9_1____VE_0_9_2_4___diagnosis_code_1_is_not_null.376d8f9027", "compiled": true, "compiled_code": "\n\n\n\n\n    with grouped_expression as (\n    select\n        \n        \n    \n  \n    \n    \n\n    \nregexp_instr(diagnosis_code_1, '^[A-Z][0-9A-Z]{2,7}$', 1, 1, 0, '')\n\n\n > 0\n     or \n    \n    \n\n    \nregexp_instr(diagnosis_code_1, '^[A-Z][0-9]{1,2}[.][0-9A-Z]{1,7}$', 1, 1, 0, '')\n\n\n > 0\n     or \n    \n    \n\n    \nregexp_instr(diagnosis_code_1, '^[0-9]{3}([.][0-9]{1,2})?$', 1, 1, 0, '')\n\n\n > 0\n     or \n    \n    \n\n    \nregexp_instr(diagnosis_code_1, '^[0-9]{3,5}$', 1, 1, 0, '')\n\n\n > 0\n     or \n    \n    \n\n    \nregexp_instr(diagnosis_code_1, '^[VE][0-9]{3}([.][0-9]{1})?$', 1, 1, 0, '')\n\n\n > 0\n     or \n    \n    \n\n    \nregexp_instr(diagnosis_code_1, '^[VE][0-9]{2,4}$', 1, 1, 0, '')\n\n\n > 0\n as expression\n\n\n    from tuva.input_layer.input_layer__medical_claim\n    where\n        diagnosis_code_1 is not null\n    \n    \n\n),\nvalidation_errors as (\n\n    select\n        *\n    from\n        grouped_expression\n    where\n        not(expression = true)\n\n)\n\nselect *\nfrom validation_errors\n\n\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:15.591655Z", "completed_at": "2025-06-03T19:50:15.604157Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:15.609991Z", "completed_at": "2025-06-03T19:50:15.609999Z"}], "thread_id": "Thread-4", "execution_time": 0.020298004150390625, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_expectations_expect_column_values_to_match_regex_list_input_layer__medical_claim_diagnosis_code_20__any___A_Z_0_9A_Z_2_7____A_Z_0_9_1_2_0_9A_Z_1_7____0_9_3_0_9_1_2____0_9_3_5____VE_0_9_3_0_9_1____VE_0_9_2_4___diagnosis_code_1_is_not_null.51362b87f8", "compiled": true, "compiled_code": "\n\n\n\n\n    with grouped_expression as (\n    select\n        \n        \n    \n  \n    \n    \n\n    \nregexp_instr(diagnosis_code_20, '^[A-Z][0-9A-Z]{2,7}$', 1, 1, 0, '')\n\n\n > 0\n     or \n    \n    \n\n    \nregexp_instr(diagnosis_code_20, '^[A-Z][0-9]{1,2}[.][0-9A-Z]{1,7}$', 1, 1, 0, '')\n\n\n > 0\n     or \n    \n    \n\n    \nregexp_instr(diagnosis_code_20, '^[0-9]{3}([.][0-9]{1,2})?$', 1, 1, 0, '')\n\n\n > 0\n     or \n    \n    \n\n    \nregexp_instr(diagnosis_code_20, '^[0-9]{3,5}$', 1, 1, 0, '')\n\n\n > 0\n     or \n    \n    \n\n    \nregexp_instr(diagnosis_code_20, '^[VE][0-9]{3}([.][0-9]{1})?$', 1, 1, 0, '')\n\n\n > 0\n     or \n    \n    \n\n    \nregexp_instr(diagnosis_code_20, '^[VE][0-9]{2,4}$', 1, 1, 0, '')\n\n\n > 0\n as expression\n\n\n    from tuva.input_layer.input_layer__medical_claim\n    where\n        diagnosis_code_1 is not null\n    \n    \n\n),\nvalidation_errors as (\n\n    select\n        *\n    from\n        grouped_expression\n    where\n        not(expression = true)\n\n)\n\nselect *\nfrom validation_errors\n\n\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:15.597998Z", "completed_at": "2025-06-03T19:50:15.610378Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:15.611165Z", "completed_at": "2025-06-03T19:50:15.611169Z"}], "thread_id": "Thread-3", "execution_time": 0.020026206970214844, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_expectations_expect_column_values_to_match_regex_list_input_layer__medical_claim_diagnosis_code_21__any___A_Z_0_9A_Z_2_7____A_Z_0_9_1_2_0_9A_Z_1_7____0_9_3_0_9_1_2____0_9_3_5____VE_0_9_3_0_9_1____VE_0_9_2_4___diagnosis_code_1_is_not_null.a93b0410cd", "compiled": true, "compiled_code": "\n\n\n\n\n    with grouped_expression as (\n    select\n        \n        \n    \n  \n    \n    \n\n    \nregexp_instr(diagnosis_code_21, '^[A-Z][0-9A-Z]{2,7}$', 1, 1, 0, '')\n\n\n > 0\n     or \n    \n    \n\n    \nregexp_instr(diagnosis_code_21, '^[A-Z][0-9]{1,2}[.][0-9A-Z]{1,7}$', 1, 1, 0, '')\n\n\n > 0\n     or \n    \n    \n\n    \nregexp_instr(diagnosis_code_21, '^[0-9]{3}([.][0-9]{1,2})?$', 1, 1, 0, '')\n\n\n > 0\n     or \n    \n    \n\n    \nregexp_instr(diagnosis_code_21, '^[0-9]{3,5}$', 1, 1, 0, '')\n\n\n > 0\n     or \n    \n    \n\n    \nregexp_instr(diagnosis_code_21, '^[VE][0-9]{3}([.][0-9]{1})?$', 1, 1, 0, '')\n\n\n > 0\n     or \n    \n    \n\n    \nregexp_instr(diagnosis_code_21, '^[VE][0-9]{2,4}$', 1, 1, 0, '')\n\n\n > 0\n as expression\n\n\n    from tuva.input_layer.input_layer__medical_claim\n    where\n        diagnosis_code_1 is not null\n    \n    \n\n),\nvalidation_errors as (\n\n    select\n        *\n    from\n        grouped_expression\n    where\n        not(expression = true)\n\n)\n\nselect *\nfrom validation_errors\n\n\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:15.604770Z", "completed_at": "2025-06-03T19:50:15.611550Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:15.617334Z", "completed_at": "2025-06-03T19:50:15.617338Z"}], "thread_id": "Thread-2", "execution_time": 0.0196688175201416, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_expectations_expect_column_values_to_match_regex_list_input_layer__medical_claim_diagnosis_code_22__any___A_Z_0_9A_Z_2_7____A_Z_0_9_1_2_0_9A_Z_1_7____0_9_3_0_9_1_2____0_9_3_5____VE_0_9_3_0_9_1____VE_0_9_2_4___diagnosis_code_1_is_not_null.797b2e7b54", "compiled": true, "compiled_code": "\n\n\n\n\n    with grouped_expression as (\n    select\n        \n        \n    \n  \n    \n    \n\n    \nregexp_instr(diagnosis_code_22, '^[A-Z][0-9A-Z]{2,7}$', 1, 1, 0, '')\n\n\n > 0\n     or \n    \n    \n\n    \nregexp_instr(diagnosis_code_22, '^[A-Z][0-9]{1,2}[.][0-9A-Z]{1,7}$', 1, 1, 0, '')\n\n\n > 0\n     or \n    \n    \n\n    \nregexp_instr(diagnosis_code_22, '^[0-9]{3}([.][0-9]{1,2})?$', 1, 1, 0, '')\n\n\n > 0\n     or \n    \n    \n\n    \nregexp_instr(diagnosis_code_22, '^[0-9]{3,5}$', 1, 1, 0, '')\n\n\n > 0\n     or \n    \n    \n\n    \nregexp_instr(diagnosis_code_22, '^[VE][0-9]{3}([.][0-9]{1})?$', 1, 1, 0, '')\n\n\n > 0\n     or \n    \n    \n\n    \nregexp_instr(diagnosis_code_22, '^[VE][0-9]{2,4}$', 1, 1, 0, '')\n\n\n > 0\n as expression\n\n\n    from tuva.input_layer.input_layer__medical_claim\n    where\n        diagnosis_code_1 is not null\n    \n    \n\n),\nvalidation_errors as (\n\n    select\n        *\n    from\n        grouped_expression\n    where\n        not(expression = true)\n\n)\n\nselect *\nfrom validation_errors\n\n\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:15.611761Z", "completed_at": "2025-06-03T19:50:15.624317Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:15.625267Z", "completed_at": "2025-06-03T19:50:15.625272Z"}], "thread_id": "Thread-1", "execution_time": 0.020834684371948242, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_expectations_expect_column_values_to_match_regex_list_input_layer__medical_claim_diagnosis_code_23__any___A_Z_0_9A_Z_2_7____A_Z_0_9_1_2_0_9A_Z_1_7____0_9_3_0_9_1_2____0_9_3_5____VE_0_9_3_0_9_1____VE_0_9_2_4___diagnosis_code_1_is_not_null.d305acd6d9", "compiled": true, "compiled_code": "\n\n\n\n\n    with grouped_expression as (\n    select\n        \n        \n    \n  \n    \n    \n\n    \nregexp_instr(diagnosis_code_23, '^[A-Z][0-9A-Z]{2,7}$', 1, 1, 0, '')\n\n\n > 0\n     or \n    \n    \n\n    \nregexp_instr(diagnosis_code_23, '^[A-Z][0-9]{1,2}[.][0-9A-Z]{1,7}$', 1, 1, 0, '')\n\n\n > 0\n     or \n    \n    \n\n    \nregexp_instr(diagnosis_code_23, '^[0-9]{3}([.][0-9]{1,2})?$', 1, 1, 0, '')\n\n\n > 0\n     or \n    \n    \n\n    \nregexp_instr(diagnosis_code_23, '^[0-9]{3,5}$', 1, 1, 0, '')\n\n\n > 0\n     or \n    \n    \n\n    \nregexp_instr(diagnosis_code_23, '^[VE][0-9]{3}([.][0-9]{1})?$', 1, 1, 0, '')\n\n\n > 0\n     or \n    \n    \n\n    \nregexp_instr(diagnosis_code_23, '^[VE][0-9]{2,4}$', 1, 1, 0, '')\n\n\n > 0\n as expression\n\n\n    from tuva.input_layer.input_layer__medical_claim\n    where\n        diagnosis_code_1 is not null\n    \n    \n\n),\nvalidation_errors as (\n\n    select\n        *\n    from\n        grouped_expression\n    where\n        not(expression = true)\n\n)\n\nselect *\nfrom validation_errors\n\n\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:15.618556Z", "completed_at": "2025-06-03T19:50:15.636977Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:15.637800Z", "completed_at": "2025-06-03T19:50:15.637806Z"}], "thread_id": "Thread-4", "execution_time": 0.0210568904876709, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_expectations_expect_column_values_to_match_regex_list_input_layer__medical_claim_diagnosis_code_24__any___A_Z_0_9A_Z_2_7____A_Z_0_9_1_2_0_9A_Z_1_7____0_9_3_0_9_1_2____0_9_3_5____VE_0_9_3_0_9_1____VE_0_9_2_4___diagnosis_code_1_is_not_null.a98f529984", "compiled": true, "compiled_code": "\n\n\n\n\n    with grouped_expression as (\n    select\n        \n        \n    \n  \n    \n    \n\n    \nregexp_instr(diagnosis_code_24, '^[A-Z][0-9A-Z]{2,7}$', 1, 1, 0, '')\n\n\n > 0\n     or \n    \n    \n\n    \nregexp_instr(diagnosis_code_24, '^[A-Z][0-9]{1,2}[.][0-9A-Z]{1,7}$', 1, 1, 0, '')\n\n\n > 0\n     or \n    \n    \n\n    \nregexp_instr(diagnosis_code_24, '^[0-9]{3}([.][0-9]{1,2})?$', 1, 1, 0, '')\n\n\n > 0\n     or \n    \n    \n\n    \nregexp_instr(diagnosis_code_24, '^[0-9]{3,5}$', 1, 1, 0, '')\n\n\n > 0\n     or \n    \n    \n\n    \nregexp_instr(diagnosis_code_24, '^[VE][0-9]{3}([.][0-9]{1})?$', 1, 1, 0, '')\n\n\n > 0\n     or \n    \n    \n\n    \nregexp_instr(diagnosis_code_24, '^[VE][0-9]{2,4}$', 1, 1, 0, '')\n\n\n > 0\n as expression\n\n\n    from tuva.input_layer.input_layer__medical_claim\n    where\n        diagnosis_code_1 is not null\n    \n    \n\n),\nvalidation_errors as (\n\n    select\n        *\n    from\n        grouped_expression\n    where\n        not(expression = true)\n\n)\n\nselect *\nfrom validation_errors\n\n\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:15.625633Z", "completed_at": "2025-06-03T19:50:15.637503Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:15.638439Z", "completed_at": "2025-06-03T19:50:15.638443Z"}], "thread_id": "Thread-3", "execution_time": 0.020448684692382812, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_expectations_expect_column_values_to_match_regex_list_input_layer__medical_claim_diagnosis_code_25__any___A_Z_0_9A_Z_2_7____A_Z_0_9_1_2_0_9A_Z_1_7____0_9_3_0_9_1_2____0_9_3_5____VE_0_9_3_0_9_1____VE_0_9_2_4___diagnosis_code_1_is_not_null.6b53ffed34", "compiled": true, "compiled_code": "\n\n\n\n\n    with grouped_expression as (\n    select\n        \n        \n    \n  \n    \n    \n\n    \nregexp_instr(diagnosis_code_25, '^[A-Z][0-9A-Z]{2,7}$', 1, 1, 0, '')\n\n\n > 0\n     or \n    \n    \n\n    \nregexp_instr(diagnosis_code_25, '^[A-Z][0-9]{1,2}[.][0-9A-Z]{1,7}$', 1, 1, 0, '')\n\n\n > 0\n     or \n    \n    \n\n    \nregexp_instr(diagnosis_code_25, '^[0-9]{3}([.][0-9]{1,2})?$', 1, 1, 0, '')\n\n\n > 0\n     or \n    \n    \n\n    \nregexp_instr(diagnosis_code_25, '^[0-9]{3,5}$', 1, 1, 0, '')\n\n\n > 0\n     or \n    \n    \n\n    \nregexp_instr(diagnosis_code_25, '^[VE][0-9]{3}([.][0-9]{1})?$', 1, 1, 0, '')\n\n\n > 0\n     or \n    \n    \n\n    \nregexp_instr(diagnosis_code_25, '^[VE][0-9]{2,4}$', 1, 1, 0, '')\n\n\n > 0\n as expression\n\n\n    from tuva.input_layer.input_layer__medical_claim\n    where\n        diagnosis_code_1 is not null\n    \n    \n\n),\nvalidation_errors as (\n\n    select\n        *\n    from\n        grouped_expression\n    where\n        not(expression = true)\n\n)\n\nselect *\nfrom validation_errors\n\n\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:15.631273Z", "completed_at": "2025-06-03T19:50:15.639034Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:15.645026Z", "completed_at": "2025-06-03T19:50:15.645029Z"}], "thread_id": "Thread-2", "execution_time": 0.020079851150512695, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_expectations_expect_column_values_to_match_regex_list_input_layer__medical_claim_diagnosis_code_2__any___A_Z_0_9A_Z_2_7____A_Z_0_9_1_2_0_9A_Z_1_7____0_9_3_0_9_1_2____0_9_3_5____VE_0_9_3_0_9_1____VE_0_9_2_4___diagnosis_code_1_is_not_null.fc0bc2a3ce", "compiled": true, "compiled_code": "\n\n\n\n\n    with grouped_expression as (\n    select\n        \n        \n    \n  \n    \n    \n\n    \nregexp_instr(diagnosis_code_2, '^[A-Z][0-9A-Z]{2,7}$', 1, 1, 0, '')\n\n\n > 0\n     or \n    \n    \n\n    \nregexp_instr(diagnosis_code_2, '^[A-Z][0-9]{1,2}[.][0-9A-Z]{1,7}$', 1, 1, 0, '')\n\n\n > 0\n     or \n    \n    \n\n    \nregexp_instr(diagnosis_code_2, '^[0-9]{3}([.][0-9]{1,2})?$', 1, 1, 0, '')\n\n\n > 0\n     or \n    \n    \n\n    \nregexp_instr(diagnosis_code_2, '^[0-9]{3,5}$', 1, 1, 0, '')\n\n\n > 0\n     or \n    \n    \n\n    \nregexp_instr(diagnosis_code_2, '^[VE][0-9]{3}([.][0-9]{1})?$', 1, 1, 0, '')\n\n\n > 0\n     or \n    \n    \n\n    \nregexp_instr(diagnosis_code_2, '^[VE][0-9]{2,4}$', 1, 1, 0, '')\n\n\n > 0\n as expression\n\n\n    from tuva.input_layer.input_layer__medical_claim\n    where\n        diagnosis_code_1 is not null\n    \n    \n\n),\nvalidation_errors as (\n\n    select\n        *\n    from\n        grouped_expression\n    where\n        not(expression = true)\n\n)\n\nselect *\nfrom validation_errors\n\n\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:15.639291Z", "completed_at": "2025-06-03T19:50:15.646171Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:15.652766Z", "completed_at": "2025-06-03T19:50:15.652772Z"}], "thread_id": "Thread-1", "execution_time": 0.015619039535522461, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_expectations_expect_column_values_to_match_regex_list_input_layer__medical_claim_diagnosis_code_3__any___A_Z_0_9A_Z_2_7____A_Z_0_9_1_2_0_9A_Z_1_7____0_9_3_0_9_1_2____0_9_3_5____VE_0_9_3_0_9_1____VE_0_9_2_4___diagnosis_code_1_is_not_null.588826f698", "compiled": true, "compiled_code": "\n\n\n\n\n    with grouped_expression as (\n    select\n        \n        \n    \n  \n    \n    \n\n    \nregexp_instr(diagnosis_code_3, '^[A-Z][0-9A-Z]{2,7}$', 1, 1, 0, '')\n\n\n > 0\n     or \n    \n    \n\n    \nregexp_instr(diagnosis_code_3, '^[A-Z][0-9]{1,2}[.][0-9A-Z]{1,7}$', 1, 1, 0, '')\n\n\n > 0\n     or \n    \n    \n\n    \nregexp_instr(diagnosis_code_3, '^[0-9]{3}([.][0-9]{1,2})?$', 1, 1, 0, '')\n\n\n > 0\n     or \n    \n    \n\n    \nregexp_instr(diagnosis_code_3, '^[0-9]{3,5}$', 1, 1, 0, '')\n\n\n > 0\n     or \n    \n    \n\n    \nregexp_instr(diagnosis_code_3, '^[VE][0-9]{3}([.][0-9]{1})?$', 1, 1, 0, '')\n\n\n > 0\n     or \n    \n    \n\n    \nregexp_instr(diagnosis_code_3, '^[VE][0-9]{2,4}$', 1, 1, 0, '')\n\n\n > 0\n as expression\n\n\n    from tuva.input_layer.input_layer__medical_claim\n    where\n        diagnosis_code_1 is not null\n    \n    \n\n),\nvalidation_errors as (\n\n    select\n        *\n    from\n        grouped_expression\n    where\n        not(expression = true)\n\n)\n\nselect *\nfrom validation_errors\n\n\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:15.646621Z", "completed_at": "2025-06-03T19:50:15.658872Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:15.665136Z", "completed_at": "2025-06-03T19:50:15.665142Z"}], "thread_id": "Thread-4", "execution_time": 0.020431995391845703, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_expectations_expect_column_values_to_match_regex_list_input_layer__medical_claim_diagnosis_code_4__any___A_Z_0_9A_Z_2_7____A_Z_0_9_1_2_0_9A_Z_1_7____0_9_3_0_9_1_2____0_9_3_5____VE_0_9_3_0_9_1____VE_0_9_2_4___diagnosis_code_1_is_not_null.64d294047c", "compiled": true, "compiled_code": "\n\n\n\n\n    with grouped_expression as (\n    select\n        \n        \n    \n  \n    \n    \n\n    \nregexp_instr(diagnosis_code_4, '^[A-Z][0-9A-Z]{2,7}$', 1, 1, 0, '')\n\n\n > 0\n     or \n    \n    \n\n    \nregexp_instr(diagnosis_code_4, '^[A-Z][0-9]{1,2}[.][0-9A-Z]{1,7}$', 1, 1, 0, '')\n\n\n > 0\n     or \n    \n    \n\n    \nregexp_instr(diagnosis_code_4, '^[0-9]{3}([.][0-9]{1,2})?$', 1, 1, 0, '')\n\n\n > 0\n     or \n    \n    \n\n    \nregexp_instr(diagnosis_code_4, '^[0-9]{3,5}$', 1, 1, 0, '')\n\n\n > 0\n     or \n    \n    \n\n    \nregexp_instr(diagnosis_code_4, '^[VE][0-9]{3}([.][0-9]{1})?$', 1, 1, 0, '')\n\n\n > 0\n     or \n    \n    \n\n    \nregexp_instr(diagnosis_code_4, '^[VE][0-9]{2,4}$', 1, 1, 0, '')\n\n\n > 0\n as expression\n\n\n    from tuva.input_layer.input_layer__medical_claim\n    where\n        diagnosis_code_1 is not null\n    \n    \n\n),\nvalidation_errors as (\n\n    select\n        *\n    from\n        grouped_expression\n    where\n        not(expression = true)\n\n)\n\nselect *\nfrom validation_errors\n\n\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:15.653146Z", "completed_at": "2025-06-03T19:50:15.665496Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:15.666269Z", "completed_at": "2025-06-03T19:50:15.666273Z"}], "thread_id": "Thread-3", "execution_time": 0.02089405059814453, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_expectations_expect_column_values_to_match_regex_list_input_layer__medical_claim_diagnosis_code_5__any___A_Z_0_9A_Z_2_7____A_Z_0_9_1_2_0_9A_Z_1_7____0_9_3_0_9_1_2____0_9_3_5____VE_0_9_3_0_9_1____VE_0_9_2_4___diagnosis_code_1_is_not_null.27413892d8", "compiled": true, "compiled_code": "\n\n\n\n\n    with grouped_expression as (\n    select\n        \n        \n    \n  \n    \n    \n\n    \nregexp_instr(diagnosis_code_5, '^[A-Z][0-9A-Z]{2,7}$', 1, 1, 0, '')\n\n\n > 0\n     or \n    \n    \n\n    \nregexp_instr(diagnosis_code_5, '^[A-Z][0-9]{1,2}[.][0-9A-Z]{1,7}$', 1, 1, 0, '')\n\n\n > 0\n     or \n    \n    \n\n    \nregexp_instr(diagnosis_code_5, '^[0-9]{3}([.][0-9]{1,2})?$', 1, 1, 0, '')\n\n\n > 0\n     or \n    \n    \n\n    \nregexp_instr(diagnosis_code_5, '^[0-9]{3,5}$', 1, 1, 0, '')\n\n\n > 0\n     or \n    \n    \n\n    \nregexp_instr(diagnosis_code_5, '^[VE][0-9]{3}([.][0-9]{1})?$', 1, 1, 0, '')\n\n\n > 0\n     or \n    \n    \n\n    \nregexp_instr(diagnosis_code_5, '^[VE][0-9]{2,4}$', 1, 1, 0, '')\n\n\n > 0\n as expression\n\n\n    from tuva.input_layer.input_layer__medical_claim\n    where\n        diagnosis_code_1 is not null\n    \n    \n\n),\nvalidation_errors as (\n\n    select\n        *\n    from\n        grouped_expression\n    where\n        not(expression = true)\n\n)\n\nselect *\nfrom validation_errors\n\n\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:15.659108Z", "completed_at": "2025-06-03T19:50:15.671639Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:15.672482Z", "completed_at": "2025-06-03T19:50:15.672487Z"}], "thread_id": "Thread-2", "execution_time": 0.020052194595336914, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_expectations_expect_column_values_to_match_regex_list_input_layer__medical_claim_diagnosis_code_6__any___A_Z_0_9A_Z_2_7____A_Z_0_9_1_2_0_9A_Z_1_7____0_9_3_0_9_1_2____0_9_3_5____VE_0_9_3_0_9_1____VE_0_9_2_4___diagnosis_code_1_is_not_null.b28a64dcb1", "compiled": true, "compiled_code": "\n\n\n\n\n    with grouped_expression as (\n    select\n        \n        \n    \n  \n    \n    \n\n    \nregexp_instr(diagnosis_code_6, '^[A-Z][0-9A-Z]{2,7}$', 1, 1, 0, '')\n\n\n > 0\n     or \n    \n    \n\n    \nregexp_instr(diagnosis_code_6, '^[A-Z][0-9]{1,2}[.][0-9A-Z]{1,7}$', 1, 1, 0, '')\n\n\n > 0\n     or \n    \n    \n\n    \nregexp_instr(diagnosis_code_6, '^[0-9]{3}([.][0-9]{1,2})?$', 1, 1, 0, '')\n\n\n > 0\n     or \n    \n    \n\n    \nregexp_instr(diagnosis_code_6, '^[0-9]{3,5}$', 1, 1, 0, '')\n\n\n > 0\n     or \n    \n    \n\n    \nregexp_instr(diagnosis_code_6, '^[VE][0-9]{3}([.][0-9]{1})?$', 1, 1, 0, '')\n\n\n > 0\n     or \n    \n    \n\n    \nregexp_instr(diagnosis_code_6, '^[VE][0-9]{2,4}$', 1, 1, 0, '')\n\n\n > 0\n as expression\n\n\n    from tuva.input_layer.input_layer__medical_claim\n    where\n        diagnosis_code_1 is not null\n    \n    \n\n),\nvalidation_errors as (\n\n    select\n        *\n    from\n        grouped_expression\n    where\n        not(expression = true)\n\n)\n\nselect *\nfrom validation_errors\n\n\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:15.666632Z", "completed_at": "2025-06-03T19:50:15.673633Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:15.680959Z", "completed_at": "2025-06-03T19:50:15.680965Z"}], "thread_id": "Thread-1", "execution_time": 0.016168832778930664, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_expectations_expect_column_values_to_match_regex_list_input_layer__medical_claim_diagnosis_code_7__any___A_Z_0_9A_Z_2_7____A_Z_0_9_1_2_0_9A_Z_1_7____0_9_3_0_9_1_2____0_9_3_5____VE_0_9_3_0_9_1____VE_0_9_2_4___diagnosis_code_1_is_not_null.f64e78a7ca", "compiled": true, "compiled_code": "\n\n\n\n\n    with grouped_expression as (\n    select\n        \n        \n    \n  \n    \n    \n\n    \nregexp_instr(diagnosis_code_7, '^[A-Z][0-9A-Z]{2,7}$', 1, 1, 0, '')\n\n\n > 0\n     or \n    \n    \n\n    \nregexp_instr(diagnosis_code_7, '^[A-Z][0-9]{1,2}[.][0-9A-Z]{1,7}$', 1, 1, 0, '')\n\n\n > 0\n     or \n    \n    \n\n    \nregexp_instr(diagnosis_code_7, '^[0-9]{3}([.][0-9]{1,2})?$', 1, 1, 0, '')\n\n\n > 0\n     or \n    \n    \n\n    \nregexp_instr(diagnosis_code_7, '^[0-9]{3,5}$', 1, 1, 0, '')\n\n\n > 0\n     or \n    \n    \n\n    \nregexp_instr(diagnosis_code_7, '^[VE][0-9]{3}([.][0-9]{1})?$', 1, 1, 0, '')\n\n\n > 0\n     or \n    \n    \n\n    \nregexp_instr(diagnosis_code_7, '^[VE][0-9]{2,4}$', 1, 1, 0, '')\n\n\n > 0\n as expression\n\n\n    from tuva.input_layer.input_layer__medical_claim\n    where\n        diagnosis_code_1 is not null\n    \n    \n\n),\nvalidation_errors as (\n\n    select\n        *\n    from\n        grouped_expression\n    where\n        not(expression = true)\n\n)\n\nselect *\nfrom validation_errors\n\n\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:15.673891Z", "completed_at": "2025-06-03T19:50:15.693439Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:15.694167Z", "completed_at": "2025-06-03T19:50:15.694175Z"}], "thread_id": "Thread-4", "execution_time": 0.02235102653503418, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_expectations_expect_column_values_to_match_regex_list_input_layer__medical_claim_diagnosis_code_8__any___A_Z_0_9A_Z_2_7____A_Z_0_9_1_2_0_9A_Z_1_7____0_9_3_0_9_1_2____0_9_3_5____VE_0_9_3_0_9_1____VE_0_9_2_4___diagnosis_code_1_is_not_null.1b554981fb", "compiled": true, "compiled_code": "\n\n\n\n\n    with grouped_expression as (\n    select\n        \n        \n    \n  \n    \n    \n\n    \nregexp_instr(diagnosis_code_8, '^[A-Z][0-9A-Z]{2,7}$', 1, 1, 0, '')\n\n\n > 0\n     or \n    \n    \n\n    \nregexp_instr(diagnosis_code_8, '^[A-Z][0-9]{1,2}[.][0-9A-Z]{1,7}$', 1, 1, 0, '')\n\n\n > 0\n     or \n    \n    \n\n    \nregexp_instr(diagnosis_code_8, '^[0-9]{3}([.][0-9]{1,2})?$', 1, 1, 0, '')\n\n\n > 0\n     or \n    \n    \n\n    \nregexp_instr(diagnosis_code_8, '^[0-9]{3,5}$', 1, 1, 0, '')\n\n\n > 0\n     or \n    \n    \n\n    \nregexp_instr(diagnosis_code_8, '^[VE][0-9]{3}([.][0-9]{1})?$', 1, 1, 0, '')\n\n\n > 0\n     or \n    \n    \n\n    \nregexp_instr(diagnosis_code_8, '^[VE][0-9]{2,4}$', 1, 1, 0, '')\n\n\n > 0\n as expression\n\n\n    from tuva.input_layer.input_layer__medical_claim\n    where\n        diagnosis_code_1 is not null\n    \n    \n\n),\nvalidation_errors as (\n\n    select\n        *\n    from\n        grouped_expression\n    where\n        not(expression = true)\n\n)\n\nselect *\nfrom validation_errors\n\n\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:15.681415Z", "completed_at": "2025-06-03T19:50:15.694589Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:15.695353Z", "completed_at": "2025-06-03T19:50:15.695357Z"}], "thread_id": "Thread-3", "execution_time": 0.022296905517578125, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_expectations_expect_column_values_to_match_regex_list_input_layer__medical_claim_diagnosis_code_9__any___A_Z_0_9A_Z_2_7____A_Z_0_9_1_2_0_9A_Z_1_7____0_9_3_0_9_1_2____0_9_3_5____VE_0_9_3_0_9_1____VE_0_9_2_4___diagnosis_code_1_is_not_null.21c5f0d34c", "compiled": true, "compiled_code": "\n\n\n\n\n    with grouped_expression as (\n    select\n        \n        \n    \n  \n    \n    \n\n    \nregexp_instr(diagnosis_code_9, '^[A-Z][0-9A-Z]{2,7}$', 1, 1, 0, '')\n\n\n > 0\n     or \n    \n    \n\n    \nregexp_instr(diagnosis_code_9, '^[A-Z][0-9]{1,2}[.][0-9A-Z]{1,7}$', 1, 1, 0, '')\n\n\n > 0\n     or \n    \n    \n\n    \nregexp_instr(diagnosis_code_9, '^[0-9]{3}([.][0-9]{1,2})?$', 1, 1, 0, '')\n\n\n > 0\n     or \n    \n    \n\n    \nregexp_instr(diagnosis_code_9, '^[0-9]{3,5}$', 1, 1, 0, '')\n\n\n > 0\n     or \n    \n    \n\n    \nregexp_instr(diagnosis_code_9, '^[VE][0-9]{3}([.][0-9]{1})?$', 1, 1, 0, '')\n\n\n > 0\n     or \n    \n    \n\n    \nregexp_instr(diagnosis_code_9, '^[VE][0-9]{2,4}$', 1, 1, 0, '')\n\n\n > 0\n as expression\n\n\n    from tuva.input_layer.input_layer__medical_claim\n    where\n        diagnosis_code_1 is not null\n    \n    \n\n),\nvalidation_errors as (\n\n    select\n        *\n    from\n        grouped_expression\n    where\n        not(expression = true)\n\n)\n\nselect *\nfrom validation_errors\n\n\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:15.687754Z", "completed_at": "2025-06-03T19:50:15.695753Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:15.702860Z", "completed_at": "2025-06-03T19:50:15.702867Z"}], "thread_id": "Thread-2", "execution_time": 0.022265911102294922, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_utils_unique_combination_of_columns_input_layer__medical_claim_claim_id__claim_line_number__data_source.cef56d8751", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith validation_errors as (\n\n    select\n        claim_id, claim_line_number, data_source\n    from tuva.input_layer.input_layer__medical_claim\n    group by claim_id, claim_line_number, data_source\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:15.695974Z", "completed_at": "2025-06-03T19:50:15.704048Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:15.710390Z", "completed_at": "2025-06-03T19:50:15.710397Z"}], "thread_id": "Thread-1", "execution_time": 0.01658797264099121, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.not_null_input_layer__medical_claim_claim_end_date.6345372527", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect claim_end_date\nfrom tuva.input_layer.input_layer__medical_claim\nwhere claim_end_date is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:15.704264Z", "completed_at": "2025-06-03T19:50:15.717926Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:15.723839Z", "completed_at": "2025-06-03T19:50:15.723847Z"}], "thread_id": "Thread-4", "execution_time": 0.021679162979125977, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.not_null_input_layer__medical_claim_claim_id.119e2591d5", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect claim_id\nfrom tuva.input_layer.input_layer__medical_claim\nwhere claim_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:15.710847Z", "completed_at": "2025-06-03T19:50:15.724237Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:15.725028Z", "completed_at": "2025-06-03T19:50:15.725032Z"}], "thread_id": "Thread-3", "execution_time": 0.021537065505981445, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.not_null_input_layer__medical_claim_claim_line_number.0bfb19bb3f", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect claim_line_number\nfrom tuva.input_layer.input_layer__medical_claim\nwhere claim_line_number is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:15.718140Z", "completed_at": "2025-06-03T19:50:15.725418Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:15.732055Z", "completed_at": "2025-06-03T19:50:15.732061Z"}], "thread_id": "Thread-2", "execution_time": 0.022005081176757812, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.not_null_input_layer__medical_claim_claim_start_date.8f2cd3d42a", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect claim_start_date\nfrom tuva.input_layer.input_layer__medical_claim\nwhere claim_start_date is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:15.725642Z", "completed_at": "2025-06-03T19:50:15.733366Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:15.739650Z", "completed_at": "2025-06-03T19:50:15.739657Z"}], "thread_id": "Thread-1", "execution_time": 0.016202926635742188, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.not_null_input_layer__medical_claim_claim_type.8b13947d3d", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect claim_type\nfrom tuva.input_layer.input_layer__medical_claim\nwhere claim_type is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:15.733583Z", "completed_at": "2025-06-03T19:50:15.745948Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:15.753571Z", "completed_at": "2025-06-03T19:50:15.753580Z"}], "thread_id": "Thread-4", "execution_time": 0.022155046463012695, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.not_null_input_layer__medical_claim_hcpcs_code.abdbe41fa9", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect hcpcs_code\nfrom (select * from tuva.input_layer.input_layer__medical_claim where claim_type = 'professional') dbt_subquery\nwhere hcpcs_code is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:15.740115Z", "completed_at": "2025-06-03T19:50:15.753990Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:15.754847Z", "completed_at": "2025-06-03T19:50:15.754852Z"}], "thread_id": "Thread-3", "execution_time": 0.02216792106628418, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.not_null_input_layer__medical_claim_person_id.a0522f52d5", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect person_id\nfrom tuva.input_layer.input_layer__medical_claim\nwhere person_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:15.746356Z", "completed_at": "2025-06-03T19:50:15.755206Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:15.761431Z", "completed_at": "2025-06-03T19:50:15.761437Z"}], "thread_id": "Thread-2", "execution_time": 0.022128820419311523, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.not_null_input_layer__medical_claim_place_of_service_code.15fc3f5c57", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect place_of_service_code\nfrom (select * from tuva.input_layer.input_layer__medical_claim where claim_type = 'professional') dbt_subquery\nwhere place_of_service_code is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:15.755433Z", "completed_at": "2025-06-03T19:50:15.772072Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:15.774657Z", "completed_at": "2025-06-03T19:50:15.774684Z"}], "thread_id": "Thread-1", "execution_time": 0.021625041961669922, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.not_null_input_layer__medical_claim_revenue_center_code.3ecc576ddd", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect revenue_center_code\nfrom (select * from tuva.input_layer.input_layer__medical_claim where claim_type = 'institutional') dbt_subquery\nwhere revenue_center_code is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:15.762684Z", "completed_at": "2025-06-03T19:50:15.785015Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:15.797943Z", "completed_at": "2025-06-03T19:50:15.797952Z"}], "thread_id": "Thread-4", "execution_time": 0.037178993225097656, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.relationships_input_layer__medical_claim_diagnosis_poa_10__present_on_admit_code__ref_terminology__present_on_admission_.eee4df97e4", "compiled": true, "compiled_code": "\n    \n    \n\nwith child as (\n    select diagnosis_poa_10 as from_field\n    from tuva.input_layer.input_layer__medical_claim\n    where diagnosis_poa_10 is not null\n),\n\nparent as (\n    select present_on_admit_code as to_field\n    from tuva.terminology.present_on_admission\n)\n\nselect\n    from_field\n\nfrom child\nleft join parent\n    on child.from_field = parent.to_field\n\nwhere parent.to_field is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:15.775551Z", "completed_at": "2025-06-03T19:50:15.799022Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:15.800885Z", "completed_at": "2025-06-03T19:50:15.800892Z"}], "thread_id": "Thread-3", "execution_time": 0.03894495964050293, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.relationships_input_layer__medical_claim_diagnosis_poa_11__present_on_admit_code__ref_terminology__present_on_admission_.a478d0e4b2", "compiled": true, "compiled_code": "\n    \n    \n\nwith child as (\n    select diagnosis_poa_11 as from_field\n    from tuva.input_layer.input_layer__medical_claim\n    where diagnosis_poa_11 is not null\n),\n\nparent as (\n    select present_on_admit_code as to_field\n    from tuva.terminology.present_on_admission\n)\n\nselect\n    from_field\n\nfrom child\nleft join parent\n    on child.from_field = parent.to_field\n\nwhere parent.to_field is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:15.786105Z", "completed_at": "2025-06-03T19:50:15.800515Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:15.809576Z", "completed_at": "2025-06-03T19:50:15.809588Z"}], "thread_id": "Thread-2", "execution_time": 0.03568100929260254, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.relationships_input_layer__medical_claim_diagnosis_poa_12__present_on_admit_code__ref_terminology__present_on_admission_.3c66740279", "compiled": true, "compiled_code": "\n    \n    \n\nwith child as (\n    select diagnosis_poa_12 as from_field\n    from tuva.input_layer.input_layer__medical_claim\n    where diagnosis_poa_12 is not null\n),\n\nparent as (\n    select present_on_admit_code as to_field\n    from tuva.terminology.present_on_admission\n)\n\nselect\n    from_field\n\nfrom child\nleft join parent\n    on child.from_field = parent.to_field\n\nwhere parent.to_field is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:15.801928Z", "completed_at": "2025-06-03T19:50:15.825393Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:15.826401Z", "completed_at": "2025-06-03T19:50:15.826409Z"}], "thread_id": "Thread-1", "execution_time": 0.027816057205200195, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.relationships_input_layer__medical_claim_diagnosis_poa_13__present_on_admit_code__ref_terminology__present_on_admission_.8607ef039c", "compiled": true, "compiled_code": "\n    \n    \n\nwith child as (\n    select diagnosis_poa_13 as from_field\n    from tuva.input_layer.input_layer__medical_claim\n    where diagnosis_poa_13 is not null\n),\n\nparent as (\n    select present_on_admit_code as to_field\n    from tuva.terminology.present_on_admission\n)\n\nselect\n    from_field\n\nfrom child\nleft join parent\n    on child.from_field = parent.to_field\n\nwhere parent.to_field is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:15.813939Z", "completed_at": "2025-06-03T19:50:15.827634Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:15.847090Z", "completed_at": "2025-06-03T19:50:15.847098Z"}], "thread_id": "Thread-4", "execution_time": 0.04563713073730469, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.relationships_input_layer__medical_claim_diagnosis_poa_14__present_on_admit_code__ref_terminology__present_on_admission_.91859a0e7e", "compiled": true, "compiled_code": "\n    \n    \n\nwith child as (\n    select diagnosis_poa_14 as from_field\n    from tuva.input_layer.input_layer__medical_claim\n    where diagnosis_poa_14 is not null\n),\n\nparent as (\n    select present_on_admit_code as to_field\n    from tuva.terminology.present_on_admission\n)\n\nselect\n    from_field\n\nfrom child\nleft join parent\n    on child.from_field = parent.to_field\n\nwhere parent.to_field is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:15.827956Z", "completed_at": "2025-06-03T19:50:15.848669Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:15.850383Z", "completed_at": "2025-06-03T19:50:15.850392Z"}], "thread_id": "Thread-3", "execution_time": 0.03728795051574707, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.relationships_input_layer__medical_claim_diagnosis_poa_15__present_on_admit_code__ref_terminology__present_on_admission_.aa102f5565", "compiled": true, "compiled_code": "\n    \n    \n\nwith child as (\n    select diagnosis_poa_15 as from_field\n    from tuva.input_layer.input_layer__medical_claim\n    where diagnosis_poa_15 is not null\n),\n\nparent as (\n    select present_on_admit_code as to_field\n    from tuva.terminology.present_on_admission\n)\n\nselect\n    from_field\n\nfrom child\nleft join parent\n    on child.from_field = parent.to_field\n\nwhere parent.to_field is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:15.838751Z", "completed_at": "2025-06-03T19:50:15.850869Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:15.858591Z", "completed_at": "2025-06-03T19:50:15.858598Z"}], "thread_id": "Thread-2", "execution_time": 0.033707618713378906, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.relationships_input_layer__medical_claim_diagnosis_poa_16__present_on_admit_code__ref_terminology__present_on_admission_.ef9e24a2ae", "compiled": true, "compiled_code": "\n    \n    \n\nwith child as (\n    select diagnosis_poa_16 as from_field\n    from tuva.input_layer.input_layer__medical_claim\n    where diagnosis_poa_16 is not null\n),\n\nparent as (\n    select present_on_admit_code as to_field\n    from tuva.terminology.present_on_admission\n)\n\nselect\n    from_field\n\nfrom child\nleft join parent\n    on child.from_field = parent.to_field\n\nwhere parent.to_field is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:15.851131Z", "completed_at": "2025-06-03T19:50:15.865828Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:15.867140Z", "completed_at": "2025-06-03T19:50:15.867148Z"}], "thread_id": "Thread-1", "execution_time": 0.01930689811706543, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.relationships_input_layer__medical_claim_diagnosis_poa_17__present_on_admit_code__ref_terminology__present_on_admission_.458b619ab7", "compiled": true, "compiled_code": "\n    \n    \n\nwith child as (\n    select diagnosis_poa_17 as from_field\n    from tuva.input_layer.input_layer__medical_claim\n    where diagnosis_poa_17 is not null\n),\n\nparent as (\n    select present_on_admit_code as to_field\n    from tuva.terminology.present_on_admission\n)\n\nselect\n    from_field\n\nfrom child\nleft join parent\n    on child.from_field = parent.to_field\n\nwhere parent.to_field is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:15.859134Z", "completed_at": "2025-06-03T19:50:15.867552Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:15.875227Z", "completed_at": "2025-06-03T19:50:15.875236Z"}], "thread_id": "Thread-4", "execution_time": 0.02590322494506836, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.relationships_input_layer__medical_claim_diagnosis_poa_18__present_on_admit_code__ref_terminology__present_on_admission_.4e350ecb4e", "compiled": true, "compiled_code": "\n    \n    \n\nwith child as (\n    select diagnosis_poa_18 as from_field\n    from tuva.input_layer.input_layer__medical_claim\n    where diagnosis_poa_18 is not null\n),\n\nparent as (\n    select present_on_admit_code as to_field\n    from tuva.terminology.present_on_admission\n)\n\nselect\n    from_field\n\nfrom child\nleft join parent\n    on child.from_field = parent.to_field\n\nwhere parent.to_field is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:15.867830Z", "completed_at": "2025-06-03T19:50:15.882669Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:15.883541Z", "completed_at": "2025-06-03T19:50:15.883548Z"}], "thread_id": "Thread-3", "execution_time": 0.018635988235473633, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.relationships_input_layer__medical_claim_diagnosis_poa_19__present_on_admit_code__ref_terminology__present_on_admission_.57d2339594", "compiled": true, "compiled_code": "\n    \n    \n\nwith child as (\n    select diagnosis_poa_19 as from_field\n    from tuva.input_layer.input_layer__medical_claim\n    where diagnosis_poa_19 is not null\n),\n\nparent as (\n    select present_on_admit_code as to_field\n    from tuva.terminology.present_on_admission\n)\n\nselect\n    from_field\n\nfrom child\nleft join parent\n    on child.from_field = parent.to_field\n\nwhere parent.to_field is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:15.876070Z", "completed_at": "2025-06-03T19:50:15.883932Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:15.891578Z", "completed_at": "2025-06-03T19:50:15.891588Z"}], "thread_id": "Thread-2", "execution_time": 0.024962663650512695, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.relationships_input_layer__medical_claim_diagnosis_poa_1__present_on_admit_code__ref_terminology__present_on_admission_.c32f918561", "compiled": true, "compiled_code": "\n    \n    \n\nwith child as (\n    select diagnosis_poa_1 as from_field\n    from tuva.input_layer.input_layer__medical_claim\n    where diagnosis_poa_1 is not null\n),\n\nparent as (\n    select present_on_admit_code as to_field\n    from tuva.terminology.present_on_admission\n)\n\nselect\n    from_field\n\nfrom child\nleft join parent\n    on child.from_field = parent.to_field\n\nwhere parent.to_field is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:15.884136Z", "completed_at": "2025-06-03T19:50:15.898475Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:15.899261Z", "completed_at": "2025-06-03T19:50:15.899267Z"}], "thread_id": "Thread-1", "execution_time": 0.017410755157470703, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.relationships_input_layer__medical_claim_diagnosis_poa_20__present_on_admit_code__ref_terminology__present_on_admission_.7a2b87864c", "compiled": true, "compiled_code": "\n    \n    \n\nwith child as (\n    select diagnosis_poa_20 as from_field\n    from tuva.input_layer.input_layer__medical_claim\n    where diagnosis_poa_20 is not null\n),\n\nparent as (\n    select present_on_admit_code as to_field\n    from tuva.terminology.present_on_admission\n)\n\nselect\n    from_field\n\nfrom child\nleft join parent\n    on child.from_field = parent.to_field\n\nwhere parent.to_field is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:15.892125Z", "completed_at": "2025-06-03T19:50:15.905506Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:15.906372Z", "completed_at": "2025-06-03T19:50:15.906378Z"}], "thread_id": "Thread-4", "execution_time": 0.023222684860229492, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.relationships_input_layer__medical_claim_diagnosis_poa_21__present_on_admit_code__ref_terminology__present_on_admission_.e792aed31b", "compiled": true, "compiled_code": "\n    \n    \n\nwith child as (\n    select diagnosis_poa_21 as from_field\n    from tuva.input_layer.input_layer__medical_claim\n    where diagnosis_poa_21 is not null\n),\n\nparent as (\n    select present_on_admit_code as to_field\n    from tuva.terminology.present_on_admission\n)\n\nselect\n    from_field\n\nfrom child\nleft join parent\n    on child.from_field = parent.to_field\n\nwhere parent.to_field is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:15.899753Z", "completed_at": "2025-06-03T19:50:15.914233Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:15.915131Z", "completed_at": "2025-06-03T19:50:15.915137Z"}], "thread_id": "Thread-3", "execution_time": 0.017355918884277344, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.relationships_input_layer__medical_claim_diagnosis_poa_22__present_on_admit_code__ref_terminology__present_on_admission_.75f858ddc0", "compiled": true, "compiled_code": "\n    \n    \n\nwith child as (\n    select diagnosis_poa_22 as from_field\n    from tuva.input_layer.input_layer__medical_claim\n    where diagnosis_poa_22 is not null\n),\n\nparent as (\n    select present_on_admit_code as to_field\n    from tuva.terminology.present_on_admission\n)\n\nselect\n    from_field\n\nfrom child\nleft join parent\n    on child.from_field = parent.to_field\n\nwhere parent.to_field is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:15.906790Z", "completed_at": "2025-06-03T19:50:15.916146Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:15.922613Z", "completed_at": "2025-06-03T19:50:15.922621Z"}], "thread_id": "Thread-2", "execution_time": 0.023717880249023438, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.relationships_input_layer__medical_claim_diagnosis_poa_23__present_on_admit_code__ref_terminology__present_on_admission_.16716430ae", "compiled": true, "compiled_code": "\n    \n    \n\nwith child as (\n    select diagnosis_poa_23 as from_field\n    from tuva.input_layer.input_layer__medical_claim\n    where diagnosis_poa_23 is not null\n),\n\nparent as (\n    select present_on_admit_code as to_field\n    from tuva.terminology.present_on_admission\n)\n\nselect\n    from_field\n\nfrom child\nleft join parent\n    on child.from_field = parent.to_field\n\nwhere parent.to_field is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:15.916688Z", "completed_at": "2025-06-03T19:50:16.034383Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:16.035216Z", "completed_at": "2025-06-03T19:50:16.035222Z"}], "thread_id": "Thread-1", "execution_time": 0.12079501152038574, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.relationships_input_layer__medical_claim_diagnosis_poa_24__present_on_admit_code__ref_terminology__present_on_admission_.102737fdcd", "compiled": true, "compiled_code": "\n    \n    \n\nwith child as (\n    select diagnosis_poa_24 as from_field\n    from tuva.input_layer.input_layer__medical_claim\n    where diagnosis_poa_24 is not null\n),\n\nparent as (\n    select present_on_admit_code as to_field\n    from tuva.terminology.present_on_admission\n)\n\nselect\n    from_field\n\nfrom child\nleft join parent\n    on child.from_field = parent.to_field\n\nwhere parent.to_field is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:15.923406Z", "completed_at": "2025-06-03T19:50:16.041417Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:16.047175Z", "completed_at": "2025-06-03T19:50:16.047181Z"}], "thread_id": "Thread-4", "execution_time": 0.13141608238220215, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.relationships_input_layer__medical_claim_diagnosis_poa_25__present_on_admit_code__ref_terminology__present_on_admission_.7d6547bc89", "compiled": true, "compiled_code": "\n    \n    \n\nwith child as (\n    select diagnosis_poa_25 as from_field\n    from tuva.input_layer.input_layer__medical_claim\n    where diagnosis_poa_25 is not null\n),\n\nparent as (\n    select present_on_admit_code as to_field\n    from tuva.terminology.present_on_admission\n)\n\nselect\n    from_field\n\nfrom child\nleft join parent\n    on child.from_field = parent.to_field\n\nwhere parent.to_field is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:16.035642Z", "completed_at": "2025-06-03T19:50:16.046922Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:16.047848Z", "completed_at": "2025-06-03T19:50:16.047852Z"}], "thread_id": "Thread-3", "execution_time": 0.1248769760131836, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.relationships_input_layer__medical_claim_diagnosis_poa_2__present_on_admit_code__ref_terminology__present_on_admission_.496338fb29", "compiled": true, "compiled_code": "\n    \n    \n\nwith child as (\n    select diagnosis_poa_2 as from_field\n    from tuva.input_layer.input_layer__medical_claim\n    where diagnosis_poa_2 is not null\n),\n\nparent as (\n    select present_on_admit_code as to_field\n    from tuva.terminology.present_on_admission\n)\n\nselect\n    from_field\n\nfrom child\nleft join parent\n    on child.from_field = parent.to_field\n\nwhere parent.to_field is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:16.041660Z", "completed_at": "2025-06-03T19:50:16.048469Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:16.056188Z", "completed_at": "2025-06-03T19:50:16.056195Z"}], "thread_id": "Thread-2", "execution_time": 0.021382808685302734, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.relationships_input_layer__medical_claim_diagnosis_poa_3__present_on_admit_code__ref_terminology__present_on_admission_.2fd71f5e39", "compiled": true, "compiled_code": "\n    \n    \n\nwith child as (\n    select diagnosis_poa_3 as from_field\n    from tuva.input_layer.input_layer__medical_claim\n    where diagnosis_poa_3 is not null\n),\n\nparent as (\n    select present_on_admit_code as to_field\n    from tuva.terminology.present_on_admission\n)\n\nselect\n    from_field\n\nfrom child\nleft join parent\n    on child.from_field = parent.to_field\n\nwhere parent.to_field is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:16.048713Z", "completed_at": "2025-06-03T19:50:16.057807Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:16.071444Z", "completed_at": "2025-06-03T19:50:16.071452Z"}], "thread_id": "Thread-1", "execution_time": 0.02488231658935547, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.relationships_input_layer__medical_claim_diagnosis_poa_4__present_on_admit_code__ref_terminology__present_on_admission_.7394eb88b1", "compiled": true, "compiled_code": "\n    \n    \n\nwith child as (\n    select diagnosis_poa_4 as from_field\n    from tuva.input_layer.input_layer__medical_claim\n    where diagnosis_poa_4 is not null\n),\n\nparent as (\n    select present_on_admit_code as to_field\n    from tuva.terminology.present_on_admission\n)\n\nselect\n    from_field\n\nfrom child\nleft join parent\n    on child.from_field = parent.to_field\n\nwhere parent.to_field is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:16.058067Z", "completed_at": "2025-06-03T19:50:16.078988Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:16.081288Z", "completed_at": "2025-06-03T19:50:16.081300Z"}], "thread_id": "Thread-4", "execution_time": 0.0255129337310791, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.relationships_input_layer__medical_claim_diagnosis_poa_5__present_on_admit_code__ref_terminology__present_on_admission_.82e0cbd4c3", "compiled": true, "compiled_code": "\n    \n    \n\nwith child as (\n    select diagnosis_poa_5 as from_field\n    from tuva.input_layer.input_layer__medical_claim\n    where diagnosis_poa_5 is not null\n),\n\nparent as (\n    select present_on_admit_code as to_field\n    from tuva.terminology.present_on_admission\n)\n\nselect\n    from_field\n\nfrom child\nleft join parent\n    on child.from_field = parent.to_field\n\nwhere parent.to_field is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:16.064651Z", "completed_at": "2025-06-03T19:50:16.081017Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:16.082315Z", "completed_at": "2025-06-03T19:50:16.082321Z"}], "thread_id": "Thread-3", "execution_time": 0.02571392059326172, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.relationships_input_layer__medical_claim_diagnosis_poa_6__present_on_admit_code__ref_terminology__present_on_admission_.cc80c3ce35", "compiled": true, "compiled_code": "\n    \n    \n\nwith child as (\n    select diagnosis_poa_6 as from_field\n    from tuva.input_layer.input_layer__medical_claim\n    where diagnosis_poa_6 is not null\n),\n\nparent as (\n    select present_on_admit_code as to_field\n    from tuva.terminology.present_on_admission\n)\n\nselect\n    from_field\n\nfrom child\nleft join parent\n    on child.from_field = parent.to_field\n\nwhere parent.to_field is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:16.072745Z", "completed_at": "2025-06-03T19:50:16.083335Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:16.092902Z", "completed_at": "2025-06-03T19:50:16.092909Z"}], "thread_id": "Thread-2", "execution_time": 0.02864670753479004, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.relationships_input_layer__medical_claim_diagnosis_poa_7__present_on_admit_code__ref_terminology__present_on_admission_.b25a51b23e", "compiled": true, "compiled_code": "\n    \n    \n\nwith child as (\n    select diagnosis_poa_7 as from_field\n    from tuva.input_layer.input_layer__medical_claim\n    where diagnosis_poa_7 is not null\n),\n\nparent as (\n    select present_on_admit_code as to_field\n    from tuva.terminology.present_on_admission\n)\n\nselect\n    from_field\n\nfrom child\nleft join parent\n    on child.from_field = parent.to_field\n\nwhere parent.to_field is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:16.083720Z", "completed_at": "2025-06-03T19:50:16.094909Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:16.108993Z", "completed_at": "2025-06-03T19:50:16.109001Z"}], "thread_id": "Thread-1", "execution_time": 0.028444290161132812, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.relationships_input_layer__medical_claim_diagnosis_poa_8__present_on_admit_code__ref_terminology__present_on_admission_.87307f5c3f", "compiled": true, "compiled_code": "\n    \n    \n\nwith child as (\n    select diagnosis_poa_8 as from_field\n    from tuva.input_layer.input_layer__medical_claim\n    where diagnosis_poa_8 is not null\n),\n\nparent as (\n    select present_on_admit_code as to_field\n    from tuva.terminology.present_on_admission\n)\n\nselect\n    from_field\n\nfrom child\nleft join parent\n    on child.from_field = parent.to_field\n\nwhere parent.to_field is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:16.095172Z", "completed_at": "2025-06-03T19:50:16.110270Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:16.145096Z", "completed_at": "2025-06-03T19:50:16.145111Z"}], "thread_id": "Thread-4", "execution_time": 0.052680015563964844, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.relationships_input_layer__medical_claim_diagnosis_poa_9__present_on_admit_code__ref_terminology__present_on_admission_.f5b56947f2", "compiled": true, "compiled_code": "\n    \n    \n\nwith child as (\n    select diagnosis_poa_9 as from_field\n    from tuva.input_layer.input_layer__medical_claim\n    where diagnosis_poa_9 is not null\n),\n\nparent as (\n    select present_on_admit_code as to_field\n    from tuva.terminology.present_on_admission\n)\n\nselect\n    from_field\n\nfrom child\nleft join parent\n    on child.from_field = parent.to_field\n\nwhere parent.to_field is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:16.102056Z", "completed_at": "2025-06-03T19:50:16.110555Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:16.150912Z", "completed_at": "2025-06-03T19:50:16.150920Z"}], "thread_id": "Thread-3", "execution_time": 0.05732393264770508, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.relationships_input_layer__medical_claim_discharge_disposition_code__discharge_disposition_code__ref_terminology__discharge_disposition_.7db67ade02", "compiled": true, "compiled_code": "\n    \n    \n\nwith child as (\n    select discharge_disposition_code as from_field\n    from tuva.input_layer.input_layer__medical_claim\n    where discharge_disposition_code is not null\n),\n\nparent as (\n    select discharge_disposition_code as to_field\n    from tuva.terminology.discharge_disposition\n)\n\nselect\n    from_field\n\nfrom child\nleft join parent\n    on child.from_field = parent.to_field\n\nwhere parent.to_field is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:16.110814Z", "completed_at": "2025-06-03T19:50:16.159265Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:16.160336Z", "completed_at": "2025-06-03T19:50:16.160344Z"}], "thread_id": "Thread-2", "execution_time": 0.058670997619628906, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.data_quality__exploratory_charts", "compiled": true, "compiled_code": "\n\nwith medical_paid_amount_vs_end_date_matrix as (\n\n    select 'timeliness' as data_quality_category\n         , 'medical_paid_amount_vs_end_date_matrix' as graph_name\n         , 'month' as level_of_detail\n         , 'claim_end_date' as y_axis_description\n         , 'paid_date' as x_axis_description\n         , 'paid_year' as filter_description\n         , 'total_paid_amount' as sum_description\n          -- snowflake and redshift\n         , DATE_TRUNC('MONTH', ilmc.claim_end_date) as y_axis\n         , DATE_TRUNC('MONTH', ilmc.paid_date) as x_axis\n         , DATE_TRUNC('YEAR', ilmc.claim_end_date) as chart_filter\n         \n         , SUM(ilmc.paid_amount) as value\n\n    from tuva.input_layer.input_layer__medical_claim as ilmc\n\n    group by  -- snowflake and redshift\n           DATE_TRUNC('MONTH', ilmc.claim_end_date)\n           , DATE_TRUNC('MONTH', ilmc.paid_date)\n           , DATE_TRUNC('YEAR', ilmc.claim_end_date)\n           \n)\n\n   , medical_claim_count_vs_end_date_matrix as (\n\n    select 'timeliness' as data_quality_category\n         , 'medical_claim_count_vs_end_date_matrix' as graph_name\n         , 'month' as level_of_detail\n         , 'claim_end_date' as y_axis_description\n         , 'paid_date' as x_axis_description\n         , 'paid_year' as filter_description\n         , 'unique_number_of_claims' as sum_description\n          -- snowflake and redshift\n         , DATE_TRUNC('MONTH', ilmc.claim_end_date) as y_axis\n         , DATE_TRUNC('MONTH', ilmc.paid_date) as x_axis\n         , DATE_TRUNC('YEAR', ilmc.claim_end_date) as chart_filter\n         \n         , COUNT(distinct ilmc.claim_id) as value\n\n    from tuva.input_layer.input_layer__medical_claim as ilmc\n\n    group by  -- snowflake and redshift\n           DATE_TRUNC('MONTH', ilmc.claim_end_date)\n           , DATE_TRUNC('MONTH', ilmc.paid_date)\n           , DATE_TRUNC('YEAR', ilmc.claim_end_date)\n           \n)\n\n   , medical_claim_paid_over_time_monthly as (\n    select 'reasonableness' as data_quality_category\n         , 'medical_claim_paid_over_time_monthly' as graph_name\n         , 'month' as level_of_detail\n         , 'N/A' as y_axis_description\n         , 'claim_end_date' as x_axis_description\n         , 'paid_year' as filter_description\n         , 'total_paid_amount' as sum_description\n          -- snowflake and redshift\n         , CAST(null as DATE) as y_axis\n         , DATE_TRUNC('MONTH', ilmc.claim_end_date) as x_axis\n         , DATE_TRUNC('YEAR', ilmc.claim_end_date) as chart_filter\n         \n         , SUM(ilmc.paid_amount) as value\n\n    from tuva.input_layer.input_layer__medical_claim as ilmc\n\n    group by  -- snowflake and redshift\n           DATE_TRUNC('MONTH', ilmc.claim_end_date)\n           , DATE_TRUNC('YEAR', ilmc.claim_end_date)\n           \n)\n\n   , medical_claim_paid_over_time_yearly as (\n    select 'reasonableness' as data_quality_category\n         , 'medical_claim_paid_over_time_yearly' as graph_name\n         , 'year' as level_of_detail\n         , 'N/A' as y_axis_description\n         , 'claim_end_date' as x_axis_description\n         , 'N/A' as filter_description\n         , 'total_paid_amount' as sum_description\n         , CAST(null as DATE) as y_axis\n          -- snowflake and redshift\n         , DATE_TRUNC('YEAR', ilmc.claim_end_date) as x_axis\n         \n         , CAST(null as DATE) as chart_filter\n         , SUM(ilmc.paid_amount) as value\n\n    from tuva.input_layer.input_layer__medical_claim as ilmc\n\n    group by  -- snowflake and redshift\n           DATE_TRUNC('YEAR', ilmc.claim_end_date)\n           \n)\n\n   , medical_claim_volume_over_time_monthly as (\n    select 'reasonableness' as data_quality_category\n         , 'medical_claim_volume_over_time_monthly' as graph_name\n         , 'month' as level_of_detail\n         , 'N/A' as y_axis_description\n         , 'claim_end_date' as x_axis_description\n         , 'paid_year' as filter_description\n         , 'count_distinct_claim_id' as sum_description\n         , CAST(null as DATE) as y_axis\n          -- snowflake and redshift\n         , DATE_TRUNC('MONTH', ilmc.claim_end_date) as x_axis\n         , DATE_TRUNC('YEAR', ilmc.claim_end_date) as chart_filter\n         , CAST(COUNT(distinct ilmc.claim_id) as NUMERIC) as value\n         \n\n    from tuva.input_layer.input_layer__medical_claim as ilmc\n\n    group by  -- snowflake and redshift\n           DATE_TRUNC('MONTH', ilmc.claim_end_date)\n           , DATE_TRUNC('YEAR', ilmc.claim_end_date)\n           \n)\n\n   , medical_claim_volume_over_time_yearly as (\n    select 'reasonableness' as data_quality_category\n         , 'medical_claim_volume_over_time_yearly' as graph_name\n         , 'year' as level_of_detail\n         , 'N/A' as y_axis_description\n         , 'claim_end_date' as x_axis_description\n         , 'N/A' as filter_description\n         , 'count_distinct_claim_id' as sum_description\n         , CAST(null as DATE) as y_axis\n          -- snowflake and redshift\n         , DATE_TRUNC('YEAR', ilmc.claim_end_date) as x_axis\n         , CAST(null as DATE) as chart_filter\n         , CAST(COUNT(distinct ilmc.claim_id) as NUMERIC) as value\n         \n\n    from tuva.input_layer.input_layer__medical_claim as ilmc\n\n    group by  -- snowflake and redshift\n           DATE_TRUNC('YEAR', ilmc.claim_end_date)\n           \n)\n\n\n   , pharmacy_paid_amount_vs_dispensing_date_matrix as (\n\n    select 'timeliness' as data_quality_category\n         , 'pharmacy_paid_amount_vs_dispensing_date_matrix' as graph_name\n         , 'month' as level_of_detail\n         , 'dispensing_date' as y_axis_description\n         , 'paid_date' as x_axis_description\n         , 'year' as filter_description\n         , 'total_paid_amount' as sum_description\n          -- snowflake and redshift\n         , DATE_TRUNC('MONTH', ilpc.dispensing_date) as y_axis\n         , DATE_TRUNC('MONTH', ilpc.paid_date) as x_axis\n         , DATE_TRUNC('YEAR', ilpc.dispensing_date) as chart_filter\n         \n         , SUM(ilpc.paid_amount) as value\n\n    from tuva.input_layer.input_layer__pharmacy_claim as ilpc\n\n    group by  -- snowflake and redshift\n           DATE_TRUNC('MONTH', ilpc.dispensing_date)\n           , DATE_TRUNC('MONTH', ilpc.paid_date)\n           , DATE_TRUNC('YEAR', ilpc.dispensing_date)\n           \n)\n\n   , pharmacy_claim_count_vs_dispensing_date_matrix as (\n\n    select 'timeliness' as data_quality_category\n         , 'pharmacy_claim_count_vs_dispensing_date_matrix' as graph_name\n         , 'month' as level_of_detail\n         , 'dispensing_date' as y_axis_description\n         , 'paid_date' as x_axis_description\n         , 'paid_year' as filter_description\n         , 'unique_number_of_claims' as sum_description\n          -- snowflake and redshift\n         , DATE_TRUNC('MONTH', ilpc.dispensing_date) as y_axis\n         , DATE_TRUNC('MONTH', ilpc.paid_date) as x_axis\n         , DATE_TRUNC('YEAR', ilpc.dispensing_date) as chart_filter\n         \n         , COUNT(distinct ilpc.claim_id) as value\n\n    from tuva.input_layer.input_layer__pharmacy_claim as ilpc\n\n    group by  -- snowflake and redshift\n           DATE_TRUNC('MONTH', ilpc.dispensing_date)\n           , DATE_TRUNC('MONTH', ilpc.paid_date)\n           , DATE_TRUNC('YEAR', ilpc.dispensing_date)\n           \n)\n\n   , pharmacy_claim_paid_over_time_monthly as (\n    select 'reasonableness' as data_quality_category\n         , 'pharmacy_claim_paid_over_time_monthly' as graph_name\n         , 'month' as level_of_detail\n         , 'N/A' as y_axis_description\n         , 'dispensing_date' as x_axis_description\n         , 'paid_year' as filter_description\n         , 'paid_amount' as sum_description\n         , CAST(null as DATE) as y_axis\n          -- snowflake and redshift\n         , DATE_TRUNC('MONTH', ilpc.dispensing_date) as x_axis\n         , DATE_TRUNC('YEAR', ilpc.dispensing_date) as chart_filter\n         \n         , SUM(ilpc.paid_amount) as value\n\n    from tuva.input_layer.input_layer__pharmacy_claim as ilpc\n\n    group by  -- snowflake and redshift\n           DATE_TRUNC('MONTH', ilpc.dispensing_date)\n           , DATE_TRUNC('YEAR', ilpc.dispensing_date)\n           \n)\n\n   , pharmacy_claim_paid_over_time_yearly as (\n    select 'reasonableness' as data_quality_category\n         , 'pharmacy_claim_paid_over_time_yearly' as graph_name\n         , 'year' as level_of_detail\n         , 'N/A' as y_axis_description\n         , 'dispensing_date' as x_axis_description\n         , 'N/A' as filter_description\n         , 'total_paid' as sum_description\n         , CAST(null as DATE) as y_axis\n          -- snowflake and redshift\n         , DATE_TRUNC('YEAR', ilpc.dispensing_date) as x_axis\n         \n         , CAST(null as DATE) as chart_filter\n         , SUM(ilpc.paid_amount) as value\n\n    from tuva.input_layer.input_layer__pharmacy_claim as ilpc\n\n    group by  -- snowflake and redshift\n           DATE_TRUNC('YEAR', ilpc.dispensing_date)\n           \n)\n\n   , pharmacy_claim_volume_over_time_monthly as (\n    select 'reasonableness' as data_quality_category\n         , 'pharmacy_claim_volume_over_time_monthly' as graph_name\n         , 'month' as level_of_detail\n         , 'N/A' as y_axis_description\n         , 'dispensing_date' as x_axis_description\n         , 'paid_year' as filter_description\n         , 'count_distinct_claim_id' as sum_description\n         , CAST(null as DATE) as y_axis\n          -- snowflake and redshift\n         , DATE_TRUNC('MONTH', ilpc.dispensing_date) as x_axis\n         , DATE_TRUNC('YEAR', ilpc.dispensing_date) as chart_filter\n         , CAST(COUNT(distinct ilpc.claim_id) as NUMERIC) as value\n         \n\n    from tuva.input_layer.input_layer__pharmacy_claim as ilpc\n\n    group by  -- snowflake and redshift\n           DATE_TRUNC('MONTH', ilpc.dispensing_date)\n           , DATE_TRUNC('YEAR', ilpc.dispensing_date)\n           \n)\n\n   , pharmacy_claim_volume_over_time_yearly as (\n    select 'reasonableness' as data_quality_category\n         , 'pharmacy_claim_volume_over_time_yearly' as graph_name\n         , 'year' as level_of_detail\n         , 'N/A' as y_axis_description\n         , 'dispensing_date' as x_axis_description\n         , 'N/A' as filter_description\n         , 'count_distinct_claim_id' as sum_description\n         , CAST(null as DATE) as y_axis\n          -- snowflake and redshift\n         , DATE_TRUNC('YEAR', ilpc.dispensing_date) as x_axis\n         , CAST(null as DATE) as chart_filter\n         , CAST(COUNT(distinct ilpc.claim_id) as NUMERIC) as value\n         \n\n    from tuva.input_layer.input_layer__pharmacy_claim as ilpc\n\n    group by  -- snowflake and redshift\n           DATE_TRUNC('YEAR', ilpc.dispensing_date)\n           \n)\n\n\nselect * from medical_paid_amount_vs_end_date_matrix\nunion all\nselect * from medical_claim_count_vs_end_date_matrix\nunion all\nselect * from medical_claim_paid_over_time_monthly\nunion all\nselect * from medical_claim_paid_over_time_yearly\nunion all\nselect * from medical_claim_volume_over_time_monthly\nunion all\nselect * from medical_claim_volume_over_time_yearly\nunion all\nselect * from pharmacy_paid_amount_vs_dispensing_date_matrix\nunion all\nselect * from pharmacy_claim_count_vs_dispensing_date_matrix\nunion all\nselect * from pharmacy_claim_paid_over_time_monthly\nunion all\nselect * from pharmacy_claim_paid_over_time_yearly\nunion all\nselect * from pharmacy_claim_volume_over_time_monthly\nunion all\nselect * from pharmacy_claim_volume_over_time_yearly\n", "relation_name": "tuva.data_quality.exploratory_charts", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:16.152503Z", "completed_at": "2025-06-03T19:50:16.161642Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:16.179059Z", "completed_at": "2025-06-03T19:50:16.179070Z"}], "thread_id": "Thread-1", "execution_time": 0.05134892463684082, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.data_quality__raw_summary", "compiled": true, "compiled_code": "\n\nwith cte as (\n    select\n        'input_layer' as source\n      , 'eligibility' as table_name\n      , count(*) as row_count\n      , count(distinct person_id) as unique_check\n      , 'Unique Patient Count' as unique_check_desc\n      , 2 as table_order\n    from tuva.input_layer.input_layer__eligibility\n\n    union all\n\n    select\n        'raw_data' as source\n      , 'eligibility' as table_name\n      , null as row_count\n      , null as unique_check\n      , 'Unique Patient Count' as unique_check_desc\n      , 1 as table_order\n    from tuva.input_layer.input_layer__eligibility\n\n    union all\n\n    select\n        'input_layer' as source\n      , 'medical_claim' as table_name\n      , count(*) as row_count\n      , count(distinct claim_id) as unique_check\n      , 'Unique Claim Count' as unique_check_desc\n      , 4 as table_order\n    from tuva.input_layer.input_layer__medical_claim\n\n    union all\n\n    select\n        'raw_data' as source\n      , 'medical_claim' as table_name\n      , null as row_count\n      , null as unique_check\n      , 'Unique Claim Count' as unique_check_desc\n      , 3 as table_order\n    from tuva.input_layer.input_layer__medical_claim\n\n    union all\n\n    select\n        'input_layer' as source\n      , 'pharmacy_claim' as table_name\n      , count(*) as row_count\n      , count(distinct claim_id) as unique_check\n      , 'Unique Claim Count' as unique_check_desc\n      , 6 as table_order\n    from tuva.input_layer.input_layer__pharmacy_claim\n\n    union all\n\n    select\n        'raw_data' as source\n      , 'pharmacy_claim' as table_name\n      , null as row_count\n      , null as unique_check\n      , 'Unique Claim Count' as unique_check_desc\n      , 5 as table_order\n    from tuva.input_layer.input_layer__pharmacy_claim\n)\n\nselect\n    cte.*\n  , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom cte", "relation_name": "tuva.data_quality.raw_summary", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:16.182677Z", "completed_at": "2025-06-03T19:50:16.400429Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:16.400735Z", "completed_at": "2025-06-03T19:50:16.400743Z"}], "thread_id": "Thread-2", "execution_time": 0.22228312492370605, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_expectations_expect_column_to_exist_input_layer__pharmacy_claim_charge_amount.df91b80354", "compiled": true, "compiled_code": "\n\n    with test_data as (\n\n        select\n            cast('CHARGE_AMOUNT' as TEXT) as column_name,\n            16 as matching_column_index,\n            True as column_index_matches\n\n    )\n    select *\n    from test_data\n    where\n        not(matching_column_index >= 0 and column_index_matches)", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:16.211022Z", "completed_at": "2025-06-03T19:50:16.401912Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:16.402380Z", "completed_at": "2025-06-03T19:50:16.402385Z"}], "thread_id": "Thread-4", "execution_time": 0.20711398124694824, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_expectations_expect_column_to_exist_input_layer__pharmacy_claim_claim_line_number.e944db22b4", "compiled": true, "compiled_code": "\n\n    with test_data as (\n\n        select\n            cast('CLAIM_LINE_NUMBER' as TEXT) as column_name,\n            1 as matching_column_index,\n            True as column_index_matches\n\n    )\n    select *\n    from test_data\n    where\n        not(matching_column_index >= 0 and column_index_matches)", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:16.167266Z", "completed_at": "2025-06-03T19:50:16.429221Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:16.430058Z", "completed_at": "2025-06-03T19:50:16.430067Z"}], "thread_id": "Thread-3", "execution_time": 0.2701900005340576, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_expectations_expect_column_to_exist_input_layer__pharmacy_claim_allowed_amount.e77b55128d", "compiled": true, "compiled_code": "\n\n    with test_data as (\n\n        select\n            cast('ALLOWED_AMOUNT' as TEXT) as column_name,\n            15 as matching_column_index,\n            True as column_index_matches\n\n    )\n    select *\n    from test_data\n    where\n        not(matching_column_index >= 0 and column_index_matches)", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:16.196959Z", "completed_at": "2025-06-03T19:50:16.459882Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:16.460154Z", "completed_at": "2025-06-03T19:50:16.460161Z"}], "thread_id": "Thread-1", "execution_time": 0.26566338539123535, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_expectations_expect_column_to_exist_input_layer__pharmacy_claim_claim_id.694acf2d05", "compiled": true, "compiled_code": "\n\n    with test_data as (\n\n        select\n            cast('CLAIM_ID' as TEXT) as column_name,\n            0 as matching_column_index,\n            True as column_index_matches\n\n    )\n    select *\n    from test_data\n    where\n        not(matching_column_index >= 0 and column_index_matches)", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:16.402832Z", "completed_at": "2025-06-03T19:50:16.520764Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:16.521100Z", "completed_at": "2025-06-03T19:50:16.521108Z"}], "thread_id": "Thread-2", "execution_time": 0.11957073211669922, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_expectations_expect_column_to_exist_input_layer__pharmacy_claim_coinsurance_amount.63dc88dcba", "compiled": true, "compiled_code": "\n\n    with test_data as (\n\n        select\n            cast('COINSURANCE_AMOUNT' as TEXT) as column_name,\n            17 as matching_column_index,\n            True as column_index_matches\n\n    )\n    select *\n    from test_data\n    where\n        not(matching_column_index >= 0 and column_index_matches)", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:16.419303Z", "completed_at": "2025-06-03T19:50:16.552894Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:16.553314Z", "completed_at": "2025-06-03T19:50:16.553325Z"}], "thread_id": "Thread-4", "execution_time": 0.13846898078918457, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_expectations_expect_column_to_exist_input_layer__pharmacy_claim_copayment_amount.6483b57421", "compiled": true, "compiled_code": "\n\n    with test_data as (\n\n        select\n            cast('COPAYMENT_AMOUNT' as TEXT) as column_name,\n            18 as matching_column_index,\n            True as column_index_matches\n\n    )\n    select *\n    from test_data\n    where\n        not(matching_column_index >= 0 and column_index_matches)", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:16.432239Z", "completed_at": "2025-06-03T19:50:16.556555Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:16.597465Z", "completed_at": "2025-06-03T19:50:16.597496Z"}], "thread_id": "Thread-3", "execution_time": 0.16637873649597168, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_expectations_expect_column_to_exist_input_layer__pharmacy_claim_data_source.ae2e0b603a", "compiled": true, "compiled_code": "\n\n    with test_data as (\n\n        select\n            cast('DATA_SOURCE' as TEXT) as column_name,\n            21 as matching_column_index,\n            True as column_index_matches\n\n    )\n    select *\n    from test_data\n    where\n        not(matching_column_index >= 0 and column_index_matches)", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:16.461529Z", "completed_at": "2025-06-03T19:50:16.777101Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:16.777394Z", "completed_at": "2025-06-03T19:50:16.777403Z"}], "thread_id": "Thread-1", "execution_time": 0.31658291816711426, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_expectations_expect_column_to_exist_input_layer__pharmacy_claim_days_supply.bf862bfab0", "compiled": true, "compiled_code": "\n\n    with test_data as (\n\n        select\n            cast('DAYS_SUPPLY' as TEXT) as column_name,\n            11 as matching_column_index,\n            True as column_index_matches\n\n    )\n    select *\n    from test_data\n    where\n        not(matching_column_index >= 0 and column_index_matches)", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:16.522978Z", "completed_at": "2025-06-03T19:50:16.787258Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:16.787885Z", "completed_at": "2025-06-03T19:50:16.787892Z"}], "thread_id": "Thread-2", "execution_time": 0.26558804512023926, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_expectations_expect_column_to_exist_input_layer__pharmacy_claim_deductible_amount.4603a8ef57", "compiled": true, "compiled_code": "\n\n    with test_data as (\n\n        select\n            cast('DEDUCTIBLE_AMOUNT' as TEXT) as column_name,\n            19 as matching_column_index,\n            True as column_index_matches\n\n    )\n    select *\n    from test_data\n    where\n        not(matching_column_index >= 0 and column_index_matches)", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:16.557286Z", "completed_at": "2025-06-03T19:50:16.903654Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:16.904623Z", "completed_at": "2025-06-03T19:50:16.904657Z"}], "thread_id": "Thread-4", "execution_time": 0.349963903427124, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_expectations_expect_column_to_exist_input_layer__pharmacy_claim_dispensing_date.6560ace92a", "compiled": true, "compiled_code": "\n\n    with test_data as (\n\n        select\n            cast('DISPENSING_DATE' as TEXT) as column_name,\n            8 as matching_column_index,\n            True as column_index_matches\n\n    )\n    select *\n    from test_data\n    where\n        not(matching_column_index >= 0 and column_index_matches)", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:16.778490Z", "completed_at": "2025-06-03T19:50:16.958403Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:16.959953Z", "completed_at": "2025-06-03T19:50:16.959965Z"}], "thread_id": "Thread-1", "execution_time": 0.18203210830688477, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_expectations_expect_column_to_exist_input_layer__pharmacy_claim_file_date.94a94ef064", "compiled": true, "compiled_code": "\n\n    with test_data as (\n\n        select\n            cast('FILE_DATE' as TEXT) as column_name,\n            23 as matching_column_index,\n            True as column_index_matches\n\n    )\n    select *\n    from test_data\n    where\n        not(matching_column_index >= 0 and column_index_matches)", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:16.663008Z", "completed_at": "2025-06-03T19:50:16.958955Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:16.960876Z", "completed_at": "2025-06-03T19:50:16.960882Z"}], "thread_id": "Thread-3", "execution_time": 0.31530284881591797, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_expectations_expect_column_to_exist_input_layer__pharmacy_claim_dispensing_provider_npi.8c136d0570", "compiled": true, "compiled_code": "\n\n    with test_data as (\n\n        select\n            cast('DISPENSING_PROVIDER_NPI' as TEXT) as column_name,\n            7 as matching_column_index,\n            True as column_index_matches\n\n    )\n    select *\n    from test_data\n    where\n        not(matching_column_index >= 0 and column_index_matches)", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:16.789672Z", "completed_at": "2025-06-03T19:50:16.961278Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:16.962989Z", "completed_at": "2025-06-03T19:50:16.962996Z"}], "thread_id": "Thread-2", "execution_time": 0.17410802841186523, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_expectations_expect_column_to_exist_input_layer__pharmacy_claim_file_name.8a5646438e", "compiled": true, "compiled_code": "\n\n    with test_data as (\n\n        select\n            cast('FILE_NAME' as TEXT) as column_name,\n            22 as matching_column_index,\n            True as column_index_matches\n\n    )\n    select *\n    from test_data\n    where\n        not(matching_column_index >= 0 and column_index_matches)", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:16.917658Z", "completed_at": "2025-06-03T19:50:17.075038Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:17.075472Z", "completed_at": "2025-06-03T19:50:17.075481Z"}], "thread_id": "Thread-4", "execution_time": 0.16474390029907227, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_expectations_expect_column_to_exist_input_layer__pharmacy_claim_in_network_flag.8ce309fd02", "compiled": true, "compiled_code": "\n\n    with test_data as (\n\n        select\n            cast('IN_NETWORK_FLAG' as TEXT) as column_name,\n            20 as matching_column_index,\n            True as column_index_matches\n\n    )\n    select *\n    from test_data\n    where\n        not(matching_column_index >= 0 and column_index_matches)", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:16.977023Z", "completed_at": "2025-06-03T19:50:17.107816Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:17.110701Z", "completed_at": "2025-06-03T19:50:17.110710Z"}], "thread_id": "Thread-3", "execution_time": 0.14694714546203613, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_expectations_expect_column_to_exist_input_layer__pharmacy_claim_member_id.bd6d04b597", "compiled": true, "compiled_code": "\n\n    with test_data as (\n\n        select\n            cast('MEMBER_ID' as TEXT) as column_name,\n            3 as matching_column_index,\n            True as column_index_matches\n\n    )\n    select *\n    from test_data\n    where\n        not(matching_column_index >= 0 and column_index_matches)", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:16.965261Z", "completed_at": "2025-06-03T19:50:17.111280Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:17.111886Z", "completed_at": "2025-06-03T19:50:17.111892Z"}], "thread_id": "Thread-1", "execution_time": 0.14851093292236328, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_expectations_expect_column_to_exist_input_layer__pharmacy_claim_ingest_datetime.b606507a37", "compiled": true, "compiled_code": "\n\n    with test_data as (\n\n        select\n            cast('INGEST_DATETIME' as TEXT) as column_name,\n            24 as matching_column_index,\n            True as column_index_matches\n\n    )\n    select *\n    from test_data\n    where\n        not(matching_column_index >= 0 and column_index_matches)", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:16.987699Z", "completed_at": "2025-06-03T19:50:17.112681Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:17.113483Z", "completed_at": "2025-06-03T19:50:17.113489Z"}], "thread_id": "Thread-2", "execution_time": 0.1486070156097412, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_expectations_expect_column_to_exist_input_layer__pharmacy_claim_ndc_code.e1dd3ea0ea", "compiled": true, "compiled_code": "\n\n    with test_data as (\n\n        select\n            cast('NDC_CODE' as TEXT) as column_name,\n            9 as matching_column_index,\n            True as column_index_matches\n\n    )\n    select *\n    from test_data\n    where\n        not(matching_column_index >= 0 and column_index_matches)", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:17.077180Z", "completed_at": "2025-06-03T19:50:17.194352Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:17.194683Z", "completed_at": "2025-06-03T19:50:17.194691Z"}], "thread_id": "Thread-4", "execution_time": 0.11832809448242188, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_expectations_expect_column_to_exist_input_layer__pharmacy_claim_paid_amount.240511ccb7", "compiled": true, "compiled_code": "\n\n    with test_data as (\n\n        select\n            cast('PAID_AMOUNT' as TEXT) as column_name,\n            14 as matching_column_index,\n            True as column_index_matches\n\n    )\n    select *\n    from test_data\n    where\n        not(matching_column_index >= 0 and column_index_matches)", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:17.114247Z", "completed_at": "2025-06-03T19:50:17.247642Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:17.247976Z", "completed_at": "2025-06-03T19:50:17.247984Z"}], "thread_id": "Thread-3", "execution_time": 0.13568496704101562, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_expectations_expect_column_to_exist_input_layer__pharmacy_claim_paid_date.c8324c0a9d", "compiled": true, "compiled_code": "\n\n    with test_data as (\n\n        select\n            cast('PAID_DATE' as TEXT) as column_name,\n            13 as matching_column_index,\n            True as column_index_matches\n\n    )\n    select *\n    from test_data\n    where\n        not(matching_column_index >= 0 and column_index_matches)", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:17.126030Z", "completed_at": "2025-06-03T19:50:17.264345Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:17.264665Z", "completed_at": "2025-06-03T19:50:17.264674Z"}], "thread_id": "Thread-1", "execution_time": 0.15081000328063965, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_expectations_expect_column_to_exist_input_layer__pharmacy_claim_payer.17097efe76", "compiled": true, "compiled_code": "\n\n    with test_data as (\n\n        select\n            cast('PAYER' as TEXT) as column_name,\n            4 as matching_column_index,\n            True as column_index_matches\n\n    )\n    select *\n    from test_data\n    where\n        not(matching_column_index >= 0 and column_index_matches)", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:17.196155Z", "completed_at": "2025-06-03T19:50:17.322562Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:17.322900Z", "completed_at": "2025-06-03T19:50:17.322908Z"}], "thread_id": "Thread-4", "execution_time": 0.12741303443908691, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_expectations_expect_column_to_exist_input_layer__pharmacy_claim_plan.accfbccc89", "compiled": true, "compiled_code": "\n\n    with test_data as (\n\n        select\n            cast('PLAN' as TEXT) as column_name,\n            5 as matching_column_index,\n            True as column_index_matches\n\n    )\n    select *\n    from test_data\n    where\n        not(matching_column_index >= 0 and column_index_matches)", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:17.136788Z", "completed_at": "2025-06-03T19:50:17.443781Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:17.444042Z", "completed_at": "2025-06-03T19:50:17.444049Z"}], "thread_id": "Thread-2", "execution_time": 0.31838202476501465, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_expectations_expect_column_to_exist_input_layer__pharmacy_claim_person_id.17be946d47", "compiled": true, "compiled_code": "\n\n    with test_data as (\n\n        select\n            cast('PERSON_ID' as TEXT) as column_name,\n            2 as matching_column_index,\n            True as column_index_matches\n\n    )\n    select *\n    from test_data\n    where\n        not(matching_column_index >= 0 and column_index_matches)", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:17.249511Z", "completed_at": "2025-06-03T19:50:17.444877Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:17.445637Z", "completed_at": "2025-06-03T19:50:17.445641Z"}], "thread_id": "Thread-3", "execution_time": 0.19684076309204102, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_expectations_expect_column_to_exist_input_layer__pharmacy_claim_prescribing_provider_npi.ba6a285ae6", "compiled": true, "compiled_code": "\n\n    with test_data as (\n\n        select\n            cast('PRESCRIBING_PROVIDER_NPI' as TEXT) as column_name,\n            6 as matching_column_index,\n            True as column_index_matches\n\n    )\n    select *\n    from test_data\n    where\n        not(matching_column_index >= 0 and column_index_matches)", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:17.266054Z", "completed_at": "2025-06-03T19:50:17.445354Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:17.446231Z", "completed_at": "2025-06-03T19:50:17.446235Z"}], "thread_id": "Thread-1", "execution_time": 0.1808619499206543, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_expectations_expect_column_to_exist_input_layer__pharmacy_claim_quantity.4a137f9d79", "compiled": true, "compiled_code": "\n\n    with test_data as (\n\n        select\n            cast('QUANTITY' as TEXT) as column_name,\n            10 as matching_column_index,\n            True as column_index_matches\n\n    )\n    select *\n    from test_data\n    where\n        not(matching_column_index >= 0 and column_index_matches)", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:17.324566Z", "completed_at": "2025-06-03T19:50:17.540075Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:17.540399Z", "completed_at": "2025-06-03T19:50:17.540408Z"}], "thread_id": "Thread-4", "execution_time": 0.2166149616241455, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_expectations_expect_column_to_exist_input_layer__pharmacy_claim_refills.fca420741e", "compiled": true, "compiled_code": "\n\n    with test_data as (\n\n        select\n            cast('REFILLS' as TEXT) as column_name,\n            12 as matching_column_index,\n            True as column_index_matches\n\n    )\n    select *\n    from test_data\n    where\n        not(matching_column_index >= 0 and column_index_matches)", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:17.446835Z", "completed_at": "2025-06-03T19:50:17.580024Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:17.580289Z", "completed_at": "2025-06-03T19:50:17.580297Z"}], "thread_id": "Thread-2", "execution_time": 0.13526678085327148, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_expectations_expect_column_values_to_be_in_type_list_input_layer__pharmacy_claim_allowed_amount__date__datetime__number__decimal__numeric__float__float4__float8__double__double_precision__real__float64__bignumeric.429111ce8e", "compiled": true, "compiled_code": "with relation_columns as (\n\n        \n        select\n            cast('CLAIM_ID' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('CLAIM_LINE_NUMBER' as TEXT) as relation_column,\n            cast('NUMBER' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PERSON_ID' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('MEMBER_ID' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PAYER' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PLAN' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PRESCRIBING_PROVIDER_NPI' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DISPENSING_PROVIDER_NPI' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DISPENSING_DATE' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('NDC_CODE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('QUANTITY' as TEXT) as relation_column,\n            cast('NUMBER' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DAYS_SUPPLY' as TEXT) as relation_column,\n            cast('NUMBER' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('REFILLS' as TEXT) as relation_column,\n            cast('NUMBER' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PAID_DATE' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PAID_AMOUNT' as TEXT) as relation_column,\n            cast('FLOAT' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('ALLOWED_AMOUNT' as TEXT) as relation_column,\n            cast('FLOAT' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('CHARGE_AMOUNT' as TEXT) as relation_column,\n            cast('FLOAT' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('COINSURANCE_AMOUNT' as TEXT) as relation_column,\n            cast('NUMBER' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('COPAYMENT_AMOUNT' as TEXT) as relation_column,\n            cast('NUMBER' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DEDUCTIBLE_AMOUNT' as TEXT) as relation_column,\n            cast('NUMBER' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('IN_NETWORK_FLAG' as TEXT) as relation_column,\n            cast('NUMBER' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DATA_SOURCE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('FILE_NAME' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('FILE_DATE' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('INGEST_DATETIME' as TEXT) as relation_column,\n            cast('TIMESTAMP_NTZ' as TEXT) as relation_column_type\n        \n        \n    ),\n    test_data as (\n\n        select\n            *\n        from\n            relation_columns\n        where\n            relation_column = 'ALLOWED_AMOUNT'\n            and\n            relation_column_type not in ('DATE', 'DATETIME', 'NUMBER', 'DECIMAL', 'NUMERIC', 'FLOAT', 'FLOAT4', 'FLOAT8', 'DOUBLE', 'DOUBLE PRECISION', 'REAL', 'FLOAT64', 'BIGNUMERIC')\n\n    )\n    select *\n    from test_data", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:17.457639Z", "completed_at": "2025-06-03T19:50:17.631610Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:17.631937Z", "completed_at": "2025-06-03T19:50:17.631944Z"}], "thread_id": "Thread-3", "execution_time": 0.17629599571228027, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_expectations_expect_column_values_to_be_in_type_list_input_layer__pharmacy_claim_charge_amount__date__datetime__number__decimal__numeric__float__float4__float8__double__double_precision__real__float64__bignumeric.f18b653573", "compiled": true, "compiled_code": "with relation_columns as (\n\n        \n        select\n            cast('CLAIM_ID' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('CLAIM_LINE_NUMBER' as TEXT) as relation_column,\n            cast('NUMBER' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PERSON_ID' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('MEMBER_ID' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PAYER' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PLAN' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PRESCRIBING_PROVIDER_NPI' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DISPENSING_PROVIDER_NPI' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DISPENSING_DATE' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('NDC_CODE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('QUANTITY' as TEXT) as relation_column,\n            cast('NUMBER' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DAYS_SUPPLY' as TEXT) as relation_column,\n            cast('NUMBER' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('REFILLS' as TEXT) as relation_column,\n            cast('NUMBER' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PAID_DATE' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PAID_AMOUNT' as TEXT) as relation_column,\n            cast('FLOAT' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('ALLOWED_AMOUNT' as TEXT) as relation_column,\n            cast('FLOAT' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('CHARGE_AMOUNT' as TEXT) as relation_column,\n            cast('FLOAT' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('COINSURANCE_AMOUNT' as TEXT) as relation_column,\n            cast('NUMBER' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('COPAYMENT_AMOUNT' as TEXT) as relation_column,\n            cast('NUMBER' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DEDUCTIBLE_AMOUNT' as TEXT) as relation_column,\n            cast('NUMBER' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('IN_NETWORK_FLAG' as TEXT) as relation_column,\n            cast('NUMBER' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DATA_SOURCE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('FILE_NAME' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('FILE_DATE' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('INGEST_DATETIME' as TEXT) as relation_column,\n            cast('TIMESTAMP_NTZ' as TEXT) as relation_column_type\n        \n        \n    ),\n    test_data as (\n\n        select\n            *\n        from\n            relation_columns\n        where\n            relation_column = 'CHARGE_AMOUNT'\n            and\n            relation_column_type not in ('DATE', 'DATETIME', 'NUMBER', 'DECIMAL', 'NUMERIC', 'FLOAT', 'FLOAT4', 'FLOAT8', 'DOUBLE', 'DOUBLE PRECISION', 'REAL', 'FLOAT64', 'BIGNUMERIC')\n\n    )\n    select *\n    from test_data", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:17.463973Z", "completed_at": "2025-06-03T19:50:17.632983Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:17.633500Z", "completed_at": "2025-06-03T19:50:17.633504Z"}], "thread_id": "Thread-1", "execution_time": 0.17754817008972168, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_expectations_expect_column_values_to_be_in_type_list_input_layer__pharmacy_claim_coinsurance_amount__date__datetime__number__decimal__numeric__float__float4__float8__double__double_precision__real__float64__bignumeric.9d946fc5ec", "compiled": true, "compiled_code": "with relation_columns as (\n\n        \n        select\n            cast('CLAIM_ID' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('CLAIM_LINE_NUMBER' as TEXT) as relation_column,\n            cast('NUMBER' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PERSON_ID' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('MEMBER_ID' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PAYER' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PLAN' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PRESCRIBING_PROVIDER_NPI' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DISPENSING_PROVIDER_NPI' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DISPENSING_DATE' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('NDC_CODE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('QUANTITY' as TEXT) as relation_column,\n            cast('NUMBER' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DAYS_SUPPLY' as TEXT) as relation_column,\n            cast('NUMBER' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('REFILLS' as TEXT) as relation_column,\n            cast('NUMBER' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PAID_DATE' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PAID_AMOUNT' as TEXT) as relation_column,\n            cast('FLOAT' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('ALLOWED_AMOUNT' as TEXT) as relation_column,\n            cast('FLOAT' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('CHARGE_AMOUNT' as TEXT) as relation_column,\n            cast('FLOAT' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('COINSURANCE_AMOUNT' as TEXT) as relation_column,\n            cast('NUMBER' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('COPAYMENT_AMOUNT' as TEXT) as relation_column,\n            cast('NUMBER' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DEDUCTIBLE_AMOUNT' as TEXT) as relation_column,\n            cast('NUMBER' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('IN_NETWORK_FLAG' as TEXT) as relation_column,\n            cast('NUMBER' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DATA_SOURCE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('FILE_NAME' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('FILE_DATE' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('INGEST_DATETIME' as TEXT) as relation_column,\n            cast('TIMESTAMP_NTZ' as TEXT) as relation_column_type\n        \n        \n    ),\n    test_data as (\n\n        select\n            *\n        from\n            relation_columns\n        where\n            relation_column = 'COINSURANCE_AMOUNT'\n            and\n            relation_column_type not in ('DATE', 'DATETIME', 'NUMBER', 'DECIMAL', 'NUMERIC', 'FLOAT', 'FLOAT4', 'FLOAT8', 'DOUBLE', 'DOUBLE PRECISION', 'REAL', 'FLOAT64', 'BIGNUMERIC')\n\n    )\n    select *\n    from test_data", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:17.541648Z", "completed_at": "2025-06-03T19:50:17.661545Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:17.661840Z", "completed_at": "2025-06-03T19:50:17.661847Z"}], "thread_id": "Thread-4", "execution_time": 0.12082099914550781, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_expectations_expect_column_values_to_be_in_type_list_input_layer__pharmacy_claim_copayment_amount__date__datetime__number__decimal__numeric__float__float4__float8__double__double_precision__real__float64__bignumeric.53c6172532", "compiled": true, "compiled_code": "with relation_columns as (\n\n        \n        select\n            cast('CLAIM_ID' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('CLAIM_LINE_NUMBER' as TEXT) as relation_column,\n            cast('NUMBER' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PERSON_ID' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('MEMBER_ID' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PAYER' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PLAN' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PRESCRIBING_PROVIDER_NPI' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DISPENSING_PROVIDER_NPI' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DISPENSING_DATE' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('NDC_CODE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('QUANTITY' as TEXT) as relation_column,\n            cast('NUMBER' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DAYS_SUPPLY' as TEXT) as relation_column,\n            cast('NUMBER' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('REFILLS' as TEXT) as relation_column,\n            cast('NUMBER' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PAID_DATE' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PAID_AMOUNT' as TEXT) as relation_column,\n            cast('FLOAT' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('ALLOWED_AMOUNT' as TEXT) as relation_column,\n            cast('FLOAT' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('CHARGE_AMOUNT' as TEXT) as relation_column,\n            cast('FLOAT' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('COINSURANCE_AMOUNT' as TEXT) as relation_column,\n            cast('NUMBER' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('COPAYMENT_AMOUNT' as TEXT) as relation_column,\n            cast('NUMBER' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DEDUCTIBLE_AMOUNT' as TEXT) as relation_column,\n            cast('NUMBER' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('IN_NETWORK_FLAG' as TEXT) as relation_column,\n            cast('NUMBER' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DATA_SOURCE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('FILE_NAME' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('FILE_DATE' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('INGEST_DATETIME' as TEXT) as relation_column,\n            cast('TIMESTAMP_NTZ' as TEXT) as relation_column_type\n        \n        \n    ),\n    test_data as (\n\n        select\n            *\n        from\n            relation_columns\n        where\n            relation_column = 'COPAYMENT_AMOUNT'\n            and\n            relation_column_type not in ('DATE', 'DATETIME', 'NUMBER', 'DECIMAL', 'NUMERIC', 'FLOAT', 'FLOAT4', 'FLOAT8', 'DOUBLE', 'DOUBLE PRECISION', 'REAL', 'FLOAT64', 'BIGNUMERIC')\n\n    )\n    select *\n    from test_data", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:17.581507Z", "completed_at": "2025-06-03T19:50:17.690064Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:17.690329Z", "completed_at": "2025-06-03T19:50:17.690336Z"}], "thread_id": "Thread-2", "execution_time": 0.10939717292785645, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_expectations_expect_column_values_to_be_in_type_list_input_layer__pharmacy_claim_deductible_amount__date__datetime__number__decimal__numeric__float__float4__float8__double__double_precision__real__float64__bignumeric.9ecddd073a", "compiled": true, "compiled_code": "with relation_columns as (\n\n        \n        select\n            cast('CLAIM_ID' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('CLAIM_LINE_NUMBER' as TEXT) as relation_column,\n            cast('NUMBER' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PERSON_ID' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('MEMBER_ID' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PAYER' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PLAN' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PRESCRIBING_PROVIDER_NPI' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DISPENSING_PROVIDER_NPI' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DISPENSING_DATE' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('NDC_CODE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('QUANTITY' as TEXT) as relation_column,\n            cast('NUMBER' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DAYS_SUPPLY' as TEXT) as relation_column,\n            cast('NUMBER' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('REFILLS' as TEXT) as relation_column,\n            cast('NUMBER' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PAID_DATE' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PAID_AMOUNT' as TEXT) as relation_column,\n            cast('FLOAT' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('ALLOWED_AMOUNT' as TEXT) as relation_column,\n            cast('FLOAT' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('CHARGE_AMOUNT' as TEXT) as relation_column,\n            cast('FLOAT' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('COINSURANCE_AMOUNT' as TEXT) as relation_column,\n            cast('NUMBER' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('COPAYMENT_AMOUNT' as TEXT) as relation_column,\n            cast('NUMBER' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DEDUCTIBLE_AMOUNT' as TEXT) as relation_column,\n            cast('NUMBER' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('IN_NETWORK_FLAG' as TEXT) as relation_column,\n            cast('NUMBER' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DATA_SOURCE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('FILE_NAME' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('FILE_DATE' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('INGEST_DATETIME' as TEXT) as relation_column,\n            cast('TIMESTAMP_NTZ' as TEXT) as relation_column_type\n        \n        \n    ),\n    test_data as (\n\n        select\n            *\n        from\n            relation_columns\n        where\n            relation_column = 'DEDUCTIBLE_AMOUNT'\n            and\n            relation_column_type not in ('DATE', 'DATETIME', 'NUMBER', 'DECIMAL', 'NUMERIC', 'FLOAT', 'FLOAT4', 'FLOAT8', 'DOUBLE', 'DOUBLE PRECISION', 'REAL', 'FLOAT64', 'BIGNUMERIC')\n\n    )\n    select *\n    from test_data", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:17.633924Z", "completed_at": "2025-06-03T19:50:17.775960Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:17.776222Z", "completed_at": "2025-06-03T19:50:17.776228Z"}], "thread_id": "Thread-3", "execution_time": 0.14359307289123535, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_expectations_expect_column_values_to_be_in_type_list_input_layer__pharmacy_claim_ingest_datetime__date__datetime__time__timestamp__timestamp_ntz__timestampntz__timestamp_ltz__timestampltz__timestamp_tz__timestamptz__timestamp_with_time_zone__timestamp_without_time_zone__datetime2__datetimeoffset.3b229d2c8c", "compiled": true, "compiled_code": "with relation_columns as (\n\n        \n        select\n            cast('CLAIM_ID' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('CLAIM_LINE_NUMBER' as TEXT) as relation_column,\n            cast('NUMBER' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PERSON_ID' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('MEMBER_ID' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PAYER' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PLAN' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PRESCRIBING_PROVIDER_NPI' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DISPENSING_PROVIDER_NPI' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DISPENSING_DATE' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('NDC_CODE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('QUANTITY' as TEXT) as relation_column,\n            cast('NUMBER' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DAYS_SUPPLY' as TEXT) as relation_column,\n            cast('NUMBER' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('REFILLS' as TEXT) as relation_column,\n            cast('NUMBER' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PAID_DATE' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PAID_AMOUNT' as TEXT) as relation_column,\n            cast('FLOAT' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('ALLOWED_AMOUNT' as TEXT) as relation_column,\n            cast('FLOAT' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('CHARGE_AMOUNT' as TEXT) as relation_column,\n            cast('FLOAT' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('COINSURANCE_AMOUNT' as TEXT) as relation_column,\n            cast('NUMBER' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('COPAYMENT_AMOUNT' as TEXT) as relation_column,\n            cast('NUMBER' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DEDUCTIBLE_AMOUNT' as TEXT) as relation_column,\n            cast('NUMBER' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('IN_NETWORK_FLAG' as TEXT) as relation_column,\n            cast('NUMBER' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DATA_SOURCE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('FILE_NAME' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('FILE_DATE' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('INGEST_DATETIME' as TEXT) as relation_column,\n            cast('TIMESTAMP_NTZ' as TEXT) as relation_column_type\n        \n        \n    ),\n    test_data as (\n\n        select\n            *\n        from\n            relation_columns\n        where\n            relation_column = 'INGEST_DATETIME'\n            and\n            relation_column_type not in ('DATE', 'DATETIME', 'TIME', 'TIMESTAMP', 'TIMESTAMP_NTZ', 'TIMESTAMPNTZ', 'TIMESTAMP_LTZ', 'TIMESTAMPLTZ', 'TIMESTAMP_TZ', 'TIMESTAMPTZ', 'TIMESTAMP WITH TIME ZONE', 'TIMESTAMP WITHOUT TIME ZONE', 'DATETIME2', 'DATETIMEOFFSET')\n\n    )\n    select *\n    from test_data", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:17.643789Z", "completed_at": "2025-06-03T19:50:17.783045Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:17.783322Z", "completed_at": "2025-06-03T19:50:17.783327Z"}], "thread_id": "Thread-1", "execution_time": 0.14032697677612305, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_expectations_expect_column_values_to_be_in_type_list_input_layer__pharmacy_claim_paid_amount__date__datetime__number__decimal__numeric__float__float4__float8__double__double_precision__real__float64__bignumeric.e3795ca0e3", "compiled": true, "compiled_code": "with relation_columns as (\n\n        \n        select\n            cast('CLAIM_ID' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('CLAIM_LINE_NUMBER' as TEXT) as relation_column,\n            cast('NUMBER' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PERSON_ID' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('MEMBER_ID' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PAYER' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PLAN' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PRESCRIBING_PROVIDER_NPI' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DISPENSING_PROVIDER_NPI' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DISPENSING_DATE' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('NDC_CODE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('QUANTITY' as TEXT) as relation_column,\n            cast('NUMBER' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DAYS_SUPPLY' as TEXT) as relation_column,\n            cast('NUMBER' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('REFILLS' as TEXT) as relation_column,\n            cast('NUMBER' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PAID_DATE' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PAID_AMOUNT' as TEXT) as relation_column,\n            cast('FLOAT' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('ALLOWED_AMOUNT' as TEXT) as relation_column,\n            cast('FLOAT' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('CHARGE_AMOUNT' as TEXT) as relation_column,\n            cast('FLOAT' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('COINSURANCE_AMOUNT' as TEXT) as relation_column,\n            cast('NUMBER' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('COPAYMENT_AMOUNT' as TEXT) as relation_column,\n            cast('NUMBER' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DEDUCTIBLE_AMOUNT' as TEXT) as relation_column,\n            cast('NUMBER' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('IN_NETWORK_FLAG' as TEXT) as relation_column,\n            cast('NUMBER' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DATA_SOURCE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('FILE_NAME' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('FILE_DATE' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('INGEST_DATETIME' as TEXT) as relation_column,\n            cast('TIMESTAMP_NTZ' as TEXT) as relation_column_type\n        \n        \n    ),\n    test_data as (\n\n        select\n            *\n        from\n            relation_columns\n        where\n            relation_column = 'PAID_AMOUNT'\n            and\n            relation_column_type not in ('DATE', 'DATETIME', 'NUMBER', 'DECIMAL', 'NUMERIC', 'FLOAT', 'FLOAT4', 'FLOAT8', 'DOUBLE', 'DOUBLE PRECISION', 'REAL', 'FLOAT64', 'BIGNUMERIC')\n\n    )\n    select *\n    from test_data", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:17.777335Z", "completed_at": "2025-06-03T19:50:17.784884Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:17.790785Z", "completed_at": "2025-06-03T19:50:17.790792Z"}], "thread_id": "Thread-3", "execution_time": 0.013998031616210938, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_utils_unique_combination_of_columns_input_layer__pharmacy_claim_claim_id__claim_line_number__data_source.81a7f0ed0c", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith validation_errors as (\n\n    select\n        claim_id, claim_line_number, data_source\n    from tuva.input_layer.input_layer__pharmacy_claim\n    group by claim_id, claim_line_number, data_source\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:17.663695Z", "completed_at": "2025-06-03T19:50:17.797884Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:17.798352Z", "completed_at": "2025-06-03T19:50:17.798357Z"}], "thread_id": "Thread-4", "execution_time": 0.13561010360717773, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_expectations_expect_column_values_to_be_of_type_input_layer__pharmacy_claim_dispensing_date__date.cef1494968", "compiled": true, "compiled_code": "with relation_columns as (\n\n        \n        select\n            cast('CLAIM_ID' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('CLAIM_LINE_NUMBER' as TEXT) as relation_column,\n            cast('NUMBER' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PERSON_ID' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('MEMBER_ID' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PAYER' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PLAN' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PRESCRIBING_PROVIDER_NPI' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DISPENSING_PROVIDER_NPI' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DISPENSING_DATE' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('NDC_CODE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('QUANTITY' as TEXT) as relation_column,\n            cast('NUMBER' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DAYS_SUPPLY' as TEXT) as relation_column,\n            cast('NUMBER' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('REFILLS' as TEXT) as relation_column,\n            cast('NUMBER' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PAID_DATE' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PAID_AMOUNT' as TEXT) as relation_column,\n            cast('FLOAT' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('ALLOWED_AMOUNT' as TEXT) as relation_column,\n            cast('FLOAT' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('CHARGE_AMOUNT' as TEXT) as relation_column,\n            cast('FLOAT' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('COINSURANCE_AMOUNT' as TEXT) as relation_column,\n            cast('NUMBER' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('COPAYMENT_AMOUNT' as TEXT) as relation_column,\n            cast('NUMBER' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DEDUCTIBLE_AMOUNT' as TEXT) as relation_column,\n            cast('NUMBER' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('IN_NETWORK_FLAG' as TEXT) as relation_column,\n            cast('NUMBER' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DATA_SOURCE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('FILE_NAME' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('FILE_DATE' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('INGEST_DATETIME' as TEXT) as relation_column,\n            cast('TIMESTAMP_NTZ' as TEXT) as relation_column_type\n        \n        \n    ),\n    test_data as (\n\n        select\n            *\n        from\n            relation_columns\n        where\n            relation_column = 'DISPENSING_DATE'\n            and\n            relation_column_type not in ('DATE')\n\n    )\n    select *\n    from test_data", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:17.791263Z", "completed_at": "2025-06-03T19:50:17.804004Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:17.804619Z", "completed_at": "2025-06-03T19:50:17.804625Z"}], "thread_id": "Thread-1", "execution_time": 0.02006077766418457, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.not_null_input_layer__pharmacy_claim_claim_id.240ca074a7", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect claim_id\nfrom tuva.input_layer.input_layer__pharmacy_claim\nwhere claim_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:17.798739Z", "completed_at": "2025-06-03T19:50:17.805625Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:17.806336Z", "completed_at": "2025-06-03T19:50:17.806340Z"}], "thread_id": "Thread-3", "execution_time": 0.0087890625, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.not_null_input_layer__pharmacy_claim_claim_line_number.5a8f462c16", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect claim_line_number\nfrom tuva.input_layer.input_layer__pharmacy_claim\nwhere claim_line_number is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:17.806706Z", "completed_at": "2025-06-03T19:50:17.826544Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:17.827178Z", "completed_at": "2025-06-03T19:50:17.827187Z"}], "thread_id": "Thread-4", "execution_time": 0.022222042083740234, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.not_null_input_layer__pharmacy_claim_days_supply.bb81e6e8da", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect days_supply\nfrom tuva.input_layer.input_layer__pharmacy_claim\nwhere days_supply is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:17.814379Z", "completed_at": "2025-06-03T19:50:17.827630Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:17.835884Z", "completed_at": "2025-06-03T19:50:17.835890Z"}], "thread_id": "Thread-1", "execution_time": 0.029909849166870117, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.not_null_input_layer__pharmacy_claim_ndc_code.dfbd278d4a", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect ndc_code\nfrom tuva.input_layer.input_layer__pharmacy_claim\nwhere ndc_code is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:17.691559Z", "completed_at": "2025-06-03T19:50:17.835558Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:17.837151Z", "completed_at": "2025-06-03T19:50:17.837158Z"}], "thread_id": "Thread-2", "execution_time": 0.14620018005371094, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_expectations_expect_column_values_to_be_of_type_input_layer__pharmacy_claim_paid_date__date.eddd9db67b", "compiled": true, "compiled_code": "with relation_columns as (\n\n        \n        select\n            cast('CLAIM_ID' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('CLAIM_LINE_NUMBER' as TEXT) as relation_column,\n            cast('NUMBER' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PERSON_ID' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('MEMBER_ID' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PAYER' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PLAN' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PRESCRIBING_PROVIDER_NPI' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DISPENSING_PROVIDER_NPI' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DISPENSING_DATE' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('NDC_CODE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('QUANTITY' as TEXT) as relation_column,\n            cast('NUMBER' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DAYS_SUPPLY' as TEXT) as relation_column,\n            cast('NUMBER' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('REFILLS' as TEXT) as relation_column,\n            cast('NUMBER' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PAID_DATE' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PAID_AMOUNT' as TEXT) as relation_column,\n            cast('FLOAT' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('ALLOWED_AMOUNT' as TEXT) as relation_column,\n            cast('FLOAT' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('CHARGE_AMOUNT' as TEXT) as relation_column,\n            cast('FLOAT' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('COINSURANCE_AMOUNT' as TEXT) as relation_column,\n            cast('NUMBER' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('COPAYMENT_AMOUNT' as TEXT) as relation_column,\n            cast('NUMBER' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DEDUCTIBLE_AMOUNT' as TEXT) as relation_column,\n            cast('NUMBER' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('IN_NETWORK_FLAG' as TEXT) as relation_column,\n            cast('NUMBER' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DATA_SOURCE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('FILE_NAME' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('FILE_DATE' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('INGEST_DATETIME' as TEXT) as relation_column,\n            cast('TIMESTAMP_NTZ' as TEXT) as relation_column_type\n        \n        \n    ),\n    test_data as (\n\n        select\n            *\n        from\n            relation_columns\n        where\n            relation_column = 'PAID_DATE'\n            and\n            relation_column_type not in ('DATE')\n\n    )\n    select *\n    from test_data", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:17.827854Z", "completed_at": "2025-06-03T19:50:17.838195Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:17.839653Z", "completed_at": "2025-06-03T19:50:17.839660Z"}], "thread_id": "Thread-3", "execution_time": 0.019699811935424805, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.not_null_input_layer__pharmacy_claim_person_id.f57fb1af40", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect person_id\nfrom tuva.input_layer.input_layer__pharmacy_claim\nwhere person_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:17.864808Z", "completed_at": "2025-06-03T19:50:18.123027Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:18.123818Z", "completed_at": "2025-06-03T19:50:18.123829Z"}], "thread_id": "Thread-2", "execution_time": 0.2704198360443115, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_expectations_expect_column_to_exist_input_layer__provider_attribution_custom_attributed_provider_lob.c462b3ca4d", "compiled": true, "compiled_code": "\n\n    with test_data as (\n\n        select\n            cast('CUSTOM_ATTRIBUTED_PROVIDER_LOB' as TEXT) as column_name,\n            12 as matching_column_index,\n            True as column_index_matches\n\n    )\n    select *\n    from test_data\n    where\n        not(matching_column_index >= 0 and column_index_matches)", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:17.995465Z", "completed_at": "2025-06-03T19:50:18.123427Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:18.124523Z", "completed_at": "2025-06-03T19:50:18.124529Z"}], "thread_id": "Thread-4", "execution_time": 0.24896597862243652, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_expectations_expect_column_to_exist_input_layer__provider_attribution_custom_attributed_provider_practice.2e06fcabbe", "compiled": true, "compiled_code": "\n\n    with test_data as (\n\n        select\n            cast('CUSTOM_ATTRIBUTED_PROVIDER_PRACTICE' as TEXT) as column_name,\n            10 as matching_column_index,\n            True as column_index_matches\n\n    )\n    select *\n    from test_data\n    where\n        not(matching_column_index >= 0 and column_index_matches)", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:17.876191Z", "completed_at": "2025-06-03T19:50:18.153863Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:18.158289Z", "completed_at": "2025-06-03T19:50:18.158297Z"}], "thread_id": "Thread-3", "execution_time": 0.29389405250549316, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_expectations_expect_column_to_exist_input_layer__provider_attribution_custom_attributed_provider_organization.372ddbbbfc", "compiled": true, "compiled_code": "\n\n    with test_data as (\n\n        select\n            cast('CUSTOM_ATTRIBUTED_PROVIDER_ORGANIZATION' as TEXT) as column_name,\n            11 as matching_column_index,\n            True as column_index_matches\n\n    )\n    select *\n    from test_data\n    where\n        not(matching_column_index >= 0 and column_index_matches)", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:17.854885Z", "completed_at": "2025-06-03T19:50:18.158802Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:18.159893Z", "completed_at": "2025-06-03T19:50:18.159898Z"}], "thread_id": "Thread-1", "execution_time": 0.3206298351287842, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_expectations_expect_column_to_exist_input_layer__provider_attribution_custom_attributed_provider.ebae4b1504", "compiled": true, "compiled_code": "\n\n    with test_data as (\n\n        select\n            cast('CUSTOM_ATTRIBUTED_PROVIDER' as TEXT) as column_name,\n            9 as matching_column_index,\n            True as column_index_matches\n\n    )\n    select *\n    from test_data\n    where\n        not(matching_column_index >= 0 and column_index_matches)", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:18.162609Z", "completed_at": "2025-06-03T19:50:18.290473Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:18.291245Z", "completed_at": "2025-06-03T19:50:18.291254Z"}], "thread_id": "Thread-3", "execution_time": 0.1303548812866211, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_expectations_expect_column_to_exist_input_layer__provider_attribution_payer.4a88795b09", "compiled": true, "compiled_code": "\n\n    with test_data as (\n\n        select\n            cast('PAYER' as TEXT) as column_name,\n            2 as matching_column_index,\n            True as column_index_matches\n\n    )\n    select *\n    from test_data\n    where\n        not(matching_column_index >= 0 and column_index_matches)", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:18.173203Z", "completed_at": "2025-06-03T19:50:18.290809Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:18.291852Z", "completed_at": "2025-06-03T19:50:18.291857Z"}], "thread_id": "Thread-1", "execution_time": 0.1296248435974121, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_expectations_expect_column_to_exist_input_layer__provider_attribution_payer_attributed_provider.18a5e9443f", "compiled": true, "compiled_code": "\n\n    with test_data as (\n\n        select\n            cast('PAYER_ATTRIBUTED_PROVIDER' as TEXT) as column_name,\n            5 as matching_column_index,\n            True as column_index_matches\n\n    )\n    select *\n    from test_data\n    where\n        not(matching_column_index >= 0 and column_index_matches)", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:18.134669Z", "completed_at": "2025-06-03T19:50:18.292392Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:18.293831Z", "completed_at": "2025-06-03T19:50:18.293837Z"}], "thread_id": "Thread-2", "execution_time": 0.16610217094421387, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_expectations_expect_column_to_exist_input_layer__provider_attribution_data_source.8344bdd565", "compiled": true, "compiled_code": "\n\n    with test_data as (\n\n        select\n            cast('DATA_SOURCE' as TEXT) as column_name,\n            4 as matching_column_index,\n            True as column_index_matches\n\n    )\n    select *\n    from test_data\n    where\n        not(matching_column_index >= 0 and column_index_matches)", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:18.147589Z", "completed_at": "2025-06-03T19:50:18.293068Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:18.294808Z", "completed_at": "2025-06-03T19:50:18.294815Z"}], "thread_id": "Thread-4", "execution_time": 0.16578412055969238, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_expectations_expect_column_to_exist_input_layer__provider_attribution_patient_id.aaf4d89459", "compiled": true, "compiled_code": "\n\n    with test_data as (\n\n        select\n            cast('PATIENT_ID' as TEXT) as column_name,\n            -1 as matching_column_index,\n            True as column_index_matches\n\n    )\n    select *\n    from test_data\n    where\n        not(matching_column_index >= 0 and column_index_matches)", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:18.309684Z", "completed_at": "2025-06-03T19:50:18.437728Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:18.438138Z", "completed_at": "2025-06-03T19:50:18.438149Z"}], "thread_id": "Thread-1", "execution_time": 0.14288592338562012, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_expectations_expect_column_to_exist_input_layer__provider_attribution_payer_attributed_provider_organization.e73277f205", "compiled": true, "compiled_code": "\n\n    with test_data as (\n\n        select\n            cast('PAYER_ATTRIBUTED_PROVIDER_ORGANIZATION' as TEXT) as column_name,\n            7 as matching_column_index,\n            True as column_index_matches\n\n    )\n    select *\n    from test_data\n    where\n        not(matching_column_index >= 0 and column_index_matches)", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:18.320744Z", "completed_at": "2025-06-03T19:50:18.457762Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:18.458120Z", "completed_at": "2025-06-03T19:50:18.458129Z"}], "thread_id": "Thread-2", "execution_time": 0.16106534004211426, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_expectations_expect_column_to_exist_input_layer__provider_attribution_payer_attributed_provider_practice.13085dc012", "compiled": true, "compiled_code": "\n\n    with test_data as (\n\n        select\n            cast('PAYER_ATTRIBUTED_PROVIDER_PRACTICE' as TEXT) as column_name,\n            6 as matching_column_index,\n            True as column_index_matches\n\n    )\n    select *\n    from test_data\n    where\n        not(matching_column_index >= 0 and column_index_matches)", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:18.329967Z", "completed_at": "2025-06-03T19:50:18.957754Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:18.958038Z", "completed_at": "2025-06-03T19:50:18.958046Z"}], "thread_id": "Thread-4", "execution_time": 0.6487829685211182, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_expectations_expect_column_to_exist_input_layer__provider_attribution_person_id.5a362052ef", "compiled": true, "compiled_code": "\n\n    with test_data as (\n\n        select\n            cast('PERSON_ID' as TEXT) as column_name,\n            0 as matching_column_index,\n            True as column_index_matches\n\n    )\n    select *\n    from test_data\n    where\n        not(matching_column_index >= 0 and column_index_matches)", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:18.297473Z", "completed_at": "2025-06-03T19:50:18.959300Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:18.966590Z", "completed_at": "2025-06-03T19:50:18.966598Z"}], "thread_id": "Thread-3", "execution_time": 0.6722679138183594, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_expectations_expect_column_to_exist_input_layer__provider_attribution_payer_attributed_provider_lob.68162c0b64", "compiled": true, "compiled_code": "\n\n    with test_data as (\n\n        select\n            cast('PAYER_ATTRIBUTED_PROVIDER_LOB' as TEXT) as column_name,\n            8 as matching_column_index,\n            True as column_index_matches\n\n    )\n    select *\n    from test_data\n    where\n        not(matching_column_index >= 0 and column_index_matches)", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:18.959527Z", "completed_at": "2025-06-03T19:50:18.973503Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:18.973814Z", "completed_at": "2025-06-03T19:50:18.973820Z"}], "thread_id": "Thread-4", "execution_time": 0.015072822570800781, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_utils_unique_combination_of_columns_input_layer__provider_attribution_person_id__payer___plan_if_target_type_fabric_else_plan___year_month__data_source.53cec3a4b0", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith validation_errors as (\n\n    select\n        person_id, payer, plan, year_month, data_source\n    from tuva.input_layer.input_layer__provider_attribution\n    group by person_id, payer, plan, year_month, data_source\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:18.967930Z", "completed_at": "2025-06-03T19:50:18.974848Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:18.975299Z", "completed_at": "2025-06-03T19:50:18.975305Z"}], "thread_id": "Thread-3", "execution_time": 0.007936954498291016, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.not_null_input_layer__provider_attribution_data_source.a247b680f8", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect data_source\nfrom tuva.input_layer.input_layer__provider_attribution\nwhere data_source is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:18.975710Z", "completed_at": "2025-06-03T19:50:18.987095Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:18.996499Z", "completed_at": "2025-06-03T19:50:18.996510Z"}], "thread_id": "Thread-4", "execution_time": 0.0221099853515625, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.not_null_input_layer__provider_attribution_person_id.09762cc9ad", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect person_id\nfrom tuva.input_layer.input_layer__provider_attribution\nwhere person_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:18.459645Z", "completed_at": "2025-06-03T19:50:18.997389Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:18.998260Z", "completed_at": "2025-06-03T19:50:18.998267Z"}], "thread_id": "Thread-2", "execution_time": 0.5393671989440918, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_expectations_expect_column_to_exist_input_layer__provider_attribution_year_month.c4717db20e", "compiled": true, "compiled_code": "\n\n    with test_data as (\n\n        select\n            cast('YEAR_MONTH' as TEXT) as column_name,\n            1 as matching_column_index,\n            True as column_index_matches\n\n    )\n    select *\n    from test_data\n    where\n        not(matching_column_index >= 0 and column_index_matches)", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:18.987544Z", "completed_at": "2025-06-03T19:50:18.999660Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:19.000811Z", "completed_at": "2025-06-03T19:50:19.000821Z"}], "thread_id": "Thread-3", "execution_time": 0.01681208610534668, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.not_null_input_layer__provider_attribution_year_month.54a6985085", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect year_month\nfrom tuva.input_layer.input_layer__provider_attribution\nwhere year_month is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:19.001930Z", "completed_at": "2025-06-03T19:50:19.029363Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:19.033424Z", "completed_at": "2025-06-03T19:50:19.033432Z"}], "thread_id": "Thread-4", "execution_time": 0.03447914123535156, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.data_quality__data_quality_clinical_for_pbi", "compiled": true, "compiled_code": "\n\nwith ranked_examples as (\n       select\n              summary_sk\n              , data_source\n              , table_name\n              , field_name\n              , bucket_name\n              , invalid_reason\n              , drill_down_key\n              , drill_down_value as drill_down_value\n              , field_value as field_value\n              , count(drill_down_value) as frequency\n              , row_number() over (partition by summary_sk, bucket_name, field_value\norder by field_value) as rn\n              , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\n       from tuva.data_quality.data_quality_clinical_detail\n       where bucket_name not in ('valid', 'null')\n       group by\n              data_source\n              , field_name\n              , table_name\n              , bucket_name\n              , field_value\n              , drill_down_key\n              , drill_down_value\n              , invalid_reason\n              , summary_sk\n\n)\n\n, pk_examples as (\n       select\n              detail.summary_sk\n              , detail.data_source\n              , detail.table_name\n              , detail.field_name\n              , detail.bucket_name\n              , detail.invalid_reason\n              , detail.drill_down_key\n              , detail.drill_down_value as drill_down_value\n              , detail.field_value as field_value\n              , count(detail.drill_down_value) as frequency\n              , row_number() over (partition by detail.summary_sk\norder by detail.summary_sk) as rn\n              , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\n       from tuva.data_quality.data_quality_clinical_detail as detail\n              left outer join tuva.data_quality._value_set_crosswalk_field_info as field_info on detail.table_name = field_info.input_layer_table_name\n                     and detail.field_name = field_info.field_name\n       where detail.bucket_name = 'valid'\n              and field_info.unique_values_expected_flag = 1\n       group by\n              detail.data_source\n              , detail.field_name\n              , detail.table_name\n              , detail.bucket_name\n              , detail.field_value\n              , detail.drill_down_key\n              , detail.drill_down_value\n              , detail.invalid_reason\n              , detail.summary_sk\n\n)\n--- null values\n\nselect\n       summary_sk\n       , data_source\n       , table_name\n       , field_name\n       , bucket_name\n       , invalid_reason\n       , drill_down_key\n       , max(drill_down_value) as drill_down_value\n       , null as field_value\n       , count(drill_down_value) as frequency\n       , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom tuva.data_quality.data_quality_clinical_detail\nwhere bucket_name = 'null'\ngroup by\n       data_source\n       , field_name\n       , table_name\n       , bucket_name\n       , invalid_reason\n       , drill_down_key\n       , summary_sk\n\nunion all\n\n--- valid values except pks\n\nselect\n       detail.summary_sk\n       , detail.data_source\n       , detail.table_name\n       , detail.field_name\n       , detail.bucket_name\n       , detail.invalid_reason\n       , detail.drill_down_key\n       , max(detail.drill_down_value) as drill_down_value\n       , detail.field_value as field_value\n       , count(detail.drill_down_value) as frequency\n       , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom tuva.data_quality.data_quality_clinical_detail as detail\nleft outer join tuva.data_quality._value_set_crosswalk_field_info as field_info on detail.table_name = field_info.input_layer_table_name\n       and detail.field_name = field_info.field_name\nwhere\n       detail.bucket_name = 'valid'\n       and field_info.unique_values_expected_flag = 0 --- need to handle pks differently since every value is supposed to be unique\ngroup by\n       detail.data_source\n       , detail.field_name\n       , detail.table_name\n       , detail.bucket_name\n       , detail.field_value\n       , detail.invalid_reason\n       , detail.drill_down_key\n       , detail.summary_sk\n\nunion all\n\n-- 5 examples of each invalid example\n\nselect\n       summary_sk\n       , data_source\n       , table_name\n       , field_name\n       , bucket_name\n       , invalid_reason\n       , drill_down_key\n       , drill_down_value as drill_down_value\n       , field_value as field_value\n       , frequency\n       , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom ranked_examples\nwhere rn <= 5\n\nunion all\n\n--- aggregating all other invalid examples into single row\n\nselect\n       summary_sk\n       , data_source\n       , table_name\n       , field_name\n       , bucket_name\n       , invalid_reason\n       , drill_down_key\n       , 'all others' as drill_down_value\n       , field_value as field_value\n       , sum(frequency) as frequency\n       , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom ranked_examples\nwhere rn > 5 --- aggregating all other rows\ngroup by\n    summary_sk\n    , data_source\n    , table_name\n    , field_name\n    , bucket_name\n    , invalid_reason\n    , drill_down_key\n    , field_value\n\nunion all\n\n--- 5 examples of valid primary key values\n\nselect\n       summary_sk\n       , data_source\n       , table_name\n       , field_name\n       , bucket_name\n       , invalid_reason\n       , drill_down_key\n       , drill_down_value as drill_down_value\n       , field_value as field_value\n       , frequency\n       , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom pk_examples\nwhere rn <= 5\n\nunion all\n\n--- aggegating all other valid primary key value examples\n\nselect\n       summary_sk\n       , data_source\n       , table_name\n       , field_name\n       , bucket_name\n       , invalid_reason\n       , drill_down_key\n       , 'all others' as drill_down_value\n       , 'all others' as field_value\n       , sum(frequency) as frequency\n       , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom pk_examples\nwhere rn > 5 --- aggregating all other rows\ngroup by\n    summary_sk\n    , data_source\n    , table_name\n    , field_name\n    , bucket_name\n    , invalid_reason\n    , drill_down_key\n    , field_value", "relation_name": "tuva.data_quality.data_quality_clinical_for_pbi", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:18.440137Z", "completed_at": "2025-06-03T19:50:19.039605Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:19.045019Z", "completed_at": "2025-06-03T19:50:19.045025Z"}], "thread_id": "Thread-1", "execution_time": 0.6058409214019775, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_expectations_expect_column_to_exist_input_layer__provider_attribution_plan.da9ff5e155", "compiled": true, "compiled_code": "\n\n    with test_data as (\n\n        select\n            cast('PLAN' as TEXT) as column_name,\n            3 as matching_column_index,\n            True as column_index_matches\n\n    )\n    select *\n    from test_data\n    where\n        not(matching_column_index >= 0 and column_index_matches)", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:19.058980Z", "completed_at": "2025-06-03T19:50:19.077734Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:19.078528Z", "completed_at": "2025-06-03T19:50:19.078534Z"}], "thread_id": "Thread-1", "execution_time": 0.03139209747314453, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.not_null_core__lab_result_person_id.7a2d5de504", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect person_id\nfrom tuva.core.lab_result\nwhere person_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:19.063648Z", "completed_at": "2025-06-03T19:50:19.077968Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:19.078920Z", "completed_at": "2025-06-03T19:50:19.078924Z"}], "thread_id": "Thread-2", "execution_time": 0.03153085708618164, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.unique_core__lab_result_lab_result_id.0ee4fe47af", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    lab_result_id as unique_field,\n    count(*) as n_records\n\nfrom tuva.core.lab_result\nwhere lab_result_id is not null\ngroup by lab_result_id\nhaving count(*) > 1\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:19.200587Z", "completed_at": "2025-06-03T19:50:19.213778Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:19.214480Z", "completed_at": "2025-06-03T19:50:19.214485Z"}], "thread_id": "Thread-3", "execution_time": 0.12469100952148438, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.unique_core__medication_medication_id.124fd11fa1", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    medication_id as unique_field,\n    count(*) as n_records\n\nfrom tuva.core.medication\nwhere medication_id is not null\ngroup by medication_id\nhaving count(*) > 1\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:19.100155Z", "completed_at": "2025-06-03T19:50:19.214265Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:19.223291Z", "completed_at": "2025-06-03T19:50:19.223296Z"}], "thread_id": "Thread-2", "execution_time": 0.13380193710327148, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.not_null_core__medication_person_id.0518de594e", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect person_id\nfrom tuva.core.medication\nwhere person_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:19.235742Z", "completed_at": "2025-06-03T19:50:19.258170Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:19.259006Z", "completed_at": "2025-06-03T19:50:19.259011Z"}], "thread_id": "Thread-4", "execution_time": 0.034281015396118164, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.not_null_core__observation_person_id.5c5e5baf32", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect person_id\nfrom tuva.core.observation\nwhere person_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:19.240836Z", "completed_at": "2025-06-03T19:50:19.258480Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:19.259365Z", "completed_at": "2025-06-03T19:50:19.259369Z"}], "thread_id": "Thread-2", "execution_time": 0.0341031551361084, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.unique_core__observation_observation_id.ff5f21de59", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    observation_id as unique_field,\n    count(*) as n_records\n\nfrom tuva.core.observation\nwhere observation_id is not null\ngroup by observation_id\nhaving count(*) > 1\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:19.245600Z", "completed_at": "2025-06-03T19:50:19.259923Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:19.273147Z", "completed_at": "2025-06-03T19:50:19.273154Z"}], "thread_id": "Thread-1", "execution_time": 0.03263115882873535, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.normalized_input__int_eligibility_dates_normalize", "compiled": true, "compiled_code": "\n\n\nwith __dbt__cte__normalized_input__stg_eligibility as (\n\n\n\nselect\n      person_id\n    , person_id || coalesce(data_source,'') || coalesce(payer,'') || coalesce(plan,'') || coalesce(cast(enrollment_start_date as TEXT),'') || coalesce(cast(enrollment_end_date as TEXT),'') as person_id_key\n    , member_id\n    , subscriber_id\n    , gender\n    , race\n    , birth_date\n    , death_date\n    , death_flag\n    , enrollment_start_date\n    , enrollment_end_date\n    , payer\n    , payer_type\n    , plan\n    , subscriber_relation\n    , original_reason_entitlement_code\n    , dual_status_code\n    , medicare_status_code\n    , group_id\n    , group_name\n    , first_name\n    , last_name\n    , social_security_number\n    , address\n    , city\n    , state\n    , zip_code\n    , phone\n    , data_source\n    , file_name\n    , file_date\n    , ingest_datetime\nfrom tuva.input_layer.input_layer__eligibility\n) select distinct\n    elig.person_id\n  , elig.person_id || coalesce(elig.data_source,'') || coalesce(elig.payer,'') || coalesce(elig.plan,'') || coalesce(cast(elig.enrollment_start_date as TEXT),'') || coalesce(cast(elig.enrollment_end_date as TEXT),'') as person_id_key\n  , cal_dob.full_date as normalized_birth_date\n  , cal_death.full_date as normalized_death_date\n  , cal_enroll_start.full_date as normalized_enrollment_start_date\n  , cal_enroll_end.full_date as normalized_enrollment_end_date\n  , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom __dbt__cte__normalized_input__stg_eligibility as elig\nleft outer join tuva.reference_data.calendar as cal_dob\n    on elig.birth_date = cal_dob.full_date\nleft outer join tuva.reference_data.calendar as cal_death\n    on elig.death_date = cal_death.full_date\nleft outer join tuva.reference_data.calendar as cal_enroll_start\n    on elig.enrollment_start_date = cal_enroll_start.full_date\nleft outer join tuva.reference_data.calendar as cal_enroll_end\n    on elig.enrollment_end_date = cal_enroll_end.full_date", "relation_name": "tuva.claims_preprocessing._int_normalized_input_eligibility_dates_normalize", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:19.260570Z", "completed_at": "2025-06-03T19:50:19.283119Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:19.314215Z", "completed_at": "2025-06-03T19:50:19.314223Z"}], "thread_id": "Thread-3", "execution_time": 0.055602073669433594, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.data_quality__institutional_admission_date", "compiled": true, "compiled_code": "\n\nwith  __dbt__cte__data_quality__stg_institutional_inpatient as (\n\n\n\n    select *\n    from tuva.input_layer.input_layer__medical_claim\n    where claim_type = 'institutional'\n    and \n  substr(bill_type_code, 1, 2)\n = '11'\n), base as (\nselect *\nfrom __dbt__cte__data_quality__stg_institutional_inpatient\n)\n, tuva_last_run as(\n\n    select cast(substring('2025-06-03 19:49:40.396647+00:00',1,10) as date) as tuva_last_run\n\n)\n,unique_field as (\n    select distinct claim_id\n        ,cast(admission_date as TEXT) as field\n        ,data_source\n    from base\n),\nclaim_grain as (\n    select claim_id\n        ,data_source\n        ,count(*) as frequency\n    from unique_field\n    group by claim_id\n        ,data_source\n),\nclaim_agg as (\nselect\n    claim_id,\n    data_source\n    , \n    listagg(\n        coalesce(field, 'null'),\n        ', '\n        )\n        within group (order by field desc) as field_aggregated -- noqa\nfrom\n    unique_field\ngroup by\n    claim_id,\n    data_source\n)\nselect distinct -- to bring to claim_id grain\n    m.data_source\n    ,coalesce(cast(m.claim_start_date as TEXT),cast('1900-01-01' as TEXT)) as source_date\n    ,'MEDICAL_CLAIM' as table_name\n    ,'Claim ID' as drill_down_key\n    ,coalesce(m.claim_id, 'NULL') as drill_down_value\n    ,'institutional' as claim_type\n    ,'ADMISSION_DATE' as field_name\n    ,case\n        when cg.frequency > 1 then 'multiple'\n        when m.admission_date > cast(substring('2025-06-03 19:49:40.396647+00:00',1,10) as date) then 'invalid'\n        when m.admission_date < \n\n    dateadd(\n        year,\n        -10,\n        cte.tuva_last_run\n        )\n\n then 'invalid'\n        when m.admission_date is null then 'null'\n        else 'valid'\n    end as bucket_name\n    ,case\n        when cg.frequency > 1 then 'multiple'\n        when m.admission_date > cast(substring('2025-06-03 19:49:40.396647+00:00',1,10) as date) then 'future'\n        when m.admission_date < \n\n    dateadd(\n        year,\n        -10,\n        cte.tuva_last_run\n        )\n\n then 'too old'\n        else null\n    end as invalid_reason\n    ,cast(substring(agg.field_aggregated, 1, 255) as TEXT) as field_value\n    , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom base as m\nleft outer join claim_grain as cg on m.claim_id = cg.claim_id and m.data_source = cg.data_source\nleft outer join claim_agg as agg on m.claim_id = agg.claim_id and m.data_source = agg.data_source\ncross join tuva_last_run as cte", "relation_name": "tuva.data_quality.institutional_admission_date", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:19.283543Z", "completed_at": "2025-06-03T19:50:19.355093Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:19.355350Z", "completed_at": "2025-06-03T19:50:19.355357Z"}], "thread_id": "Thread-4", "execution_time": 0.07358789443969727, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.data_quality__institutional_admit_source_code", "compiled": true, "compiled_code": "\n\nwith  __dbt__cte__data_quality__stg_institutional_inpatient as (\n\n\n\n    select *\n    from tuva.input_layer.input_layer__medical_claim\n    where claim_type = 'institutional'\n    and \n  substr(bill_type_code, 1, 2)\n = '11'\n), base as (\nselect *\nfrom __dbt__cte__data_quality__stg_institutional_inpatient\n),\n\nunique_field as (\n    select distinct claim_id\n        , base.admit_source_code || '|' || coalesce(term.admit_source_description, '') as field\n        , data_source\n    from base\n    left outer join tuva.terminology.admit_source as term on base.admit_source_code = term.admit_source_code\n),\n\nclaim_grain as (\n    select claim_id\n        , data_source\n        , count(*) as frequency\n    from unique_field\n    group by claim_id\n        , data_source\n),\n\nclaim_agg as (\nselect\n      claim_id\n    , data_source\n    , \n    listagg(\n        coalesce(field, 'null'),\n        ', '\n        )\n        within group (order by field desc) as field_aggregated -- noqa\nfrom\n    unique_field\ngroup by\n      claim_id\n    , data_source\n)\n\nselect distinct -- to bring to claim_id grain\n      m.data_source\n    , coalesce(cast(m.claim_start_date as TEXT),cast('1900-01-01' as TEXT)) as source_date\n    , 'MEDICAL_CLAIM' as table_name\n    , 'Claim ID' as drill_down_key\n    , coalesce(m.claim_id, 'NULL') as drill_down_value\n    , 'institutional' as claim_type\n    , 'ADMIT_SOURCE_CODE' as field_name\n    , case when cg.frequency > 1                then 'multiple'\n          when term.admit_source_code is not null then 'valid'\n          when m.admit_source_code is not null    then 'invalid'\n                                               else 'null' end as bucket_name\n    , case\n        when m.admit_source_code is not null\n            and term.admit_source_code is null\n            and cg. frequency = 1\n            then 'Admit source code does not join to Terminology Admit Source table'\n        else null\n    end as invalid_reason\n    , cast(\n  substr(agg.field_aggregated, 1, 255)\n as TEXT) as field_value\n    , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom base as m\nleft outer join claim_grain as cg on m.claim_id = cg.claim_id and m.data_source = cg.data_source\nleft outer join tuva.terminology.admit_source as term on m.admit_source_code = term.admit_source_code\nleft outer join claim_agg as agg on m.claim_id = agg.claim_id and m.data_source = agg.data_source", "relation_name": "tuva.data_quality.institutional_admit_source_code", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:19.296069Z", "completed_at": "2025-06-03T19:50:19.355733Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:19.364580Z", "completed_at": "2025-06-03T19:50:19.364584Z"}], "thread_id": "Thread-2", "execution_time": 0.08255267143249512, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.data_quality__institutional_admit_type_code", "compiled": true, "compiled_code": "\n\nwith  __dbt__cte__data_quality__stg_institutional_inpatient as (\n\n\n\n    select *\n    from tuva.input_layer.input_layer__medical_claim\n    where claim_type = 'institutional'\n    and \n  substr(bill_type_code, 1, 2)\n = '11'\n), base as (\nselect *\nfrom __dbt__cte__data_quality__stg_institutional_inpatient\n),\n\nunique_field as (\n    select distinct claim_id\n        , base.admit_type_code || '|' || coalesce(term.admit_type_description, '') as field\n        , data_source\n    from base\n    left outer join tuva.terminology.admit_type as term on base.admit_type_code = term.admit_type_code\n),\n\nclaim_grain as (\n    select claim_id\n        , data_source\n        , count(*) as frequency\n    from unique_field\n    group by claim_id\n        , data_source\n),\n\nclaim_agg as (\nselect\n      claim_id\n    , data_source\n    , \n    listagg(\n        coalesce(field, 'null'),\n        ', '\n        )\n        within group (order by field desc) as field_aggregated -- noqa\nfrom\n    unique_field\ngroup by\n      claim_id\n    , data_source\n\t)\n\nselect distinct -- to bring to claim_id grain\n      m.data_source\n    , coalesce(cast(m.claim_start_date as TEXT),cast('1900-01-01' as TEXT)) as source_date\n    , 'MEDICAL_CLAIM' as table_name\n    , 'Member ID' as drill_down_key\n    , coalesce(m.claim_id, 'NULL') as drill_down_value\n    , 'institutional' as claim_type\n    , 'ADMIT_TYPE_CODE' as field_name\n    , case when cg.frequency > 1                then 'multiple'\n          when term.admit_type_code is not null then 'valid'\n          when m.admit_type_code is not null    then 'invalid'\n                                               else 'null' end as bucket_name\n    , case\n        when m.admit_type_code is not null\n            and term.admit_type_code is null\n            and cg.frequency = 1\n            then 'Admit Type Code does not join to Terminology Admit Type table'\n        else null\n    end as invalid_reason\n    , cast(\n  substr(agg.field_aggregated, 1, 255)\n as TEXT) as field_value\n    , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom base as m\nleft outer join claim_grain as cg on m.claim_id = cg.claim_id and m.data_source = cg.data_source\nleft outer join tuva.terminology.admit_type as term on m.admit_type_code = term.admit_type_code\nleft outer join claim_agg as agg on m.claim_id = agg.claim_id and m.data_source = agg.data_source", "relation_name": "tuva.data_quality.institutional_admit_type_code", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:19.320296Z", "completed_at": "2025-06-03T19:50:19.364371Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:19.365267Z", "completed_at": "2025-06-03T19:50:19.365270Z"}], "thread_id": "Thread-1", "execution_time": 0.08200383186340332, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.data_quality__institutional_discharge_date", "compiled": true, "compiled_code": "\n\nwith  __dbt__cte__data_quality__stg_institutional_inpatient as (\n\n\n\n    select *\n    from tuva.input_layer.input_layer__medical_claim\n    where claim_type = 'institutional'\n    and \n  substr(bill_type_code, 1, 2)\n = '11'\n), base as (\nselect *\nfrom __dbt__cte__data_quality__stg_institutional_inpatient\n)\n, tuva_last_run as(\n    select cast(substring('2025-06-03 19:49:40.396647+00:00',1,10) as date) as tuva_last_run\n)\n,unique_field as (\n    select distinct claim_id\n        ,cast(discharge_date as TEXT) as field\n        ,data_source\n    from base\n),\nclaim_grain as (\n    select claim_id\n        ,data_source\n        ,count(*) as frequency\n    from unique_field\n    group by claim_id\n        ,data_source\n),\nclaim_agg as (\nselect\n    claim_id,\n    data_source,\n    \n    listagg(\n        coalesce(field, 'null'),\n        ', '\n        )\n        within group (order by field desc) as field_aggregated -- noqa\nfrom\n    unique_field\ngroup by\n    claim_id,\n    data_source\n)\nselect distinct -- to bring to claim_id grain\n    m.data_source\n    ,coalesce(cast(m.claim_start_date as TEXT),cast('1900-01-01' as TEXT)) as source_date\n    ,'MEDICAL_CLAIM' as table_name\n    ,'Claim ID' as drill_down_key\n    ,coalesce(m.claim_id, 'NULL') as drill_down_value\n    ,'institutional' as claim_type\n    ,'DISCHARGE_DATE' as field_name\n    ,case\n        when cg.frequency > 1 then 'multiple'\n        when m.discharge_date > cast(substring('2025-06-03 19:49:40.396647+00:00',1,10) as date) then 'invalid'\n        when m.discharge_date < \n\n    dateadd(\n        year,\n        -10,\n        cte.tuva_last_run\n        )\n\n then 'invalid'\n        when m.discharge_date < m.admission_date then 'invalid'\n        when m.discharge_date is null then 'null'\n        else 'valid'\n    end as bucket_name\n    ,case\n        when cg.frequency > 1 then 'multiple'\n        when m.discharge_date > cast(substring('2025-06-03 19:49:40.396647+00:00',1,10) as date) then 'future'\n        when m.discharge_date < \n\n    dateadd(\n        year,\n        -10,\n        cte.tuva_last_run\n        )\n\n then 'too old'\n        when m.discharge_date < m.admission_date then 'discharge date before admission date'\n        else null\n    end as invalid_reason\n    ,cast(\n  substr(agg.field_aggregated, 1, 255)\n as TEXT) as field_value\n    , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom base as m\nleft outer join claim_grain as cg on m.claim_id = cg.claim_id and m.data_source = cg.data_source\nleft outer join claim_agg as agg on m.claim_id = agg.claim_id and m.data_source = agg.data_source\ncross join tuva_last_run as cte", "relation_name": "tuva.data_quality.institutional_discharge_date", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:19.338006Z", "completed_at": "2025-06-03T19:50:19.366069Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:19.379046Z", "completed_at": "2025-06-03T19:50:19.379055Z"}], "thread_id": "Thread-3", "execution_time": 0.04168105125427246, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.data_quality__institutional_drg_code", "compiled": true, "compiled_code": "\n\nwith  __dbt__cte__data_quality__stg_institutional_inpatient as (\n\n\n\n    select *\n    from tuva.input_layer.input_layer__medical_claim\n    where claim_type = 'institutional'\n    and \n  substr(bill_type_code, 1, 2)\n = '11'\n), base as (\nselect *\nfrom __dbt__cte__data_quality__stg_institutional_inpatient\n),\n\nunique_field as (\n    select distinct claim_id\n        , base.drg_code || '|' || coalesce(ms.ms_drg_description, apr.apr_drg_description, '') as field\n        , data_source\n    from base\n    left outer join tuva.terminology.ms_drg as ms on base.drg_code = ms.ms_drg_code and base.drg_code_type = 'ms-drg'\n    left outer join tuva.terminology.apr_drg as apr on base.drg_code = apr.apr_drg_code and base.drg_code_type = 'apr-drg'\n),\n\nclaim_grain as (\n    select claim_id\n        , data_source\n        , count(*) as frequency\n    from unique_field\n    group by claim_id\n        , data_source\n),\n\nclaim_agg as (\nselect\n      claim_id\n    , data_source\n    , \n    listagg(\n        coalesce(field, 'null'),\n        ', '\n        )\n        within group (order by field desc) as field_aggregated -- noqa\nfrom\n    unique_field\ngroup by\n      claim_id\n    , data_source\n\n)\n\nselect distinct -- to bring to claim_id grain\n      m.data_source\n    , coalesce(cast(m.claim_start_date as TEXT),cast('1900-01-01' as TEXT)) as source_date\n    , 'MEDICAL_CLAIM' as table_name\n    , 'Claim ID' as drill_down_key\n    , coalesce(m.claim_id, 'NULL') as drill_down_value\n    , 'institutional' as claim_type\n    , 'DRG_CODE' as field_name\n    , case when cg.frequency > 1                then 'multiple'\n          when coalesce(ms.ms_drg_code, apr.apr_drg_code) is not null then 'valid'\n          when m.drg_code is not null    then 'invalid'\n                                               else 'null' end as bucket_name\n    , case\n        when cg.frequency = 1\n            and m.drg_code is not null\n            and coalesce(ms.ms_drg_code, apr.apr_drg_code) is null\n            then 'DRG code does not join to Terminology DRG table'\n        else null\n    end as invalid_reason\n    , cast(\n  substr(agg.field_aggregated, 1, 255)\n as TEXT) as field_value\n    , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom base as m\nleft outer join claim_grain as cg on m.claim_id = cg.claim_id and m.data_source = cg.data_source\nleft outer join tuva.terminology.ms_drg as ms on m.drg_code = ms.ms_drg_code and m.drg_code_type = 'ms-drg'\nleft outer join tuva.terminology.apr_drg as apr on m.drg_code = apr.apr_drg_code and m.drg_code_type = 'apr-drg'\nleft outer join claim_agg as agg on m.claim_id = agg.claim_id and m.data_source = agg.data_source", "relation_name": "tuva.data_quality.institutional_drg_code", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:19.366740Z", "completed_at": "2025-06-03T19:50:19.398270Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:19.416401Z", "completed_at": "2025-06-03T19:50:19.416409Z"}], "thread_id": "Thread-4", "execution_time": 0.05147600173950195, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.data_quality__institutional_procedure_code_1", "compiled": true, "compiled_code": "\n\nwith  __dbt__cte__data_quality__stg_institutional_inpatient as (\n\n\n\n    select *\n    from tuva.input_layer.input_layer__medical_claim\n    where claim_type = 'institutional'\n    and \n  substr(bill_type_code, 1, 2)\n = '11'\n), base as (\nselect *\nfrom __dbt__cte__data_quality__stg_institutional_inpatient\n),\n\nunique_field as (\n    select distinct claim_id\n        , procedure_code_1 || '|' || coalesce(term.description, '') as field\n        , data_source\n    from base\n    left outer join tuva.terminology.icd_10_pcs as term on base.procedure_code_1 = term.icd_10_pcs\n),\n\nclaim_grain as (\n    select claim_id\n        , data_source\n        , count(*) as frequency\n    from unique_field\n    group by claim_id\n        , data_source\n),\n\nclaim_agg as (\nselect\n      claim_id\n    , data_source\n    , \n    listagg(\n        coalesce(field, 'null'),\n        ', '\n        )\n        within group (order by field desc) as field_aggregated -- noqa\nfrom\n    unique_field\ngroup by\n      claim_id\n    , data_source\n\t)\n\nselect distinct -- to bring to claim_id grain\n      m.data_source\n    , coalesce(cast(m.claim_start_date as TEXT),cast('1900-01-01' as TEXT)) as source_date\n    , 'MEDICAL_CLAIM' as table_name\n    , 'Claim ID' as drill_down_key\n    , coalesce(m.claim_id, 'NULL') as drill_down_value\n    , 'institutional' as claim_type\n    , 'PROCEDURE_CODE_1' as field_name\n    , case when cg.frequency > 1                then 'multiple'\n          when term.icd_10_pcs is not null      then 'valid'\n          when m.procedure_code_1 is not null  then 'invalid'\n                                               else 'null' end as bucket_name\n    , case\n        when cg.frequency = 1\n            and m.procedure_code_1 is not null\n            and term.icd_10_pcs is null\n            then 'procedure code does not join to terminology procedure code table'\n        else null\n    end as invalid_reason\n    , cast(\n  substr(agg.field_aggregated, 1, 255)\n as TEXT) as field_value\n    , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom base as m\nleft outer join claim_grain as cg on m.claim_id = cg.claim_id and m.data_source = cg.data_source\nleft outer join tuva.terminology.icd_10_pcs as term on m.procedure_code_1 = term.icd_10_pcs\nleft outer join claim_agg as agg on m.claim_id = agg.claim_id and m.data_source = agg.data_source", "relation_name": "tuva.data_quality.institutional_procedure_code_1", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:19.385758Z", "completed_at": "2025-06-03T19:50:19.422685Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:19.445989Z", "completed_at": "2025-06-03T19:50:19.445996Z"}], "thread_id": "Thread-2", "execution_time": 0.07953619956970215, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.data_quality__institutional_procedure_code_2", "compiled": true, "compiled_code": "\n\nwith  __dbt__cte__data_quality__stg_institutional_inpatient as (\n\n\n\n    select *\n    from tuva.input_layer.input_layer__medical_claim\n    where claim_type = 'institutional'\n    and \n  substr(bill_type_code, 1, 2)\n = '11'\n), base as (\nselect *\nfrom __dbt__cte__data_quality__stg_institutional_inpatient\n),\n\nunique_field as (\n    select distinct claim_id\n        , procedure_code_2 || '|' || coalesce(term.description, '') as field\n        , data_source\n    from base\n    left outer join tuva.terminology.icd_10_pcs as term on base.procedure_code_1 = term.icd_10_pcs\n),\n\nclaim_grain as (\n    select claim_id\n        , data_source\n        , count(*) as frequency\n    from unique_field\n    group by claim_id\n        , data_source\n),\n\nclaim_agg as (\nselect\n      claim_id\n    , data_source\n    , \n    listagg(\n        coalesce(field, 'null'),\n        ', '\n        )\n        within group (order by field desc) as field_aggregated -- noqa\nfrom\n    unique_field\ngroup by\n      claim_id\n    , data_source\n\t)\n\nselect distinct -- to bring to claim_id grain\n      m.data_source\n    , coalesce(cast(m.claim_start_date as TEXT),cast('1900-01-01' as TEXT)) as source_date\n    , 'MEDICAL_CLAIM' as table_name\n    , 'Claim ID' as drill_down_key\n    , coalesce(m.claim_id, 'NULL') as drill_down_value\n    , 'institutional' as claim_type\n    , 'PROCEDURE_CODE_2' as field_name\n    , case when cg.frequency > 1                then 'multiple'\n          when term.icd_10_pcs is not null      then 'valid'\n          when m.procedure_code_2 is not null  then 'invalid'\n                                               else 'null' end as bucket_name\n    , case\n        when cg.frequency = 1\n            and m.procedure_code_2 is not null\n            and term.icd_10_pcs is null\n            then 'Procedure Code does not join to Terminology Procedure Code Table'\n        else null\n    end as invalid_reason\n    , cast(\n  substr(agg.field_aggregated, 1, 255)\n as TEXT) as field_value\n    , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom base as m\nleft outer join claim_grain as cg on m.claim_id = cg.claim_id and m.data_source = cg.data_source\nleft outer join tuva.terminology.icd_10_pcs as term on m.procedure_code_2 = term.icd_10_pcs\nleft outer join claim_agg as agg on m.claim_id = agg.claim_id and m.data_source = agg.data_source", "relation_name": "tuva.data_quality.institutional_procedure_code_2", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:19.404424Z", "completed_at": "2025-06-03T19:50:19.445782Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:19.446644Z", "completed_at": "2025-06-03T19:50:19.446648Z"}], "thread_id": "Thread-1", "execution_time": 0.06199812889099121, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.data_quality__institutional_procedure_code_3", "compiled": true, "compiled_code": "\n\nwith  __dbt__cte__data_quality__stg_institutional_inpatient as (\n\n\n\n    select *\n    from tuva.input_layer.input_layer__medical_claim\n    where claim_type = 'institutional'\n    and \n  substr(bill_type_code, 1, 2)\n = '11'\n), base as (\nselect *\nfrom __dbt__cte__data_quality__stg_institutional_inpatient\n),\n\nunique_field as (\n    select distinct claim_id\n        , procedure_code_3 || '|' || coalesce(term.description, '') as field\n        , data_source\n    from base\n    left outer join tuva.terminology.icd_10_pcs as term on base.procedure_code_3 = term.icd_10_pcs\n),\n\nclaim_grain as (\n    select claim_id\n        , data_source\n        , count(*) as frequency\n    from unique_field\n    group by claim_id\n        , data_source\n),\n\nclaim_agg as (\nselect\n      claim_id\n    , data_source\n    , \n    listagg(\n        coalesce(field, 'null'),\n        ', '\n        )\n        within group (order by field desc) as field_aggregated -- noqa\nfrom\n    unique_field\ngroup by\n      claim_id\n    , data_source\n)\n\nselect distinct -- to bring to claim_id grain\n      m.data_source\n    , coalesce(cast(m.claim_start_date as TEXT),cast('1900-01-01' as TEXT)) as source_date\n    , 'MEDICAL_CLAIM' as table_name\n    , 'Claim ID' as drill_down_key\n    , coalesce(m.claim_id, 'NULL') as drill_down_value\n    , 'institutional' as claim_type\n    , 'PROCEDURE_CODE_3' as field_name\n    , case when cg.frequency > 1                then 'multiple'\n          when term.icd_10_pcs is not null      then 'valid'\n          when m.procedure_code_3 is not null  then 'invalid'\n                                               else 'null' end as bucket_name\n    , case\n        when cg.frequency = 1\n            and m.procedure_code_3 is not null\n            and term.icd_10_pcs is null\n            then 'Procedure Code does not join to Terminology Procedure Code Table'\n        else null\n    end as invalid_reason\n    , cast(\n  substr(agg.field_aggregated, 1, 255)\n as TEXT) as field_value\n    , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom base as m\nleft outer join claim_grain as cg on m.claim_id = cg.claim_id and m.data_source = cg.data_source\nleft outer join tuva.terminology.icd_10_pcs as term on m.procedure_code_3 = term.icd_10_pcs\nleft outer join claim_agg as agg on m.claim_id = agg.claim_id and m.data_source = agg.data_source", "relation_name": "tuva.data_quality.institutional_procedure_code_3", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:19.422921Z", "completed_at": "2025-06-03T19:50:19.453537Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:19.470400Z", "completed_at": "2025-06-03T19:50:19.470406Z"}], "thread_id": "Thread-3", "execution_time": 0.06629300117492676, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.data_quality__institutional_procedure_date_1", "compiled": true, "compiled_code": "\n\nwith  __dbt__cte__data_quality__stg_institutional_inpatient as (\n\n\n\n    select *\n    from tuva.input_layer.input_layer__medical_claim\n    where claim_type = 'institutional'\n    and \n  substr(bill_type_code, 1, 2)\n = '11'\n), base as (\nselect *\nfrom __dbt__cte__data_quality__stg_institutional_inpatient\n)\n, tuva_last_run as(\n    select cast(substring('2025-06-03 19:49:40.396647+00:00',1,10) as date) as tuva_last_run\n)\n, unique_field as (\n    select distinct claim_id\n        ,cast(procedure_date_1 as TEXT)  as field\n        ,data_source\n    from base\n\n),\nclaim_grain as (\n    select claim_id\n        ,data_source\n        ,count(*) as frequency\n    from unique_field\n    group by claim_id\n        ,data_source\n),\nclaim_agg as (\nselect\n    claim_id,\n    data_source\n    , \n    listagg(\n        coalesce(field, 'null'),\n        ', '\n        )\n        within group (order by field desc) as field_aggregated -- noqa\nfrom\n    unique_field\ngroup by\n    claim_id,\n    data_source\n\t)\nselect distinct -- to bring to claim_id grain\n    m.data_source\n    ,coalesce(cast(m.claim_start_date as TEXT),cast('1900-01-01' as TEXT)) as source_date\n    ,'MEDICAL_CLAIM' as table_name\n    ,'Claim ID' as drill_down_key\n    ,coalesce(m.claim_id, 'NULL') as drill_down_value\n    ,'institutional' as claim_type\n    ,'PROCEDURE_DATE_1' as field_name\n    ,case\n        when cg.frequency > 1 then 'multiple'\n        when m.procedure_date_1 > cast(substring('2025-06-03 19:49:40.396647+00:00',1,10) as date) then 'invalid'\n        when m.procedure_date_1 < \n\n    dateadd(\n        year,\n        -10,\n        cte.tuva_last_run\n        )\n\n then 'invalid'\n        when not (m.procedure_date_1 between m.claim_start_date and m.claim_end_date) then 'invalid'\n        when m.procedure_date_1 is null then 'null'\n        else 'valid'\n    end as bucket_name\n    ,case\n        when cg.frequency > 1 then 'multiple'\n        when m.procedure_date_1 > cast(substring('2025-06-03 19:49:40.396647+00:00',1,10) as date) then 'future'\n        when m.procedure_date_1 < \n\n    dateadd(\n        year,\n        -10,\n        cte.tuva_last_run\n        )\n\n then 'too old'\n        when not (m.procedure_date_1 between m.claim_start_date and m.claim_end_date) then 'procedure date not between claim start and end dates'\n        else null\n        end as invalid_reason\n    ,cast(\n  substr(agg.field_aggregated, 1, 255)\n as TEXT) as field_value\n    , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom base as m\nleft outer join claim_grain as cg on m.claim_id = cg.claim_id and m.data_source = cg.data_source\nleft outer join claim_agg as agg on m.claim_id = agg.claim_id and m.data_source = agg.data_source\ncross join tuva_last_run as cte", "relation_name": "tuva.data_quality.institutional_procedure_date_1", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:19.447286Z", "completed_at": "2025-06-03T19:50:19.471798Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:19.500720Z", "completed_at": "2025-06-03T19:50:19.500728Z"}], "thread_id": "Thread-4", "execution_time": 0.06526994705200195, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.data_quality__institutional_procedure_date_2", "compiled": true, "compiled_code": "\n\nwith  __dbt__cte__data_quality__stg_institutional_inpatient as (\n\n\n\n    select *\n    from tuva.input_layer.input_layer__medical_claim\n    where claim_type = 'institutional'\n    and \n  substr(bill_type_code, 1, 2)\n = '11'\n), base as (\nselect *\nfrom __dbt__cte__data_quality__stg_institutional_inpatient\n)\n, tuva_last_run as(\n\n    select cast(substring('2025-06-03 19:49:40.396647+00:00',1,10) as date) as tuva_last_run\n\n)\n,unique_field as (\n    select distinct claim_id\n        ,cast(procedure_date_2 as TEXT)  as field\n        ,data_source\n    from base\n\n),\nclaim_grain as (\n    select claim_id\n        ,data_source\n        ,count(*) as frequency\n    from unique_field\n    group by claim_id\n        ,data_source\n),\nclaim_agg as (\nselect\n    claim_id\n    , data_source\n    , \n    listagg(\n        coalesce(field, 'null'),\n        ', '\n        )\n        within group (order by field desc) as field_aggregated -- noqa\nfrom\n    unique_field\ngroup by\n    claim_id\n    , data_source\n\t)\nselect distinct -- to bring to claim_id grain\n    m.data_source\n    ,coalesce(cast(m.claim_start_date as TEXT),cast('1900-01-01' as TEXT)) as source_date\n    ,'MEDICAL_CLAIM' as table_name\n    ,'Claim ID' as drill_down_key\n    ,coalesce(m.claim_id, 'NULL') as drill_down_value\n    ,'institutional' as claim_type\n    ,'PROCEDURE_DATE_2' as field_name\n    ,case\n        when cg.frequency > 1 then 'multiple'\n        when m.procedure_date_2 > cast(substring('2025-06-03 19:49:40.396647+00:00',1,10) as date) then 'invalid'\n        when m.procedure_date_2 < \n\n    dateadd(\n        year,\n        -10,\n        cte.tuva_last_run\n        )\n\n then 'invalid'\n        when not (m.procedure_date_2 between m.claim_start_date and m.claim_end_date) then 'invalid'\n        when m.procedure_date_2 is null then 'null'\n        else 'valid'\n    end as bucket_name\n    ,case\n        when cg.frequency > 1 then 'multiple'\n        when m.procedure_date_2 > cast(substring('2025-06-03 19:49:40.396647+00:00',1,10) as date) then 'future'\n        when m.procedure_date_2 < \n\n    dateadd(\n        year,\n        -10,\n        cte.tuva_last_run\n        )\n\n then 'too old'\n        when not (m.procedure_date_2 between m.claim_start_date and m.claim_end_date) then 'procedure date not between claim start and end dates'\n        when m.procedure_date_2 is null then null\n        else 'valid'\n    end as invalid_reason\n    ,cast(\n  substr(agg.field_aggregated, 1, 255)\n as TEXT) as field_value\n    , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom base as m\nleft outer join claim_grain as cg on m.claim_id = cg.claim_id and m.data_source = cg.data_source\nleft outer join claim_agg as agg on m.claim_id = agg.claim_id and m.data_source = agg.data_source\ncross join tuva_last_run as cte", "relation_name": "tuva.data_quality.institutional_procedure_date_2", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:19.472017Z", "completed_at": "2025-06-03T19:50:19.532381Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:19.535723Z", "completed_at": "2025-06-03T19:50:19.535729Z"}], "thread_id": "Thread-2", "execution_time": 0.06565713882446289, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.data_quality__institutional_procedure_date_3", "compiled": true, "compiled_code": "\n\nwith  __dbt__cte__data_quality__stg_institutional_inpatient as (\n\n\n\n    select *\n    from tuva.input_layer.input_layer__medical_claim\n    where claim_type = 'institutional'\n    and \n  substr(bill_type_code, 1, 2)\n = '11'\n), base as (\nselect *\nfrom __dbt__cte__data_quality__stg_institutional_inpatient\n)\n, tuva_last_run as (\n\n    select cast(substring('2025-06-03 19:49:40.396647+00:00',1,10) as date) as tuva_last_run\n\n)\n\n, unique_field as (\n    select distinct claim_id\n        , cast(procedure_date_3 as TEXT)  as field\n        , data_source\n    from base\n\n)\n, claim_grain as (\n    select claim_id\n        , data_source\n        , count(*) as frequency\n    from unique_field\n    group by claim_id\n        , data_source\n)\n, claim_agg as (\nselect\n    claim_id\n    , data_source\n    , \n    listagg(\n        coalesce(field, 'null'),\n        ', '\n        )\n        within group (order by field desc) as field_aggregated -- noqa\nfrom\n    unique_field\ngroup by\n    claim_id\n    , data_source\n\t)\nselect distinct -- to bring to claim_id grain\n    m.data_source\n    , coalesce(cast(m.claim_start_date as TEXT),cast('1900-01-01' as TEXT)) as source_date\n    , 'MEDICAL_CLAIM' as table_name\n    , 'Claim ID' as drill_down_key\n    , coalesce(m.claim_id, 'NULL') as drill_down_value\n    , 'institutional' as claim_type\n    , 'PROCEDURE_DATE_3' as field_name\n    , case\n        when cg.frequency > 1 then 'multiple'\n        when m.procedure_date_3 > cast(substring('2025-06-03 19:49:40.396647+00:00',1,10) as date) then 'invalid'\n        when m.procedure_date_3 < \n\n    dateadd(\n        year,\n        -10,\n        cte.tuva_last_run\n        )\n\n then 'invalid' -- noqa\n        when not (m.procedure_date_3 between m.claim_start_date and m.claim_end_date) then 'invalid'\n        when m.procedure_date_3 is null then 'null'\n        else 'valid'\n    end as bucket_name\n    , case\n        when cg.frequency > 1 then 'multiple'\n        when m.procedure_date_3 > cast(substring('2025-06-03 19:49:40.396647+00:00',1,10) as date) then 'future'\n        when m.procedure_date_3 < \n\n    dateadd(\n        year,\n        -10,\n        cte.tuva_last_run\n        )\n\n then 'too old' -- noqa\n        when not (m.procedure_date_3 between m.claim_start_date and m.claim_end_date) then 'procedure date not between claim start and end dates'\n        else null\n        end as invalid_reason\n    , cast(\n  substr(agg.field_aggregated, 1, 255)\n as TEXT) as field_value -- noqa\n    , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom base as m\nleft outer join claim_grain as cg on m.claim_id = cg.claim_id and m.data_source = cg.data_source\nleft outer join claim_agg as agg on m.claim_id = agg.claim_id and m.data_source = agg.data_source\ncross join tuva_last_run as cte", "relation_name": "tuva.data_quality.institutional_procedure_date_3", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:19.494389Z", "completed_at": "2025-06-03T19:50:19.535352Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:19.536158Z", "completed_at": "2025-06-03T19:50:19.536161Z"}], "thread_id": "Thread-1", "execution_time": 0.06545591354370117, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.normalized_input__int_admit_source_voting", "compiled": true, "compiled_code": "\n\n\n\nwith  __dbt__cte__normalized_input__stg_medical_claim as (\n\n\nselect\n      claim_id\n    , claim_line_number\n    , claim_type\n    , person_id\n    , member_id\n    , payer\n    , plan\n    , claim_start_date\n    , claim_end_date\n    , claim_line_start_date\n    , claim_line_end_date\n    , admission_date\n    , discharge_date\n    , admit_source_code\n    , admit_type_code\n    , discharge_disposition_code\n    , place_of_service_code\n    , bill_type_code\n    , drg_code_type\n    , drg_code\n    , revenue_center_code\n    , service_unit_quantity\n    , hcpcs_code\n    , hcpcs_modifier_1\n    , hcpcs_modifier_2\n    , hcpcs_modifier_3\n    , hcpcs_modifier_4\n    , hcpcs_modifier_5\n    , rendering_npi\n    , rendering_tin\n    , billing_npi\n    , billing_tin\n    , facility_npi\n    , paid_date\n    , paid_amount\n    , allowed_amount\n    , charge_amount\n    , coinsurance_amount\n    , copayment_amount\n    , deductible_amount\n    , total_cost_amount\n    , diagnosis_code_type\n    , diagnosis_code_1\n    , diagnosis_code_2\n    , diagnosis_code_3\n    , diagnosis_code_4\n    , diagnosis_code_5\n    , diagnosis_code_6\n    , diagnosis_code_7\n    , diagnosis_code_8\n    , diagnosis_code_9\n    , diagnosis_code_10\n    , diagnosis_code_11\n    , diagnosis_code_12\n    , diagnosis_code_13\n    , diagnosis_code_14\n    , diagnosis_code_15\n    , diagnosis_code_16\n    , diagnosis_code_17\n    , diagnosis_code_18\n    , diagnosis_code_19\n    , diagnosis_code_20\n    , diagnosis_code_21\n    , diagnosis_code_22\n    , diagnosis_code_23\n    , diagnosis_code_24\n    , diagnosis_code_25\n    , diagnosis_poa_1\n    , diagnosis_poa_2\n    , diagnosis_poa_3\n    , diagnosis_poa_4\n    , diagnosis_poa_5\n    , diagnosis_poa_6\n    , diagnosis_poa_7\n    , diagnosis_poa_8\n    , diagnosis_poa_9\n    , diagnosis_poa_10\n    , diagnosis_poa_11\n    , diagnosis_poa_12\n    , diagnosis_poa_13\n    , diagnosis_poa_14\n    , diagnosis_poa_15\n    , diagnosis_poa_16\n    , diagnosis_poa_17\n    , diagnosis_poa_18\n    , diagnosis_poa_19\n    , diagnosis_poa_20\n    , diagnosis_poa_21\n    , diagnosis_poa_22\n    , diagnosis_poa_23\n    , diagnosis_poa_24\n    , diagnosis_poa_25\n    , procedure_code_type\n    , procedure_code_1\n    , procedure_code_2\n    , procedure_code_3\n    , procedure_code_4\n    , procedure_code_5\n    , procedure_code_6\n    , procedure_code_7\n    , procedure_code_8\n    , procedure_code_9\n    , procedure_code_10\n    , procedure_code_11\n    , procedure_code_12\n    , procedure_code_13\n    , procedure_code_14\n    , procedure_code_15\n    , procedure_code_16\n    , procedure_code_17\n    , procedure_code_18\n    , procedure_code_19\n    , procedure_code_20\n    , procedure_code_21\n    , procedure_code_22\n    , procedure_code_23\n    , procedure_code_24\n    , procedure_code_25\n    , procedure_date_1\n    , procedure_date_2\n    , procedure_date_3\n    , procedure_date_4\n    , procedure_date_5\n    , procedure_date_6\n    , procedure_date_7\n    , procedure_date_8\n    , procedure_date_9\n    , procedure_date_10\n    , procedure_date_11\n    , procedure_date_12\n    , procedure_date_13\n    , procedure_date_14\n    , procedure_date_15\n    , procedure_date_16\n    , procedure_date_17\n    , procedure_date_18\n    , procedure_date_19\n    , procedure_date_20\n    , procedure_date_21\n    , procedure_date_22\n    , procedure_date_23\n    , procedure_date_24\n    , procedure_date_25\n    , in_network_flag\n    , data_source\n    , file_name\n    , file_date\n    , ingest_datetime\nfrom tuva.input_layer.input_layer__medical_claim\n), normalize_cte as (\n    select\n        med.claim_id\n        , med.data_source\n        , admit.admit_source_code\n\n        , admit.admit_source_description\n    from __dbt__cte__normalized_input__stg_medical_claim as med\n    inner join tuva.terminology.admit_source as admit\n        on med.admit_source_code = admit.admit_source_code\n    where claim_type = 'institutional'\n)\n\n, distinct_counts as (\n    select\n        claim_id\n        , data_source\n        , admit_source_code\n        , admit_source_description\n        , count(*) as admit_source_occurrence_count\n    from normalize_cte\n    where admit_source_code is not null\n    group by\n        claim_id\n        , data_source\n        , admit_source_code\n        , admit_source_description\n)\n\n, occurence_comparison as (\n    select\n        claim_id\n        , data_source\n        , 'admit_source_code' as column_name\n        , admit_source_code as normalized_code\n        , admit_source_description as normalized_description\n        , admit_source_occurrence_count as occurrence_count\n        , coalesce(lead(admit_source_occurrence_count)\n            over (partition by claim_id, data_source\norder by admit_source_occurrence_count desc), 0) as next_occurrence_count\n        , row_number() over (partition by claim_id, data_source\norder by admit_source_occurrence_count desc) as occurrence_row_count\n    from distinct_counts as dist\n)\n\nselect\n    claim_id\n    , data_source\n    , column_name\n    , normalized_code\n    , normalized_description\n    , occurrence_count\n    , next_occurrence_count\n    , occurrence_row_count\n    , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom occurence_comparison", "relation_name": "tuva.claims_preprocessing._int_normalized_input_admit_source_voting", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:19.515072Z", "completed_at": "2025-06-03T19:50:19.536880Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:19.537832Z", "completed_at": "2025-06-03T19:50:19.537836Z"}], "thread_id": "Thread-4", "execution_time": 0.023292064666748047, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.normalized_input__int_bill_type_voting", "compiled": true, "compiled_code": "\n\n\nwith  __dbt__cte__normalized_input__stg_medical_claim as (\n\n\nselect\n      claim_id\n    , claim_line_number\n    , claim_type\n    , person_id\n    , member_id\n    , payer\n    , plan\n    , claim_start_date\n    , claim_end_date\n    , claim_line_start_date\n    , claim_line_end_date\n    , admission_date\n    , discharge_date\n    , admit_source_code\n    , admit_type_code\n    , discharge_disposition_code\n    , place_of_service_code\n    , bill_type_code\n    , drg_code_type\n    , drg_code\n    , revenue_center_code\n    , service_unit_quantity\n    , hcpcs_code\n    , hcpcs_modifier_1\n    , hcpcs_modifier_2\n    , hcpcs_modifier_3\n    , hcpcs_modifier_4\n    , hcpcs_modifier_5\n    , rendering_npi\n    , rendering_tin\n    , billing_npi\n    , billing_tin\n    , facility_npi\n    , paid_date\n    , paid_amount\n    , allowed_amount\n    , charge_amount\n    , coinsurance_amount\n    , copayment_amount\n    , deductible_amount\n    , total_cost_amount\n    , diagnosis_code_type\n    , diagnosis_code_1\n    , diagnosis_code_2\n    , diagnosis_code_3\n    , diagnosis_code_4\n    , diagnosis_code_5\n    , diagnosis_code_6\n    , diagnosis_code_7\n    , diagnosis_code_8\n    , diagnosis_code_9\n    , diagnosis_code_10\n    , diagnosis_code_11\n    , diagnosis_code_12\n    , diagnosis_code_13\n    , diagnosis_code_14\n    , diagnosis_code_15\n    , diagnosis_code_16\n    , diagnosis_code_17\n    , diagnosis_code_18\n    , diagnosis_code_19\n    , diagnosis_code_20\n    , diagnosis_code_21\n    , diagnosis_code_22\n    , diagnosis_code_23\n    , diagnosis_code_24\n    , diagnosis_code_25\n    , diagnosis_poa_1\n    , diagnosis_poa_2\n    , diagnosis_poa_3\n    , diagnosis_poa_4\n    , diagnosis_poa_5\n    , diagnosis_poa_6\n    , diagnosis_poa_7\n    , diagnosis_poa_8\n    , diagnosis_poa_9\n    , diagnosis_poa_10\n    , diagnosis_poa_11\n    , diagnosis_poa_12\n    , diagnosis_poa_13\n    , diagnosis_poa_14\n    , diagnosis_poa_15\n    , diagnosis_poa_16\n    , diagnosis_poa_17\n    , diagnosis_poa_18\n    , diagnosis_poa_19\n    , diagnosis_poa_20\n    , diagnosis_poa_21\n    , diagnosis_poa_22\n    , diagnosis_poa_23\n    , diagnosis_poa_24\n    , diagnosis_poa_25\n    , procedure_code_type\n    , procedure_code_1\n    , procedure_code_2\n    , procedure_code_3\n    , procedure_code_4\n    , procedure_code_5\n    , procedure_code_6\n    , procedure_code_7\n    , procedure_code_8\n    , procedure_code_9\n    , procedure_code_10\n    , procedure_code_11\n    , procedure_code_12\n    , procedure_code_13\n    , procedure_code_14\n    , procedure_code_15\n    , procedure_code_16\n    , procedure_code_17\n    , procedure_code_18\n    , procedure_code_19\n    , procedure_code_20\n    , procedure_code_21\n    , procedure_code_22\n    , procedure_code_23\n    , procedure_code_24\n    , procedure_code_25\n    , procedure_date_1\n    , procedure_date_2\n    , procedure_date_3\n    , procedure_date_4\n    , procedure_date_5\n    , procedure_date_6\n    , procedure_date_7\n    , procedure_date_8\n    , procedure_date_9\n    , procedure_date_10\n    , procedure_date_11\n    , procedure_date_12\n    , procedure_date_13\n    , procedure_date_14\n    , procedure_date_15\n    , procedure_date_16\n    , procedure_date_17\n    , procedure_date_18\n    , procedure_date_19\n    , procedure_date_20\n    , procedure_date_21\n    , procedure_date_22\n    , procedure_date_23\n    , procedure_date_24\n    , procedure_date_25\n    , in_network_flag\n    , data_source\n    , file_name\n    , file_date\n    , ingest_datetime\nfrom tuva.input_layer.input_layer__medical_claim\n), normalize_cte as (\n    select\n        med.claim_id\n        , med.data_source\n        , bill.bill_type_code\n        , bill.bill_type_description\n    from __dbt__cte__normalized_input__stg_medical_claim as med\n    inner join tuva.terminology.bill_type as bill\n        on ltrim(med.bill_type_code, '0') = bill.bill_type_code\n    where claim_type = 'institutional'\n)\n\n, distinct_counts as (\n    select\n        claim_id\n        , data_source\n        , bill_type_code\n        , bill_type_description\n        , count(*) as bill_type_occurrence_count\n    from normalize_cte\n    where bill_type_code is not null\n    group by\n        claim_id\n        , data_source\n        , bill_type_code\n        , bill_type_description\n)\n\n, occurence_comparison as (\n    select\n        claim_id\n        , data_source\n        , 'bill_type_code' as column_name\n        , bill_type_code as normalized_code\n        , bill_type_description as normalized_description\n        , bill_type_occurrence_count as occurrence_count\n        , row_number() over (partition by claim_id, data_source\norder by bill_type_occurrence_count desc, bill_type_code asc) as occurrence_row_count\n    from distinct_counts as dist\n)\n\nselect\n    claim_id\n    , data_source\n    , column_name\n    , normalized_code\n    , normalized_description\n    , occurrence_count\n    , occurrence_row_count\n    , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom occurence_comparison", "relation_name": "tuva.claims_preprocessing._int_normalized_input_bill_type_voting", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:19.508684Z", "completed_at": "2025-06-03T19:50:19.537369Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:19.538412Z", "completed_at": "2025-06-03T19:50:19.538415Z"}], "thread_id": "Thread-3", "execution_time": 0.05461478233337402, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.normalized_input__int_admit_type_voting", "compiled": true, "compiled_code": "\n\n\nwith  __dbt__cte__normalized_input__stg_medical_claim as (\n\n\nselect\n      claim_id\n    , claim_line_number\n    , claim_type\n    , person_id\n    , member_id\n    , payer\n    , plan\n    , claim_start_date\n    , claim_end_date\n    , claim_line_start_date\n    , claim_line_end_date\n    , admission_date\n    , discharge_date\n    , admit_source_code\n    , admit_type_code\n    , discharge_disposition_code\n    , place_of_service_code\n    , bill_type_code\n    , drg_code_type\n    , drg_code\n    , revenue_center_code\n    , service_unit_quantity\n    , hcpcs_code\n    , hcpcs_modifier_1\n    , hcpcs_modifier_2\n    , hcpcs_modifier_3\n    , hcpcs_modifier_4\n    , hcpcs_modifier_5\n    , rendering_npi\n    , rendering_tin\n    , billing_npi\n    , billing_tin\n    , facility_npi\n    , paid_date\n    , paid_amount\n    , allowed_amount\n    , charge_amount\n    , coinsurance_amount\n    , copayment_amount\n    , deductible_amount\n    , total_cost_amount\n    , diagnosis_code_type\n    , diagnosis_code_1\n    , diagnosis_code_2\n    , diagnosis_code_3\n    , diagnosis_code_4\n    , diagnosis_code_5\n    , diagnosis_code_6\n    , diagnosis_code_7\n    , diagnosis_code_8\n    , diagnosis_code_9\n    , diagnosis_code_10\n    , diagnosis_code_11\n    , diagnosis_code_12\n    , diagnosis_code_13\n    , diagnosis_code_14\n    , diagnosis_code_15\n    , diagnosis_code_16\n    , diagnosis_code_17\n    , diagnosis_code_18\n    , diagnosis_code_19\n    , diagnosis_code_20\n    , diagnosis_code_21\n    , diagnosis_code_22\n    , diagnosis_code_23\n    , diagnosis_code_24\n    , diagnosis_code_25\n    , diagnosis_poa_1\n    , diagnosis_poa_2\n    , diagnosis_poa_3\n    , diagnosis_poa_4\n    , diagnosis_poa_5\n    , diagnosis_poa_6\n    , diagnosis_poa_7\n    , diagnosis_poa_8\n    , diagnosis_poa_9\n    , diagnosis_poa_10\n    , diagnosis_poa_11\n    , diagnosis_poa_12\n    , diagnosis_poa_13\n    , diagnosis_poa_14\n    , diagnosis_poa_15\n    , diagnosis_poa_16\n    , diagnosis_poa_17\n    , diagnosis_poa_18\n    , diagnosis_poa_19\n    , diagnosis_poa_20\n    , diagnosis_poa_21\n    , diagnosis_poa_22\n    , diagnosis_poa_23\n    , diagnosis_poa_24\n    , diagnosis_poa_25\n    , procedure_code_type\n    , procedure_code_1\n    , procedure_code_2\n    , procedure_code_3\n    , procedure_code_4\n    , procedure_code_5\n    , procedure_code_6\n    , procedure_code_7\n    , procedure_code_8\n    , procedure_code_9\n    , procedure_code_10\n    , procedure_code_11\n    , procedure_code_12\n    , procedure_code_13\n    , procedure_code_14\n    , procedure_code_15\n    , procedure_code_16\n    , procedure_code_17\n    , procedure_code_18\n    , procedure_code_19\n    , procedure_code_20\n    , procedure_code_21\n    , procedure_code_22\n    , procedure_code_23\n    , procedure_code_24\n    , procedure_code_25\n    , procedure_date_1\n    , procedure_date_2\n    , procedure_date_3\n    , procedure_date_4\n    , procedure_date_5\n    , procedure_date_6\n    , procedure_date_7\n    , procedure_date_8\n    , procedure_date_9\n    , procedure_date_10\n    , procedure_date_11\n    , procedure_date_12\n    , procedure_date_13\n    , procedure_date_14\n    , procedure_date_15\n    , procedure_date_16\n    , procedure_date_17\n    , procedure_date_18\n    , procedure_date_19\n    , procedure_date_20\n    , procedure_date_21\n    , procedure_date_22\n    , procedure_date_23\n    , procedure_date_24\n    , procedure_date_25\n    , in_network_flag\n    , data_source\n    , file_name\n    , file_date\n    , ingest_datetime\nfrom tuva.input_layer.input_layer__medical_claim\n), normalize_cte as (\n    select\n        med.claim_id\n        , med.data_source\n        , admit.admit_type_code\n        , admit.admit_type_description\n    from __dbt__cte__normalized_input__stg_medical_claim as med\n    inner join tuva.terminology.admit_type as admit\n        on med.admit_type_code = admit.admit_type_code\n    where claim_type = 'institutional'\n)\n\n, distinct_counts as (\n    select\n        claim_id\n        , data_source\n        , admit_type_code\n        , admit_type_description\n        , count(*) as admit_type_occurrence_count\n    from normalize_cte\n\n    where admit_type_code is not null\n    group by\n        claim_id\n        , data_source\n        , admit_type_code\n        , admit_type_description\n)\n\n, occurence_comparison as (\n    select\n        claim_id\n        , data_source\n        , 'admit_type_code' as column_name\n        , admit_type_code as normalized_code\n        , admit_type_description as normalized_description\n        , admit_type_occurrence_count as occurrence_count\n        , coalesce(lead(admit_type_occurrence_count)\n            over (partition by claim_id, data_source\norder by admit_type_occurrence_count desc), 0) as next_occurrence_count\n        , row_number() over (partition by claim_id, data_source\norder by admit_type_occurrence_count desc) as occurrence_row_count\n    from distinct_counts as dist\n)\n\nselect\n    claim_id\n    , data_source\n    , column_name\n    , normalized_code\n    , normalized_description\n    , occurrence_count\n    , next_occurrence_count\n    , occurrence_row_count\n    , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom occurence_comparison", "relation_name": "tuva.claims_preprocessing._int_normalized_input_admit_type_normalize_voting", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:19.539647Z", "completed_at": "2025-06-03T19:50:19.602863Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:19.622101Z", "completed_at": "2025-06-03T19:50:19.622108Z"}], "thread_id": "Thread-2", "execution_time": 0.08462095260620117, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.normalized_input__int_diagnosis_code_normalize", "compiled": true, "compiled_code": "\n\n\nwith  __dbt__cte__normalized_input__stg_medical_claim as (\n\n\nselect\n      claim_id\n    , claim_line_number\n    , claim_type\n    , person_id\n    , member_id\n    , payer\n    , plan\n    , claim_start_date\n    , claim_end_date\n    , claim_line_start_date\n    , claim_line_end_date\n    , admission_date\n    , discharge_date\n    , admit_source_code\n    , admit_type_code\n    , discharge_disposition_code\n    , place_of_service_code\n    , bill_type_code\n    , drg_code_type\n    , drg_code\n    , revenue_center_code\n    , service_unit_quantity\n    , hcpcs_code\n    , hcpcs_modifier_1\n    , hcpcs_modifier_2\n    , hcpcs_modifier_3\n    , hcpcs_modifier_4\n    , hcpcs_modifier_5\n    , rendering_npi\n    , rendering_tin\n    , billing_npi\n    , billing_tin\n    , facility_npi\n    , paid_date\n    , paid_amount\n    , allowed_amount\n    , charge_amount\n    , coinsurance_amount\n    , copayment_amount\n    , deductible_amount\n    , total_cost_amount\n    , diagnosis_code_type\n    , diagnosis_code_1\n    , diagnosis_code_2\n    , diagnosis_code_3\n    , diagnosis_code_4\n    , diagnosis_code_5\n    , diagnosis_code_6\n    , diagnosis_code_7\n    , diagnosis_code_8\n    , diagnosis_code_9\n    , diagnosis_code_10\n    , diagnosis_code_11\n    , diagnosis_code_12\n    , diagnosis_code_13\n    , diagnosis_code_14\n    , diagnosis_code_15\n    , diagnosis_code_16\n    , diagnosis_code_17\n    , diagnosis_code_18\n    , diagnosis_code_19\n    , diagnosis_code_20\n    , diagnosis_code_21\n    , diagnosis_code_22\n    , diagnosis_code_23\n    , diagnosis_code_24\n    , diagnosis_code_25\n    , diagnosis_poa_1\n    , diagnosis_poa_2\n    , diagnosis_poa_3\n    , diagnosis_poa_4\n    , diagnosis_poa_5\n    , diagnosis_poa_6\n    , diagnosis_poa_7\n    , diagnosis_poa_8\n    , diagnosis_poa_9\n    , diagnosis_poa_10\n    , diagnosis_poa_11\n    , diagnosis_poa_12\n    , diagnosis_poa_13\n    , diagnosis_poa_14\n    , diagnosis_poa_15\n    , diagnosis_poa_16\n    , diagnosis_poa_17\n    , diagnosis_poa_18\n    , diagnosis_poa_19\n    , diagnosis_poa_20\n    , diagnosis_poa_21\n    , diagnosis_poa_22\n    , diagnosis_poa_23\n    , diagnosis_poa_24\n    , diagnosis_poa_25\n    , procedure_code_type\n    , procedure_code_1\n    , procedure_code_2\n    , procedure_code_3\n    , procedure_code_4\n    , procedure_code_5\n    , procedure_code_6\n    , procedure_code_7\n    , procedure_code_8\n    , procedure_code_9\n    , procedure_code_10\n    , procedure_code_11\n    , procedure_code_12\n    , procedure_code_13\n    , procedure_code_14\n    , procedure_code_15\n    , procedure_code_16\n    , procedure_code_17\n    , procedure_code_18\n    , procedure_code_19\n    , procedure_code_20\n    , procedure_code_21\n    , procedure_code_22\n    , procedure_code_23\n    , procedure_code_24\n    , procedure_code_25\n    , procedure_date_1\n    , procedure_date_2\n    , procedure_date_3\n    , procedure_date_4\n    , procedure_date_5\n    , procedure_date_6\n    , procedure_date_7\n    , procedure_date_8\n    , procedure_date_9\n    , procedure_date_10\n    , procedure_date_11\n    , procedure_date_12\n    , procedure_date_13\n    , procedure_date_14\n    , procedure_date_15\n    , procedure_date_16\n    , procedure_date_17\n    , procedure_date_18\n    , procedure_date_19\n    , procedure_date_20\n    , procedure_date_21\n    , procedure_date_22\n    , procedure_date_23\n    , procedure_date_24\n    , procedure_date_25\n    , in_network_flag\n    , data_source\n    , file_name\n    , file_date\n    , ingest_datetime\nfrom tuva.input_layer.input_layer__medical_claim\n), pivot_diagnosis as (\n    select\n        claim_id\n        , claim_type\n        , data_source\n        , diagnosis_code_type\n        , 'diagnosis_code_1' as diagnosis_column\n        , diagnosis_code_1 as diagnosis_code\n    from __dbt__cte__normalized_input__stg_medical_claim\n\twhere diagnosis_code_1 is not null\n\n\n    union all\n\n    select\n        claim_id\n        , claim_type\n        , data_source\n        , diagnosis_code_type\n        , 'diagnosis_code_2' as diagnosis_column\n        , diagnosis_code_2 as diagnosis_code\n    from __dbt__cte__normalized_input__stg_medical_claim\n\twhere diagnosis_code_2 is not null\n\n    union all\n\n    select\n        claim_id\n        , claim_type\n        , data_source\n        , diagnosis_code_type\n        , 'diagnosis_code_3' as diagnosis_column\n        , diagnosis_code_3 as diagnosis_code\n    from __dbt__cte__normalized_input__stg_medical_claim\n\twhere diagnosis_code_3 is not null\n\n    union all\n\n    select\n        claim_id\n        , claim_type\n        , data_source\n        , diagnosis_code_type\n        , 'diagnosis_code_4' as diagnosis_column\n        , diagnosis_code_4 as diagnosis_code\n    from __dbt__cte__normalized_input__stg_medical_claim\n\twhere diagnosis_code_4 is not null\n\n    union all\n\n    select\n        claim_id\n        , claim_type\n        , data_source\n        , diagnosis_code_type\n        , 'diagnosis_code_5' as diagnosis_column\n        , diagnosis_code_5 as diagnosis_code\n    from __dbt__cte__normalized_input__stg_medical_claim\n\twhere diagnosis_code_5 is not null\n\n    union all\n\n    select\n        claim_id\n        , claim_type\n        , data_source\n        , diagnosis_code_type\n        , 'diagnosis_code_6' as diagnosis_column\n        , diagnosis_code_6 as diagnosis_code\n    from __dbt__cte__normalized_input__stg_medical_claim\n\twhere diagnosis_code_6 is not null\n\n    union all\n\n    select\n        claim_id\n        , claim_type\n        , data_source\n        , diagnosis_code_type\n        , 'diagnosis_code_7' as diagnosis_column\n        , diagnosis_code_7 as diagnosis_code\n    from __dbt__cte__normalized_input__stg_medical_claim\n\twhere diagnosis_code_7 is not null\n\n    union all\n\n    select\n        claim_id\n        , claim_type\n        , data_source\n        , diagnosis_code_type\n        , 'diagnosis_code_8' as diagnosis_column\n        , diagnosis_code_8 as diagnosis_code\n    from __dbt__cte__normalized_input__stg_medical_claim\n\twhere diagnosis_code_8 is not null\n\n    union all\n\n    select\n        claim_id\n        , claim_type\n        , data_source\n        , diagnosis_code_type\n        , 'diagnosis_code_9' as diagnosis_column\n        , diagnosis_code_9 as diagnosis_code\n    from __dbt__cte__normalized_input__stg_medical_claim\n\twhere diagnosis_code_9 is not null\n\n    union all\n\n    select\n        claim_id\n        , claim_type\n        , data_source\n        , diagnosis_code_type\n        , 'diagnosis_code_10' as diagnosis_column\n        , diagnosis_code_10 as diagnosis_code\n    from __dbt__cte__normalized_input__stg_medical_claim\n\twhere diagnosis_code_10 is not null\n\n    union all\n\n    select\n        claim_id\n        , claim_type\n        , data_source\n        , diagnosis_code_type\n        , 'diagnosis_code_11' as diagnosis_column\n        , diagnosis_code_11 as diagnosis_code\n    from __dbt__cte__normalized_input__stg_medical_claim\n\twhere diagnosis_code_11 is not null\n\n    union all\n\n    select\n        claim_id\n        , claim_type\n        , data_source\n        , diagnosis_code_type\n        , 'diagnosis_code_12' as diagnosis_column\n        , diagnosis_code_12 as diagnosis_code\n    from __dbt__cte__normalized_input__stg_medical_claim\n\twhere diagnosis_code_12 is not null\n\n    union all\n\n    select\n        claim_id\n        , claim_type\n        , data_source\n        , diagnosis_code_type\n        , 'diagnosis_code_13' as diagnosis_column\n        , diagnosis_code_13 as diagnosis_code\n    from __dbt__cte__normalized_input__stg_medical_claim\n\twhere diagnosis_code_13 is not null\n    union all\n\n    select\n        claim_id\n        , claim_type\n        , data_source\n        , diagnosis_code_type\n        , 'diagnosis_code_14' as diagnosis_column\n        , diagnosis_code_14 as diagnosis_code\n    from __dbt__cte__normalized_input__stg_medical_claim\n\twhere diagnosis_code_14 is not null\n\n    union all\n\n    select\n        claim_id\n        , claim_type\n        , data_source\n        , diagnosis_code_type\n        , 'diagnosis_code_15' as diagnosis_column\n        , diagnosis_code_15 as diagnosis_code\n    from __dbt__cte__normalized_input__stg_medical_claim\n\twhere diagnosis_code_15 is not null\n\n    union all\n\n    select\n        claim_id\n        , claim_type\n        , data_source\n        , diagnosis_code_type\n        , 'diagnosis_code_16' as diagnosis_column\n        , diagnosis_code_16 as diagnosis_code\n    from __dbt__cte__normalized_input__stg_medical_claim\n\twhere diagnosis_code_16 is not null\n\n    union all\n\n    select\n        claim_id\n        , claim_type\n        , data_source\n        , diagnosis_code_type\n        , 'diagnosis_code_17' as diagnosis_column\n        , diagnosis_code_17 as diagnosis_code\n    from __dbt__cte__normalized_input__stg_medical_claim\n\twhere diagnosis_code_17 is not null\n\n    union all\n\n    select\n        claim_id\n        , claim_type\n        , data_source\n        , diagnosis_code_type\n        , 'diagnosis_code_18' as diagnosis_column\n        , diagnosis_code_18 as diagnosis_code\n    from __dbt__cte__normalized_input__stg_medical_claim\n\twhere diagnosis_code_18 is not null\n\n    union all\n\n    select\n        claim_id\n        , claim_type\n        , data_source\n        , diagnosis_code_type\n        , 'diagnosis_code_19' as diagnosis_column\n        , diagnosis_code_19 as diagnosis_code\n    from __dbt__cte__normalized_input__stg_medical_claim\n\twhere diagnosis_code_19 is not null\n\n    union all\n\n    select\n        claim_id\n        , claim_type\n        , data_source\n        , diagnosis_code_type\n        , 'diagnosis_code_20' as diagnosis_column\n        , diagnosis_code_20 as diagnosis_code\n    from __dbt__cte__normalized_input__stg_medical_claim\n\twhere diagnosis_code_20 is not null\n\n    union all\n\n    select\n        claim_id\n        , claim_type\n        , data_source\n        , diagnosis_code_type\n        , 'diagnosis_code_21' as diagnosis_column\n        , diagnosis_code_21 as diagnosis_code\n    from __dbt__cte__normalized_input__stg_medical_claim\n\twhere diagnosis_code_21 is not null\n    union all\n\n    select\n        claim_id\n        , claim_type\n        , data_source\n        , diagnosis_code_type\n        , 'diagnosis_code_22' as diagnosis_column\n        , diagnosis_code_22 as diagnosis_code\n    from __dbt__cte__normalized_input__stg_medical_claim\n\twhere diagnosis_code_22 is not null\n\n    union all\n\n    select\n        claim_id\n        , claim_type\n        , data_source\n        , diagnosis_code_type\n        , 'diagnosis_code_23' as diagnosis_column\n        , diagnosis_code_23 as diagnosis_code\n    from __dbt__cte__normalized_input__stg_medical_claim\n\twhere diagnosis_code_23 is not null\n    union all\n\n    select\n        claim_id\n        , claim_type\n        , data_source\n        , diagnosis_code_type\n        , 'diagnosis_code_24' as diagnosis_column\n        , diagnosis_code_24 as diagnosis_code\n    from __dbt__cte__normalized_input__stg_medical_claim\n\twhere diagnosis_code_24 is not null\n    union all\n\n    select\n        claim_id\n        , claim_type\n        , data_source\n        , diagnosis_code_type\n        , 'diagnosis_code_25' as diagnosis_column\n        , diagnosis_code_25 as diagnosis_code\n    from __dbt__cte__normalized_input__stg_medical_claim\n\twhere diagnosis_code_25 is not null)\n\nselect\n    claim_id\n    , data_source\n    , diagnosis_code_type\n    , diagnosis_column\n    , coalesce(icd_9.icd_9_cm, icd_10.icd_10_cm) as normalized_diagnosis_code\n    , count(*) as diagnosis_code_occurrence_count\n    , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom pivot_diagnosis as piv\nleft outer join tuva.terminology.icd_10_cm as icd_10\n    on replace(piv.diagnosis_code, '.', '') = icd_10.icd_10_cm\n    and piv.diagnosis_code_type = 'icd-10-cm'\nleft outer join tuva.terminology.icd_9_cm as icd_9\n    on replace(piv.diagnosis_code, '.', '') = icd_9.icd_9_cm\n    and piv.diagnosis_code_type = 'icd-9-cm'\nwhere claim_type <> 'undetermined'\ngroup by\n    claim_id\n    , data_source\n    , diagnosis_code_type\n    , diagnosis_column\n    , coalesce(icd_9.icd_9_cm, icd_10.icd_10_cm)", "relation_name": "tuva.claims_preprocessing._int_normalized_input_diagnosis_code_normalize", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:19.583111Z", "completed_at": "2025-06-03T19:50:19.621877Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:19.622618Z", "completed_at": "2025-06-03T19:50:19.622623Z"}], "thread_id": "Thread-1", "execution_time": 0.08449411392211914, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.normalized_input__int_discharge_disposition_voting", "compiled": true, "compiled_code": "\n\n\nwith  __dbt__cte__normalized_input__stg_medical_claim as (\n\n\nselect\n      claim_id\n    , claim_line_number\n    , claim_type\n    , person_id\n    , member_id\n    , payer\n    , plan\n    , claim_start_date\n    , claim_end_date\n    , claim_line_start_date\n    , claim_line_end_date\n    , admission_date\n    , discharge_date\n    , admit_source_code\n    , admit_type_code\n    , discharge_disposition_code\n    , place_of_service_code\n    , bill_type_code\n    , drg_code_type\n    , drg_code\n    , revenue_center_code\n    , service_unit_quantity\n    , hcpcs_code\n    , hcpcs_modifier_1\n    , hcpcs_modifier_2\n    , hcpcs_modifier_3\n    , hcpcs_modifier_4\n    , hcpcs_modifier_5\n    , rendering_npi\n    , rendering_tin\n    , billing_npi\n    , billing_tin\n    , facility_npi\n    , paid_date\n    , paid_amount\n    , allowed_amount\n    , charge_amount\n    , coinsurance_amount\n    , copayment_amount\n    , deductible_amount\n    , total_cost_amount\n    , diagnosis_code_type\n    , diagnosis_code_1\n    , diagnosis_code_2\n    , diagnosis_code_3\n    , diagnosis_code_4\n    , diagnosis_code_5\n    , diagnosis_code_6\n    , diagnosis_code_7\n    , diagnosis_code_8\n    , diagnosis_code_9\n    , diagnosis_code_10\n    , diagnosis_code_11\n    , diagnosis_code_12\n    , diagnosis_code_13\n    , diagnosis_code_14\n    , diagnosis_code_15\n    , diagnosis_code_16\n    , diagnosis_code_17\n    , diagnosis_code_18\n    , diagnosis_code_19\n    , diagnosis_code_20\n    , diagnosis_code_21\n    , diagnosis_code_22\n    , diagnosis_code_23\n    , diagnosis_code_24\n    , diagnosis_code_25\n    , diagnosis_poa_1\n    , diagnosis_poa_2\n    , diagnosis_poa_3\n    , diagnosis_poa_4\n    , diagnosis_poa_5\n    , diagnosis_poa_6\n    , diagnosis_poa_7\n    , diagnosis_poa_8\n    , diagnosis_poa_9\n    , diagnosis_poa_10\n    , diagnosis_poa_11\n    , diagnosis_poa_12\n    , diagnosis_poa_13\n    , diagnosis_poa_14\n    , diagnosis_poa_15\n    , diagnosis_poa_16\n    , diagnosis_poa_17\n    , diagnosis_poa_18\n    , diagnosis_poa_19\n    , diagnosis_poa_20\n    , diagnosis_poa_21\n    , diagnosis_poa_22\n    , diagnosis_poa_23\n    , diagnosis_poa_24\n    , diagnosis_poa_25\n    , procedure_code_type\n    , procedure_code_1\n    , procedure_code_2\n    , procedure_code_3\n    , procedure_code_4\n    , procedure_code_5\n    , procedure_code_6\n    , procedure_code_7\n    , procedure_code_8\n    , procedure_code_9\n    , procedure_code_10\n    , procedure_code_11\n    , procedure_code_12\n    , procedure_code_13\n    , procedure_code_14\n    , procedure_code_15\n    , procedure_code_16\n    , procedure_code_17\n    , procedure_code_18\n    , procedure_code_19\n    , procedure_code_20\n    , procedure_code_21\n    , procedure_code_22\n    , procedure_code_23\n    , procedure_code_24\n    , procedure_code_25\n    , procedure_date_1\n    , procedure_date_2\n    , procedure_date_3\n    , procedure_date_4\n    , procedure_date_5\n    , procedure_date_6\n    , procedure_date_7\n    , procedure_date_8\n    , procedure_date_9\n    , procedure_date_10\n    , procedure_date_11\n    , procedure_date_12\n    , procedure_date_13\n    , procedure_date_14\n    , procedure_date_15\n    , procedure_date_16\n    , procedure_date_17\n    , procedure_date_18\n    , procedure_date_19\n    , procedure_date_20\n    , procedure_date_21\n    , procedure_date_22\n    , procedure_date_23\n    , procedure_date_24\n    , procedure_date_25\n    , in_network_flag\n    , data_source\n    , file_name\n    , file_date\n    , ingest_datetime\nfrom tuva.input_layer.input_layer__medical_claim\n), normalize_cte as (\n    select\n        med.claim_id\n        , med.data_source\n        , disch.discharge_disposition_code\n        , disch.discharge_disposition_description\n    from __dbt__cte__normalized_input__stg_medical_claim as med\n    inner join tuva.terminology.discharge_disposition as disch\n        on med.discharge_disposition_code = disch.discharge_disposition_code\n    where claim_type = 'institutional'\n)\n\n, distinct_counts as (\n    select\n        claim_id\n        , data_source\n        , discharge_disposition_code\n        , discharge_disposition_description\n        , count(*) as discharge_disposition_occurrence_count\n    from normalize_cte\n    where discharge_disposition_code is not null\n    group by\n        claim_id\n        , data_source\n        , discharge_disposition_code\n        , discharge_disposition_description\n)\n\n, occurence_comparison as (\n    select\n        claim_id\n        , data_source\n        , 'discharge_disposition_code' as column_name\n        , discharge_disposition_code as normalized_code\n        , discharge_disposition_description as normalized_description\n        , discharge_disposition_occurrence_count as occurrence_count\n        , coalesce(lead(discharge_disposition_occurrence_count)\n            over (partition by claim_id, data_source\norder by discharge_disposition_occurrence_count desc), 0) as next_occurrence_count\n        , row_number() over (partition by claim_id, data_source\norder by discharge_disposition_occurrence_count desc) as occurrence_row_count\n    from distinct_counts as dist\n)\n\nselect\n    claim_id\n    , data_source\n    , column_name\n    , normalized_code\n    , normalized_description\n    , occurrence_count\n    , next_occurrence_count\n    , occurrence_row_count\n    , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom occurence_comparison", "relation_name": "tuva.claims_preprocessing._int_normalized_input_discharge_disposition_voting", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:19.611839Z", "completed_at": "2025-06-03T19:50:19.623920Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:19.624774Z", "completed_at": "2025-06-03T19:50:19.624778Z"}], "thread_id": "Thread-3", "execution_time": 0.0288240909576416, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.normalized_input__int_medical_claim_date_normalize", "compiled": true, "compiled_code": "\n\n\nwith __dbt__cte__normalized_input__stg_medical_claim as (\n\n\nselect\n      claim_id\n    , claim_line_number\n    , claim_type\n    , person_id\n    , member_id\n    , payer\n    , plan\n    , claim_start_date\n    , claim_end_date\n    , claim_line_start_date\n    , claim_line_end_date\n    , admission_date\n    , discharge_date\n    , admit_source_code\n    , admit_type_code\n    , discharge_disposition_code\n    , place_of_service_code\n    , bill_type_code\n    , drg_code_type\n    , drg_code\n    , revenue_center_code\n    , service_unit_quantity\n    , hcpcs_code\n    , hcpcs_modifier_1\n    , hcpcs_modifier_2\n    , hcpcs_modifier_3\n    , hcpcs_modifier_4\n    , hcpcs_modifier_5\n    , rendering_npi\n    , rendering_tin\n    , billing_npi\n    , billing_tin\n    , facility_npi\n    , paid_date\n    , paid_amount\n    , allowed_amount\n    , charge_amount\n    , coinsurance_amount\n    , copayment_amount\n    , deductible_amount\n    , total_cost_amount\n    , diagnosis_code_type\n    , diagnosis_code_1\n    , diagnosis_code_2\n    , diagnosis_code_3\n    , diagnosis_code_4\n    , diagnosis_code_5\n    , diagnosis_code_6\n    , diagnosis_code_7\n    , diagnosis_code_8\n    , diagnosis_code_9\n    , diagnosis_code_10\n    , diagnosis_code_11\n    , diagnosis_code_12\n    , diagnosis_code_13\n    , diagnosis_code_14\n    , diagnosis_code_15\n    , diagnosis_code_16\n    , diagnosis_code_17\n    , diagnosis_code_18\n    , diagnosis_code_19\n    , diagnosis_code_20\n    , diagnosis_code_21\n    , diagnosis_code_22\n    , diagnosis_code_23\n    , diagnosis_code_24\n    , diagnosis_code_25\n    , diagnosis_poa_1\n    , diagnosis_poa_2\n    , diagnosis_poa_3\n    , diagnosis_poa_4\n    , diagnosis_poa_5\n    , diagnosis_poa_6\n    , diagnosis_poa_7\n    , diagnosis_poa_8\n    , diagnosis_poa_9\n    , diagnosis_poa_10\n    , diagnosis_poa_11\n    , diagnosis_poa_12\n    , diagnosis_poa_13\n    , diagnosis_poa_14\n    , diagnosis_poa_15\n    , diagnosis_poa_16\n    , diagnosis_poa_17\n    , diagnosis_poa_18\n    , diagnosis_poa_19\n    , diagnosis_poa_20\n    , diagnosis_poa_21\n    , diagnosis_poa_22\n    , diagnosis_poa_23\n    , diagnosis_poa_24\n    , diagnosis_poa_25\n    , procedure_code_type\n    , procedure_code_1\n    , procedure_code_2\n    , procedure_code_3\n    , procedure_code_4\n    , procedure_code_5\n    , procedure_code_6\n    , procedure_code_7\n    , procedure_code_8\n    , procedure_code_9\n    , procedure_code_10\n    , procedure_code_11\n    , procedure_code_12\n    , procedure_code_13\n    , procedure_code_14\n    , procedure_code_15\n    , procedure_code_16\n    , procedure_code_17\n    , procedure_code_18\n    , procedure_code_19\n    , procedure_code_20\n    , procedure_code_21\n    , procedure_code_22\n    , procedure_code_23\n    , procedure_code_24\n    , procedure_code_25\n    , procedure_date_1\n    , procedure_date_2\n    , procedure_date_3\n    , procedure_date_4\n    , procedure_date_5\n    , procedure_date_6\n    , procedure_date_7\n    , procedure_date_8\n    , procedure_date_9\n    , procedure_date_10\n    , procedure_date_11\n    , procedure_date_12\n    , procedure_date_13\n    , procedure_date_14\n    , procedure_date_15\n    , procedure_date_16\n    , procedure_date_17\n    , procedure_date_18\n    , procedure_date_19\n    , procedure_date_20\n    , procedure_date_21\n    , procedure_date_22\n    , procedure_date_23\n    , procedure_date_24\n    , procedure_date_25\n    , in_network_flag\n    , data_source\n    , file_name\n    , file_date\n    , ingest_datetime\nfrom tuva.input_layer.input_layer__medical_claim\n) select distinct\n  med.claim_id\n  , med.claim_line_number\n  , med.claim_type\n  , med.data_source\n  , cal_claim_start.full_date as normalized_claim_start_date\n  , cal_claim_end.full_date as normalized_claim_end_date\n  , cal_claim_line_start.full_date as normalized_claim_line_start_date\n  , cal_claim_line_end.full_date as normalized_claim_line_end_date\n  , cal_admission.full_date as normalized_admission_date\n  , cal_discharge.full_date as normalized_discharge_date\n  , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom __dbt__cte__normalized_input__stg_medical_claim as med\nleft outer join tuva.reference_data.calendar as cal_claim_start\n    on med.claim_start_date = cal_claim_start.full_date\nleft outer join tuva.reference_data.calendar as cal_claim_end\n    on med.claim_end_date = cal_claim_end.full_date\nleft outer join tuva.reference_data.calendar as cal_claim_line_start\n    on med.claim_line_start_date = cal_claim_line_start.full_date\nleft outer join tuva.reference_data.calendar as cal_claim_line_end\n    on med.claim_line_end_date = cal_claim_line_end.full_date\nleft outer join tuva.reference_data.calendar as cal_admission\n    on med.admission_date = cal_admission.full_date\nleft outer join tuva.reference_data.calendar as cal_discharge\n    on med.discharge_date = cal_discharge.full_date", "relation_name": "tuva.claims_preprocessing._int_normalized_input_medical_claim_date_normalize", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:19.596855Z", "completed_at": "2025-06-03T19:50:19.624127Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:19.625120Z", "completed_at": "2025-06-03T19:50:19.625124Z"}], "thread_id": "Thread-4", "execution_time": 0.0608830451965332, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.normalized_input__int_drg_voting", "compiled": true, "compiled_code": "\n\nwith  __dbt__cte__normalized_input__stg_medical_claim as (\n\n\nselect\n      claim_id\n    , claim_line_number\n    , claim_type\n    , person_id\n    , member_id\n    , payer\n    , plan\n    , claim_start_date\n    , claim_end_date\n    , claim_line_start_date\n    , claim_line_end_date\n    , admission_date\n    , discharge_date\n    , admit_source_code\n    , admit_type_code\n    , discharge_disposition_code\n    , place_of_service_code\n    , bill_type_code\n    , drg_code_type\n    , drg_code\n    , revenue_center_code\n    , service_unit_quantity\n    , hcpcs_code\n    , hcpcs_modifier_1\n    , hcpcs_modifier_2\n    , hcpcs_modifier_3\n    , hcpcs_modifier_4\n    , hcpcs_modifier_5\n    , rendering_npi\n    , rendering_tin\n    , billing_npi\n    , billing_tin\n    , facility_npi\n    , paid_date\n    , paid_amount\n    , allowed_amount\n    , charge_amount\n    , coinsurance_amount\n    , copayment_amount\n    , deductible_amount\n    , total_cost_amount\n    , diagnosis_code_type\n    , diagnosis_code_1\n    , diagnosis_code_2\n    , diagnosis_code_3\n    , diagnosis_code_4\n    , diagnosis_code_5\n    , diagnosis_code_6\n    , diagnosis_code_7\n    , diagnosis_code_8\n    , diagnosis_code_9\n    , diagnosis_code_10\n    , diagnosis_code_11\n    , diagnosis_code_12\n    , diagnosis_code_13\n    , diagnosis_code_14\n    , diagnosis_code_15\n    , diagnosis_code_16\n    , diagnosis_code_17\n    , diagnosis_code_18\n    , diagnosis_code_19\n    , diagnosis_code_20\n    , diagnosis_code_21\n    , diagnosis_code_22\n    , diagnosis_code_23\n    , diagnosis_code_24\n    , diagnosis_code_25\n    , diagnosis_poa_1\n    , diagnosis_poa_2\n    , diagnosis_poa_3\n    , diagnosis_poa_4\n    , diagnosis_poa_5\n    , diagnosis_poa_6\n    , diagnosis_poa_7\n    , diagnosis_poa_8\n    , diagnosis_poa_9\n    , diagnosis_poa_10\n    , diagnosis_poa_11\n    , diagnosis_poa_12\n    , diagnosis_poa_13\n    , diagnosis_poa_14\n    , diagnosis_poa_15\n    , diagnosis_poa_16\n    , diagnosis_poa_17\n    , diagnosis_poa_18\n    , diagnosis_poa_19\n    , diagnosis_poa_20\n    , diagnosis_poa_21\n    , diagnosis_poa_22\n    , diagnosis_poa_23\n    , diagnosis_poa_24\n    , diagnosis_poa_25\n    , procedure_code_type\n    , procedure_code_1\n    , procedure_code_2\n    , procedure_code_3\n    , procedure_code_4\n    , procedure_code_5\n    , procedure_code_6\n    , procedure_code_7\n    , procedure_code_8\n    , procedure_code_9\n    , procedure_code_10\n    , procedure_code_11\n    , procedure_code_12\n    , procedure_code_13\n    , procedure_code_14\n    , procedure_code_15\n    , procedure_code_16\n    , procedure_code_17\n    , procedure_code_18\n    , procedure_code_19\n    , procedure_code_20\n    , procedure_code_21\n    , procedure_code_22\n    , procedure_code_23\n    , procedure_code_24\n    , procedure_code_25\n    , procedure_date_1\n    , procedure_date_2\n    , procedure_date_3\n    , procedure_date_4\n    , procedure_date_5\n    , procedure_date_6\n    , procedure_date_7\n    , procedure_date_8\n    , procedure_date_9\n    , procedure_date_10\n    , procedure_date_11\n    , procedure_date_12\n    , procedure_date_13\n    , procedure_date_14\n    , procedure_date_15\n    , procedure_date_16\n    , procedure_date_17\n    , procedure_date_18\n    , procedure_date_19\n    , procedure_date_20\n    , procedure_date_21\n    , procedure_date_22\n    , procedure_date_23\n    , procedure_date_24\n    , procedure_date_25\n    , in_network_flag\n    , data_source\n    , file_name\n    , file_date\n    , ingest_datetime\nfrom tuva.input_layer.input_layer__medical_claim\n), normalize_cte as (\n    select\n        med.claim_id\n        , med.data_source\n        , med.drg_code_type\n        , coalesce(msdrg.ms_drg_code, aprdrg.apr_drg_code) as drg_code\n        , coalesce(msdrg.ms_drg_description, aprdrg.apr_drg_description) as drg_description\n    from __dbt__cte__normalized_input__stg_medical_claim as med\n    left outer join tuva.terminology.ms_drg as msdrg\n        on med.drg_code_type = 'ms-drg'\n        and med.drg_code = msdrg.ms_drg_code\n    left outer join tuva.terminology.apr_drg as aprdrg\n        on med.drg_code_type = 'apr-drg'\n        and med.drg_code = aprdrg.apr_drg_code\n    where claim_type = 'institutional'\n)\n\n, distinct_counts as (\n    select\n        claim_id\n        , data_source\n        , drg_code\n        , drg_description\n        , count(*) as drg_occurrence_count\n    from normalize_cte\n    where drg_code is not null\n    group by\n        claim_id\n        , data_source\n        , drg_code\n        , drg_description\n)\n\n, occurence_comparison as (\n    select\n        claim_id\n        , data_source\n        , 'drg_code' as column_name\n        , drg_code as normalized_code\n        , drg_description as normalized_description\n        , drg_occurrence_count as occurrence_count\n        , coalesce(lead(drg_occurrence_count)\n            over (partition by claim_id, data_source\norder by drg_occurrence_count desc), 0) as next_occurrence_count\n        , row_number() over (partition by claim_id, data_source\norder by drg_occurrence_count desc) as occurrence_row_count\n    from distinct_counts as dist\n)\n\nselect\n    claim_id\n    , data_source\n    , column_name\n    , normalized_code\n    , normalized_description\n    , occurrence_count\n    , next_occurrence_count\n    , occurrence_row_count\n    , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom occurence_comparison", "relation_name": "tuva.claims_preprocessing._int_normalized_input_drg_voting", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:19.625673Z", "completed_at": "2025-06-03T19:50:19.649325Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:19.668371Z", "completed_at": "2025-06-03T19:50:19.668380Z"}], "thread_id": "Thread-2", "execution_time": 0.04477286338806152, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.normalized_input__int_medical_npi_normalize", "compiled": true, "compiled_code": "\n\nwith __dbt__cte__normalized_input__stg_medical_claim as (\n\n\nselect\n      claim_id\n    , claim_line_number\n    , claim_type\n    , person_id\n    , member_id\n    , payer\n    , plan\n    , claim_start_date\n    , claim_end_date\n    , claim_line_start_date\n    , claim_line_end_date\n    , admission_date\n    , discharge_date\n    , admit_source_code\n    , admit_type_code\n    , discharge_disposition_code\n    , place_of_service_code\n    , bill_type_code\n    , drg_code_type\n    , drg_code\n    , revenue_center_code\n    , service_unit_quantity\n    , hcpcs_code\n    , hcpcs_modifier_1\n    , hcpcs_modifier_2\n    , hcpcs_modifier_3\n    , hcpcs_modifier_4\n    , hcpcs_modifier_5\n    , rendering_npi\n    , rendering_tin\n    , billing_npi\n    , billing_tin\n    , facility_npi\n    , paid_date\n    , paid_amount\n    , allowed_amount\n    , charge_amount\n    , coinsurance_amount\n    , copayment_amount\n    , deductible_amount\n    , total_cost_amount\n    , diagnosis_code_type\n    , diagnosis_code_1\n    , diagnosis_code_2\n    , diagnosis_code_3\n    , diagnosis_code_4\n    , diagnosis_code_5\n    , diagnosis_code_6\n    , diagnosis_code_7\n    , diagnosis_code_8\n    , diagnosis_code_9\n    , diagnosis_code_10\n    , diagnosis_code_11\n    , diagnosis_code_12\n    , diagnosis_code_13\n    , diagnosis_code_14\n    , diagnosis_code_15\n    , diagnosis_code_16\n    , diagnosis_code_17\n    , diagnosis_code_18\n    , diagnosis_code_19\n    , diagnosis_code_20\n    , diagnosis_code_21\n    , diagnosis_code_22\n    , diagnosis_code_23\n    , diagnosis_code_24\n    , diagnosis_code_25\n    , diagnosis_poa_1\n    , diagnosis_poa_2\n    , diagnosis_poa_3\n    , diagnosis_poa_4\n    , diagnosis_poa_5\n    , diagnosis_poa_6\n    , diagnosis_poa_7\n    , diagnosis_poa_8\n    , diagnosis_poa_9\n    , diagnosis_poa_10\n    , diagnosis_poa_11\n    , diagnosis_poa_12\n    , diagnosis_poa_13\n    , diagnosis_poa_14\n    , diagnosis_poa_15\n    , diagnosis_poa_16\n    , diagnosis_poa_17\n    , diagnosis_poa_18\n    , diagnosis_poa_19\n    , diagnosis_poa_20\n    , diagnosis_poa_21\n    , diagnosis_poa_22\n    , diagnosis_poa_23\n    , diagnosis_poa_24\n    , diagnosis_poa_25\n    , procedure_code_type\n    , procedure_code_1\n    , procedure_code_2\n    , procedure_code_3\n    , procedure_code_4\n    , procedure_code_5\n    , procedure_code_6\n    , procedure_code_7\n    , procedure_code_8\n    , procedure_code_9\n    , procedure_code_10\n    , procedure_code_11\n    , procedure_code_12\n    , procedure_code_13\n    , procedure_code_14\n    , procedure_code_15\n    , procedure_code_16\n    , procedure_code_17\n    , procedure_code_18\n    , procedure_code_19\n    , procedure_code_20\n    , procedure_code_21\n    , procedure_code_22\n    , procedure_code_23\n    , procedure_code_24\n    , procedure_code_25\n    , procedure_date_1\n    , procedure_date_2\n    , procedure_date_3\n    , procedure_date_4\n    , procedure_date_5\n    , procedure_date_6\n    , procedure_date_7\n    , procedure_date_8\n    , procedure_date_9\n    , procedure_date_10\n    , procedure_date_11\n    , procedure_date_12\n    , procedure_date_13\n    , procedure_date_14\n    , procedure_date_15\n    , procedure_date_16\n    , procedure_date_17\n    , procedure_date_18\n    , procedure_date_19\n    , procedure_date_20\n    , procedure_date_21\n    , procedure_date_22\n    , procedure_date_23\n    , procedure_date_24\n    , procedure_date_25\n    , in_network_flag\n    , data_source\n    , file_name\n    , file_date\n    , ingest_datetime\nfrom tuva.input_layer.input_layer__medical_claim\n) select distinct\n    med.claim_id\n  , med.claim_line_number\n  , med.claim_type\n  , med.data_source\n  , rend_prov.npi as normalized_rendering_npi\n  , case\n      when rend_prov.entity_type_code = '1' then\n        cast(rend_prov.provider_last_name || ', ' || rend_prov.provider_first_name as TEXT)\n      else\n        cast(rend_prov.provider_organization_name as TEXT)\n    end as normalized_rendering_name\n  , bill_prov.npi as normalized_billing_npi\n  , case\n      when bill_prov.entity_type_code = '1' then\n        cast(bill_prov.provider_last_name || ', ' || bill_prov.provider_first_name as TEXT)\n      else\n        cast(bill_prov.provider_organization_name as TEXT)\n    end as normalized_billing_name\n  , fac_prov.npi as normalized_facility_npi\n  , case\n      when fac_prov.entity_type_code = '1' then\n        cast(fac_prov.provider_last_name || ', ' || fac_prov.provider_first_name as TEXT)\n      else\n        cast(fac_prov.provider_organization_name as TEXT)\n    end as normalized_facility_name\n  , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom __dbt__cte__normalized_input__stg_medical_claim as med\nleft outer join tuva.terminology.provider as rend_prov\n  on med.rendering_npi = rend_prov.npi\nleft outer join tuva.terminology.provider as bill_prov\n  on med.billing_npi = bill_prov.npi\nleft outer join tuva.terminology.provider as fac_prov\n  on med.facility_npi = fac_prov.npi\n  and fac_prov.entity_type_description = 'Organization'\n  and med.claim_type = 'institutional'", "relation_name": "tuva.claims_preprocessing._int_normalized_input_medical_npi_normalize", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:19.640961Z", "completed_at": "2025-06-03T19:50:19.655816Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:19.697599Z", "completed_at": "2025-06-03T19:50:19.697604Z"}], "thread_id": "Thread-1", "execution_time": 0.07332801818847656, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.normalized_input__int_place_of_service_normalize", "compiled": true, "compiled_code": "\n\n\nwith __dbt__cte__normalized_input__stg_medical_claim as (\n\n\nselect\n      claim_id\n    , claim_line_number\n    , claim_type\n    , person_id\n    , member_id\n    , payer\n    , plan\n    , claim_start_date\n    , claim_end_date\n    , claim_line_start_date\n    , claim_line_end_date\n    , admission_date\n    , discharge_date\n    , admit_source_code\n    , admit_type_code\n    , discharge_disposition_code\n    , place_of_service_code\n    , bill_type_code\n    , drg_code_type\n    , drg_code\n    , revenue_center_code\n    , service_unit_quantity\n    , hcpcs_code\n    , hcpcs_modifier_1\n    , hcpcs_modifier_2\n    , hcpcs_modifier_3\n    , hcpcs_modifier_4\n    , hcpcs_modifier_5\n    , rendering_npi\n    , rendering_tin\n    , billing_npi\n    , billing_tin\n    , facility_npi\n    , paid_date\n    , paid_amount\n    , allowed_amount\n    , charge_amount\n    , coinsurance_amount\n    , copayment_amount\n    , deductible_amount\n    , total_cost_amount\n    , diagnosis_code_type\n    , diagnosis_code_1\n    , diagnosis_code_2\n    , diagnosis_code_3\n    , diagnosis_code_4\n    , diagnosis_code_5\n    , diagnosis_code_6\n    , diagnosis_code_7\n    , diagnosis_code_8\n    , diagnosis_code_9\n    , diagnosis_code_10\n    , diagnosis_code_11\n    , diagnosis_code_12\n    , diagnosis_code_13\n    , diagnosis_code_14\n    , diagnosis_code_15\n    , diagnosis_code_16\n    , diagnosis_code_17\n    , diagnosis_code_18\n    , diagnosis_code_19\n    , diagnosis_code_20\n    , diagnosis_code_21\n    , diagnosis_code_22\n    , diagnosis_code_23\n    , diagnosis_code_24\n    , diagnosis_code_25\n    , diagnosis_poa_1\n    , diagnosis_poa_2\n    , diagnosis_poa_3\n    , diagnosis_poa_4\n    , diagnosis_poa_5\n    , diagnosis_poa_6\n    , diagnosis_poa_7\n    , diagnosis_poa_8\n    , diagnosis_poa_9\n    , diagnosis_poa_10\n    , diagnosis_poa_11\n    , diagnosis_poa_12\n    , diagnosis_poa_13\n    , diagnosis_poa_14\n    , diagnosis_poa_15\n    , diagnosis_poa_16\n    , diagnosis_poa_17\n    , diagnosis_poa_18\n    , diagnosis_poa_19\n    , diagnosis_poa_20\n    , diagnosis_poa_21\n    , diagnosis_poa_22\n    , diagnosis_poa_23\n    , diagnosis_poa_24\n    , diagnosis_poa_25\n    , procedure_code_type\n    , procedure_code_1\n    , procedure_code_2\n    , procedure_code_3\n    , procedure_code_4\n    , procedure_code_5\n    , procedure_code_6\n    , procedure_code_7\n    , procedure_code_8\n    , procedure_code_9\n    , procedure_code_10\n    , procedure_code_11\n    , procedure_code_12\n    , procedure_code_13\n    , procedure_code_14\n    , procedure_code_15\n    , procedure_code_16\n    , procedure_code_17\n    , procedure_code_18\n    , procedure_code_19\n    , procedure_code_20\n    , procedure_code_21\n    , procedure_code_22\n    , procedure_code_23\n    , procedure_code_24\n    , procedure_code_25\n    , procedure_date_1\n    , procedure_date_2\n    , procedure_date_3\n    , procedure_date_4\n    , procedure_date_5\n    , procedure_date_6\n    , procedure_date_7\n    , procedure_date_8\n    , procedure_date_9\n    , procedure_date_10\n    , procedure_date_11\n    , procedure_date_12\n    , procedure_date_13\n    , procedure_date_14\n    , procedure_date_15\n    , procedure_date_16\n    , procedure_date_17\n    , procedure_date_18\n    , procedure_date_19\n    , procedure_date_20\n    , procedure_date_21\n    , procedure_date_22\n    , procedure_date_23\n    , procedure_date_24\n    , procedure_date_25\n    , in_network_flag\n    , data_source\n    , file_name\n    , file_date\n    , ingest_datetime\nfrom tuva.input_layer.input_layer__medical_claim\n) select\n    claim_id\n    , claim_line_number\n    , data_source\n    , pos.place_of_service_code as normalized_code\n    , pos.place_of_service_description as normalized_description\n    , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom __dbt__cte__normalized_input__stg_medical_claim as med\nleft outer join tuva.terminology.place_of_service as pos\n    \n        on lpad(med.place_of_service_code, 2, '0') = pos.place_of_service_code\n    \nwhere claim_type = 'professional'", "relation_name": "tuva.claims_preprocessing._int_normalized_input_place_of_service_normalize", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:19.649760Z", "completed_at": "2025-06-03T19:50:19.726040Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:19.739294Z", "completed_at": "2025-06-03T19:50:19.739300Z"}], "thread_id": "Thread-3", "execution_time": 0.09084606170654297, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.normalized_input__int_present_on_admit_normalize", "compiled": true, "compiled_code": "\n\n\nwith  __dbt__cte__normalized_input__stg_medical_claim as (\n\n\nselect\n      claim_id\n    , claim_line_number\n    , claim_type\n    , person_id\n    , member_id\n    , payer\n    , plan\n    , claim_start_date\n    , claim_end_date\n    , claim_line_start_date\n    , claim_line_end_date\n    , admission_date\n    , discharge_date\n    , admit_source_code\n    , admit_type_code\n    , discharge_disposition_code\n    , place_of_service_code\n    , bill_type_code\n    , drg_code_type\n    , drg_code\n    , revenue_center_code\n    , service_unit_quantity\n    , hcpcs_code\n    , hcpcs_modifier_1\n    , hcpcs_modifier_2\n    , hcpcs_modifier_3\n    , hcpcs_modifier_4\n    , hcpcs_modifier_5\n    , rendering_npi\n    , rendering_tin\n    , billing_npi\n    , billing_tin\n    , facility_npi\n    , paid_date\n    , paid_amount\n    , allowed_amount\n    , charge_amount\n    , coinsurance_amount\n    , copayment_amount\n    , deductible_amount\n    , total_cost_amount\n    , diagnosis_code_type\n    , diagnosis_code_1\n    , diagnosis_code_2\n    , diagnosis_code_3\n    , diagnosis_code_4\n    , diagnosis_code_5\n    , diagnosis_code_6\n    , diagnosis_code_7\n    , diagnosis_code_8\n    , diagnosis_code_9\n    , diagnosis_code_10\n    , diagnosis_code_11\n    , diagnosis_code_12\n    , diagnosis_code_13\n    , diagnosis_code_14\n    , diagnosis_code_15\n    , diagnosis_code_16\n    , diagnosis_code_17\n    , diagnosis_code_18\n    , diagnosis_code_19\n    , diagnosis_code_20\n    , diagnosis_code_21\n    , diagnosis_code_22\n    , diagnosis_code_23\n    , diagnosis_code_24\n    , diagnosis_code_25\n    , diagnosis_poa_1\n    , diagnosis_poa_2\n    , diagnosis_poa_3\n    , diagnosis_poa_4\n    , diagnosis_poa_5\n    , diagnosis_poa_6\n    , diagnosis_poa_7\n    , diagnosis_poa_8\n    , diagnosis_poa_9\n    , diagnosis_poa_10\n    , diagnosis_poa_11\n    , diagnosis_poa_12\n    , diagnosis_poa_13\n    , diagnosis_poa_14\n    , diagnosis_poa_15\n    , diagnosis_poa_16\n    , diagnosis_poa_17\n    , diagnosis_poa_18\n    , diagnosis_poa_19\n    , diagnosis_poa_20\n    , diagnosis_poa_21\n    , diagnosis_poa_22\n    , diagnosis_poa_23\n    , diagnosis_poa_24\n    , diagnosis_poa_25\n    , procedure_code_type\n    , procedure_code_1\n    , procedure_code_2\n    , procedure_code_3\n    , procedure_code_4\n    , procedure_code_5\n    , procedure_code_6\n    , procedure_code_7\n    , procedure_code_8\n    , procedure_code_9\n    , procedure_code_10\n    , procedure_code_11\n    , procedure_code_12\n    , procedure_code_13\n    , procedure_code_14\n    , procedure_code_15\n    , procedure_code_16\n    , procedure_code_17\n    , procedure_code_18\n    , procedure_code_19\n    , procedure_code_20\n    , procedure_code_21\n    , procedure_code_22\n    , procedure_code_23\n    , procedure_code_24\n    , procedure_code_25\n    , procedure_date_1\n    , procedure_date_2\n    , procedure_date_3\n    , procedure_date_4\n    , procedure_date_5\n    , procedure_date_6\n    , procedure_date_7\n    , procedure_date_8\n    , procedure_date_9\n    , procedure_date_10\n    , procedure_date_11\n    , procedure_date_12\n    , procedure_date_13\n    , procedure_date_14\n    , procedure_date_15\n    , procedure_date_16\n    , procedure_date_17\n    , procedure_date_18\n    , procedure_date_19\n    , procedure_date_20\n    , procedure_date_21\n    , procedure_date_22\n    , procedure_date_23\n    , procedure_date_24\n    , procedure_date_25\n    , in_network_flag\n    , data_source\n    , file_name\n    , file_date\n    , ingest_datetime\nfrom tuva.input_layer.input_layer__medical_claim\n), pivot_poa as (\n    select\n        claim_id\n        , claim_type\n        , data_source\n        , 'diagnosis_poa_1' as diagnosis_column\n        , diagnosis_poa_1 as present_on_admit_code\n    from __dbt__cte__normalized_input__stg_medical_claim\n\n\n    union all\n\n    select\n        claim_id\n        , claim_type\n        , data_source\n        , 'diagnosis_poa_2' as diagnosis_column\n        , diagnosis_poa_2 as present_on_admit_code\n    from __dbt__cte__normalized_input__stg_medical_claim\n\n    union all\n\n    select\n        claim_id\n        , claim_type\n        , data_source\n        , 'diagnosis_poa_3' as diagnosis_column\n        , diagnosis_poa_3 as present_on_admit_code\n    from __dbt__cte__normalized_input__stg_medical_claim\n\n\n    union all\n\n    select\n        claim_id\n        , claim_type\n        , data_source\n        , 'diagnosis_poa_4' as diagnosis_column\n        , diagnosis_poa_4 as present_on_admit_code\n    from __dbt__cte__normalized_input__stg_medical_claim\n\n\n    union all\n\n    select\n        claim_id\n        , claim_type\n        , data_source\n        , 'diagnosis_poa_5' as diagnosis_column\n        , diagnosis_poa_5 as present_on_admit_code\n    from __dbt__cte__normalized_input__stg_medical_claim\n\n\n    union all\n\n    select\n        claim_id\n        , claim_type\n        , data_source\n        , 'diagnosis_poa_6' as diagnosis_column\n        , diagnosis_poa_6 as present_on_admit_code\n    from __dbt__cte__normalized_input__stg_medical_claim\n\n\n    union all\n\n    select\n        claim_id\n        , claim_type\n        , data_source\n        , 'diagnosis_poa_7' as diagnosis_column\n        , diagnosis_poa_7 as present_on_admit_code\n    from __dbt__cte__normalized_input__stg_medical_claim\n\n\n    union all\n\n    select\n        claim_id\n        , claim_type\n        , data_source\n        , 'diagnosis_poa_8' as diagnosis_column\n        , diagnosis_poa_8 as present_on_admit_code\n    from __dbt__cte__normalized_input__stg_medical_claim\n\n\n    union all\n\n    select\n        claim_id\n        , claim_type\n        , data_source\n        , 'diagnosis_poa_9' as diagnosis_column\n        , diagnosis_poa_9 as present_on_admit_code\n    from __dbt__cte__normalized_input__stg_medical_claim\n\n\n    union all\n\n    select\n        claim_id\n        , claim_type\n        , data_source\n        , 'diagnosis_poa_10' as diagnosis_column\n        , diagnosis_poa_10 as present_on_admit_code\n    from __dbt__cte__normalized_input__stg_medical_claim\n\n\n    union all\n\n    select\n        claim_id\n        , claim_type\n        , data_source\n        , 'diagnosis_poa_11' as diagnosis_column\n        , diagnosis_poa_11 as present_on_admit_code\n    from __dbt__cte__normalized_input__stg_medical_claim\n\n\n    union all\n\n    select\n        claim_id\n        , claim_type\n        , data_source\n        , 'diagnosis_poa_12' as diagnosis_column\n        , diagnosis_poa_12 as present_on_admit_code\n    from __dbt__cte__normalized_input__stg_medical_claim\n\n\n    union all\n\n    select\n        claim_id\n        , claim_type\n        , data_source\n        , 'diagnosis_poa_13' as diagnosis_column\n        , diagnosis_poa_13 as present_on_admit_code\n    from __dbt__cte__normalized_input__stg_medical_claim\n\n    union all\n\n    select\n        claim_id\n        , claim_type\n        , data_source\n        , 'diagnosis_poa_14' as diagnosis_column\n        , diagnosis_poa_14 as present_on_admit_code\n    from __dbt__cte__normalized_input__stg_medical_claim\n\n\n    union all\n\n    select\n        claim_id\n        , claim_type\n        , data_source\n        , 'diagnosis_poa_15' as diagnosis_column\n        , diagnosis_poa_15 as present_on_admit_code\n    from __dbt__cte__normalized_input__stg_medical_claim\n\n\n    union all\n\n    select\n        claim_id\n        , claim_type\n        , data_source\n        , 'diagnosis_poa_16' as diagnosis_column\n        , diagnosis_poa_16 as present_on_admit_code\n    from __dbt__cte__normalized_input__stg_medical_claim\n\n\n    union all\n\n    select\n        claim_id\n        , claim_type\n        , data_source\n        , 'diagnosis_poa_17' as diagnosis_column\n        , diagnosis_poa_17 as present_on_admit_code\n    from __dbt__cte__normalized_input__stg_medical_claim\n\n\n    union all\n\n    select\n        claim_id\n        , claim_type\n        , data_source\n        , 'diagnosis_poa_18' as diagnosis_column\n        , diagnosis_poa_18 as present_on_admit_code\n    from __dbt__cte__normalized_input__stg_medical_claim\n\n\n    union all\n\n    select\n        claim_id\n        , claim_type\n        , data_source\n        , 'diagnosis_poa_19' as diagnosis_column\n        , diagnosis_poa_19 as present_on_admit_code\n    from __dbt__cte__normalized_input__stg_medical_claim\n\n\n    union all\n\n    select\n        claim_id\n        , claim_type\n        , data_source\n        , 'diagnosis_poa_20' as diagnosis_column\n        , diagnosis_poa_20 as present_on_admit_code\n    from __dbt__cte__normalized_input__stg_medical_claim\n\n\n    union all\n\n    select\n        claim_id\n        , claim_type\n        , data_source\n        , 'diagnosis_poa_21' as diagnosis_column\n        , diagnosis_poa_21 as present_on_admit_code\n    from __dbt__cte__normalized_input__stg_medical_claim\n\n    union all\n\n    select\n        claim_id\n        , claim_type\n        , data_source\n        , 'diagnosis_poa_22' as diagnosis_column\n        , diagnosis_poa_22 as present_on_admit_code\n    from __dbt__cte__normalized_input__stg_medical_claim\n\n\n    union all\n\n    select\n        claim_id\n        , claim_type\n        , data_source\n        , 'diagnosis_poa_23' as diagnosis_column\n        , diagnosis_poa_24 as present_on_admit_code\n    from __dbt__cte__normalized_input__stg_medical_claim\n\n    union all\n\n    select\n        claim_id\n        , claim_type\n        , data_source\n        , 'diagnosis_poa_24' as diagnosis_column\n        , diagnosis_poa_24 as present_on_admit_code\n    from __dbt__cte__normalized_input__stg_medical_claim\n\n    union all\n\n    select\n        claim_id\n        , claim_type\n        , data_source\n        , 'diagnosis_poa_25' as diagnosis_column\n        , diagnosis_poa_25 as present_on_admit_code\n    from __dbt__cte__normalized_input__stg_medical_claim\n)\n\nselect\n    claim_id\n    , data_source\n    , diagnosis_column\n    , poa.present_on_admit_code as normalized_present_on_admit_code\n    , count(*) as present_on_admit_occurrence_count\n    , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom pivot_poa as piv\nleft outer join tuva.terminology.present_on_admission as poa\n    on replace(piv.present_on_admit_code, '.', '') = poa.present_on_admit_code\nwhere claim_type = 'institutional'\ngroup by\n    claim_id\n    , data_source\n    , diagnosis_column\n    , poa.present_on_admit_code", "relation_name": "tuva.claims_preprocessing._int_normalized_input_present_on_admit_normalize", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:19.685017Z", "completed_at": "2025-06-03T19:50:19.732785Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:19.756904Z", "completed_at": "2025-06-03T19:50:19.756910Z"}], "thread_id": "Thread-4", "execution_time": 0.10816001892089844, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.normalized_input__int_procedure_code_normalize", "compiled": true, "compiled_code": "\n\n\nwith  __dbt__cte__normalized_input__stg_medical_claim as (\n\n\nselect\n      claim_id\n    , claim_line_number\n    , claim_type\n    , person_id\n    , member_id\n    , payer\n    , plan\n    , claim_start_date\n    , claim_end_date\n    , claim_line_start_date\n    , claim_line_end_date\n    , admission_date\n    , discharge_date\n    , admit_source_code\n    , admit_type_code\n    , discharge_disposition_code\n    , place_of_service_code\n    , bill_type_code\n    , drg_code_type\n    , drg_code\n    , revenue_center_code\n    , service_unit_quantity\n    , hcpcs_code\n    , hcpcs_modifier_1\n    , hcpcs_modifier_2\n    , hcpcs_modifier_3\n    , hcpcs_modifier_4\n    , hcpcs_modifier_5\n    , rendering_npi\n    , rendering_tin\n    , billing_npi\n    , billing_tin\n    , facility_npi\n    , paid_date\n    , paid_amount\n    , allowed_amount\n    , charge_amount\n    , coinsurance_amount\n    , copayment_amount\n    , deductible_amount\n    , total_cost_amount\n    , diagnosis_code_type\n    , diagnosis_code_1\n    , diagnosis_code_2\n    , diagnosis_code_3\n    , diagnosis_code_4\n    , diagnosis_code_5\n    , diagnosis_code_6\n    , diagnosis_code_7\n    , diagnosis_code_8\n    , diagnosis_code_9\n    , diagnosis_code_10\n    , diagnosis_code_11\n    , diagnosis_code_12\n    , diagnosis_code_13\n    , diagnosis_code_14\n    , diagnosis_code_15\n    , diagnosis_code_16\n    , diagnosis_code_17\n    , diagnosis_code_18\n    , diagnosis_code_19\n    , diagnosis_code_20\n    , diagnosis_code_21\n    , diagnosis_code_22\n    , diagnosis_code_23\n    , diagnosis_code_24\n    , diagnosis_code_25\n    , diagnosis_poa_1\n    , diagnosis_poa_2\n    , diagnosis_poa_3\n    , diagnosis_poa_4\n    , diagnosis_poa_5\n    , diagnosis_poa_6\n    , diagnosis_poa_7\n    , diagnosis_poa_8\n    , diagnosis_poa_9\n    , diagnosis_poa_10\n    , diagnosis_poa_11\n    , diagnosis_poa_12\n    , diagnosis_poa_13\n    , diagnosis_poa_14\n    , diagnosis_poa_15\n    , diagnosis_poa_16\n    , diagnosis_poa_17\n    , diagnosis_poa_18\n    , diagnosis_poa_19\n    , diagnosis_poa_20\n    , diagnosis_poa_21\n    , diagnosis_poa_22\n    , diagnosis_poa_23\n    , diagnosis_poa_24\n    , diagnosis_poa_25\n    , procedure_code_type\n    , procedure_code_1\n    , procedure_code_2\n    , procedure_code_3\n    , procedure_code_4\n    , procedure_code_5\n    , procedure_code_6\n    , procedure_code_7\n    , procedure_code_8\n    , procedure_code_9\n    , procedure_code_10\n    , procedure_code_11\n    , procedure_code_12\n    , procedure_code_13\n    , procedure_code_14\n    , procedure_code_15\n    , procedure_code_16\n    , procedure_code_17\n    , procedure_code_18\n    , procedure_code_19\n    , procedure_code_20\n    , procedure_code_21\n    , procedure_code_22\n    , procedure_code_23\n    , procedure_code_24\n    , procedure_code_25\n    , procedure_date_1\n    , procedure_date_2\n    , procedure_date_3\n    , procedure_date_4\n    , procedure_date_5\n    , procedure_date_6\n    , procedure_date_7\n    , procedure_date_8\n    , procedure_date_9\n    , procedure_date_10\n    , procedure_date_11\n    , procedure_date_12\n    , procedure_date_13\n    , procedure_date_14\n    , procedure_date_15\n    , procedure_date_16\n    , procedure_date_17\n    , procedure_date_18\n    , procedure_date_19\n    , procedure_date_20\n    , procedure_date_21\n    , procedure_date_22\n    , procedure_date_23\n    , procedure_date_24\n    , procedure_date_25\n    , in_network_flag\n    , data_source\n    , file_name\n    , file_date\n    , ingest_datetime\nfrom tuva.input_layer.input_layer__medical_claim\n), pivot_procedure as (\n    select\n        claim_id\n        , claim_type\n        , data_source\n        , procedure_code_type\n        , 'procedure_code_1' as procedure_column\n        , procedure_code_1 as procedure_code\n    from __dbt__cte__normalized_input__stg_medical_claim\n\n\n    union all\n\n    select\n        claim_id\n        , claim_type\n        , data_source\n        , procedure_code_type\n        , 'procedure_code_2' as procedure_column\n        , procedure_code_2 as procedure_code\n    from __dbt__cte__normalized_input__stg_medical_claim\n\n    union all\n\n    select\n        claim_id\n        , claim_type\n        , data_source\n        , procedure_code_type\n        , 'procedure_code_3' as procedure_column\n        , procedure_code_3 as procedure_code\n    from __dbt__cte__normalized_input__stg_medical_claim\n\n\n    union all\n\n    select\n        claim_id\n        , claim_type\n        , data_source\n        , procedure_code_type\n        , 'procedure_code_4' as procedure_column\n        , procedure_code_4 as procedure_code\n    from __dbt__cte__normalized_input__stg_medical_claim\n\n\n    union all\n\n    select\n        claim_id\n        , claim_type\n        , data_source\n        , procedure_code_type\n        , 'procedure_code_5' as procedure_column\n        , procedure_code_5 as procedure_code\n    from __dbt__cte__normalized_input__stg_medical_claim\n\n\n    union all\n\n    select\n        claim_id\n        , claim_type\n        , data_source\n        , procedure_code_type\n        , 'procedure_code_6' as procedure_column\n        , procedure_code_6 as procedure_code\n    from __dbt__cte__normalized_input__stg_medical_claim\n\n\n    union all\n\n    select\n        claim_id\n        , claim_type\n        , data_source\n        , procedure_code_type\n        , 'procedure_code_7' as procedure_column\n        , procedure_code_7 as procedure_code\n    from __dbt__cte__normalized_input__stg_medical_claim\n\n\n    union all\n\n    select\n        claim_id\n        , claim_type\n        , data_source\n        , procedure_code_type\n        , 'procedure_code_8' as procedure_column\n        , procedure_code_8 as procedure_code\n    from __dbt__cte__normalized_input__stg_medical_claim\n\n\n    union all\n\n    select\n        claim_id\n        , claim_type\n        , data_source\n        , procedure_code_type\n        , 'procedure_code_9' as procedure_column\n        , procedure_code_9 as procedure_code\n    from __dbt__cte__normalized_input__stg_medical_claim\n\n\n    union all\n\n    select\n        claim_id\n        , claim_type\n        , data_source\n        , procedure_code_type\n        , 'procedure_code_10' as procedure_column\n        , procedure_code_10 as procedure_code\n    from __dbt__cte__normalized_input__stg_medical_claim\n\n\n    union all\n\n    select\n        claim_id\n        , claim_type\n        , data_source\n        , procedure_code_type\n        , 'procedure_code_11' as procedure_column\n        , procedure_code_11 as procedure_code\n    from __dbt__cte__normalized_input__stg_medical_claim\n\n\n    union all\n\n    select\n        claim_id\n        , claim_type\n        , data_source\n        , procedure_code_type\n        , 'procedure_code_12' as procedure_column\n        , procedure_code_12 as procedure_code\n    from __dbt__cte__normalized_input__stg_medical_claim\n\n\n    union all\n\n    select\n        claim_id\n        , claim_type\n        , data_source\n        , procedure_code_type\n        , 'procedure_code_13' as procedure_column\n        , procedure_code_13 as procedure_code\n    from __dbt__cte__normalized_input__stg_medical_claim\n\n    union all\n\n    select\n        claim_id\n        , claim_type\n        , data_source\n        , procedure_code_type\n        , 'procedure_code_14' as procedure_column\n        , procedure_code_14 as procedure_code\n    from __dbt__cte__normalized_input__stg_medical_claim\n\n\n    union all\n\n    select\n        claim_id\n        , claim_type\n        , data_source\n        , procedure_code_type\n        , 'procedure_code_15' as procedure_column\n        , procedure_code_15 as procedure_code\n    from __dbt__cte__normalized_input__stg_medical_claim\n\n\n    union all\n\n    select\n        claim_id\n        , claim_type\n        , data_source\n        , procedure_code_type\n        , 'procedure_code_16' as procedure_column\n        , procedure_code_16 as procedure_code\n    from __dbt__cte__normalized_input__stg_medical_claim\n\n\n    union all\n\n    select\n        claim_id\n        , claim_type\n        , data_source\n        , procedure_code_type\n        , 'procedure_code_17' as procedure_column\n        , procedure_code_17 as procedure_code\n    from __dbt__cte__normalized_input__stg_medical_claim\n\n\n    union all\n\n    select\n        claim_id\n        , claim_type\n        , data_source\n        , procedure_code_type\n        , 'procedure_code_18' as procedure_column\n        , procedure_code_18 as procedure_code\n    from __dbt__cte__normalized_input__stg_medical_claim\n\n\n    union all\n\n    select\n        claim_id\n        , claim_type\n        , data_source\n        , procedure_code_type\n        , 'procedure_code_19' as procedure_column\n        , procedure_code_19 as procedure_code\n    from __dbt__cte__normalized_input__stg_medical_claim\n\n\n    union all\n\n    select\n        claim_id\n        , claim_type\n        , data_source\n        , procedure_code_type\n        , 'procedure_code_20' as procedure_column\n        , procedure_code_20 as procedure_code\n    from __dbt__cte__normalized_input__stg_medical_claim\n\n\n    union all\n\n    select\n        claim_id\n        , claim_type\n        , data_source\n        , procedure_code_type\n        , 'procedure_code_21' as procedure_column\n        , procedure_code_21 as procedure_code\n    from __dbt__cte__normalized_input__stg_medical_claim\n\n    union all\n\n    select\n        claim_id\n        , claim_type\n        , data_source\n        , procedure_code_type\n        , 'procedure_code_22' as procedure_column\n        , procedure_code_22 as procedure_code\n    from __dbt__cte__normalized_input__stg_medical_claim\n\n\n    union all\n\n    select\n        claim_id\n        , claim_type\n        , data_source\n        , procedure_code_type\n        , 'procedure_code_23' as procedure_column\n        , procedure_code_23 as procedure_code\n    from __dbt__cte__normalized_input__stg_medical_claim\n\n    union all\n\n    select\n        claim_id\n        , claim_type\n        , data_source\n        , procedure_code_type\n        , 'procedure_code_24' as procedure_column\n        , procedure_code_24 as procedure_code\n    from __dbt__cte__normalized_input__stg_medical_claim\n\n    union all\n\n    select\n        claim_id\n        , claim_type\n        , data_source\n        , procedure_code_type\n        , 'procedure_code_25' as procedure_column\n        , procedure_code_25 as procedure_code\n    from __dbt__cte__normalized_input__stg_medical_claim\n)\n\nselect\n    claim_id\n    , data_source\n    , procedure_code_type\n    , procedure_column\n    , coalesce(icd_9.icd_9_pcs, icd_10.icd_10_pcs) as normalized_procedure_code\n    , count(*) as procedure_code_occurrence_count\n    , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom pivot_procedure as piv\nleft outer join tuva.terminology.icd_10_pcs as icd_10\n    on replace(piv.procedure_code, '.', '') = icd_10.icd_10_pcs\n    and piv.procedure_code_type = 'icd-10-pcs'\nleft outer join tuva.terminology.icd_9_pcs as icd_9\n    on replace(piv.procedure_code, '.', '') = icd_9.icd_9_pcs\n    and piv.procedure_code_type = 'icd-9-pcs'\nwhere claim_type = 'institutional'\ngroup by\n    claim_id\n    , data_source\n    , procedure_code_type\n    , procedure_column\n    , coalesce(icd_9.icd_9_pcs, icd_10.icd_10_pcs)", "relation_name": "tuva.claims_preprocessing._int_normalized_input_procedure_code_normalize", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:19.751839Z", "completed_at": "2025-06-03T19:50:19.770436Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:19.771110Z", "completed_at": "2025-06-03T19:50:19.771114Z"}], "thread_id": "Thread-1", "execution_time": 0.04561305046081543, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.normalized_input__int_revenue_center_normalize", "compiled": true, "compiled_code": "\n\n\nwith __dbt__cte__normalized_input__stg_medical_claim as (\n\n\nselect\n      claim_id\n    , claim_line_number\n    , claim_type\n    , person_id\n    , member_id\n    , payer\n    , plan\n    , claim_start_date\n    , claim_end_date\n    , claim_line_start_date\n    , claim_line_end_date\n    , admission_date\n    , discharge_date\n    , admit_source_code\n    , admit_type_code\n    , discharge_disposition_code\n    , place_of_service_code\n    , bill_type_code\n    , drg_code_type\n    , drg_code\n    , revenue_center_code\n    , service_unit_quantity\n    , hcpcs_code\n    , hcpcs_modifier_1\n    , hcpcs_modifier_2\n    , hcpcs_modifier_3\n    , hcpcs_modifier_4\n    , hcpcs_modifier_5\n    , rendering_npi\n    , rendering_tin\n    , billing_npi\n    , billing_tin\n    , facility_npi\n    , paid_date\n    , paid_amount\n    , allowed_amount\n    , charge_amount\n    , coinsurance_amount\n    , copayment_amount\n    , deductible_amount\n    , total_cost_amount\n    , diagnosis_code_type\n    , diagnosis_code_1\n    , diagnosis_code_2\n    , diagnosis_code_3\n    , diagnosis_code_4\n    , diagnosis_code_5\n    , diagnosis_code_6\n    , diagnosis_code_7\n    , diagnosis_code_8\n    , diagnosis_code_9\n    , diagnosis_code_10\n    , diagnosis_code_11\n    , diagnosis_code_12\n    , diagnosis_code_13\n    , diagnosis_code_14\n    , diagnosis_code_15\n    , diagnosis_code_16\n    , diagnosis_code_17\n    , diagnosis_code_18\n    , diagnosis_code_19\n    , diagnosis_code_20\n    , diagnosis_code_21\n    , diagnosis_code_22\n    , diagnosis_code_23\n    , diagnosis_code_24\n    , diagnosis_code_25\n    , diagnosis_poa_1\n    , diagnosis_poa_2\n    , diagnosis_poa_3\n    , diagnosis_poa_4\n    , diagnosis_poa_5\n    , diagnosis_poa_6\n    , diagnosis_poa_7\n    , diagnosis_poa_8\n    , diagnosis_poa_9\n    , diagnosis_poa_10\n    , diagnosis_poa_11\n    , diagnosis_poa_12\n    , diagnosis_poa_13\n    , diagnosis_poa_14\n    , diagnosis_poa_15\n    , diagnosis_poa_16\n    , diagnosis_poa_17\n    , diagnosis_poa_18\n    , diagnosis_poa_19\n    , diagnosis_poa_20\n    , diagnosis_poa_21\n    , diagnosis_poa_22\n    , diagnosis_poa_23\n    , diagnosis_poa_24\n    , diagnosis_poa_25\n    , procedure_code_type\n    , procedure_code_1\n    , procedure_code_2\n    , procedure_code_3\n    , procedure_code_4\n    , procedure_code_5\n    , procedure_code_6\n    , procedure_code_7\n    , procedure_code_8\n    , procedure_code_9\n    , procedure_code_10\n    , procedure_code_11\n    , procedure_code_12\n    , procedure_code_13\n    , procedure_code_14\n    , procedure_code_15\n    , procedure_code_16\n    , procedure_code_17\n    , procedure_code_18\n    , procedure_code_19\n    , procedure_code_20\n    , procedure_code_21\n    , procedure_code_22\n    , procedure_code_23\n    , procedure_code_24\n    , procedure_code_25\n    , procedure_date_1\n    , procedure_date_2\n    , procedure_date_3\n    , procedure_date_4\n    , procedure_date_5\n    , procedure_date_6\n    , procedure_date_7\n    , procedure_date_8\n    , procedure_date_9\n    , procedure_date_10\n    , procedure_date_11\n    , procedure_date_12\n    , procedure_date_13\n    , procedure_date_14\n    , procedure_date_15\n    , procedure_date_16\n    , procedure_date_17\n    , procedure_date_18\n    , procedure_date_19\n    , procedure_date_20\n    , procedure_date_21\n    , procedure_date_22\n    , procedure_date_23\n    , procedure_date_24\n    , procedure_date_25\n    , in_network_flag\n    , data_source\n    , file_name\n    , file_date\n    , ingest_datetime\nfrom tuva.input_layer.input_layer__medical_claim\n) select\n    claim_id\n    , claim_line_number\n    , data_source\n    , rev.revenue_center_code as normalized_code\n    , rev.revenue_center_description as normalized_description\n    , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom __dbt__cte__normalized_input__stg_medical_claim as med\nleft outer join tuva.terminology.revenue_center as rev\n    \n        on lpad(med.revenue_center_code, 4, '0') = rev.revenue_center_code\n    \nwhere claim_type = 'institutional'", "relation_name": "tuva.claims_preprocessing._int_normalized_input_revenue_center_normalize", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:19.726505Z", "completed_at": "2025-06-03T19:50:19.771448Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:19.815374Z", "completed_at": "2025-06-03T19:50:19.815380Z"}], "thread_id": "Thread-2", "execution_time": 0.09027671813964844, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.normalized_input__int_procedure_date_normalize", "compiled": true, "compiled_code": "\n\n\nwith  __dbt__cte__normalized_input__stg_medical_claim as (\n\n\nselect\n      claim_id\n    , claim_line_number\n    , claim_type\n    , person_id\n    , member_id\n    , payer\n    , plan\n    , claim_start_date\n    , claim_end_date\n    , claim_line_start_date\n    , claim_line_end_date\n    , admission_date\n    , discharge_date\n    , admit_source_code\n    , admit_type_code\n    , discharge_disposition_code\n    , place_of_service_code\n    , bill_type_code\n    , drg_code_type\n    , drg_code\n    , revenue_center_code\n    , service_unit_quantity\n    , hcpcs_code\n    , hcpcs_modifier_1\n    , hcpcs_modifier_2\n    , hcpcs_modifier_3\n    , hcpcs_modifier_4\n    , hcpcs_modifier_5\n    , rendering_npi\n    , rendering_tin\n    , billing_npi\n    , billing_tin\n    , facility_npi\n    , paid_date\n    , paid_amount\n    , allowed_amount\n    , charge_amount\n    , coinsurance_amount\n    , copayment_amount\n    , deductible_amount\n    , total_cost_amount\n    , diagnosis_code_type\n    , diagnosis_code_1\n    , diagnosis_code_2\n    , diagnosis_code_3\n    , diagnosis_code_4\n    , diagnosis_code_5\n    , diagnosis_code_6\n    , diagnosis_code_7\n    , diagnosis_code_8\n    , diagnosis_code_9\n    , diagnosis_code_10\n    , diagnosis_code_11\n    , diagnosis_code_12\n    , diagnosis_code_13\n    , diagnosis_code_14\n    , diagnosis_code_15\n    , diagnosis_code_16\n    , diagnosis_code_17\n    , diagnosis_code_18\n    , diagnosis_code_19\n    , diagnosis_code_20\n    , diagnosis_code_21\n    , diagnosis_code_22\n    , diagnosis_code_23\n    , diagnosis_code_24\n    , diagnosis_code_25\n    , diagnosis_poa_1\n    , diagnosis_poa_2\n    , diagnosis_poa_3\n    , diagnosis_poa_4\n    , diagnosis_poa_5\n    , diagnosis_poa_6\n    , diagnosis_poa_7\n    , diagnosis_poa_8\n    , diagnosis_poa_9\n    , diagnosis_poa_10\n    , diagnosis_poa_11\n    , diagnosis_poa_12\n    , diagnosis_poa_13\n    , diagnosis_poa_14\n    , diagnosis_poa_15\n    , diagnosis_poa_16\n    , diagnosis_poa_17\n    , diagnosis_poa_18\n    , diagnosis_poa_19\n    , diagnosis_poa_20\n    , diagnosis_poa_21\n    , diagnosis_poa_22\n    , diagnosis_poa_23\n    , diagnosis_poa_24\n    , diagnosis_poa_25\n    , procedure_code_type\n    , procedure_code_1\n    , procedure_code_2\n    , procedure_code_3\n    , procedure_code_4\n    , procedure_code_5\n    , procedure_code_6\n    , procedure_code_7\n    , procedure_code_8\n    , procedure_code_9\n    , procedure_code_10\n    , procedure_code_11\n    , procedure_code_12\n    , procedure_code_13\n    , procedure_code_14\n    , procedure_code_15\n    , procedure_code_16\n    , procedure_code_17\n    , procedure_code_18\n    , procedure_code_19\n    , procedure_code_20\n    , procedure_code_21\n    , procedure_code_22\n    , procedure_code_23\n    , procedure_code_24\n    , procedure_code_25\n    , procedure_date_1\n    , procedure_date_2\n    , procedure_date_3\n    , procedure_date_4\n    , procedure_date_5\n    , procedure_date_6\n    , procedure_date_7\n    , procedure_date_8\n    , procedure_date_9\n    , procedure_date_10\n    , procedure_date_11\n    , procedure_date_12\n    , procedure_date_13\n    , procedure_date_14\n    , procedure_date_15\n    , procedure_date_16\n    , procedure_date_17\n    , procedure_date_18\n    , procedure_date_19\n    , procedure_date_20\n    , procedure_date_21\n    , procedure_date_22\n    , procedure_date_23\n    , procedure_date_24\n    , procedure_date_25\n    , in_network_flag\n    , data_source\n    , file_name\n    , file_date\n    , ingest_datetime\nfrom tuva.input_layer.input_layer__medical_claim\n), pivot_procedure as (\n    select\n        claim_id\n        , claim_type\n        , data_source\n        , 'procedure_date_1' as procedure_column\n        , procedure_date_1 as procedure_date\n    from __dbt__cte__normalized_input__stg_medical_claim\n\n\n    union all\n\n    select\n        claim_id\n        , claim_type\n        , data_source\n        , 'procedure_date_2' as procedure_column\n        , procedure_date_2 as procedure_date\n    from __dbt__cte__normalized_input__stg_medical_claim\n\n    union all\n\n    select\n        claim_id\n        , claim_type\n        , data_source\n        , 'procedure_date_3' as procedure_column\n        , procedure_date_3 as procedure_date\n    from __dbt__cte__normalized_input__stg_medical_claim\n\n\n    union all\n\n    select\n        claim_id\n        , claim_type\n        , data_source\n        , 'procedure_date_4' as procedure_column\n        , procedure_date_4 as procedure_date\n    from __dbt__cte__normalized_input__stg_medical_claim\n\n\n    union all\n\n    select\n        claim_id\n        , claim_type\n        , data_source\n        , 'procedure_date_5' as procedure_column\n        , procedure_date_5 as procedure_date\n    from __dbt__cte__normalized_input__stg_medical_claim\n\n\n    union all\n\n    select\n        claim_id\n        , claim_type\n        , data_source\n        , 'procedure_date_6' as procedure_column\n        , procedure_date_6 as procedure_date\n    from __dbt__cte__normalized_input__stg_medical_claim\n\n\n    union all\n\n    select\n        claim_id\n        , claim_type\n        , data_source\n        , 'procedure_date_7' as procedure_column\n        , procedure_date_7 as procedure_date\n    from __dbt__cte__normalized_input__stg_medical_claim\n\n\n    union all\n\n    select\n        claim_id\n        , claim_type\n        , data_source\n        , 'procedure_date_8' as procedure_column\n        , procedure_date_8 as procedure_date\n    from __dbt__cte__normalized_input__stg_medical_claim\n\n\n    union all\n\n    select\n        claim_id\n        , claim_type\n        , data_source\n        , 'procedure_date_9' as procedure_column\n        , procedure_date_9 as procedure_date\n    from __dbt__cte__normalized_input__stg_medical_claim\n\n\n    union all\n\n    select\n        claim_id\n        , claim_type\n        , data_source\n        , 'procedure_date_10' as procedure_column\n        , procedure_date_10 as procedure_date\n    from __dbt__cte__normalized_input__stg_medical_claim\n\n\n    union all\n\n    select\n        claim_id\n        , claim_type\n        , data_source\n        , 'procedure_date_11' as procedure_column\n        , procedure_date_11 as procedure_date\n    from __dbt__cte__normalized_input__stg_medical_claim\n\n\n    union all\n\n    select\n        claim_id\n        , claim_type\n        , data_source\n        , 'procedure_date_12' as procedure_column\n        , procedure_date_12 as procedure_date\n    from __dbt__cte__normalized_input__stg_medical_claim\n\n\n    union all\n\n    select\n        claim_id\n        , claim_type\n        , data_source\n        , 'procedure_date_13' as procedure_column\n        , procedure_date_13 as procedure_date\n    from __dbt__cte__normalized_input__stg_medical_claim\n\n    union all\n\n    select\n        claim_id\n        , claim_type\n        , data_source\n        , 'procedure_date_14' as procedure_column\n        , procedure_date_14 as procedure_date\n    from __dbt__cte__normalized_input__stg_medical_claim\n\n\n    union all\n\n    select\n        claim_id\n        , claim_type\n        , data_source\n        , 'procedure_date_15' as procedure_column\n        , procedure_date_15 as procedure_date\n    from __dbt__cte__normalized_input__stg_medical_claim\n\n\n    union all\n\n    select\n        claim_id\n        , claim_type\n        , data_source\n        , 'procedure_date_16' as procedure_column\n        , procedure_date_16 as procedure_date\n    from __dbt__cte__normalized_input__stg_medical_claim\n\n\n    union all\n\n    select\n        claim_id\n        , claim_type\n        , data_source\n        , 'procedure_date_17' as procedure_column\n        , procedure_date_17 as procedure_date\n    from __dbt__cte__normalized_input__stg_medical_claim\n\n\n    union all\n\n    select\n        claim_id\n        , claim_type\n        , data_source\n        , 'procedure_date_18' as procedure_column\n        , procedure_date_18 as procedure_date\n    from __dbt__cte__normalized_input__stg_medical_claim\n\n\n    union all\n\n    select\n        claim_id\n        , claim_type\n        , data_source\n        , 'procedure_date_19' as procedure_column\n        , procedure_date_19 as procedure_date\n    from __dbt__cte__normalized_input__stg_medical_claim\n\n\n    union all\n\n    select\n        claim_id\n        , claim_type\n        , data_source\n        , 'procedure_date_20' as procedure_column\n        , procedure_date_20 as procedure_date\n    from __dbt__cte__normalized_input__stg_medical_claim\n\n\n    union all\n\n    select\n        claim_id\n        , claim_type\n        , data_source\n        , 'procedure_date_21' as procedure_column\n        , procedure_date_21 as procedure_date\n    from __dbt__cte__normalized_input__stg_medical_claim\n\n    union all\n\n    select\n        claim_id\n        , claim_type\n        , data_source\n        , 'procedure_date_22' as procedure_column\n        , procedure_date_22 as procedure_date\n    from __dbt__cte__normalized_input__stg_medical_claim\n\n\n    union all\n\n    select\n        claim_id\n        , claim_type\n        , data_source\n        , 'procedure_date_23' as procedure_column\n        , procedure_date_23 as procedure_date\n    from __dbt__cte__normalized_input__stg_medical_claim\n\n    union all\n\n    select\n        claim_id\n        , claim_type\n        , data_source\n        , 'procedure_date_24' as procedure_column\n        , procedure_date_24 as procedure_date\n    from __dbt__cte__normalized_input__stg_medical_claim\n\n    union all\n\n    select\n        claim_id\n        , claim_type\n        , data_source\n        , 'procedure_date_25' as procedure_column\n        , procedure_date_25 as procedure_date\n    from __dbt__cte__normalized_input__stg_medical_claim\n)\n\nselect\n    claim_id\n    , data_source\n    , procedure_column\n    , cal.full_date as procedure_date\n    , count(*) as procedure_date_occurrence_count\n    , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom pivot_procedure as piv\nleft outer join tuva.reference_data.calendar as cal\n    on piv.procedure_date = cal.full_date\nwhere claim_type = 'institutional'\ngroup by\n    claim_id\n    , data_source\n    , procedure_column\n    , cal.full_date", "relation_name": "tuva.claims_preprocessing._int_normalized_input_procedure_date_normalize", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:19.790446Z", "completed_at": "2025-06-03T19:50:19.816176Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:19.816956Z", "completed_at": "2025-06-03T19:50:19.816960Z"}], "thread_id": "Thread-4", "execution_time": 0.04678606986999512, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_utils_unique_combination_of_columns_data_quality__exploratory_charts_DATA_QUALITY_CATEGORY__GRAPH_NAME__LEVEL_OF_DETAIL__Y_AXIS__X_AXIS.aa57669677", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith validation_errors as (\n\n    select\n        DATA_QUALITY_CATEGORY, GRAPH_NAME, LEVEL_OF_DETAIL, Y_AXIS, X_AXIS\n    from tuva.data_quality.exploratory_charts\n    group by DATA_QUALITY_CATEGORY, GRAPH_NAME, LEVEL_OF_DETAIL, Y_AXIS, X_AXIS\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:19.771661Z", "completed_at": "2025-06-03T19:50:19.822596Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:19.842664Z", "completed_at": "2025-06-03T19:50:19.842670Z"}], "thread_id": "Thread-3", "execution_time": 0.07277703285217285, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.normalized_input__int_undetermined_claim_type", "compiled": true, "compiled_code": "\n\n\nwith __dbt__cte__normalized_input__stg_medical_claim as (\n\n\nselect\n      claim_id\n    , claim_line_number\n    , claim_type\n    , person_id\n    , member_id\n    , payer\n    , plan\n    , claim_start_date\n    , claim_end_date\n    , claim_line_start_date\n    , claim_line_end_date\n    , admission_date\n    , discharge_date\n    , admit_source_code\n    , admit_type_code\n    , discharge_disposition_code\n    , place_of_service_code\n    , bill_type_code\n    , drg_code_type\n    , drg_code\n    , revenue_center_code\n    , service_unit_quantity\n    , hcpcs_code\n    , hcpcs_modifier_1\n    , hcpcs_modifier_2\n    , hcpcs_modifier_3\n    , hcpcs_modifier_4\n    , hcpcs_modifier_5\n    , rendering_npi\n    , rendering_tin\n    , billing_npi\n    , billing_tin\n    , facility_npi\n    , paid_date\n    , paid_amount\n    , allowed_amount\n    , charge_amount\n    , coinsurance_amount\n    , copayment_amount\n    , deductible_amount\n    , total_cost_amount\n    , diagnosis_code_type\n    , diagnosis_code_1\n    , diagnosis_code_2\n    , diagnosis_code_3\n    , diagnosis_code_4\n    , diagnosis_code_5\n    , diagnosis_code_6\n    , diagnosis_code_7\n    , diagnosis_code_8\n    , diagnosis_code_9\n    , diagnosis_code_10\n    , diagnosis_code_11\n    , diagnosis_code_12\n    , diagnosis_code_13\n    , diagnosis_code_14\n    , diagnosis_code_15\n    , diagnosis_code_16\n    , diagnosis_code_17\n    , diagnosis_code_18\n    , diagnosis_code_19\n    , diagnosis_code_20\n    , diagnosis_code_21\n    , diagnosis_code_22\n    , diagnosis_code_23\n    , diagnosis_code_24\n    , diagnosis_code_25\n    , diagnosis_poa_1\n    , diagnosis_poa_2\n    , diagnosis_poa_3\n    , diagnosis_poa_4\n    , diagnosis_poa_5\n    , diagnosis_poa_6\n    , diagnosis_poa_7\n    , diagnosis_poa_8\n    , diagnosis_poa_9\n    , diagnosis_poa_10\n    , diagnosis_poa_11\n    , diagnosis_poa_12\n    , diagnosis_poa_13\n    , diagnosis_poa_14\n    , diagnosis_poa_15\n    , diagnosis_poa_16\n    , diagnosis_poa_17\n    , diagnosis_poa_18\n    , diagnosis_poa_19\n    , diagnosis_poa_20\n    , diagnosis_poa_21\n    , diagnosis_poa_22\n    , diagnosis_poa_23\n    , diagnosis_poa_24\n    , diagnosis_poa_25\n    , procedure_code_type\n    , procedure_code_1\n    , procedure_code_2\n    , procedure_code_3\n    , procedure_code_4\n    , procedure_code_5\n    , procedure_code_6\n    , procedure_code_7\n    , procedure_code_8\n    , procedure_code_9\n    , procedure_code_10\n    , procedure_code_11\n    , procedure_code_12\n    , procedure_code_13\n    , procedure_code_14\n    , procedure_code_15\n    , procedure_code_16\n    , procedure_code_17\n    , procedure_code_18\n    , procedure_code_19\n    , procedure_code_20\n    , procedure_code_21\n    , procedure_code_22\n    , procedure_code_23\n    , procedure_code_24\n    , procedure_code_25\n    , procedure_date_1\n    , procedure_date_2\n    , procedure_date_3\n    , procedure_date_4\n    , procedure_date_5\n    , procedure_date_6\n    , procedure_date_7\n    , procedure_date_8\n    , procedure_date_9\n    , procedure_date_10\n    , procedure_date_11\n    , procedure_date_12\n    , procedure_date_13\n    , procedure_date_14\n    , procedure_date_15\n    , procedure_date_16\n    , procedure_date_17\n    , procedure_date_18\n    , procedure_date_19\n    , procedure_date_20\n    , procedure_date_21\n    , procedure_date_22\n    , procedure_date_23\n    , procedure_date_24\n    , procedure_date_25\n    , in_network_flag\n    , data_source\n    , file_name\n    , file_date\n    , ingest_datetime\nfrom tuva.input_layer.input_layer__medical_claim\n) select\n    claim_id\n    , claim_line_number\n    , claim_type\n    , person_id\n    , member_id\n    , payer\n    , plan\n    , claim_start_date\n    , claim_end_date\n    , claim_line_start_date\n    , claim_line_end_date\n    , admission_date\n    , discharge_date\n    , ad_src.admit_source_code\n    , ad_src.admit_source_description\n    , ad_type.admit_type_code\n    , ad_type.admit_type_description\n    , dis.discharge_disposition_code\n    , dis.discharge_disposition_description\n    , pos.place_of_service_code\n    , pos.place_of_service_description\n    , tob.bill_type_code\n    , tob.bill_type_description\n    , med.drg_code_type\n    , coalesce(msdrg.ms_drg_code, aprdrg.apr_drg_code) as drg_code\n    , coalesce(msdrg.ms_drg_description, aprdrg.apr_drg_description) as drg_description\n    , rev.revenue_center_code\n    , rev.revenue_center_description\n    , service_unit_quantity\n    , hcpcs_code\n    , hcpcs_modifier_1\n    , hcpcs_modifier_2\n    , hcpcs_modifier_3\n    , hcpcs_modifier_4\n    , hcpcs_modifier_5\n    , rendering_npi\n    , rendnpi.npi as rendering_name\n    , billing_npi\n    , billnpi.npi as billing_name\n    , facility_npi\n    , facnpi.npi as facility_name\n    , paid_date\n    , paid_amount\n    , allowed_amount\n    , charge_amount\n    , coinsurance_amount\n    , copayment_amount\n    , deductible_amount\n    , total_cost_amount\n    , diagnosis_code_type\n    , diagnosis_code_1\n    , diagnosis_code_2\n    , diagnosis_code_3\n    , diagnosis_code_4\n    , diagnosis_code_5\n    , diagnosis_code_6\n    , diagnosis_code_7\n    , diagnosis_code_8\n    , diagnosis_code_9\n    , diagnosis_code_10\n    , diagnosis_code_11\n    , diagnosis_code_12\n    , diagnosis_code_13\n    , diagnosis_code_14\n    , diagnosis_code_15\n    , diagnosis_code_16\n    , diagnosis_code_17\n    , diagnosis_code_18\n    , diagnosis_code_19\n    , diagnosis_code_20\n    , diagnosis_code_21\n    , diagnosis_code_22\n    , diagnosis_code_23\n    , diagnosis_code_24\n    , diagnosis_code_25\n    , diagnosis_poa_1\n    , diagnosis_poa_2\n    , diagnosis_poa_3\n    , diagnosis_poa_4\n    , diagnosis_poa_5\n    , diagnosis_poa_6\n    , diagnosis_poa_7\n    , diagnosis_poa_8\n    , diagnosis_poa_9\n    , diagnosis_poa_10\n    , diagnosis_poa_11\n    , diagnosis_poa_12\n    , diagnosis_poa_13\n    , diagnosis_poa_14\n    , diagnosis_poa_15\n    , diagnosis_poa_16\n    , diagnosis_poa_17\n    , diagnosis_poa_18\n    , diagnosis_poa_19\n    , diagnosis_poa_20\n    , diagnosis_poa_21\n    , diagnosis_poa_22\n    , diagnosis_poa_23\n    , diagnosis_poa_24\n    , diagnosis_poa_25\n    , procedure_code_type\n    , procedure_code_1\n    , procedure_code_2\n    , procedure_code_3\n    , procedure_code_4\n    , procedure_code_5\n    , procedure_code_6\n    , procedure_code_7\n    , procedure_code_8\n    , procedure_code_9\n    , procedure_code_10\n    , procedure_code_11\n    , procedure_code_12\n    , procedure_code_13\n    , procedure_code_14\n    , procedure_code_15\n    , procedure_code_16\n    , procedure_code_17\n    , procedure_code_18\n    , procedure_code_19\n    , procedure_code_20\n    , procedure_code_21\n    , procedure_code_22\n    , procedure_code_23\n    , procedure_code_24\n    , procedure_code_25\n    , procedure_date_1\n    , procedure_date_2\n    , procedure_date_3\n    , procedure_date_4\n    , procedure_date_5\n    , procedure_date_6\n    , procedure_date_7\n    , procedure_date_8\n    , procedure_date_9\n    , procedure_date_10\n    , procedure_date_11\n    , procedure_date_12\n    , procedure_date_13\n    , procedure_date_14\n    , procedure_date_15\n    , procedure_date_16\n    , procedure_date_17\n    , procedure_date_18\n    , procedure_date_19\n    , procedure_date_20\n    , procedure_date_21\n    , procedure_date_22\n    , procedure_date_23\n    , procedure_date_24\n    , procedure_date_25\n    , data_source\n    , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom __dbt__cte__normalized_input__stg_medical_claim as med\nleft outer join tuva.terminology.admit_source as ad_src\n    on med.admit_source_code = ad_src.admit_source_code\nleft outer join tuva.terminology.admit_type as ad_type\n    on med.admit_type_code = ad_type.admit_type_code\nleft outer join tuva.terminology.discharge_disposition as dis\n    on med.discharge_disposition_code = dis.discharge_disposition_code\nleft outer join tuva.terminology.place_of_service as pos\n    on med.place_of_service_code = pos.place_of_service_code\nleft outer join tuva.terminology.bill_type as tob\n    on med.bill_type_code = tob.bill_type_code\nleft outer join tuva.terminology.ms_drg as msdrg\n    on med.drg_code_type = 'ms-drg'\n    and med.drg_code = msdrg.ms_drg_code\nleft outer join tuva.terminology.apr_drg as aprdrg\n    on med.drg_code_type = 'apr-drg'\n    and med.drg_code = aprdrg.apr_drg_code\nleft outer join tuva.terminology.revenue_center as rev\n    on med.revenue_center_code = rev.revenue_center_code\nleft outer join tuva.terminology.provider as rendnpi\n    on med.rendering_npi = rendnpi.npi\nleft outer join tuva.terminology.provider as billnpi\n    on med.billing_npi = billnpi.npi\nleft outer join tuva.terminology.provider as facnpi\n    on med.facility_npi = facnpi.npi\nwhere claim_type in ('undetermined')", "relation_name": "tuva.claims_preprocessing._int_normalized_input_undetermined_claim_type", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:19.817576Z", "completed_at": "2025-06-03T19:50:19.864259Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:19.890164Z", "completed_at": "2025-06-03T19:50:19.890172Z"}], "thread_id": "Thread-1", "execution_time": 0.07439899444580078, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.normalized_input__pharmacy_claim", "compiled": true, "compiled_code": "\n\n\nwith __dbt__cte__normalized_input__stg_pharmacy_claim as (\n\n\n\nselect\n      claim_id\n    , claim_line_number\n    , person_id\n    , member_id\n    , payer\n    , plan\n    , prescribing_provider_npi\n    , dispensing_provider_npi\n    , dispensing_date\n    , ndc_code\n    , quantity\n    , days_supply\n    , refills\n    , paid_date\n    , paid_amount\n    , allowed_amount\n    , charge_amount\n    , coinsurance_amount\n    , copayment_amount\n    , deductible_amount\n    , in_network_flag\n    , data_source\n    , file_name\n    , file_date\n    , ingest_datetime\nfrom tuva.input_layer.input_layer__pharmacy_claim\n) select\n      cast(claim_id as TEXT) as claim_id\n    , cast(claim_line_number as int) as claim_line_number\n    , cast(person_id as TEXT) as person_id\n    , cast(member_id as TEXT) as member_id\n    , cast(payer as TEXT) as payer\n    , cast(plan as TEXT) as plan\n    , cast(prescribing_provider_npi as TEXT) as prescribing_provider_id\n    , case\n      when pres.entity_type_code = '1' then cast(\n        pres.provider_last_name || ', ' || pres.provider_first_name as TEXT)\n      when pres.entity_type_code = '2' then cast(pres.provider_organization_name as TEXT)\n      else null\n    end as prescribing_provider_name\n    , cast(dispensing_provider_npi as TEXT) as dispensing_provider_id\n    , case\n      when disp.entity_type_code = '1' then cast(\n        disp.provider_last_name || ', ' || disp.provider_first_name as TEXT)\n      when disp.entity_type_code = '2' then cast(disp.provider_organization_name as TEXT)\n      else null\n    end as dispensing_provider_name\n    , cast(dispensing_date as date) as dispensing_date\n    , cast(ndc_code as TEXT) as ndc_code\n    , cast(ndc.fda_description as TEXT) as ndc_description\n    , cast(quantity as int) as quantity\n    , cast(days_supply as int) as days_supply\n    , cast(refills as int) as refills\n    , cast(paid_date as date) as paid_date\n    , cast(paid_amount as numeric(28,6)) as paid_amount\n    , cast(allowed_amount as numeric(28,6)) as allowed_amount\n    , cast(charge_amount as numeric(28,6)) as charge_amount\n    , cast(coinsurance_amount as numeric(28,6)) as coinsurance_amount\n    , cast(copayment_amount as numeric(28,6)) as copayment_amount\n    , cast(deductible_amount as numeric(28,6)) as deductible_amount\n    , cast(in_network_flag as int) as in_network_flag\n    , cast(data_source as TEXT) as data_source\n    , cast('2025-06-03 19:49:40.396647+00:00' as TEXT) as tuva_last_run\nfrom __dbt__cte__normalized_input__stg_pharmacy_claim as pharm\nleft outer join tuva.terminology.provider as pres\n      on pharm.prescribing_provider_npi = pres.npi\nleft outer join tuva.terminology.provider as disp\n      on pharm.dispensing_provider_npi = disp.npi\nleft outer join tuva.terminology.ndc as ndc\n      on pharm.ndc_code = ndc.ndc", "relation_name": "tuva.claims_preprocessing.normalized_input_pharmacy_claim", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:19.843342Z", "completed_at": "2025-06-03T19:50:19.889884Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:19.890956Z", "completed_at": "2025-06-03T19:50:19.890960Z"}], "thread_id": "Thread-2", "execution_time": 0.0736691951751709, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.fhir_preprocessing__int_lab_result", "compiled": true, "compiled_code": "\nwith __dbt__cte___stg_lab_result as (\n\n\nselect\n      lab_result_id\n    , person_id\n    , encounter_id\n    , status\n    , normalized_code_type\n    , normalized_code\n    , normalized_description\n    , source_code_type\n    , source_code\n    , source_description\n    , result_date\n    , result\n    , normalized_units\n    , source_units\n    , data_source\nfrom tuva.core.lab_result\n\n\n) select\n      cast(person_id as TEXT ) as patient_internal_id\n    , cast(md5(cast(coalesce(cast(lab_result_id as TEXT), '_dbt_utils_surrogate_key_null_') as TEXT)) as TEXT ) as resource_internal_id\n    , cast(encounter_id as TEXT ) as encounter_internal_id\n    , case\n        when lower(status) in ('final', 'f') then 'final'\n        when lower(status) in ('preliminary', 'p') then 'preliminary'\n        when lower(status) in ('corrected', 'c') then 'corrected'\n        when lower(status) in ('cancelled', 'd') then 'cancelled'\n        else lower(status)\n      end as observation_status\n    , 'laboratory' as observation_category\n    , upper(\n        coalesce(\n              cast(normalized_code_type as TEXT )\n            , cast(source_code_type as TEXT )\n        )\n      ) as observation_code_system\n    , coalesce(\n          cast(normalized_code as TEXT )\n        , cast(source_code as TEXT )\n      ) as observation_code\n    , coalesce(\n          cast(normalized_description as TEXT )\n        , cast(source_description as TEXT )\n      ) as observation_code_text\n    , cast(result_date as timestamp ) as observation_datetime\n    , cast(result as TEXT ) as observation_value\n    , coalesce(\n          cast(normalized_units as TEXT )\n        , cast(source_units as TEXT )\n      ) as observation_value_units\n    , cast(data_source as TEXT ) as data_source\nfrom __dbt__cte___stg_lab_result", "relation_name": "tuva.fhir_preprocessing._int_lab_result", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:19.864790Z", "completed_at": "2025-06-03T19:50:19.905472Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:19.906276Z", "completed_at": "2025-06-03T19:50:19.906282Z"}], "thread_id": "Thread-4", "execution_time": 0.06329703330993652, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.hcc_suspecting__int_prep_egfr_labs", "compiled": true, "compiled_code": "\n\nwith  __dbt__cte___stg_lab_result as (\n\n\nselect\n      lab_result_id\n    , person_id\n    , lower(coalesce(normalized_code_type, source_code_type)) as code_type\n    , coalesce(normalized_code, source_code) as code\n    , status\n    , result\n    , result_date\n    , data_source\nfrom tuva.core.lab_result\n\n\n), lab_result as (\n\n    select\n          person_id\n        , data_source\n        , code_type\n        , code\n        , status\n        , result\n        , result_date\n    from __dbt__cte___stg_lab_result\n\n)\n\n, seed_egfr_codes as (\n\n    select\n          concept_name\n        , code\n        , code_system\n    from tuva.hcc_suspecting._value_set_clinical_concepts\n    where lower(concept_name) = 'estimated glomerular filtration rate'\n\n)\n\n, egfr_labs as (\n\n    select distinct\n          lab_result.person_id\n        , lab_result.data_source\n        , lab_result.code_type\n        , lab_result.code\n        , lab_result.result_date\n        , lab_result.result\n    from lab_result\n        inner join seed_egfr_codes\n        on lab_result.code = seed_egfr_codes.code\n        and lab_result.code_type = seed_egfr_codes.code_system\n    where lab_result.result is not null\n    and lower(lab_result.status) not in ('cancelled', 'entered-in-error')\n\n)\n\n, numeric_egfr_labs as (\n\n    select\n          person_id\n        , data_source\n        , code_type\n        , code\n        , result_date\n        , cast(result as numeric(28,6)) as result\n    from egfr_labs\n   \n        where regexp_like(result, '^[+-]?([0-9]*[.])?[0-9]+$')\n    \n\n)\n\n, clean_non_numeric_egfr_labs as (\n\n    select\n          person_id\n        , data_source\n        , code_type\n        , code\n        , result_date\n        , result\n        , cast(case\n            when lower(result) like '%unsatisfactory specimen%' then null\n            when result like '%>%' then null\n            when result like '%<%' then null\n            when result like '%@%' then trim(replace(result, '@', ''))\n            when result like '%mL/min/1.73m2%' then trim(replace(result, 'mL/min/1.73m2', ''))\n            else null\n          end as numeric(28,6)) as clean_result\n    from egfr_labs\n    \n        where regexp_like(result, '^[+-]?([0-9]*[.])?[0-9]+$') = false\n    \n\n)\n\n, unioned_labs as (\n\n    select\n          person_id\n        , data_source\n        , code_type\n        , code\n        , result_date\n        , result\n    from numeric_egfr_labs\n\n    union all\n\n    select\n          person_id\n        , data_source\n        , code_type\n        , code\n        , result_date\n        , clean_result as result\n    from clean_non_numeric_egfr_labs\n    where clean_result is not null\n\n)\n\n, add_data_types as (\n\n    select\n          cast(person_id as TEXT) as person_id\n        , cast(data_source as TEXT) as data_source\n        , cast(code_type as TEXT) as code_type\n        , cast(code as TEXT) as code\n        , cast(result_date as date) as result_date\n        , cast(result as numeric(28,6)) as result\n    from unioned_labs\n\n)\n\nselect\n      person_id\n    , data_source\n    , code_type\n    , code\n    , result_date\n    , result\n    , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom add_data_types", "relation_name": "tuva.hcc_suspecting._int_prep_egfr_labs", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:19.891622Z", "completed_at": "2025-06-03T19:50:19.906621Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:19.929983Z", "completed_at": "2025-06-03T19:50:19.929989Z"}], "thread_id": "Thread-3", "execution_time": 0.06560397148132324, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.fhir_preprocessing__medication_dispense", "compiled": true, "compiled_code": "\nwith __dbt__cte___stg_medication as (\n\n\nselect\n      medication_id\n    , person_id\n    , source_code_type\n    , ndc_code\n    , ndc_description\n    , rxnorm_code\n    , rxnorm_description\n    , days_supply\n    , dispensing_date\n    , data_source\nfrom tuva.core.medication\n\n\n) select\n      cast(person_id as TEXT ) as patient_internal_id\n    , cast(medication_id as TEXT ) as resource_internal_id\n    , 'completed' as medication_dispense_status\n    , case\n        when ndc_code is not null then 'NDC'\n        when rxnorm_code is not null then 'RXNORM'\n        else cast(source_code_type as TEXT )\n      end as medication_code_system\n    , coalesce(\n          cast(ndc_code as TEXT )\n        , cast(rxnorm_code as TEXT )\n      ) as medication_code\n    , coalesce(\n          cast(ndc_description as TEXT )\n        , cast(rxnorm_description as TEXT )\n      ) as medication_code_display\n    , cast(days_supply as numeric(28,6) ) as medication_dispense_days_supply_value\n    , cast(dispensing_date as date) as medication_dispense_when_handed_over\n    , cast(data_source as TEXT ) as data_source\n    , cast('2025-06-03 19:49:40.396647+00:00' as timestamp) as tuva_last_run\n    , cast('0.14.13' as TEXT ) as tuva_package_version\nfrom __dbt__cte___stg_medication", "relation_name": "tuva.fhir_preprocessing.medication_dispense", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:19.906829Z", "completed_at": "2025-06-03T19:50:19.931475Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:19.938261Z", "completed_at": "2025-06-03T19:50:19.938267Z"}], "thread_id": "Thread-1", "execution_time": 0.0333409309387207, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.not_null_quality_measures__stg_core__medication_person_id.c251b1b4af", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nwith __dbt__cte___stg_medication as (\n\n\nselect\n      person_id\n    , encounter_id\n    , prescribing_date\n    , dispensing_date\n    , source_code_type\n    , source_code\n    , ndc_code\n    , rxnorm_code\n    , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom tuva.core.medication\n\n\n) select person_id\nfrom __dbt__cte___stg_medication\nwhere person_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:19.911786Z", "completed_at": "2025-06-03T19:50:19.937630Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:19.938880Z", "completed_at": "2025-06-03T19:50:19.938885Z"}], "thread_id": "Thread-2", "execution_time": 0.033677101135253906, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.fhir_preprocessing__int_observation", "compiled": true, "compiled_code": "\nwith __dbt__cte___stg_observation as (\n\n\nselect\n      observation_id\n    , person_id\n    , encounter_id\n    , observation_type\n    , normalized_code_type\n    , normalized_code\n    , normalized_description\n    , source_code_type\n    , source_code\n    , source_description\n    , observation_date\n    , result\n    , normalized_units\n    , source_units\n    , data_source\nfrom tuva.core.observation\n\n\n) select\n      cast(person_id as TEXT ) as patient_internal_id\n    , cast(md5(cast(coalesce(cast(observation_id as TEXT), '_dbt_utils_surrogate_key_null_') as TEXT)) as TEXT ) as resource_internal_id\n    , cast(encounter_id as TEXT ) as encounter_internal_id\n    , 'final' as observation_status\n    , case\n        when lower(observation_type) like '%social%' then 'social-history'\n        when lower(observation_type) like '%vital%' then 'vital-signs'\n        when lower(observation_type) like '%imaging%' then 'imaging'\n        when lower(observation_type) like '%laboratory%' then 'laboratory'\n        when lower(observation_type) like '%procedure%' then 'procedure'\n        when lower(observation_type) like '%survey%' then 'survey'\n        when lower(observation_type) like '%exam%' then 'exam'\n        when lower(observation_type) like '%therapy%' then 'therapy'\n        when lower(observation_type) like '%activity%' then 'activity'\n        else 'other'\n      end as observation_category\n    , upper(\n        coalesce(\n          cast(normalized_code_type as TEXT )\n        , cast(source_code_type as TEXT )\n        )\n      ) as observation_code_system\n    , coalesce(\n          cast(normalized_code as TEXT )\n        , cast(source_code as TEXT )\n      ) as observation_code\n    , coalesce(\n          cast(normalized_description as TEXT )\n        , cast(source_description as TEXT )\n      ) as observation_code_text\n    , cast(observation_date as timestamp ) as observation_datetime\n    , cast(result as TEXT ) as observation_value\n    , coalesce(\n          cast(normalized_units as TEXT )\n        , cast(source_units as TEXT )\n      ) as observation_value_units\n    , cast(data_source as TEXT ) as data_source\nfrom __dbt__cte___stg_observation", "relation_name": "tuva.fhir_preprocessing._int_observation", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:19.932004Z", "completed_at": "2025-06-03T19:50:19.952163Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:19.961766Z", "completed_at": "2025-06-03T19:50:19.961773Z"}], "thread_id": "Thread-4", "execution_time": 0.03131914138793945, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.not_null_quality_measures__stg_core__observation_person_id.96069e762b", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nwith __dbt__cte___stg_observation as (\n\n\nselect\n      person_id\n    , encounter_id\n    , observation_date\n    , result\n    , source_code_type\n    , source_code\n    , normalized_code_type\n    , normalized_code\n    , normalized_description\n    , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom tuva.core.observation\n\n\n) select person_id\nfrom __dbt__cte___stg_observation\nwhere person_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:19.939586Z", "completed_at": "2025-06-03T19:50:19.969510Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:20.019789Z", "completed_at": "2025-06-03T19:50:20.019797Z"}], "thread_id": "Thread-3", "execution_time": 0.08814787864685059, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.normalized_input__eligibility", "compiled": true, "compiled_code": "\n\n\nwith __dbt__cte__normalized_input__stg_eligibility as (\n\n\n\nselect\n      person_id\n    , person_id || coalesce(data_source,'') || coalesce(payer,'') || coalesce(plan,'') || coalesce(cast(enrollment_start_date as TEXT),'') || coalesce(cast(enrollment_end_date as TEXT),'') as person_id_key\n    , member_id\n    , subscriber_id\n    , gender\n    , race\n    , birth_date\n    , death_date\n    , death_flag\n    , enrollment_start_date\n    , enrollment_end_date\n    , payer\n    , payer_type\n    , plan\n    , subscriber_relation\n    , original_reason_entitlement_code\n    , dual_status_code\n    , medicare_status_code\n    , group_id\n    , group_name\n    , first_name\n    , last_name\n    , social_security_number\n    , address\n    , city\n    , state\n    , zip_code\n    , phone\n    , data_source\n    , file_name\n    , file_date\n    , ingest_datetime\nfrom tuva.input_layer.input_layer__eligibility\n) select\n  cast(elig.person_id as TEXT) as person_id\n  , cast(elig.member_id as TEXT) as member_id\n  , cast(elig.subscriber_id as TEXT) as subscriber_id\n  , cast(elig.gender as TEXT) as gender\n  , cast(elig.race as TEXT) as race\n  , cast(date_norm.normalized_birth_date as date) as birth_date\n  , cast(date_norm.normalized_death_date as date) as death_date\n  , cast(elig.death_flag as int) as death_flag\n  , cast(date_norm.normalized_enrollment_start_date as date) as enrollment_start_date\n  , cast(date_norm.normalized_enrollment_end_date as date) as enrollment_end_date\n  , cast(elig.payer as TEXT) as payer\n  , cast(elig.payer_type as TEXT) as payer_type\n  , cast(elig.plan as TEXT) as plan\n  , cast(elig.original_reason_entitlement_code as TEXT) as original_reason_entitlement_code\n  , cast(elig.dual_status_code as TEXT) as dual_status_code\n  , cast(elig.medicare_status_code as TEXT) as medicare_status_code\n  , cast(elig.group_id as TEXT) as group_id\n  , cast(elig.group_name as TEXT) as group_name\n  , cast(elig.first_name as TEXT) as first_name\n  , cast(elig.last_name as TEXT) as last_name\n  , cast(elig.social_security_number as TEXT) as social_security_number\n  , cast(elig.subscriber_relation as TEXT) as subscriber_relation\n  , cast(elig.address as TEXT) as address\n  , cast(elig.city as TEXT) as city\n  , cast(elig.state as TEXT) as state\n  , cast(elig.zip_code as TEXT) as zip_code\n  , cast(elig.phone as TEXT) as phone\n  , cast(elig.data_source as TEXT) as data_source\n  , cast('2025-06-03 19:49:40.396647+00:00' as TEXT) as tuva_last_run\nfrom __dbt__cte__normalized_input__stg_eligibility as elig\nleft outer join tuva.claims_preprocessing._int_normalized_input_eligibility_dates_normalize as date_norm\n  on elig.person_id_key = date_norm.person_id_key", "relation_name": "tuva.claims_preprocessing.normalized_input_eligibility", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:20.000906Z", "completed_at": "2025-06-03T19:50:20.202299Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:20.234142Z", "completed_at": "2025-06-03T19:50:20.234149Z"}], "thread_id": "Thread-2", "execution_time": 0.272061824798584, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.normalized_input__int_admit_source_final", "compiled": true, "compiled_code": "\n\n\nselect\n    claim_id\n    , data_source\n    , column_name\n    , normalized_code\n    , normalized_description\n    , occurrence_count\n    , next_occurrence_count\n    , occurrence_row_count\n    , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom tuva.claims_preprocessing._int_normalized_input_admit_source_voting\nwhere (occurrence_row_count = 1\n        and occurrence_count > next_occurrence_count)", "relation_name": "tuva.claims_preprocessing._int_normalized_input_admit_source_final", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:20.202819Z", "completed_at": "2025-06-03T19:50:20.262801Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:20.268156Z", "completed_at": "2025-06-03T19:50:20.268161Z"}], "thread_id": "Thread-4", "execution_time": 0.28614187240600586, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.normalized_input__int_bill_type_final", "compiled": true, "compiled_code": "\n\n\nselect\n    claim_id\n    , data_source\n    , column_name\n    , normalized_code\n    , normalized_description\n    , occurrence_count\n    , occurrence_row_count\n    , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom tuva.claims_preprocessing._int_normalized_input_bill_type_voting\nwhere occurrence_row_count = 1", "relation_name": "tuva.claims_preprocessing._int_normalized_input_bill_type_final", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:19.963215Z", "completed_at": "2025-06-03T19:50:20.268831Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:20.275036Z", "completed_at": "2025-06-03T19:50:20.275041Z"}], "thread_id": "Thread-1", "execution_time": 0.31363606452941895, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.data_quality__data_quality_claims_detail", "compiled": true, "compiled_code": "\n\nwith unioned_data as (\nselect\n    cast(data_source as TEXT) as data_source\n\t, cast(source_date as TEXT) as source_date\n\t, cast(table_name as TEXT) as table_name\n\t, cast(drill_down_key as TEXT) as drill_down_key\n\t, cast(drill_down_value as TEXT) as drill_down_value\n\t, cast(claim_type as TEXT) as claim_type\n\t, cast(field_name as TEXT) as field_name\n\t, cast(bucket_name as TEXT) as bucket_name\n\t, cast(invalid_reason as TEXT) as invalid_reason\n\t, cast(field_value as TEXT) as field_value\n\t, cast(tuva_last_run as TEXT) as tuva_last_run\n\tfrom tuva.data_quality.claim_allowed_amount\n\nunion all\n\nselect\n    cast(data_source as TEXT) as data_source\n\t, cast(source_date as TEXT) as source_date\n\t, cast(table_name as TEXT) as table_name\n\t, cast(drill_down_key as TEXT) as drill_down_key\n\t, cast(drill_down_value as TEXT) as drill_down_value\n\t, cast(claim_type as TEXT) as claim_type\n\t, cast(field_name as TEXT) as field_name\n\t, cast(bucket_name as TEXT) as bucket_name\n\t, cast(invalid_reason as TEXT) as invalid_reason\n\t, cast(field_value as TEXT) as field_value\n\t, cast(tuva_last_run as TEXT) as tuva_last_run\n\tfrom tuva.data_quality.claim_charge_amount\n\nunion all\n\nselect\n    cast(data_source as TEXT) as data_source\n\t, cast(source_date as TEXT) as source_date\n\t, cast(table_name as TEXT) as table_name\n\t, cast(drill_down_key as TEXT) as drill_down_key\n\t, cast(drill_down_value as TEXT) as drill_down_value\n\t, cast(claim_type as TEXT) as claim_type\n\t, cast(field_name as TEXT) as field_name\n\t, cast(bucket_name as TEXT) as bucket_name\n\t, cast(invalid_reason as TEXT) as invalid_reason\n\t, cast(field_value as TEXT) as field_value\n\t, cast(tuva_last_run as TEXT) as tuva_last_run\n\tfrom tuva.data_quality.claim_claim_id\n\nunion all\n\nselect\n    cast(data_source as TEXT) as data_source\n\t, cast(source_date as TEXT) as source_date\n\t, cast(table_name as TEXT) as table_name\n\t, cast(drill_down_key as TEXT) as drill_down_key\n\t, cast(drill_down_value as TEXT) as drill_down_value\n\t, cast(claim_type as TEXT) as claim_type\n\t, cast(field_name as TEXT) as field_name\n\t, cast(bucket_name as TEXT) as bucket_name\n\t, cast(invalid_reason as TEXT) as invalid_reason\n\t, cast(field_value as TEXT) as field_value\n\t, cast(tuva_last_run as TEXT) as tuva_last_run\n\tfrom tuva.data_quality.claim_claim_line_end_date\n\nunion all\n\nselect\n    cast(data_source as TEXT) as data_source\n\t, cast(source_date as TEXT) as source_date\n\t, cast(table_name as TEXT) as table_name\n\t, cast(drill_down_key as TEXT) as drill_down_key\n\t, cast(drill_down_value as TEXT) as drill_down_value\n\t, cast(claim_type as TEXT) as claim_type\n\t, cast(field_name as TEXT) as field_name\n\t, cast(bucket_name as TEXT) as bucket_name\n\t, cast(invalid_reason as TEXT) as invalid_reason\n\t, cast(field_value as TEXT) as field_value\n\t, cast(tuva_last_run as TEXT) as tuva_last_run\n\tfrom tuva.data_quality.claim_claim_line_number\n\nunion all\n\nselect\n    cast(data_source as TEXT) as data_source\n\t, cast(source_date as TEXT) as source_date\n\t, cast(table_name as TEXT) as table_name\n\t, cast(drill_down_key as TEXT) as drill_down_key\n\t, cast(drill_down_value as TEXT) as drill_down_value\n\t, cast(claim_type as TEXT) as claim_type\n\t, cast(field_name as TEXT) as field_name\n\t, cast(bucket_name as TEXT) as bucket_name\n\t, cast(invalid_reason as TEXT) as invalid_reason\n\t, cast(field_value as TEXT) as field_value\n\t, cast(tuva_last_run as TEXT) as tuva_last_run\n\tfrom tuva.data_quality.claim_claim_line_start_date\n\nunion all\n\nselect\n    cast(data_source as TEXT) as data_source\n\t, cast(source_date as TEXT) as source_date\n\t, cast(table_name as TEXT) as table_name\n\t, cast(drill_down_key as TEXT) as drill_down_key\n\t, cast(drill_down_value as TEXT) as drill_down_value\n\t, cast(claim_type as TEXT) as claim_type\n\t, cast(field_name as TEXT) as field_name\n\t, cast(bucket_name as TEXT) as bucket_name\n\t, cast(invalid_reason as TEXT) as invalid_reason\n\t, cast(field_value as TEXT) as field_value\n\t, cast(tuva_last_run as TEXT) as tuva_last_run\n\tfrom tuva.data_quality.claim_claim_type\n\nunion all\n\nselect\n    cast(data_source as TEXT) as data_source\n\t, cast(source_date as TEXT) as source_date\n\t, cast(table_name as TEXT) as table_name\n\t, cast(drill_down_key as TEXT) as drill_down_key\n\t, cast(drill_down_value as TEXT) as drill_down_value\n\t, cast(claim_type as TEXT) as claim_type\n\t, cast(field_name as TEXT) as field_name\n\t, cast(bucket_name as TEXT) as bucket_name\n\t, cast(invalid_reason as TEXT) as invalid_reason\n\t, cast(field_value as TEXT) as field_value\n\t, cast(tuva_last_run as TEXT) as tuva_last_run\n\tfrom tuva.data_quality.claim_coninsurance_amount\n\nunion all\n\nselect\n    cast(data_source as TEXT) as data_source\n\t, cast(source_date as TEXT) as source_date\n\t, cast(table_name as TEXT) as table_name\n\t, cast(drill_down_key as TEXT) as drill_down_key\n\t, cast(drill_down_value as TEXT) as drill_down_value\n\t, cast(claim_type as TEXT) as claim_type\n\t, cast(field_name as TEXT) as field_name\n\t, cast(bucket_name as TEXT) as bucket_name\n\t, cast(invalid_reason as TEXT) as invalid_reason\n\t, cast(field_value as TEXT) as field_value\n\t, cast(tuva_last_run as TEXT) as tuva_last_run\n\tfrom tuva.data_quality.claim_copayment_amount\n\nunion all\n\nselect\n    cast(data_source as TEXT) as data_source\n\t, cast(source_date as TEXT) as source_date\n\t, cast(table_name as TEXT) as table_name\n\t, cast(drill_down_key as TEXT) as drill_down_key\n\t, cast(drill_down_value as TEXT) as drill_down_value\n\t, cast(claim_type as TEXT) as claim_type\n\t, cast(field_name as TEXT) as field_name\n\t, cast(bucket_name as TEXT) as bucket_name\n\t, cast(invalid_reason as TEXT) as invalid_reason\n\t, cast(field_value as TEXT) as field_value\n\t, cast(tuva_last_run as TEXT) as tuva_last_run\n\tfrom tuva.data_quality.claim_data_source\n\nunion all\n\nselect\n    cast(data_source as TEXT) as data_source\n\t, cast(source_date as TEXT) as source_date\n\t, cast(table_name as TEXT) as table_name\n\t, cast(drill_down_key as TEXT) as drill_down_key\n\t, cast(drill_down_value as TEXT) as drill_down_value\n\t, cast(claim_type as TEXT) as claim_type\n\t, cast(field_name as TEXT) as field_name\n\t, cast(bucket_name as TEXT) as bucket_name\n\t, cast(invalid_reason as TEXT) as invalid_reason\n\t, cast(field_value as TEXT) as field_value\n\t, cast(tuva_last_run as TEXT) as tuva_last_run\n\tfrom tuva.data_quality.claim_deductible_amount\n\nunion all\n\nselect\n    cast(data_source as TEXT) as data_source\n\t, cast(source_date as TEXT) as source_date\n\t, cast(table_name as TEXT) as table_name\n\t, cast(drill_down_key as TEXT) as drill_down_key\n\t, cast(drill_down_value as TEXT) as drill_down_value\n\t, cast(claim_type as TEXT) as claim_type\n\t, cast(field_name as TEXT) as field_name\n\t, cast(bucket_name as TEXT) as bucket_name\n\t, cast(invalid_reason as TEXT) as invalid_reason\n\t, cast(field_value as TEXT) as field_value\n\t, cast(tuva_last_run as TEXT) as tuva_last_run\n\tfrom tuva.data_quality.claim_diagnosis_code_type\n\nunion all\n\nselect\n    cast(data_source as TEXT) as data_source\n\t, cast(source_date as TEXT) as source_date\n\t, cast(table_name as TEXT) as table_name\n\t, cast(drill_down_key as TEXT) as drill_down_key\n\t, cast(drill_down_value as TEXT) as drill_down_value\n\t, cast(claim_type as TEXT) as claim_type\n\t, cast(field_name as TEXT) as field_name\n\t, cast(bucket_name as TEXT) as bucket_name\n\t, cast(invalid_reason as TEXT) as invalid_reason\n\t, cast(field_value as TEXT) as field_value\n\t, cast(tuva_last_run as TEXT) as tuva_last_run\n\tfrom tuva.data_quality.claim_hcpcs_code\n\nunion all\n\nselect\n    cast(data_source as TEXT) as data_source\n\t, cast(source_date as TEXT) as source_date\n\t, cast(table_name as TEXT) as table_name\n\t, cast(drill_down_key as TEXT) as drill_down_key\n\t, cast(drill_down_value as TEXT) as drill_down_value\n\t, cast(claim_type as TEXT) as claim_type\n\t, cast(field_name as TEXT) as field_name\n\t, cast(bucket_name as TEXT) as bucket_name\n\t, cast(invalid_reason as TEXT) as invalid_reason\n\t, cast(field_value as TEXT) as field_value\n\t, cast(tuva_last_run as TEXT) as tuva_last_run\n\tfrom tuva.data_quality.claim_member_id\n\nunion all\n\nselect\n    cast(data_source as TEXT) as data_source\n\t, cast(source_date as TEXT) as source_date\n\t, cast(table_name as TEXT) as table_name\n\t, cast(drill_down_key as TEXT) as drill_down_key\n\t, cast(drill_down_value as TEXT) as drill_down_value\n\t, cast(claim_type as TEXT) as claim_type\n\t, cast(field_name as TEXT) as field_name\n\t, cast(bucket_name as TEXT) as bucket_name\n\t, cast(invalid_reason as TEXT) as invalid_reason\n\t, cast(field_value as TEXT) as field_value\n\t, cast(tuva_last_run as TEXT) as tuva_last_run\n\tfrom tuva.data_quality.claim_paid_amount\n\nunion all\n\nselect\n    cast(data_source as TEXT) as data_source\n\t, cast(source_date as TEXT) as source_date\n\t, cast(table_name as TEXT) as table_name\n\t, cast(drill_down_key as TEXT) as drill_down_key\n\t, cast(drill_down_value as TEXT) as drill_down_value\n\t, cast(claim_type as TEXT) as claim_type\n\t, cast(field_name as TEXT) as field_name\n\t, cast(bucket_name as TEXT) as bucket_name\n\t, cast(invalid_reason as TEXT) as invalid_reason\n\t, cast(field_value as TEXT) as field_value\n\t, cast(tuva_last_run as TEXT) as tuva_last_run\n\tfrom tuva.data_quality.claim_paid_date\n\nunion all\n\nselect\n    cast(data_source as TEXT) as data_source\n\t, cast(source_date as TEXT) as source_date\n\t, cast(table_name as TEXT) as table_name\n\t, cast(drill_down_key as TEXT) as drill_down_key\n\t, cast(drill_down_value as TEXT) as drill_down_value\n\t, cast(claim_type as TEXT) as claim_type\n\t, cast(field_name as TEXT) as field_name\n\t, cast(bucket_name as TEXT) as bucket_name\n\t, cast(invalid_reason as TEXT) as invalid_reason\n\t, cast(field_value as TEXT) as field_value\n\t, cast(tuva_last_run as TEXT) as tuva_last_run\n\tfrom tuva.data_quality.claim_person_id\n\nunion all\n\nselect\n    cast(data_source as TEXT) as data_source\n\t, cast(source_date as TEXT) as source_date\n\t, cast(table_name as TEXT) as table_name\n\t, cast(drill_down_key as TEXT) as drill_down_key\n\t, cast(drill_down_value as TEXT) as drill_down_value\n\t, cast(claim_type as TEXT) as claim_type\n\t, cast(field_name as TEXT) as field_name\n\t, cast(bucket_name as TEXT) as bucket_name\n\t, cast(invalid_reason as TEXT) as invalid_reason\n\t, cast(field_value as TEXT) as field_value\n\t, cast(tuva_last_run as TEXT) as tuva_last_run\n\tfrom tuva.data_quality.claim_payer\n\nunion all\n\nselect\n    cast(data_source as TEXT) as data_source\n\t, cast(source_date as TEXT) as source_date\n\t, cast(table_name as TEXT) as table_name\n\t, cast(drill_down_key as TEXT) as drill_down_key\n\t, cast(drill_down_value as TEXT) as drill_down_value\n\t, cast(claim_type as TEXT) as claim_type\n\t, cast(field_name as TEXT) as field_name\n\t, cast(bucket_name as TEXT) as bucket_name\n\t, cast(invalid_reason as TEXT) as invalid_reason\n\t, cast(field_value as TEXT) as field_value\n\t, cast(tuva_last_run as TEXT) as tuva_last_run\n\tfrom tuva.data_quality.claim_plan\n\nunion all\n\nselect\n    cast(data_source as TEXT) as data_source\n\t, cast(source_date as TEXT) as source_date\n\t, cast(table_name as TEXT) as table_name\n\t, cast(drill_down_key as TEXT) as drill_down_key\n\t, cast(drill_down_value as TEXT) as drill_down_value\n\t, cast(claim_type as TEXT) as claim_type\n\t, cast(field_name as TEXT) as field_name\n\t, cast(bucket_name as TEXT) as bucket_name\n\t, cast(invalid_reason as TEXT) as invalid_reason\n\t, cast(field_value as TEXT) as field_value\n\t, cast(tuva_last_run as TEXT) as tuva_last_run\n\tfrom tuva.data_quality.claim_total_cost_amount\n\nunion all\n\nselect\n    cast(data_source as TEXT) as data_source\n\t, cast(source_date as TEXT) as source_date\n\t, cast(table_name as TEXT) as table_name\n\t, cast(drill_down_key as TEXT) as drill_down_key\n\t, cast(drill_down_value as TEXT) as drill_down_value\n\t, cast(claim_type as TEXT) as claim_type\n\t, cast(field_name as TEXT) as field_name\n\t, cast(bucket_name as TEXT) as bucket_name\n\t, cast(invalid_reason as TEXT) as invalid_reason\n\t, cast(field_value as TEXT) as field_value\n\t, cast(tuva_last_run as TEXT) as tuva_last_run\n\tfrom tuva.data_quality.eligibility_address\n\nunion all\n\nselect\n    cast(data_source as TEXT) as data_source\n\t, cast(source_date as TEXT) as source_date\n\t, cast(table_name as TEXT) as table_name\n\t, cast(drill_down_key as TEXT) as drill_down_key\n\t, cast(drill_down_value as TEXT) as drill_down_value\n\t, cast(claim_type as TEXT) as claim_type\n\t, cast(field_name as TEXT) as field_name\n\t, cast(bucket_name as TEXT) as bucket_name\n\t, cast(invalid_reason as TEXT) as invalid_reason\n\t, cast(field_value as TEXT) as field_value\n\t, cast(tuva_last_run as TEXT) as tuva_last_run\n\tfrom tuva.data_quality.eligibility_birth_date\n\nunion all\n\nselect\n    cast(data_source as TEXT) as data_source\n\t, cast(source_date as TEXT) as source_date\n\t, cast(table_name as TEXT) as table_name\n\t, cast(drill_down_key as TEXT) as drill_down_key\n\t, cast(drill_down_value as TEXT) as drill_down_value\n\t, cast(claim_type as TEXT) as claim_type\n\t, cast(field_name as TEXT) as field_name\n\t, cast(bucket_name as TEXT) as bucket_name\n\t, cast(invalid_reason as TEXT) as invalid_reason\n\t, cast(field_value as TEXT) as field_value\n\t, cast(tuva_last_run as TEXT) as tuva_last_run\n\tfrom tuva.data_quality.eligibility_city\n\nunion all\n\nselect\n    cast(data_source as TEXT) as data_source\n\t, cast(source_date as TEXT) as source_date\n\t, cast(table_name as TEXT) as table_name\n\t, cast(drill_down_key as TEXT) as drill_down_key\n\t, cast(drill_down_value as TEXT) as drill_down_value\n\t, cast(claim_type as TEXT) as claim_type\n\t, cast(field_name as TEXT) as field_name\n\t, cast(bucket_name as TEXT) as bucket_name\n\t, cast(invalid_reason as TEXT) as invalid_reason\n\t, cast(field_value as TEXT) as field_value\n\t, cast(tuva_last_run as TEXT) as tuva_last_run\n\tfrom tuva.data_quality.eligibility_data_source\n\nunion all\n\nselect\n    cast(data_source as TEXT) as data_source\n\t, cast(source_date as TEXT) as source_date\n\t, cast(table_name as TEXT) as table_name\n\t, cast(drill_down_key as TEXT) as drill_down_key\n\t, cast(drill_down_value as TEXT) as drill_down_value\n\t, cast(claim_type as TEXT) as claim_type\n\t, cast(field_name as TEXT) as field_name\n\t, cast(bucket_name as TEXT) as bucket_name\n\t, cast(invalid_reason as TEXT) as invalid_reason\n\t, cast(field_value as TEXT) as field_value\n\t, cast(tuva_last_run as TEXT) as tuva_last_run\n\tfrom tuva.data_quality.eligibility_death_date\n\nunion all\n\nselect\n    cast(data_source as TEXT) as data_source\n\t, cast(source_date as TEXT) as source_date\n\t, cast(table_name as TEXT) as table_name\n\t, cast(drill_down_key as TEXT) as drill_down_key\n\t, cast(drill_down_value as TEXT) as drill_down_value\n\t, cast(claim_type as TEXT) as claim_type\n\t, cast(field_name as TEXT) as field_name\n\t, cast(bucket_name as TEXT) as bucket_name\n\t, cast(invalid_reason as TEXT) as invalid_reason\n\t, cast(field_value as TEXT) as field_value\n\t, cast(tuva_last_run as TEXT) as tuva_last_run\n\tfrom tuva.data_quality.eligibility_death_flag\n\nunion all\n\nselect\n    cast(data_source as TEXT) as data_source\n\t, cast(source_date as TEXT) as source_date\n\t, cast(table_name as TEXT) as table_name\n\t, cast(drill_down_key as TEXT) as drill_down_key\n\t, cast(drill_down_value as TEXT) as drill_down_value\n\t, cast(claim_type as TEXT) as claim_type\n\t, cast(field_name as TEXT) as field_name\n\t, cast(bucket_name as TEXT) as bucket_name\n\t, cast(invalid_reason as TEXT) as invalid_reason\n\t, cast(field_value as TEXT) as field_value\n\t, cast(tuva_last_run as TEXT) as tuva_last_run\n\tfrom tuva.data_quality.eligibility_dual_status_code\n\nunion all\n\nselect\n    cast(data_source as TEXT) as data_source\n\t, cast(source_date as TEXT) as source_date\n\t, cast(table_name as TEXT) as table_name\n\t, cast(drill_down_key as TEXT) as drill_down_key\n\t, cast(drill_down_value as TEXT) as drill_down_value\n\t, cast(claim_type as TEXT) as claim_type\n\t, cast(field_name as TEXT) as field_name\n\t, cast(bucket_name as TEXT) as bucket_name\n\t, cast(invalid_reason as TEXT) as invalid_reason\n\t, cast(field_value as TEXT) as field_value\n\t, cast(tuva_last_run as TEXT) as tuva_last_run\n\tfrom tuva.data_quality.eligibility_end_date\n\nunion all\n\nselect     cast(data_source as TEXT) as data_source\n\t, cast(source_date as TEXT) as source_date\n\t, cast(table_name as TEXT) as table_name\n\t, cast(drill_down_key as TEXT) as drill_down_key\n\t, cast(drill_down_value as TEXT) as drill_down_value\n\t, cast(claim_type as TEXT) as claim_type\n\t, cast(field_name as TEXT) as field_name\n\t, cast(bucket_name as TEXT) as bucket_name\n\t, cast(invalid_reason as TEXT) as invalid_reason\n\t, cast(field_value as TEXT) as field_value\n\t, cast(tuva_last_run as TEXT) as tuva_last_run\n\tfrom tuva.data_quality.eligibility_first_name\n\nunion all\n\nselect     cast(data_source as TEXT) as data_source\n\t, cast(source_date as TEXT) as source_date\n\t, cast(table_name as TEXT) as table_name\n\t, cast(drill_down_key as TEXT) as drill_down_key\n\t, cast(drill_down_value as TEXT) as drill_down_value\n\t, cast(claim_type as TEXT) as claim_type\n\t, cast(field_name as TEXT) as field_name\n\t, cast(bucket_name as TEXT) as bucket_name\n\t, cast(invalid_reason as TEXT) as invalid_reason\n\t, cast(field_value as TEXT) as field_value\n\t, cast(tuva_last_run as TEXT) as tuva_last_run\n\tfrom tuva.data_quality.eligibility_gender\n\nunion all\n\nselect     cast(data_source as TEXT) as data_source\n\t, cast(source_date as TEXT) as source_date\n\t, cast(table_name as TEXT) as table_name\n\t, cast(drill_down_key as TEXT) as drill_down_key\n\t, cast(drill_down_value as TEXT) as drill_down_value\n\t, cast(claim_type as TEXT) as claim_type\n\t, cast(field_name as TEXT) as field_name\n\t, cast(bucket_name as TEXT) as bucket_name\n\t, cast(invalid_reason as TEXT) as invalid_reason\n\t, cast(field_value as TEXT) as field_value\n\t, cast(tuva_last_run as TEXT) as tuva_last_run\n\tfrom tuva.data_quality.eligibility_last_name\n\nunion all\n\nselect     cast(data_source as TEXT) as data_source\n\t, cast(source_date as TEXT) as source_date\n\t, cast(table_name as TEXT) as table_name\n\t, cast(drill_down_key as TEXT) as drill_down_key\n\t, cast(drill_down_value as TEXT) as drill_down_value\n\t, cast(claim_type as TEXT) as claim_type\n\t, cast(field_name as TEXT) as field_name\n\t, cast(bucket_name as TEXT) as bucket_name\n\t, cast(invalid_reason as TEXT) as invalid_reason\n\t, cast(field_value as TEXT) as field_value\n\t, cast(tuva_last_run as TEXT) as tuva_last_run\n\tfrom tuva.data_quality.eligibility_medicare_status_code\n\nunion all\n\nselect     cast(data_source as TEXT) as data_source\n\t, cast(source_date as TEXT) as source_date\n\t, cast(table_name as TEXT) as table_name\n\t, cast(drill_down_key as TEXT) as drill_down_key\n\t, cast(drill_down_value as TEXT) as drill_down_value\n\t, cast(claim_type as TEXT) as claim_type\n\t, cast(field_name as TEXT) as field_name\n\t, cast(bucket_name as TEXT) as bucket_name\n\t, cast(invalid_reason as TEXT) as invalid_reason\n\t, cast(field_value as TEXT) as field_value\n\t, cast(tuva_last_run as TEXT) as tuva_last_run\n\tfrom tuva.data_quality.eligibility_member_id\n\nunion all\n\nselect     cast(data_source as TEXT) as data_source\n\t, cast(source_date as TEXT) as source_date\n\t, cast(table_name as TEXT) as table_name\n\t, cast(drill_down_key as TEXT) as drill_down_key\n\t, cast(drill_down_value as TEXT) as drill_down_value\n\t, cast(claim_type as TEXT) as claim_type\n\t, cast(field_name as TEXT) as field_name\n\t, cast(bucket_name as TEXT) as bucket_name\n\t, cast(invalid_reason as TEXT) as invalid_reason\n\t, cast(field_value as TEXT) as field_value\n\t, cast(tuva_last_run as TEXT) as tuva_last_run\n\tfrom tuva.data_quality.eligibility_original_reason_entitlement_code\n\nunion all\n\nselect     cast(data_source as TEXT) as data_source\n\t, cast(source_date as TEXT) as source_date\n\t, cast(table_name as TEXT) as table_name\n\t, cast(drill_down_key as TEXT) as drill_down_key\n\t, cast(drill_down_value as TEXT) as drill_down_value\n\t, cast(claim_type as TEXT) as claim_type\n\t, cast(field_name as TEXT) as field_name\n\t, cast(bucket_name as TEXT) as bucket_name\n\t, cast(invalid_reason as TEXT) as invalid_reason\n\t, cast(field_value as TEXT) as field_value\n\t, cast(tuva_last_run as TEXT) as tuva_last_run\n\tfrom tuva.data_quality.eligibility_person_id\n\nunion all\n\nselect     cast(data_source as TEXT) as data_source\n\t, cast(source_date as TEXT) as source_date\n\t, cast(table_name as TEXT) as table_name\n\t, cast(drill_down_key as TEXT) as drill_down_key\n\t, cast(drill_down_value as TEXT) as drill_down_value\n\t, cast(claim_type as TEXT) as claim_type\n\t, cast(field_name as TEXT) as field_name\n\t, cast(bucket_name as TEXT) as bucket_name\n\t, cast(invalid_reason as TEXT) as invalid_reason\n\t, cast(field_value as TEXT) as field_value\n\t, cast(tuva_last_run as TEXT) as tuva_last_run\n\tfrom tuva.data_quality.eligibility_payer_type\n\nunion all\n\nselect     cast(data_source as TEXT) as data_source\n\t, cast(source_date as TEXT) as source_date\n\t, cast(table_name as TEXT) as table_name\n\t, cast(drill_down_key as TEXT) as drill_down_key\n\t, cast(drill_down_value as TEXT) as drill_down_value\n\t, cast(claim_type as TEXT) as claim_type\n\t, cast(field_name as TEXT) as field_name\n\t, cast(bucket_name as TEXT) as bucket_name\n\t, cast(invalid_reason as TEXT) as invalid_reason\n\t, cast(field_value as TEXT) as field_value\n\t, cast(tuva_last_run as TEXT) as tuva_last_run\n\tfrom tuva.data_quality.eligibility_payer\n\nunion all\n\nselect     cast(data_source as TEXT) as data_source\n\t, cast(source_date as TEXT) as source_date\n\t, cast(table_name as TEXT) as table_name\n\t, cast(drill_down_key as TEXT) as drill_down_key\n\t, cast(drill_down_value as TEXT) as drill_down_value\n\t, cast(claim_type as TEXT) as claim_type\n\t, cast(field_name as TEXT) as field_name\n\t, cast(bucket_name as TEXT) as bucket_name\n\t, cast(invalid_reason as TEXT) as invalid_reason\n\t, cast(field_value as TEXT) as field_value\n\t, cast(tuva_last_run as TEXT) as tuva_last_run\n\tfrom tuva.data_quality.eligibility_phone\n\nunion all\n\nselect     cast(data_source as TEXT) as data_source\n\t, cast(source_date as TEXT) as source_date\n\t, cast(table_name as TEXT) as table_name\n\t, cast(drill_down_key as TEXT) as drill_down_key\n\t, cast(drill_down_value as TEXT) as drill_down_value\n\t, cast(claim_type as TEXT) as claim_type\n\t, cast(field_name as TEXT) as field_name\n\t, cast(bucket_name as TEXT) as bucket_name\n\t, cast(invalid_reason as TEXT) as invalid_reason\n\t, cast(field_value as TEXT) as field_value\n\t, cast(tuva_last_run as TEXT) as tuva_last_run\n\tfrom tuva.data_quality.eligibility_plan\n\nunion all\n\nselect     cast(data_source as TEXT) as data_source\n\t, cast(source_date as TEXT) as source_date\n\t, cast(table_name as TEXT) as table_name\n\t, cast(drill_down_key as TEXT) as drill_down_key\n\t, cast(drill_down_value as TEXT) as drill_down_value\n\t, cast(claim_type as TEXT) as claim_type\n\t, cast(field_name as TEXT) as field_name\n\t, cast(bucket_name as TEXT) as bucket_name\n\t, cast(invalid_reason as TEXT) as invalid_reason\n\t, cast(field_value as TEXT) as field_value\n\t, cast(tuva_last_run as TEXT) as tuva_last_run\n\tfrom tuva.data_quality.eligibility_race\n\nunion all\n\nselect     cast(data_source as TEXT) as data_source\n\t, cast(source_date as TEXT) as source_date\n\t, cast(table_name as TEXT) as table_name\n\t, cast(drill_down_key as TEXT) as drill_down_key\n\t, cast(drill_down_value as TEXT) as drill_down_value\n\t, cast(claim_type as TEXT) as claim_type\n\t, cast(field_name as TEXT) as field_name\n\t, cast(bucket_name as TEXT) as bucket_name\n\t, cast(invalid_reason as TEXT) as invalid_reason\n\t, cast(field_value as TEXT) as field_value\n\t, cast(tuva_last_run as TEXT) as tuva_last_run\n\tfrom tuva.data_quality.eligibility_start_date\n\nunion all\n\nselect     cast(data_source as TEXT) as data_source\n\t, cast(source_date as TEXT) as source_date\n\t, cast(table_name as TEXT) as table_name\n\t, cast(drill_down_key as TEXT) as drill_down_key\n\t, cast(drill_down_value as TEXT) as drill_down_value\n\t, cast(claim_type as TEXT) as claim_type\n\t, cast(field_name as TEXT) as field_name\n\t, cast(bucket_name as TEXT) as bucket_name\n\t, cast(invalid_reason as TEXT) as invalid_reason\n\t, cast(field_value as TEXT) as field_value\n\t, cast(tuva_last_run as TEXT) as tuva_last_run\n\tfrom tuva.data_quality.eligibility_state\n\nunion all\n\nselect     cast(data_source as TEXT) as data_source\n\t, cast(source_date as TEXT) as source_date\n\t, cast(table_name as TEXT) as table_name\n\t, cast(drill_down_key as TEXT) as drill_down_key\n\t, cast(drill_down_value as TEXT) as drill_down_value\n\t, cast(claim_type as TEXT) as claim_type\n\t, cast(field_name as TEXT) as field_name\n\t, cast(bucket_name as TEXT) as bucket_name\n\t, cast(invalid_reason as TEXT) as invalid_reason\n\t, cast(field_value as TEXT) as field_value\n\t, cast(tuva_last_run as TEXT) as tuva_last_run\n\tfrom tuva.data_quality.eligibility_zip_code\n\nunion all\n\nselect     cast(data_source as TEXT) as data_source\n\t, cast(source_date as TEXT) as source_date\n\t, cast(table_name as TEXT) as table_name\n\t, cast(drill_down_key as TEXT) as drill_down_key\n\t, cast(drill_down_value as TEXT) as drill_down_value\n\t, cast(claim_type as TEXT) as claim_type\n\t, cast(field_name as TEXT) as field_name\n\t, cast(bucket_name as TEXT) as bucket_name\n\t, cast(invalid_reason as TEXT) as invalid_reason\n\t, cast(field_value as TEXT) as field_value\n\t, cast(tuva_last_run as TEXT) as tuva_last_run\n\tfrom tuva.data_quality.institutional_drg_code\n\nunion all\n\nselect     cast(data_source as TEXT) as data_source\n\t, cast(source_date as TEXT) as source_date\n\t, cast(table_name as TEXT) as table_name\n\t, cast(drill_down_key as TEXT) as drill_down_key\n\t, cast(drill_down_value as TEXT) as drill_down_value\n\t, cast(claim_type as TEXT) as claim_type\n\t, cast(field_name as TEXT) as field_name\n\t, cast(bucket_name as TEXT) as bucket_name\n\t, cast(invalid_reason as TEXT) as invalid_reason\n\t, cast(field_value as TEXT) as field_value\n\t, cast(tuva_last_run as TEXT) as tuva_last_run\n\tfrom tuva.data_quality.institutional_admission_date\n\nunion all\n\nselect     cast(data_source as TEXT) as data_source\n\t, cast(source_date as TEXT) as source_date\n\t, cast(table_name as TEXT) as table_name\n\t, cast(drill_down_key as TEXT) as drill_down_key\n\t, cast(drill_down_value as TEXT) as drill_down_value\n\t, cast(claim_type as TEXT) as claim_type\n\t, cast(field_name as TEXT) as field_name\n\t, cast(bucket_name as TEXT) as bucket_name\n\t, cast(invalid_reason as TEXT) as invalid_reason\n\t, cast(field_value as TEXT) as field_value\n\t, cast(tuva_last_run as TEXT) as tuva_last_run\n\tfrom tuva.data_quality.institutional_admit_source_code\n\nunion all\n\nselect     cast(data_source as TEXT) as data_source\n\t, cast(source_date as TEXT) as source_date\n\t, cast(table_name as TEXT) as table_name\n\t, cast(drill_down_key as TEXT) as drill_down_key\n\t, cast(drill_down_value as TEXT) as drill_down_value\n\t, cast(claim_type as TEXT) as claim_type\n\t, cast(field_name as TEXT) as field_name\n\t, cast(bucket_name as TEXT) as bucket_name\n\t, cast(invalid_reason as TEXT) as invalid_reason\n\t, cast(field_value as TEXT) as field_value\n\t, cast(tuva_last_run as TEXT) as tuva_last_run\n\tfrom tuva.data_quality.institutional_admit_type_code\n\nunion all\n\nselect     cast(data_source as TEXT) as data_source\n\t, cast(source_date as TEXT) as source_date\n\t, cast(table_name as TEXT) as table_name\n\t, cast(drill_down_key as TEXT) as drill_down_key\n\t, cast(drill_down_value as TEXT) as drill_down_value\n\t, cast(claim_type as TEXT) as claim_type\n\t, cast(field_name as TEXT) as field_name\n\t, cast(bucket_name as TEXT) as bucket_name\n\t, cast(invalid_reason as TEXT) as invalid_reason\n\t, cast(field_value as TEXT) as field_value\n\t, cast(tuva_last_run as TEXT) as tuva_last_run\n\tfrom tuva.data_quality.institutional_bill_type_code\n\nunion all\n\nselect     cast(data_source as TEXT) as data_source\n\t, cast(source_date as TEXT) as source_date\n\t, cast(table_name as TEXT) as table_name\n\t, cast(drill_down_key as TEXT) as drill_down_key\n\t, cast(drill_down_value as TEXT) as drill_down_value\n\t, cast(claim_type as TEXT) as claim_type\n\t, cast(field_name as TEXT) as field_name\n\t, cast(bucket_name as TEXT) as bucket_name\n\t, cast(invalid_reason as TEXT) as invalid_reason\n\t, cast(field_value as TEXT) as field_value\n\t, cast(tuva_last_run as TEXT) as tuva_last_run\n\tfrom tuva.data_quality.institutional_billing_npi\n\nunion all\n\nselect     cast(data_source as TEXT) as data_source\n\t, cast(source_date as TEXT) as source_date\n\t, cast(table_name as TEXT) as table_name\n\t, cast(drill_down_key as TEXT) as drill_down_key\n\t, cast(drill_down_value as TEXT) as drill_down_value\n\t, cast(claim_type as TEXT) as claim_type\n\t, cast(field_name as TEXT) as field_name\n\t, cast(bucket_name as TEXT) as bucket_name\n\t, cast(invalid_reason as TEXT) as invalid_reason\n\t, cast(field_value as TEXT) as field_value\n\t, cast(tuva_last_run as TEXT) as tuva_last_run\n\tfrom tuva.data_quality.institutional_claim_end_date\n\nunion all\n\nselect     cast(data_source as TEXT) as data_source\n\t, cast(source_date as TEXT) as source_date\n\t, cast(table_name as TEXT) as table_name\n\t, cast(drill_down_key as TEXT) as drill_down_key\n\t, cast(drill_down_value as TEXT) as drill_down_value\n\t, cast(claim_type as TEXT) as claim_type\n\t, cast(field_name as TEXT) as field_name\n\t, cast(bucket_name as TEXT) as bucket_name\n\t, cast(invalid_reason as TEXT) as invalid_reason\n\t, cast(field_value as TEXT) as field_value\n\t, cast(tuva_last_run as TEXT) as tuva_last_run\n\tfrom tuva.data_quality.institutional_claim_start_date\n\nunion all\n\nselect     cast(data_source as TEXT) as data_source\n\t, cast(source_date as TEXT) as source_date\n\t, cast(table_name as TEXT) as table_name\n\t, cast(drill_down_key as TEXT) as drill_down_key\n\t, cast(drill_down_value as TEXT) as drill_down_value\n\t, cast(claim_type as TEXT) as claim_type\n\t, cast(field_name as TEXT) as field_name\n\t, cast(bucket_name as TEXT) as bucket_name\n\t, cast(invalid_reason as TEXT) as invalid_reason\n\t, cast(field_value as TEXT) as field_value\n\t, cast(tuva_last_run as TEXT) as tuva_last_run\n\tfrom tuva.data_quality.institutional_diagnosis_code_1\n\nunion all\n\nselect     cast(data_source as TEXT) as data_source\n\t, cast(source_date as TEXT) as source_date\n\t, cast(table_name as TEXT) as table_name\n\t, cast(drill_down_key as TEXT) as drill_down_key\n\t, cast(drill_down_value as TEXT) as drill_down_value\n\t, cast(claim_type as TEXT) as claim_type\n\t, cast(field_name as TEXT) as field_name\n\t, cast(bucket_name as TEXT) as bucket_name\n\t, cast(invalid_reason as TEXT) as invalid_reason\n\t, cast(field_value as TEXT) as field_value\n\t, cast(tuva_last_run as TEXT) as tuva_last_run\n\tfrom tuva.data_quality.institutional_diagnosis_code_2\n\nunion all\n\nselect     cast(data_source as TEXT) as data_source\n\t, cast(source_date as TEXT) as source_date\n\t, cast(table_name as TEXT) as table_name\n\t, cast(drill_down_key as TEXT) as drill_down_key\n\t, cast(drill_down_value as TEXT) as drill_down_value\n\t, cast(claim_type as TEXT) as claim_type\n\t, cast(field_name as TEXT) as field_name\n\t, cast(bucket_name as TEXT) as bucket_name\n\t, cast(invalid_reason as TEXT) as invalid_reason\n\t, cast(field_value as TEXT) as field_value\n\t, cast(tuva_last_run as TEXT) as tuva_last_run\n\tfrom tuva.data_quality.institutional_diagnosis_code_3\n\nunion all\n\nselect     cast(data_source as TEXT) as data_source\n\t, cast(source_date as TEXT) as source_date\n\t, cast(table_name as TEXT) as table_name\n\t, cast(drill_down_key as TEXT) as drill_down_key\n\t, cast(drill_down_value as TEXT) as drill_down_value\n\t, cast(claim_type as TEXT) as claim_type\n\t, cast(field_name as TEXT) as field_name\n\t, cast(bucket_name as TEXT) as bucket_name\n\t, cast(invalid_reason as TEXT) as invalid_reason\n\t, cast(field_value as TEXT) as field_value\n\t, cast(tuva_last_run as TEXT) as tuva_last_run\n\tfrom tuva.data_quality.institutional_discharge_date\n\nunion all\n\nselect     cast(data_source as TEXT) as data_source\n\t, cast(source_date as TEXT) as source_date\n\t, cast(table_name as TEXT) as table_name\n\t, cast(drill_down_key as TEXT) as drill_down_key\n\t, cast(drill_down_value as TEXT) as drill_down_value\n\t, cast(claim_type as TEXT) as claim_type\n\t, cast(field_name as TEXT) as field_name\n\t, cast(bucket_name as TEXT) as bucket_name\n\t, cast(invalid_reason as TEXT) as invalid_reason\n\t, cast(field_value as TEXT) as field_value\n\t, cast(tuva_last_run as TEXT) as tuva_last_run\n\tfrom tuva.data_quality.institutional_discharge_disposition_code\n\nunion all\n\nselect     cast(data_source as TEXT) as data_source\n\t, cast(source_date as TEXT) as source_date\n\t, cast(table_name as TEXT) as table_name\n\t, cast(drill_down_key as TEXT) as drill_down_key\n\t, cast(drill_down_value as TEXT) as drill_down_value\n\t, cast(claim_type as TEXT) as claim_type\n\t, cast(field_name as TEXT) as field_name\n\t, cast(bucket_name as TEXT) as bucket_name\n\t, cast(invalid_reason as TEXT) as invalid_reason\n\t, cast(field_value as TEXT) as field_value\n\t, cast(tuva_last_run as TEXT) as tuva_last_run\n\tfrom tuva.data_quality.institutional_facility_npi\n\nunion all\n\nselect     cast(data_source as TEXT) as data_source\n\t, cast(source_date as TEXT) as source_date\n\t, cast(table_name as TEXT) as table_name\n\t, cast(drill_down_key as TEXT) as drill_down_key\n\t, cast(drill_down_value as TEXT) as drill_down_value\n\t, cast(claim_type as TEXT) as claim_type\n\t, cast(field_name as TEXT) as field_name\n\t, cast(bucket_name as TEXT) as bucket_name\n\t, cast(invalid_reason as TEXT) as invalid_reason\n\t, cast(field_value as TEXT) as field_value\n\t, cast(tuva_last_run as TEXT) as tuva_last_run\n\tfrom tuva.data_quality.institutional_present_on_admission_1\n\nunion all\n\nselect     cast(data_source as TEXT) as data_source\n\t, cast(source_date as TEXT) as source_date\n\t, cast(table_name as TEXT) as table_name\n\t, cast(drill_down_key as TEXT) as drill_down_key\n\t, cast(drill_down_value as TEXT) as drill_down_value\n\t, cast(claim_type as TEXT) as claim_type\n\t, cast(field_name as TEXT) as field_name\n\t, cast(bucket_name as TEXT) as bucket_name\n\t, cast(invalid_reason as TEXT) as invalid_reason\n\t, cast(field_value as TEXT) as field_value\n\t, cast(tuva_last_run as TEXT) as tuva_last_run\n\tfrom tuva.data_quality.institutional_present_on_admission_2\n\nunion all\n\nselect     cast(data_source as TEXT) as data_source\n\t, cast(source_date as TEXT) as source_date\n\t, cast(table_name as TEXT) as table_name\n\t, cast(drill_down_key as TEXT) as drill_down_key\n\t, cast(drill_down_value as TEXT) as drill_down_value\n\t, cast(claim_type as TEXT) as claim_type\n\t, cast(field_name as TEXT) as field_name\n\t, cast(bucket_name as TEXT) as bucket_name\n\t, cast(invalid_reason as TEXT) as invalid_reason\n\t, cast(field_value as TEXT) as field_value\n\t, cast(tuva_last_run as TEXT) as tuva_last_run\n\tfrom tuva.data_quality.institutional_present_on_admission_3\n\nunion all\n\nselect     cast(data_source as TEXT) as data_source\n\t, cast(source_date as TEXT) as source_date\n\t, cast(table_name as TEXT) as table_name\n\t, cast(drill_down_key as TEXT) as drill_down_key\n\t, cast(drill_down_value as TEXT) as drill_down_value\n\t, cast(claim_type as TEXT) as claim_type\n\t, cast(field_name as TEXT) as field_name\n\t, cast(bucket_name as TEXT) as bucket_name\n\t, cast(invalid_reason as TEXT) as invalid_reason\n\t, cast(field_value as TEXT) as field_value\n\t, cast(tuva_last_run as TEXT) as tuva_last_run\n\tfrom tuva.data_quality.institutional_procedure_code_1\n\nunion all\n\nselect     cast(data_source as TEXT) as data_source\n\t, cast(source_date as TEXT) as source_date\n\t, cast(table_name as TEXT) as table_name\n\t, cast(drill_down_key as TEXT) as drill_down_key\n\t, cast(drill_down_value as TEXT) as drill_down_value\n\t, cast(claim_type as TEXT) as claim_type\n\t, cast(field_name as TEXT) as field_name\n\t, cast(bucket_name as TEXT) as bucket_name\n\t, cast(invalid_reason as TEXT) as invalid_reason\n\t, cast(field_value as TEXT) as field_value\n\t, cast(tuva_last_run as TEXT) as tuva_last_run\n\tfrom tuva.data_quality.institutional_procedure_code_2\n\nunion all\n\nselect     cast(data_source as TEXT) as data_source\n\t, cast(source_date as TEXT) as source_date\n\t, cast(table_name as TEXT) as table_name\n\t, cast(drill_down_key as TEXT) as drill_down_key\n\t, cast(drill_down_value as TEXT) as drill_down_value\n\t, cast(claim_type as TEXT) as claim_type\n\t, cast(field_name as TEXT) as field_name\n\t, cast(bucket_name as TEXT) as bucket_name\n\t, cast(invalid_reason as TEXT) as invalid_reason\n\t, cast(field_value as TEXT) as field_value\n\t, cast(tuva_last_run as TEXT) as tuva_last_run\n\tfrom tuva.data_quality.institutional_procedure_code_3\n\nunion all\n\nselect     cast(data_source as TEXT) as data_source\n\t, cast(source_date as TEXT) as source_date\n\t, cast(table_name as TEXT) as table_name\n\t, cast(drill_down_key as TEXT) as drill_down_key\n\t, cast(drill_down_value as TEXT) as drill_down_value\n\t, cast(claim_type as TEXT) as claim_type\n\t, cast(field_name as TEXT) as field_name\n\t, cast(bucket_name as TEXT) as bucket_name\n\t, cast(invalid_reason as TEXT) as invalid_reason\n\t, cast(field_value as TEXT) as field_value\n\t, cast(tuva_last_run as TEXT) as tuva_last_run\n\tfrom tuva.data_quality.institutional_procedure_date_1\n\nunion all\n\nselect     cast(data_source as TEXT) as data_source\n\t, cast(source_date as TEXT) as source_date\n\t, cast(table_name as TEXT) as table_name\n\t, cast(drill_down_key as TEXT) as drill_down_key\n\t, cast(drill_down_value as TEXT) as drill_down_value\n\t, cast(claim_type as TEXT) as claim_type\n\t, cast(field_name as TEXT) as field_name\n\t, cast(bucket_name as TEXT) as bucket_name\n\t, cast(invalid_reason as TEXT) as invalid_reason\n\t, cast(field_value as TEXT) as field_value\n\t, cast(tuva_last_run as TEXT) as tuva_last_run\n\tfrom tuva.data_quality.institutional_procedure_date_2\n\nunion all\n\nselect     cast(data_source as TEXT) as data_source\n\t, cast(source_date as TEXT) as source_date\n\t, cast(table_name as TEXT) as table_name\n\t, cast(drill_down_key as TEXT) as drill_down_key\n\t, cast(drill_down_value as TEXT) as drill_down_value\n\t, cast(claim_type as TEXT) as claim_type\n\t, cast(field_name as TEXT) as field_name\n\t, cast(bucket_name as TEXT) as bucket_name\n\t, cast(invalid_reason as TEXT) as invalid_reason\n\t, cast(field_value as TEXT) as field_value\n\t, cast(tuva_last_run as TEXT) as tuva_last_run\n\tfrom tuva.data_quality.institutional_procedure_date_3\n\nunion all\n\nselect     cast(data_source as TEXT) as data_source\n\t, cast(source_date as TEXT) as source_date\n\t, cast(table_name as TEXT) as table_name\n\t, cast(drill_down_key as TEXT) as drill_down_key\n\t, cast(drill_down_value as TEXT) as drill_down_value\n\t, cast(claim_type as TEXT) as claim_type\n\t, cast(field_name as TEXT) as field_name\n\t, cast(bucket_name as TEXT) as bucket_name\n\t, cast(invalid_reason as TEXT) as invalid_reason\n\t, cast(field_value as TEXT) as field_value\n\t, cast(tuva_last_run as TEXT) as tuva_last_run\n\tfrom tuva.data_quality.institutional_rendering_npi\n\nunion all\n\nselect     cast(data_source as TEXT) as data_source\n\t, cast(source_date as TEXT) as source_date\n\t, cast(table_name as TEXT) as table_name\n\t, cast(drill_down_key as TEXT) as drill_down_key\n\t, cast(drill_down_value as TEXT) as drill_down_value\n\t, cast(claim_type as TEXT) as claim_type\n\t, cast(field_name as TEXT) as field_name\n\t, cast(bucket_name as TEXT) as bucket_name\n\t, cast(invalid_reason as TEXT) as invalid_reason\n\t, cast(field_value as TEXT) as field_value\n\t, cast(tuva_last_run as TEXT) as tuva_last_run\n\tfrom tuva.data_quality.institutional_revenue_center_code\n\nunion all\n\nselect     cast(data_source as TEXT) as data_source\n\t, cast(source_date as TEXT) as source_date\n\t, cast(table_name as TEXT) as table_name\n\t, cast(drill_down_key as TEXT) as drill_down_key\n\t, cast(drill_down_value as TEXT) as drill_down_value\n\t, cast(claim_type as TEXT) as claim_type\n\t, cast(field_name as TEXT) as field_name\n\t, cast(bucket_name as TEXT) as bucket_name\n\t, cast(invalid_reason as TEXT) as invalid_reason\n\t, cast(field_value as TEXT) as field_value\n\t, cast(tuva_last_run as TEXT) as tuva_last_run\n\tfrom tuva.data_quality.institutional_service_unit_quantity\n\nunion all\n\nselect     cast(data_source as TEXT) as data_source\n\t, cast(source_date as TEXT) as source_date\n\t, cast(table_name as TEXT) as table_name\n\t, cast(drill_down_key as TEXT) as drill_down_key\n\t, cast(drill_down_value as TEXT) as drill_down_value\n\t, cast(claim_type as TEXT) as claim_type\n\t, cast(field_name as TEXT) as field_name\n\t, cast(bucket_name as TEXT) as bucket_name\n\t, cast(invalid_reason as TEXT) as invalid_reason\n\t, cast(field_value as TEXT) as field_value\n\t, cast(tuva_last_run as TEXT) as tuva_last_run\n\tfrom tuva.data_quality.pharmacy_allowed_amount\n\nunion all\n\nselect     cast(data_source as TEXT) as data_source\n\t, cast(source_date as TEXT) as source_date\n\t, cast(table_name as TEXT) as table_name\n\t, cast(drill_down_key as TEXT) as drill_down_key\n\t, cast(drill_down_value as TEXT) as drill_down_value\n\t, cast(claim_type as TEXT) as claim_type\n\t, cast(field_name as TEXT) as field_name\n\t, cast(bucket_name as TEXT) as bucket_name\n\t, cast(invalid_reason as TEXT) as invalid_reason\n\t, cast(field_value as TEXT) as field_value\n\t, cast(tuva_last_run as TEXT) as tuva_last_run\n\tfrom tuva.data_quality.pharmacy_claim_id\n\nunion all\n\nselect     cast(data_source as TEXT) as data_source\n\t, cast(source_date as TEXT) as source_date\n\t, cast(table_name as TEXT) as table_name\n\t, cast(drill_down_key as TEXT) as drill_down_key\n\t, cast(drill_down_value as TEXT) as drill_down_value\n\t, cast(claim_type as TEXT) as claim_type\n\t, cast(field_name as TEXT) as field_name\n\t, cast(bucket_name as TEXT) as bucket_name\n\t, cast(invalid_reason as TEXT) as invalid_reason\n\t, cast(field_value as TEXT) as field_value\n\t, cast(tuva_last_run as TEXT) as tuva_last_run\n\tfrom tuva.data_quality.pharmacy_claim_line_number\n\nunion all\n\nselect     cast(data_source as TEXT) as data_source\n\t, cast(source_date as TEXT) as source_date\n\t, cast(table_name as TEXT) as table_name\n\t, cast(drill_down_key as TEXT) as drill_down_key\n\t, cast(drill_down_value as TEXT) as drill_down_value\n\t, cast(claim_type as TEXT) as claim_type\n\t, cast(field_name as TEXT) as field_name\n\t, cast(bucket_name as TEXT) as bucket_name\n\t, cast(invalid_reason as TEXT) as invalid_reason\n\t, cast(field_value as TEXT) as field_value\n\t, cast(tuva_last_run as TEXT) as tuva_last_run\n\tfrom tuva.data_quality.pharmacy_coinsurance_amount\n\nunion all\n\nselect     cast(data_source as TEXT) as data_source\n\t, cast(source_date as TEXT) as source_date\n\t, cast(table_name as TEXT) as table_name\n\t, cast(drill_down_key as TEXT) as drill_down_key\n\t, cast(drill_down_value as TEXT) as drill_down_value\n\t, cast(claim_type as TEXT) as claim_type\n\t, cast(field_name as TEXT) as field_name\n\t, cast(bucket_name as TEXT) as bucket_name\n\t, cast(invalid_reason as TEXT) as invalid_reason\n\t, cast(field_value as TEXT) as field_value\n\t, cast(tuva_last_run as TEXT) as tuva_last_run\n\tfrom tuva.data_quality.pharmacy_copayment_amount\n\nunion all\n\nselect     cast(data_source as TEXT) as data_source\n\t, cast(source_date as TEXT) as source_date\n\t, cast(table_name as TEXT) as table_name\n\t, cast(drill_down_key as TEXT) as drill_down_key\n\t, cast(drill_down_value as TEXT) as drill_down_value\n\t, cast(claim_type as TEXT) as claim_type\n\t, cast(field_name as TEXT) as field_name\n\t, cast(bucket_name as TEXT) as bucket_name\n\t, cast(invalid_reason as TEXT) as invalid_reason\n\t, cast(field_value as TEXT) as field_value\n\t, cast(tuva_last_run as TEXT) as tuva_last_run\n\tfrom tuva.data_quality.pharmacy_data_source\n\nunion all\n\nselect     cast(data_source as TEXT) as data_source\n\t, cast(source_date as TEXT) as source_date\n\t, cast(table_name as TEXT) as table_name\n\t, cast(drill_down_key as TEXT) as drill_down_key\n\t, cast(drill_down_value as TEXT) as drill_down_value\n\t, cast(claim_type as TEXT) as claim_type\n\t, cast(field_name as TEXT) as field_name\n\t, cast(bucket_name as TEXT) as bucket_name\n\t, cast(invalid_reason as TEXT) as invalid_reason\n\t, cast(field_value as TEXT) as field_value\n\t, cast(tuva_last_run as TEXT) as tuva_last_run\n\tfrom tuva.data_quality.pharmacy_days_supply\n\nunion all\n\nselect     cast(data_source as TEXT) as data_source\n\t, cast(source_date as TEXT) as source_date\n\t, cast(table_name as TEXT) as table_name\n\t, cast(drill_down_key as TEXT) as drill_down_key\n\t, cast(drill_down_value as TEXT) as drill_down_value\n\t, cast(claim_type as TEXT) as claim_type\n\t, cast(field_name as TEXT) as field_name\n\t, cast(bucket_name as TEXT) as bucket_name\n\t, cast(invalid_reason as TEXT) as invalid_reason\n\t, cast(field_value as TEXT) as field_value\n\t, cast(tuva_last_run as TEXT) as tuva_last_run\n\tfrom tuva.data_quality.pharmacy_deductible_amount\n\nunion all\n\nselect     cast(data_source as TEXT) as data_source\n\t, cast(source_date as TEXT) as source_date\n\t, cast(table_name as TEXT) as table_name\n\t, cast(drill_down_key as TEXT) as drill_down_key\n\t, cast(drill_down_value as TEXT) as drill_down_value\n\t, cast(claim_type as TEXT) as claim_type\n\t, cast(field_name as TEXT) as field_name\n\t, cast(bucket_name as TEXT) as bucket_name\n\t, cast(invalid_reason as TEXT) as invalid_reason\n\t, cast(field_value as TEXT) as field_value\n\t, cast(tuva_last_run as TEXT) as tuva_last_run\n\tfrom tuva.data_quality.pharmacy_dispensing_date\n\nunion all\n\nselect     cast(data_source as TEXT) as data_source\n\t, cast(source_date as TEXT) as source_date\n\t, cast(table_name as TEXT) as table_name\n\t, cast(drill_down_key as TEXT) as drill_down_key\n\t, cast(drill_down_value as TEXT) as drill_down_value\n\t, cast(claim_type as TEXT) as claim_type\n\t, cast(field_name as TEXT) as field_name\n\t, cast(bucket_name as TEXT) as bucket_name\n\t, cast(invalid_reason as TEXT) as invalid_reason\n\t, cast(field_value as TEXT) as field_value\n\t, cast(tuva_last_run as TEXT) as tuva_last_run\n\tfrom tuva.data_quality.pharmacy_dispensing_provider_npi\n\nunion all\n\nselect     cast(data_source as TEXT) as data_source\n\t, cast(source_date as TEXT) as source_date\n\t, cast(table_name as TEXT) as table_name\n\t, cast(drill_down_key as TEXT) as drill_down_key\n\t, cast(drill_down_value as TEXT) as drill_down_value\n\t, cast(claim_type as TEXT) as claim_type\n\t, cast(field_name as TEXT) as field_name\n\t, cast(bucket_name as TEXT) as bucket_name\n\t, cast(invalid_reason as TEXT) as invalid_reason\n\t, cast(field_value as TEXT) as field_value\n\t, cast(tuva_last_run as TEXT) as tuva_last_run\n\tfrom tuva.data_quality.pharmacy_member_id\n\nunion all\n\nselect     cast(data_source as TEXT) as data_source\n\t, cast(source_date as TEXT) as source_date\n\t, cast(table_name as TEXT) as table_name\n\t, cast(drill_down_key as TEXT) as drill_down_key\n\t, cast(drill_down_value as TEXT) as drill_down_value\n\t, cast(claim_type as TEXT) as claim_type\n\t, cast(field_name as TEXT) as field_name\n\t, cast(bucket_name as TEXT) as bucket_name\n\t, cast(invalid_reason as TEXT) as invalid_reason\n\t, cast(field_value as TEXT) as field_value\n\t, cast(tuva_last_run as TEXT) as tuva_last_run\n\tfrom tuva.data_quality.pharmacy_ndc_code\n\nunion all\n\nselect     cast(data_source as TEXT) as data_source\n\t, cast(source_date as TEXT) as source_date\n\t, cast(table_name as TEXT) as table_name\n\t, cast(drill_down_key as TEXT) as drill_down_key\n\t, cast(drill_down_value as TEXT) as drill_down_value\n\t, cast(claim_type as TEXT) as claim_type\n\t, cast(field_name as TEXT) as field_name\n\t, cast(bucket_name as TEXT) as bucket_name\n\t, cast(invalid_reason as TEXT) as invalid_reason\n\t, cast(field_value as TEXT) as field_value\n\t, cast(tuva_last_run as TEXT) as tuva_last_run\n\tfrom tuva.data_quality.pharmacy_paid_amount\n\nunion all\n\nselect     cast(data_source as TEXT) as data_source\n\t, cast(source_date as TEXT) as source_date\n\t, cast(table_name as TEXT) as table_name\n\t, cast(drill_down_key as TEXT) as drill_down_key\n\t, cast(drill_down_value as TEXT) as drill_down_value\n\t, cast(claim_type as TEXT) as claim_type\n\t, cast(field_name as TEXT) as field_name\n\t, cast(bucket_name as TEXT) as bucket_name\n\t, cast(invalid_reason as TEXT) as invalid_reason\n\t, cast(field_value as TEXT) as field_value\n\t, cast(tuva_last_run as TEXT) as tuva_last_run\n\tfrom tuva.data_quality.pharmacy_paid_date\n\nunion all\n\nselect     cast(data_source as TEXT) as data_source\n\t, cast(source_date as TEXT) as source_date\n\t, cast(table_name as TEXT) as table_name\n\t, cast(drill_down_key as TEXT) as drill_down_key\n\t, cast(drill_down_value as TEXT) as drill_down_value\n\t, cast(claim_type as TEXT) as claim_type\n\t, cast(field_name as TEXT) as field_name\n\t, cast(bucket_name as TEXT) as bucket_name\n\t, cast(invalid_reason as TEXT) as invalid_reason\n\t, cast(field_value as TEXT) as field_value\n\t, cast(tuva_last_run as TEXT) as tuva_last_run\n\tfrom tuva.data_quality.pharmacy_person_id\n\nunion all\n\nselect     cast(data_source as TEXT) as data_source\n\t, cast(source_date as TEXT) as source_date\n\t, cast(table_name as TEXT) as table_name\n\t, cast(drill_down_key as TEXT) as drill_down_key\n\t, cast(drill_down_value as TEXT) as drill_down_value\n\t, cast(claim_type as TEXT) as claim_type\n\t, cast(field_name as TEXT) as field_name\n\t, cast(bucket_name as TEXT) as bucket_name\n\t, cast(invalid_reason as TEXT) as invalid_reason\n\t, cast(field_value as TEXT) as field_value\n\t, cast(tuva_last_run as TEXT) as tuva_last_run\n\tfrom tuva.data_quality.pharmacy_payer\n\nunion all\n\nselect     cast(data_source as TEXT) as data_source\n\t, cast(source_date as TEXT) as source_date\n\t, cast(table_name as TEXT) as table_name\n\t, cast(drill_down_key as TEXT) as drill_down_key\n\t, cast(drill_down_value as TEXT) as drill_down_value\n\t, cast(claim_type as TEXT) as claim_type\n\t, cast(field_name as TEXT) as field_name\n\t, cast(bucket_name as TEXT) as bucket_name\n\t, cast(invalid_reason as TEXT) as invalid_reason\n\t, cast(field_value as TEXT) as field_value\n\t, cast(tuva_last_run as TEXT) as tuva_last_run\n\tfrom tuva.data_quality.pharmacy_plan\n\nunion all\n\nselect     cast(data_source as TEXT) as data_source\n\t, cast(source_date as TEXT) as source_date\n\t, cast(table_name as TEXT) as table_name\n\t, cast(drill_down_key as TEXT) as drill_down_key\n\t, cast(drill_down_value as TEXT) as drill_down_value\n\t, cast(claim_type as TEXT) as claim_type\n\t, cast(field_name as TEXT) as field_name\n\t, cast(bucket_name as TEXT) as bucket_name\n\t, cast(invalid_reason as TEXT) as invalid_reason\n\t, cast(field_value as TEXT) as field_value\n\t, cast(tuva_last_run as TEXT) as tuva_last_run\n\tfrom tuva.data_quality.pharmacy_prescribing_provider_npi\n\nunion all\n\nselect     cast(data_source as TEXT) as data_source\n\t, cast(source_date as TEXT) as source_date\n\t, cast(table_name as TEXT) as table_name\n\t, cast(drill_down_key as TEXT) as drill_down_key\n\t, cast(drill_down_value as TEXT) as drill_down_value\n\t, cast(claim_type as TEXT) as claim_type\n\t, cast(field_name as TEXT) as field_name\n\t, cast(bucket_name as TEXT) as bucket_name\n\t, cast(invalid_reason as TEXT) as invalid_reason\n\t, cast(field_value as TEXT) as field_value\n\t, cast(tuva_last_run as TEXT) as tuva_last_run\n\tfrom tuva.data_quality.pharmacy_quantity\n\nunion all\n\nselect     cast(data_source as TEXT) as data_source\n\t, cast(source_date as TEXT) as source_date\n\t, cast(table_name as TEXT) as table_name\n\t, cast(drill_down_key as TEXT) as drill_down_key\n\t, cast(drill_down_value as TEXT) as drill_down_value\n\t, cast(claim_type as TEXT) as claim_type\n\t, cast(field_name as TEXT) as field_name\n\t, cast(bucket_name as TEXT) as bucket_name\n\t, cast(invalid_reason as TEXT) as invalid_reason\n\t, cast(field_value as TEXT) as field_value\n\t, cast(tuva_last_run as TEXT) as tuva_last_run\n\tfrom tuva.data_quality.pharmacy_refills\n\nunion all\n\nselect     cast(data_source as TEXT) as data_source\n\t, cast(source_date as TEXT) as source_date\n\t, cast(table_name as TEXT) as table_name\n\t, cast(drill_down_key as TEXT) as drill_down_key\n\t, cast(drill_down_value as TEXT) as drill_down_value\n\t, cast(claim_type as TEXT) as claim_type\n\t, cast(field_name as TEXT) as field_name\n\t, cast(bucket_name as TEXT) as bucket_name\n\t, cast(invalid_reason as TEXT) as invalid_reason\n\t, cast(field_value as TEXT) as field_value\n\t, cast(tuva_last_run as TEXT) as tuva_last_run\n\tfrom tuva.data_quality.professional_billing_npi\n\nunion all\n\nselect     cast(data_source as TEXT) as data_source\n\t, cast(source_date as TEXT) as source_date\n\t, cast(table_name as TEXT) as table_name\n\t, cast(drill_down_key as TEXT) as drill_down_key\n\t, cast(drill_down_value as TEXT) as drill_down_value\n\t, cast(claim_type as TEXT) as claim_type\n\t, cast(field_name as TEXT) as field_name\n\t, cast(bucket_name as TEXT) as bucket_name\n\t, cast(invalid_reason as TEXT) as invalid_reason\n\t, cast(field_value as TEXT) as field_value\n\t, cast(tuva_last_run as TEXT) as tuva_last_run\n\tfrom tuva.data_quality.professional_facility_npi\n\nunion all\n\nselect     cast(data_source as TEXT) as data_source\n\t, cast(source_date as TEXT) as source_date\n\t, cast(table_name as TEXT) as table_name\n\t, cast(drill_down_key as TEXT) as drill_down_key\n\t, cast(drill_down_value as TEXT) as drill_down_value\n\t, cast(claim_type as TEXT) as claim_type\n\t, cast(field_name as TEXT) as field_name\n\t, cast(bucket_name as TEXT) as bucket_name\n\t, cast(invalid_reason as TEXT) as invalid_reason\n\t, cast(field_value as TEXT) as field_value\n\t, cast(tuva_last_run as TEXT) as tuva_last_run\n\tfrom tuva.data_quality.professional_place_of_service_code\n\nunion all\n\nselect     cast(data_source as TEXT) as data_source\n\t, cast(source_date as TEXT) as source_date\n\t, cast(table_name as TEXT) as table_name\n\t, cast(drill_down_key as TEXT) as drill_down_key\n\t, cast(drill_down_value as TEXT) as drill_down_value\n\t, cast(claim_type as TEXT) as claim_type\n\t, cast(field_name as TEXT) as field_name\n\t, cast(bucket_name as TEXT) as bucket_name\n\t, cast(invalid_reason as TEXT) as invalid_reason\n\t, cast(field_value as TEXT) as field_value\n\t, cast(tuva_last_run as TEXT) as tuva_last_run\n\tfrom tuva.data_quality.professional_rendering_npi\n\nunion all\n\nselect     cast(data_source as TEXT) as data_source\n\t, cast(source_date as TEXT) as source_date\n\t, cast(table_name as TEXT) as table_name\n\t, cast(drill_down_key as TEXT) as drill_down_key\n\t, cast(drill_down_value as TEXT) as drill_down_value\n\t, cast(claim_type as TEXT) as claim_type\n\t, cast(field_name as TEXT) as field_name\n\t, cast(bucket_name as TEXT) as bucket_name\n\t, cast(invalid_reason as TEXT) as invalid_reason\n\t, cast(field_value as TEXT) as field_value\n\t, cast(tuva_last_run as TEXT) as tuva_last_run\n\tfrom tuva.data_quality.professional_claim_end_date\n\nunion all\n\nselect     cast(data_source as TEXT) as data_source\n\t, cast(source_date as TEXT) as source_date\n\t, cast(table_name as TEXT) as table_name\n\t, cast(drill_down_key as TEXT) as drill_down_key\n\t, cast(drill_down_value as TEXT) as drill_down_value\n\t, cast(claim_type as TEXT) as claim_type\n\t, cast(field_name as TEXT) as field_name\n\t, cast(bucket_name as TEXT) as bucket_name\n\t, cast(invalid_reason as TEXT) as invalid_reason\n\t, cast(field_value as TEXT) as field_value\n\t, cast(tuva_last_run as TEXT) as tuva_last_run\n\tfrom tuva.data_quality.professional_claim_start_date\n\nunion all\n\nselect     cast(data_source as TEXT) as data_source\n\t, cast(source_date as TEXT) as source_date\n\t, cast(table_name as TEXT) as table_name\n\t, cast(drill_down_key as TEXT) as drill_down_key\n\t, cast(drill_down_value as TEXT) as drill_down_value\n\t, cast(claim_type as TEXT) as claim_type\n\t, cast(field_name as TEXT) as field_name\n\t, cast(bucket_name as TEXT) as bucket_name\n\t, cast(invalid_reason as TEXT) as invalid_reason\n\t, cast(field_value as TEXT) as field_value\n\t, cast(tuva_last_run as TEXT) as tuva_last_run\n\tfrom tuva.data_quality.professional_diagnosis_code_1\n\nunion all\n\nselect     cast(data_source as TEXT) as data_source\n\t, cast(source_date as TEXT) as source_date\n\t, cast(table_name as TEXT) as table_name\n\t, cast(drill_down_key as TEXT) as drill_down_key\n\t, cast(drill_down_value as TEXT) as drill_down_value\n\t, cast(claim_type as TEXT) as claim_type\n\t, cast(field_name as TEXT) as field_name\n\t, cast(bucket_name as TEXT) as bucket_name\n\t, cast(invalid_reason as TEXT) as invalid_reason\n\t, cast(field_value as TEXT) as field_value\n\t, cast(tuva_last_run as TEXT) as tuva_last_run\n\tfrom tuva.data_quality.professional_diagnosis_code_2\n\nunion all\n\nselect     cast(data_source as TEXT) as data_source\n\t, cast(source_date as TEXT) as source_date\n\t, cast(table_name as TEXT) as table_name\n\t, cast(drill_down_key as TEXT) as drill_down_key\n\t, cast(drill_down_value as TEXT) as drill_down_value\n\t, cast(claim_type as TEXT) as claim_type\n\t, cast(field_name as TEXT) as field_name\n\t, cast(bucket_name as TEXT) as bucket_name\n\t, cast(invalid_reason as TEXT) as invalid_reason\n\t, cast(field_value as TEXT) as field_value\n\t, cast(tuva_last_run as TEXT) as tuva_last_run\n\tfrom tuva.data_quality.professional_diagnosis_code_3\n\nunion all\n\nselect     cast(data_source as TEXT) as data_source\n\t, cast(source_date as TEXT) as source_date\n\t, cast(table_name as TEXT) as table_name\n\t, cast(drill_down_key as TEXT) as drill_down_key\n\t, cast(drill_down_value as TEXT) as drill_down_value\n\t, cast(claim_type as TEXT) as claim_type\n\t, cast(field_name as TEXT) as field_name\n\t, cast(bucket_name as TEXT) as bucket_name\n\t, cast(invalid_reason as TEXT) as invalid_reason\n\t, cast(field_value as TEXT) as field_value\n\t, cast(tuva_last_run as TEXT) as tuva_last_run\n\tfrom tuva.data_quality.claim_drg_code_type\n\n)\n\n\nselect\n    cast(data_source as TEXT) as data_source\n  , cast(source_date as TEXT) as source_date\n  , cast(table_name as TEXT) as table_name\n  , cast(drill_down_key as TEXT) as drill_down_key\n  , cast(drill_down_value as TEXT) as drill_down_value\n  , cast(claim_type as TEXT) as claim_type\n  , cast(field_name as TEXT) as field_name\n  , cast(bucket_name as TEXT) as bucket_name\n  , cast(invalid_reason as TEXT) as invalid_reason\n  , cast(field_value as TEXT) as field_value\n  , cast(tuva_last_run as TEXT) as tuva_last_run\n  , dense_rank() over (\n        order by data_source\n               , table_name\n               , claim_type\n               , field_name\n    ) as summary_sk\nfrom unioned_data", "relation_name": "tuva.data_quality.data_quality_claims_detail", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:20.262998Z", "completed_at": "2025-06-03T19:50:20.269321Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:20.275662Z", "completed_at": "2025-06-03T19:50:20.275665Z"}], "thread_id": "Thread-3", "execution_time": 0.06033587455749512, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.normalized_input__int_admit_type_final", "compiled": true, "compiled_code": "\n\n\nselect\n    claim_id\n    , data_source\n    , column_name\n    , normalized_code\n    , normalized_description\n    , occurrence_count\n    , next_occurrence_count\n    , occurrence_row_count\n    , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom tuva.claims_preprocessing._int_normalized_input_admit_type_normalize_voting\nwhere (occurrence_row_count = 1\n        and occurrence_count > next_occurrence_count)", "relation_name": "tuva.claims_preprocessing._int_normalized_input_admit_type_final", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:20.269516Z", "completed_at": "2025-06-03T19:50:20.276825Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:20.282983Z", "completed_at": "2025-06-03T19:50:20.282988Z"}], "thread_id": "Thread-2", "execution_time": 0.015186786651611328, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.normalized_input__int_diagnosis_code_voting", "compiled": true, "compiled_code": "\n\nwith distinct_count as (\n    select\n        claim_id\n        , data_source\n        , diagnosis_column\n        , count(*) as distinct_count\n        , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\n    from tuva.claims_preprocessing._int_normalized_input_diagnosis_code_normalize\n    group by\n        claim_id\n        , data_source\n        , diagnosis_column\n)\n\nselect\n    norm.claim_id\n    , norm.data_source\n    , norm.diagnosis_column as column_name\n    , norm.normalized_diagnosis_code as normalized_code\n    , norm.diagnosis_code_occurrence_count as occurrence_count\n    , coalesce(lead(diagnosis_code_occurrence_count)\n        over (partition by norm.claim_id, norm.data_source, norm.diagnosis_column\norder by diagnosis_code_occurrence_count desc), 0) as next_occurrence_count\n    , row_number() over (partition by norm.claim_id, norm.data_source, norm.diagnosis_column\norder by diagnosis_code_occurrence_count desc) as occurrence_row_count\n    , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom tuva.claims_preprocessing._int_normalized_input_diagnosis_code_normalize as norm\ninner join distinct_count as dist\n    on norm.claim_id = dist.claim_id\n    and norm.data_source = dist.data_source\n    and norm.diagnosis_column = dist.diagnosis_column", "relation_name": "tuva.claims_preprocessing._int_normalized_input_diagnosis_code_voting", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:20.277236Z", "completed_at": "2025-06-03T19:50:20.289589Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:20.295322Z", "completed_at": "2025-06-03T19:50:20.295327Z"}], "thread_id": "Thread-4", "execution_time": 0.019960880279541016, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.normalized_input__int_discharge_disposition_final", "compiled": true, "compiled_code": "\n\n\nselect\n    claim_id\n    , data_source\n    , column_name\n    , normalized_code\n    , normalized_description\n    , occurrence_count\n    , next_occurrence_count\n    , occurrence_row_count\n    , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom tuva.claims_preprocessing._int_normalized_input_discharge_disposition_voting\nwhere (occurrence_row_count = 1\n        and occurrence_count > next_occurrence_count)", "relation_name": "tuva.claims_preprocessing._int_normalized_input_discharge_disposition_final", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:20.284094Z", "completed_at": "2025-06-03T19:50:20.295976Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:20.302186Z", "completed_at": "2025-06-03T19:50:20.302191Z"}], "thread_id": "Thread-1", "execution_time": 0.025240182876586914, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.normalized_input__int_medical_date_aggregation", "compiled": true, "compiled_code": "\n\n\nselect\n    claim_id\n    , data_source\n    , min(normalized_claim_start_date) as minimum_claim_start_date\n    , max(normalized_claim_end_date) as maximum_claim_end_date\n    , min(normalized_admission_date) as minimum_admission_date\n    , max(normalized_discharge_date) as maximum_discharge_date\n    , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom tuva.claims_preprocessing._int_normalized_input_medical_claim_date_normalize\nwhere claim_type = 'institutional'\ngroup by\n    claim_id\n    , data_source\n\nunion all\n\nselect\n    claim_id\n    , data_source\n    , min(normalized_claim_start_date) as minimum_claim_start_date\n    , max(normalized_claim_end_date) as maximum_claim_end_date\n    , null as minimum_admission_date\n    , null as maximum_discharge_date\n    , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom tuva.claims_preprocessing._int_normalized_input_medical_claim_date_normalize\nwhere claim_type = 'professional'\ngroup by\n    claim_id\n    , data_source", "relation_name": "tuva.claims_preprocessing._int_normalized_input_medical_date_aggregation", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:20.289794Z", "completed_at": "2025-06-03T19:50:20.301927Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:20.302863Z", "completed_at": "2025-06-03T19:50:20.302867Z"}], "thread_id": "Thread-3", "execution_time": 0.020186185836791992, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.normalized_input__int_drg_final", "compiled": true, "compiled_code": "\n\n\nselect\n    claim_id\n    , data_source\n    , column_name\n    , normalized_code\n    , normalized_description\n    , occurrence_count\n    , next_occurrence_count\n    , occurrence_row_count\n    , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom tuva.claims_preprocessing._int_normalized_input_drg_voting\nwhere (occurrence_row_count = 1\n        and occurrence_count > next_occurrence_count)", "relation_name": "tuva.claims_preprocessing._int_normalized_input_drg_final", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:20.296437Z", "completed_at": "2025-06-03T19:50:20.303700Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:20.310634Z", "completed_at": "2025-06-03T19:50:20.310639Z"}], "thread_id": "Thread-2", "execution_time": 0.015671730041503906, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.normalized_input__int_present_on_admit_voting", "compiled": true, "compiled_code": "\n\nwith distinct_count as (\n    select\n        claim_id\n        , data_source\n        , diagnosis_column\n        , count(*) as distinct_count\n        , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\n    from tuva.claims_preprocessing._int_normalized_input_present_on_admit_normalize\n    group by\n        claim_id\n        , data_source\n        , diagnosis_column\n)\n\nselect\n    norm.claim_id\n    , norm.data_source\n    , norm.diagnosis_column as column_name\n    , norm.normalized_present_on_admit_code as normalized_code\n    , norm.present_on_admit_occurrence_count as occurrence_count\n    , coalesce(lead(present_on_admit_occurrence_count)\n        over (partition by norm.claim_id, norm.data_source, norm.diagnosis_column\norder by present_on_admit_occurrence_count desc), 0) as next_occurrence_count\n    , row_number() over (partition by norm.claim_id, norm.data_source, norm.diagnosis_column\norder by present_on_admit_occurrence_count desc) as occurrence_row_count\n    , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom tuva.claims_preprocessing._int_normalized_input_present_on_admit_normalize as norm\ninner join distinct_count as dist\n    on norm.claim_id = dist.claim_id\n    and norm.data_source = dist.data_source\n    and norm.diagnosis_column = dist.diagnosis_column", "relation_name": "tuva.claims_preprocessing._int_normalized_input_present_on_admit_voting", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:20.304353Z", "completed_at": "2025-06-03T19:50:20.317895Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:20.323472Z", "completed_at": "2025-06-03T19:50:20.323478Z"}], "thread_id": "Thread-4", "execution_time": 0.02096104621887207, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.normalized_input__int_procedure_code_voting", "compiled": true, "compiled_code": "\n\nwith distinct_count as (\n    select\n        claim_id\n        , data_source\n        , procedure_column\n        , count(*) as distinct_count\n        , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\n    from tuva.claims_preprocessing._int_normalized_input_procedure_code_normalize\n    group by\n        claim_id\n        , data_source\n        , procedure_column\n)\n\nselect\n    norm.claim_id\n    , norm.data_source\n    , norm.procedure_column as column_name\n    , norm.normalized_procedure_code as normalized_code\n    , norm.procedure_code_occurrence_count as occurrence_count\n    , coalesce(lead(procedure_code_occurrence_count)\n        over (partition by norm.claim_id, norm.data_source, norm.procedure_column\norder by procedure_code_occurrence_count desc), 0) as next_occurrence_count\n    , row_number() over (partition by norm.claim_id, norm.data_source, norm.procedure_column\norder by procedure_code_occurrence_count desc) as occurrence_row_count\n    , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom tuva.claims_preprocessing._int_normalized_input_procedure_code_normalize as norm\ninner join distinct_count as dist\n    on norm.claim_id = dist.claim_id\n    and norm.data_source = dist.data_source\n    and norm.procedure_column = dist.procedure_column", "relation_name": "tuva.claims_preprocessing._int_normalized_input_procedure_code_voting", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:20.312063Z", "completed_at": "2025-06-03T19:50:20.323913Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:20.336409Z", "completed_at": "2025-06-03T19:50:20.336416Z"}], "thread_id": "Thread-1", "execution_time": 0.03236103057861328, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.normalized_input__int_procedure_date_voting", "compiled": true, "compiled_code": "\n\nwith distinct_count as (\n    select\n        claim_id\n        , data_source\n        , procedure_column\n        , count(*) as distinct_count\n        , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\n    from tuva.claims_preprocessing._int_normalized_input_procedure_date_normalize\n    group by\n        claim_id\n        , data_source\n        , procedure_column\n)\n\nselect\n    norm.claim_id\n    , norm.data_source\n    , norm.procedure_column as column_name\n    , norm.procedure_date as normalized_code\n    , norm.procedure_date_occurrence_count as occurrence_count\n    , coalesce(lead(procedure_date_occurrence_count)\n        over (partition by norm.claim_id, norm.data_source, norm.procedure_column\norder by procedure_date_occurrence_count desc), 0) as next_occurrence_count\n    , row_number() over (partition by norm.claim_id, norm.data_source, norm.procedure_column\norder by procedure_date_occurrence_count desc) as occurrence_row_count\n    , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom tuva.claims_preprocessing._int_normalized_input_procedure_date_normalize as norm\ninner join distinct_count as dist\n    on norm.claim_id = dist.claim_id\n    and norm.data_source = dist.data_source\n    and norm.procedure_column = dist.procedure_column", "relation_name": "tuva.claims_preprocessing._int_normalized_input_procedure_date_voting", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:20.318087Z", "completed_at": "2025-06-03T19:50:20.336150Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:20.351539Z", "completed_at": "2025-06-03T19:50:20.351545Z"}], "thread_id": "Thread-3", "execution_time": 0.04056882858276367, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_utils_unique_combination_of_columns_fhir_preprocessing__medication_dispense_patient_internal_id__resource_internal_id.d5477cb4cc", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith validation_errors as (\n\n    select\n        patient_internal_id, resource_internal_id\n    from tuva.fhir_preprocessing.medication_dispense\n    group by patient_internal_id, resource_internal_id\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:20.353340Z", "completed_at": "2025-06-03T19:50:20.362080Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:20.381001Z", "completed_at": "2025-06-03T19:50:20.381009Z"}], "thread_id": "Thread-4", "execution_time": 0.029797792434692383, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.claims_enrollment__member_months", "compiled": true, "compiled_code": "\n\n\nwith stg_eligibility as (\n  select\n    person_id\n    , member_id\n    , payer\n    , plan\n    , data_source\n    , enrollment_start_date\n    , enrollment_end_date\n    , tuva_last_run\n  from tuva.claims_preprocessing.normalized_input_eligibility as elig\n)\n\n, month_start_and_end_dates as (\n  select\n    year || \n\n    case when 2 = 0\n        then ''\n    else\n        right(\n            '0' || month,\n            2\n        )\n    end as year_month\n    , min(full_date) as month_start_date\n    , max(full_date) as month_end_date\n  from tuva.reference_data.calendar\n  group by year, month, year_month\n)\nselect distinct\n  dense_rank() over (\n    order by\n      a.person_id\n    , b.year_month\n    , a.payer\n    , a.plan\n    , a.data_source\n    ) as member_month_key\n  , a.person_id\n  , a.member_id\n  , b.year_month\n  , a.payer\n  , a.plan\n  , a.data_source\n  , a.tuva_last_run\nfrom stg_eligibility as a\ninner join month_start_and_end_dates as b\n  on a.enrollment_start_date <= b.month_end_date\n  and a.enrollment_end_date >= b.month_start_date", "relation_name": "tuva.claims_preprocessing.member_months", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:20.372749Z", "completed_at": "2025-06-03T19:50:20.394156Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:20.394414Z", "completed_at": "2025-06-03T19:50:20.394420Z"}], "thread_id": "Thread-3", "execution_time": 0.03361797332763672, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.core__stg_claims_eligibility", "compiled": true, "compiled_code": "\n\n-- *************************************************\n-- This dbt model creates the eligibility table in core.\n-- *************************************************\n\n\n\n\nselect\n       person_id || '-' || member_id || '-' || enrollment_start_date || '-' || enrollment_end_date || '-' || payer || '-' || plan || '-' || data_source as eligibility_id\n       , cast(person_id as TEXT) as person_id\n       , cast(member_id as TEXT) as member_id\n       , cast(subscriber_id as TEXT) as subscriber_id\n       , cast(birth_date as date) as birth_date\n       , cast(death_date as date) as death_date\n       , cast(enrollment_start_date as date) as enrollment_start_date\n       , cast(enrollment_end_date as date) as enrollment_end_date\n       , cast(payer as TEXT) as payer\n       , cast(payer_type as TEXT) as payer_type\n       , plan\n       , cast(original_reason_entitlement_code as TEXT) as original_reason_entitlement_code\n       , cast(dual_status_code as TEXT) as dual_status_code\n       , cast(medicare_status_code as TEXT) as medicare_status_code\n       , cast(subscriber_relation as TEXT) as subscriber_relation\n        , cast(group_id as TEXT) as group_id\n        , cast(group_name as TEXT) as group_name\n       , cast(data_source as TEXT) as data_source\n       , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom tuva.claims_preprocessing.normalized_input_eligibility", "relation_name": "tuva.core._stg_claims_eligibility", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:20.362290Z", "completed_at": "2025-06-03T19:50:20.401781Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:20.403855Z", "completed_at": "2025-06-03T19:50:20.403860Z"}], "thread_id": "Thread-1", "execution_time": 0.05103802680969238, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.core__person_id_crosswalk", "compiled": true, "compiled_code": "\n\nselect distinct\n      cast(person_id as TEXT) as person_id\n    , cast(null as TEXT) as patient_id\n    , cast(member_id as TEXT) as member_id\n    , cast(payer as TEXT) as payer\n    , cast(plan as TEXT) as plan\n    , cast(data_source as TEXT) as data_source\nfrom tuva.claims_preprocessing.normalized_input_eligibility\nunion all\nselect distinct\n      cast(person_id as TEXT) as person_id\n    , cast(patient_id as TEXT) as patient_id\n    , cast(null as TEXT) as member_id\n    , cast(null as TEXT) as payer\n    , cast(null as TEXT) as plan\n    , cast(data_source as TEXT) as data_source\nfrom tuva.input_layer.input_layer__patient\n\n", "relation_name": "tuva.core.person_id_crosswalk", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:20.382358Z", "completed_at": "2025-06-03T19:50:20.403599Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:20.404302Z", "completed_at": "2025-06-03T19:50:20.404306Z"}], "thread_id": "Thread-4", "execution_time": 0.022447824478149414, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.core__stg_claims_patient", "compiled": true, "compiled_code": "\n\nwith patient_stage as (\n    select\n        person_id\n        , first_name\n        , last_name\n        , gender\n        , race\n        , birth_date\n        , death_date\n        , death_flag\n        , social_security_number\n        , address\n        , city\n        , state\n        , zip_code\n        , phone\n        , data_source\n        , row_number() over (\n\t        partition by person_id\n\t        order by case when enrollment_end_date is null\n                then cast('2050-01-01' as date)\n                else enrollment_end_date end desc)\n            as row_sequence\n        , cast('2025-06-03 19:49:40.396647+00:00' as timestamp) as tuva_last_run_datetime\n        , cast(substring('2025-06-03 19:49:40.396647+00:00', 1, 10) as date) as tuva_last_run_date\n    from tuva.claims_preprocessing.normalized_input_eligibility\n)\n\nselect\n    cast(person_id as TEXT) as person_id\n    , cast(first_name as TEXT) as first_name\n    , cast(last_name as TEXT) as last_name\n    , cast(gender as TEXT) as sex\n    , cast(race as TEXT) as race\n    , cast(birth_date as date) as birth_date\n    , cast(death_date as date) as death_date\n    , cast(death_flag as int) as death_flag\n    , cast(social_security_number as TEXT) as social_security_number\n    , cast(address as TEXT) as address\n    , cast(city as TEXT) as city\n    , cast(state as TEXT) as state\n    , cast(zip_code as TEXT) as zip_code\n    , cast(null as TEXT) as county\n    , cast(null as float) as latitude\n    , cast(null as float) as longitude\n    , cast(phone as TEXT) as phone\n    , cast(data_source as TEXT) as data_source\n    , cast(floor(datediff(\n        hour,\n        birth_date,\n        tuva_last_run_date\n        ) / 8760.0) as integer) as age\n    , cast(\n        case\n            when cast(floor(datediff(\n        hour,\n        birth_date,\n        tuva_last_run_date\n        ) / 8760.0) as integer) < 10 then '0-9'\n            when cast(floor(datediff(\n        hour,\n        birth_date,\n        tuva_last_run_date\n        ) / 8760.0) as integer) < 20 then '10-19'\n            when cast(floor(datediff(\n        hour,\n        birth_date,\n        tuva_last_run_date\n        ) / 8760.0) as integer) < 30 then '20-29'\n            when cast(floor(datediff(\n        hour,\n        birth_date,\n        tuva_last_run_date\n        ) / 8760.0) as integer) < 40 then '30-39'\n            when cast(floor(datediff(\n        hour,\n        birth_date,\n        tuva_last_run_date\n        ) / 8760.0) as integer) < 50 then '40-49'\n            when cast(floor(datediff(\n        hour,\n        birth_date,\n        tuva_last_run_date\n        ) / 8760.0) as integer) < 60 then '50-59'\n            when cast(floor(datediff(\n        hour,\n        birth_date,\n        tuva_last_run_date\n        ) / 8760.0) as integer) < 70 then '60-69'\n            when cast(floor(datediff(\n        hour,\n        birth_date,\n        tuva_last_run_date\n        ) / 8760.0) as integer) < 80 then '70-79'\n            when cast(floor(datediff(\n        hour,\n        birth_date,\n        tuva_last_run_date\n        ) / 8760.0) as integer) < 90 then '80-89'\n            else '90+'\n        end as TEXT\n    ) as age_group\n    , tuva_last_run_datetime as tuva_last_run\nfrom patient_stage\nwhere row_sequence = 1", "relation_name": "tuva.core._stg_claims_patient", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:20.395513Z", "completed_at": "2025-06-03T19:50:20.405733Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:20.406331Z", "completed_at": "2025-06-03T19:50:20.406335Z"}], "thread_id": "Thread-3", "execution_time": 0.011311054229736328, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.data_quality__data_quality_claims_for_pbi", "compiled": true, "compiled_code": "\n\nwith ranked_examples as (\n       select\n       summary_sk\n       , data_source\n       , table_name\n       , claim_type\n       , field_name\n       , bucket_name\n       , invalid_reason\n       , drill_down_key\n       , drill_down_value as drill_down_value --all claims\n       , field_value as field_value\n       , count(drill_down_value) as frequency\n       , row_number() over (partition by summary_sk, bucket_name, field_value\norder by field_value) as rn\n       , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom tuva.data_quality.data_quality_claims_detail\nwhere bucket_name not in ('valid', 'null')\ngroup by\n       data_source\n       , field_name\n       , table_name\n       , claim_type\n       , bucket_name\n       , field_value\n       , drill_down_key\n       , drill_down_value\n       , invalid_reason\n       , summary_sk\n)\nselect\n       summary_sk\n       , data_source\n       , table_name\n       , claim_type\n       , field_name\n       , bucket_name\n       , invalid_reason\n       , drill_down_key\n       , max(drill_down_value) as drill_down_value --1 sample claim\n       , null as field_value\n       , count(drill_down_value) as frequency\n       , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom tuva.data_quality.data_quality_claims_detail\nwhere bucket_name = 'null'\ngroup by\n       data_source\n       , field_name\n       , table_name\n       , claim_type\n       , bucket_name\n       , invalid_reason\n       , drill_down_key\n       , summary_sk\n\nunion all\nselect\n       summary_sk\n       , data_source\n       , table_name\n       , claim_type\n       , field_name\n       , bucket_name\n       , invalid_reason\n       , drill_down_key\n       , max(drill_down_value) as drill_down_value --1 sample claim\n       , field_value as field_value\n       , count(drill_down_value) as frequency\n       , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom tuva.data_quality.data_quality_claims_detail\nwhere bucket_name = 'valid'\ngroup by\n       data_source\n       , field_name\n       , table_name\n       , claim_type\n       , bucket_name\n       , field_value\n       , invalid_reason\n       , drill_down_key\n       , summary_sk\n\nunion all\nselect\n       summary_sk\n       , data_source\n       , table_name\n       , claim_type\n       , field_name\n       , bucket_name\n       , invalid_reason\n       , drill_down_key\n       , drill_down_value as drill_down_value\n       , field_value as field_value\n       , frequency\n       , '2025-06-03 19:49:40.396647+00:00'\nfrom ranked_examples\nwhere rn <= 5 -- 5 Example claims per unique SK / field value\nunion all\nselect\n       summary_sk\n       , data_source\n       , table_name\n       , claim_type\n       , field_name\n       , bucket_name\n       , invalid_reason\n       , drill_down_key\n       , 'All Others' as drill_down_value\n       , field_value as field_value\n       , sum(frequency) as frequency\n       , '2025-06-03 19:49:40.396647+00:00'\nfrom ranked_examples\nwhere rn > 5 -- Aggregating all other rows\ngroup by\n    summary_sk\n    , data_source\n    , table_name\n    , claim_type\n    , field_name\n    , bucket_name\n    , invalid_reason\n    , drill_down_key\n    , field_value", "relation_name": "tuva.data_quality.data_quality_claims_for_pbi", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:20.413597Z", "completed_at": "2025-06-03T19:50:20.425215Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:20.425668Z", "completed_at": "2025-06-03T19:50:20.425674Z"}], "thread_id": "Thread-4", "execution_time": 0.02022695541381836, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.normalized_input__int_diagnosis_code_final", "compiled": true, "compiled_code": "\n\n\nselect\n    claim_id\n    , data_source\n    , max(case when column_name = 'diagnosis_code_1' then normalized_code else null end) as diagnosis_code_1\n    , max(case when column_name = 'diagnosis_code_2' then normalized_code else null end) as diagnosis_code_2\n    , max(case when column_name = 'diagnosis_code_3' then normalized_code else null end) as diagnosis_code_3\n    , max(case when column_name = 'diagnosis_code_4' then normalized_code else null end) as diagnosis_code_4\n    , max(case when column_name = 'diagnosis_code_5' then normalized_code else null end) as diagnosis_code_5\n    , max(case when column_name = 'diagnosis_code_6' then normalized_code else null end) as diagnosis_code_6\n    , max(case when column_name = 'diagnosis_code_7' then normalized_code else null end) as diagnosis_code_7\n    , max(case when column_name = 'diagnosis_code_8' then normalized_code else null end) as diagnosis_code_8\n    , max(case when column_name = 'diagnosis_code_9' then normalized_code else null end) as diagnosis_code_9\n    , max(case when column_name = 'diagnosis_code_10' then normalized_code else null end) as diagnosis_code_10\n    , max(case when column_name = 'diagnosis_code_11' then normalized_code else null end) as diagnosis_code_11\n    , max(case when column_name = 'diagnosis_code_12' then normalized_code else null end) as diagnosis_code_12\n    , max(case when column_name = 'diagnosis_code_13' then normalized_code else null end) as diagnosis_code_13\n    , max(case when column_name = 'diagnosis_code_14' then normalized_code else null end) as diagnosis_code_14\n    , max(case when column_name = 'diagnosis_code_15' then normalized_code else null end) as diagnosis_code_15\n    , max(case when column_name = 'diagnosis_code_16' then normalized_code else null end) as diagnosis_code_16\n    , max(case when column_name = 'diagnosis_code_17' then normalized_code else null end) as diagnosis_code_17\n    , max(case when column_name = 'diagnosis_code_18' then normalized_code else null end) as diagnosis_code_18\n    , max(case when column_name = 'diagnosis_code_19' then normalized_code else null end) as diagnosis_code_19\n    , max(case when column_name = 'diagnosis_code_20' then normalized_code else null end) as diagnosis_code_20\n    , max(case when column_name = 'diagnosis_code_21' then normalized_code else null end) as diagnosis_code_21\n    , max(case when column_name = 'diagnosis_code_22' then normalized_code else null end) as diagnosis_code_22\n    , max(case when column_name = 'diagnosis_code_23' then normalized_code else null end) as diagnosis_code_23\n    , max(case when column_name = 'diagnosis_code_24' then normalized_code else null end) as diagnosis_code_24\n    , max(case when column_name = 'diagnosis_code_25' then normalized_code else null end) as diagnosis_code_25\n    , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom tuva.claims_preprocessing._int_normalized_input_diagnosis_code_voting\nwhere (occurrence_row_count = 1\n        and occurrence_count > next_occurrence_count)\ngroup by\n    claim_id\n    , data_source", "relation_name": "tuva.claims_preprocessing._int_normalized_input_diagnosis_code_final", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:20.406668Z", "completed_at": "2025-06-03T19:50:20.425447Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:20.426240Z", "completed_at": "2025-06-03T19:50:20.426244Z"}], "thread_id": "Thread-1", "execution_time": 0.021070003509521484, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.data_quality__data_quality_detail", "compiled": true, "compiled_code": "\n\nselect\n    data_source\n\t, source_date\n\t, table_name\n\t, drill_down_key\n\t, drill_down_value\n\t, claim_type\n\t, field_name\n\t, bucket_name\n\t, invalid_reason\n\t, field_value\n\t, summary_sk\n\t, '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom tuva.data_quality.data_quality_claims_detail\n\nunion all\n\nselect\n    data_source\n\t, source_date\n\t, table_name\n\t, drill_down_key\n\t, drill_down_value\n\t, 'CLINICAL' as claim_type\n\t, field_name\n\t, bucket_name\n\t, invalid_reason\n\t, field_value\n\t, summary_sk\n\t, '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom tuva.data_quality.data_quality_clinical_detail\n\n", "relation_name": "tuva.data_quality.data_quality_detail", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:20.420133Z", "completed_at": "2025-06-03T19:50:20.426051Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:20.426847Z", "completed_at": "2025-06-03T19:50:20.426851Z"}], "thread_id": "Thread-3", "execution_time": 0.007261991500854492, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.normalized_input__int_present_on_admit_final", "compiled": true, "compiled_code": "\n\nselect\n    claim_id\n    , data_source\n    , max(case when column_name = 'DIAGNOSIS_POA_1' then normalized_code else null end) as diagnosis_poa_1\n    , max(case when column_name = 'DIAGNOSIS_POA_2' then normalized_code else null end) as diagnosis_poa_2\n    , max(case when column_name = 'DIAGNOSIS_POA_3' then normalized_code else null end) as diagnosis_poa_3\n    , max(case when column_name = 'DIAGNOSIS_POA_4' then normalized_code else null end) as diagnosis_poa_4\n    , max(case when column_name = 'DIAGNOSIS_POA_5' then normalized_code else null end) as diagnosis_poa_5\n    , max(case when column_name = 'DIAGNOSIS_POA_6' then normalized_code else null end) as diagnosis_poa_6\n    , max(case when column_name = 'DIAGNOSIS_POA_7' then normalized_code else null end) as diagnosis_poa_7\n    , max(case when column_name = 'DIAGNOSIS_POA_8' then normalized_code else null end) as diagnosis_poa_8\n    , max(case when column_name = 'DIAGNOSIS_POA_9' then normalized_code else null end) as diagnosis_poa_9\n    , max(case when column_name = 'DIAGNOSIS_POA_10' then normalized_code else null end) as diagnosis_poa_10\n    , max(case when column_name = 'DIAGNOSIS_POA_11' then normalized_code else null end) as diagnosis_poa_11\n    , max(case when column_name = 'DIAGNOSIS_POA_12' then normalized_code else null end) as diagnosis_poa_12\n    , max(case when column_name = 'DIAGNOSIS_POA_13' then normalized_code else null end) as diagnosis_poa_13\n    , max(case when column_name = 'DIAGNOSIS_POA_14' then normalized_code else null end) as diagnosis_poa_14\n    , max(case when column_name = 'DIAGNOSIS_POA_15' then normalized_code else null end) as diagnosis_poa_15\n    , max(case when column_name = 'DIAGNOSIS_POA_16' then normalized_code else null end) as diagnosis_poa_16\n    , max(case when column_name = 'DIAGNOSIS_POA_17' then normalized_code else null end) as diagnosis_poa_17\n    , max(case when column_name = 'DIAGNOSIS_POA_18' then normalized_code else null end) as diagnosis_poa_18\n    , max(case when column_name = 'DIAGNOSIS_POA_19' then normalized_code else null end) as diagnosis_poa_19\n    , max(case when column_name = 'DIAGNOSIS_POA_20' then normalized_code else null end) as diagnosis_poa_20\n    , max(case when column_name = 'DIAGNOSIS_POA_21' then normalized_code else null end) as diagnosis_poa_21\n    , max(case when column_name = 'DIAGNOSIS_POA_22' then normalized_code else null end) as diagnosis_poa_22\n    , max(case when column_name = 'DIAGNOSIS_POA_23' then normalized_code else null end) as diagnosis_poa_23\n    , max(case when column_name = 'DIAGNOSIS_POA_24' then normalized_code else null end) as diagnosis_poa_24\n    , max(case when column_name = 'DIAGNOSIS_POA_25' then normalized_code else null end) as diagnosis_poa_25\n    , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom tuva.claims_preprocessing._int_normalized_input_present_on_admit_voting\nwhere (occurrence_row_count = 1\n        and occurrence_count > next_occurrence_count)\ngroup by\n    claim_id\n    , data_source", "relation_name": "tuva.claims_preprocessing._int_normalized_input_present_on_admit_final", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:20.428832Z", "completed_at": "2025-06-03T19:50:20.447591Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:20.447869Z", "completed_at": "2025-06-03T19:50:20.447875Z"}], "thread_id": "Thread-4", "execution_time": 0.020496845245361328, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.normalized_input__int_procedure_code_final", "compiled": true, "compiled_code": "\n\nselect\n    claim_id\n    , data_source\n    , max(case when lower(column_name) = 'procedure_code_1' then normalized_code else null end) as procedure_code_1\n    , max(case when lower(column_name) = 'procedure_code_2' then normalized_code else null end) as procedure_code_2\n    , max(case when lower(column_name) = 'procedure_code_3' then normalized_code else null end) as procedure_code_3\n    , max(case when lower(column_name) = 'procedure_code_4' then normalized_code else null end) as procedure_code_4\n    , max(case when lower(column_name) = 'procedure_code_5' then normalized_code else null end) as procedure_code_5\n    , max(case when lower(column_name) = 'procedure_code_6' then normalized_code else null end) as procedure_code_6\n    , max(case when lower(column_name) = 'procedure_code_7' then normalized_code else null end) as procedure_code_7\n    , max(case when lower(column_name) = 'procedure_code_8' then normalized_code else null end) as procedure_code_8\n    , max(case when lower(column_name) = 'procedure_code_9' then normalized_code else null end) as procedure_code_9\n    , max(case when lower(column_name) = 'procedure_code_10' then normalized_code else null end) as procedure_code_10\n    , max(case when lower(column_name) = 'procedure_code_11' then normalized_code else null end) as procedure_code_11\n    , max(case when lower(column_name) = 'procedure_code_12' then normalized_code else null end) as procedure_code_12\n    , max(case when lower(column_name) = 'procedure_code_13' then normalized_code else null end) as procedure_code_13\n    , max(case when lower(column_name) = 'procedure_code_14' then normalized_code else null end) as procedure_code_14\n    , max(case when lower(column_name) = 'procedure_code_15' then normalized_code else null end) as procedure_code_15\n    , max(case when lower(column_name) = 'procedure_code_16' then normalized_code else null end) as procedure_code_16\n    , max(case when lower(column_name) = 'procedure_code_17' then normalized_code else null end) as procedure_code_17\n    , max(case when lower(column_name) = 'procedure_code_18' then normalized_code else null end) as procedure_code_18\n    , max(case when lower(column_name) = 'procedure_code_19' then normalized_code else null end) as procedure_code_19\n    , max(case when lower(column_name) = 'procedure_code_20' then normalized_code else null end) as procedure_code_20\n    , max(case when lower(column_name) = 'procedure_code_21' then normalized_code else null end) as procedure_code_21\n    , max(case when lower(column_name) = 'procedure_code_22' then normalized_code else null end) as procedure_code_22\n    , max(case when lower(column_name) = 'procedure_code_23' then normalized_code else null end) as procedure_code_23\n    , max(case when lower(column_name) = 'procedure_code_24' then normalized_code else null end) as procedure_code_24\n    , max(case when lower(column_name) = 'procedure_code_25' then normalized_code else null end) as procedure_code_25\n    , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom tuva.claims_preprocessing._int_normalized_input_procedure_code_voting\nwhere (occurrence_row_count = 1\n        and occurrence_count > next_occurrence_count)\ngroup by\n    claim_id\n    , data_source", "relation_name": "tuva.claims_preprocessing._int_normalized_input_procedure_code_final", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:20.434645Z", "completed_at": "2025-06-03T19:50:20.448258Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:20.448733Z", "completed_at": "2025-06-03T19:50:20.448738Z"}], "thread_id": "Thread-1", "execution_time": 0.020837068557739258, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.normalized_input__int_procedure_date_final", "compiled": true, "compiled_code": "\n\nselect\n    claim_id\n    , data_source\n    , max(case when lower(column_name) = 'procedure_date_1' then normalized_code else null end) as procedure_date_1\n    , max(case when lower(column_name) = 'procedure_date_2' then normalized_code else null end) as procedure_date_2\n    , max(case when lower(column_name) = 'procedure_date_3' then normalized_code else null end) as procedure_date_3\n    , max(case when lower(column_name) = 'procedure_date_4' then normalized_code else null end) as procedure_date_4\n    , max(case when lower(column_name) = 'procedure_date_5' then normalized_code else null end) as procedure_date_5\n    , max(case when lower(column_name) = 'procedure_date_6' then normalized_code else null end) as procedure_date_6\n    , max(case when lower(column_name) = 'procedure_date_7' then normalized_code else null end) as procedure_date_7\n    , max(case when lower(column_name) = 'procedure_date_8' then normalized_code else null end) as procedure_date_8\n    , max(case when lower(column_name) = 'procedure_date_9' then normalized_code else null end) as procedure_date_9\n    , max(case when lower(column_name) = 'procedure_date_10' then normalized_code else null end) as procedure_date_10\n    , max(case when lower(column_name) = 'procedure_date_11' then normalized_code else null end) as procedure_date_11\n    , max(case when lower(column_name) = 'procedure_date_12' then normalized_code else null end) as procedure_date_12\n    , max(case when lower(column_name) = 'procedure_date_13' then normalized_code else null end) as procedure_date_13\n    , max(case when lower(column_name) = 'procedure_date_14' then normalized_code else null end) as procedure_date_14\n    , max(case when lower(column_name) = 'procedure_date_15' then normalized_code else null end) as procedure_date_15\n    , max(case when lower(column_name) = 'procedure_date_16' then normalized_code else null end) as procedure_date_16\n    , max(case when lower(column_name) = 'procedure_date_17' then normalized_code else null end) as procedure_date_17\n    , max(case when lower(column_name) = 'procedure_date_18' then normalized_code else null end) as procedure_date_18\n    , max(case when lower(column_name) = 'procedure_date_19' then normalized_code else null end) as procedure_date_19\n    , max(case when lower(column_name) = 'procedure_date_20' then normalized_code else null end) as procedure_date_20\n    , max(case when lower(column_name) = 'procedure_date_21' then normalized_code else null end) as procedure_date_21\n    , max(case when lower(column_name) = 'procedure_date_22' then normalized_code else null end) as procedure_date_22\n    , max(case when lower(column_name) = 'procedure_date_23' then normalized_code else null end) as procedure_date_23\n    , max(case when lower(column_name) = 'procedure_date_24' then normalized_code else null end) as procedure_date_24\n    , max(case when lower(column_name) = 'procedure_date_25' then normalized_code else null end) as procedure_date_25\n    , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom tuva.claims_preprocessing._int_normalized_input_procedure_date_voting\nwhere (occurrence_row_count = 1\n        and occurrence_count > next_occurrence_count)\ngroup by\n    claim_id\n    , data_source", "relation_name": "tuva.claims_preprocessing._int_normalized_input_procedure_date_final", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:20.439626Z", "completed_at": "2025-06-03T19:50:20.449114Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:20.449799Z", "completed_at": "2025-06-03T19:50:20.449803Z"}], "thread_id": "Thread-3", "execution_time": 0.021448135375976562, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.claims_enrollment__flag_rx_claims_with_enrollment", "compiled": true, "compiled_code": "\n\n\nwith claim_dates as (\n    select\n        claim_id\n        , claim_line_number\n        , person_id\n        , member_id\n        , payer\n        , plan\n        , data_source\n        , date_part('year', paid_date) || \n\n    case when 2 = 0\n        then ''\n    else\n        right(\n            '0' || date_part('month', paid_date),\n            2\n        )\n    end as paid_year_month\n    from tuva.claims_preprocessing.normalized_input_pharmacy_claim\n)\n\nselect distinct\n     claim.claim_id\n    , claim.claim_line_number\n    , claim.person_id\n    , claim.member_id\n    , claim.payer\n    , claim.plan\n    , claim.data_source\n    , mm.member_month_key\n    , claim.paid_year_month\n    , cast('2025-06-03 19:49:40.396647+00:00' as timestamp) as tuva_last_run\nfrom claim_dates as claim\ninner join tuva.claims_preprocessing.member_months as mm\n    on mm.person_id = claim.person_id\n    and mm.member_id = claim.member_id\n    and mm.payer = claim.payer\n    and mm.plan = claim.plan\n    and mm.year_month = claim.paid_year_month\n    and mm.data_source = claim.data_source", "relation_name": "tuva.claims_preprocessing.flag_rx_claims_with_enrollment", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:20.450839Z", "completed_at": "2025-06-03T19:50:20.472819Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:20.473493Z", "completed_at": "2025-06-03T19:50:20.473499Z"}], "thread_id": "Thread-4", "execution_time": 0.02425408363342285, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.core__stg_claims_member_months", "compiled": true, "compiled_code": "\n\n\nwith  __dbt__cte__financial_pmpm__stg_provider_attribution as (\n\n\nselect\n      cast(person_id as TEXT) as person_id\n    , cast(year_month as TEXT) as year_month\n    , cast(payer as TEXT) as payer\n    , plan\n    , cast(data_source as TEXT) as data_source\n    , cast(payer_attributed_provider as TEXT) as payer_attributed_provider\n    , cast(payer_attributed_provider_practice as TEXT) as payer_attributed_provider_practice\n    , cast(payer_attributed_provider_organization as TEXT) as payer_attributed_provider_organization\n    , cast(payer_attributed_provider_lob as TEXT) as payer_attributed_provider_lob\n    , cast(custom_attributed_provider as TEXT) as custom_attributed_provider\n    , cast(custom_attributed_provider_practice as TEXT) as custom_attributed_provider_practice\n    , cast(custom_attributed_provider_organization as TEXT) as custom_attributed_provider_organization\n    , cast(custom_attributed_provider_lob as TEXT) as custom_attributed_provider_lob\n    , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom tuva.input_layer.input_layer__provider_attribution\n\n\n), final_before_attribution_fields as (\n  select distinct\n      a.member_month_key\n    , a.person_id\n    , a.member_id\n    , a.year_month\n    , a.payer\n    , a.plan\n    , data_source\n  from tuva.claims_preprocessing.member_months as a\n)\n\nselect\n    a.member_month_key\n  , a.person_id\n  , a.member_id\n  , a.year_month\n  , a.payer\n  , a.plan\n  , a.data_source\n  , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\n\n  , b.payer_attributed_provider\n  , b.payer_attributed_provider_practice\n  , b.payer_attributed_provider_organization\n  , b.payer_attributed_provider_lob\n  , b.custom_attributed_provider\n  , b.custom_attributed_provider_practice\n  , b.custom_attributed_provider_organization\n  , b.custom_attributed_provider_lob\n\nfrom final_before_attribution_fields as a\nleft outer join __dbt__cte__financial_pmpm__stg_provider_attribution as b\non a.person_id = b.person_id\nand a.year_month = b.year_month\nand a.payer = b.payer\nand a.plan = b.plan\nand a.data_source = b.data_source", "relation_name": "tuva.core._stg_claims_member_months", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:20.462085Z", "completed_at": "2025-06-03T19:50:20.473939Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:20.474487Z", "completed_at": "2025-06-03T19:50:20.474491Z"}], "thread_id": "Thread-1", "execution_time": 0.024157047271728516, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.core__eligibility", "compiled": true, "compiled_code": "\n\nselect * from tuva.core._stg_claims_eligibility", "relation_name": "tuva.core.eligibility", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:20.466522Z", "completed_at": "2025-06-03T19:50:20.474839Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:20.475552Z", "completed_at": "2025-06-03T19:50:20.475555Z"}], "thread_id": "Thread-3", "execution_time": 0.013826608657836914, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.core__patient", "compiled": true, "compiled_code": "\n\nselect * from tuva.core._stg_claims_patient\nunion all\nselect * from tuva.core._stg_clinical_patient\n\n", "relation_name": "tuva.core.patient", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:20.476693Z", "completed_at": "2025-06-03T19:50:20.495668Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:20.495914Z", "completed_at": "2025-06-03T19:50:20.495920Z"}], "thread_id": "Thread-4", "execution_time": 0.020939111709594727, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_utils_unique_combination_of_columns_core__person_id_crosswalk_person_id__patient_id__member_id__payer___quote_column_plan___data_source.83bbec69b8", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith validation_errors as (\n\n    select\n        person_id, patient_id, member_id, payer, plan, data_source\n    from tuva.core.person_id_crosswalk\n    group by person_id, patient_id, member_id, payer, plan, data_source\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:20.482695Z", "completed_at": "2025-06-03T19:50:20.502171Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:20.502436Z", "completed_at": "2025-06-03T19:50:20.502440Z"}], "thread_id": "Thread-1", "execution_time": 0.02630019187927246, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.data_quality__data_quality_for_pbi", "compiled": true, "compiled_code": "\n\nselect\n    data_source\n    , field_name\n    , table_name\n    , claim_type\n    , bucket_name\n    , field_value\n    , drill_down_key\n    , drill_down_value\n    , invalid_reason\n    , summary_sk\n    , frequency\n\t, '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom tuva.data_quality.data_quality_claims_for_pbi\n\nunion all\n\nselect\n    data_source\n    , field_name\n    , table_name\n    , 'CLINICAL' as claim_type\n    , bucket_name\n    , field_value\n    , drill_down_key\n    , drill_down_value\n    , invalid_reason\n    , summary_sk\n    , frequency\n\t, '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom tuva.data_quality.data_quality_clinical_for_pbi\n\n", "relation_name": "tuva.data_quality.data_quality_for_pbi", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:20.496938Z", "completed_at": "2025-06-03T19:50:20.503315Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:20.503918Z", "completed_at": "2025-06-03T19:50:20.503922Z"}], "thread_id": "Thread-4", "execution_time": 0.007469892501831055, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.data_quality__quality_trend", "compiled": true, "compiled_code": "\n\n\nwith cte as (\nselect try_cast( d.source_date as date ) as source_date_type\n    , summary_sk\n    , SUM(case when bucket_name = 'valid' then 1 else 0 end) as valid_num\n    , SUM(case when bucket_name <> 'null' then 1 else 0 end) as fill_num\n    , COUNT(drill_down_value) as denom\nfrom tuva.data_quality.data_quality_detail as d\ngroup by\n    try_cast( d.source_date as date )\n    , summary_sk\n\n)\n\nselect\n      c.first_day_of_month\n    , summary_sk\n    , SUM(valid_num) as valid_num\n    , SUM(fill_num) as fill_num\n    , SUM(denom) as denom\nfrom cte\nleft outer join tuva.reference_data.calendar as c on cte.source_date_type = c.full_date\ngroup by\n      c.first_day_of_month\n    , summary_sk", "relation_name": "tuva.data_quality.quality_trend", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:20.489348Z", "completed_at": "2025-06-03T19:50:20.503513Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:20.504280Z", "completed_at": "2025-06-03T19:50:20.504284Z"}], "thread_id": "Thread-3", "execution_time": 0.02192401885986328, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.data_quality__crosswalk_field_to_mart_sk", "compiled": true, "compiled_code": "\n\n\n\nwith results as (\n\n    select distinct\n        table_name as input_layer_table_name\n      , claim_type\n      , field_name\n      , cast(null as TEXT) as mart_name\n    from tuva.data_quality.data_quality_detail\n\n    union all\n\n    select\n        input_layer_table_name\n      , claim_type\n      , field_name\n      , mart_name\n    from tuva.data_quality._value_set_crosswalk_field_to_mart\n\n)\n\n, final as (\n\n    select\n        input_layer_table_name\n      , claim_type\n      , field_name\n      , mart_name\n      , dense_rank() over (\norder by input_layer_table_name, claim_type, field_name) as table_claim_type_field_sk\n\t, '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\n    from results\n    group by\n        input_layer_table_name\n      , claim_type\n      , field_name\n      , mart_name\n\n)\n\nselect * from final", "relation_name": "tuva.data_quality.crosswalk_field_to_mart_sk", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:20.645119Z", "completed_at": "2025-06-03T19:50:20.699072Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:20.699329Z", "completed_at": "2025-06-03T19:50:20.699336Z"}], "thread_id": "Thread-3", "execution_time": 0.12709593772888184, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.core__member_months", "compiled": true, "compiled_code": "\n\nselect * from tuva.core._stg_claims_member_months", "relation_name": "tuva.core.member_months", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:20.623057Z", "completed_at": "2025-06-03T19:50:20.701125Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:20.702139Z", "completed_at": "2025-06-03T19:50:20.702144Z"}], "thread_id": "Thread-4", "execution_time": 0.14868593215942383, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.core__stg_claims_pharmacy_claim", "compiled": true, "compiled_code": "\n\n-- *************************************************\n-- This dbt model creates the pharmacy_claim\n-- table in core.\n-- *************************************************\n\nselect\n    cast(pharm.claim_id as TEXT) || '-' || cast(pharm.claim_line_number as TEXT) || '-' || cast(pharm.data_source as TEXT) as pharmacy_claim_id\n       , cast(pharm.claim_id as TEXT) as claim_id\n       , cast(pharm.claim_line_number as integer) as claim_line_number\n       , cast(pharm.person_id as TEXT) as person_id\n       , cast(pharm.member_id as TEXT) as member_id\n       , cast(pharm.payer as TEXT) as payer\n       , pharm.plan\n       , cast(pharm.prescribing_provider_id as TEXT) as prescribing_provider_id\n       , cast(pharm.prescribing_provider_name as TEXT) as prescribing_provider_name\n       , cast(pharm.dispensing_provider_id as TEXT) as dispensing_provider_id\n       , cast(pharm.dispensing_provider_name as TEXT) as dispensing_provider_name\n       , cast(pharm.dispensing_date as date) as dispensing_date\n       , cast(pharm.ndc_code as TEXT) as ndc_code\n       , cast(pharm.ndc_description as TEXT) as ndc_description\n       , cast(pharm.quantity as integer) as quantity\n       , cast(pharm.days_supply as integer) as days_supply\n       , cast(pharm.refills as integer) as refills\n       , cast(pharm.paid_date as date) as paid_date\n       , cast(pharm.paid_amount as numeric(28,6)) as paid_amount\n       , cast(pharm.allowed_amount as numeric(28,6)) as allowed_amount\n       , cast(pharm.charge_amount as numeric(28,6)) as charge_amount\n       , cast(pharm.coinsurance_amount as numeric(28,6)) as coinsurance_amount\n       , cast(pharm.copayment_amount as numeric(28,6)) as copayment_amount\n       , cast(pharm.deductible_amount as numeric(28,6)) as deductible_amount\n       , cast(pharm.in_network_flag as int) as in_network_flag\n       , cast(\n       case\n           when enroll.claim_id is not null then 1\n              else 0\n       end as int) as enrollment_flag\n       , enroll.member_month_key\n       , cast(pharm.data_source as TEXT) as data_source\n       , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom tuva.claims_preprocessing.normalized_input_pharmacy_claim as pharm\nleft outer join tuva.claims_preprocessing.flag_rx_claims_with_enrollment as enroll\n  on pharm.claim_id = enroll.claim_id\n  and pharm.claim_line_number = enroll.claim_line_number\n  and pharm.person_id = enroll.person_id\n  and pharm.payer = enroll.payer\n  and pharm.plan = enroll.plan\n  and pharm.data_source = enroll.data_source", "relation_name": "tuva.core._stg_claims_pharmacy_claim", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:20.504617Z", "completed_at": "2025-06-03T19:50:20.703052Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:20.709360Z", "completed_at": "2025-06-03T19:50:20.709366Z"}], "thread_id": "Thread-1", "execution_time": 0.20636200904846191, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.normalized_input__medical_claim", "compiled": true, "compiled_code": "\n\n\nwith __dbt__cte__normalized_input__stg_medical_claim as (\n\n\nselect\n      claim_id\n    , claim_line_number\n    , claim_type\n    , person_id\n    , member_id\n    , payer\n    , plan\n    , claim_start_date\n    , claim_end_date\n    , claim_line_start_date\n    , claim_line_end_date\n    , admission_date\n    , discharge_date\n    , admit_source_code\n    , admit_type_code\n    , discharge_disposition_code\n    , place_of_service_code\n    , bill_type_code\n    , drg_code_type\n    , drg_code\n    , revenue_center_code\n    , service_unit_quantity\n    , hcpcs_code\n    , hcpcs_modifier_1\n    , hcpcs_modifier_2\n    , hcpcs_modifier_3\n    , hcpcs_modifier_4\n    , hcpcs_modifier_5\n    , rendering_npi\n    , rendering_tin\n    , billing_npi\n    , billing_tin\n    , facility_npi\n    , paid_date\n    , paid_amount\n    , allowed_amount\n    , charge_amount\n    , coinsurance_amount\n    , copayment_amount\n    , deductible_amount\n    , total_cost_amount\n    , diagnosis_code_type\n    , diagnosis_code_1\n    , diagnosis_code_2\n    , diagnosis_code_3\n    , diagnosis_code_4\n    , diagnosis_code_5\n    , diagnosis_code_6\n    , diagnosis_code_7\n    , diagnosis_code_8\n    , diagnosis_code_9\n    , diagnosis_code_10\n    , diagnosis_code_11\n    , diagnosis_code_12\n    , diagnosis_code_13\n    , diagnosis_code_14\n    , diagnosis_code_15\n    , diagnosis_code_16\n    , diagnosis_code_17\n    , diagnosis_code_18\n    , diagnosis_code_19\n    , diagnosis_code_20\n    , diagnosis_code_21\n    , diagnosis_code_22\n    , diagnosis_code_23\n    , diagnosis_code_24\n    , diagnosis_code_25\n    , diagnosis_poa_1\n    , diagnosis_poa_2\n    , diagnosis_poa_3\n    , diagnosis_poa_4\n    , diagnosis_poa_5\n    , diagnosis_poa_6\n    , diagnosis_poa_7\n    , diagnosis_poa_8\n    , diagnosis_poa_9\n    , diagnosis_poa_10\n    , diagnosis_poa_11\n    , diagnosis_poa_12\n    , diagnosis_poa_13\n    , diagnosis_poa_14\n    , diagnosis_poa_15\n    , diagnosis_poa_16\n    , diagnosis_poa_17\n    , diagnosis_poa_18\n    , diagnosis_poa_19\n    , diagnosis_poa_20\n    , diagnosis_poa_21\n    , diagnosis_poa_22\n    , diagnosis_poa_23\n    , diagnosis_poa_24\n    , diagnosis_poa_25\n    , procedure_code_type\n    , procedure_code_1\n    , procedure_code_2\n    , procedure_code_3\n    , procedure_code_4\n    , procedure_code_5\n    , procedure_code_6\n    , procedure_code_7\n    , procedure_code_8\n    , procedure_code_9\n    , procedure_code_10\n    , procedure_code_11\n    , procedure_code_12\n    , procedure_code_13\n    , procedure_code_14\n    , procedure_code_15\n    , procedure_code_16\n    , procedure_code_17\n    , procedure_code_18\n    , procedure_code_19\n    , procedure_code_20\n    , procedure_code_21\n    , procedure_code_22\n    , procedure_code_23\n    , procedure_code_24\n    , procedure_code_25\n    , procedure_date_1\n    , procedure_date_2\n    , procedure_date_3\n    , procedure_date_4\n    , procedure_date_5\n    , procedure_date_6\n    , procedure_date_7\n    , procedure_date_8\n    , procedure_date_9\n    , procedure_date_10\n    , procedure_date_11\n    , procedure_date_12\n    , procedure_date_13\n    , procedure_date_14\n    , procedure_date_15\n    , procedure_date_16\n    , procedure_date_17\n    , procedure_date_18\n    , procedure_date_19\n    , procedure_date_20\n    , procedure_date_21\n    , procedure_date_22\n    , procedure_date_23\n    , procedure_date_24\n    , procedure_date_25\n    , in_network_flag\n    , data_source\n    , file_name\n    , file_date\n    , ingest_datetime\nfrom tuva.input_layer.input_layer__medical_claim\n) select\n\tcast(med.claim_id as TEXT) as claim_id\n\t, cast(med.claim_line_number as int) as claim_line_number\n\t, cast(med.claim_type as TEXT) as claim_type\n\t, cast(med.person_id as TEXT) as person_id\n\t, cast(med.member_id as TEXT) as member_id\n\t, cast(med.payer as TEXT) as payer\n    , cast(med.plan as TEXT) as plan\n\t, cast(coalesce(dates.minimum_claim_start_date, undetermined.claim_start_date) as date) as claim_start_date\n\t, cast(coalesce(dates.maximum_claim_end_date, undetermined.claim_start_date) as date) as claim_end_date\n\t, cast(coalesce(claim_line_dates.normalized_claim_line_start_date, undetermined.claim_line_start_date) as date) as claim_line_start_date\n\t, cast(coalesce(claim_line_dates.normalized_claim_line_end_date, undetermined.claim_line_end_date) as date) as claim_line_end_date\n\t, cast(coalesce(dates.minimum_admission_date, undetermined.admission_date) as date) as admission_date\n\t, cast(coalesce(dates.maximum_discharge_date, undetermined.discharge_date) as date) as discharge_date\n\t, cast(coalesce(ad_source.normalized_code, undetermined.admit_source_code) as TEXT) as admit_source_code\n    , cast(coalesce(ad_source.normalized_description, undetermined.admit_source_description) as TEXT) as admit_source_description\n\t, cast(coalesce(ad_type.normalized_code, undetermined.admit_type_code) as TEXT) as admit_type_code\n    , cast(coalesce(ad_type.normalized_description, undetermined.admit_type_description) as TEXT) as admit_type_description\n\t, cast(coalesce(disch_disp.normalized_code, undetermined.discharge_disposition_code) as TEXT) as discharge_disposition_code\n    , cast(coalesce(disch_disp.normalized_description, undetermined.discharge_disposition_description) as TEXT) as discharge_disposition_description\n\t, cast(coalesce(pos.normalized_code, undetermined.place_of_service_code) as TEXT) as place_of_service_code\n    , cast(coalesce(pos.normalized_description, undetermined.place_of_service_description) as TEXT) as place_of_service_description\n\t, cast(coalesce(bill.normalized_code, undetermined.bill_type_code) as TEXT) as bill_type_code\n    , cast(coalesce(bill.normalized_description, undetermined.bill_type_description) as TEXT) as bill_type_description\n\t, cast(med.drg_code_type as TEXT) as drg_code_type\n\t, cast(coalesce(drg.normalized_code, undetermined.drg_code) as TEXT) as drg_code\n    , cast(coalesce(drg.normalized_description, undetermined.drg_description) as TEXT) as drg_description\n\t, cast(coalesce(rev.normalized_code, undetermined.revenue_center_code) as TEXT) as revenue_center_code\n    , cast(coalesce(rev.normalized_description, undetermined.revenue_center_description) as TEXT) as revenue_center_description\n\t, cast(med.service_unit_quantity as numeric(28,6)) as service_unit_quantity\n\t, cast(med.hcpcs_code as TEXT) as hcpcs_code\n\t, cast(med.hcpcs_modifier_1 as TEXT) as hcpcs_modifier_1\n\t, cast(med.hcpcs_modifier_2 as TEXT) as hcpcs_modifier_2\n\t, cast(med.hcpcs_modifier_3 as TEXT) as hcpcs_modifier_3\n\t, cast(med.hcpcs_modifier_4 as TEXT) as hcpcs_modifier_4\n\t, cast(med.hcpcs_modifier_5 as TEXT) as hcpcs_modifier_5\n\t, cast(coalesce(med_npi.normalized_rendering_npi, undetermined.rendering_npi) as TEXT) as rendering_id\n    , cast(med.rendering_tin as TEXT) as rendering_tin\n    , cast(coalesce(med_npi.normalized_rendering_name, undetermined.rendering_name) as TEXT) as rendering_name\n\t, cast(coalesce(med_npi.normalized_billing_npi, undetermined.billing_npi) as TEXT) as billing_id\n    , cast(med.billing_tin as TEXT) as billing_tin\n    , cast(coalesce(med_npi.normalized_billing_name, undetermined.billing_name) as TEXT) as billing_name\n\t, cast(coalesce(med_npi.normalized_facility_npi, undetermined.facility_npi) as TEXT) as facility_id\n\t, cast(coalesce(med_npi.normalized_facility_name, undetermined.facility_name) as TEXT) as facility_name\n    , cast(med.paid_date as date) as paid_date\n\t, cast(med.paid_amount as numeric(28,6)) as paid_amount\n\t, cast(med.allowed_amount as numeric(28,6)) as allowed_amount\n\t, cast(med.charge_amount as numeric(28,6)) as charge_amount\n\t, cast(med.coinsurance_amount as numeric(28,6)) as coinsurance_amount\n\t, cast(med.copayment_amount as numeric(28,6)) as copayment_amount\n\t, cast(med.deductible_amount as numeric(28,6)) as deductible_amount\n\t, cast(med.total_cost_amount as numeric(28,6)) as total_cost_amount\n\t, cast(med.diagnosis_code_type as TEXT) as diagnosis_code_type\n\t, cast(coalesce(dx_code.diagnosis_code_1, undetermined.diagnosis_code_1) as TEXT) as diagnosis_code_1\n\t, cast(coalesce(dx_code.diagnosis_code_2, undetermined.diagnosis_code_2) as TEXT) as diagnosis_code_2\n\t, cast(coalesce(dx_code.diagnosis_code_3, undetermined.diagnosis_code_3) as TEXT) as diagnosis_code_3\n\t, cast(coalesce(dx_code.diagnosis_code_4, undetermined.diagnosis_code_4) as TEXT) as diagnosis_code_4\n\t, cast(coalesce(dx_code.diagnosis_code_5, undetermined.diagnosis_code_5) as TEXT) as diagnosis_code_5\n\t, cast(coalesce(dx_code.diagnosis_code_6, undetermined.diagnosis_code_6) as TEXT) as diagnosis_code_6\n\t, cast(coalesce(dx_code.diagnosis_code_7, undetermined.diagnosis_code_7) as TEXT) as diagnosis_code_7\n\t, cast(coalesce(dx_code.diagnosis_code_8, undetermined.diagnosis_code_8) as TEXT) as diagnosis_code_8\n\t, cast(coalesce(dx_code.diagnosis_code_9, undetermined.diagnosis_code_9) as TEXT) as diagnosis_code_9\n\t, cast(coalesce(dx_code.diagnosis_code_10, undetermined.diagnosis_code_10) as TEXT) as diagnosis_code_10\n\t, cast(coalesce(dx_code.diagnosis_code_11, undetermined.diagnosis_code_11) as TEXT) as diagnosis_code_11\n\t, cast(coalesce(dx_code.diagnosis_code_12, undetermined.diagnosis_code_12) as TEXT) as diagnosis_code_12\n\t, cast(coalesce(dx_code.diagnosis_code_13, undetermined.diagnosis_code_13) as TEXT) as diagnosis_code_13\n\t, cast(coalesce(dx_code.diagnosis_code_14, undetermined.diagnosis_code_14) as TEXT) as diagnosis_code_14\n\t, cast(coalesce(dx_code.diagnosis_code_15, undetermined.diagnosis_code_15) as TEXT) as diagnosis_code_15\n\t, cast(coalesce(dx_code.diagnosis_code_16, undetermined.diagnosis_code_16) as TEXT) as diagnosis_code_16\n\t, cast(coalesce(dx_code.diagnosis_code_17, undetermined.diagnosis_code_17) as TEXT) as diagnosis_code_17\n\t, cast(coalesce(dx_code.diagnosis_code_18, undetermined.diagnosis_code_18) as TEXT) as diagnosis_code_18\n\t, cast(coalesce(dx_code.diagnosis_code_19, undetermined.diagnosis_code_19) as TEXT) as diagnosis_code_19\n\t, cast(coalesce(dx_code.diagnosis_code_20, undetermined.diagnosis_code_20) as TEXT) as diagnosis_code_20\n\t, cast(coalesce(dx_code.diagnosis_code_21, undetermined.diagnosis_code_21) as TEXT) as diagnosis_code_21\n\t, cast(coalesce(dx_code.diagnosis_code_22, undetermined.diagnosis_code_22) as TEXT) as diagnosis_code_22\n\t, cast(coalesce(dx_code.diagnosis_code_23, undetermined.diagnosis_code_23) as TEXT) as diagnosis_code_23\n\t, cast(coalesce(dx_code.diagnosis_code_24, undetermined.diagnosis_code_24) as TEXT) as diagnosis_code_24\n\t, cast(coalesce(dx_code.diagnosis_code_25, undetermined.diagnosis_code_25) as TEXT) as diagnosis_code_25\n\t, cast(coalesce(poa.diagnosis_poa_1, undetermined.diagnosis_poa_1) as TEXT) as diagnosis_poa_1\n\t, cast(coalesce(poa.diagnosis_poa_2, undetermined.diagnosis_poa_2) as TEXT) as diagnosis_poa_2\n\t, cast(coalesce(poa.diagnosis_poa_3, undetermined.diagnosis_poa_3) as TEXT) as diagnosis_poa_3\n\t, cast(coalesce(poa.diagnosis_poa_4, undetermined.diagnosis_poa_4) as TEXT) as diagnosis_poa_4\n\t, cast(coalesce(poa.diagnosis_poa_5, undetermined.diagnosis_poa_5) as TEXT) as diagnosis_poa_5\n\t, cast(coalesce(poa.diagnosis_poa_6, undetermined.diagnosis_poa_6) as TEXT) as diagnosis_poa_6\n\t, cast(coalesce(poa.diagnosis_poa_7, undetermined.diagnosis_poa_7) as TEXT) as diagnosis_poa_7\n\t, cast(coalesce(poa.diagnosis_poa_8, undetermined.diagnosis_poa_8) as TEXT) as diagnosis_poa_8\n\t, cast(coalesce(poa.diagnosis_poa_9, undetermined.diagnosis_poa_9) as TEXT) as diagnosis_poa_9\n\t, cast(coalesce(poa.diagnosis_poa_10, undetermined.diagnosis_poa_10) as TEXT) as diagnosis_poa_10\n\t, cast(coalesce(poa.diagnosis_poa_11, undetermined.diagnosis_poa_11) as TEXT) as diagnosis_poa_11\n\t, cast(coalesce(poa.diagnosis_poa_12, undetermined.diagnosis_poa_12) as TEXT) as diagnosis_poa_12\n\t, cast(coalesce(poa.diagnosis_poa_13, undetermined.diagnosis_poa_13) as TEXT) as diagnosis_poa_13\n\t, cast(coalesce(poa.diagnosis_poa_14, undetermined.diagnosis_poa_14) as TEXT) as diagnosis_poa_14\n\t, cast(coalesce(poa.diagnosis_poa_15, undetermined.diagnosis_poa_15) as TEXT) as diagnosis_poa_15\n\t, cast(coalesce(poa.diagnosis_poa_16, undetermined.diagnosis_poa_16) as TEXT) as diagnosis_poa_16\n\t, cast(coalesce(poa.diagnosis_poa_17, undetermined.diagnosis_poa_17) as TEXT) as diagnosis_poa_17\n\t, cast(coalesce(poa.diagnosis_poa_18, undetermined.diagnosis_poa_18) as TEXT) as diagnosis_poa_18\n\t, cast(coalesce(poa.diagnosis_poa_19, undetermined.diagnosis_poa_19) as TEXT) as diagnosis_poa_19\n\t, cast(coalesce(poa.diagnosis_poa_20, undetermined.diagnosis_poa_20) as TEXT) as diagnosis_poa_20\n\t, cast(coalesce(poa.diagnosis_poa_21, undetermined.diagnosis_poa_21) as TEXT) as diagnosis_poa_21\n\t, cast(coalesce(poa.diagnosis_poa_22, undetermined.diagnosis_poa_22) as TEXT) as diagnosis_poa_22\n\t, cast(coalesce(poa.diagnosis_poa_23, undetermined.diagnosis_poa_23) as TEXT) as diagnosis_poa_23\n\t, cast(coalesce(poa.diagnosis_poa_24, undetermined.diagnosis_poa_24) as TEXT) as diagnosis_poa_24\n\t, cast(coalesce(poa.diagnosis_poa_25, undetermined.diagnosis_poa_25) as TEXT) as diagnosis_poa_25\n\t, cast(med.procedure_code_type as TEXT) as procedure_code_type\n\t, cast(coalesce(px_code.procedure_code_1, undetermined.procedure_code_1) as TEXT) as procedure_code_1\n\t, cast(coalesce(px_code.procedure_code_2, undetermined.procedure_code_2) as TEXT) as procedure_code_2\n\t, cast(coalesce(px_code.procedure_code_3, undetermined.procedure_code_3) as TEXT) as procedure_code_3\n\t, cast(coalesce(px_code.procedure_code_4, undetermined.procedure_code_4) as TEXT) as procedure_code_4\n\t, cast(coalesce(px_code.procedure_code_5, undetermined.procedure_code_5) as TEXT) as procedure_code_5\n\t, cast(coalesce(px_code.procedure_code_6, undetermined.procedure_code_6) as TEXT) as procedure_code_6\n\t, cast(coalesce(px_code.procedure_code_7, undetermined.procedure_code_7) as TEXT) as procedure_code_7\n\t, cast(coalesce(px_code.procedure_code_8, undetermined.procedure_code_8) as TEXT) as procedure_code_8\n\t, cast(coalesce(px_code.procedure_code_9, undetermined.procedure_code_9) as TEXT) as procedure_code_9\n\t, cast(coalesce(px_code.procedure_code_10, undetermined.procedure_code_10) as TEXT) as procedure_code_10\n\t, cast(coalesce(px_code.procedure_code_11, undetermined.procedure_code_11) as TEXT) as procedure_code_11\n\t, cast(coalesce(px_code.procedure_code_12, undetermined.procedure_code_12) as TEXT) as procedure_code_12\n\t, cast(coalesce(px_code.procedure_code_13, undetermined.procedure_code_13) as TEXT) as procedure_code_13\n\t, cast(coalesce(px_code.procedure_code_14, undetermined.procedure_code_14) as TEXT) as procedure_code_14\n\t, cast(coalesce(px_code.procedure_code_15, undetermined.procedure_code_15) as TEXT) as procedure_code_15\n\t, cast(coalesce(px_code.procedure_code_16, undetermined.procedure_code_16) as TEXT) as procedure_code_16\n\t, cast(coalesce(px_code.procedure_code_17, undetermined.procedure_code_17) as TEXT) as procedure_code_17\n\t, cast(coalesce(px_code.procedure_code_18, undetermined.procedure_code_18) as TEXT) as procedure_code_18\n\t, cast(coalesce(px_code.procedure_code_19, undetermined.procedure_code_19) as TEXT) as procedure_code_19\n\t, cast(coalesce(px_code.procedure_code_20, undetermined.procedure_code_20) as TEXT) as procedure_code_20\n\t, cast(coalesce(px_code.procedure_code_21, undetermined.procedure_code_21) as TEXT) as procedure_code_21\n\t, cast(coalesce(px_code.procedure_code_22, undetermined.procedure_code_22) as TEXT) as procedure_code_22\n\t, cast(coalesce(px_code.procedure_code_23, undetermined.procedure_code_23) as TEXT) as procedure_code_23\n\t, cast(coalesce(px_code.procedure_code_24, undetermined.procedure_code_24) as TEXT) as procedure_code_24\n\t, cast(coalesce(px_code.procedure_code_25, undetermined.procedure_code_25) as TEXT) as procedure_code_25\n\t, cast(coalesce(px_date.procedure_date_1, undetermined.procedure_date_1) as date) as procedure_date_1\n\t, cast(coalesce(px_date.procedure_date_2, undetermined.procedure_date_2) as date) as procedure_date_2\n\t, cast(coalesce(px_date.procedure_date_3, undetermined.procedure_date_3) as date) as procedure_date_3\n\t, cast(coalesce(px_date.procedure_date_4, undetermined.procedure_date_4) as date) as procedure_date_4\n\t, cast(coalesce(px_date.procedure_date_5, undetermined.procedure_date_5) as date) as procedure_date_5\n\t, cast(coalesce(px_date.procedure_date_6, undetermined.procedure_date_6) as date) as procedure_date_6\n\t, cast(coalesce(px_date.procedure_date_7, undetermined.procedure_date_7) as date) as procedure_date_7\n\t, cast(coalesce(px_date.procedure_date_8, undetermined.procedure_date_8) as date) as procedure_date_8\n\t, cast(coalesce(px_date.procedure_date_9, undetermined.procedure_date_9) as date) as procedure_date_9\n\t, cast(coalesce(px_date.procedure_date_10, undetermined.procedure_date_10) as date) as procedure_date_10\n\t, cast(coalesce(px_date.procedure_date_11, undetermined.procedure_date_11) as date) as procedure_date_11\n\t, cast(coalesce(px_date.procedure_date_12, undetermined.procedure_date_12) as date) as procedure_date_12\n\t, cast(coalesce(px_date.procedure_date_13, undetermined.procedure_date_13) as date) as procedure_date_13\n\t, cast(coalesce(px_date.procedure_date_14, undetermined.procedure_date_14) as date) as procedure_date_14\n\t, cast(coalesce(px_date.procedure_date_15, undetermined.procedure_date_15) as date) as procedure_date_15\n\t, cast(coalesce(px_date.procedure_date_16, undetermined.procedure_date_16) as date) as procedure_date_16\n\t, cast(coalesce(px_date.procedure_date_17, undetermined.procedure_date_17) as date) as procedure_date_17\n\t, cast(coalesce(px_date.procedure_date_18, undetermined.procedure_date_18) as date) as procedure_date_18\n\t, cast(coalesce(px_date.procedure_date_19, undetermined.procedure_date_19) as date) as procedure_date_19\n\t, cast(coalesce(px_date.procedure_date_20, undetermined.procedure_date_20) as date) as procedure_date_20\n\t, cast(coalesce(px_date.procedure_date_21, undetermined.procedure_date_21) as date) as procedure_date_21\n\t, cast(coalesce(px_date.procedure_date_22, undetermined.procedure_date_22) as date) as procedure_date_22\n\t, cast(coalesce(px_date.procedure_date_23, undetermined.procedure_date_23) as date) as procedure_date_23\n\t, cast(coalesce(px_date.procedure_date_24, undetermined.procedure_date_24) as date) as procedure_date_24\n\t, cast(coalesce(px_date.procedure_date_25, undetermined.procedure_date_25) as date) as procedure_date_25\n\t, cast(med.data_source as TEXT) as data_source\n    , cast(med.in_network_flag as int) as in_network_flag\n    , cast('2025-06-03 19:49:40.396647+00:00' as TEXT) as tuva_last_run\nfrom __dbt__cte__normalized_input__stg_medical_claim as med\nleft outer join tuva.claims_preprocessing._int_normalized_input_admit_source_final as ad_source\n    on med.claim_id = ad_source.claim_id\n    and med.data_source = ad_source.data_source\nleft outer join tuva.claims_preprocessing._int_normalized_input_admit_type_final as ad_type\n    on med.claim_id = ad_type.claim_id\n    and med.data_source = ad_type.data_source\nleft outer join tuva.claims_preprocessing._int_normalized_input_bill_type_final as bill\n    on med.claim_id = bill.claim_id\n    and med.data_source = bill.data_source\nleft outer join tuva.claims_preprocessing._int_normalized_input_medical_claim_date_normalize as claim_line_dates\n    on med.claim_id = claim_line_dates.claim_id\n    and med.claim_line_number = claim_line_dates.claim_line_number\n    and med.data_source = claim_line_dates.data_source\nleft outer join tuva.claims_preprocessing._int_normalized_input_medical_date_aggregation as dates\n    on med.claim_id = dates.claim_id\n    and med.data_source = dates.data_source\nleft outer join tuva.claims_preprocessing._int_normalized_input_medical_npi_normalize as med_npi\n    on med.claim_id = med_npi.claim_id\n    and med.claim_line_number = med_npi.claim_line_number\n    and med.data_source = med_npi.data_source\nleft outer join tuva.claims_preprocessing._int_normalized_input_discharge_disposition_final as disch_disp\n    on med.claim_id = disch_disp.claim_id\n    and med.data_source = disch_disp.data_source\nleft outer join tuva.claims_preprocessing._int_normalized_input_drg_final as drg\n\ton med.claim_id = drg.claim_id\n    and med.data_source = drg.data_source\nleft outer join tuva.claims_preprocessing._int_normalized_input_place_of_service_normalize as pos\n    on med.claim_id = pos.claim_id\n    and med.claim_line_number = pos.claim_line_number\n    and med.data_source = pos.data_source\nleft outer join tuva.claims_preprocessing._int_normalized_input_diagnosis_code_final as dx_code\n    on med.claim_id = dx_code.claim_id\n    and med.data_source = dx_code.data_source\nleft outer join tuva.claims_preprocessing._int_normalized_input_present_on_admit_final as poa\n    on med.claim_id = poa.claim_id\n    and med.data_source = poa.data_source\nleft outer join tuva.claims_preprocessing._int_normalized_input_procedure_code_final as px_code\n    on med.claim_id = px_code.claim_id\n    and med.data_source = px_code.data_source\nleft outer join tuva.claims_preprocessing._int_normalized_input_procedure_date_final as px_date\n    on med.claim_id = px_date.claim_id\n    and med.data_source = px_date.data_source\nleft outer join tuva.claims_preprocessing._int_normalized_input_revenue_center_normalize as rev\n    on med.claim_id = rev.claim_id\n    and med.claim_line_number = rev.claim_line_number\n    and med.data_source = rev.data_source\nleft outer join tuva.claims_preprocessing._int_normalized_input_undetermined_claim_type as undetermined\n    on med.claim_id = undetermined.claim_id\n    and med.claim_line_number = undetermined.claim_line_number\n    and med.data_source = undetermined.data_source", "relation_name": "tuva.claims_preprocessing.normalized_input_medical_claim", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:20.725803Z", "completed_at": "2025-06-03T19:50:20.736763Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:20.737284Z", "completed_at": "2025-06-03T19:50:20.737289Z"}], "thread_id": "Thread-3", "execution_time": 0.0176541805267334, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_utils_unique_combination_of_columns_core__eligibility_eligibility_id__data_source.1a1f7fd600", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith validation_errors as (\n\n    select\n        eligibility_id, data_source\n    from tuva.core.eligibility\n    group by eligibility_id, data_source\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:20.732548Z", "completed_at": "2025-06-03T19:50:20.742947Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:20.743450Z", "completed_at": "2025-06-03T19:50:20.743455Z"}], "thread_id": "Thread-4", "execution_time": 0.012059926986694336, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.not_null_core__eligibility_data_source.9bb373c569", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect data_source\nfrom tuva.core.eligibility\nwhere data_source is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:20.738119Z", "completed_at": "2025-06-03T19:50:20.748654Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:20.749181Z", "completed_at": "2025-06-03T19:50:20.749186Z"}], "thread_id": "Thread-1", "execution_time": 0.012236833572387695, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.not_null_core__eligibility_eligibility_id.c2202f2aff", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect eligibility_id\nfrom tuva.core.eligibility\nwhere eligibility_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:20.744277Z", "completed_at": "2025-06-03T19:50:20.754819Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:20.755324Z", "completed_at": "2025-06-03T19:50:20.755329Z"}], "thread_id": "Thread-3", "execution_time": 0.012228727340698242, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.not_null_core__eligibility_person_id.c107049663", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect person_id\nfrom tuva.core.eligibility\nwhere person_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:20.785158Z", "completed_at": "2025-06-03T19:50:20.790736Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:20.796139Z", "completed_at": "2025-06-03T19:50:20.796145Z"}], "thread_id": "Thread-4", "execution_time": 0.017090797424316406, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.mart_review__patient", "compiled": true, "compiled_code": "\n\nselect *\n    , person_id || '|' || data_source as patient_data_source_key\nfrom tuva.core.patient", "relation_name": "tuva.data_quality.mart_review__patient", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:20.804350Z", "completed_at": "2025-06-03T19:50:20.910200Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:20.915425Z", "completed_at": "2025-06-03T19:50:20.915432Z"}], "thread_id": "Thread-4", "execution_time": 0.11252903938293457, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.not_null_core__patient_person_id.9d11274eb7", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect person_id\nfrom tuva.core.patient\nwhere person_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:20.809163Z", "completed_at": "2025-06-03T19:50:20.915787Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:20.921434Z", "completed_at": "2025-06-03T19:50:20.921440Z"}], "thread_id": "Thread-1", "execution_time": 0.11768817901611328, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.unique_core__patient_person_id.c85be01fdc", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    person_id as unique_field,\n    count(*) as n_records\n\nfrom tuva.core.patient\nwhere person_id is not null\ngroup by person_id\nhaving count(*) > 1\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:20.324121Z", "completed_at": "2025-06-03T19:50:20.921820Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:20.922620Z", "completed_at": "2025-06-03T19:50:20.922624Z"}], "thread_id": "Thread-2", "execution_time": 0.6050262451171875, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.fhir_preprocessing__observation", "compiled": true, "compiled_code": "\nwith unioned as (\n\n    \n\n        (\n            select\n                cast('tuva.fhir_preprocessing._int_lab_result' as TEXT) as _dbt_source_relation,\n\n                \n                    cast(\"PATIENT_INTERNAL_ID\" as character varying(16777216)) as \"PATIENT_INTERNAL_ID\" ,\n                    cast(\"RESOURCE_INTERNAL_ID\" as character varying(16777216)) as \"RESOURCE_INTERNAL_ID\" ,\n                    cast(\"ENCOUNTER_INTERNAL_ID\" as character varying(16777216)) as \"ENCOUNTER_INTERNAL_ID\" ,\n                    cast(\"OBSERVATION_STATUS\" as character varying(16777216)) as \"OBSERVATION_STATUS\" ,\n                    cast(\"OBSERVATION_CATEGORY\" as character varying(14)) as \"OBSERVATION_CATEGORY\" ,\n                    cast(\"OBSERVATION_CODE_SYSTEM\" as character varying(16777216)) as \"OBSERVATION_CODE_SYSTEM\" ,\n                    cast(\"OBSERVATION_CODE\" as character varying(16777216)) as \"OBSERVATION_CODE\" ,\n                    cast(\"OBSERVATION_CODE_TEXT\" as character varying(16777216)) as \"OBSERVATION_CODE_TEXT\" ,\n                    cast(\"OBSERVATION_DATETIME\" as TIMESTAMP_NTZ) as \"OBSERVATION_DATETIME\" ,\n                    cast(\"OBSERVATION_VALUE\" as character varying(16777216)) as \"OBSERVATION_VALUE\" ,\n                    cast(\"OBSERVATION_VALUE_UNITS\" as character varying(16777216)) as \"OBSERVATION_VALUE_UNITS\" ,\n                    cast(\"DATA_SOURCE\" as character varying(16777216)) as \"DATA_SOURCE\" \n\n            from tuva.fhir_preprocessing._int_lab_result\n\n            \n        )\n\n        union all\n        \n\n        (\n            select\n                cast('tuva.fhir_preprocessing._int_observation' as TEXT) as _dbt_source_relation,\n\n                \n                    cast(\"PATIENT_INTERNAL_ID\" as character varying(16777216)) as \"PATIENT_INTERNAL_ID\" ,\n                    cast(\"RESOURCE_INTERNAL_ID\" as character varying(16777216)) as \"RESOURCE_INTERNAL_ID\" ,\n                    cast(\"ENCOUNTER_INTERNAL_ID\" as character varying(16777216)) as \"ENCOUNTER_INTERNAL_ID\" ,\n                    cast(\"OBSERVATION_STATUS\" as character varying(16777216)) as \"OBSERVATION_STATUS\" ,\n                    cast(\"OBSERVATION_CATEGORY\" as character varying(14)) as \"OBSERVATION_CATEGORY\" ,\n                    cast(\"OBSERVATION_CODE_SYSTEM\" as character varying(16777216)) as \"OBSERVATION_CODE_SYSTEM\" ,\n                    cast(\"OBSERVATION_CODE\" as character varying(16777216)) as \"OBSERVATION_CODE\" ,\n                    cast(\"OBSERVATION_CODE_TEXT\" as character varying(16777216)) as \"OBSERVATION_CODE_TEXT\" ,\n                    cast(\"OBSERVATION_DATETIME\" as TIMESTAMP_NTZ) as \"OBSERVATION_DATETIME\" ,\n                    cast(\"OBSERVATION_VALUE\" as character varying(16777216)) as \"OBSERVATION_VALUE\" ,\n                    cast(\"OBSERVATION_VALUE_UNITS\" as character varying(16777216)) as \"OBSERVATION_VALUE_UNITS\" ,\n                    cast(\"DATA_SOURCE\" as character varying(16777216)) as \"DATA_SOURCE\" \n\n            from tuva.fhir_preprocessing._int_observation\n\n            \n        )\n\n        \n\n)\n\nselect\n      cast(patient_internal_id as TEXT ) as patient_internal_id\n    , cast(resource_internal_id as TEXT ) as resource_internal_id\n    , cast(encounter_internal_id as TEXT ) as encounter_internal_id\n    , cast(observation_status as TEXT ) as observation_status\n    , cast(observation_category as TEXT ) as observation_category\n    , cast(observation_code_system as TEXT ) as observation_code_system\n    , cast(observation_code as TEXT ) as observation_code\n    , cast(observation_code_text as TEXT ) as observation_code_text\n    , cast(observation_datetime as timestamp ) as observation_datetime\n    , cast(observation_value as TEXT ) as observation_value\n    , cast(observation_value_units as TEXT ) as observation_value_units\n    , cast(data_source as TEXT ) as data_source\n    , cast('2025-06-03 19:49:40.396647+00:00' as timestamp) as tuva_last_run\n    , cast('0.14.13' as TEXT ) as tuva_package_version\nfrom unioned", "relation_name": "tuva.fhir_preprocessing.observation", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:20.916042Z", "completed_at": "2025-06-03T19:50:20.922972Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:20.923877Z", "completed_at": "2025-06-03T19:50:20.923881Z"}], "thread_id": "Thread-3", "execution_time": 0.014046192169189453, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.data_quality__summary", "compiled": true, "compiled_code": "\n\nwith cte as (\n    select distinct fm.field_name\n    , fm.input_layer_table_name\n    , fm.claim_type\n    , table_claim_type_field_sk\n    from tuva.data_quality.crosswalk_field_to_mart_sk as fm\n)\n\nselect\n    summary_sk\n    , fm.table_claim_type_field_sk\n    , data_source\n    , x.table_name\n    , x.claim_type\n    , x.field_name\n    , sct.red\n    , sct.green\n    , sum(case when bucket_name = 'valid' then 1 else 0 end) as valid_num\n    , sum(case when bucket_name <> 'null' then 1 else 0 end) as fill_num\n    , count(drill_down_value) as denom\n    , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom\n    tuva.data_quality.data_quality_detail as x\nleft outer join cte as fm\n    on x.field_name = fm.field_name\n    and\n    fm.input_layer_table_name = x.table_name\n    and\n    fm.claim_type = x.claim_type\nleft outer join tuva.data_quality._value_set_crosswalk_field_info as sct\n    on x.field_name = sct.field_name\n    and\n    sct.input_layer_table_name = x.table_name\n    and\n    sct.claim_type = x.claim_type\ngroup by\n    summary_sk\n    , data_source\n    , fm.table_claim_type_field_sk\n    , x.claim_type\n    , x.table_name\n    , x.field_name\n    , sct.red\n    , sct.green", "relation_name": "tuva.data_quality.summary", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:20.924270Z", "completed_at": "2025-06-03T19:50:20.936302Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:20.941278Z", "completed_at": "2025-06-03T19:50:20.941285Z"}], "thread_id": "Thread-4", "execution_time": 0.019269704818725586, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.ahrq_measures__stg_pqi_member_months", "compiled": true, "compiled_code": "\n\nwith\n\ndate_int as (\n    select distinct\n        replace(year_month, '-', '') as yyyymm\n      , first_day_of_month\n    from tuva.reference_data.calendar as c\n)\n\nselect\n    data_source\n  , person_id\n  , first_day_of_month\n  , d.yyyymm as year_month\n\nfrom\n    tuva.core.member_months as mm\ninner join date_int as d on mm.year_month = d.yyyymm", "relation_name": "tuva.ahrq_measures._stg_pqi_member_months", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:20.936554Z", "completed_at": "2025-06-03T19:50:20.948874Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:20.949685Z", "completed_at": "2025-06-03T19:50:20.949691Z"}], "thread_id": "Thread-2", "execution_time": 0.019986867904663086, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.mart_review__stg_member_month", "compiled": true, "compiled_code": "\n\nwith cte as\n(\nselect distinct year_month_int\n,full_date\nfrom tuva.reference_data.calendar as c\nwhere day = 1\n\n)\n\nselect  mm.*\n,c.year_month_int\n,c.full_date as year_month_date\nfrom tuva.core.member_months as mm\nleft outer join cte as c on cast(mm.year_month as int) = c.year_month_int", "relation_name": "tuva.data_quality.mart_review__stg_member_month", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:20.942070Z", "completed_at": "2025-06-03T19:50:20.950042Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:20.950902Z", "completed_at": "2025-06-03T19:50:20.950906Z"}], "thread_id": "Thread-3", "execution_time": 0.014920949935913086, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_utils_unique_combination_of_columns_core__member_months_member_month_key__data_source.b0ff41267b", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith validation_errors as (\n\n    select\n        member_month_key, data_source\n    from tuva.core.member_months\n    group by member_month_key, data_source\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:20.951279Z", "completed_at": "2025-06-03T19:50:20.961882Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:20.967561Z", "completed_at": "2025-06-03T19:50:20.967569Z"}], "thread_id": "Thread-4", "execution_time": 0.018481016159057617, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.not_null_core__member_months_data_source.de21261e69", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect data_source\nfrom tuva.core.member_months\nwhere data_source is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:20.955773Z", "completed_at": "2025-06-03T19:50:20.962093Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:20.967998Z", "completed_at": "2025-06-03T19:50:20.968003Z"}], "thread_id": "Thread-1", "execution_time": 0.018630027770996094, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.not_null_core__member_months_member_month_key.8869981ed9", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect member_month_key\nfrom tuva.core.member_months\nwhere member_month_key is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:20.962665Z", "completed_at": "2025-06-03T19:50:20.974356Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:20.975177Z", "completed_at": "2025-06-03T19:50:20.975184Z"}], "thread_id": "Thread-2", "execution_time": 0.01441812515258789, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.not_null_core__member_months_person_id.af3d01121f", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect person_id\nfrom tuva.core.member_months\nwhere person_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:20.969236Z", "completed_at": "2025-06-03T19:50:20.975998Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:20.989749Z", "completed_at": "2025-06-03T19:50:20.989757Z"}], "thread_id": "Thread-3", "execution_time": 0.02753615379333496, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.core__pharmacy_claim", "compiled": true, "compiled_code": "\n\nselect * from tuva.core._stg_claims_pharmacy_claim", "relation_name": "tuva.core.pharmacy_claim", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:20.976453Z", "completed_at": "2025-06-03T19:50:20.990952Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:20.992080Z", "completed_at": "2025-06-03T19:50:20.992085Z"}], "thread_id": "Thread-4", "execution_time": 0.017544984817504883, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.claims_enrollment__flag_claims_with_enrollment", "compiled": true, "compiled_code": "\n\n\nwith claim_dates as (\n    select\n        claim_id\n        , claim_line_number\n        , person_id\n        , member_id\n        , payer\n        , plan\n        , data_source\n        , coalesce(claim_line_start_date, claim_start_date, admission_date) as inferred_claim_start_date\n        , case\n            when claim_line_start_date is not null then 'claim_line_start_date'\n            when claim_line_start_date is null and claim_start_date is not null then 'claim_start_date'\n            when claim_line_start_date is null and claim_start_date is null and admission_date is not null then 'admission_date'\n        end as inferred_claim_start_column_used\n    from tuva.claims_preprocessing.normalized_input_medical_claim\n)\n\n, claim_year_month as (\n    select\n          claim_id\n        , claim_line_number\n        , person_id\n        , member_id\n        , payer\n        , plan\n        , data_source\n        , inferred_claim_start_date\n        , inferred_claim_start_column_used\n        , date_part('year', inferred_claim_start_date) || \n\n    case when 2 = 0\n        then ''\n    else\n        right(\n            '0' || date_part('month', inferred_claim_start_date),\n            2\n        )\n    end as inferred_claim_start_year_month\nfrom claim_dates\n)\n\nselect distinct\n     claim.claim_id\n    , claim.claim_line_number\n    , claim.person_id\n    , claim.member_id\n    , claim.payer\n    , claim.plan\n    , claim.data_source\n    , mm.member_month_key\n    , claim.inferred_claim_start_year_month\n    , claim.inferred_claim_start_column_used\n    , cast('2025-06-03 19:49:40.396647+00:00' as timestamp) as tuva_last_run\nfrom claim_year_month as claim\ninner join tuva.claims_preprocessing.member_months as mm\n    on mm.person_id = claim.person_id\n    and mm.member_id = claim.member_id\n    and mm.payer = claim.payer\n    and mm.plan = claim.plan\n    and mm.year_month = claim.inferred_claim_start_year_month\n    and mm.data_source = claim.data_source", "relation_name": "tuva.claims_preprocessing.flag_claims_with_enrollment", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:20.984144Z", "completed_at": "2025-06-03T19:50:20.991605Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:20.999596Z", "completed_at": "2025-06-03T19:50:20.999604Z"}], "thread_id": "Thread-1", "execution_time": 0.024799108505249023, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.encounters__patient_data_source_id", "compiled": true, "compiled_code": "\n\nwith multiple_sources as (\nselect distinct person_id\n, data_source\nfrom tuva.claims_preprocessing.normalized_input_medical_claim\n\n\nunion distinct\n\n\nselect distinct person_id\n, data_source\nfrom tuva.claims_preprocessing.normalized_input_eligibility\n)\n\nselect\nperson_id\n, data_source\n, dense_rank() over (\norder by concat(person_id, data_source)) as patient_data_source_id\nfrom multiple_sources", "relation_name": "tuva.claims_preprocessing.encounters__patient_data_source_id", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:20.992456Z", "completed_at": "2025-06-03T19:50:21.006354Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:21.007114Z", "completed_at": "2025-06-03T19:50:21.007120Z"}], "thread_id": "Thread-2", "execution_time": 0.01701974868774414, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.service_category__stg_medical_claim", "compiled": true, "compiled_code": "\n\nselect\n  m.claim_id\n  , m.claim_line_number\n  , m.claim_id || '|' || cast(m.claim_line_number as TEXT) as claim_line_id\n  , m.claim_type\n  , coalesce(m.admission_date, m.claim_line_start_date, m.claim_start_date) as start_date\n  , coalesce(m.discharge_date, m.claim_line_end_date, m.claim_end_date) as end_date\n  , m.admission_date\n  , m.discharge_date\n  , m.claim_start_date\n  , m.claim_end_date\n  , m.claim_line_start_date\n  , m.claim_line_end_date\n  , m.bill_type_code\n  , bt.bill_type_description\n  , m.hcpcs_code\n  , c.ccs_category\n  , c.ccs_category_description\n  , m.drg_code_type\n  , m.drg_code\n  , m.drg_description\n  , m.place_of_service_code\n  , pos.place_of_service_description\n  , m.revenue_center_code\n  , r.revenue_center_description\n  , m.diagnosis_code_1\n  , dx.default_ccsr_category_ip\n  , dx.default_ccsr_category_op\n  , dx.default_ccsr_category_description_ip\n  , dx.default_ccsr_category_description_op\n  , p.primary_taxonomy_code\n  , p.primary_specialty_description\n  , rend.primary_specialty_description as rend_primary_specialty_description\n  , n.modality\n  , m.data_source\n  , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom tuva.claims_preprocessing.normalized_input_medical_claim as m\nleft outer join tuva.ccsr._value_set_dxccsr_v2023_1_cleaned_map as dx on m.diagnosis_code_1 = dx.icd_10_cm_code\nleft outer join tuva.terminology.provider as p on m.facility_id = p.npi\nleft outer join tuva.terminology.ccs_services_procedures as c on m.hcpcs_code = c.hcpcs_code\nleft outer join tuva.terminology.nitos as n on m.hcpcs_code = n.hcpcs_code\nleft outer join tuva.terminology.revenue_center as r on m.revenue_center_code = r.revenue_center_code\nleft outer join tuva.terminology.place_of_service as pos on m.place_of_service_code = pos.place_of_service_code\nleft outer join tuva.terminology.bill_type as bt on m.bill_type_code = bt.bill_type_code\nleft outer join tuva.terminology.provider as rend on m.rendering_id = rend.npi", "relation_name": "tuva.claims_preprocessing.service_category__stg_medical_claim", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:21.000869Z", "completed_at": "2025-06-03T19:50:21.007737Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:21.034908Z", "completed_at": "2025-06-03T19:50:21.034926Z"}], "thread_id": "Thread-3", "execution_time": 0.04317903518676758, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_utils_unique_combination_of_columns_normalized_input__medical_claim_claim_id__claim_line_number__data_source.2e766ab0ac", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith validation_errors as (\n\n    select\n        claim_id, claim_line_number, data_source\n    from tuva.claims_preprocessing.normalized_input_medical_claim\n    group by claim_id, claim_line_number, data_source\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:21.029162Z", "completed_at": "2025-06-03T19:50:21.036411Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:21.043459Z", "completed_at": "2025-06-03T19:50:21.043465Z"}], "thread_id": "Thread-1", "execution_time": 0.036949872970581055, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.ahrq_measures__int_pqi_shared_exclusion_missing_age", "compiled": true, "compiled_code": "\n\nwith __dbt__cte___stg_pqi_patient as (\n\n\nselect\n    data_source\n  , birth_date\n  , person_id\n  , sex\nfrom\n    tuva.core.patient\n) /* Exclude patients with missing age */\nselect\n    data_source\n    , person_id\n    , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom __dbt__cte___stg_pqi_patient\nwhere birth_date is null", "relation_name": "tuva.ahrq_measures._int_pqi_shared_exclusions_missing_age", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:21.007935Z", "completed_at": "2025-06-03T19:50:21.036882Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:21.044053Z", "completed_at": "2025-06-03T19:50:21.044058Z"}], "thread_id": "Thread-4", "execution_time": 0.03806614875793457, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.fhir_preprocessing__int_coverage", "compiled": true, "compiled_code": "\nwith  __dbt__cte___stg_eligibility as (\n\n\nselect\n      eligibility_id\n    , person_id\n    , member_id\n    , payer_type\n    , payer\n    , plan\n    , enrollment_start_date\n    , enrollment_end_date\n    , subscriber_relation\n    , subscriber_id\n    , data_source\nfrom tuva.core.eligibility\n\n\n), base as (\n\n    select\n          person_id as patient_internal_id\n        /* create hash due to FHIR limit of 64 characters for max length of strings */\n        , md5(cast(coalesce(cast(eligibility_id as TEXT), '_dbt_utils_surrogate_key_null_') as TEXT)) as resource_internal_id\n        , payer as organization_name\n        , plan as coverage_plan\n        , payer_type\n        , enrollment_start_date as coverage_period_start\n        , enrollment_end_date as coverage_period_end\n        , coalesce(subscriber_relation,'self') as coverage_relationship\n        , 'active' as coverage_status\n        , coalesce(subscriber_id,member_id) as coverage_subscriber_id\n        , data_source\n    from __dbt__cte___stg_eligibility\n\n)\n\n/* Map to standardized codes for product type */\n, add_product as (\n\n    select\n          patient_internal_id\n        , resource_internal_id\n        , organization_name\n        , coverage_plan\n        , payer_type\n        , coverage_period_start\n        , coverage_period_end\n        , coverage_relationship\n        , coverage_status\n        , coverage_subscriber_id\n        , data_source\n        , case\n            when lower(payer_type) like '%commercial%' then 'PPO'\n            when lower(payer_type) like '%self%' then 'PPO'\n            when lower(payer_type) like '%medicare%' then 'MCR'\n            when lower(payer_type) like '%medicaid%' then 'MCD'\n            when lower(coverage_plan) like '%pos&' then 'POS'\n            when lower(coverage_plan) like '%cep%' then 'CEP'\n            when lower(coverage_plan) like '%hmo%' then 'HMO'\n            when lower(coverage_plan) like '%MP%' then 'MP'\n            when lower(coverage_plan) like '%MC%' then 'MC'\n            when lower(coverage_plan) like '%SN1%' then 'SN1'\n            when lower(coverage_plan) like '%SN2%' then 'SN2'\n            when lower(coverage_plan) like '%SN3%' then 'SN3'\n            when lower(coverage_plan) like '%MCS%' then 'MCS'\n            when lower(coverage_plan) like '%MMP%' then 'MMP'\n            when lower(coverage_plan) like '%MDE%' then 'MDE'\n            when lower(coverage_plan) like '%MD%' then 'MD'\n            when lower(coverage_plan) like '%MLI%' then 'MLI'\n            when lower(coverage_plan) like '%MRB%' then 'MRB'\n            when lower(coverage_plan) like '%MMO%' then 'MMO'\n            when lower(coverage_plan) like '%MOS%' then 'MOS'\n            when lower(coverage_plan) like '%MPO%' then 'MPO'\n            when lower(coverage_plan) like '%MEP%' then 'MEP'\n          end as coverage_type_product\n    from base\n\n)\n\nselect\n      patient_internal_id\n    , resource_internal_id\n    , organization_name\n    , coverage_plan\n    , coverage_period_start\n    , coverage_period_end\n    , coverage_relationship\n    , coverage_status\n    , coverage_subscriber_id\n    , data_source\n    , coverage_type_product\nfrom add_product", "relation_name": "tuva.fhir_preprocessing._int_coverage", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:21.037075Z", "completed_at": "2025-06-03T19:50:21.054999Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:21.055726Z", "completed_at": "2025-06-03T19:50:21.055731Z"}], "thread_id": "Thread-2", "execution_time": 0.02045893669128418, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.ahrq_measures__int_pqi_shared_exclusion_missing_gender", "compiled": true, "compiled_code": "\n\nwith __dbt__cte___stg_pqi_patient as (\n\n\nselect\n    data_source\n  , birth_date\n  , person_id\n  , sex\nfrom\n    tuva.core.patient\n) -- Exclude patients with undefined or missing gender\nselect\n    data_source\n  , person_id\n  , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom __dbt__cte___stg_pqi_patient\nwhere\n  sex not in ('male', 'female')", "relation_name": "tuva.ahrq_measures._int_pqi_shared_exclusion_missing_gender", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:21.044746Z", "completed_at": "2025-06-03T19:50:21.062576Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:21.068547Z", "completed_at": "2025-06-03T19:50:21.068553Z"}], "thread_id": "Thread-3", "execution_time": 0.03199291229248047, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.fhir_preprocessing__patient", "compiled": true, "compiled_code": "\nwith __dbt__cte___stg_patient as (\n\nselect\n      person_id\n    , first_name\n    , last_name\n    , sex\n    , race\n    , birth_date\n    , data_source\nfrom tuva.core.patient\n) select\n      cast(person_id as TEXT ) as patient_internal_id\n    , cast(first_name as TEXT ) as name_first\n    , cast(last_name as TEXT ) as name_last\n    , cast(sex as TEXT ) as gender\n    , case\n        when race is null then 'UNK'\n        else cast(race as TEXT )\n      end as race\n    , cast(birth_date as date) as birth_date\n    , cast(data_source as TEXT ) as data_source\n    , cast('2025-06-03 19:49:40.396647+00:00' as timestamp) as tuva_last_run\n    , cast('0.14.13' as TEXT ) as tuva_package_version\nfrom __dbt__cte___stg_patient", "relation_name": "tuva.fhir_preprocessing.patient", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:21.056297Z", "completed_at": "2025-06-03T19:50:21.069575Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:21.070509Z", "completed_at": "2025-06-03T19:50:21.070513Z"}], "thread_id": "Thread-1", "execution_time": 0.015801191329956055, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.accepted_values_quality_measures__stg_core__patient_sex__female__male__unknown.e6adc9ce2b", "compiled": true, "compiled_code": "\n    \n    \n\nwith  __dbt__cte___stg_patient as (\n\nselect\n      person_id\n    , sex\n    , birth_date\n    , death_date\n    , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom tuva.core.patient\n), all_values as (\n\n    select\n        sex as value_field,\n        count(*) as n_records\n\n    from __dbt__cte___stg_patient\n    group by sex\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    'female','male','unknown'\n)\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:21.063593Z", "completed_at": "2025-06-03T19:50:21.070048Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:21.076406Z", "completed_at": "2025-06-03T19:50:21.076411Z"}], "thread_id": "Thread-4", "execution_time": 0.0212399959564209, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.not_null_quality_measures__stg_core__patient_birth_date.4b3a2e74e6", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nwith __dbt__cte___stg_patient as (\n\nselect\n      person_id\n    , sex\n    , birth_date\n    , death_date\n    , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom tuva.core.patient\n) select birth_date\nfrom __dbt__cte___stg_patient\nwhere birth_date is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:21.070868Z", "completed_at": "2025-06-03T19:50:21.083009Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:21.083720Z", "completed_at": "2025-06-03T19:50:21.083726Z"}], "thread_id": "Thread-2", "execution_time": 0.014786005020141602, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.not_null_quality_measures__stg_core__patient_person_id.a54573252c", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nwith __dbt__cte___stg_patient as (\n\nselect\n      person_id\n    , sex\n    , birth_date\n    , death_date\n    , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom tuva.core.patient\n) select person_id\nfrom __dbt__cte___stg_patient\nwhere person_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:21.077617Z", "completed_at": "2025-06-03T19:50:21.084047Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:21.098228Z", "completed_at": "2025-06-03T19:50:21.098234Z"}], "thread_id": "Thread-3", "execution_time": 0.028017044067382812, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.not_null_quality_measures__stg_core__patient_sex.e2f34cab69", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nwith __dbt__cte___stg_patient as (\n\nselect\n      person_id\n    , sex\n    , birth_date\n    , death_date\n    , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom tuva.core.patient\n) select sex\nfrom __dbt__cte___stg_patient\nwhere sex is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:21.084253Z", "completed_at": "2025-06-03T19:50:21.099252Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:21.100154Z", "completed_at": "2025-06-03T19:50:21.100158Z"}], "thread_id": "Thread-1", "execution_time": 0.017652034759521484, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_utils_unique_combination_of_columns_fhir_preprocessing__observation_patient_internal_id__resource_internal_id.adc8dacb1a", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith validation_errors as (\n\n    select\n        patient_internal_id, resource_internal_id\n    from tuva.fhir_preprocessing.observation\n    group by patient_internal_id, resource_internal_id\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:21.089321Z", "completed_at": "2025-06-03T19:50:21.099946Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:21.109276Z", "completed_at": "2025-06-03T19:50:21.109282Z"}], "thread_id": "Thread-4", "execution_time": 0.026528120040893555, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.ahrq_measures__int_pqi_01_denom", "compiled": true, "compiled_code": "\n\nwith __dbt__cte___stg_pqi_patient as (\n\n\nselect\n    data_source\n  , birth_date\n  , person_id\n  , sex\nfrom\n    tuva.core.patient\n) select distinct\n    cast(substring(e.year_month, 1, 4) as int) as year_number\n  , e.person_id\n  , e.data_source\n  , datediff(\n        year,\n        p.birth_date,\n        e.first_day_of_month\n        ) as age\n  , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom tuva.ahrq_measures._stg_pqi_member_months as e\ninner join __dbt__cte___stg_pqi_patient as p\n  on e.person_id = p.person_id\n  and p.data_source = e.data_source\nwhere\n  datediff(\n        year,\n        p.birth_date,\n        e.first_day_of_month\n        ) >= 18", "relation_name": "tuva.ahrq_measures._int_pqi_01_denom", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:21.100500Z", "completed_at": "2025-06-03T19:50:21.120392Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:21.121165Z", "completed_at": "2025-06-03T19:50:21.121172Z"}], "thread_id": "Thread-2", "execution_time": 0.02254486083984375, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.ahrq_measures__int_pqi_03_denom", "compiled": true, "compiled_code": "\n\nwith __dbt__cte___stg_pqi_patient as (\n\n\nselect\n    data_source\n  , birth_date\n  , person_id\n  , sex\nfrom\n    tuva.core.patient\n) select distinct\n    cast(substring(e.year_month, 1, 4) as int) as year_number\n  , e.person_id\n  , e.data_source\n  , datediff(\n        year,\n        p.birth_date,\n        e.first_day_of_month\n        ) as age\n  , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom tuva.ahrq_measures._stg_pqi_member_months as e\ninner join __dbt__cte___stg_pqi_patient as p\n  on e.person_id = p.person_id\n  and p.data_source = e.data_source\nwhere\n  datediff(\n        year,\n        p.birth_date,\n        e.first_day_of_month\n        ) >= 18", "relation_name": "tuva.ahrq_measures._int_pqi_03_denom", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:21.109945Z", "completed_at": "2025-06-03T19:50:21.121511Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:21.140653Z", "completed_at": "2025-06-03T19:50:21.140660Z"}], "thread_id": "Thread-3", "execution_time": 0.04099082946777344, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.ahrq_measures__int_pqi_05_denom", "compiled": true, "compiled_code": "\n\nwith __dbt__cte___stg_pqi_patient as (\n\n\nselect\n    data_source\n  , birth_date\n  , person_id\n  , sex\nfrom\n    tuva.core.patient\n) select distinct\n    cast(substring(e.year_month, 1, 4) as int) as year_number\n  , e.person_id\n  , e.data_source\n  , datediff(\n        year,\n        p.birth_date,\n        e.first_day_of_month\n        ) as age\n  , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom tuva.ahrq_measures._stg_pqi_member_months as e\ninner join __dbt__cte___stg_pqi_patient as p\n  on e.person_id = p.person_id\n  and p.data_source = e.data_source\nwhere\n  datediff(\n        year,\n        p.birth_date,\n        e.first_day_of_month\n        ) >= 40", "relation_name": "tuva.ahrq_measures._int_pqi_05_denom", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:21.121714Z", "completed_at": "2025-06-03T19:50:21.142017Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:21.151737Z", "completed_at": "2025-06-03T19:50:21.151744Z"}], "thread_id": "Thread-1", "execution_time": 0.03190207481384277, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.ahrq_measures__int_pqi_07_denom", "compiled": true, "compiled_code": "\n\nwith __dbt__cte___stg_pqi_patient as (\n\n\nselect\n    data_source\n  , birth_date\n  , person_id\n  , sex\nfrom\n    tuva.core.patient\n) select distinct\n    cast(substring(e.year_month, 1, 4) as int) as year_number\n  , e.person_id\n  , e.data_source\n  , datediff(\n        year,\n        p.birth_date,\n        e.first_day_of_month\n        ) as age\n  , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom tuva.ahrq_measures._stg_pqi_member_months as e\ninner join __dbt__cte___stg_pqi_patient as p\n  on e.person_id = p.person_id\n  and p.data_source = e.data_source\nwhere\n  datediff(\n        year,\n        p.birth_date,\n        e.first_day_of_month\n        ) >= 18", "relation_name": "tuva.ahrq_measures._int_pqi_07_denom", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:21.130572Z", "completed_at": "2025-06-03T19:50:21.142441Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:21.152387Z", "completed_at": "2025-06-03T19:50:21.152392Z"}], "thread_id": "Thread-4", "execution_time": 0.03226017951965332, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.ahrq_measures__int_pqi_08_denom", "compiled": true, "compiled_code": "\n\nwith __dbt__cte___stg_pqi_patient as (\n\n\nselect\n    data_source\n  , birth_date\n  , person_id\n  , sex\nfrom\n    tuva.core.patient\n) select distinct\n    cast(substring(e.year_month, 1, 4) as int) as year_number\n  , e.person_id\n  , e.data_source\n  , datediff(\n        year,\n        p.birth_date,\n        e.first_day_of_month\n        ) as age\n  , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom tuva.ahrq_measures._stg_pqi_member_months as e\ninner join __dbt__cte___stg_pqi_patient as p\n  on e.person_id = p.person_id\n  and p.data_source = e.data_source\nwhere\n  datediff(\n        year,\n        p.birth_date,\n        e.first_day_of_month\n        ) >= 18", "relation_name": "tuva.ahrq_measures._int_pqi_08_denom", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:21.142654Z", "completed_at": "2025-06-03T19:50:21.163471Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:21.164235Z", "completed_at": "2025-06-03T19:50:21.164242Z"}], "thread_id": "Thread-2", "execution_time": 0.023168087005615234, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.ahrq_measures__int_pqi_11_denom", "compiled": true, "compiled_code": "\n\nwith __dbt__cte___stg_pqi_patient as (\n\n\nselect\n    data_source\n  , birth_date\n  , person_id\n  , sex\nfrom\n    tuva.core.patient\n) select distinct\n    cast(substring(e.year_month, 1, 4) as int) as year_number\n  , e.person_id\n  , e.data_source\n  , datediff(\n        year,\n        p.birth_date,\n        e.first_day_of_month\n        ) as age\n  , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom tuva.ahrq_measures._stg_pqi_member_months as e\ninner join __dbt__cte___stg_pqi_patient as p\n  on e.person_id = p.person_id\n  and p.data_source = e.data_source\nwhere\n  datediff(\n        year,\n        p.birth_date,\n        e.first_day_of_month\n        ) >= 18", "relation_name": "tuva.ahrq_measures._int_pqi_11_denom", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:21.153109Z", "completed_at": "2025-06-03T19:50:21.171113Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:21.180286Z", "completed_at": "2025-06-03T19:50:21.180293Z"}], "thread_id": "Thread-3", "execution_time": 0.03814291954040527, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.ahrq_measures__int_pqi_12_denom", "compiled": true, "compiled_code": "\n\nwith __dbt__cte___stg_pqi_patient as (\n\n\nselect\n    data_source\n  , birth_date\n  , person_id\n  , sex\nfrom\n    tuva.core.patient\n) select distinct\n    cast(substring(e.year_month, 1, 4) as int) as year_number\n  , e.person_id\n  , e.data_source\n  , datediff(\n        year,\n        p.birth_date,\n        e.first_day_of_month\n        ) as age\n  , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom tuva.ahrq_measures._stg_pqi_member_months as e\ninner join __dbt__cte___stg_pqi_patient as p\n  on e.person_id = p.person_id\n  and p.data_source = e.data_source\nwhere\n  datediff(\n        year,\n        p.birth_date,\n        e.first_day_of_month\n        ) >= 18", "relation_name": "tuva.ahrq_measures._int_pqi_12_denom", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:21.164839Z", "completed_at": "2025-06-03T19:50:21.185640Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:21.195040Z", "completed_at": "2025-06-03T19:50:21.195046Z"}], "thread_id": "Thread-1", "execution_time": 0.03192400932312012, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.ahrq_measures__int_pqi_14_denom", "compiled": true, "compiled_code": "\n\nwith __dbt__cte___stg_pqi_patient as (\n\n\nselect\n    data_source\n  , birth_date\n  , person_id\n  , sex\nfrom\n    tuva.core.patient\n) select distinct\n    cast(substring(e.year_month, 1, 4) as int) as year_number\n  , e.person_id\n  , e.data_source\n  , datediff(\n        year,\n        p.birth_date,\n        e.first_day_of_month\n        ) as age\n  , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom tuva.ahrq_measures._stg_pqi_member_months as e\ninner join __dbt__cte___stg_pqi_patient as p\n  on e.person_id = p.person_id\n  and p.data_source = e.data_source\nwhere\n  datediff(\n        year,\n        p.birth_date,\n        e.first_day_of_month\n        ) >= 18", "relation_name": "tuva.ahrq_measures._int_pqi_14_denom", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:21.174220Z", "completed_at": "2025-06-03T19:50:21.192416Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:21.195625Z", "completed_at": "2025-06-03T19:50:21.195629Z"}], "thread_id": "Thread-4", "execution_time": 0.032000064849853516, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.ahrq_measures__int_pqi_15_denom", "compiled": true, "compiled_code": "\n\nwith __dbt__cte___stg_pqi_patient as (\n\n\nselect\n    data_source\n  , birth_date\n  , person_id\n  , sex\nfrom\n    tuva.core.patient\n) select distinct\n    cast(substring(e.year_month, 1, 4) as int) as year_number\n  , e.person_id\n  , e.data_source\n  , datediff(\n        year,\n        p.birth_date,\n        e.first_day_of_month\n        ) as age\n  , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom tuva.ahrq_measures._stg_pqi_member_months as e\ninner join __dbt__cte___stg_pqi_patient as p\n  on e.person_id = p.person_id\n  and p.data_source = e.data_source\nwhere\n  datediff(\n        year,\n        p.birth_date,\n        e.first_day_of_month\n        ) >= 18\n  and\n  datediff(\n        year,\n        p.birth_date,\n        e.first_day_of_month\n        ) <= 39", "relation_name": "tuva.ahrq_measures._int_pqi_15_denom", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:21.186144Z", "completed_at": "2025-06-03T19:50:21.202738Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:21.203561Z", "completed_at": "2025-06-03T19:50:21.203566Z"}], "thread_id": "Thread-2", "execution_time": 0.01879405975341797, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.ahrq_measures__int_pqi_16_denom", "compiled": true, "compiled_code": "\n\nwith __dbt__cte___stg_pqi_patient as (\n\n\nselect\n    data_source\n  , birth_date\n  , person_id\n  , sex\nfrom\n    tuva.core.patient\n) select distinct\n    cast(substring(e.year_month, 1, 4) as int) as year_number\n  , e.person_id\n  , e.data_source\n  , datediff(\n        year,\n        p.birth_date,\n        e.first_day_of_month\n        ) as age\n  , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom tuva.ahrq_measures._stg_pqi_member_months as e\ninner join __dbt__cte___stg_pqi_patient as p\n  on e.person_id = p.person_id\n  and p.data_source = e.data_source\nwhere\n  datediff(\n        year,\n        p.birth_date,\n        e.first_day_of_month\n        ) >= 18", "relation_name": "tuva.ahrq_measures._int_pqi_16_denom", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:21.196297Z", "completed_at": "2025-06-03T19:50:21.203882Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:21.204669Z", "completed_at": "2025-06-03T19:50:21.204673Z"}], "thread_id": "Thread-3", "execution_time": 0.01884913444519043, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.mart_review__enrollment_change", "compiled": true, "compiled_code": "\n\nwith rankedmonths as (\n    select\n        person_id\n        , year_month\n        , data_source\n        , lag(year_month_date, 1) over (partition by person_id, data_source\norder by year_month_date) as prev_year_month\n        , lead(year_month_date, 1) over (partition by person_id, data_source\norder by year_month_date) as next_year_month\n        , year_month_date\n    from tuva.data_quality.mart_review__stg_member_month\n)\n, changes as (\n select\n    person_id\n    , data_source\n    , year_month_date as change_month\n    , case\n        when prev_year_month is null\n            or \n\n    dateadd(\n        month,\n        -1,\n        year_month_date\n        )\n\n != prev_year_month\n        then 'added'\n    end as change_type\nfrom rankedmonths\nunion all\nselect\n    person_id\n    , data_source\n    , \n\n    dateadd(\n        month,\n        1,\n        year_month_date\n        )\n\n as change_month\n    , case\n        when next_year_month is null\n            or \n\n    dateadd(\n        month,\n        1,\n        year_month_date\n        )\n\n != next_year_month\n        then 'removed'\n    end as change_type\nfrom rankedmonths\n\n)\n, final as (\n    select\n       person_id || '|' || change_month as membermonthkey\n        , data_source\n        , person_id\n        , change_month\n        , change_type\n    from changes\n    where change_type is not null\n)\n, result as (\n    select\n        data_source\n        , change_month\n        , change_type\n        , count(*) as member_count\n    from final\n    group by data_source\n    , change_month\n    , change_type\n)\n\n\nselect * , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom result", "relation_name": "tuva.data_quality.mart_review__enrollment_change", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:21.235583Z", "completed_at": "2025-06-03T19:50:21.252253Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:21.256258Z", "completed_at": "2025-06-03T19:50:21.256262Z"}], "thread_id": "Thread-1", "execution_time": 0.022607088088989258, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.mart_review__stg_pharmacy_claim", "compiled": true, "compiled_code": "\n\nselect mc.*\n, cast(c.year_month_int as TEXT) as year_month\nfrom tuva.core.pharmacy_claim as mc\nleft outer join tuva.reference_data.calendar as c on coalesce(mc.paid_date,mc.dispensing_date) = c.full_date", "relation_name": "tuva.data_quality.mart_review__stg_pharmacy_claim", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:21.256672Z", "completed_at": "2025-06-03T19:50:21.262417Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:21.263531Z", "completed_at": "2025-06-03T19:50:21.263536Z"}], "thread_id": "Thread-3", "execution_time": 0.017342090606689453, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.not_null_core__pharmacy_claim_person_id.27e3c20e38", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect person_id\nfrom tuva.core.pharmacy_claim\nwhere person_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:21.264168Z", "completed_at": "2025-06-03T19:50:21.280988Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:21.286986Z", "completed_at": "2025-06-03T19:50:21.286993Z"}], "thread_id": "Thread-4", "execution_time": 0.025213241577148438, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.unique_core__pharmacy_claim_pharmacy_claim_id.a91e86c79c", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    pharmacy_claim_id as unique_field,\n    count(*) as n_records\n\nfrom tuva.core.pharmacy_claim\nwhere pharmacy_claim_id is not null\ngroup by pharmacy_claim_id\nhaving count(*) > 1\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:21.268951Z", "completed_at": "2025-06-03T19:50:21.281176Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:21.287417Z", "completed_at": "2025-06-03T19:50:21.287423Z"}], "thread_id": "Thread-1", "execution_time": 0.0253298282623291, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.encounters__stg_eligibility", "compiled": true, "compiled_code": "\n\nselect\n      e.person_id\n    , e.birth_date\n    , e.gender\n    , e.race\n    , d.patient_data_source_id\n    , row_number() over (partition by d.patient_data_source_id\norder by e.enrollment_start_date desc) as patient_row_num\n    , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom tuva.claims_preprocessing.normalized_input_eligibility as e\ninner join tuva.claims_preprocessing.encounters__patient_data_source_id as d on e.person_id = d.person_id\nand\ne.data_source = d.data_source", "relation_name": "tuva.claims_preprocessing.encounters__stg_eligibility", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:21.275784Z", "completed_at": "2025-06-03T19:50:21.287790Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:21.288610Z", "completed_at": "2025-06-03T19:50:21.288614Z"}], "thread_id": "Thread-2", "execution_time": 0.024738073348999023, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.service_category__acute_inpatient_professional", "compiled": true, "compiled_code": "\n\nselect distinct\n    claim_id\n  , claim_line_number\n  , data_source\n  , claim_line_id\n  , 'inpatient' as service_category_1\n  , 'acute inpatient' as service_category_2\n  , case\n      when hcpcs_code in ('59400', '59409', '59410', '59610', '59612', '59614') then 'l/d - vaginal delivery'\n      when hcpcs_code in ('59510', '59514', '59515', '59618', '59620', '59622') then 'l/d - cesarean delivery'\n      else 'acute inpatient - other'\n    end as service_category_3\n  , '_int_acute_inpatient_professional' as source_model_name\n  , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom tuva.claims_preprocessing.service_category__stg_medical_claim\nwhere\n  claim_type = 'professional'\n  and place_of_service_code = '21'", "relation_name": "tuva.claims_preprocessing._int_acute_inpatient_professional", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:21.281419Z", "completed_at": "2025-06-03T19:50:21.288952Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:21.289896Z", "completed_at": "2025-06-03T19:50:21.289899Z"}], "thread_id": "Thread-3", "execution_time": 0.014473915100097656, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.service_category__ambulance_professional", "compiled": true, "compiled_code": "\n\nselect distinct\n    claim_id\n  , claim_line_number\n  , data_source\n  , claim_line_id\n  , 'ancillary' as service_category_1\n  , 'ambulance' as service_category_2\n  , 'ambulance' as service_category_3\n  , '_int_ambulance_professional' as source_model_name\n  , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom tuva.claims_preprocessing.service_category__stg_medical_claim\nwhere\n  claim_type = 'professional'\n  and (\n    hcpcs_code between 'A0425' and 'A0436'\n    or place_of_service_code in ('41', '42')\n  )", "relation_name": "tuva.claims_preprocessing._int_ambulance_professional", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:21.291135Z", "completed_at": "2025-06-03T19:50:21.309984Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:21.315353Z", "completed_at": "2025-06-03T19:50:21.315360Z"}], "thread_id": "Thread-4", "execution_time": 0.02626514434814453, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.service_category__home_health_institutional", "compiled": true, "compiled_code": "\n\nselect distinct\n    claim_id\n  , data_source\n  , 'outpatient' as service_category_1\n  , 'home health' as service_category_2\n  , 'home health' as service_category_3\n  , '_int_home_health_institutional' as source_model_name\n  , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom tuva.claims_preprocessing.service_category__stg_medical_claim\nwhere claim_type = 'institutional'\n  and substring(bill_type_code, 1, 2) in (\n      '31'  -- Home Health Inpatient (Part A) - Typically considered inpatient\n    , '32'  -- Home Health Inpatient (Part B) - Outpatient services billed by home health agencies\n    , '33'  -- Home Health Outpatient\n    , '34'  -- Home Health Other (Part B)\n    , '35'  -- Home Health Intermediate Care - Level I\n    , '36'  -- Home Health Intermediate Care - Level II\n    , '37'  -- Home Health Subacute Inpatient\n    , '38'   -- Home Health Swing Beds\n  )", "relation_name": "tuva.claims_preprocessing._int_home_health_institutional", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:21.296732Z", "completed_at": "2025-06-03T19:50:21.310186Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:21.315754Z", "completed_at": "2025-06-03T19:50:21.315758Z"}], "thread_id": "Thread-1", "execution_time": 0.026395797729492188, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.service_category__inpatient_psychiatric_professional", "compiled": true, "compiled_code": "\n\nselect distinct\n  claim_id\n  , claim_line_number\n  , data_source\n  , claim_line_id\n  , 'inpatient' as service_category_1\n  , 'inpatient psychiatric' as service_category_2\n  , 'inpatient psychiatric' as service_category_3\n  , '_int_inpatient_psychiatric_professional' as source_model_name\n  , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom tuva.claims_preprocessing.service_category__stg_medical_claim\nwhere claim_type = 'professional'\n  and place_of_service_code in ('51', '56')", "relation_name": "tuva.claims_preprocessing._int_inpatient_psychiatric_professional", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:21.304491Z", "completed_at": "2025-06-03T19:50:21.316089Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:21.316911Z", "completed_at": "2025-06-03T19:50:21.316915Z"}], "thread_id": "Thread-2", "execution_time": 0.02629995346069336, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.service_category__inpatient_rehab_professional", "compiled": true, "compiled_code": "\n\nselect distinct\n    claim_id\n  , claim_line_number\n  , data_source\n  , claim_line_id\n  , 'inpatient' as service_category_1\n  , 'inpatient rehabilitation' as service_category_2\n  , 'inpatient rehabilitation' as service_category_3\n  , '_int_inpatient_rehab_professional' as source_model_name\n  , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom tuva.claims_preprocessing.service_category__stg_medical_claim\nwhere claim_type = 'professional'\n  and place_of_service_code in ('61')", "relation_name": "tuva.claims_preprocessing._int_inpatient_rehab_professional", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:21.310415Z", "completed_at": "2025-06-03T19:50:21.317485Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:21.318385Z", "completed_at": "2025-06-03T19:50:21.318389Z"}], "thread_id": "Thread-3", "execution_time": 0.014374971389770508, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.service_category__inpatient_skilled_nursing_institutional", "compiled": true, "compiled_code": "\n\nselect distinct\n  claim_id\n  , data_source\n  , 'inpatient' as service_category_1\n  , 'skilled nursing' as service_category_2\n  , 'skilled nursing' as service_category_3\n  , '_int_inpatient_skilled_nursing_institutional' as source_model_name\n  , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom tuva.claims_preprocessing.service_category__stg_medical_claim\nwhere claim_type = 'institutional'\n  and substring(bill_type_code, 1, 2) in ('21', '22')", "relation_name": "tuva.claims_preprocessing._int_inpatient_skilled_nursing_institutional", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:21.319165Z", "completed_at": "2025-06-03T19:50:21.336241Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:21.336963Z", "completed_at": "2025-06-03T19:50:21.336970Z"}], "thread_id": "Thread-4", "execution_time": 0.01976799964904785, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.service_category__inpatient_substance_use_professional", "compiled": true, "compiled_code": "\n\nselect distinct\n  claim_id\n  , claim_line_number\n  , data_source\n  , claim_line_id\n  , 'inpatient' as service_category_1\n  , 'inpatient substance use' as service_category_2\n  , 'inpatient substance use' as service_category_3\n  ,'service_category__inpatient_substance_use_professional' as source_model_name\n  , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom tuva.claims_preprocessing.service_category__stg_medical_claim\nwhere claim_type = 'professional'\n  and place_of_service_code in ('55')", "relation_name": "tuva.claims_preprocessing.service_category__inpatient_substance_use_professional", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:21.325257Z", "completed_at": "2025-06-03T19:50:21.336764Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:21.342488Z", "completed_at": "2025-06-03T19:50:21.342493Z"}], "thread_id": "Thread-1", "execution_time": 0.02484297752380371, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.service_category__observation_institutional", "compiled": true, "compiled_code": "\n\nselect distinct\n   med.claim_id\n   , med.claim_line_number\n   , med.data_source\n   , 'outpatient' as service_category_1\n   , 'observation' as service_category_2\n   , 'observation' as service_category_3\n   , '_int_observation_institutional' as source_model_name\n   , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom tuva.claims_preprocessing.service_category__stg_medical_claim as med\nwhere claim_type = 'institutional'\n   and (revenue_center_code in ('0762')\n   or hcpcs_code in ('G0378', 'G0379')\n   )", "relation_name": "tuva.claims_preprocessing._int_observation_institutional", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:21.330722Z", "completed_at": "2025-06-03T19:50:21.342279Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:21.343191Z", "completed_at": "2025-06-03T19:50:21.343195Z"}], "thread_id": "Thread-2", "execution_time": 0.02430415153503418, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.service_category__outpatient_psychiatric_professional", "compiled": true, "compiled_code": "\n\nselect distinct\n    claim_id\n  , claim_line_number\n  , data_source\n  , claim_line_id\n  , 'outpatient' as service_category_1\n  , 'outpatient psychiatric' as service_category_2\n  , 'outpatient psychiatric' as service_category_3\n  , '_int_outpatient_psychiatric_professional' as source_model_name\n  , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom tuva.claims_preprocessing.service_category__stg_medical_claim\nwhere claim_type = 'professional'\n  and place_of_service_code in ('52', '53')", "relation_name": "tuva.claims_preprocessing._int_outpatient_psychiatric_professional", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:21.337383Z", "completed_at": "2025-06-03T19:50:21.344065Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:21.344948Z", "completed_at": "2025-06-03T19:50:21.344952Z"}], "thread_id": "Thread-3", "execution_time": 0.014585733413696289, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.service_category__outpatient_rehab_professional", "compiled": true, "compiled_code": "\n\nselect distinct\n    claim_id\n  , claim_line_number\n  , data_source\n  , claim_line_id\n  , 'outpatient' as service_category_1\n  , 'outpatient rehabilitation' as service_category_2\n  , 'outpatient rehabilitation' as service_category_3\n  , '_int_outpatient_rehab_professional' as source_model_name\n  , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom tuva.claims_preprocessing.service_category__stg_medical_claim\nwhere claim_type = 'professional'\n  and place_of_service_code in ('62')", "relation_name": "tuva.claims_preprocessing._int_outpatient_rehab_professional", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:21.345738Z", "completed_at": "2025-06-03T19:50:21.363439Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:21.364003Z", "completed_at": "2025-06-03T19:50:21.364009Z"}], "thread_id": "Thread-4", "execution_time": 0.020248889923095703, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.service_category__outpatient_skilled_nursing_institutional", "compiled": true, "compiled_code": "\n\nselect distinct\n    claim_id\n  , data_source\n  , 'outpatient' as service_category_1\n  , 'skilled nursing' as service_category_2\n  , 'skilled nursing' as service_category_3\n  , 'service_category__outpatient_skilled_nursing_institutional' as source_model_name\n  , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom tuva.claims_preprocessing.service_category__stg_medical_claim\nwhere claim_type = 'institutional'\n  and substring(bill_type_code, 1, 2) in ('23', '28')", "relation_name": "tuva.claims_preprocessing.service_category__outpatient_skilled_nursing_institutional", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:21.351802Z", "completed_at": "2025-06-03T19:50:21.364413Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:21.371529Z", "completed_at": "2025-06-03T19:50:21.371533Z"}], "thread_id": "Thread-1", "execution_time": 0.02708911895751953, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.service_category__stg_inpatient_institutional", "compiled": true, "compiled_code": "\n\nwith drg_requirement as (\n  select distinct\n      mc.claim_id\n    , mc.data_source\n  from tuva.claims_preprocessing.service_category__stg_medical_claim as mc\n  left outer join tuva.terminology.ms_drg as msdrg\n    on mc.drg_code_type = 'ms-drg'\n    and mc.drg_code = msdrg.ms_drg_code\n  left outer join tuva.terminology.apr_drg as aprdrg\n    on mc.drg_code_type = 'apr-drg'\n    and mc.drg_code = aprdrg.apr_drg_code\n  where mc.claim_type = 'institutional'\n    and (msdrg.ms_drg_code is not null\n      or aprdrg.apr_drg_code is not null\n    )\n)\n\n, bill_type_requirement as (\n  select distinct\n      claim_id\n    , data_source\n  from tuva.claims_preprocessing.service_category__stg_medical_claim\n  where claim_type = 'institutional'\n    and substring(bill_type_code, 1, 2) in (\n      '11'  -- Hospital Inpatient (Part A)\n    , '12'  -- Hospital Inpatient (Part B)\n    , '21'  -- Skilled Nursing Facility (SNF) Inpatient (Part A)\n    , '82'  -- Hospital-based Hospice (Inpatient)\n    , '15'  -- Hospital Intermediate Care - Level I\n    , '16'  -- Hospital Intermediate Care - Level II\n    , '17'  -- Hospital Subacute Inpatient\n    , '18'  -- Hospital Swing Beds\n    , '22'  -- Skilled Nursing Facility (SNF) Inpatient (Part B)\n    , '25'  -- SNF Intermediate Care - Level I\n    , '26'  -- SNF Intermediate Care - Level II\n    , '27'  -- SNF Subacute Inpatient\n    , '28'  -- SNF Swing Beds\n    , '31'  -- Home Health Inpatient (Part A)\n    , '41'  -- Religious Nonmedical Hospital Inpatient (Part A)\n    , '42'  -- Religious Nonmedical Hospital Inpatient (Part B)\n    , '45'  -- Religious Nonmedical Hospital Intermediate Care - Level I\n    , '46'  -- Religious Nonmedical Hospital Intermediate Care - Level II\n    , '47'  -- Religious Nonmedical Hospital Subacute Inpatient\n    , '48'  -- Religious Nonmedical Hospital Swing Beds\n    , '61'  -- Intermediate Care Inpatient (Part A)\n    , '62'  -- Intermediate Care Inpatient (Part B)\n    , '65'  -- Intermediate Care - Level I\n    , '66'  -- Intermediate Care - Level II\n    , '67'  -- Intermediate Care Subacute Inpatient\n    , '68'  -- Intermediate Care Swing Beds\n    )\n)\n\nselect distinct\n    a.claim_id\n  , a.data_source\n  , 'inpatient' as service_type\n  , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom tuva.claims_preprocessing.service_category__stg_medical_claim as a\ninner join bill_type_requirement as d\n  on a.claim_id = d.claim_id\n  and a.data_source = d.data_source\n\n\nunion distinct\n\n\nselect distinct\n    a.claim_id\n  , a.data_source\n  , 'inpatient' as service_type\n  , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom tuva.claims_preprocessing.service_category__stg_medical_claim as a\ninner join drg_requirement as c\n  on a.claim_id = c.claim_id\n  and a.data_source = c.data_source", "relation_name": "tuva.claims_preprocessing.service_category__stg_inpatient_institutional", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:21.358664Z", "completed_at": "2025-06-03T19:50:21.370583Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:21.372127Z", "completed_at": "2025-06-03T19:50:21.372132Z"}], "thread_id": "Thread-2", "execution_time": 0.026881933212280273, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.service_category__stg_professional", "compiled": true, "compiled_code": "\n\nselect\n    a.claim_id\n  , a.claim_line_number\n  , a.data_source\n  , a.claim_line_id as claim_line_id\n  , 'professional' as service_type\n  , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom tuva.claims_preprocessing.service_category__stg_medical_claim as a\nwhere a.claim_type = 'professional'", "relation_name": "tuva.claims_preprocessing.service_category__stg_professional", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:21.364608Z", "completed_at": "2025-06-03T19:50:21.373376Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:21.380234Z", "completed_at": "2025-06-03T19:50:21.380240Z"}], "thread_id": "Thread-3", "execution_time": 0.021898984909057617, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.service_category__urgent_care_institutional", "compiled": true, "compiled_code": "\n\nwith multiple_sources as (\n  select distinct\n      a.claim_id\n    , a.data_source\n    , 'urgent care' as service_category_2\n    , 'urgent care' as service_category_3\n    , '_int_urgent_care_institutional' as source_model_name\n    , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\n  from tuva.claims_preprocessing.service_category__stg_medical_claim as a\n  where claim_type = 'institutional'\n    and revenue_center_code = '0456'\n    and substring(bill_type_code, 1, 2) in ('13', '71', '73')\n\n  union all\n\n  select distinct\n      a.claim_id\n    , a.data_source\n    , 'urgent care' as service_category_2\n    , 'urgent care' as service_category_3\n    , '_int_urgent_care_institutional' as source_model_name\n    , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\n  from tuva.claims_preprocessing.service_category__stg_medical_claim as a\n  where claim_type = 'institutional'\n    and hcpcs_code in ('S9088', '99051', 'S9083')\n)\n\nselect distinct\n  claim_id\n  , data_source\n  , 'outpatient' as service_category_1\n  , service_category_2\n  , service_category_3\n  , source_model_name\n  , tuva_last_run\nfrom multiple_sources", "relation_name": "tuva.claims_preprocessing._int_urgent_care_institutional", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:21.374041Z", "completed_at": "2025-06-03T19:50:21.392827Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:21.398493Z", "completed_at": "2025-06-03T19:50:21.398500Z"}], "thread_id": "Thread-4", "execution_time": 0.02667093276977539, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.service_category__urgent_care_professional", "compiled": true, "compiled_code": "\n\nwith multiple_source as (\n  select distinct\n      claim_id\n      , claim_line_number\n      , data_source\n      , claim_line_id\n  , 'urgent care' as service_category_2\n  , 'urgent care' as service_category_3\n  , '_int_urgent_care_professional' as source_model_name\n  , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\n  from tuva.claims_preprocessing.service_category__stg_medical_claim\n  where claim_type = 'professional'\n    and place_of_service_code in ('20')\n\n  union all\n\n  select distinct\n      claim_id\n      , claim_line_number\n      , data_source\n      , claim_line_id\n  , 'urgent care' as service_category_2\n  , 'urgent care' as service_category_3\n  , '_int_urgent_care_professional' as source_model_name\n  , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\n  from tuva.claims_preprocessing.service_category__stg_medical_claim\n  where claim_type = 'professional'\n  and hcpcs_code in ('S9088', '99051', 'S9083')\n)\n\nselect distinct\n  claim_id\n  , claim_line_number\n  , data_source\n  , claim_line_id\n  , 'outpatient' as service_category_1\n  , service_category_2\n  , service_category_3\n  , source_model_name\n  , tuva_last_run\nfrom multiple_source", "relation_name": "tuva.claims_preprocessing._int_urgent_care_professional", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:21.381349Z", "completed_at": "2025-06-03T19:50:21.399166Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:21.499659Z", "completed_at": "2025-06-03T19:50:21.499673Z"}], "thread_id": "Thread-1", "execution_time": 0.12614083290100098, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_utils_unique_combination_of_columns_fhir_preprocessing__patient_patient_internal_id.93429f1635", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith validation_errors as (\n\n    select\n        patient_internal_id\n    from tuva.fhir_preprocessing.patient\n    group by patient_internal_id\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:21.386560Z", "completed_at": "2025-06-03T19:50:21.506539Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:21.515957Z", "completed_at": "2025-06-03T19:50:21.515962Z"}], "thread_id": "Thread-2", "execution_time": 0.1360471248626709, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.ahrq_measures__pqi_denom_long", "compiled": true, "compiled_code": "\n\nselect\n    d.year_number\n  , d.person_id\n  , d.data_source\n  , '01' as pqi_number\n  , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom tuva.ahrq_measures._int_pqi_01_denom as d\n\nunion all\n\nselect\n    d.year_number\n  , d.person_id\n  , d.data_source\n  , '03' as pqi_number\n  , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom tuva.ahrq_measures._int_pqi_03_denom as d\n\nunion all\n\nselect\n    d.year_number\n  , d.person_id\n  , d.data_source\n  , '05' as pqi_number\n  , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom tuva.ahrq_measures._int_pqi_05_denom as d\n\nunion all\n\nselect\n    d.year_number\n  , d.person_id\n  , d.data_source\n  , '07' as pqi_number\n  , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom tuva.ahrq_measures._int_pqi_07_denom as d\n\nunion all\n\nselect\n    d.year_number\n  , d.person_id\n  , d.data_source\n  , '08' as pqi_number\n  , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom tuva.ahrq_measures._int_pqi_08_denom as d\n\nunion all\n\nselect\n    d.year_number\n  , d.person_id\n  , d.data_source\n  , '11' as pqi_number\n  , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom tuva.ahrq_measures._int_pqi_11_denom as d\n\nunion all\n\nselect\n    d.year_number\n  , d.person_id\n  , d.data_source\n  , '12' as pqi_number\n  , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom tuva.ahrq_measures._int_pqi_12_denom as d\n\nunion all\n\nselect\n    d.year_number\n  , d.person_id\n  , d.data_source\n  , '14' as pqi_number\n  , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom tuva.ahrq_measures._int_pqi_14_denom as d\n\nunion all\n\nselect\n    d.year_number\n  , d.person_id\n  , d.data_source\n  , '15' as pqi_number\n  , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom tuva.ahrq_measures._int_pqi_15_denom as d\n\nunion all\n\nselect\n    d.year_number\n  , d.person_id\n  , d.data_source\n  , '16' as pqi_number\n  , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom tuva.ahrq_measures._int_pqi_16_denom as d", "relation_name": "tuva.ahrq_measures.pqi_denom_long", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:21.399617Z", "completed_at": "2025-06-03T19:50:21.516914Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:21.535588Z", "completed_at": "2025-06-03T19:50:21.535595Z"}], "thread_id": "Thread-3", "execution_time": 0.14256906509399414, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.fhir_preprocessing__int_pharmacy_claim_item_adjudication", "compiled": true, "compiled_code": "\nwith  __dbt__cte___stg_pharmacy_claim as (\n\n\nselect\n      pharmacy_claim_id\n    , person_id\n    , claim_id\n    , claim_line_number\n    , payer\n    , plan\n    , dispensing_provider_id\n    , dispensing_provider_name\n    , dispensing_date\n    , paid_date\n    , days_supply\n    , refills\n    , paid_amount\n    , in_network_flag\n    , ndc_code\n    , data_source\nfrom tuva.core.pharmacy_claim\n\n\n), adjudication_amount as (\n\n    select\n          claim_id\n        , claim_line_number\n        , 'ADJ_TYPE' as eob_item_adjudication_category_system\n        , 'benefit' as eob_item_adjudication_category_code\n        , 'USD' as eob_item_adjudication_amount_currency\n        /* required by HEDIS, cannot be <= $0 */\n        , case\n            when paid_amount <= 0 then cast(0.01 as numeric(28,6) )\n            else cast(paid_amount as numeric(28,6) )\n          end as eob_item_adjudication_amount_value\n    from __dbt__cte___stg_pharmacy_claim\n\n)\n\n, adjudication_status as (\n    select\n          claim_id\n        , claim_line_number\n        , 'ADJ_STATUS' as eob_item_adjudication_category_system\n        , case\n            when in_network_flag = 1 then 'innetwork'\n            when in_network_flag = 0 then 'outofnetwork'\n            else 'other'\n          end as eob_item_adjudication_category_code\n        , 'USD' as eob_item_adjudication_amount_currency\n        /* required by HEDIS, cannot be <= $0 */\n        , case\n            when paid_amount <= 0 then cast(0.01 as numeric(28,6) )\n            else cast(paid_amount as numeric(28,6) )\n          end as eob_item_adjudication_amount_value\n    from __dbt__cte___stg_pharmacy_claim\n)\n\n, unioned as (\n\n    select * from adjudication_amount\n    union all\n    select * from adjudication_status\n\n)\n\n/* create a json string for CSV export */\n\nselect\n    claim_id, claim_line_number\n    , to_json(\n        array_agg(\n            object_construct(\n                'eobItemAdjudicationCategorySystem',eob_item_adjudication_category_system\n                , 'eobItemAdjudicationCategoryCode',eob_item_adjudication_category_code\n                , 'eobItemAdjudicationAmountCurrency',eob_item_adjudication_amount_currency\n                , 'eobItemAdjudicationAmountValue',eob_item_adjudication_amount_value\n            )\n        )\n    ) as eob_item_adjudication_list\nfrom unioned\ngroup by claim_id, claim_line_number\n", "relation_name": "tuva.fhir_preprocessing._int_pharmacy_claim_item_adjudication", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:21.517328Z", "completed_at": "2025-06-03T19:50:21.552148Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:21.569722Z", "completed_at": "2025-06-03T19:50:21.569728Z"}], "thread_id": "Thread-4", "execution_time": 0.05432295799255371, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.fhir_preprocessing__int_pharmacy_claim_supporting_info", "compiled": true, "compiled_code": "\nwith  __dbt__cte___stg_pharmacy_claim as (\n\n\nselect\n      pharmacy_claim_id\n    , person_id\n    , claim_id\n    , claim_line_number\n    , payer\n    , plan\n    , dispensing_provider_id\n    , dispensing_provider_name\n    , dispensing_date\n    , paid_date\n    , days_supply\n    , refills\n    , paid_amount\n    , in_network_flag\n    , ndc_code\n    , data_source\nfrom tuva.core.pharmacy_claim\n\n\n), days_supply as (\n\n    select\n          claim_id\n        , 'dayssupply' as eob_supporting_info_category_code\n        , cast(days_supply as TEXT ) as eob_supporting_info_value_quantity /* cast as string for union */\n        , cast(null as TEXT ) as eob_supporting_info_code /* required for union */\n        , cast(null as TEXT ) as eob_supporting_info_system /* required for union */\n    from __dbt__cte___stg_pharmacy_claim\n    where claim_line_number = 1 /* filter to claim header */\n    and days_supply is not null\n\n)\n\n, refill as (\n\n    select\n          claim_id\n        , 'refillnum' as eob_supporting_info_category_code\n        , cast(refills as TEXT ) as eob_supporting_info_value_quantity /* cast as string for union */\n        , cast(null as TEXT ) as eob_supporting_info_code /* required for union */\n        , cast(null as TEXT ) as eob_supporting_info_system /* required for union */\n    from __dbt__cte___stg_pharmacy_claim\n    where claim_line_number = 1 /* filter to claim header */\n    and refills is not null\n\n)\n\n/*\n    Tuva model missing DAW code.\n    Mapping a default value since HEDIS reuires it.\n*/\n, daw as (\n\n    select\n          claim_id\n        , 'dawcode' as eob_supporting_info_category_code\n        , cast(null as TEXT ) as eob_supporting_info_value_quantity /* cast as string for union */\n        , '0' as eob_supporting_info_code\n        , 'DAW' as eob_supporting_info_system\n    from __dbt__cte___stg_pharmacy_claim\n    where claim_line_number = 1 /* filter to claim header */\n\n)\n\n, unioned as (\n\n    select * from days_supply\n    union all\n    select * from refill\n    union all\n    select * from daw\n\n)\n\n, add_sequence as (\n    select\n          claim_id\n        , eob_supporting_info_category_code\n        , cast(eob_supporting_info_value_quantity as numeric(28,6) ) as eob_supporting_info_value_quantity\n        , eob_supporting_info_code\n        , eob_supporting_info_system\n        , row_number() over(\n            partition by claim_id\n            order by eob_supporting_info_category_code\n          ) as eob_supporting_info_sequence\n    from unioned\n)\n\n/* create a json string for CSV export */\n\nselect\n    claim_id\n    , to_json(\n        array_agg(\n            object_construct(\n                'eobSupportingInfoSequence',eob_supporting_info_sequence\n                , 'eobSupportingInfoCategoryCode',eob_supporting_info_category_code\n                , 'eobSupportingInfoValueQuantity',eob_supporting_info_value_quantity\n                , 'eobSupportingInfoCode',eob_supporting_info_code\n                , 'eobSupportingInfoSystem',eob_supporting_info_system\n            )\n        )\n    ) as eob_supporting_info_list\nfrom add_sequence\ngroup by claim_id\n", "relation_name": "tuva.fhir_preprocessing._int_pharmacy_claim_supporting_info", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:21.536208Z", "completed_at": "2025-06-03T19:50:21.563671Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:21.570105Z", "completed_at": "2025-06-03T19:50:21.570110Z"}], "thread_id": "Thread-1", "execution_time": 0.05350089073181152, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.fhir_preprocessing__int_pharmacy_claim_total", "compiled": true, "compiled_code": "\nwith  __dbt__cte___stg_pharmacy_claim as (\n\n\nselect\n      pharmacy_claim_id\n    , person_id\n    , claim_id\n    , claim_line_number\n    , payer\n    , plan\n    , dispensing_provider_id\n    , dispensing_provider_name\n    , dispensing_date\n    , paid_date\n    , days_supply\n    , refills\n    , paid_amount\n    , in_network_flag\n    , ndc_code\n    , data_source\nfrom tuva.core.pharmacy_claim\n\n\n), total_amount as (\n\n    select\n          claim_id\n        , 'ADJ_TYPE' as eob_total_category_system\n        , 'benefit' as eob_total_category_code\n        , 'USD' as eob_total_amount_currency\n        /* required by HEDIS, cannot be <= $0 */\n        , case when paid_amount <= 0 then cast(0.01 as numeric(28,6) )\n            else cast(paid_amount as numeric(28,6) )\n          end as eob_total_amount_value\n    from __dbt__cte___stg_pharmacy_claim\n    where claim_line_number = 1 /* filter to claim header */\n\n)\n\n, total_status as (\n\n    select\n          claim_id\n        , 'ADJ_STATUS' as eob_total_category_system\n        , case\n            when in_network_flag = 1 then 'innetwork'\n            when in_network_flag = 0 then 'outofnetwork'\n            else 'other'\n          end as eob_total_category_code\n        , 'USD' as eob_total_amount_currency\n        /* required by HEDIS, cannot be <= $0 */\n        , case when paid_amount <= 0 then cast(0.01 as numeric(28,6) )\n            else cast(paid_amount as numeric(28,6) )\n          end as eob_total_amount_value\n    from __dbt__cte___stg_pharmacy_claim\n    where claim_line_number = 1 /* filter to claim header */\n\n)\n\n, unioned as (\n\n    select * from total_amount\n    union all\n    select * from total_status\n\n)\n\n/* create a json string for CSV export */\n\nselect\n    claim_id\n    , to_json(\n        array_agg(\n            object_construct(\n                'eobTotalCategorySystem',eob_total_category_system\n                , 'eobTotalCategoryCode',eob_total_category_code\n                , 'eobTotalAmountCurrency',eob_total_amount_currency\n                , 'eobTotalAmountValue',eob_total_amount_value\n            )\n        )\n    ) as eob_total_list\nfrom unioned\ngroup by claim_id\n", "relation_name": "tuva.fhir_preprocessing._int_pharmacy_claim_total", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:21.552371Z", "completed_at": "2025-06-03T19:50:21.583615Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:21.584531Z", "completed_at": "2025-06-03T19:50:21.584536Z"}], "thread_id": "Thread-2", "execution_time": 0.048613786697387695, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.hcc_suspecting__int_all_medications", "compiled": true, "compiled_code": "\n\nwith  __dbt__cte___stg_medication as (\n\nselect\n      person_id\n    , dispensing_date\n    , source_code\n    , source_code_type\n    , ndc_code\n    , rxnorm_code\n    , data_source\nfrom tuva.core.medication\n\n\n),  __dbt__cte___stg_pharmacy_claim as (\n\nselect\n      person_id\n    , dispensing_date\n    , ndc_code\n    , paid_date\n    , data_source\nfrom tuva.core.pharmacy_claim\n\n\n), medications as (\n\n    select\n          person_id\n        , dispensing_date\n        , source_code\n        , source_code_type\n        , ndc_code\n        , rxnorm_code\n        , data_source\n    from __dbt__cte___stg_medication\n\n)\n\n, pharmacy_claims as (\n\n    select\n          person_id\n        , coalesce(dispensing_date, paid_date) as dispensing_date\n        , ndc_code as drug_code\n        , 'ndc' as code_system\n        , data_source\n    from __dbt__cte___stg_pharmacy_claim\n\n)\n\n, ndc_medications as (\n\n    select\n          person_id\n        , dispensing_date\n        , ndc_code as drug_code\n        , 'ndc' as code_system\n        , data_source\n    from medications\n    where ndc_code is not null\n\n    union all\n\n    select\n          person_id\n        , dispensing_date\n        , source_code as drug_code\n        , 'ndc' as code_system\n        , data_source\n    from medications\n    where lower(source_code_type) = 'ndc'\n\n)\n\n, rxnorm_medications as (\n\n    select\n          person_id\n        , dispensing_date\n        , rxnorm_code as drug_code\n        , 'rxnorm' as code_system\n        , data_source\n    from medications\n    where rxnorm_code is not null\n\n    union all\n\n    select\n          person_id\n        , dispensing_date\n        , source_code as drug_code\n        , 'rxnorm' as code_system\n        , data_source\n    from medications\n    where lower(source_code_type) = 'rxnorm'\n\n)\n\n, unioned as (\n\n    select * from pharmacy_claims\n    union all\n    select * from ndc_medications\n    union all\n    select * from rxnorm_medications\n\n)\n\n, add_data_types as (\n\n    select\n          cast(person_id as TEXT) as person_id\n        , cast(dispensing_date as date) as dispensing_date\n        , cast(drug_code as TEXT) as drug_code\n        , cast(code_system as TEXT) as code_system\n        , cast(data_source as TEXT) as data_source\n    from unioned\n\n)\n\nselect\n      person_id\n    , dispensing_date\n    , drug_code\n    , code_system\n    , data_source\n    , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom add_data_types", "relation_name": "tuva.hcc_suspecting._int_all_medications", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:21.570471Z", "completed_at": "2025-06-03T19:50:21.584334Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:21.597697Z", "completed_at": "2025-06-03T19:50:21.597704Z"}], "thread_id": "Thread-3", "execution_time": 0.0458829402923584, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.pharmacy__int_claims_current_cost", "compiled": true, "compiled_code": "\nwith __dbt__cte__stg_pharmacy_claim as (\n\n\nselect\n    p.ndc_code\n  , n.fda_description as ndc_description\n  , p.data_source\n  , n.rxcui\n  , p.paid_amount\n  , p.allowed_amount\n  , p.claim_id\n  , p.claim_line_number\n  , p.person_id\n  , p.member_id\n  , p.prescribing_provider_id\n  , p.dispensing_provider_id\n  , p.dispensing_date\n  , p.quantity\n  , p.days_supply\n  , p.refills\n  , p.paid_date\nfrom tuva.core.pharmacy_claim as p\nleft outer join tuva.terminology.ndc as n\n  on p.ndc_code = n.ndc\n) /* All claims, current cost*/\n\nselect\n    p.ndc_code\n  , p.ndc_description\n  , p.data_source\n  , p.rxcui\n  , r.brand_vs_generic\n  , case\n      when ga.brand_with_generic_available is not null\n        then 'brand_with_generic_available'\n      else null\n    end as generic_available\n  , sum(paid_amount) as paid_amount\n  , count(distinct claim_id) as claim_count\n  , sum(paid_amount) / count(distinct claim_id) as cost_per_claim\n  , sum(quantity) as total_units\n  , case\n      when sum(quantity) > 0\n      and sum(paid_amount) > 0\n      then sum(paid_amount) / sum(quantity)\n      else null\n    end as cost_per_unit\n  , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom __dbt__cte__stg_pharmacy_claim as p\nleft outer join tuva.terminology.rxnorm_brand_generic as r\n  on p.rxcui = r.product_rxcui\nleft outer join tuva.pharmacy._int_brand_with_generic_available as ga\n  on p.rxcui = ga.brand_with_generic_available\nwhere p.ndc_code is not null\ngroup by\n    case\n      when ga.brand_with_generic_available is not null\n        then 'brand_with_generic_available'\n      else null\n    end\n  , r.brand_vs_generic\n  , p.ndc_code\n  , p.rxcui\n  , p.ndc_description\n  , p.data_source", "relation_name": "tuva.pharmacy._int_claims_current_cost", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:21.585087Z", "completed_at": "2025-06-03T19:50:21.652478Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:21.707550Z", "completed_at": "2025-06-03T19:50:21.707557Z"}], "thread_id": "Thread-4", "execution_time": 0.12425112724304199, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.quality_measures__int_adh_diabetes_denominator", "compiled": true, "compiled_code": "\n\nwith  __dbt__cte___stg_pharmacy_claim as (\n\n\nselect\n      person_id\n    , dispensing_date\n    , ndc_code\n    , days_supply\n    , paid_date\n    , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom tuva.core.pharmacy_claim\n\n\n),  __dbt__cte___stg_patient as (\n\nselect\n      person_id\n    , sex\n    , birth_date\n    , death_date\n    , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom tuva.core.patient\n), diabetics_codes as (\n\n    select\n          code\n        , code_system\n    from tuva.quality_measures._value_set_codes\n    where lower(concept_name) in (\n          'pqa diabetes medications'\n        )\n\n)\n\n, rx_diabetes as (\n\n    select\n        person_id\n      , dispensing_date\n      , ndc_code\n      , days_supply\n    from __dbt__cte___stg_pharmacy_claim as pharmacy_claims\n    inner join diabetics_codes\n        on pharmacy_claims.ndc_code = diabetics_codes.code\n            and lower(diabetics_codes.code_system) = 'ndc'\n\n)\n\n, rx_diabetes_in_measurement_period as (\n\n    select\n          person_id\n        , dispensing_date\n        , ndc_code\n        , days_supply\n        , performance_period_end -- to use in latter cte for days in treatment period calculation\n    from rx_diabetes\n    inner join tuva.quality_measures._int_adh_diabetes__performance_period as pp\n        on dispensing_date between pp.performance_period_begin and pp.performance_period_end\n\n)\n\n/*\n    These patients need to pass two checks\n    - First medication fill date should be at least 91 days before the end of measurement period\n    - Should have at least two distinct Date of Service (FillDate) for rx\n*/\n\n, rx_fill_order as (\n\n    select\n          person_id\n        , dispensing_date\n        , performance_period_end\n        , dense_rank() over (\n            partition by\n                  person_id\n                , performance_period_end\n            order by dispensing_date\n        ) as dr\n    from rx_diabetes_in_measurement_period\n\n)\n\n, rx_first_fill as (\n\n    select\n          person_id\n        , dispensing_date\n        , performance_period_end\n    from rx_fill_order\n    where dr = 1\n\n)\n\n, timely_fill_check as (\n\n    select\n          person_id\n        , (1 + datediff(\n        day,\n        dispensing_date,\n        performance_period_end\n        ))\n            as days_in_treatment_period\n        /*\n            Performance Period end minus dispensing date results in\n            second_date non-inclusive difference, so to include both of these days\n            1 day is added\n        */\n    from rx_first_fill\n\n)\n\n, first_check_passed_patients as (\n\n    select\n          person_id\n        , days_in_treatment_period\n    from timely_fill_check\n    where days_in_treatment_period > 90\n\n)\n\n, second_check_passed_patients as (\n\n    select\n          person_id\n    from rx_fill_order\n    where dr = 2\n\n)\n\n, qualifying_patients as (\n\n    select\n          first_check_passed_patients.person_id\n        , first_check_passed_patients.days_in_treatment_period\n    from first_check_passed_patients\n    inner join second_check_passed_patients\n        on first_check_passed_patients.person_id = second_check_passed_patients.person_id\n\n)\n\n, qualifying_patients_with_age as (\n\n    select\n          patients.person_id\n        , floor(datediff(\n        hour,\n        birth_date,\n        pp.performance_period_begin\n        ) / 8760.0) as age\n        , days_in_treatment_period\n        , performance_period_begin\n        , performance_period_end\n        , measure_id\n        , measure_name\n        , measure_version\n    from __dbt__cte___stg_patient as patients\n    inner join qualifying_patients\n        on patients.person_id = qualifying_patients.person_id\n    cross join tuva.quality_measures._int_adh_diabetes__performance_period as pp\n    where patients.death_date is null\n\n)\n/*\n    Extracting related fields like dispensing_date, ndc_code and days_supply of qualified patients\n    to avoid redundant computations in numerator model\n*/\n\n, qualifying_patients_all_claim_info as (\n\n    select\n          qualifying_patients_with_age.person_id\n        , qualifying_patients_with_age.age\n        , rx_diabetes_in_measurement_period.dispensing_date\n        , rx_diabetes_in_measurement_period.ndc_code\n        , rx_diabetes_in_measurement_period.days_supply\n        , qualifying_patients_with_age.days_in_treatment_period\n        , qualifying_patients_with_age.performance_period_begin\n        , qualifying_patients_with_age.performance_period_end\n        , qualifying_patients_with_age.measure_id\n        , qualifying_patients_with_age.measure_name\n        , qualifying_patients_with_age.measure_version\n    from qualifying_patients_with_age\n    inner join rx_diabetes_in_measurement_period\n        on qualifying_patients_with_age.person_id = rx_diabetes_in_measurement_period.person_id\n\n)\n\n, denominator as (\n\n    select\n          person_id\n        , age\n        , dispensing_date\n        , ndc_code\n        , days_supply\n        , days_in_treatment_period\n        , performance_period_begin\n        , performance_period_end\n        , measure_id\n        , measure_name\n        , measure_version\n        , 1 as denominator_flag\n    from qualifying_patients_all_claim_info\n    where age >= 18\n\n)\n\n, add_data_types as (\n\n    select\n          cast(person_id as TEXT) as person_id\n        , cast(age as integer) as age\n        , cast(dispensing_date as date) as dispensing_date\n        , cast(ndc_code as TEXT) as ndc_code\n        , cast(days_supply as integer) as days_supply\n        , cast(days_in_treatment_period as integer) as days_in_treatment_period\n        , cast(performance_period_begin as date) as performance_period_begin\n        , cast(performance_period_end as date) as performance_period_end\n        , cast(measure_id as TEXT) as measure_id\n        , cast(measure_name as TEXT) as measure_name\n        , cast(measure_version as TEXT) as measure_version\n        , cast(denominator_flag as integer) as denominator_flag\n    from denominator\n\n)\n\nselect\n      person_id\n    , age\n    , dispensing_date\n    , ndc_code\n    , days_supply\n    , days_in_treatment_period\n    , performance_period_begin\n    , performance_period_end\n    , measure_id\n    , measure_name\n    , measure_version\n    , denominator_flag\n    , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom add_data_types", "relation_name": "tuva.quality_measures._int_adh_diabetes_denominator", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:21.618930Z", "completed_at": "2025-06-03T19:50:21.658221Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:21.707946Z", "completed_at": "2025-06-03T19:50:21.707950Z"}], "thread_id": "Thread-1", "execution_time": 0.1241159439086914, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.quality_measures__int_adh_statins_denominator", "compiled": true, "compiled_code": "\n\nwith  __dbt__cte___stg_pharmacy_claim as (\n\n\nselect\n      person_id\n    , dispensing_date\n    , ndc_code\n    , days_supply\n    , paid_date\n    , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom tuva.core.pharmacy_claim\n\n\n),  __dbt__cte___stg_patient as (\n\nselect\n      person_id\n    , sex\n    , birth_date\n    , death_date\n    , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom tuva.core.patient\n), performance_period as (\n\n    select\n          measure_id\n        , measure_name\n        , measure_version\n        , performance_period_end\n        , performance_period_begin\n    from tuva.quality_measures._int_adh_statins__performance_period\n\n)\n\n, visit_codes as (\n\n    select\n          code\n        , code_system\n    from tuva.quality_measures._value_set_codes\n    where lower(concept_name) = 'pqa statin medications'\n\n)\n\n, pharmacy_claim as (\n\n    select\n          person_id\n        , dispensing_date\n        , ndc_code\n        , days_supply\n    from __dbt__cte___stg_pharmacy_claim\n\n)\n\n, patient_with_claim as (\n\n    select\n          pharmacy_claim.person_id\n        , dispensing_date\n        , days_supply\n        , ndc_code\n    from pharmacy_claim\n    inner join visit_codes\n        on pharmacy_claim.ndc_code = visit_codes.code\n\n)\n\n, patient_within_performance_period as (\n\n    select\n          person_id\n        , dispensing_date\n        , days_supply\n        , ndc_code\n        , performance_period_begin\n        , performance_period_end\n    from patient_with_claim as claim_patient\n    inner join performance_period as pp\n        on claim_patient.dispensing_date between pp.performance_period_begin and pp.performance_period_end\n\n)\n\n/*\n    These patients need to pass two checks\n    - First medication fill date should be at least 91 days before the end of measurement period\n    - Should have at least two distinct Date of Service (FillDate) for rx\n*/\n\n, patient_with_rank as (\n\n    select\n          person_id\n        , dispensing_date\n        , days_supply\n        , ndc_code\n        , dense_rank() over (partition by person_id\norder by dispensing_date) as dense_rank\n    from patient_within_performance_period\n\n)\n\n, patient_with_first_dispensing_date as (\n\n    select\n          person_id\n        , dispensing_date as first_dispensing_date\n    from patient_with_rank\n    where dense_rank = 1\n\n)\n\n\n/*\ntreatment period days is abbreviated as tpd\n*/\n\n, patient_with_tpd as (\n\n    select\n          patients1.person_id\n        , patients1.dispensing_date\n        , patients2.first_dispensing_date\n        , patients1.days_supply\n        , datediff(\n        day,\n        first_dispensing_date,\n        performance_period_end\n        ) as tpd\n    from patient_within_performance_period as patients1\n    inner join patient_with_first_dispensing_date as patients2\n        on patients1.person_id = patients2.person_id\n\n)\n\n, first_check_patient as (\n\n    select\n          person_id\n        , dispensing_date\n        , first_dispensing_date\n        , days_supply\n    from patient_with_tpd\n    where tpd > 89\n\n)\n\n, second_check_patient as (\n\n    select\n          person_id\n        , ndc_code\n    from patient_with_rank\n    where dense_rank = 2\n\n)\n\n, both_check_patient as (\n\n    select\n          valid_patients1.person_id\n        , valid_patients1.dispensing_date\n        , valid_patients1.first_dispensing_date\n        , valid_patients1.days_supply\n        , valid_patients2.ndc_code\n    from first_check_patient as valid_patients1\n    inner join second_check_patient as valid_patients2\n        on valid_patients1.person_id = valid_patients2.person_id\n\n)\n\n, patient_with_age as (\n\n    select\n          valid_patients1.person_id\n        , floor(datediff(\n        hour,\n        birth_date,\n        pp.performance_period_begin\n        ) / 8760.0) as age\n        , dispensing_date\n        , first_dispensing_date\n        , days_supply\n        , ndc_code\n        , pp.performance_period_begin\n        , pp.performance_period_end\n        , pp.measure_id\n        , pp.measure_name\n        , pp.measure_version\n    from __dbt__cte___stg_patient as patient\n    inner join both_check_patient as valid_patients1\n        on patient.person_id = valid_patients1.person_id\n    cross join performance_period as pp\n    where patient.death_date is null\n\n)\n\n, qualifying_patients as (\n\n    select\n          person_id\n        , dispensing_date\n        , first_dispensing_date\n        , days_supply\n        , ndc_code\n        , performance_period_begin\n        , performance_period_end\n        , measure_id\n        , measure_name\n        , measure_version\n        , 1 as denominator_flag\n    from patient_with_age\n    where age > 17\n\n)\n\n, add_data_types as (\n\n    select\n          cast(person_id as TEXT) as person_id\n        , cast(dispensing_date as date) as dispensing_date\n        , cast(first_dispensing_date as date) as first_dispensing_date\n        , cast(days_supply as integer) as days_supply\n        , cast(ndc_code as TEXT) as ndc_code\n        , cast(performance_period_begin as date) as performance_period_begin\n        , cast(performance_period_end as date) as performance_period_end\n        , cast(measure_id as TEXT) as measure_id\n        , cast(measure_name as TEXT) as measure_name\n        , cast(measure_version as TEXT) as measure_version\n        , cast(denominator_flag as integer) as denominator_flag\n    from qualifying_patients\n\n)\n\nselect\n      person_id\n    , dispensing_date\n    , first_dispensing_date\n    , days_supply\n    , ndc_code\n    , performance_period_begin\n    , performance_period_end\n    , measure_id\n    , measure_name\n    , measure_version\n    , denominator_flag\n    , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom add_data_types", "relation_name": "tuva.quality_measures._int_adh_statins_denominator", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:21.664736Z", "completed_at": "2025-06-03T19:50:21.709299Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:21.710846Z", "completed_at": "2025-06-03T19:50:21.710851Z"}], "thread_id": "Thread-3", "execution_time": 0.05930495262145996, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.quality_measures__int_supd_denominator", "compiled": true, "compiled_code": "\n\nwith  __dbt__cte___stg_pharmacy_claim as (\n\n\nselect\n      person_id\n    , dispensing_date\n    , ndc_code\n    , days_supply\n    , paid_date\n    , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom tuva.core.pharmacy_claim\n\n\n),  __dbt__cte___stg_patient as (\n\nselect\n      person_id\n    , sex\n    , birth_date\n    , death_date\n    , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom tuva.core.patient\n), diabetics_codes as (\n\n    select\n          code\n        , code_system\n    from tuva.quality_measures._value_set_codes\n    where lower(concept_name) in (\n          'pqa antidiabetics medications'\n        )\n\n)\n\n, rx_diabetes as (\n\n    select\n        person_id\n      , dispensing_date\n      , ndc_code\n    from __dbt__cte___stg_pharmacy_claim as pharmacy_claims\n    inner join diabetics_codes\n        on pharmacy_claims.ndc_code = diabetics_codes.code\n            and lower(diabetics_codes.code_system) = 'ndc'\n\n)\n\n, rx_diabetes_in_measurement_period as (\n\n    select\n          person_id\n        , dispensing_date\n    from rx_diabetes\n    inner join tuva.quality_measures._int_supd__performance_period as pp\n        on dispensing_date between pp.performance_period_begin and pp.performance_period_end\n\n)\n\n/*\n    These patients need to pass a check\n    - Should have at least two distinct Date of Service (FillDate) for rx\n*/\n\n, rx_fill_order as (\n\n    select\n          person_id\n        , dispensing_date\n        , dense_rank() over (\n            partition by\n                  person_id\n            order by dispensing_date\n        ) as dr\n    from rx_diabetes_in_measurement_period\n\n)\n\n, check_passed_patients as (\n\n    select\n          person_id\n    from rx_fill_order\n    where dr = 2\n\n)\n\n, qualifying_patients_with_age as (\n\n    select\n          patients.person_id\n        , floor(datediff(\n        hour,\n        birth_date,\n        pp.performance_period_begin\n        ) / 8760.0) as age\n        , performance_period_begin\n        , performance_period_end\n        , measure_id\n        , measure_name\n        , measure_version\n    from __dbt__cte___stg_patient as patients\n    inner join check_passed_patients\n        on patients.person_id = check_passed_patients.person_id\n    cross join tuva.quality_measures._int_supd__performance_period as pp\n    where patients.death_date is null\n\n)\n\n, denominator as (\n\n    select\n          person_id\n        , age\n        , performance_period_begin\n        , performance_period_end\n        , measure_id\n        , measure_name\n        , measure_version\n        , 1 as denominator_flag\n    from qualifying_patients_with_age\n    where age > 39 and age < 76\n\n)\n\n, add_data_types as (\n\n    select\n          cast(person_id as TEXT) as person_id\n        , cast(age as integer) as age\n        , cast(performance_period_begin as date) as performance_period_begin\n        , cast(performance_period_end as date) as performance_period_end\n        , cast(measure_id as TEXT) as measure_id\n        , cast(measure_name as TEXT) as measure_name\n        , cast(measure_version as TEXT) as measure_version\n        , cast(denominator_flag as integer) as denominator_flag\n    from denominator\n\n)\n\nselect\n      person_id\n    , age\n    , performance_period_begin\n    , performance_period_end\n    , measure_id\n    , measure_name\n    , measure_version\n    , denominator_flag\n    , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom add_data_types", "relation_name": "tuva.quality_measures._int_supd_denominator", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:21.652689Z", "completed_at": "2025-06-03T19:50:21.710384Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:21.711501Z", "completed_at": "2025-06-03T19:50:21.711506Z"}], "thread_id": "Thread-2", "execution_time": 0.06024670600891113, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.quality_measures__int_adhras_denominator", "compiled": true, "compiled_code": "\n\nwith  __dbt__cte___stg_pharmacy_claim as (\n\n\nselect\n      person_id\n    , dispensing_date\n    , ndc_code\n    , days_supply\n    , paid_date\n    , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom tuva.core.pharmacy_claim\n\n\n),  __dbt__cte___stg_patient as (\n\nselect\n      person_id\n    , sex\n    , birth_date\n    , death_date\n    , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom tuva.core.patient\n), performance_period as (\n\n    select\n          measure_id\n        , measure_name\n        , measure_version\n        , performance_period_end\n        , performance_period_begin\n    from tuva.quality_measures._int_adhras__performance_period\n\n)\n\n, visit_codes as (\n\n    select\n          code\n        , code_system\n    from tuva.quality_measures._value_set_codes\n    where lower(concept_name) = 'pqa rasa medications'\n\n)\n\n, pharmacy_claim as (\n\n    select\n          person_id\n        , dispensing_date\n        , ndc_code\n        , days_supply\n    from __dbt__cte___stg_pharmacy_claim\n\n)\n\n, patient_with_claim as (\n\n    select\n          pharmacy_claim.person_id\n        , dispensing_date\n        , days_supply\n        , ndc_code\n    from pharmacy_claim\n    inner join visit_codes\n        on pharmacy_claim.ndc_code = visit_codes.code\n\n)\n\n, patient_within_performance_period as (\n\n    select\n          person_id\n        , dispensing_date\n        , days_supply\n        , ndc_code\n        , performance_period_begin\n        , performance_period_end\n    from patient_with_claim as claim_patient\n    inner join performance_period as pp\n        on claim_patient.dispensing_date between pp.performance_period_begin and pp.performance_period_end\n\n)\n\n/*\n    These patients need to pass two checks\n    - First medication fill date should be at least 91 days before the end of measurement period\n    - Should have at least two distinct Date of Service (FillDate) for rx\n*/\n\n, patient_with_rank as (\n\n    select\n          person_id\n        , dispensing_date\n        , days_supply\n        , ndc_code\n        , dense_rank() over (partition by person_id\norder by dispensing_date) as dense_rank\n    from patient_within_performance_period\n\n)\n\n, patient_with_first_dispensing_date as (\n\n    select\n          person_id\n        , dispensing_date as first_dispensing_date\n    from patient_with_rank\n    where dense_rank = 1\n\n)\n\n/*\ntreatment period days is abbreviated as tpd\n*/\n\n, patient_with_tpd as (\n\n    select\n          patients1.person_id\n        , patients1.dispensing_date\n        , patients2.first_dispensing_date\n        , patients1.days_supply\n        , datediff(\n        day,\n        first_dispensing_date,\n        performance_period_end\n        ) as tpd\n    from patient_within_performance_period as patients1\n    inner join patient_with_first_dispensing_date as patients2\n        on patients1.person_id = patients2.person_id\n\n)\n\n, first_check_patient as (\n\n    select\n          person_id\n        , dispensing_date\n        , first_dispensing_date\n        , days_supply\n    from patient_with_tpd\n    where tpd > 89\n\n)\n\n, second_check_patient as (\n\n    select\n          person_id\n        , ndc_code\n    from patient_with_rank\n    where dense_rank = 2\n\n)\n\n, both_check_patient as (\n\n    select\n          valid_patients1.person_id\n        , valid_patients1.dispensing_date\n        , valid_patients1.first_dispensing_date\n        , valid_patients1.days_supply\n        , valid_patients2.ndc_code\n    from first_check_patient as valid_patients1\n    inner join second_check_patient as valid_patients2\n        on valid_patients1.person_id = valid_patients2.person_id\n\n)\n\n, patient_with_age as (\n\n    select\n          valid_patients1.person_id\n        , floor(datediff(\n        hour,\n        birth_date,\n        pp.performance_period_begin\n        ) / 8760.0) as age\n        , dispensing_date\n        , first_dispensing_date\n        , days_supply\n        , ndc_code\n        , pp.performance_period_begin\n        , pp.performance_period_end\n        , pp.measure_id\n        , pp.measure_name\n        , pp.measure_version\n    from __dbt__cte___stg_patient as patient\n    inner join both_check_patient as valid_patients1\n        on patient.person_id = valid_patients1.person_id\n    cross join performance_period as pp\n    where patient.death_date is null\n\n)\n\n, qualifying_patients as (\n\n    select\n          person_id\n        , dispensing_date\n        , first_dispensing_date\n        , days_supply\n        , ndc_code\n        , performance_period_begin\n        , performance_period_end\n        , measure_id\n        , measure_name\n        , measure_version\n        , 1 as denominator_flag\n    from patient_with_age\n    where age > 17\n\n)\n\n, add_data_types as (\n\n    select\n          cast(person_id as TEXT) as person_id\n        , cast(dispensing_date as date) as dispensing_date\n        , cast(first_dispensing_date as date) as first_dispensing_date\n        , cast(days_supply as integer) as days_supply\n        , cast(ndc_code as TEXT) as ndc_code\n        , cast(performance_period_begin as date) as performance_period_begin\n        , cast(performance_period_end as date) as performance_period_end\n        , cast(measure_id as TEXT) as measure_id\n        , cast(measure_name as TEXT) as measure_name\n        , cast(measure_version as TEXT) as measure_version\n        , cast(denominator_flag as integer) as denominator_flag\n    from qualifying_patients\n\n)\n\nselect\n      person_id\n    , dispensing_date\n    , first_dispensing_date\n    , days_supply\n    , ndc_code\n    , performance_period_begin\n    , performance_period_end\n    , measure_id\n    , measure_name\n    , measure_version\n    , denominator_flag\n    , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom add_data_types", "relation_name": "tuva.quality_measures._int_adhras_denominator", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:21.711899Z", "completed_at": "2025-06-03T19:50:21.724055Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:21.724907Z", "completed_at": "2025-06-03T19:50:21.724912Z"}], "thread_id": "Thread-4", "execution_time": 0.015908241271972656, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.encounters__stg_inpatient_institutional", "compiled": true, "compiled_code": "\n\nselect\n  claim_id\n, service_type\n, '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom tuva.claims_preprocessing.service_category__stg_inpatient_institutional as a", "relation_name": "tuva.claims_preprocessing.encounters__stg_inpatient_institutional", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:21.717187Z", "completed_at": "2025-06-03T19:50:21.724710Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:21.736139Z", "completed_at": "2025-06-03T19:50:21.736144Z"}], "thread_id": "Thread-1", "execution_time": 0.026417970657348633, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.service_category__acute_inpatient_institutional_maternity", "compiled": true, "compiled_code": "\n\nselect distinct\n    a.claim_id\n  , a.data_source\n  , 'inpatient' as service_category_1\n  , 'acute inpatient' as service_category_2\n  , case\n      when s.drg_code in ('768', '796', '797', '798', '805', '806', '807') then 'l/d - vaginal delivery'\n      when s.drg_code in ('783', '784', '785', '786', '787', '788') then 'l/d - cesarean delivery'\n      when s.drg_code = '795' then 'l/d - newborn'\n      when s.drg_code in ('789', '790', '791', '792', '793', '794') then 'l/d - newborn nicu'\n      when s.revenue_center_code in ('0173', '0174') then 'l/d - newborn nicu'\n      else 'l/d - other'\n    end as service_category_3\n  , '_int_acute_inpatient_institutional_maternity' as source_model_name\n  , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom tuva.claims_preprocessing.service_category__stg_medical_claim as s\ninner join tuva.claims_preprocessing.service_category__stg_inpatient_institutional as a\n  on s.claim_id = a.claim_id\n  and s.data_source = a.data_source\ninner join tuva.terminology.ms_drg as m\n  on s.drg_code = m.ms_drg_code\n  and s.drg_code_type = 'ms-drg'\nwhere\n  m.mdc_code in ('MDC 14', 'MDC 15')", "relation_name": "tuva.claims_preprocessing._int_acute_inpatient_institutional_maternity", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:21.730646Z", "completed_at": "2025-06-03T19:50:21.737668Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:21.738458Z", "completed_at": "2025-06-03T19:50:21.738462Z"}], "thread_id": "Thread-2", "execution_time": 0.014706134796142578, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.service_category__acute_inpatient_institutional_other", "compiled": true, "compiled_code": "\n\n\n--simplified by setting lowest priority instead of explicitly doing all the joins\nselect distinct\n  a.claim_id\n  , a.data_source\n  , 'inpatient' as service_category_1\n  , 'acute inpatient' as service_category_2\n  , 'acute inpatient - other' as service_category_3\n  , '_int_acute_inpatient_institutional_other' as source_model_name\n  , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom tuva.claims_preprocessing.service_category__stg_medical_claim as s\ninner join tuva.claims_preprocessing.service_category__stg_inpatient_institutional as a\non s.claim_id = a.claim_id\nand s.data_source = a.data_source", "relation_name": "tuva.claims_preprocessing._int_acute_inpatient_institutional_other", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:21.725264Z", "completed_at": "2025-06-03T19:50:21.737854Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:21.738799Z", "completed_at": "2025-06-03T19:50:21.738802Z"}], "thread_id": "Thread-3", "execution_time": 0.015367984771728516, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.service_category__acute_inpatient_institutional_med_surg", "compiled": true, "compiled_code": "\n\nselect distinct\n    a.claim_id\n  , a.data_source\n  , 'inpatient' as service_category_1\n  , 'acute inpatient' as service_category_2\n  , case\n      when coalesce(ms.medical_surgical, apr.medical_surgical) = 'M' then 'medical'\n      when coalesce(ms.medical_surgical, apr.medical_surgical) = 'P' then 'surgical'\n      when coalesce(ms.medical_surgical, apr.medical_surgical) = 'surgical' then 'surgical'\n      else 'acute inpatient - other'\n    end as service_category_3\n  , '_int_acute_inpatient_institutional_med_surg' as source_model_name\n  , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom tuva.claims_preprocessing.service_category__stg_medical_claim as s\ninner join tuva.claims_preprocessing.service_category__stg_inpatient_institutional as a\n  on s.claim_id = a.claim_id\n  and s.data_source = a.data_source\nleft outer join tuva.terminology.ms_drg as ms\n  on s.drg_code = ms.ms_drg_code\n  and s.drg_code_type = 'ms-drg'\nleft outer join tuva.terminology.apr_drg as apr\n  on s.drg_code = apr.apr_drg_code\n  and s.drg_code_type = 'apr-drg'\nwhere\n  ms.ms_drg_code is not null\n  or apr.apr_drg_code is not null", "relation_name": "tuva.claims_preprocessing._int_acute_inpatient_institutional_med_surg", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:21.739130Z", "completed_at": "2025-06-03T19:50:21.750662Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:21.751440Z", "completed_at": "2025-06-03T19:50:21.751445Z"}], "thread_id": "Thread-4", "execution_time": 0.014284849166870117, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.service_category__inpatient_hospice_institutional", "compiled": true, "compiled_code": "\n\nselect distinct\n    s.claim_id\n  , s.data_source\n  , 'inpatient' as service_category_1\n  , 'inpatient hospice' as service_category_2\n  , 'inpatient hospice' as service_category_3\n  , '_int_inpatient_hospice_institutional' as source_model_name\n  , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom tuva.claims_preprocessing.service_category__stg_medical_claim as s\n  inner join tuva.claims_preprocessing.service_category__stg_inpatient_institutional as a\n  on s.claim_id = a.claim_id\n  and s.data_source = a.data_source\nwhere substring(s.bill_type_code, 1, 2) in ('82')\n  or s.revenue_center_code in ('0655', '0656', '0658', '0115', '0125', '0135', '0145', '0155', '0235')", "relation_name": "tuva.claims_preprocessing._int_inpatient_hospice_institutional", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:21.744421Z", "completed_at": "2025-06-03T19:50:21.750858Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:21.751790Z", "completed_at": "2025-06-03T19:50:21.751793Z"}], "thread_id": "Thread-1", "execution_time": 0.014374971389770508, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.service_category__inpatient_psychiatric_institutional", "compiled": true, "compiled_code": "\n\nselect distinct\n  s.claim_id\n  , s.data_source\n  , 'inpatient' as service_category_1\n  , 'inpatient psychiatric' as service_category_2\n  , 'inpatient psychiatric' as service_category_3\n  , '_int_inpatient_psychiatric_institutional' as source_model_name\n  , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom tuva.claims_preprocessing.service_category__stg_medical_claim as s\n  inner join tuva.claims_preprocessing.service_category__stg_inpatient_institutional as i\n  on s.claim_id = i.claim_id\n  and s.data_source = i.data_source\nwhere s.primary_taxonomy_code in ('283Q00000X'\n                                  , '273R00000X')", "relation_name": "tuva.claims_preprocessing._int_inpatient_psychiatric_institutional", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:21.752118Z", "completed_at": "2025-06-03T19:50:21.763709Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:21.764626Z", "completed_at": "2025-06-03T19:50:21.764631Z"}], "thread_id": "Thread-2", "execution_time": 0.014529943466186523, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.service_category__inpatient_rehab_institutional", "compiled": true, "compiled_code": "\n\nselect distinct\n    s.claim_id\n  , s.data_source\n  , 'inpatient' as service_category_1\n  , 'inpatient rehabilitation' as service_category_2\n  , 'inpatient rehabilitation' as service_category_3\n  , '_int_inpatient_rehab_institutional' as source_model_name\n  , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom tuva.claims_preprocessing.service_category__stg_medical_claim as s\n  inner join tuva.claims_preprocessing.service_category__stg_inpatient_institutional as i\n  on s.claim_id = i.claim_id\n  and s.data_source = i.data_source\nwhere s.primary_taxonomy_code in ('283X00000X'\n                                  , '273Y00000X'\n                                  )", "relation_name": "tuva.claims_preprocessing._int_inpatient_rehab_institutional", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:21.757981Z", "completed_at": "2025-06-03T19:50:21.764430Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:21.765397Z", "completed_at": "2025-06-03T19:50:21.765401Z"}], "thread_id": "Thread-3", "execution_time": 0.015028953552246094, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.service_category__inpatient_substance_use_institutional", "compiled": true, "compiled_code": "\n\nselect distinct\n    a.claim_id\n  , a.data_source\n  , 'inpatient' as service_category_1\n  , 'inpatient substance use' as service_category_2\n  , 'inpatient substance use' as service_category_3\n  , '_int_inpatient_substance_use_institutional' as source_model_name\n  , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom tuva.claims_preprocessing.service_category__stg_medical_claim as s\ninner join tuva.claims_preprocessing.service_category__stg_inpatient_institutional as a\n  on s.claim_id = a.claim_id\n  and s.data_source = a.data_source\nwhere\n  s.primary_taxonomy_code in (\n      '324500000X'\n    , '261QR0405X'\n    , '101YA0400X'\n  )\n  or s.default_ccsr_category_description_ip in (\n      'MBD026'\n    , 'SYM008'\n    , 'MBD025'\n    , 'SYM009'\n    , 'MBD034'\n  )", "relation_name": "tuva.claims_preprocessing._int_inpatient_substance_use_institutional", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:21.765973Z", "completed_at": "2025-06-03T19:50:21.777568Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:21.788683Z", "completed_at": "2025-06-03T19:50:21.788691Z"}], "thread_id": "Thread-4", "execution_time": 0.02483987808227539, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.service_category__stg_outpatient_institutional", "compiled": true, "compiled_code": "\n\nselect distinct\n    a.claim_id\n  , a.data_source\n  , 'outpatient' as service_type\n  , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom tuva.claims_preprocessing.service_category__stg_medical_claim as a\nleft outer join tuva.claims_preprocessing.service_category__stg_inpatient_institutional as i\n  on a.claim_id = i.claim_id\n  and a.data_source = i.data_source\nwhere i.claim_id is null\n  and a.claim_type = 'institutional'", "relation_name": "tuva.claims_preprocessing.service_category__stg_outpatient_institutional", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:21.771599Z", "completed_at": "2025-06-03T19:50:21.777778Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:21.789080Z", "completed_at": "2025-06-03T19:50:21.789084Z"}], "thread_id": "Thread-1", "execution_time": 0.024945974349975586, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.encounters__stg_professional", "compiled": true, "compiled_code": "\n\nselect\n  claim_id\n, claim_line_number\n, claim_line_id\n, service_type\n, '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom tuva.claims_preprocessing.service_category__stg_professional as a", "relation_name": "tuva.claims_preprocessing.encounters__stg_professional", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:21.783710Z", "completed_at": "2025-06-03T19:50:21.790351Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:21.791210Z", "completed_at": "2025-06-03T19:50:21.791213Z"}], "thread_id": "Thread-3", "execution_time": 0.014378070831298828, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.service_category__dialysis_professional", "compiled": true, "compiled_code": "\n\nselect distinct\n    med.claim_id\n  , med.claim_line_number\n  , med.data_source\n  , med.claim_line_id\n  , 'outpatient' as service_category_1\n  , 'dialysis' as service_category_2\n  , 'dialysis' as service_category_3\n  , '_int_dialysis_professional' as source_model_name\n  , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom tuva.claims_preprocessing.service_category__stg_medical_claim as med\ninner join tuva.claims_preprocessing.service_category__stg_professional as prof\n  on med.claim_id = prof.claim_id\n  and med.claim_line_number = prof.claim_line_number\n  and med.data_source = prof.data_source\nwhere\n  med.place_of_service_code in ('65')\n  or med.ccs_category in ('91', '58', '57')", "relation_name": "tuva.claims_preprocessing._int_dialysis_professional", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:21.777969Z", "completed_at": "2025-06-03T19:50:21.790765Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:21.791750Z", "completed_at": "2025-06-03T19:50:21.791755Z"}], "thread_id": "Thread-2", "execution_time": 0.015277862548828125, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.service_category__ambulatory_surgery_professional", "compiled": true, "compiled_code": "\n\nselect distinct\n    med.claim_id\n  , med.claim_line_number\n  , med.data_source\n  , med.claim_line_id\n  , 'outpatient' as service_category_1\n  , 'ambulatory surgery center' as service_category_2\n  , 'ambulatory surgery center' as service_category_3\n  , '_int_ambulatory_surgery_professional' as source_model_name\n  , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom tuva.claims_preprocessing.service_category__stg_medical_claim as med\ninner join tuva.claims_preprocessing.service_category__stg_professional as prof\non med.claim_id = prof.claim_id\nand med.claim_line_number = prof.claim_line_number\nand med.data_source = prof.data_source\nwhere med.place_of_service_code in ('24')", "relation_name": "tuva.claims_preprocessing._int_ambulatory_surgery_professional", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:21.792524Z", "completed_at": "2025-06-03T19:50:21.809694Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:21.815651Z", "completed_at": "2025-06-03T19:50:21.815658Z"}], "thread_id": "Thread-4", "execution_time": 0.025177955627441406, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.service_category__dme_professional", "compiled": true, "compiled_code": "\n\nselect distinct\n    med.claim_id\n  , med.claim_line_number\n  , med.data_source\n  , med.claim_line_id\n  , 'ancillary' as service_category_1\n  , 'durable medical equipment' as service_category_2\n  , 'durable medical equipment' as service_category_3\n  , '_int_dme_professional' as source_model_name\n  , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom tuva.claims_preprocessing.service_category__stg_medical_claim as med\ninner join tuva.claims_preprocessing.service_category__stg_professional as prof\n  on med.claim_id = prof.claim_id\n  and med.claim_line_number = prof.claim_line_number\n  and med.data_source = prof.data_source\nwhere med.ccs_category = '243'", "relation_name": "tuva.claims_preprocessing._int_dme_professional", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:21.797800Z", "completed_at": "2025-06-03T19:50:21.815361Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:21.816149Z", "completed_at": "2025-06-03T19:50:21.816154Z"}], "thread_id": "Thread-1", "execution_time": 0.025233745574951172, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.service_category__emergency_department_professional", "compiled": true, "compiled_code": "\n\nselect distinct\n    med.claim_id\n  , med.claim_line_number\n  , med.data_source\n  , med.claim_line_id\n  , 'outpatient' as service_category_1\n  , 'emergency department' as service_category_2\n  , 'emergency department' as service_category_3\n  , '_int_emergency_department_professional' as source_model_name\n  , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom tuva.claims_preprocessing.service_category__stg_medical_claim as med\ninner join tuva.claims_preprocessing.service_category__stg_professional as prof\n  on med.claim_id = prof.claim_id\n  and med.claim_line_number = prof.claim_line_number\n  and med.data_source = prof.data_source\nwhere place_of_service_code = '23'\nor hcpcs_code in ('99281', '99282', '99283', '99284', '99285', 'G0380', 'G0381', 'G0382', 'G0383', 'G0384')", "relation_name": "tuva.claims_preprocessing._int_emergency_department_professional", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:21.809921Z", "completed_at": "2025-06-03T19:50:21.817251Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:21.818125Z", "completed_at": "2025-06-03T19:50:21.818128Z"}], "thread_id": "Thread-2", "execution_time": 0.014240026473999023, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.service_category__inpatient_hospice_professional", "compiled": true, "compiled_code": "\n\nselect distinct\n    med.claim_id\n  , med.claim_line_number\n  , med.data_source\n  , med.claim_line_id\n  , 'inpatient' as service_category_1\n  , 'inpatient hospice' as service_category_2\n  , 'inpatient hospice' as service_category_3\n  , '_int_inpatient_hospice_professional' as source_model_name\n  , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom tuva.claims_preprocessing.service_category__stg_medical_claim as med\n  inner join tuva.claims_preprocessing.service_category__stg_professional as prof\n  on med.claim_id = prof.claim_id\n  and med.claim_line_number = prof.claim_line_number\n  and med.data_source = prof.data_source\nwhere place_of_service_code in ('34')", "relation_name": "tuva.claims_preprocessing._int_inpatient_hospice_professional", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:21.804700Z", "completed_at": "2025-06-03T19:50:21.817734Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:21.818651Z", "completed_at": "2025-06-03T19:50:21.818654Z"}], "thread_id": "Thread-3", "execution_time": 0.015088081359863281, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.service_category__home_health_professional", "compiled": true, "compiled_code": "\n\nselect distinct\n    med.claim_id\n  , med.claim_line_number\n  , med.data_source\n  , med.claim_line_id\n  , 'outpatient' as service_category_1\n  , 'home health' as service_category_2\n  , 'home health' as service_category_3\n  , '_int_home_health_professional' as source_model_name\n  , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom tuva.claims_preprocessing.service_category__stg_medical_claim as med\ninner join tuva.claims_preprocessing.service_category__stg_professional as prof\n  on med.claim_id = prof.claim_id\n  and med.claim_line_number = prof.claim_line_number\n  and med.data_source = prof.data_source\nwhere med.place_of_service_code in ('12')", "relation_name": "tuva.claims_preprocessing._int_home_health_professional", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:21.824486Z", "completed_at": "2025-06-03T19:50:21.830445Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:21.832194Z", "completed_at": "2025-06-03T19:50:21.832199Z"}], "thread_id": "Thread-1", "execution_time": 0.014718770980834961, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.service_category__observation_professional", "compiled": true, "compiled_code": "\n\nselect distinct\n    med.claim_id\n  , med.claim_line_number\n  , med.data_source\n  , med.claim_line_id\n  , 'outpatient' as service_category_1\n  , 'observation' as service_category_2\n  , 'observation' as service_category_3\n  , '_int_observation_professional' as source_model_name\n  , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom tuva.claims_preprocessing.service_category__stg_medical_claim as med\ninner join tuva.claims_preprocessing.service_category__stg_professional as prof\n  on med.claim_id = prof.claim_id\n  and med.claim_line_number = prof.claim_line_number\n  and med.data_source = prof.data_source\nwhere\n  med.hcpcs_code in ('G0378', 'G0379')", "relation_name": "tuva.claims_preprocessing._int_observation_professional", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:21.818975Z", "completed_at": "2025-06-03T19:50:21.831766Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:21.837619Z", "completed_at": "2025-06-03T19:50:21.837624Z"}], "thread_id": "Thread-4", "execution_time": 0.020634174346923828, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.service_category__lab_professional", "compiled": true, "compiled_code": "\n\nselect distinct\n    med.claim_id\n  , med.claim_line_number\n  , med.data_source\n  , med.claim_line_id\n  , 'ancillary' as service_category_1\n  , 'lab' as service_category_2\n  , 'lab' as service_category_3\n  , '_int_lab_professional' as source_model_name\n  , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom tuva.claims_preprocessing.service_category__stg_medical_claim as med\ninner join tuva.claims_preprocessing.service_category__stg_professional as prof\n  on med.claim_id = prof.claim_id\n  and med.claim_line_number = prof.claim_line_number\n  and med.data_source = prof.data_source\nwhere place_of_service_code = '81'\nor med.ccs_category in (\n    '233' -- lab\n  , '235' --other lab\n  , '234' --pathology\n)", "relation_name": "tuva.claims_preprocessing._int_lab_professional", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:21.832553Z", "completed_at": "2025-06-03T19:50:21.843882Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:21.844738Z", "completed_at": "2025-06-03T19:50:21.844743Z"}], "thread_id": "Thread-2", "execution_time": 0.014966011047363281, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.service_category__outpatient_hospice_professional", "compiled": true, "compiled_code": "\n\nselect distinct\n    med.claim_id\n  , med.claim_line_number\n  , med.data_source\n  , med.claim_line_id\n  , 'outpatient' as service_category_1\n  , 'outpatient hospice' as service_category_2\n  , 'outpatient hospice' as service_category_3\n  , '_int_outpatient_hospice_professional' as source_model_name\n  , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom tuva.claims_preprocessing.service_category__stg_medical_claim as med\ninner join tuva.claims_preprocessing.service_category__stg_professional as prof\n  on med.claim_id = prof.claim_id\n  and med.claim_line_number = prof.claim_line_number\n  and med.data_source = prof.data_source\nwhere med.hcpcs_code in ('Q5001', 'Q5002', 'Q5003', 'Q5009')", "relation_name": "tuva.claims_preprocessing._int_outpatient_hospice_professional", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:21.837980Z", "completed_at": "2025-06-03T19:50:21.844321Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:21.845304Z", "completed_at": "2025-06-03T19:50:21.845308Z"}], "thread_id": "Thread-3", "execution_time": 0.015173912048339844, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.service_category__outpatient_hospital_or_clinic_professional", "compiled": true, "compiled_code": "\n\nselect distinct\n    med.claim_id\n  , med.claim_line_number\n  , med.data_source\n  , med.claim_line_id\n  , 'outpatient' as service_category_1\n  , 'outpatient hospital or clinic' as service_category_2\n  , 'outpatient hospital or clinic' as service_category_3\n  , '_int_outpatient_hospital_or_clinic_professional' as source_model_name\n  , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom tuva.claims_preprocessing.service_category__stg_medical_claim as med\ninner join tuva.claims_preprocessing.service_category__stg_professional as prof\n  on med.claim_id = prof.claim_id\n  and med.claim_line_number = prof.claim_line_number\n  and med.data_source = prof.data_source\nwhere\n  med.place_of_service_code in ('15', '17', '19', '22', '49', '50', '60', '71', '72')", "relation_name": "tuva.claims_preprocessing._int_outpatient_hospital_or_clinic_professional", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:21.845651Z", "completed_at": "2025-06-03T19:50:21.857947Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:21.858797Z", "completed_at": "2025-06-03T19:50:21.858802Z"}], "thread_id": "Thread-1", "execution_time": 0.015233993530273438, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.service_category__outpatient_physical_therapy_professional", "compiled": true, "compiled_code": "\n\nselect distinct\n    med.claim_id\n  , med.claim_line_number\n  , med.data_source\n  , med.claim_line_id\n  , 'outpatient' as service_category_1\n  , 'outpatient pt/ot/st' as service_category_2\n  , 'outpatient pt/ot/st' as service_category_3\n  , 'service_category__outpatient_physical_therapy_professional' as source_model_name\n  , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom tuva.claims_preprocessing.service_category__stg_medical_claim as med\ninner join tuva.claims_preprocessing.service_category__stg_professional as prof\n  on med.claim_id = prof.claim_id\n  and med.claim_line_number = prof.claim_line_number\n  and med.data_source = prof.data_source\nwhere (ccs_category in ('213', '212', '215')\n  or med.primary_specialty_description in (\n          'Occupational Health'\n          , 'Occupational Medicine'\n          , 'Occupational Therapist in Private Practice'\n          , 'Occupational Therapy Assistant'\n          , 'Physical Therapist'\n          , 'Physical Therapist in Private Practice'\n          , 'Physical Therapy Assistant'\n          , 'Speech Language Pathologist'\n          , 'Speech-Language Assistant'\n      ))\n  and place_of_service_code <> '11'", "relation_name": "tuva.claims_preprocessing.service_category__outpatient_physical_therapy_professional", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:21.852012Z", "completed_at": "2025-06-03T19:50:21.858599Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:21.869941Z", "completed_at": "2025-06-03T19:50:21.869947Z"}], "thread_id": "Thread-4", "execution_time": 0.025925159454345703, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.service_category__outpatient_radiology_professional", "compiled": true, "compiled_code": "\n\nselect distinct\n    med.claim_id\n  , med.claim_line_number\n  , med.data_source\n  , med.claim_line_id\n  , 'outpatient' as service_category_1\n  , 'outpatient radiology' as service_category_2\n  , case when med.modality = 'Nuclear medicine' then 'pet'\n          when med.modality = 'Magnetic resonance' then 'mri'\n          when med.modality = 'Computerized tomography' then 'ct'\n          when med.modality in ('Invasive', 'Ultrasound', 'Computer-aided detection', 'Three-dimensional reconstruction', 'Radiography') then 'general'\n          else 'general'\n          end as service_category_3\n  , 'service_category__outpatient_radiology_professional' as source_model_name\n  , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom tuva.claims_preprocessing.service_category__stg_medical_claim as med\ninner join tuva.claims_preprocessing.service_category__stg_professional as prof\n  on med.claim_id = prof.claim_id\n  and med.claim_line_number = prof.claim_line_number\n  and med.data_source = prof.data_source\nwhere med.modality is not null\n  and place_of_service_code <> '11'", "relation_name": "tuva.claims_preprocessing.service_category__outpatient_radiology_professional", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:21.859152Z", "completed_at": "2025-06-03T19:50:21.871243Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:21.872104Z", "completed_at": "2025-06-03T19:50:21.872108Z"}], "thread_id": "Thread-2", "execution_time": 0.014775991439819336, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.service_category__outpatient_substance_use_professional", "compiled": true, "compiled_code": "\n\nselect distinct\n    med.claim_id\n  , med.claim_line_number\n  , med.data_source\n  , med.claim_line_id\n  , 'outpatient' as service_category_1\n  , 'outpatient substance use' as service_category_2\n  , 'outpatient substance use' as service_category_3\n  , 'service_category__outpatient_substance_use_professional' as source_model_name\n  , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom tuva.claims_preprocessing.service_category__stg_medical_claim as med\ninner join tuva.claims_preprocessing.service_category__stg_professional as prof\n  on med.claim_id = prof.claim_id\n  and med.claim_line_number = prof.claim_line_number\n  and med.data_source = prof.data_source\nwhere\n  (med.default_ccsr_category_description_op in (\n      'MBD026'\n    , 'SYM008'\n    , 'MBD025'\n    , 'SYM009'\n    , 'MBD034'\n  )\n  and med.place_of_service_code <> '11')\n  or med.place_of_service_code in ('57', '58')", "relation_name": "tuva.claims_preprocessing.service_category__outpatient_substance_use_professional", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:21.864935Z", "completed_at": "2025-06-03T19:50:21.871700Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:21.872644Z", "completed_at": "2025-06-03T19:50:21.872648Z"}], "thread_id": "Thread-3", "execution_time": 0.014990091323852539, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.service_category__outpatient_surgery_professional", "compiled": true, "compiled_code": "\n\nselect distinct\n    med.claim_id\n  , med.claim_line_number\n  , med.data_source\n  , 'outpatient' as service_category_1\n  , 'outpatient surgery' as service_category_2\n  , 'outpatient surgery' as service_category_3\n  , 'service_category__outpatient_surgery_professional' as source_model_name\n  , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom tuva.claims_preprocessing.service_category__stg_medical_claim as med\ninner join tuva.claims_preprocessing.service_category__stg_professional as prof\n  on med.claim_id = prof.claim_id\n  and med.claim_line_number = prof.claim_line_number\n  and med.data_source = prof.data_source\nwhere\n  (ccs_category between '1' and '176'\n  or ccs_category in ('229', '230', '231', '232', '244'))\n  and place_of_service_code in ('15', '17', '19', '22', '49', '50', '60', '71', '72')", "relation_name": "tuva.claims_preprocessing.service_category__outpatient_surgery_professional", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:21.872976Z", "completed_at": "2025-06-03T19:50:21.885013Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:21.885825Z", "completed_at": "2025-06-03T19:50:21.885830Z"}], "thread_id": "Thread-1", "execution_time": 0.01488804817199707, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.service_category__pharmacy_professional", "compiled": true, "compiled_code": "\n\nselect distinct\n    med.claim_id\n    , med.claim_line_number\n    , med.data_source\n    , med.claim_line_id\n    , case when place_of_service_code = '11' then 'office-based' else 'outpatient' end as service_category_1\n    , 'pharmacy' as service_category_2\n    , 'pharmacy' as service_category_3\n    , 'service_category__pharmacy_professional' as source_model_name\n    , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom tuva.claims_preprocessing.service_category__stg_medical_claim as med\ninner join tuva.claims_preprocessing.service_category__stg_professional as prof on med.claim_id = prof.claim_id\n  and med.claim_line_number = prof.claim_line_number\n  and med.data_source = prof.data_source\nwhere ccs_category = '240' --medications", "relation_name": "tuva.claims_preprocessing.service_category__pharmacy_professional", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:21.878372Z", "completed_at": "2025-06-03T19:50:21.885439Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:21.898613Z", "completed_at": "2025-06-03T19:50:21.898620Z"}], "thread_id": "Thread-4", "execution_time": 0.02718973159790039, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.service_category__stg_office_based", "compiled": true, "compiled_code": "\n\nselect\n    a.claim_id\n  , a.claim_line_number\n  , a.data_source\n  , a.claim_line_id\n  , 'office based' as service_type\n  , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom tuva.claims_preprocessing.service_category__stg_medical_claim as a\n  inner join tuva.claims_preprocessing.service_category__stg_professional as p\n  on a.claim_id = p.claim_id\n  and a.claim_line_number = p.claim_line_number\n  and a.data_source = p.data_source\nwhere a.place_of_service_code in (\n    '11' -- office\n  , '02' --telehealth \n  , '10' --telehealth\n)", "relation_name": "tuva.claims_preprocessing.service_category__stg_office_based", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:21.886175Z", "completed_at": "2025-06-03T19:50:21.905857Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:21.906544Z", "completed_at": "2025-06-03T19:50:21.906549Z"}], "thread_id": "Thread-2", "execution_time": 0.022210121154785156, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.fhir_preprocessing__int_pharmacy_claim_item", "compiled": true, "compiled_code": "\nwith  __dbt__cte___stg_pharmacy_claim as (\n\n\nselect\n      pharmacy_claim_id\n    , person_id\n    , claim_id\n    , claim_line_number\n    , payer\n    , plan\n    , dispensing_provider_id\n    , dispensing_provider_name\n    , dispensing_date\n    , paid_date\n    , days_supply\n    , refills\n    , paid_amount\n    , in_network_flag\n    , ndc_code\n    , data_source\nfrom tuva.core.pharmacy_claim\n\n\n), adjudication as (\n\n    select\n          claim_id\n        , claim_line_number\n        , eob_item_adjudication_list\n    from tuva.fhir_preprocessing._int_pharmacy_claim_item_adjudication\n\n)\n\n, joined as (\n\n    select\n          pharmacy_claim.claim_id\n        /* required for FHIR validation, sequence must be >0, temporary fix for possible issues with ADR  */\n        , abs(pharmacy_claim.claim_line_number) as eob_item_sequence\n        , cast('NDC' as TEXT ) as eob_item_product_or_service_system\n        , pharmacy_claim.ndc_code as eob_item_product_or_service_code\n        , cast(coalesce(\n              pharmacy_claim.dispensing_date\n            , pharmacy_claim.paid_date\n          ) as TEXT ) as eob_item_serviced_date /* cast date to string for redshift support */\n        , adjudication.eob_item_adjudication_list\n    from __dbt__cte___stg_pharmacy_claim as pharmacy_claim\n        left outer join adjudication\n            on pharmacy_claim.claim_id = adjudication.claim_id\n            and pharmacy_claim.claim_line_number = adjudication.claim_line_number\n    where pharmacy_claim.ndc_code is not null\n\n)\n\n/* create a json string for CSV export */\n\nselect\n    claim_id\n    , to_json(\n        array_agg(\n            object_construct(\n                'eobItemSequence',eob_item_sequence\n                , 'eobItemProductOrServiceSystem',eob_item_product_or_service_system\n                , 'eobItemProductOrServiceCode',eob_item_product_or_service_code\n                , 'eobItemServicedDate',eob_item_serviced_date\n                , 'eobItemAdjudicationList',parse_json( eob_item_adjudication_list ) /* Parse JSON lists to prevent escaping */\n            )\n        )\n    ) as eob_item_list\nfrom joined\ngroup by claim_id\n", "relation_name": "tuva.fhir_preprocessing._int_pharmacy_claim_item", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:21.899001Z", "completed_at": "2025-06-03T19:50:21.906899Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:21.913193Z", "completed_at": "2025-06-03T19:50:21.913199Z"}], "thread_id": "Thread-3", "execution_time": 0.02847886085510254, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.pharmacy__int_generic_cost", "compiled": true, "compiled_code": "\n\n/* for each brand rxcui, what is the average cost/unit of generics available*/\n\nselect\n    g.product_rxcui as brand_rxcui\n  , cl.data_source\n  , max(case when claim_count > 0 then 1 else 0 end) as prescribed_atleast_one_generic_history\n  , sum(case when total_units > 0 and paid_amount > 0 then paid_amount else null end) / sum(case when total_units > 0 and paid_amount > 0 then total_units else null end) as generic_average_cost_per_unit\n  , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom tuva.pharmacy.rxnorm_generic_available as g\nleft outer join tuva.pharmacy._int_claims_current_cost as cl\n  on cl.ndc_code = g.ndc\nwhere cl.brand_vs_generic = 'generic'\ngroup by\n    g.product_rxcui\n  , cl.data_source", "relation_name": "tuva.pharmacy._int_generic_cost", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:21.907289Z", "completed_at": "2025-06-03T19:50:21.924610Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:21.925378Z", "completed_at": "2025-06-03T19:50:21.925383Z"}], "thread_id": "Thread-1", "execution_time": 0.019855022430419922, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.pharmacy__int_generic_cost_by_ndc", "compiled": true, "compiled_code": "\n\n/* for each brand rxcui, what is the average cost/unit of all generics available*/\n\nselect\n    g.product_rxcui as brand_rxcui\n  , cl.data_source\n  , cl.ndc_code as generic_ndc_code\n  , cl.paid_amount\n  , cl.claim_count\n  , cl.total_units\n  , cl.cost_per_unit\n  , case when claim_count > 0 then 1 else 0 end as prescribed_atleast_one_generic_history\n  , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom tuva.pharmacy.rxnorm_generic_available as g\nleft outer join tuva.pharmacy._int_claims_current_cost as cl\n  on cl.ndc_code = g.ndc\nwhere cl.brand_vs_generic = 'generic'", "relation_name": "tuva.pharmacy._int_generic_cost_by_ndc", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:21.913599Z", "completed_at": "2025-06-03T19:50:21.925722Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:21.935870Z", "completed_at": "2025-06-03T19:50:21.935876Z"}], "thread_id": "Thread-4", "execution_time": 0.029844999313354492, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.quality_measures__int_adh_diabetes_numerator", "compiled": true, "compiled_code": "\n\nwith denominator as (\n\n    select\n          person_id\n        , dispensing_date\n        , ndc_code\n        , days_supply\n        , days_in_treatment_period\n        , performance_period_begin\n        , performance_period_end\n        , measure_id\n        , measure_name\n        , measure_version\n    from tuva.quality_measures._int_adh_diabetes_denominator\n\n)\n\n, performance_end as (\n\n    select\n      performance_period_end\n    from tuva.quality_measures._int_adh_diabetes__performance_period\n\n)\n\n/*\n  The below 3 cte identifies periods of continuous medication use for each patient by:\n  1. Assigning a row number and tracking the previous medication per patient.\n  2. Flagging when a medication change occurs.\n  3. Grouping consecutive periods of the same medication by assigning a group ID.\n*/\n\n, ranked_patient as (\n\n    select\n          person_id\n        , dispensing_date\n        , ndc_code\n        , days_supply\n        , dense_rank() over (partition by person_id\norder by dispensing_date) as dr\n        , lag(ndc_code) over (partition by person_id\norder by dispensing_date) as previous_ndc\n    from denominator\n\n)\n\n, grouped_meds as (\n\n    select\n          person_id\n        , dispensing_date\n        , ndc_code\n        , days_supply\n        , dr\n        , case\n            when (ndc_code != previous_ndc) or previous_ndc is null then 1\n            else 0\n          end as med_change_flag --to increment group when medication changes\n    from ranked_patient\n\n)\n\n, final_groups as (\n\n    select\n          person_id\n        , ndc_code\n        , dispensing_date\n        , days_supply\n        , sum(med_change_flag) over (\n              partition by person_id\n              order by dr\n              rows between unbounded preceding and current row\n          ) as group_id\n    from grouped_meds\n\n)\n\n/*\n  The ctes below calculates adjusted medication fill dates,\n  groups fills by continuous periods of use and ensures accurate start and end dates based\n  on previous fills and the performance period.\n*/\n\n, fills as (\n\n    select\n          person_id\n        , group_id\n        , dispensing_date\n        , days_supply\n        , \n\n    dateadd(\n        day,\n        -1,\n        \n\n    dateadd(\n        day,\n        days_supply,\n        dispensing_date\n        )\n\n\n        )\n\n as theoretical_end_date\n    from final_groups\n\n)\n\n, previous_fill_end_date as (\n\n    select\n          person_id\n        , group_id\n        , dispensing_date\n        , days_supply\n        , theoretical_end_date\n        , lag(theoretical_end_date)\n          over (partition by\n                person_id\n              , group_id\n            order by\n                dispensing_date\n          ) as previous_end_date\n    from fills\n\n)\n\n, adjusted_fills as (\n\n    /* Adjust start dates based on the previous fill's end date + 1,\n    or use the current rx_fill_date */\n    select\n          person_id\n        , group_id\n        , dispensing_date\n        , days_supply\n        , theoretical_end_date\n        , coalesce(\n            greatest(\n                  dispensing_date\n                , \n\n    dateadd(\n        day,\n        1,\n        previous_end_date\n        )\n\n\n                )\n            , dispensing_date\n        ) as adjusted_start_date\n    from previous_fill_end_date\n\n)\n\n, final_fills as (\n\n    select\n        person_id\n      , group_id\n      , dispensing_date\n      , days_supply\n      , adjusted_start_date\n      , least(\n            \n\n    dateadd(\n        day,\n        -1,\n        \n\n    dateadd(\n        day,\n        days_supply,\n        adjusted_start_date\n        )\n\n\n        )\n\n\n          , performance_period_end\n      ) as final_end_date\n    from adjusted_fills\n    inner join performance_end\n      on adjusted_fills.adjusted_start_date <= performance_end.performance_period_end\n\n)\n\n, grouped_fill_ranges as (\n\n    select\n          person_id\n        , group_id\n        , dispensing_date\n        , days_supply\n        , adjusted_start_date\n        , final_end_date\n        , min(adjusted_start_date) over (partition by person_id, group_id) as first_disp_date\n        , max(adjusted_start_date) over (partition by person_id, group_id) as last_disp_date\n    from final_fills\n\n)\n\n, last_med_end_groupwise as (\n\n    select\n          person_id\n        , group_id\n        , dispensing_date\n        , days_supply\n        , adjusted_start_date\n        , final_end_date\n        , first_disp_date\n        , last_disp_date\n        , max(\n            case\n              when adjusted_start_date = last_disp_date\n              then days_supply\n              else null\n            end) over (partition by person_id, group_id) as last_days_supply\n    from grouped_fill_ranges\n\n)\n\n/*\n  1. Calculates the total covered days per medication group per patient\n  2. Then calculates the overlap between groups of medication per patient\n  3. Finally calculates the actual total covered days for each patient\n*/\n\n, covered_days_per_group as (\n\n    select\n          person_id\n        , group_id\n        , first_disp_date\n        , last_disp_date\n        , last_days_supply\n        , sum(1 + datediff(\n        day,\n        adjusted_start_date,\n        final_end_date\n        )) as covered_days\n    from last_med_end_groupwise\n    group by\n          person_id\n        , group_id\n        , first_disp_date\n        , last_disp_date\n        , last_days_supply\n\n)\n\n, final_with_lag as (\n\n    select\n          person_id\n        , group_id\n        , first_disp_date\n        , last_disp_date\n        , covered_days\n        , lag(last_disp_date) over (partition by person_id\norder by first_disp_date) as lag_date\n        , lag(last_days_supply) over (partition by person_id\norder by first_disp_date) as lag_days_supply\n    from covered_days_per_group\n\n)\n\n, overlap_days as (\n\n    select\n          person_id\n        , group_id\n        , first_disp_date\n        , last_disp_date\n        , covered_days\n        , lag_date\n        , case\n            when first_disp_date <\n                \n\n    dateadd(\n        day,\n        lag_days_supply,\n        lag_date\n        )\n\n\n            then\n                datediff(\n        day,\n        first_disp_date,\n        \n\n    dateadd(\n        day,\n        lag_days_supply,\n        lag_date\n        )\n\n\n        )\n            else 0\n          end as overlap\n    from final_with_lag\n\n)\n\n, final_covered_days as (\n\n    select\n          person_id\n        , sum(covered_days) - sum(overlap) as actual_covered_days\n    from overlap_days\n    group by person_id\n\n)\n\n, relevant_patients_from_deno as (\n\n    select\n          final_covered_days.person_id\n        , round(cast(actual_covered_days / days_in_treatment_period as numeric(28,6)), 4) as adherence\n        , dispensing_date as evidence_date\n        , days_supply as evidence_value\n    from final_covered_days\n    inner join denominator\n      on final_covered_days.person_id = denominator.person_id\n\n)\n\n, numerator as (\n\n    select\n          person_id\n        , adherence * 100 as adherence --percent conversion\n        , evidence_date\n        , evidence_value\n        , 1 as numerator_flag\n    from relevant_patients_from_deno\n    where adherence >= 0.8\n\n)\n\n, add_data_types as (\n\n    select\n          cast(person_id as TEXT) as person_id\n        , cast(evidence_date as date) as evidence_date\n        , cast(evidence_value as TEXT) as evidence_value\n        , cast(adherence as numeric(28,6)) as adherence\n        , cast(numerator_flag as integer) as numerator_flag\n    from numerator\n\n)\n\nselect\n      person_id\n    , evidence_date\n    , evidence_value\n    , adherence\n    , numerator_flag\n    , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom add_data_types", "relation_name": "tuva.quality_measures._int_adh_diabetes_numerator", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:21.925927Z", "completed_at": "2025-06-03T19:50:21.951570Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:21.961734Z", "completed_at": "2025-06-03T19:50:21.961740Z"}], "thread_id": "Thread-2", "execution_time": 0.037816762924194336, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.quality_measures__int_adh_statins_numerator", "compiled": true, "compiled_code": "\n\nwith denominator as (\n\n    select\n          person_id\n        , dispensing_date\n        , first_dispensing_date\n        , days_supply\n        , ndc_code\n        , performance_period_begin\n        , performance_period_end\n        , measure_id\n        , measure_name\n        , measure_version\n    from tuva.quality_measures._int_adh_statins_denominator\n\n)\n\n, performance_end as (\n\n    select\n      performance_period_end\n    from tuva.quality_measures._int_adh_statins__performance_period\n\n)\n\n/*\nThe below 3 cte identifies periods of continuous medication use for each patient by:\n1. Assigning a row number and tracking the previous medication per patient.\n2. Flagging when a medication change occurs.\n3. Grouping consecutive periods of the same medication by assigning a group ID.\n*/\n\n, ranked_patient as (\n\n    select\n          person_id\n        , dispensing_date\n        , ndc_code\n        , days_supply\n        , dense_rank() over (partition by person_id\norder by dispensing_date) as dense_rank\n        , lag(ndc_code) over (partition by person_id\norder by dispensing_date) as previous_ndc\n    from denominator\n\n)\n\n, grouped_meds as (\n\n    select\n          person_id\n        , dispensing_date\n        , ndc_code\n        , days_supply\n        , dense_rank\n        , case\n            when (ndc_code != previous_ndc) or previous_ndc is null then 1\n            else 0\n          end as med_change_flag --to increment group when medication changes\n    from ranked_patient\n\n)\n\n, final_groups as (\n\n    select\n          person_id\n        , ndc_code\n        , dispensing_date\n        , days_supply\n        , sum(med_change_flag) over (\n              partition by person_id\n              order by dense_rank\n              rows between unbounded preceding and current row\n          ) as group_id\n    from grouped_meds\n\n)\n\n/*\nThis cte theoretical_end_dates to final_fills calculates adjusted medication fill dates,\ngroups fills by continuous periods of use and ensures accurate start and end dates based\non previous fills and the performance period.\n*/\n\n, theoretical_end_dates as (\n\n    select\n          person_id\n        , group_id\n        , dispensing_date\n        , days_supply\n        , \n\n    dateadd(\n        day,\n        -1,\n        \n\n    dateadd(\n        day,\n        days_supply,\n        dispensing_date\n        )\n\n\n        )\n\n as theoretical_end_date\n    from final_groups\n\n)\n\n/*\nAdjust start dates based on the previous fill's end date + 1,\nor use the current rx_fill_date\n*/\n\n, previous_fill_end_dates as (\n\n    select\n          person_id\n        , group_id\n        , dispensing_date\n        , days_supply\n        , theoretical_end_date\n        , lag(theoretical_end_date)\n          over (partition by\n                person_id\n              , group_id\n            order by\n                dispensing_date\n          ) as previous_fill_end_date\n    from theoretical_end_dates\n\n)\n\n, adjusted_fill_dates as (\n\n    select\n          person_id\n        , group_id\n        , dispensing_date\n        , days_supply\n        , theoretical_end_date\n        , coalesce(\n            greatest(\n                  dispensing_date\n                , \n\n    dateadd(\n        day,\n        1,\n        previous_fill_end_date\n        )\n\n\n                )\n            , dispensing_date\n        ) as adjusted_fill_date\n    from previous_fill_end_dates\n\n)\n\n\n, actual_end_dates as (\n\n    select\n        person_id\n      , group_id\n      , dispensing_date\n      , days_supply\n      , adjusted_fill_date\n      , least(\n            \n\n    dateadd(\n        day,\n        -1,\n        \n\n    dateadd(\n        day,\n        days_supply,\n        adjusted_fill_date\n        )\n\n\n        )\n\n\n          , performance_period_end\n      ) as actual_end_date\n    from adjusted_fill_dates\n    inner join performance_end\n      on adjusted_fill_dates.adjusted_fill_date <= performance_end.performance_period_end\n\n)\n\n, grouped_fill_ranges as (\n\n    select\n          person_id\n        , group_id\n        , dispensing_date\n        , days_supply\n        , adjusted_fill_date\n        , actual_end_date\n        , min(adjusted_fill_date) over (partition by person_id, group_id) as group_first\n        , max(adjusted_fill_date) over (partition by person_id, group_id) as group_last\n    from actual_end_dates\n\n)\n\n, final_fills as (\n\n    select\n          person_id\n        , group_id\n        , dispensing_date\n        , days_supply\n        , adjusted_fill_date\n        , actual_end_date\n        , group_first\n        , group_last\n        , max(\n            case\n              when adjusted_fill_date = group_last\n              then days_supply\n              else 0\n            end) over (partition by person_id, group_id) as group_last_days_supply\n    from grouped_fill_ranges\n\n)\n\n/*\n1. Calculates the total covered days per every medication group per patient\n2. Then, calculates the overlap between groups of medication per patient.\n3. Then, calculates the actual total covered days for each patient.\n*/\n\n, covered_days_per_groups as (\n\n    select\n          person_id\n        , group_id\n        , group_first\n        , group_last\n        , group_last_days_supply\n        , sum(1 + datediff(\n        day,\n        adjusted_fill_date,\n        actual_end_date\n        )) as covered_days_per_group\n    from final_fills\n    group by\n          person_id\n        , group_id\n        , group_first\n        , group_last\n        , group_last_days_supply\n\n)\n\n, with_lag as (\n\n    select\n          person_id\n        , group_id\n        , group_first\n        , group_last\n        , covered_days_per_group\n        , lag(group_last) over (partition by person_id\norder by group_first) as lag_date\n        , lag(group_last_days_supply) over (partition by person_id\norder by group_first) as lag_days_supply\n    from covered_days_per_groups\n\n)\n\n, overlap_days as (\n\n    select\n          person_id\n        , group_id\n        , group_first\n        , group_last\n        , covered_days_per_group\n        , lag_date\n        , case\n            when group_first <\n                \n\n    dateadd(\n        day,\n        lag_days_supply,\n        lag_date\n        )\n\n\n            then\n                datediff(\n        day,\n        group_first,\n        \n\n    dateadd(\n        day,\n        lag_days_supply,\n        lag_date\n        )\n\n\n        )\n            else 0\n          end as overlap\n    from with_lag\n\n)\n\n\n, final_covered_days as (\n\n    select\n          person_id\n        , sum(covered_days_per_group) - sum(overlap) as actual_covered_days\n    from overlap_days\n    group by person_id\n\n)\n\n, patient_with_treatment_period_days as (\n    select\n          person_id\n        , datediff(\n        day,\n        first_dispensing_date,\n        performance_period_end\n        ) as treatment_period_days\n    from denominator\n\n)\n\n, patient_with_pdc as (\n\n    select\n          final_covered_days.person_id\n        , round(cast(actual_covered_days * 100 / treatment_period_days as numeric(28,6)), 4) as adherence\n    from final_covered_days\n    inner join patient_with_treatment_period_days\n        on final_covered_days.person_id = patient_with_treatment_period_days.person_id\n\n)\n\n/*\nSelects only the patient whose pdc is greater than 80%.\n*/\n\n, valid_patients as (\n\n    select\n          patient_with_pdc.person_id\n        , adherence\n        , denominator.dispensing_date as evidence_date\n        , denominator.days_supply as evidence_value\n        , 1 as numerator_flag\n    from patient_with_pdc\n    inner join denominator\n        on patient_with_pdc.person_id = denominator.person_id\n    where patient_with_pdc.adherence >= 80.00\n\n)\n\n, add_data_types as (\n\n    select\n          cast(person_id as TEXT) as person_id\n        , cast(evidence_date as date) as evidence_date\n        , cast(evidence_value as TEXT) as evidence_value\n        , cast(adherence as numeric(28,6)) as adherence\n        , cast(numerator_flag as integer) as numerator_flag\n    from valid_patients\n\n)\n\nselect\n      person_id\n    , evidence_date\n    , evidence_value\n    , adherence\n    , numerator_flag\n    , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom add_data_types", "relation_name": "tuva.quality_measures._int_adh_statins_numerator", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:21.936297Z", "completed_at": "2025-06-03T19:50:21.961534Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:21.962412Z", "completed_at": "2025-06-03T19:50:21.962415Z"}], "thread_id": "Thread-3", "execution_time": 0.037323951721191406, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.quality_measures__int_supd_numerator", "compiled": true, "compiled_code": "\n\nwith  __dbt__cte___stg_pharmacy_claim as (\n\n\nselect\n      person_id\n    , dispensing_date\n    , ndc_code\n    , days_supply\n    , paid_date\n    , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom tuva.core.pharmacy_claim\n\n\n), denominator as (\n\n    select\n          person_id\n        , performance_period_begin\n        , performance_period_end\n        , measure_id\n        , measure_name\n        , measure_version\n    from tuva.quality_measures._int_supd_denominator\n\n)\n\n, statin_codes as (\n\n    select\n        code\n      , code_system\n    from tuva.quality_measures._value_set_codes\n    where lower(concept_name) in (\n        'pqa statin medications'\n    )\n\n)\n\n, patients_taking_statin_meds as (\n\n    select\n        person_id\n      , dispensing_date\n    from __dbt__cte___stg_pharmacy_claim as pharmacy_claims\n    inner join statin_codes\n        on pharmacy_claims.ndc_code = statin_codes.code\n            and statin_codes.code_system = 'ndc'\n\n)\n\n, qualifying_patients_in_deno as (\n\n    select\n          patients_taking_statin_meds.person_id\n        , patients_taking_statin_meds.dispensing_date as evidence_date\n    from patients_taking_statin_meds\n    inner join denominator\n      on patients_taking_statin_meds.person_id = denominator.person_id\n        and dispensing_date between\n          denominator.performance_period_begin and denominator.performance_period_end\n\n)\n\n, numerator as (\n\n    select\n          person_id\n        , evidence_date\n        , 1 as numerator_flag\n    from qualifying_patients_in_deno\n\n)\n\n, add_data_types as (\n\n    select\n          cast(person_id as TEXT) as person_id\n        , cast(evidence_date as date) as evidence_date\n        , cast(null as TEXT) as evidence_value\n        , cast(numerator_flag as integer) as numerator_flag\n    from numerator\n\n)\n\nselect\n      person_id\n    , evidence_date\n    , evidence_value\n    , numerator_flag\n    , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom add_data_types", "relation_name": "tuva.quality_measures._int_supd_numerator", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:21.952108Z", "completed_at": "2025-06-03T19:50:21.968916Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:21.969672Z", "completed_at": "2025-06-03T19:50:21.969677Z"}], "thread_id": "Thread-1", "execution_time": 0.02083897590637207, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.quality_measures__int_adhras_numerator", "compiled": true, "compiled_code": "\n\nwith denominator as (\n\n    select\n          person_id\n        , dispensing_date\n        , first_dispensing_date\n        , days_supply\n        , ndc_code\n        , performance_period_begin\n        , performance_period_end\n        , measure_id\n        , measure_name\n        , measure_version\n    from tuva.quality_measures._int_adhras_denominator\n\n)\n\n, performance_end as (\n\n    select\n      performance_period_end\n    from tuva.quality_measures._int_adhras__performance_period\n\n)\n\n/*\nThe below 3 cte identifies periods of continuous medication use for each patient by:\n1. Assigning a row number and tracking the previous medication per patient.\n2. Flagging when a medication change occurs.\n3. Grouping consecutive periods of the same medication by assigning a group ID.\n*/\n\n, ranked_patient as (\n\n    select\n          person_id\n        , dispensing_date\n        , ndc_code\n        , days_supply\n        , dense_rank() over (partition by person_id\norder by dispensing_date) as dense_rank\n        , lag(ndc_code) over (partition by person_id\norder by dispensing_date) as previous_ndc\n    from denominator\n\n)\n\n, grouped_meds as (\n\n    select\n          person_id\n        , dispensing_date\n        , ndc_code\n        , days_supply\n        , dense_rank\n        , case\n            when (ndc_code != previous_ndc) or previous_ndc is null then 1\n            else 0\n          end as med_change_flag --to increment group when medication changes\n    from ranked_patient\n\n)\n\n, final_groups as (\n\n    select\n          person_id\n        , ndc_code\n        , dispensing_date\n        , days_supply\n        , sum(med_change_flag) over (\n              partition by person_id\n              order by dense_rank\n              rows between unbounded preceding and current row\n          ) as group_id\n    from grouped_meds\n\n)\n\n/*\nThis cte theoretical_end_dates to final_fills calculates adjusted medication fill dates,\ngroups fills by continuous periods of use and ensures accurate start and end dates based\non previous fills and the performance period.\n*/\n\n, theoretical_end_dates as (\n\n    select\n          person_id\n        , group_id\n        , dispensing_date\n        , days_supply\n        , \n\n    dateadd(\n        day,\n        -1,\n        \n\n    dateadd(\n        day,\n        days_supply,\n        dispensing_date\n        )\n\n\n        )\n\n as theoretical_end_date\n    from final_groups\n\n)\n\n/*\nAdjust start dates based on the previous fill's end date + 1,\nor use the current rx_fill_date\n*/\n\n, previous_fill_end_dates as (\n\n    select\n          person_id\n        , group_id\n        , dispensing_date\n        , days_supply\n        , theoretical_end_date\n        , lag(theoretical_end_date)\n          over (partition by\n                person_id\n              , group_id\n            order by\n                dispensing_date\n          ) as previous_fill_end_date\n    from theoretical_end_dates\n\n)\n\n, adjusted_fill_dates as (\n\n    select\n          person_id\n        , group_id\n        , dispensing_date\n        , days_supply\n        , theoretical_end_date\n        , coalesce(\n            greatest(\n                  dispensing_date\n                , \n\n    dateadd(\n        day,\n        1,\n        previous_fill_end_date\n        )\n\n\n                )\n            , dispensing_date\n        ) as adjusted_fill_date\n    from previous_fill_end_dates\n\n)\n\n\n, actual_end_dates as (\n\n    select\n        person_id\n      , group_id\n      , dispensing_date\n      , days_supply\n      , adjusted_fill_date\n      , least(\n            \n\n    dateadd(\n        day,\n        -1,\n        \n\n    dateadd(\n        day,\n        days_supply,\n        adjusted_fill_date\n        )\n\n\n        )\n\n\n          , performance_period_end\n      ) as actual_end_date\n    from adjusted_fill_dates\n    inner join performance_end\n      on adjusted_fill_dates.adjusted_fill_date <= performance_end.performance_period_end\n\n)\n\n, grouped_fill_ranges as (\n\n    select\n          person_id\n        , group_id\n        , dispensing_date\n        , days_supply\n        , adjusted_fill_date\n        , actual_end_date\n        , min(adjusted_fill_date) over (partition by person_id, group_id) as group_first\n        , max(adjusted_fill_date) over (partition by person_id, group_id) as group_last\n    from actual_end_dates\n\n)\n\n, final_fills as (\n\n    select\n          person_id\n        , group_id\n        , dispensing_date\n        , days_supply\n        , adjusted_fill_date\n        , actual_end_date\n        , group_first\n        , group_last\n        , max(\n            case\n              when adjusted_fill_date = group_last\n              then days_supply\n              else 0\n            end) over (partition by person_id, group_id) as group_last_days_supply\n    from grouped_fill_ranges\n\n)\n\n/*\n1. Calculates the total covered days per every medication group per patient\n2. Then, calculates the overlap between groups of medication per patient.\n3. Then, calculates the actual total covered days for each patient.\n*/\n\n, covered_days_per_groups as (\n\n    select\n          person_id\n        , group_id\n        , group_first\n        , group_last\n        , group_last_days_supply\n        , sum(1 + datediff(\n        day,\n        adjusted_fill_date,\n        actual_end_date\n        )) as covered_days_per_group\n    from final_fills\n    group by\n          person_id\n        , group_id\n        , group_first\n        , group_last\n        , group_last_days_supply\n\n)\n\n, with_lag as (\n\n    select\n          person_id\n        , group_id\n        , group_first\n        , group_last\n        , covered_days_per_group\n        , lag(group_last) over (partition by person_id\norder by group_first) as lag_date\n        , lag(group_last_days_supply) over (partition by person_id\norder by group_first) as lag_days_supply\n    from covered_days_per_groups\n\n)\n\n, overlap_days as (\n\n    select\n          person_id\n        , group_id\n        , group_first\n        , group_last\n        , covered_days_per_group\n        , lag_date\n        , case\n            when group_first <\n                \n\n    dateadd(\n        day,\n        lag_days_supply,\n        lag_date\n        )\n\n\n            then\n                datediff(\n        day,\n        group_first,\n        \n\n    dateadd(\n        day,\n        lag_days_supply,\n        lag_date\n        )\n\n\n        )\n            else 0\n          end as overlap\n    from with_lag\n\n)\n\n\n, final_covered_days as (\n\n    select\n          person_id\n        , sum(covered_days_per_group) - sum(overlap) as actual_covered_days\n    from overlap_days\n    group by person_id\n\n)\n\n, patient_with_treatment_period_days as (\n    select\n          person_id\n        , datediff(\n        day,\n        first_dispensing_date,\n        performance_period_end\n        ) as treatment_period_days\n    from denominator\n\n)\n\n, patient_with_pdc as (\n\n    select\n          final_covered_days.person_id\n        , round(cast(actual_covered_days * 100 / treatment_period_days as numeric(28,6)), 4) as adherence\n    from final_covered_days\n    inner join patient_with_treatment_period_days\n        on final_covered_days.person_id = patient_with_treatment_period_days.person_id\n\n)\n\n/*\nSelects only the patient whose pdc is greater than 80%.\n*/\n\n, valid_patients as (\n\n    select\n          patient_with_pdc.person_id\n        , adherence\n        , denominator.dispensing_date as evidence_date\n        , denominator.days_supply as evidence_value\n        , 1 as numerator_flag\n    from patient_with_pdc\n    inner join denominator\n        on patient_with_pdc.person_id = denominator.person_id\n    where patient_with_pdc.adherence >= 80.00\n\n)\n\n, add_data_types as (\n\n    select\n          cast(person_id as TEXT) as person_id\n        , cast(evidence_date as date) as evidence_date\n        , cast(evidence_value as TEXT) as evidence_value\n        , cast(adherence as numeric(28,6)) as adherence\n        , cast(numerator_flag as integer) as numerator_flag\n    from valid_patients\n\n)\n\nselect\n      person_id\n    , evidence_date\n    , evidence_value\n    , adherence\n    , numerator_flag\n    , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom add_data_types", "relation_name": "tuva.quality_measures._int_adhras_numerator", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:21.963043Z", "completed_at": "2025-06-03T19:50:21.970446Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:21.981844Z", "completed_at": "2025-06-03T19:50:21.981850Z"}], "thread_id": "Thread-4", "execution_time": 0.030057907104492188, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.encounters__stg_outpatient_institutional", "compiled": true, "compiled_code": "\n\n\nselect\n  claim_id\n, service_type\n, '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom tuva.claims_preprocessing.service_category__stg_outpatient_institutional as a", "relation_name": "tuva.claims_preprocessing.encounters__stg_outpatient_institutional", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:21.975923Z", "completed_at": "2025-06-03T19:50:21.983366Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:21.990205Z", "completed_at": "2025-06-03T19:50:21.990211Z"}], "thread_id": "Thread-3", "execution_time": 0.020850181579589844, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.service_category__ambulatory_surgery_institutional", "compiled": true, "compiled_code": "\n\nwith multiple_sources as (\nselect distinct\n    med.claim_id\n    , med.data_source\n    , 'ambulatory surgery center' as service_category_2\n    , 'ambulatory surgery center' as service_category_3\n    , '_int_ambulatory_surgery_institutional' as source_model_name\n    , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom tuva.claims_preprocessing.service_category__stg_medical_claim as med\ninner join tuva.claims_preprocessing.service_category__stg_outpatient_institutional as outpatient\n    on med.claim_id = outpatient.claim_id\n    and med.data_source = outpatient.data_source\nwhere revenue_center_code in ('0490', '0499')\n\nunion all\n\nselect distinct\n    med.claim_id\n    , med.data_source\n    , 'ambulatory surgery center' as service_category_2\n    , 'ambulatory surgery center' as service_category_3\n    , '_int_ambulatory_surgery_institutional' as source_model_name\n    , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom tuva.claims_preprocessing.service_category__stg_medical_claim as med\ninner join tuva.claims_preprocessing.service_category__stg_outpatient_institutional as outpatient\n    on med.claim_id = outpatient.claim_id\n    and med.data_source = outpatient.data_source\nwhere med.primary_taxonomy_code = '261QA1903X'\n)\n\nselect distinct\n    claim_id\n    , data_source\n    , 'outpatient' as service_category_1\n    , service_category_2\n    , service_category_3\n    , source_model_name\n    , tuva_last_run\nfrom multiple_sources", "relation_name": "tuva.claims_preprocessing._int_ambulatory_surgery_institutional", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:21.970877Z", "completed_at": "2025-06-03T19:50:21.983580Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:21.990585Z", "completed_at": "2025-06-03T19:50:21.990588Z"}], "thread_id": "Thread-2", "execution_time": 0.021513938903808594, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.service_category__ambulance_institutional", "compiled": true, "compiled_code": "\n\nselect distinct\n    med.claim_id\n  , med.claim_line_number\n  , med.data_source\n  , med.claim_line_id\n  , 'ancillary' as service_category_1\n  , 'ambulance' as service_category_2\n  , 'ambulance' as service_category_3\n  , '_int_ambulance_institutional' as source_model_name\n  , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom tuva.claims_preprocessing.service_category__stg_medical_claim as med\ninner join tuva.claims_preprocessing.service_category__stg_outpatient_institutional as outpatient\n  on med.claim_id = outpatient.claim_id\n  and med.data_source = outpatient.data_source\nwhere\n  (med.hcpcs_code between 'A0425' and 'A0436')\n  or med.revenue_center_code = '0540'", "relation_name": "tuva.claims_preprocessing._int_ambulance_institutional", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:21.983768Z", "completed_at": "2025-06-03T19:50:21.996570Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:21.997587Z", "completed_at": "2025-06-03T19:50:21.997593Z"}], "thread_id": "Thread-1", "execution_time": 0.015414953231811523, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.service_category__dialysis_institutional", "compiled": true, "compiled_code": "\n\nselect distinct\n    med.claim_id\n  , med.data_source\n  , 'outpatient' as service_category_1\n  , 'dialysis' as service_category_2\n  , 'dialysis' as service_category_3\n  , '_int_dialysis_institutional' as source_model_name\n  , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom tuva.claims_preprocessing.service_category__stg_medical_claim as med\ninner join tuva.claims_preprocessing.service_category__stg_outpatient_institutional as outpatient\n  on med.claim_id = outpatient.claim_id\nwhere\n  substring(med.bill_type_code, 1, 2) in ('72')\n  or med.primary_taxonomy_code in (\n      '2472R0900X'\n    , '163WD1100X'\n    , '163WH0500X'\n    , '261QE0700X'\n  )\n  or med.ccs_category in ('91', '58', '57')\n  or substring(med.revenue_center_code, 1, 3) in ('082', '083', '084', '085', '088')", "relation_name": "tuva.claims_preprocessing._int_dialysis_institutional", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:21.990978Z", "completed_at": "2025-06-03T19:50:21.997384Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:21.998390Z", "completed_at": "2025-06-03T19:50:21.998394Z"}], "thread_id": "Thread-4", "execution_time": 0.015312910079956055, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.service_category__dme_institutional", "compiled": true, "compiled_code": "\n\nselect distinct\n      med.claim_id\n    , med.claim_line_number\n    , med.data_source\n    , med.claim_line_id\n, 'ancillary' as service_category_1\n, 'durable medical equipment' as service_category_2\n, 'durable medical equipment' as service_category_3\n, 'service_category__dme_institutional' as source_model_name\n, '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom tuva.claims_preprocessing.service_category__stg_medical_claim as med\ninner join tuva.claims_preprocessing.service_category__stg_outpatient_institutional as outpatient\n  on med.claim_id = outpatient.claim_id\n  and med.data_source = outpatient.data_source\nwhere med.ccs_category = '243'", "relation_name": "tuva.claims_preprocessing.service_category__dme_institutional", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:22.005894Z", "completed_at": "2025-06-03T19:50:22.012424Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:22.043686Z", "completed_at": "2025-06-03T19:50:22.043694Z"}], "thread_id": "Thread-2", "execution_time": 0.046675920486450195, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.service_category__lab_institutional", "compiled": true, "compiled_code": "\n\nselect distinct\n    med.claim_id\n  , med.claim_line_number\n  , med.data_source\n  , 'ancillary' as service_category_1\n  , 'lab' as service_category_2\n  , 'lab' as service_category_3\n  , '_int_lab_institutional' as source_model_name\n  , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom tuva.claims_preprocessing.service_category__stg_medical_claim as med\ninner join tuva.claims_preprocessing.service_category__stg_outpatient_institutional as outpatient\n    on med.claim_id = outpatient.claim_id\n    and med.data_source = outpatient.data_source\nwhere substring(med.bill_type_code, 1, 2) in ('14')\nor med.ccs_category in (\n    '233' -- lab\n  , '235' --other lab\n  , '234' --pathology\n)", "relation_name": "tuva.claims_preprocessing._int_lab_institutional", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:21.998974Z", "completed_at": "2025-06-03T19:50:22.012624Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:22.044158Z", "completed_at": "2025-06-03T19:50:22.044162Z"}], "thread_id": "Thread-3", "execution_time": 0.0473780632019043, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.service_category__emergency_department_institutional", "compiled": true, "compiled_code": "\n\nwith multiple_sources as (\nselect distinct\n    med.claim_id\n    , med.data_source\n    , 'emergency department' as service_category_2\n    , 'emergency department' as service_category_3\n    , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\n    , '_int_emergency_department_institutional' as source_model_name\nfrom tuva.claims_preprocessing.service_category__stg_medical_claim as med\ninner join tuva.claims_preprocessing.service_category__stg_outpatient_institutional as outpatient\n    on med.claim_id = outpatient.claim_id\n    and med.data_source = outpatient.data_source\nwhere revenue_center_code in ('0450', '0451', '0452', '0459', '0981')\n    or hcpcs_code in ('99281', '99282', '99283', '99284', '99285', 'G0380', 'G0381', 'G0382', 'G0383', 'G0384')\n\nunion all\n\n--Adding in inpatient claims for flagging encounters with ED \nselect distinct\n    med.claim_id\n    , med.data_source\n    , 'emergency department' as service_category_2\n    , 'emergency department' as service_category_3\n    , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\n    , '_int_emergency_department_institutional' as source_model_name\nfrom tuva.claims_preprocessing.service_category__stg_medical_claim as med\ninner join tuva.claims_preprocessing.service_category__stg_inpatient_institutional as inp\n    on med.claim_id = inp.claim_id\n    and med.data_source = inp.data_source\nwhere revenue_center_code in ('0450', '0451', '0452', '0459', '0981')\n\n)\n\nselect\n    claim_id\n    , data_source\n    , 'outpatient' as service_category_1\n    , service_category_2\n    , service_category_3\n    , tuva_last_run\n    , source_model_name\nfrom multiple_sources", "relation_name": "tuva.claims_preprocessing._int_emergency_department_institutional", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:22.012817Z", "completed_at": "2025-06-03T19:50:22.066825Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:22.068101Z", "completed_at": "2025-06-03T19:50:22.068107Z"}], "thread_id": "Thread-1", "execution_time": 0.05689597129821777, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.service_category__outpatient_hospice_institutional", "compiled": true, "compiled_code": "\n\nselect distinct\n    med.claim_id\n  , med.data_source\n  , 'outpatient' as service_category_1\n  , 'outpatient hospice' as service_category_2\n  , 'outpatient hospice' as service_category_3\n  , '_int_outpatient_hospice_institutional' as source_model_name\n  , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom tuva.claims_preprocessing.service_category__stg_medical_claim as med\ninner join tuva.claims_preprocessing.service_category__stg_outpatient_institutional as outpatient\n  on med.claim_id = outpatient.claim_id\n  and med.data_source = outpatient.data_source\nwhere\n  substring(med.bill_type_code, 1, 2) in ('81')\n  or (\n    med.hcpcs_code in ('Q5001', 'Q5002', 'Q5003', 'Q5009')\n    and not exists (\n      select 1\n      from tuva.claims_preprocessing._int_home_health_institutional as hhi\n      where med.claim_id = hhi.claim_id\n      and med.data_source = hhi.data_source\n    )\n  )\n  or med.revenue_center_code in ('0650', '0651', '0652', '0657', '0659')", "relation_name": "tuva.claims_preprocessing._int_outpatient_hospice_institutional", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:22.036146Z", "completed_at": "2025-06-03T19:50:22.067076Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:22.068575Z", "completed_at": "2025-06-03T19:50:22.068580Z"}], "thread_id": "Thread-4", "execution_time": 0.05699920654296875, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.service_category__outpatient_hospital_or_clinic_institutional", "compiled": true, "compiled_code": "\n\nwith multiple_sources as (\n    select distinct\n        m.claim_id\n      , m.data_source\n      , 'outpatient hospital or clinic' as service_category_2\n      , 'outpatient hospital or clinic' as service_category_3\n      , '_int_outpatient_hospital_or_clinic_institutional' as source_model_name\n      , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\n    from tuva.claims_preprocessing.service_category__stg_medical_claim as m\n    inner join tuva.claims_preprocessing.service_category__stg_outpatient_institutional as o\n      on m.claim_id = o.claim_id\n      and m.data_source = o.data_source\n    where\n      substring(m.bill_type_code, 1, 2) in (\n        '13'  -- Hospital Outpatient\n        , '43'  -- Religious Nonmedical Hospital Outpatient\n        , '44'  -- Religious Nonmedical Hospital Other (Part B)\n        , '71'  -- Clinic Rural Health Center (RHC)\n        , '72'  -- Clinic Hospital-based or Independent Renal Dialysis Center\n        , '73'  -- Clinic Federally Qualified Health Center (FQHC)\n        , '74'  -- Clinic Other Rehabilitation Facility (ORF)\n        , '75'  -- Clinic Comprehensive Outpatient Rehabilitation Facility (CORF)\n        , '76'  -- Clinic Community Mental Health Center (CMHC)\n        , '77'  -- Clinic Free-standing Provider-based FQHC\n        , '79'   -- Clinic Other\n      )\n\n    union all\n\n    select distinct\n        m.claim_id\n      , m.data_source\n      , 'outpatient hospital or clinic' as service_category_2\n      , 'outpatient hospital or clinic' as service_category_3\n      , '_int_outpatient_hospital_or_clinic_institutional' as source_model_name\n      , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\n    from tuva.claims_preprocessing.service_category__stg_medical_claim as m\n    inner join tuva.claims_preprocessing.service_category__stg_outpatient_institutional as o\n      on m.claim_id = o.claim_id\n      and m.data_source = o.data_source\n    where\n      m.ccs_category = '227' -- Consultation, evaluation, and preventative care\n)\n\nselect distinct\n    claim_id\n  , data_source\n  , 'outpatient' as service_category_1\n  , service_category_2\n  , service_category_3\n  , source_model_name\n  , tuva_last_run\nfrom multiple_sources", "relation_name": "tuva.claims_preprocessing._int_outpatient_hospital_or_clinic_institutional", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:22.069297Z", "completed_at": "2025-06-03T19:50:22.085108Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:22.086022Z", "completed_at": "2025-06-03T19:50:22.086028Z"}], "thread_id": "Thread-2", "execution_time": 0.01967310905456543, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.service_category__outpatient_physical_therapy_institutional", "compiled": true, "compiled_code": "\n\nselect distinct\n    med.claim_id\n    , med.claim_line_number\n    , med.data_source\n    , 'outpatient' as service_category_1\n    , 'outpatient pt/ot/st' as service_category_2\n    , 'outpatient pt/ot/st' as service_category_3\n    , 'service_category__outpatient_physical_therapy_institutional' as source_model_name\n    , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom tuva.claims_preprocessing.service_category__stg_medical_claim as med\ninner join tuva.claims_preprocessing.service_category__stg_outpatient_institutional as o\n  on med.claim_id = o.claim_id\n  and med.data_source = o.data_source\nwhere ccs_category in ('213', '212', '215')", "relation_name": "tuva.claims_preprocessing.service_category__outpatient_physical_therapy_institutional", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:22.076422Z", "completed_at": "2025-06-03T19:50:22.085797Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:22.097923Z", "completed_at": "2025-06-03T19:50:22.097929Z"}], "thread_id": "Thread-3", "execution_time": 0.030552148818969727, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.service_category__outpatient_psychiatric_institutional", "compiled": true, "compiled_code": "\nwith multiple_sources as (\n\nselect distinct\n    m.claim_id\n  , m.data_source\n  , 'outpatient psychiatric' as service_category_2\n  , 'outpatient psychiatric' as service_category_3\n  , '_int_outpatient_psychiatric_institutional' as source_model_name\n  , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom tuva.claims_preprocessing.service_category__stg_medical_claim as m\n  inner join tuva.claims_preprocessing.service_category__stg_outpatient_institutional as i\n  on m.claim_id = i.claim_id\n  and m.data_source = i.data_source\nwhere m.revenue_center_code in ('0513', '0905')\n\nunion all\n\nselect distinct\n    m.claim_id\n  , m.data_source\n  , 'outpatient psychiatric' as service_category_2\n  , 'outpatient psychiatric' as service_category_3\n  , '_int_outpatient_psychiatric_institutional' as source_model_name\n  , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom tuva.claims_preprocessing.service_category__stg_medical_claim as m\ninner join tuva.claims_preprocessing.service_category__stg_outpatient_institutional as i\n  on m.claim_id = i.claim_id\n  and m.data_source = i.data_source\nwhere m.primary_taxonomy_code in ('283Q00000X'\n                                  , '273R00000X')\n)\n\nselect distinct\n  claim_id\n  , data_source\n  , 'outpatient' as service_category_1\n  , service_category_2\n  , service_category_3\n  , source_model_name\n  , tuva_last_run\nfrom multiple_sources", "relation_name": "tuva.claims_preprocessing._int_outpatient_psychiatric_institutional", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:22.086430Z", "completed_at": "2025-06-03T19:50:22.099532Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:22.100356Z", "completed_at": "2025-06-03T19:50:22.100360Z"}], "thread_id": "Thread-1", "execution_time": 0.015925168991088867, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.service_category__outpatient_radiology_institutional", "compiled": true, "compiled_code": "\n\nselect distinct\n    med.claim_id\n  , med.claim_line_number\n  , med.data_source\n  , 'outpatient' as service_category_1\n  , 'outpatient radiology' as service_category_2\n  , case when med.modality = 'Nuclear medicine' then 'pet'\n          when med.modality = 'Magnetic resonance' then 'mri'\n          when med.modality = 'Computerized tomography' then 'ct'\n          when med.modality in ('Invasive', 'Ultrasound', 'Computer-aided detection', 'Three-dimensional reconstruction', 'Radiography') then 'general'\n          else 'general'\n          end as service_category_3\n  , 'service_category__outpatient_radiology_institutional' as source_model_name\n  , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom tuva.claims_preprocessing.service_category__stg_medical_claim as med\n  inner join tuva.claims_preprocessing.service_category__stg_outpatient_institutional as o\n  on med.claim_id = o.claim_id\n  and med.data_source = o.data_source\nwhere med.modality is not null", "relation_name": "tuva.claims_preprocessing.service_category__outpatient_radiology_institutional", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:22.092038Z", "completed_at": "2025-06-03T19:50:22.099737Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:22.100714Z", "completed_at": "2025-06-03T19:50:22.100718Z"}], "thread_id": "Thread-4", "execution_time": 0.015980958938598633, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.service_category__outpatient_rehab_institutional", "compiled": true, "compiled_code": "\n\nwith multiple_sources as (\n    select distinct\n        m.claim_id\n      , m.data_source\n      , 'outpatient rehabilitation' as service_category_2\n      , 'outpatient rehabilitation' as service_category_3\n      , 'service_category__outpatient_rehab_institutional' as source_model_name\n      , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\n    from tuva.claims_preprocessing.service_category__stg_medical_claim as m\n    inner join tuva.claims_preprocessing.service_category__stg_outpatient_institutional as i\n      on m.claim_id = i.claim_id\n      and m.data_source = i.data_source\n    where\n      m.primary_taxonomy_code in (\n          '283X00000X'\n        , '273Y00000X'\n        , '261QR0400X'\n        , '315D00000X'\n        , '261QR0401X'\n        , '208100000X'\n        , '225400000X'\n        , '324500000X'\n        , '2278P1005X'\n        , '261QR0405X'\n        , '2081S0010X'\n        , '261QR0404X'\n      )\n)\n\nselect distinct\n    claim_id\n  , data_source\n  , 'outpatient' as service_category_1\n  , service_category_2\n  , service_category_3\n  , source_model_name\n  , tuva_last_run\nfrom multiple_sources", "relation_name": "tuva.claims_preprocessing.service_category__outpatient_rehab_institutional", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:22.106381Z", "completed_at": "2025-06-03T19:50:22.113360Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:22.120110Z", "completed_at": "2025-06-03T19:50:22.120117Z"}], "thread_id": "Thread-3", "execution_time": 0.020883798599243164, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.service_category__outpatient_surgery_institutional", "compiled": true, "compiled_code": "\n\nselect distinct\n    med.claim_id --claim level\n  , med.data_source\n  , 'outpatient' as service_category_1\n  , 'outpatient surgery' as service_category_2\n  , 'outpatient surgery' as service_category_3\n  , 'service_category__outpatient_surgery_institutional' as source_model_name\n  , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom tuva.claims_preprocessing.service_category__stg_medical_claim as med\ninner join tuva.claims_preprocessing.service_category__stg_outpatient_institutional as o\n  on med.claim_id = o.claim_id\n  and med.data_source = o.data_source\nwhere ccs_category between '1' and '176'\n  or ccs_category in ('229', '230', '231', '232', '244')", "relation_name": "tuva.claims_preprocessing.service_category__outpatient_surgery_institutional", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:22.101063Z", "completed_at": "2025-06-03T19:50:22.113558Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:22.120509Z", "completed_at": "2025-06-03T19:50:22.120513Z"}], "thread_id": "Thread-2", "execution_time": 0.02152705192565918, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.service_category__outpatient_substance_use_institutional", "compiled": true, "compiled_code": "\n\nselect distinct\n    med.claim_id\n  , med.data_source\n  , 'outpatient' as service_category_1\n  , 'outpatient substance use' as service_category_2\n  , 'outpatient substance use' as service_category_3\n  , 'service_category__outpatient_substance_use_institutional' as source_model_name\n  , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom tuva.claims_preprocessing.service_category__stg_medical_claim as med\ninner join tuva.claims_preprocessing.service_category__stg_outpatient_institutional as o\n  on med.claim_id = o.claim_id\n  and med.data_source = o.data_source\nwhere\n  med.default_ccsr_category_description_op in (\n      'MBD026'\n    , 'SYM008'\n    , 'MBD025'\n    , 'SYM009'\n    , 'MBD034'\n  )\n  or med.primary_taxonomy_code in (\n      '324500000X'\n    , '261QR0405X'\n    , '101YA0400X'\n  )", "relation_name": "tuva.claims_preprocessing.service_category__outpatient_substance_use_institutional", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:22.113941Z", "completed_at": "2025-06-03T19:50:22.126522Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:22.127288Z", "completed_at": "2025-06-03T19:50:22.127292Z"}], "thread_id": "Thread-1", "execution_time": 0.014724969863891602, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.service_category__pharmacy_institutional", "compiled": true, "compiled_code": "\n\nwith multiple_sources as (\n    select distinct\n        med.claim_id\n      , med.claim_line_number\n      , med.data_source\n      , 'outpatient' as service_category_1\n      , 'pharmacy' as service_category_2\n      , 'pharmacy' as service_category_3\n      , 'service_category__pharmacy_institutional' as source_model_name\n      , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\n    from tuva.claims_preprocessing.service_category__stg_medical_claim as med\n    inner join tuva.claims_preprocessing.service_category__stg_outpatient_institutional as outpatient\n      on med.claim_id = outpatient.claim_id\n      and med.data_source = outpatient.data_source\n    where\n      (substring(med.revenue_center_code, 1, 3) in ('025', '026', '063', '089') -- pharmacy and iv therapy\n      or med.revenue_center_code = '0547'\n      or med.ccs_category = '240') -- medications\n\n    union all\n\n    select distinct\n        med.claim_id\n      , med.claim_line_number\n      , med.data_source\n      , 'inpatient' as service_category_1\n      , 'pharmacy' as service_category_2\n      , 'pharmacy' as service_category_3\n      , 'service_category__pharmacy_institutional' as source_model_name\n      , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\n    from tuva.claims_preprocessing.service_category__stg_medical_claim as med\n    inner join tuva.claims_preprocessing.service_category__stg_inpatient_institutional as outpatient\n      on med.claim_id = outpatient.claim_id\n      and med.data_source = outpatient.data_source\n    where\n      (substring(med.revenue_center_code, 1, 3) in ('025', '026', '063', '089') -- pharmacy and iv therapy\n      or med.revenue_center_code = '0547')\n)\n\nselect\n    claim_id\n  , claim_line_number\n  , data_source\n  , service_category_1\n  , service_category_2\n  , service_category_3\n  , source_model_name\n  , tuva_last_run\nfrom multiple_sources", "relation_name": "tuva.claims_preprocessing.service_category__pharmacy_institutional", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:22.120860Z", "completed_at": "2025-06-03T19:50:22.127629Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:22.128493Z", "completed_at": "2025-06-03T19:50:22.128497Z"}], "thread_id": "Thread-4", "execution_time": 0.015637874603271484, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.service_category__inpatient_skilled_nursing_professional", "compiled": true, "compiled_code": "\n\nselect distinct\n    a.claim_id\n  , a.claim_line_number\n  , a.data_source\n  , a.claim_line_id\n  , 'inpatient' as service_category_1\n  , 'skilled nursing' as service_category_2\n  , 'skilled nursing' as service_category_3\n  , '_int_inpatient_skilled_nursing_professional' as source_model_name\n  , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom tuva.claims_preprocessing.service_category__stg_medical_claim as a\nleft outer join tuva.claims_preprocessing._int_dme_professional as b\n  on a.claim_id = b.claim_id\n  and a.claim_line_number = b.claim_line_number\n  and a.data_source = b.data_source\nwhere a.claim_type = 'professional'\n  and a.place_of_service_code in ('31', '32')\n  and (b.claim_id is null and b.claim_line_number is null)", "relation_name": "tuva.claims_preprocessing._int_inpatient_skilled_nursing_professional", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:22.134793Z", "completed_at": "2025-06-03T19:50:22.237505Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:22.244662Z", "completed_at": "2025-06-03T19:50:22.244668Z"}], "thread_id": "Thread-2", "execution_time": 0.11769509315490723, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.service_category__office_based_radiology", "compiled": true, "compiled_code": "\n\nselect distinct\n    med.claim_id\n    , med.claim_line_number\n    , med.data_source\n    , med.claim_line_id\n    , 'office-based' as service_category_1\n    , 'office-based radiology' as service_category_2\n    , case when med.modality = 'Nuclear medicine' then 'pet'\n           when med.modality = 'Magnetic resonance' then 'mri'\n           when med.modality = 'Computerized tomography' then 'ct'\n           when med.modality in ('Invasive', 'Ultrasound', 'Computer-aided detection', 'Three-dimensional reconstruction', 'Radiography') then 'general'\n           else 'general'\n           end as service_category_3\n    , 'service_category__office_based_radiology' as source_model_name\n    , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom tuva.claims_preprocessing.service_category__stg_medical_claim as med\n  inner join tuva.claims_preprocessing.service_category__stg_office_based as o\n  on med.claim_id = o.claim_id\n  and med.claim_line_number = o.claim_line_number\n  and med.data_source = o.data_source\nwhere\n  med.modality is not null\n  and med.place_of_service_code = '11'", "relation_name": "tuva.claims_preprocessing.service_category__office_based_radiology", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:22.128872Z", "completed_at": "2025-06-03T19:50:22.244223Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:22.245106Z", "completed_at": "2025-06-03T19:50:22.245111Z"}], "thread_id": "Thread-3", "execution_time": 0.11839890480041504, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.service_category__office_based_physical_therapy_professional", "compiled": true, "compiled_code": "\n\nselect distinct\n    med.claim_id\n    , med.claim_line_number\n    , med.data_source\n    , med.claim_line_id\n    , 'office-based' as service_category_1\n    , 'office-based pt/ot/st' as service_category_2\n    , 'office-based pt/ot/st' as service_category_3\n    , 'service_category__office_based_physical_therapy_professional' as source_model_name\n    , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom tuva.claims_preprocessing.service_category__stg_medical_claim as med\ninner join tuva.claims_preprocessing.service_category__stg_office_based as prof\n    on med.claim_id = prof.claim_id\n    and med.claim_line_number = prof.claim_line_number\n    and med.data_source = prof.data_source\nwhere (\n    med.ccs_category in ('213', '212', '215')\n    or med.rend_primary_specialty_description in (\n        'Occupational Health'\n        , 'Occupational Medicine'\n        , 'Occupational Therapist in Private Practice'\n        , 'Occupational Therapy Assistant'\n        , 'Physical Therapist'\n        , 'Physical Therapist in Private Practice'\n        , 'Physical Therapy Assistant'\n        , 'Speech Language Pathologist'\n        , 'Speech-Language Assistant'\n        ))\n    and med.place_of_service_code = '11'", "relation_name": "tuva.claims_preprocessing.service_category__office_based_physical_therapy_professional", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:22.140952Z", "completed_at": "2025-06-03T19:50:22.251078Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:22.251898Z", "completed_at": "2025-06-03T19:50:22.251906Z"}], "thread_id": "Thread-1", "execution_time": 0.11218810081481934, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.service_category__office_based_surgery_professional", "compiled": true, "compiled_code": "\n\n\nwith numeric_hcpcs as (\n    select *\n    from tuva.claims_preprocessing.service_category__stg_medical_claim as med\n    \n        where \n    \n        try_cast(hcpcs_code as int)\n     is not null\n    \n)\nselect distinct\n    med.claim_id\n  , med.claim_line_number\n  , med.data_source\n  , med.claim_line_id\n  , 'office-based' as service_category_1\n  , 'office-based surgery' as service_category_2\n  , 'office-based surgery' as service_category_3\n  , 'service_category__office_based_surgery_professional' as source_model_name\n  , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom numeric_hcpcs as med\ninner join tuva.claims_preprocessing.service_category__stg_office_based as prof\n  on med.claim_id = prof.claim_id\n  and med.claim_line_number = prof.claim_line_number\n  and med.data_source = prof.data_source\nwhere\n  (hcpcs_code between '10021' and '69999')", "relation_name": "tuva.claims_preprocessing.service_category__office_based_surgery_professional", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:22.245470Z", "completed_at": "2025-06-03T19:50:22.252229Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:22.253087Z", "completed_at": "2025-06-03T19:50:22.253090Z"}], "thread_id": "Thread-4", "execution_time": 0.11247682571411133, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.service_category__office_based_visit_professional", "compiled": true, "compiled_code": "\n\nselect distinct\n    med.claim_id\n  , med.claim_line_number\n  , med.data_source\n  , med.claim_line_id\n  , 'office-based' as service_category_1\n  , case\n      when med.place_of_service_code = '11' then 'office-based visit'\n      when med.place_of_service_code in ('02', '10') then 'telehealth visit'\n    end as service_category_2\n  , case\n      when med.place_of_service_code = '11' then 'office-based visit'\n      when med.place_of_service_code in ('02', '10') then 'telehealth visit'\n    end as service_category_3\n  , '_int_office_based_visit_professional' as source_model_name\n  , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom tuva.claims_preprocessing.service_category__stg_medical_claim as med\ninner join tuva.claims_preprocessing.service_category__stg_office_based as prof\n  on med.claim_id = prof.claim_id\n  and med.claim_line_number = prof.claim_line_number\n  and med.data_source = prof.data_source\nwhere\n  (med.place_of_service_code = '11' and med.ccs_category = '227') -- consultation eval and preventative care\n  or med.place_of_service_code in ('02', '10') -- telehealth", "relation_name": "tuva.claims_preprocessing._int_office_based_visit_professional", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:22.265953Z", "completed_at": "2025-06-03T19:50:22.296962Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:22.302543Z", "completed_at": "2025-06-03T19:50:22.302550Z"}], "thread_id": "Thread-3", "execution_time": 0.050969839096069336, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.pharmacy__brand_generic_opportunity", "compiled": true, "compiled_code": "\n\n/* claimid/line/source grain. calculates opportunity at line level*/\n\nwith  __dbt__cte__stg_pharmacy_claim as (\n\n\nselect\n    p.ndc_code\n  , n.fda_description as ndc_description\n  , p.data_source\n  , n.rxcui\n  , p.paid_amount\n  , p.allowed_amount\n  , p.claim_id\n  , p.claim_line_number\n  , p.person_id\n  , p.member_id\n  , p.prescribing_provider_id\n  , p.dispensing_provider_id\n  , p.dispensing_date\n  , p.quantity\n  , p.days_supply\n  , p.refills\n  , p.paid_date\nfrom tuva.core.pharmacy_claim as p\nleft outer join tuva.terminology.ndc as n\n  on p.ndc_code = n.ndc\n), cpu as (\nselect claim_id\n, claim_line_number\n, data_source\n, case when quantity > 0 then paid_amount / quantity else null end as brand_cost_per_unit\nfrom __dbt__cte__stg_pharmacy_claim\n)\n\n\nselect\n    pc.data_source\n  , pc.claim_id\n  , pc.claim_line_number\n  , cc.ndc_code\n  , cc.ndc_description\n  , cc.rxcui as brand_rxcui\n  , cc.brand_vs_generic\n  , cc.generic_available\n  , pc.paid_amount\n  , pc.quantity as total_units\n  , cpu.brand_cost_per_unit\n  , gc.generic_average_cost_per_unit\n  , cpu.brand_cost_per_unit - gc.generic_average_cost_per_unit as brand_less_generic_cost_per_unit\n  , case\n      when cpu.brand_cost_per_unit - gc.generic_average_cost_per_unit > 0\n        then (cpu.brand_cost_per_unit - gc.generic_average_cost_per_unit) * pc.quantity\n      else 0\n    end as generic_available_total_opportunity\n  , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom __dbt__cte__stg_pharmacy_claim as pc\ninner join cpu on pc.claim_id = cpu.claim_id\n  and\n  pc.claim_line_number = cpu.claim_line_number\n  and\n  pc.data_source = cpu.data_source\ninner join tuva.pharmacy._int_claims_current_cost as cc\n  on cc.ndc_code = pc.ndc_code\n  and\n  cc.data_source = pc.data_source\ninner join tuva.pharmacy._int_generic_cost as gc\n  on cc.rxcui = gc.brand_rxcui\n  and gc.data_source = cc.data_source\nwhere prescribed_atleast_one_generic_history = 1", "relation_name": "tuva.pharmacy.brand_generic_opportunity", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:22.253422Z", "completed_at": "2025-06-03T19:50:22.309101Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:22.318408Z", "completed_at": "2025-06-03T19:50:22.318415Z"}], "thread_id": "Thread-2", "execution_time": 0.06708502769470215, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.fhir_preprocessing__int_pharmacy_claim_eob", "compiled": true, "compiled_code": "\nwith  __dbt__cte___stg_eligibility as (\n\n\nselect\n      eligibility_id\n    , person_id\n    , member_id\n    , payer_type\n    , payer\n    , plan\n    , enrollment_start_date\n    , enrollment_end_date\n    , subscriber_relation\n    , subscriber_id\n    , data_source\nfrom tuva.core.eligibility\n\n\n),  __dbt__cte___stg_pharmacy_claim as (\n\n\nselect\n      pharmacy_claim_id\n    , person_id\n    , claim_id\n    , claim_line_number\n    , payer\n    , plan\n    , dispensing_provider_id\n    , dispensing_provider_name\n    , dispensing_date\n    , paid_date\n    , days_supply\n    , refills\n    , paid_amount\n    , in_network_flag\n    , ndc_code\n    , data_source\nfrom tuva.core.pharmacy_claim\n\n\n), eligibility as (\n\n    select\n          person_id\n        , eligibility_id\n        , payer\n        , plan\n        , enrollment_start_date\n        , enrollment_end_date\n    from __dbt__cte___stg_eligibility\n\n)\n\n, claim_supporting_info as (\n\n    select\n          claim_id\n        , eob_supporting_info_list\n    from tuva.fhir_preprocessing._int_pharmacy_claim_supporting_info\n\n)\n\n, claim_item as (\n\n    select\n          claim_id\n        , eob_item_list\n    from tuva.fhir_preprocessing._int_pharmacy_claim_item\n\n)\n\n, claim_total as (\n\n    select\n          claim_id\n        , eob_total_list\n    from tuva.fhir_preprocessing._int_pharmacy_claim_total\n\n)\n\n/* add window function to dedupe if there is overlapping coverage */\n, add_coverage as (\n\n    select\n          pharmacy_claim.person_id\n        , pharmacy_claim.pharmacy_claim_id\n        , pharmacy_claim.claim_id\n        , pharmacy_claim.paid_date\n        , pharmacy_claim.payer\n        , pharmacy_claim.dispensing_provider_id\n        , pharmacy_claim.dispensing_provider_name\n        , eligibility.eligibility_id\n        , pharmacy_claim.data_source\n        , row_number() over (\n            partition by\n                  pharmacy_claim.person_id\n                , pharmacy_claim.pharmacy_claim_id\n            order by\n                  eligibility.enrollment_start_date desc\n                , eligibility.enrollment_end_date desc\n        ) as coverage_row_num\n    from __dbt__cte___stg_pharmacy_claim as pharmacy_claim\n        left outer join eligibility\n            on pharmacy_claim.person_id = eligibility.person_id\n            and pharmacy_claim.payer = eligibility.payer\n            and pharmacy_claim.plan = eligibility.plan\n            and pharmacy_claim.paid_date\n                between eligibility.enrollment_start_date\n                and eligibility.enrollment_end_date\n    where pharmacy_claim.claim_line_number = 1 /* filter to claim header */\n\n)\n\n, dedupe as (\n\n    select\n          person_id\n        , pharmacy_claim_id\n        , claim_id\n        , paid_date\n        , payer\n        , dispensing_provider_id\n        , dispensing_provider_name\n        , eligibility_id\n        , data_source\n    from add_coverage\n    where coverage_row_num = 1\n\n)\n\n, pharmacy_eob as (\n\n    select\n          cast(pharmacy_claim.person_id as TEXT ) as patient_internal_id\n        , cast(pharmacy_claim.pharmacy_claim_id as TEXT ) as resource_internal_id\n        , cast(pharmacy_claim.claim_id as TEXT ) as unique_claim_id\n        , 'pharmacy' as eob_type_code\n        , cast(null as TEXT ) as eob_subtype_code /* required for union with medical eob */\n        , cast(null as date) as eob_billable_period_start /* required for union with medical eob */\n        , cast(null as date) as eob_billable_period_end /* required for union with medical eob */\n        , cast(pharmacy_claim.paid_date as date) as eob_created\n        , cast(pharmacy_claim.payer as TEXT ) as organization_name\n        /* required for FHIR validation, default to dummy practitioner */\n        , coalesce(\n              cast(pharmacy_claim.dispensing_provider_id  as TEXT )\n            , '9999999999'\n          ) as practitioner_internal_id\n        , coalesce(\n              cast(pharmacy_claim.dispensing_provider_name as TEXT )\n            , 'Dummy Practitioner'\n          ) as practitioner_name_text\n        , cast(md5(cast(coalesce(cast(pharmacy_claim.eligibility_id as TEXT), '_dbt_utils_surrogate_key_null_') as TEXT)) as TEXT ) as coverage_internal_id\n        , cast(null as TEXT ) as eob_diagnosis_list /* required for union with medical eob */\n        , cast(null as TEXT ) as eob_procedure_list /* required for union with medical eob */\n        , cast(claim_supporting_info.eob_supporting_info_list as TEXT ) as eob_supporting_info_list\n        , cast(claim_item.eob_item_list as TEXT ) as eob_item_list\n        , cast(claim_total.eob_total_list as TEXT ) as eob_total_list\n        , cast(pharmacy_claim.data_source as TEXT ) as data_source\n    from dedupe as pharmacy_claim\n        left outer join claim_supporting_info\n            on pharmacy_claim.claim_id = claim_supporting_info.claim_id\n        left outer join claim_item\n            on pharmacy_claim.claim_id = claim_item.claim_id\n        left outer join claim_total\n            on pharmacy_claim.claim_id = claim_total.claim_id\n\n)\n\nselect\n      patient_internal_id\n    , resource_internal_id\n    , unique_claim_id\n    , eob_type_code\n    , eob_subtype_code\n    , eob_billable_period_start\n    , eob_billable_period_end\n    , eob_created\n    , organization_name\n    , practitioner_internal_id\n    , practitioner_name_text\n    , coverage_internal_id\n    , eob_diagnosis_list\n    , eob_procedure_list\n    , eob_supporting_info_list\n    , eob_item_list\n    , eob_total_list\n    , data_source\nfrom pharmacy_eob", "relation_name": "tuva.fhir_preprocessing._int_pharmacy_claim_eob", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:22.320724Z", "completed_at": "2025-06-03T19:50:22.339523Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:22.346789Z", "completed_at": "2025-06-03T19:50:22.346797Z"}], "thread_id": "Thread-3", "execution_time": 0.028728961944580078, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.service_category__office_based_other_professional", "compiled": true, "compiled_code": "\n\n\nselect distinct\n    med.claim_id\n  , med.claim_line_number\n  , med.data_source\n  , med.claim_line_id\n  , 'office-based' as service_category_1\n  , 'office-based other' as service_category_2\n  , 'office-based other' as service_category_3\n  , 'service_category__office_based_other_professional' as source_model_name\n  , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom tuva.claims_preprocessing.service_category__stg_office_based as med\n  left outer join tuva.claims_preprocessing.service_category__pharmacy_professional as pharm\n  on med.claim_line_id = pharm.claim_line_id\n  and med.data_source = pharm.data_source\n  left outer join tuva.claims_preprocessing.service_category__office_based_radiology as rad\n  on med.claim_line_id = rad.claim_line_id\n  and med.data_source = rad.data_source\n  left outer join tuva.claims_preprocessing._int_office_based_visit_professional as visit\n  on med.claim_line_id = visit.claim_line_id\n  and med.data_source = visit.data_source\n  left outer join tuva.claims_preprocessing.service_category__office_based_surgery_professional as surg\n  on med.claim_line_id = surg.claim_line_id\n  and med.data_source = surg.data_source\n  left outer join tuva.claims_preprocessing.service_category__office_based_physical_therapy_professional as pt\n  on med.claim_line_id = pt.claim_line_id\n  and med.data_source = pt.data_source\nwhere pharm.claim_line_id is null\n  and rad.claim_line_id is null\n  and visit.claim_line_id is null\n  and surg.claim_line_id is null\n  and pt.claim_line_id is null", "relation_name": "tuva.claims_preprocessing.service_category__office_based_other_professional", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:22.327890Z", "completed_at": "2025-06-03T19:50:22.353664Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:22.354096Z", "completed_at": "2025-06-03T19:50:22.354101Z"}], "thread_id": "Thread-2", "execution_time": 0.027076244354248047, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.pharmacy__pharmacy_claim_expanded", "compiled": true, "compiled_code": "\n\nwith  __dbt__cte__stg_pharmacy_claim as (\n\n\nselect\n    p.ndc_code\n  , n.fda_description as ndc_description\n  , p.data_source\n  , n.rxcui\n  , p.paid_amount\n  , p.allowed_amount\n  , p.claim_id\n  , p.claim_line_number\n  , p.person_id\n  , p.member_id\n  , p.prescribing_provider_id\n  , p.dispensing_provider_id\n  , p.dispensing_date\n  , p.quantity\n  , p.days_supply\n  , p.refills\n  , p.paid_date\nfrom tuva.core.pharmacy_claim as p\nleft outer join tuva.terminology.ndc as n\n  on p.ndc_code = n.ndc\n), all_drugs as (\n  select\n      p.data_source\n    , p.claim_id\n    , p.claim_line_number\n    , p.person_id\n    , p.member_id\n    , p.prescribing_provider_id\n    , p.dispensing_provider_id\n    , p.dispensing_date\n    , p.ndc_code\n    , p.ndc_description\n    , p.quantity\n    , p.days_supply\n    , p.refills\n    , p.paid_date\n    , p.paid_amount\n    , p.allowed_amount\n    , p.rxcui\n    , r.product_name\n    , r.product_tty\n    , r.brand_vs_generic\n    , r.brand_name\n    , r.clinical_product_rxcui as generic_rxcui\n    , r.clinical_product_name as generic_rxcui_description\n    , r.clinical_product_tty as generic_tty\n    , r.ingredient_name\n    , r.dose_form_name\n    , case\n        when ga.brand_with_generic_available is not null\n          then 'brand_with_generic_available'\n        else r.brand_vs_generic\n      end as generic_available\n    , opp.brand_cost_per_unit\n    , opp.generic_average_cost_per_unit\n    , opp.brand_less_generic_cost_per_unit\n    , opp.generic_available_total_opportunity\n  , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\n  from __dbt__cte__stg_pharmacy_claim as p\n  left outer join tuva.terminology.rxnorm_brand_generic as r\n    on p.rxcui = r.product_rxcui\n  left outer join tuva.pharmacy._int_brand_with_generic_available as ga\n    on p.rxcui = ga.brand_with_generic_available\n  left outer join tuva.pharmacy.brand_generic_opportunity as opp\n    on p.claim_id = opp.claim_id\n    and p.claim_line_number = opp.claim_line_number\n    and p.data_source = opp.data_source\n)\n\n, generic_available as (\n  select\n      *\n    , row_number() over (\norder by ndc_code, data_source) as generic_available_sk\n  from all_drugs\n  where generic_available = 'brand_with_generic_available'\n)\n\nselect\n    a.data_source\n  , a.claim_id\n  , a.claim_line_number\n  , a.person_id\n  , a.prescribing_provider_id\n  , a.dispensing_provider_id\n  , a.dispensing_date\n  , a.ndc_code\n  , a.ndc_description\n  , a.quantity\n  , a.days_supply\n  , a.refills\n  , a.paid_date\n  , a.paid_amount\n  , a.allowed_amount\n  , a.rxcui\n  , a.product_name\n  , a.product_tty\n  , a.brand_vs_generic\n  , a.brand_name\n  , a.generic_rxcui\n  , a.generic_rxcui_description\n  , a.generic_tty\n  , a.ingredient_name\n  , a.dose_form_name\n  , a.generic_available\n  , a.brand_cost_per_unit\n  , a.generic_average_cost_per_unit\n  , a.brand_less_generic_cost_per_unit\n  , a.generic_available_total_opportunity\n  , g.generic_available_sk\nfrom all_drugs as a\nleft outer join generic_available as g\n  on a.claim_id = g.claim_id\n  and a.claim_line_number = g.claim_line_number\n  and a.data_source = g.data_source", "relation_name": "tuva.pharmacy.pharmacy_claim_expanded", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:22.348144Z", "completed_at": "2025-06-03T19:50:22.353888Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:22.354462Z", "completed_at": "2025-06-03T19:50:22.354465Z"}], "thread_id": "Thread-3", "execution_time": 0.0068416595458984375, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_utils_unique_combination_of_columns_pharmacy__brand_generic_opportunity_data_source__claim_id__claim_line_number.c19d0cecc7", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith validation_errors as (\n\n    select\n        data_source, claim_id, claim_line_number\n    from tuva.pharmacy.brand_generic_opportunity\n    group by data_source, claim_id, claim_line_number\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:22.356241Z", "completed_at": "2025-06-03T19:50:22.373422Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:22.373652Z", "completed_at": "2025-06-03T19:50:22.373658Z"}], "thread_id": "Thread-2", "execution_time": 0.01836991310119629, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.fhir_preprocessing__int_coverage_type", "compiled": true, "compiled_code": "\nwith coverage_staging as (\n\n    select\n          patient_internal_id\n        , resource_internal_id\n        , coverage_type_product\n    from tuva.fhir_preprocessing._int_coverage\n\n)\n\n, product_type as (\n\n    select\n          patient_internal_id\n        , resource_internal_id\n        , 'COVERAGE_TYPE' as coverage_type_system\n        , coverage_type_product as coverage_type_code\n    from coverage_staging\n\n)\n\n/* Map to standardized codes for benefit type */\n, medical_benefit as (\n\n    select\n           patient_internal_id\n         , resource_internal_id\n         , 'ACT_CODE' as coverage_type_system\n         , case\n            when coverage_type_product in (\n                  'PPO'\n                , 'POS'\n                , 'CEP'\n                , 'HMO'\n                , 'MMO'\n                , 'MOS'\n                , 'MPO'\n                , 'MEP'\n            ) then 'MCPOL'\n            when coverage_type_product in (\n                  'MCR'\n                , 'MP'\n                , 'MC'\n                , 'MCS'\n                , 'MMP'\n                , 'MDE'\n            ) then 'RETIRE'\n            else 'SUBSIDIZ'\n          end as coverage_type_code\n    from coverage_staging\n\n)\n\n, pharmacy_benefit as (\n\n    select distinct\n          patient_internal_id\n        , coverage_internal_id as resource_internal_id\n        , 'ACT_CODE' as coverage_type_system\n        , 'DRUGPOL' as coverage_type_code\n    from tuva.fhir_preprocessing._int_pharmacy_claim_eob\n\n)\n\n, unioned as (\n    select * from product_type\n    union all\n    select * from medical_benefit\n    union all\n    select * from pharmacy_benefit\n)\n\n/* create a json string for CSV export */\n\nselect\n    patient_internal_id, resource_internal_id\n    , to_json(\n        array_agg(\n            object_construct(\n                'coverageTypeSystem',coverage_type_system\n                , 'coverageTypeCode',coverage_type_code\n            )\n        )\n    ) as coverage_type_list\nfrom unioned\ngroup by patient_internal_id, resource_internal_id\n", "relation_name": "tuva.fhir_preprocessing._int_coverage_type", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:22.374866Z", "completed_at": "2025-06-03T19:50:22.390114Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:22.390353Z", "completed_at": "2025-06-03T19:50:22.390359Z"}], "thread_id": "Thread-2", "execution_time": 0.016080856323242188, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.pharmacy__generic_available_list", "compiled": true, "compiled_code": "\n\nwith  __dbt__cte__stg_pharmacy_claim as (\n\n\nselect\n    p.ndc_code\n  , n.fda_description as ndc_description\n  , p.data_source\n  , n.rxcui\n  , p.paid_amount\n  , p.allowed_amount\n  , p.claim_id\n  , p.claim_line_number\n  , p.person_id\n  , p.member_id\n  , p.prescribing_provider_id\n  , p.dispensing_provider_id\n  , p.dispensing_date\n  , p.quantity\n  , p.days_supply\n  , p.refills\n  , p.paid_date\nfrom tuva.core.pharmacy_claim as p\nleft outer join tuva.terminology.ndc as n\n  on p.ndc_code = n.ndc\n), generic_sk as (\n  select\n      generic_available_sk\n    , claim_id\n    , claim_line_number\n    , data_source\n  from tuva.pharmacy.pharmacy_claim_expanded as e\n  where generic_available_sk is not null\n)\n\nselect\n    sk.generic_available_sk\n  , p.data_source\n  , p.ndc_code as brand_ndc_code\n  , p.ndc_description as brand_ndc_description\n  , p.rxcui as brand_rxcui\n  , p.paid_amount as brand_paid_amount\n  , p.quantity as brand_units\n  , case\n      when p.quantity = 0\n        then 0\n      else p.paid_amount / p.quantity\n    end as brand_paid_per_unit\n  , ga.ndc as generic_ndc\n  , n.fda_description as generic_ndc_description\n  , case\n      when gc.ndc_code is not null\n        then 1\n      else 0\n    end as generic_prescribed_history\n  , gc.cost_per_unit as generic_cost_per_unit\n  , gc.cost_per_unit * p.quantity as generic_cost_at_units\n  , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom __dbt__cte__stg_pharmacy_claim as p\ninner join generic_sk as sk\n  on p.claim_id = sk.claim_id\n  and p.claim_line_number = sk.claim_line_number\n  and p.data_source = sk.data_source\ninner join tuva.pharmacy._int_brand_with_generic_available as b\n  on p.rxcui = b.brand_with_generic_available\ninner join tuva.pharmacy.rxnorm_generic_available as ga\n  on p.rxcui = ga.product_rxcui\n  and ga.ndc_product_tty in ('SCD', 'GPCK')\nleft outer join tuva.terminology.ndc as n\n  on ga.ndc = n.ndc\nleft outer join tuva.pharmacy._int_claims_current_cost as gc\n  on ga.ndc = gc.ndc_code\n  and gc.brand_vs_generic = 'generic'\n  and gc.data_source = p.data_source\nwhere\n    ga.product_startmarketingdate is not null\n    \n        and cast(ga.product_startmarketingdate as date) <= current_date\n", "relation_name": "tuva.pharmacy.generic_available_list", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:22.391571Z", "completed_at": "2025-06-03T19:50:22.396348Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:22.396576Z", "completed_at": "2025-06-03T19:50:22.396580Z"}], "thread_id": "Thread-2", "execution_time": 0.005599021911621094, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_utils_unique_combination_of_columns_pharmacy__pharmacy_claim_expanded_data_source__claim_id__claim_line_number.132bf82f59", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith validation_errors as (\n\n    select\n        data_source, claim_id, claim_line_number\n    from tuva.pharmacy.pharmacy_claim_expanded\n    group by data_source, claim_id, claim_line_number\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:22.397625Z", "completed_at": "2025-06-03T19:50:22.404616Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:22.404833Z", "completed_at": "2025-06-03T19:50:22.404838Z"}], "thread_id": "Thread-2", "execution_time": 0.007711887359619141, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.fhir_preprocessing__coverage", "compiled": true, "compiled_code": "\nselect\n      cast(coverage.patient_internal_id as TEXT ) as patient_internal_id\n    , cast(coverage.resource_internal_id as TEXT ) as resource_internal_id\n    , cast(coverage.organization_name as TEXT ) as organization_name\n    , cast(coverage.coverage_plan as TEXT ) as coverage_plan\n    , cast(coverage.coverage_period_start as date) as coverage_period_start\n    , cast(coverage.coverage_period_end as date) as coverage_period_end\n    , cast(coverage.coverage_relationship as TEXT ) as coverage_relationship\n    , cast(coverage.coverage_status as TEXT ) as coverage_status\n    , cast(coverage.coverage_subscriber_id as TEXT ) as coverage_subscriber_id\n    , cast(coverage_type.coverage_type_list as TEXT ) as coverage_type_list\n    , cast(coverage.data_source as TEXT ) as data_source\n    , cast('2025-06-03 19:49:40.396647+00:00' as timestamp) as tuva_last_run\n    , cast('0.14.13' as TEXT ) as tuva_package_version\nfrom tuva.fhir_preprocessing._int_coverage as coverage\n    left outer join tuva.fhir_preprocessing._int_coverage_type as coverage_type\n        on coverage.patient_internal_id = coverage_type.patient_internal_id\n        and coverage.resource_internal_id = coverage_type.resource_internal_id", "relation_name": "tuva.fhir_preprocessing.coverage", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:22.405882Z", "completed_at": "2025-06-03T19:50:22.411064Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:22.411307Z", "completed_at": "2025-06-03T19:50:22.411312Z"}], "thread_id": "Thread-2", "execution_time": 0.005917072296142578, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.mart_review__generics", "compiled": true, "compiled_code": "\n\nselect *\nfrom tuva.pharmacy.generic_available_list", "relation_name": "tuva.data_quality.mart_review__generics", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:22.412381Z", "completed_at": "2025-06-03T19:50:22.417952Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:22.418182Z", "completed_at": "2025-06-03T19:50:22.418187Z"}], "thread_id": "Thread-2", "execution_time": 0.0062961578369140625, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_utils_unique_combination_of_columns_pharmacy__generic_available_list_generic_available_sk__generic_ndc.5460505c42", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith validation_errors as (\n\n    select\n        generic_available_sk, generic_ndc\n    from tuva.pharmacy.generic_available_list\n    group by generic_available_sk, generic_ndc\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:22.419225Z", "completed_at": "2025-06-03T19:50:22.424467Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:22.424690Z", "completed_at": "2025-06-03T19:50:22.424694Z"}], "thread_id": "Thread-2", "execution_time": 0.005949974060058594, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_utils_unique_combination_of_columns_fhir_preprocessing__coverage_patient_internal_id__resource_internal_id.1932a90f98", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith validation_errors as (\n\n    select\n        patient_internal_id, resource_internal_id\n    from tuva.fhir_preprocessing.coverage\n    group by patient_internal_id, resource_internal_id\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:22.309604Z", "completed_at": "2025-06-03T19:50:23.257814Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:23.258092Z", "completed_at": "2025-06-03T19:50:23.258100Z"}], "thread_id": "Thread-4", "execution_time": 0.9609968662261963, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.service_category__combined_institutional_line_level", "compiled": true, "compiled_code": "\n\nwith combine_line_models as (\n  \n\n        (\n            select\n                cast('tuva.claims_preprocessing.service_category__pharmacy_institutional' as TEXT) as _dbt_source_relation,\n\n                \n                    cast(\"CLAIM_ID\" as character varying(16777216)) as \"CLAIM_ID\" ,\n                    cast(\"CLAIM_LINE_NUMBER\" as NUMBER(38,0)) as \"CLAIM_LINE_NUMBER\" ,\n                    cast(\"DATA_SOURCE\" as character varying(16777216)) as \"DATA_SOURCE\" ,\n                    cast(\"SERVICE_CATEGORY_1\" as character varying(10)) as \"SERVICE_CATEGORY_1\" ,\n                    cast(\"SERVICE_CATEGORY_2\" as character varying(25)) as \"SERVICE_CATEGORY_2\" ,\n                    cast(\"SERVICE_CATEGORY_3\" as character varying(25)) as \"SERVICE_CATEGORY_3\" ,\n                    cast(\"SOURCE_MODEL_NAME\" as character varying(52)) as \"SOURCE_MODEL_NAME\" ,\n                    cast(\"TUVA_LAST_RUN\" as character varying(32)) as \"TUVA_LAST_RUN\" ,\n                    cast(null as character varying(16777216)) as \"CLAIM_LINE_ID\" \n\n            from tuva.claims_preprocessing.service_category__pharmacy_institutional\n\n            \n        )\n\n        union all\n        \n\n        (\n            select\n                cast('tuva.claims_preprocessing.service_category__outpatient_radiology_institutional' as TEXT) as _dbt_source_relation,\n\n                \n                    cast(\"CLAIM_ID\" as character varying(16777216)) as \"CLAIM_ID\" ,\n                    cast(\"CLAIM_LINE_NUMBER\" as NUMBER(38,0)) as \"CLAIM_LINE_NUMBER\" ,\n                    cast(\"DATA_SOURCE\" as character varying(16777216)) as \"DATA_SOURCE\" ,\n                    cast(\"SERVICE_CATEGORY_1\" as character varying(10)) as \"SERVICE_CATEGORY_1\" ,\n                    cast(\"SERVICE_CATEGORY_2\" as character varying(25)) as \"SERVICE_CATEGORY_2\" ,\n                    cast(\"SERVICE_CATEGORY_3\" as character varying(25)) as \"SERVICE_CATEGORY_3\" ,\n                    cast(\"SOURCE_MODEL_NAME\" as character varying(52)) as \"SOURCE_MODEL_NAME\" ,\n                    cast(\"TUVA_LAST_RUN\" as character varying(32)) as \"TUVA_LAST_RUN\" ,\n                    cast(null as character varying(16777216)) as \"CLAIM_LINE_ID\" \n\n            from tuva.claims_preprocessing.service_category__outpatient_radiology_institutional\n\n            \n        )\n\n        union all\n        \n\n        (\n            select\n                cast('tuva.claims_preprocessing._int_observation_institutional' as TEXT) as _dbt_source_relation,\n\n                \n                    cast(\"CLAIM_ID\" as character varying(16777216)) as \"CLAIM_ID\" ,\n                    cast(\"CLAIM_LINE_NUMBER\" as NUMBER(38,0)) as \"CLAIM_LINE_NUMBER\" ,\n                    cast(\"DATA_SOURCE\" as character varying(16777216)) as \"DATA_SOURCE\" ,\n                    cast(\"SERVICE_CATEGORY_1\" as character varying(10)) as \"SERVICE_CATEGORY_1\" ,\n                    cast(\"SERVICE_CATEGORY_2\" as character varying(25)) as \"SERVICE_CATEGORY_2\" ,\n                    cast(\"SERVICE_CATEGORY_3\" as character varying(25)) as \"SERVICE_CATEGORY_3\" ,\n                    cast(\"SOURCE_MODEL_NAME\" as character varying(52)) as \"SOURCE_MODEL_NAME\" ,\n                    cast(\"TUVA_LAST_RUN\" as character varying(32)) as \"TUVA_LAST_RUN\" ,\n                    cast(null as character varying(16777216)) as \"CLAIM_LINE_ID\" \n\n            from tuva.claims_preprocessing._int_observation_institutional\n\n            \n        )\n\n        union all\n        \n\n        (\n            select\n                cast('tuva.claims_preprocessing._int_ambulance_institutional' as TEXT) as _dbt_source_relation,\n\n                \n                    cast(\"CLAIM_ID\" as character varying(16777216)) as \"CLAIM_ID\" ,\n                    cast(\"CLAIM_LINE_NUMBER\" as NUMBER(38,0)) as \"CLAIM_LINE_NUMBER\" ,\n                    cast(\"DATA_SOURCE\" as character varying(16777216)) as \"DATA_SOURCE\" ,\n                    cast(\"SERVICE_CATEGORY_1\" as character varying(10)) as \"SERVICE_CATEGORY_1\" ,\n                    cast(\"SERVICE_CATEGORY_2\" as character varying(25)) as \"SERVICE_CATEGORY_2\" ,\n                    cast(\"SERVICE_CATEGORY_3\" as character varying(25)) as \"SERVICE_CATEGORY_3\" ,\n                    cast(\"SOURCE_MODEL_NAME\" as character varying(52)) as \"SOURCE_MODEL_NAME\" ,\n                    cast(\"TUVA_LAST_RUN\" as character varying(32)) as \"TUVA_LAST_RUN\" ,\n                    cast(\"CLAIM_LINE_ID\" as character varying(16777216)) as \"CLAIM_LINE_ID\" \n\n            from tuva.claims_preprocessing._int_ambulance_institutional\n\n            \n        )\n\n        union all\n        \n\n        (\n            select\n                cast('tuva.claims_preprocessing.service_category__dme_institutional' as TEXT) as _dbt_source_relation,\n\n                \n                    cast(\"CLAIM_ID\" as character varying(16777216)) as \"CLAIM_ID\" ,\n                    cast(\"CLAIM_LINE_NUMBER\" as NUMBER(38,0)) as \"CLAIM_LINE_NUMBER\" ,\n                    cast(\"DATA_SOURCE\" as character varying(16777216)) as \"DATA_SOURCE\" ,\n                    cast(\"SERVICE_CATEGORY_1\" as character varying(10)) as \"SERVICE_CATEGORY_1\" ,\n                    cast(\"SERVICE_CATEGORY_2\" as character varying(25)) as \"SERVICE_CATEGORY_2\" ,\n                    cast(\"SERVICE_CATEGORY_3\" as character varying(25)) as \"SERVICE_CATEGORY_3\" ,\n                    cast(\"SOURCE_MODEL_NAME\" as character varying(52)) as \"SOURCE_MODEL_NAME\" ,\n                    cast(\"TUVA_LAST_RUN\" as character varying(32)) as \"TUVA_LAST_RUN\" ,\n                    cast(\"CLAIM_LINE_ID\" as character varying(16777216)) as \"CLAIM_LINE_ID\" \n\n            from tuva.claims_preprocessing.service_category__dme_institutional\n\n            \n        )\n\n        union all\n        \n\n        (\n            select\n                cast('tuva.claims_preprocessing._int_lab_institutional' as TEXT) as _dbt_source_relation,\n\n                \n                    cast(\"CLAIM_ID\" as character varying(16777216)) as \"CLAIM_ID\" ,\n                    cast(\"CLAIM_LINE_NUMBER\" as NUMBER(38,0)) as \"CLAIM_LINE_NUMBER\" ,\n                    cast(\"DATA_SOURCE\" as character varying(16777216)) as \"DATA_SOURCE\" ,\n                    cast(\"SERVICE_CATEGORY_1\" as character varying(10)) as \"SERVICE_CATEGORY_1\" ,\n                    cast(\"SERVICE_CATEGORY_2\" as character varying(25)) as \"SERVICE_CATEGORY_2\" ,\n                    cast(\"SERVICE_CATEGORY_3\" as character varying(25)) as \"SERVICE_CATEGORY_3\" ,\n                    cast(\"SOURCE_MODEL_NAME\" as character varying(52)) as \"SOURCE_MODEL_NAME\" ,\n                    cast(\"TUVA_LAST_RUN\" as character varying(32)) as \"TUVA_LAST_RUN\" ,\n                    cast(null as character varying(16777216)) as \"CLAIM_LINE_ID\" \n\n            from tuva.claims_preprocessing._int_lab_institutional\n\n            \n        )\n\n        \n)\n\nselect\n  l.claim_id\n  , l.data_source\n  , l.claim_line_number\n  , l.service_category_1\n  , l.service_category_2\n  , l.service_category_3\n  , l.source_model_name\nfrom combine_line_models as l", "relation_name": "tuva.claims_preprocessing._int_combined_institutional_line_level", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:22.297415Z", "completed_at": "2025-06-03T19:50:25.398551Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:25.398965Z", "completed_at": "2025-06-03T19:50:25.398980Z"}], "thread_id": "Thread-1", "execution_time": 3.109173059463501, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.service_category__combined_institutional_header_level", "compiled": true, "compiled_code": "\n\nwith combine_header_models as (\n  \n\n        (\n            select\n                cast('tuva.claims_preprocessing._int_acute_inpatient_institutional_other' as TEXT) as _dbt_source_relation,\n\n                \n                    cast(\"CLAIM_ID\" as character varying(16777216)) as \"CLAIM_ID\" ,\n                    cast(\"DATA_SOURCE\" as character varying(16777216)) as \"DATA_SOURCE\" ,\n                    cast(\"SERVICE_CATEGORY_1\" as character varying(10)) as \"SERVICE_CATEGORY_1\" ,\n                    cast(\"SERVICE_CATEGORY_2\" as character varying(29)) as \"SERVICE_CATEGORY_2\" ,\n                    cast(\"SERVICE_CATEGORY_3\" as character varying(29)) as \"SERVICE_CATEGORY_3\" ,\n                    cast(\"SOURCE_MODEL_NAME\" as character varying(59)) as \"SOURCE_MODEL_NAME\" ,\n                    cast(\"TUVA_LAST_RUN\" as character varying(32)) as \"TUVA_LAST_RUN\" ,\n                    cast(null as NUMBER(38,0)) as \"CLAIM_LINE_NUMBER\" \n\n            from tuva.claims_preprocessing._int_acute_inpatient_institutional_other\n\n            \n        )\n\n        union all\n        \n\n        (\n            select\n                cast('tuva.claims_preprocessing._int_acute_inpatient_institutional_maternity' as TEXT) as _dbt_source_relation,\n\n                \n                    cast(\"CLAIM_ID\" as character varying(16777216)) as \"CLAIM_ID\" ,\n                    cast(\"DATA_SOURCE\" as character varying(16777216)) as \"DATA_SOURCE\" ,\n                    cast(\"SERVICE_CATEGORY_1\" as character varying(10)) as \"SERVICE_CATEGORY_1\" ,\n                    cast(\"SERVICE_CATEGORY_2\" as character varying(29)) as \"SERVICE_CATEGORY_2\" ,\n                    cast(\"SERVICE_CATEGORY_3\" as character varying(29)) as \"SERVICE_CATEGORY_3\" ,\n                    cast(\"SOURCE_MODEL_NAME\" as character varying(59)) as \"SOURCE_MODEL_NAME\" ,\n                    cast(\"TUVA_LAST_RUN\" as character varying(32)) as \"TUVA_LAST_RUN\" ,\n                    cast(null as NUMBER(38,0)) as \"CLAIM_LINE_NUMBER\" \n\n            from tuva.claims_preprocessing._int_acute_inpatient_institutional_maternity\n\n            \n        )\n\n        union all\n        \n\n        (\n            select\n                cast('tuva.claims_preprocessing._int_acute_inpatient_institutional_med_surg' as TEXT) as _dbt_source_relation,\n\n                \n                    cast(\"CLAIM_ID\" as character varying(16777216)) as \"CLAIM_ID\" ,\n                    cast(\"DATA_SOURCE\" as character varying(16777216)) as \"DATA_SOURCE\" ,\n                    cast(\"SERVICE_CATEGORY_1\" as character varying(10)) as \"SERVICE_CATEGORY_1\" ,\n                    cast(\"SERVICE_CATEGORY_2\" as character varying(29)) as \"SERVICE_CATEGORY_2\" ,\n                    cast(\"SERVICE_CATEGORY_3\" as character varying(29)) as \"SERVICE_CATEGORY_3\" ,\n                    cast(\"SOURCE_MODEL_NAME\" as character varying(59)) as \"SOURCE_MODEL_NAME\" ,\n                    cast(\"TUVA_LAST_RUN\" as character varying(32)) as \"TUVA_LAST_RUN\" ,\n                    cast(null as NUMBER(38,0)) as \"CLAIM_LINE_NUMBER\" \n\n            from tuva.claims_preprocessing._int_acute_inpatient_institutional_med_surg\n\n            \n        )\n\n        union all\n        \n\n        (\n            select\n                cast('tuva.claims_preprocessing._int_inpatient_substance_use_institutional' as TEXT) as _dbt_source_relation,\n\n                \n                    cast(\"CLAIM_ID\" as character varying(16777216)) as \"CLAIM_ID\" ,\n                    cast(\"DATA_SOURCE\" as character varying(16777216)) as \"DATA_SOURCE\" ,\n                    cast(\"SERVICE_CATEGORY_1\" as character varying(10)) as \"SERVICE_CATEGORY_1\" ,\n                    cast(\"SERVICE_CATEGORY_2\" as character varying(29)) as \"SERVICE_CATEGORY_2\" ,\n                    cast(\"SERVICE_CATEGORY_3\" as character varying(29)) as \"SERVICE_CATEGORY_3\" ,\n                    cast(\"SOURCE_MODEL_NAME\" as character varying(59)) as \"SOURCE_MODEL_NAME\" ,\n                    cast(\"TUVA_LAST_RUN\" as character varying(32)) as \"TUVA_LAST_RUN\" ,\n                    cast(null as NUMBER(38,0)) as \"CLAIM_LINE_NUMBER\" \n\n            from tuva.claims_preprocessing._int_inpatient_substance_use_institutional\n\n            \n        )\n\n        union all\n        \n\n        (\n            select\n                cast('tuva.claims_preprocessing._int_ambulatory_surgery_institutional' as TEXT) as _dbt_source_relation,\n\n                \n                    cast(\"CLAIM_ID\" as character varying(16777216)) as \"CLAIM_ID\" ,\n                    cast(\"DATA_SOURCE\" as character varying(16777216)) as \"DATA_SOURCE\" ,\n                    cast(\"SERVICE_CATEGORY_1\" as character varying(10)) as \"SERVICE_CATEGORY_1\" ,\n                    cast(\"SERVICE_CATEGORY_2\" as character varying(29)) as \"SERVICE_CATEGORY_2\" ,\n                    cast(\"SERVICE_CATEGORY_3\" as character varying(29)) as \"SERVICE_CATEGORY_3\" ,\n                    cast(\"SOURCE_MODEL_NAME\" as character varying(59)) as \"SOURCE_MODEL_NAME\" ,\n                    cast(\"TUVA_LAST_RUN\" as character varying(32)) as \"TUVA_LAST_RUN\" ,\n                    cast(null as NUMBER(38,0)) as \"CLAIM_LINE_NUMBER\" \n\n            from tuva.claims_preprocessing._int_ambulatory_surgery_institutional\n\n            \n        )\n\n        union all\n        \n\n        (\n            select\n                cast('tuva.claims_preprocessing._int_dialysis_institutional' as TEXT) as _dbt_source_relation,\n\n                \n                    cast(\"CLAIM_ID\" as character varying(16777216)) as \"CLAIM_ID\" ,\n                    cast(\"DATA_SOURCE\" as character varying(16777216)) as \"DATA_SOURCE\" ,\n                    cast(\"SERVICE_CATEGORY_1\" as character varying(10)) as \"SERVICE_CATEGORY_1\" ,\n                    cast(\"SERVICE_CATEGORY_2\" as character varying(29)) as \"SERVICE_CATEGORY_2\" ,\n                    cast(\"SERVICE_CATEGORY_3\" as character varying(29)) as \"SERVICE_CATEGORY_3\" ,\n                    cast(\"SOURCE_MODEL_NAME\" as character varying(59)) as \"SOURCE_MODEL_NAME\" ,\n                    cast(\"TUVA_LAST_RUN\" as character varying(32)) as \"TUVA_LAST_RUN\" ,\n                    cast(null as NUMBER(38,0)) as \"CLAIM_LINE_NUMBER\" \n\n            from tuva.claims_preprocessing._int_dialysis_institutional\n\n            \n        )\n\n        union all\n        \n\n        (\n            select\n                cast('tuva.claims_preprocessing._int_emergency_department_institutional' as TEXT) as _dbt_source_relation,\n\n                \n                    cast(\"CLAIM_ID\" as character varying(16777216)) as \"CLAIM_ID\" ,\n                    cast(\"DATA_SOURCE\" as character varying(16777216)) as \"DATA_SOURCE\" ,\n                    cast(\"SERVICE_CATEGORY_1\" as character varying(10)) as \"SERVICE_CATEGORY_1\" ,\n                    cast(\"SERVICE_CATEGORY_2\" as character varying(29)) as \"SERVICE_CATEGORY_2\" ,\n                    cast(\"SERVICE_CATEGORY_3\" as character varying(29)) as \"SERVICE_CATEGORY_3\" ,\n                    cast(\"SOURCE_MODEL_NAME\" as character varying(59)) as \"SOURCE_MODEL_NAME\" ,\n                    cast(\"TUVA_LAST_RUN\" as character varying(32)) as \"TUVA_LAST_RUN\" ,\n                    cast(null as NUMBER(38,0)) as \"CLAIM_LINE_NUMBER\" \n\n            from tuva.claims_preprocessing._int_emergency_department_institutional\n\n            \n        )\n\n        union all\n        \n\n        (\n            select\n                cast('tuva.claims_preprocessing._int_home_health_institutional' as TEXT) as _dbt_source_relation,\n\n                \n                    cast(\"CLAIM_ID\" as character varying(16777216)) as \"CLAIM_ID\" ,\n                    cast(\"DATA_SOURCE\" as character varying(16777216)) as \"DATA_SOURCE\" ,\n                    cast(\"SERVICE_CATEGORY_1\" as character varying(10)) as \"SERVICE_CATEGORY_1\" ,\n                    cast(\"SERVICE_CATEGORY_2\" as character varying(29)) as \"SERVICE_CATEGORY_2\" ,\n                    cast(\"SERVICE_CATEGORY_3\" as character varying(29)) as \"SERVICE_CATEGORY_3\" ,\n                    cast(\"SOURCE_MODEL_NAME\" as character varying(59)) as \"SOURCE_MODEL_NAME\" ,\n                    cast(\"TUVA_LAST_RUN\" as character varying(32)) as \"TUVA_LAST_RUN\" ,\n                    cast(null as NUMBER(38,0)) as \"CLAIM_LINE_NUMBER\" \n\n            from tuva.claims_preprocessing._int_home_health_institutional\n\n            \n        )\n\n        union all\n        \n\n        (\n            select\n                cast('tuva.claims_preprocessing._int_inpatient_hospice_institutional' as TEXT) as _dbt_source_relation,\n\n                \n                    cast(\"CLAIM_ID\" as character varying(16777216)) as \"CLAIM_ID\" ,\n                    cast(\"DATA_SOURCE\" as character varying(16777216)) as \"DATA_SOURCE\" ,\n                    cast(\"SERVICE_CATEGORY_1\" as character varying(10)) as \"SERVICE_CATEGORY_1\" ,\n                    cast(\"SERVICE_CATEGORY_2\" as character varying(29)) as \"SERVICE_CATEGORY_2\" ,\n                    cast(\"SERVICE_CATEGORY_3\" as character varying(29)) as \"SERVICE_CATEGORY_3\" ,\n                    cast(\"SOURCE_MODEL_NAME\" as character varying(59)) as \"SOURCE_MODEL_NAME\" ,\n                    cast(\"TUVA_LAST_RUN\" as character varying(32)) as \"TUVA_LAST_RUN\" ,\n                    cast(null as NUMBER(38,0)) as \"CLAIM_LINE_NUMBER\" \n\n            from tuva.claims_preprocessing._int_inpatient_hospice_institutional\n\n            \n        )\n\n        union all\n        \n\n        (\n            select\n                cast('tuva.claims_preprocessing._int_outpatient_hospice_institutional' as TEXT) as _dbt_source_relation,\n\n                \n                    cast(\"CLAIM_ID\" as character varying(16777216)) as \"CLAIM_ID\" ,\n                    cast(\"DATA_SOURCE\" as character varying(16777216)) as \"DATA_SOURCE\" ,\n                    cast(\"SERVICE_CATEGORY_1\" as character varying(10)) as \"SERVICE_CATEGORY_1\" ,\n                    cast(\"SERVICE_CATEGORY_2\" as character varying(29)) as \"SERVICE_CATEGORY_2\" ,\n                    cast(\"SERVICE_CATEGORY_3\" as character varying(29)) as \"SERVICE_CATEGORY_3\" ,\n                    cast(\"SOURCE_MODEL_NAME\" as character varying(59)) as \"SOURCE_MODEL_NAME\" ,\n                    cast(\"TUVA_LAST_RUN\" as character varying(32)) as \"TUVA_LAST_RUN\" ,\n                    cast(null as NUMBER(38,0)) as \"CLAIM_LINE_NUMBER\" \n\n            from tuva.claims_preprocessing._int_outpatient_hospice_institutional\n\n            \n        )\n\n        union all\n        \n\n        (\n            select\n                cast('tuva.claims_preprocessing._int_outpatient_hospital_or_clinic_institutional' as TEXT) as _dbt_source_relation,\n\n                \n                    cast(\"CLAIM_ID\" as character varying(16777216)) as \"CLAIM_ID\" ,\n                    cast(\"DATA_SOURCE\" as character varying(16777216)) as \"DATA_SOURCE\" ,\n                    cast(\"SERVICE_CATEGORY_1\" as character varying(10)) as \"SERVICE_CATEGORY_1\" ,\n                    cast(\"SERVICE_CATEGORY_2\" as character varying(29)) as \"SERVICE_CATEGORY_2\" ,\n                    cast(\"SERVICE_CATEGORY_3\" as character varying(29)) as \"SERVICE_CATEGORY_3\" ,\n                    cast(\"SOURCE_MODEL_NAME\" as character varying(59)) as \"SOURCE_MODEL_NAME\" ,\n                    cast(\"TUVA_LAST_RUN\" as character varying(32)) as \"TUVA_LAST_RUN\" ,\n                    cast(null as NUMBER(38,0)) as \"CLAIM_LINE_NUMBER\" \n\n            from tuva.claims_preprocessing._int_outpatient_hospital_or_clinic_institutional\n\n            \n        )\n\n        union all\n        \n\n        (\n            select\n                cast('tuva.claims_preprocessing.service_category__outpatient_physical_therapy_institutional' as TEXT) as _dbt_source_relation,\n\n                \n                    cast(\"CLAIM_ID\" as character varying(16777216)) as \"CLAIM_ID\" ,\n                    cast(\"DATA_SOURCE\" as character varying(16777216)) as \"DATA_SOURCE\" ,\n                    cast(\"SERVICE_CATEGORY_1\" as character varying(10)) as \"SERVICE_CATEGORY_1\" ,\n                    cast(\"SERVICE_CATEGORY_2\" as character varying(29)) as \"SERVICE_CATEGORY_2\" ,\n                    cast(\"SERVICE_CATEGORY_3\" as character varying(29)) as \"SERVICE_CATEGORY_3\" ,\n                    cast(\"SOURCE_MODEL_NAME\" as character varying(59)) as \"SOURCE_MODEL_NAME\" ,\n                    cast(\"TUVA_LAST_RUN\" as character varying(32)) as \"TUVA_LAST_RUN\" ,\n                    cast(\"CLAIM_LINE_NUMBER\" as NUMBER(38,0)) as \"CLAIM_LINE_NUMBER\" \n\n            from tuva.claims_preprocessing.service_category__outpatient_physical_therapy_institutional\n\n            \n        )\n\n        union all\n        \n\n        (\n            select\n                cast('tuva.claims_preprocessing._int_outpatient_psychiatric_institutional' as TEXT) as _dbt_source_relation,\n\n                \n                    cast(\"CLAIM_ID\" as character varying(16777216)) as \"CLAIM_ID\" ,\n                    cast(\"DATA_SOURCE\" as character varying(16777216)) as \"DATA_SOURCE\" ,\n                    cast(\"SERVICE_CATEGORY_1\" as character varying(10)) as \"SERVICE_CATEGORY_1\" ,\n                    cast(\"SERVICE_CATEGORY_2\" as character varying(29)) as \"SERVICE_CATEGORY_2\" ,\n                    cast(\"SERVICE_CATEGORY_3\" as character varying(29)) as \"SERVICE_CATEGORY_3\" ,\n                    cast(\"SOURCE_MODEL_NAME\" as character varying(59)) as \"SOURCE_MODEL_NAME\" ,\n                    cast(\"TUVA_LAST_RUN\" as character varying(32)) as \"TUVA_LAST_RUN\" ,\n                    cast(null as NUMBER(38,0)) as \"CLAIM_LINE_NUMBER\" \n\n            from tuva.claims_preprocessing._int_outpatient_psychiatric_institutional\n\n            \n        )\n\n        union all\n        \n\n        (\n            select\n                cast('tuva.claims_preprocessing._int_inpatient_skilled_nursing_institutional' as TEXT) as _dbt_source_relation,\n\n                \n                    cast(\"CLAIM_ID\" as character varying(16777216)) as \"CLAIM_ID\" ,\n                    cast(\"DATA_SOURCE\" as character varying(16777216)) as \"DATA_SOURCE\" ,\n                    cast(\"SERVICE_CATEGORY_1\" as character varying(10)) as \"SERVICE_CATEGORY_1\" ,\n                    cast(\"SERVICE_CATEGORY_2\" as character varying(29)) as \"SERVICE_CATEGORY_2\" ,\n                    cast(\"SERVICE_CATEGORY_3\" as character varying(29)) as \"SERVICE_CATEGORY_3\" ,\n                    cast(\"SOURCE_MODEL_NAME\" as character varying(59)) as \"SOURCE_MODEL_NAME\" ,\n                    cast(\"TUVA_LAST_RUN\" as character varying(32)) as \"TUVA_LAST_RUN\" ,\n                    cast(null as NUMBER(38,0)) as \"CLAIM_LINE_NUMBER\" \n\n            from tuva.claims_preprocessing._int_inpatient_skilled_nursing_institutional\n\n            \n        )\n\n        union all\n        \n\n        (\n            select\n                cast('tuva.claims_preprocessing._int_urgent_care_institutional' as TEXT) as _dbt_source_relation,\n\n                \n                    cast(\"CLAIM_ID\" as character varying(16777216)) as \"CLAIM_ID\" ,\n                    cast(\"DATA_SOURCE\" as character varying(16777216)) as \"DATA_SOURCE\" ,\n                    cast(\"SERVICE_CATEGORY_1\" as character varying(10)) as \"SERVICE_CATEGORY_1\" ,\n                    cast(\"SERVICE_CATEGORY_2\" as character varying(29)) as \"SERVICE_CATEGORY_2\" ,\n                    cast(\"SERVICE_CATEGORY_3\" as character varying(29)) as \"SERVICE_CATEGORY_3\" ,\n                    cast(\"SOURCE_MODEL_NAME\" as character varying(59)) as \"SOURCE_MODEL_NAME\" ,\n                    cast(\"TUVA_LAST_RUN\" as character varying(32)) as \"TUVA_LAST_RUN\" ,\n                    cast(null as NUMBER(38,0)) as \"CLAIM_LINE_NUMBER\" \n\n            from tuva.claims_preprocessing._int_urgent_care_institutional\n\n            \n        )\n\n        union all\n        \n\n        (\n            select\n                cast('tuva.claims_preprocessing._int_inpatient_psychiatric_institutional' as TEXT) as _dbt_source_relation,\n\n                \n                    cast(\"CLAIM_ID\" as character varying(16777216)) as \"CLAIM_ID\" ,\n                    cast(\"DATA_SOURCE\" as character varying(16777216)) as \"DATA_SOURCE\" ,\n                    cast(\"SERVICE_CATEGORY_1\" as character varying(10)) as \"SERVICE_CATEGORY_1\" ,\n                    cast(\"SERVICE_CATEGORY_2\" as character varying(29)) as \"SERVICE_CATEGORY_2\" ,\n                    cast(\"SERVICE_CATEGORY_3\" as character varying(29)) as \"SERVICE_CATEGORY_3\" ,\n                    cast(\"SOURCE_MODEL_NAME\" as character varying(59)) as \"SOURCE_MODEL_NAME\" ,\n                    cast(\"TUVA_LAST_RUN\" as character varying(32)) as \"TUVA_LAST_RUN\" ,\n                    cast(null as NUMBER(38,0)) as \"CLAIM_LINE_NUMBER\" \n\n            from tuva.claims_preprocessing._int_inpatient_psychiatric_institutional\n\n            \n        )\n\n        union all\n        \n\n        (\n            select\n                cast('tuva.claims_preprocessing._int_inpatient_rehab_institutional' as TEXT) as _dbt_source_relation,\n\n                \n                    cast(\"CLAIM_ID\" as character varying(16777216)) as \"CLAIM_ID\" ,\n                    cast(\"DATA_SOURCE\" as character varying(16777216)) as \"DATA_SOURCE\" ,\n                    cast(\"SERVICE_CATEGORY_1\" as character varying(10)) as \"SERVICE_CATEGORY_1\" ,\n                    cast(\"SERVICE_CATEGORY_2\" as character varying(29)) as \"SERVICE_CATEGORY_2\" ,\n                    cast(\"SERVICE_CATEGORY_3\" as character varying(29)) as \"SERVICE_CATEGORY_3\" ,\n                    cast(\"SOURCE_MODEL_NAME\" as character varying(59)) as \"SOURCE_MODEL_NAME\" ,\n                    cast(\"TUVA_LAST_RUN\" as character varying(32)) as \"TUVA_LAST_RUN\" ,\n                    cast(null as NUMBER(38,0)) as \"CLAIM_LINE_NUMBER\" \n\n            from tuva.claims_preprocessing._int_inpatient_rehab_institutional\n\n            \n        )\n\n        union all\n        \n\n        (\n            select\n                cast('tuva.claims_preprocessing.service_category__outpatient_rehab_institutional' as TEXT) as _dbt_source_relation,\n\n                \n                    cast(\"CLAIM_ID\" as character varying(16777216)) as \"CLAIM_ID\" ,\n                    cast(\"DATA_SOURCE\" as character varying(16777216)) as \"DATA_SOURCE\" ,\n                    cast(\"SERVICE_CATEGORY_1\" as character varying(10)) as \"SERVICE_CATEGORY_1\" ,\n                    cast(\"SERVICE_CATEGORY_2\" as character varying(29)) as \"SERVICE_CATEGORY_2\" ,\n                    cast(\"SERVICE_CATEGORY_3\" as character varying(29)) as \"SERVICE_CATEGORY_3\" ,\n                    cast(\"SOURCE_MODEL_NAME\" as character varying(59)) as \"SOURCE_MODEL_NAME\" ,\n                    cast(\"TUVA_LAST_RUN\" as character varying(32)) as \"TUVA_LAST_RUN\" ,\n                    cast(null as NUMBER(38,0)) as \"CLAIM_LINE_NUMBER\" \n\n            from tuva.claims_preprocessing.service_category__outpatient_rehab_institutional\n\n            \n        )\n\n        union all\n        \n\n        (\n            select\n                cast('tuva.claims_preprocessing.service_category__outpatient_substance_use_institutional' as TEXT) as _dbt_source_relation,\n\n                \n                    cast(\"CLAIM_ID\" as character varying(16777216)) as \"CLAIM_ID\" ,\n                    cast(\"DATA_SOURCE\" as character varying(16777216)) as \"DATA_SOURCE\" ,\n                    cast(\"SERVICE_CATEGORY_1\" as character varying(10)) as \"SERVICE_CATEGORY_1\" ,\n                    cast(\"SERVICE_CATEGORY_2\" as character varying(29)) as \"SERVICE_CATEGORY_2\" ,\n                    cast(\"SERVICE_CATEGORY_3\" as character varying(29)) as \"SERVICE_CATEGORY_3\" ,\n                    cast(\"SOURCE_MODEL_NAME\" as character varying(59)) as \"SOURCE_MODEL_NAME\" ,\n                    cast(\"TUVA_LAST_RUN\" as character varying(32)) as \"TUVA_LAST_RUN\" ,\n                    cast(null as NUMBER(38,0)) as \"CLAIM_LINE_NUMBER\" \n\n            from tuva.claims_preprocessing.service_category__outpatient_substance_use_institutional\n\n            \n        )\n\n        union all\n        \n\n        (\n            select\n                cast('tuva.claims_preprocessing.service_category__outpatient_skilled_nursing_institutional' as TEXT) as _dbt_source_relation,\n\n                \n                    cast(\"CLAIM_ID\" as character varying(16777216)) as \"CLAIM_ID\" ,\n                    cast(\"DATA_SOURCE\" as character varying(16777216)) as \"DATA_SOURCE\" ,\n                    cast(\"SERVICE_CATEGORY_1\" as character varying(10)) as \"SERVICE_CATEGORY_1\" ,\n                    cast(\"SERVICE_CATEGORY_2\" as character varying(29)) as \"SERVICE_CATEGORY_2\" ,\n                    cast(\"SERVICE_CATEGORY_3\" as character varying(29)) as \"SERVICE_CATEGORY_3\" ,\n                    cast(\"SOURCE_MODEL_NAME\" as character varying(59)) as \"SOURCE_MODEL_NAME\" ,\n                    cast(\"TUVA_LAST_RUN\" as character varying(32)) as \"TUVA_LAST_RUN\" ,\n                    cast(null as NUMBER(38,0)) as \"CLAIM_LINE_NUMBER\" \n\n            from tuva.claims_preprocessing.service_category__outpatient_skilled_nursing_institutional\n\n            \n        )\n\n        union all\n        \n\n        (\n            select\n                cast('tuva.claims_preprocessing.service_category__outpatient_surgery_institutional' as TEXT) as _dbt_source_relation,\n\n                \n                    cast(\"CLAIM_ID\" as character varying(16777216)) as \"CLAIM_ID\" ,\n                    cast(\"DATA_SOURCE\" as character varying(16777216)) as \"DATA_SOURCE\" ,\n                    cast(\"SERVICE_CATEGORY_1\" as character varying(10)) as \"SERVICE_CATEGORY_1\" ,\n                    cast(\"SERVICE_CATEGORY_2\" as character varying(29)) as \"SERVICE_CATEGORY_2\" ,\n                    cast(\"SERVICE_CATEGORY_3\" as character varying(29)) as \"SERVICE_CATEGORY_3\" ,\n                    cast(\"SOURCE_MODEL_NAME\" as character varying(59)) as \"SOURCE_MODEL_NAME\" ,\n                    cast(\"TUVA_LAST_RUN\" as character varying(32)) as \"TUVA_LAST_RUN\" ,\n                    cast(null as NUMBER(38,0)) as \"CLAIM_LINE_NUMBER\" \n\n            from tuva.claims_preprocessing.service_category__outpatient_surgery_institutional\n\n            \n        )\n\n        \n)\n\nselect\n  h.claim_id\n  , h.data_source\n  , h.service_category_1\n  , h.service_category_2\n  , h.service_category_3\n  , h.source_model_name\nfrom combine_header_models as h", "relation_name": "tuva.claims_preprocessing._int_combined_institutional_header_level", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:22.360873Z", "completed_at": "2025-06-03T19:50:26.849721Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:26.850232Z", "completed_at": "2025-06-03T19:50:26.850245Z"}], "thread_id": "Thread-3", "execution_time": 4.494800090789795, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.service_category__combined_professional", "compiled": true, "compiled_code": "\n\nwith combined_professional_services as (\n  \n\n        (\n            select\n                cast('tuva.claims_preprocessing._int_acute_inpatient_professional' as TEXT) as _dbt_source_relation,\n\n                \n                    cast(\"CLAIM_ID\" as character varying(16777216)) as \"CLAIM_ID\" ,\n                    cast(\"CLAIM_LINE_NUMBER\" as NUMBER(38,0)) as \"CLAIM_LINE_NUMBER\" ,\n                    cast(\"DATA_SOURCE\" as character varying(16777216)) as \"DATA_SOURCE\" ,\n                    cast(\"CLAIM_LINE_ID\" as character varying(16777216)) as \"CLAIM_LINE_ID\" ,\n                    cast(\"SERVICE_CATEGORY_1\" as character varying(12)) as \"SERVICE_CATEGORY_1\" ,\n                    cast(\"SERVICE_CATEGORY_2\" as character varying(16777216)) as \"SERVICE_CATEGORY_2\" ,\n                    cast(\"SERVICE_CATEGORY_3\" as character varying(16777216)) as \"SERVICE_CATEGORY_3\" ,\n                    cast(\"SOURCE_MODEL_NAME\" as character varying(60)) as \"SOURCE_MODEL_NAME\" ,\n                    cast(\"TUVA_LAST_RUN\" as character varying(32)) as \"TUVA_LAST_RUN\" \n\n            from tuva.claims_preprocessing._int_acute_inpatient_professional\n\n            \n        )\n\n        union all\n        \n\n        (\n            select\n                cast('tuva.claims_preprocessing._int_ambulatory_surgery_professional' as TEXT) as _dbt_source_relation,\n\n                \n                    cast(\"CLAIM_ID\" as character varying(16777216)) as \"CLAIM_ID\" ,\n                    cast(\"CLAIM_LINE_NUMBER\" as NUMBER(38,0)) as \"CLAIM_LINE_NUMBER\" ,\n                    cast(\"DATA_SOURCE\" as character varying(16777216)) as \"DATA_SOURCE\" ,\n                    cast(\"CLAIM_LINE_ID\" as character varying(16777216)) as \"CLAIM_LINE_ID\" ,\n                    cast(\"SERVICE_CATEGORY_1\" as character varying(12)) as \"SERVICE_CATEGORY_1\" ,\n                    cast(\"SERVICE_CATEGORY_2\" as character varying(16777216)) as \"SERVICE_CATEGORY_2\" ,\n                    cast(\"SERVICE_CATEGORY_3\" as character varying(16777216)) as \"SERVICE_CATEGORY_3\" ,\n                    cast(\"SOURCE_MODEL_NAME\" as character varying(60)) as \"SOURCE_MODEL_NAME\" ,\n                    cast(\"TUVA_LAST_RUN\" as character varying(32)) as \"TUVA_LAST_RUN\" \n\n            from tuva.claims_preprocessing._int_ambulatory_surgery_professional\n\n            \n        )\n\n        union all\n        \n\n        (\n            select\n                cast('tuva.claims_preprocessing._int_dialysis_professional' as TEXT) as _dbt_source_relation,\n\n                \n                    cast(\"CLAIM_ID\" as character varying(16777216)) as \"CLAIM_ID\" ,\n                    cast(\"CLAIM_LINE_NUMBER\" as NUMBER(38,0)) as \"CLAIM_LINE_NUMBER\" ,\n                    cast(\"DATA_SOURCE\" as character varying(16777216)) as \"DATA_SOURCE\" ,\n                    cast(\"CLAIM_LINE_ID\" as character varying(16777216)) as \"CLAIM_LINE_ID\" ,\n                    cast(\"SERVICE_CATEGORY_1\" as character varying(12)) as \"SERVICE_CATEGORY_1\" ,\n                    cast(\"SERVICE_CATEGORY_2\" as character varying(16777216)) as \"SERVICE_CATEGORY_2\" ,\n                    cast(\"SERVICE_CATEGORY_3\" as character varying(16777216)) as \"SERVICE_CATEGORY_3\" ,\n                    cast(\"SOURCE_MODEL_NAME\" as character varying(60)) as \"SOURCE_MODEL_NAME\" ,\n                    cast(\"TUVA_LAST_RUN\" as character varying(32)) as \"TUVA_LAST_RUN\" \n\n            from tuva.claims_preprocessing._int_dialysis_professional\n\n            \n        )\n\n        union all\n        \n\n        (\n            select\n                cast('tuva.claims_preprocessing._int_emergency_department_professional' as TEXT) as _dbt_source_relation,\n\n                \n                    cast(\"CLAIM_ID\" as character varying(16777216)) as \"CLAIM_ID\" ,\n                    cast(\"CLAIM_LINE_NUMBER\" as NUMBER(38,0)) as \"CLAIM_LINE_NUMBER\" ,\n                    cast(\"DATA_SOURCE\" as character varying(16777216)) as \"DATA_SOURCE\" ,\n                    cast(\"CLAIM_LINE_ID\" as character varying(16777216)) as \"CLAIM_LINE_ID\" ,\n                    cast(\"SERVICE_CATEGORY_1\" as character varying(12)) as \"SERVICE_CATEGORY_1\" ,\n                    cast(\"SERVICE_CATEGORY_2\" as character varying(16777216)) as \"SERVICE_CATEGORY_2\" ,\n                    cast(\"SERVICE_CATEGORY_3\" as character varying(16777216)) as \"SERVICE_CATEGORY_3\" ,\n                    cast(\"SOURCE_MODEL_NAME\" as character varying(60)) as \"SOURCE_MODEL_NAME\" ,\n                    cast(\"TUVA_LAST_RUN\" as character varying(32)) as \"TUVA_LAST_RUN\" \n\n            from tuva.claims_preprocessing._int_emergency_department_professional\n\n            \n        )\n\n        union all\n        \n\n        (\n            select\n                cast('tuva.claims_preprocessing._int_home_health_professional' as TEXT) as _dbt_source_relation,\n\n                \n                    cast(\"CLAIM_ID\" as character varying(16777216)) as \"CLAIM_ID\" ,\n                    cast(\"CLAIM_LINE_NUMBER\" as NUMBER(38,0)) as \"CLAIM_LINE_NUMBER\" ,\n                    cast(\"DATA_SOURCE\" as character varying(16777216)) as \"DATA_SOURCE\" ,\n                    cast(\"CLAIM_LINE_ID\" as character varying(16777216)) as \"CLAIM_LINE_ID\" ,\n                    cast(\"SERVICE_CATEGORY_1\" as character varying(12)) as \"SERVICE_CATEGORY_1\" ,\n                    cast(\"SERVICE_CATEGORY_2\" as character varying(16777216)) as \"SERVICE_CATEGORY_2\" ,\n                    cast(\"SERVICE_CATEGORY_3\" as character varying(16777216)) as \"SERVICE_CATEGORY_3\" ,\n                    cast(\"SOURCE_MODEL_NAME\" as character varying(60)) as \"SOURCE_MODEL_NAME\" ,\n                    cast(\"TUVA_LAST_RUN\" as character varying(32)) as \"TUVA_LAST_RUN\" \n\n            from tuva.claims_preprocessing._int_home_health_professional\n\n            \n        )\n\n        union all\n        \n\n        (\n            select\n                cast('tuva.claims_preprocessing._int_inpatient_hospice_professional' as TEXT) as _dbt_source_relation,\n\n                \n                    cast(\"CLAIM_ID\" as character varying(16777216)) as \"CLAIM_ID\" ,\n                    cast(\"CLAIM_LINE_NUMBER\" as NUMBER(38,0)) as \"CLAIM_LINE_NUMBER\" ,\n                    cast(\"DATA_SOURCE\" as character varying(16777216)) as \"DATA_SOURCE\" ,\n                    cast(\"CLAIM_LINE_ID\" as character varying(16777216)) as \"CLAIM_LINE_ID\" ,\n                    cast(\"SERVICE_CATEGORY_1\" as character varying(12)) as \"SERVICE_CATEGORY_1\" ,\n                    cast(\"SERVICE_CATEGORY_2\" as character varying(16777216)) as \"SERVICE_CATEGORY_2\" ,\n                    cast(\"SERVICE_CATEGORY_3\" as character varying(16777216)) as \"SERVICE_CATEGORY_3\" ,\n                    cast(\"SOURCE_MODEL_NAME\" as character varying(60)) as \"SOURCE_MODEL_NAME\" ,\n                    cast(\"TUVA_LAST_RUN\" as character varying(32)) as \"TUVA_LAST_RUN\" \n\n            from tuva.claims_preprocessing._int_inpatient_hospice_professional\n\n            \n        )\n\n        union all\n        \n\n        (\n            select\n                cast('tuva.claims_preprocessing._int_inpatient_psychiatric_professional' as TEXT) as _dbt_source_relation,\n\n                \n                    cast(\"CLAIM_ID\" as character varying(16777216)) as \"CLAIM_ID\" ,\n                    cast(\"CLAIM_LINE_NUMBER\" as NUMBER(38,0)) as \"CLAIM_LINE_NUMBER\" ,\n                    cast(\"DATA_SOURCE\" as character varying(16777216)) as \"DATA_SOURCE\" ,\n                    cast(\"CLAIM_LINE_ID\" as character varying(16777216)) as \"CLAIM_LINE_ID\" ,\n                    cast(\"SERVICE_CATEGORY_1\" as character varying(12)) as \"SERVICE_CATEGORY_1\" ,\n                    cast(\"SERVICE_CATEGORY_2\" as character varying(16777216)) as \"SERVICE_CATEGORY_2\" ,\n                    cast(\"SERVICE_CATEGORY_3\" as character varying(16777216)) as \"SERVICE_CATEGORY_3\" ,\n                    cast(\"SOURCE_MODEL_NAME\" as character varying(60)) as \"SOURCE_MODEL_NAME\" ,\n                    cast(\"TUVA_LAST_RUN\" as character varying(32)) as \"TUVA_LAST_RUN\" \n\n            from tuva.claims_preprocessing._int_inpatient_psychiatric_professional\n\n            \n        )\n\n        union all\n        \n\n        (\n            select\n                cast('tuva.claims_preprocessing._int_inpatient_rehab_professional' as TEXT) as _dbt_source_relation,\n\n                \n                    cast(\"CLAIM_ID\" as character varying(16777216)) as \"CLAIM_ID\" ,\n                    cast(\"CLAIM_LINE_NUMBER\" as NUMBER(38,0)) as \"CLAIM_LINE_NUMBER\" ,\n                    cast(\"DATA_SOURCE\" as character varying(16777216)) as \"DATA_SOURCE\" ,\n                    cast(\"CLAIM_LINE_ID\" as character varying(16777216)) as \"CLAIM_LINE_ID\" ,\n                    cast(\"SERVICE_CATEGORY_1\" as character varying(12)) as \"SERVICE_CATEGORY_1\" ,\n                    cast(\"SERVICE_CATEGORY_2\" as character varying(16777216)) as \"SERVICE_CATEGORY_2\" ,\n                    cast(\"SERVICE_CATEGORY_3\" as character varying(16777216)) as \"SERVICE_CATEGORY_3\" ,\n                    cast(\"SOURCE_MODEL_NAME\" as character varying(60)) as \"SOURCE_MODEL_NAME\" ,\n                    cast(\"TUVA_LAST_RUN\" as character varying(32)) as \"TUVA_LAST_RUN\" \n\n            from tuva.claims_preprocessing._int_inpatient_rehab_professional\n\n            \n        )\n\n        union all\n        \n\n        (\n            select\n                cast('tuva.claims_preprocessing.service_category__inpatient_substance_use_professional' as TEXT) as _dbt_source_relation,\n\n                \n                    cast(\"CLAIM_ID\" as character varying(16777216)) as \"CLAIM_ID\" ,\n                    cast(\"CLAIM_LINE_NUMBER\" as NUMBER(38,0)) as \"CLAIM_LINE_NUMBER\" ,\n                    cast(\"DATA_SOURCE\" as character varying(16777216)) as \"DATA_SOURCE\" ,\n                    cast(\"CLAIM_LINE_ID\" as character varying(16777216)) as \"CLAIM_LINE_ID\" ,\n                    cast(\"SERVICE_CATEGORY_1\" as character varying(12)) as \"SERVICE_CATEGORY_1\" ,\n                    cast(\"SERVICE_CATEGORY_2\" as character varying(16777216)) as \"SERVICE_CATEGORY_2\" ,\n                    cast(\"SERVICE_CATEGORY_3\" as character varying(16777216)) as \"SERVICE_CATEGORY_3\" ,\n                    cast(\"SOURCE_MODEL_NAME\" as character varying(60)) as \"SOURCE_MODEL_NAME\" ,\n                    cast(\"TUVA_LAST_RUN\" as character varying(32)) as \"TUVA_LAST_RUN\" \n\n            from tuva.claims_preprocessing.service_category__inpatient_substance_use_professional\n\n            \n        )\n\n        union all\n        \n\n        (\n            select\n                cast('tuva.claims_preprocessing._int_lab_professional' as TEXT) as _dbt_source_relation,\n\n                \n                    cast(\"CLAIM_ID\" as character varying(16777216)) as \"CLAIM_ID\" ,\n                    cast(\"CLAIM_LINE_NUMBER\" as NUMBER(38,0)) as \"CLAIM_LINE_NUMBER\" ,\n                    cast(\"DATA_SOURCE\" as character varying(16777216)) as \"DATA_SOURCE\" ,\n                    cast(\"CLAIM_LINE_ID\" as character varying(16777216)) as \"CLAIM_LINE_ID\" ,\n                    cast(\"SERVICE_CATEGORY_1\" as character varying(12)) as \"SERVICE_CATEGORY_1\" ,\n                    cast(\"SERVICE_CATEGORY_2\" as character varying(16777216)) as \"SERVICE_CATEGORY_2\" ,\n                    cast(\"SERVICE_CATEGORY_3\" as character varying(16777216)) as \"SERVICE_CATEGORY_3\" ,\n                    cast(\"SOURCE_MODEL_NAME\" as character varying(60)) as \"SOURCE_MODEL_NAME\" ,\n                    cast(\"TUVA_LAST_RUN\" as character varying(32)) as \"TUVA_LAST_RUN\" \n\n            from tuva.claims_preprocessing._int_lab_professional\n\n            \n        )\n\n        union all\n        \n\n        (\n            select\n                cast('tuva.claims_preprocessing.service_category__office_based_other_professional' as TEXT) as _dbt_source_relation,\n\n                \n                    cast(\"CLAIM_ID\" as character varying(16777216)) as \"CLAIM_ID\" ,\n                    cast(\"CLAIM_LINE_NUMBER\" as NUMBER(38,0)) as \"CLAIM_LINE_NUMBER\" ,\n                    cast(\"DATA_SOURCE\" as character varying(16777216)) as \"DATA_SOURCE\" ,\n                    cast(\"CLAIM_LINE_ID\" as character varying(16777216)) as \"CLAIM_LINE_ID\" ,\n                    cast(\"SERVICE_CATEGORY_1\" as character varying(12)) as \"SERVICE_CATEGORY_1\" ,\n                    cast(\"SERVICE_CATEGORY_2\" as character varying(16777216)) as \"SERVICE_CATEGORY_2\" ,\n                    cast(\"SERVICE_CATEGORY_3\" as character varying(16777216)) as \"SERVICE_CATEGORY_3\" ,\n                    cast(\"SOURCE_MODEL_NAME\" as character varying(60)) as \"SOURCE_MODEL_NAME\" ,\n                    cast(\"TUVA_LAST_RUN\" as character varying(32)) as \"TUVA_LAST_RUN\" \n\n            from tuva.claims_preprocessing.service_category__office_based_other_professional\n\n            \n        )\n\n        union all\n        \n\n        (\n            select\n                cast('tuva.claims_preprocessing.service_category__office_based_physical_therapy_professional' as TEXT) as _dbt_source_relation,\n\n                \n                    cast(\"CLAIM_ID\" as character varying(16777216)) as \"CLAIM_ID\" ,\n                    cast(\"CLAIM_LINE_NUMBER\" as NUMBER(38,0)) as \"CLAIM_LINE_NUMBER\" ,\n                    cast(\"DATA_SOURCE\" as character varying(16777216)) as \"DATA_SOURCE\" ,\n                    cast(\"CLAIM_LINE_ID\" as character varying(16777216)) as \"CLAIM_LINE_ID\" ,\n                    cast(\"SERVICE_CATEGORY_1\" as character varying(12)) as \"SERVICE_CATEGORY_1\" ,\n                    cast(\"SERVICE_CATEGORY_2\" as character varying(16777216)) as \"SERVICE_CATEGORY_2\" ,\n                    cast(\"SERVICE_CATEGORY_3\" as character varying(16777216)) as \"SERVICE_CATEGORY_3\" ,\n                    cast(\"SOURCE_MODEL_NAME\" as character varying(60)) as \"SOURCE_MODEL_NAME\" ,\n                    cast(\"TUVA_LAST_RUN\" as character varying(32)) as \"TUVA_LAST_RUN\" \n\n            from tuva.claims_preprocessing.service_category__office_based_physical_therapy_professional\n\n            \n        )\n\n        union all\n        \n\n        (\n            select\n                cast('tuva.claims_preprocessing.service_category__office_based_radiology' as TEXT) as _dbt_source_relation,\n\n                \n                    cast(\"CLAIM_ID\" as character varying(16777216)) as \"CLAIM_ID\" ,\n                    cast(\"CLAIM_LINE_NUMBER\" as NUMBER(38,0)) as \"CLAIM_LINE_NUMBER\" ,\n                    cast(\"DATA_SOURCE\" as character varying(16777216)) as \"DATA_SOURCE\" ,\n                    cast(\"CLAIM_LINE_ID\" as character varying(16777216)) as \"CLAIM_LINE_ID\" ,\n                    cast(\"SERVICE_CATEGORY_1\" as character varying(12)) as \"SERVICE_CATEGORY_1\" ,\n                    cast(\"SERVICE_CATEGORY_2\" as character varying(16777216)) as \"SERVICE_CATEGORY_2\" ,\n                    cast(\"SERVICE_CATEGORY_3\" as character varying(16777216)) as \"SERVICE_CATEGORY_3\" ,\n                    cast(\"SOURCE_MODEL_NAME\" as character varying(60)) as \"SOURCE_MODEL_NAME\" ,\n                    cast(\"TUVA_LAST_RUN\" as character varying(32)) as \"TUVA_LAST_RUN\" \n\n            from tuva.claims_preprocessing.service_category__office_based_radiology\n\n            \n        )\n\n        union all\n        \n\n        (\n            select\n                cast('tuva.claims_preprocessing.service_category__office_based_surgery_professional' as TEXT) as _dbt_source_relation,\n\n                \n                    cast(\"CLAIM_ID\" as character varying(16777216)) as \"CLAIM_ID\" ,\n                    cast(\"CLAIM_LINE_NUMBER\" as NUMBER(38,0)) as \"CLAIM_LINE_NUMBER\" ,\n                    cast(\"DATA_SOURCE\" as character varying(16777216)) as \"DATA_SOURCE\" ,\n                    cast(\"CLAIM_LINE_ID\" as character varying(16777216)) as \"CLAIM_LINE_ID\" ,\n                    cast(\"SERVICE_CATEGORY_1\" as character varying(12)) as \"SERVICE_CATEGORY_1\" ,\n                    cast(\"SERVICE_CATEGORY_2\" as character varying(16777216)) as \"SERVICE_CATEGORY_2\" ,\n                    cast(\"SERVICE_CATEGORY_3\" as character varying(16777216)) as \"SERVICE_CATEGORY_3\" ,\n                    cast(\"SOURCE_MODEL_NAME\" as character varying(60)) as \"SOURCE_MODEL_NAME\" ,\n                    cast(\"TUVA_LAST_RUN\" as character varying(32)) as \"TUVA_LAST_RUN\" \n\n            from tuva.claims_preprocessing.service_category__office_based_surgery_professional\n\n            \n        )\n\n        union all\n        \n\n        (\n            select\n                cast('tuva.claims_preprocessing._int_office_based_visit_professional' as TEXT) as _dbt_source_relation,\n\n                \n                    cast(\"CLAIM_ID\" as character varying(16777216)) as \"CLAIM_ID\" ,\n                    cast(\"CLAIM_LINE_NUMBER\" as NUMBER(38,0)) as \"CLAIM_LINE_NUMBER\" ,\n                    cast(\"DATA_SOURCE\" as character varying(16777216)) as \"DATA_SOURCE\" ,\n                    cast(\"CLAIM_LINE_ID\" as character varying(16777216)) as \"CLAIM_LINE_ID\" ,\n                    cast(\"SERVICE_CATEGORY_1\" as character varying(12)) as \"SERVICE_CATEGORY_1\" ,\n                    cast(\"SERVICE_CATEGORY_2\" as character varying(16777216)) as \"SERVICE_CATEGORY_2\" ,\n                    cast(\"SERVICE_CATEGORY_3\" as character varying(16777216)) as \"SERVICE_CATEGORY_3\" ,\n                    cast(\"SOURCE_MODEL_NAME\" as character varying(60)) as \"SOURCE_MODEL_NAME\" ,\n                    cast(\"TUVA_LAST_RUN\" as character varying(32)) as \"TUVA_LAST_RUN\" \n\n            from tuva.claims_preprocessing._int_office_based_visit_professional\n\n            \n        )\n\n        union all\n        \n\n        (\n            select\n                cast('tuva.claims_preprocessing._int_outpatient_hospital_or_clinic_professional' as TEXT) as _dbt_source_relation,\n\n                \n                    cast(\"CLAIM_ID\" as character varying(16777216)) as \"CLAIM_ID\" ,\n                    cast(\"CLAIM_LINE_NUMBER\" as NUMBER(38,0)) as \"CLAIM_LINE_NUMBER\" ,\n                    cast(\"DATA_SOURCE\" as character varying(16777216)) as \"DATA_SOURCE\" ,\n                    cast(\"CLAIM_LINE_ID\" as character varying(16777216)) as \"CLAIM_LINE_ID\" ,\n                    cast(\"SERVICE_CATEGORY_1\" as character varying(12)) as \"SERVICE_CATEGORY_1\" ,\n                    cast(\"SERVICE_CATEGORY_2\" as character varying(16777216)) as \"SERVICE_CATEGORY_2\" ,\n                    cast(\"SERVICE_CATEGORY_3\" as character varying(16777216)) as \"SERVICE_CATEGORY_3\" ,\n                    cast(\"SOURCE_MODEL_NAME\" as character varying(60)) as \"SOURCE_MODEL_NAME\" ,\n                    cast(\"TUVA_LAST_RUN\" as character varying(32)) as \"TUVA_LAST_RUN\" \n\n            from tuva.claims_preprocessing._int_outpatient_hospital_or_clinic_professional\n\n            \n        )\n\n        union all\n        \n\n        (\n            select\n                cast('tuva.claims_preprocessing._int_outpatient_psychiatric_professional' as TEXT) as _dbt_source_relation,\n\n                \n                    cast(\"CLAIM_ID\" as character varying(16777216)) as \"CLAIM_ID\" ,\n                    cast(\"CLAIM_LINE_NUMBER\" as NUMBER(38,0)) as \"CLAIM_LINE_NUMBER\" ,\n                    cast(\"DATA_SOURCE\" as character varying(16777216)) as \"DATA_SOURCE\" ,\n                    cast(\"CLAIM_LINE_ID\" as character varying(16777216)) as \"CLAIM_LINE_ID\" ,\n                    cast(\"SERVICE_CATEGORY_1\" as character varying(12)) as \"SERVICE_CATEGORY_1\" ,\n                    cast(\"SERVICE_CATEGORY_2\" as character varying(16777216)) as \"SERVICE_CATEGORY_2\" ,\n                    cast(\"SERVICE_CATEGORY_3\" as character varying(16777216)) as \"SERVICE_CATEGORY_3\" ,\n                    cast(\"SOURCE_MODEL_NAME\" as character varying(60)) as \"SOURCE_MODEL_NAME\" ,\n                    cast(\"TUVA_LAST_RUN\" as character varying(32)) as \"TUVA_LAST_RUN\" \n\n            from tuva.claims_preprocessing._int_outpatient_psychiatric_professional\n\n            \n        )\n\n        union all\n        \n\n        (\n            select\n                cast('tuva.claims_preprocessing._int_outpatient_rehab_professional' as TEXT) as _dbt_source_relation,\n\n                \n                    cast(\"CLAIM_ID\" as character varying(16777216)) as \"CLAIM_ID\" ,\n                    cast(\"CLAIM_LINE_NUMBER\" as NUMBER(38,0)) as \"CLAIM_LINE_NUMBER\" ,\n                    cast(\"DATA_SOURCE\" as character varying(16777216)) as \"DATA_SOURCE\" ,\n                    cast(\"CLAIM_LINE_ID\" as character varying(16777216)) as \"CLAIM_LINE_ID\" ,\n                    cast(\"SERVICE_CATEGORY_1\" as character varying(12)) as \"SERVICE_CATEGORY_1\" ,\n                    cast(\"SERVICE_CATEGORY_2\" as character varying(16777216)) as \"SERVICE_CATEGORY_2\" ,\n                    cast(\"SERVICE_CATEGORY_3\" as character varying(16777216)) as \"SERVICE_CATEGORY_3\" ,\n                    cast(\"SOURCE_MODEL_NAME\" as character varying(60)) as \"SOURCE_MODEL_NAME\" ,\n                    cast(\"TUVA_LAST_RUN\" as character varying(32)) as \"TUVA_LAST_RUN\" \n\n            from tuva.claims_preprocessing._int_outpatient_rehab_professional\n\n            \n        )\n\n        union all\n        \n\n        (\n            select\n                cast('tuva.claims_preprocessing._int_inpatient_skilled_nursing_professional' as TEXT) as _dbt_source_relation,\n\n                \n                    cast(\"CLAIM_ID\" as character varying(16777216)) as \"CLAIM_ID\" ,\n                    cast(\"CLAIM_LINE_NUMBER\" as NUMBER(38,0)) as \"CLAIM_LINE_NUMBER\" ,\n                    cast(\"DATA_SOURCE\" as character varying(16777216)) as \"DATA_SOURCE\" ,\n                    cast(\"CLAIM_LINE_ID\" as character varying(16777216)) as \"CLAIM_LINE_ID\" ,\n                    cast(\"SERVICE_CATEGORY_1\" as character varying(12)) as \"SERVICE_CATEGORY_1\" ,\n                    cast(\"SERVICE_CATEGORY_2\" as character varying(16777216)) as \"SERVICE_CATEGORY_2\" ,\n                    cast(\"SERVICE_CATEGORY_3\" as character varying(16777216)) as \"SERVICE_CATEGORY_3\" ,\n                    cast(\"SOURCE_MODEL_NAME\" as character varying(60)) as \"SOURCE_MODEL_NAME\" ,\n                    cast(\"TUVA_LAST_RUN\" as character varying(32)) as \"TUVA_LAST_RUN\" \n\n            from tuva.claims_preprocessing._int_inpatient_skilled_nursing_professional\n\n            \n        )\n\n        union all\n        \n\n        (\n            select\n                cast('tuva.claims_preprocessing._int_urgent_care_professional' as TEXT) as _dbt_source_relation,\n\n                \n                    cast(\"CLAIM_ID\" as character varying(16777216)) as \"CLAIM_ID\" ,\n                    cast(\"CLAIM_LINE_NUMBER\" as NUMBER(38,0)) as \"CLAIM_LINE_NUMBER\" ,\n                    cast(\"DATA_SOURCE\" as character varying(16777216)) as \"DATA_SOURCE\" ,\n                    cast(\"CLAIM_LINE_ID\" as character varying(16777216)) as \"CLAIM_LINE_ID\" ,\n                    cast(\"SERVICE_CATEGORY_1\" as character varying(12)) as \"SERVICE_CATEGORY_1\" ,\n                    cast(\"SERVICE_CATEGORY_2\" as character varying(16777216)) as \"SERVICE_CATEGORY_2\" ,\n                    cast(\"SERVICE_CATEGORY_3\" as character varying(16777216)) as \"SERVICE_CATEGORY_3\" ,\n                    cast(\"SOURCE_MODEL_NAME\" as character varying(60)) as \"SOURCE_MODEL_NAME\" ,\n                    cast(\"TUVA_LAST_RUN\" as character varying(32)) as \"TUVA_LAST_RUN\" \n\n            from tuva.claims_preprocessing._int_urgent_care_professional\n\n            \n        )\n\n        union all\n        \n\n        (\n            select\n                cast('tuva.claims_preprocessing._int_outpatient_hospice_professional' as TEXT) as _dbt_source_relation,\n\n                \n                    cast(\"CLAIM_ID\" as character varying(16777216)) as \"CLAIM_ID\" ,\n                    cast(\"CLAIM_LINE_NUMBER\" as NUMBER(38,0)) as \"CLAIM_LINE_NUMBER\" ,\n                    cast(\"DATA_SOURCE\" as character varying(16777216)) as \"DATA_SOURCE\" ,\n                    cast(\"CLAIM_LINE_ID\" as character varying(16777216)) as \"CLAIM_LINE_ID\" ,\n                    cast(\"SERVICE_CATEGORY_1\" as character varying(12)) as \"SERVICE_CATEGORY_1\" ,\n                    cast(\"SERVICE_CATEGORY_2\" as character varying(16777216)) as \"SERVICE_CATEGORY_2\" ,\n                    cast(\"SERVICE_CATEGORY_3\" as character varying(16777216)) as \"SERVICE_CATEGORY_3\" ,\n                    cast(\"SOURCE_MODEL_NAME\" as character varying(60)) as \"SOURCE_MODEL_NAME\" ,\n                    cast(\"TUVA_LAST_RUN\" as character varying(32)) as \"TUVA_LAST_RUN\" \n\n            from tuva.claims_preprocessing._int_outpatient_hospice_professional\n\n            \n        )\n\n        union all\n        \n\n        (\n            select\n                cast('tuva.claims_preprocessing.service_category__pharmacy_professional' as TEXT) as _dbt_source_relation,\n\n                \n                    cast(\"CLAIM_ID\" as character varying(16777216)) as \"CLAIM_ID\" ,\n                    cast(\"CLAIM_LINE_NUMBER\" as NUMBER(38,0)) as \"CLAIM_LINE_NUMBER\" ,\n                    cast(\"DATA_SOURCE\" as character varying(16777216)) as \"DATA_SOURCE\" ,\n                    cast(\"CLAIM_LINE_ID\" as character varying(16777216)) as \"CLAIM_LINE_ID\" ,\n                    cast(\"SERVICE_CATEGORY_1\" as character varying(12)) as \"SERVICE_CATEGORY_1\" ,\n                    cast(\"SERVICE_CATEGORY_2\" as character varying(16777216)) as \"SERVICE_CATEGORY_2\" ,\n                    cast(\"SERVICE_CATEGORY_3\" as character varying(16777216)) as \"SERVICE_CATEGORY_3\" ,\n                    cast(\"SOURCE_MODEL_NAME\" as character varying(60)) as \"SOURCE_MODEL_NAME\" ,\n                    cast(\"TUVA_LAST_RUN\" as character varying(32)) as \"TUVA_LAST_RUN\" \n\n            from tuva.claims_preprocessing.service_category__pharmacy_professional\n\n            \n        )\n\n        union all\n        \n\n        (\n            select\n                cast('tuva.claims_preprocessing.service_category__outpatient_substance_use_professional' as TEXT) as _dbt_source_relation,\n\n                \n                    cast(\"CLAIM_ID\" as character varying(16777216)) as \"CLAIM_ID\" ,\n                    cast(\"CLAIM_LINE_NUMBER\" as NUMBER(38,0)) as \"CLAIM_LINE_NUMBER\" ,\n                    cast(\"DATA_SOURCE\" as character varying(16777216)) as \"DATA_SOURCE\" ,\n                    cast(\"CLAIM_LINE_ID\" as character varying(16777216)) as \"CLAIM_LINE_ID\" ,\n                    cast(\"SERVICE_CATEGORY_1\" as character varying(12)) as \"SERVICE_CATEGORY_1\" ,\n                    cast(\"SERVICE_CATEGORY_2\" as character varying(16777216)) as \"SERVICE_CATEGORY_2\" ,\n                    cast(\"SERVICE_CATEGORY_3\" as character varying(16777216)) as \"SERVICE_CATEGORY_3\" ,\n                    cast(\"SOURCE_MODEL_NAME\" as character varying(60)) as \"SOURCE_MODEL_NAME\" ,\n                    cast(\"TUVA_LAST_RUN\" as character varying(32)) as \"TUVA_LAST_RUN\" \n\n            from tuva.claims_preprocessing.service_category__outpatient_substance_use_professional\n\n            \n        )\n\n        union all\n        \n\n        (\n            select\n                cast('tuva.claims_preprocessing.service_category__outpatient_physical_therapy_professional' as TEXT) as _dbt_source_relation,\n\n                \n                    cast(\"CLAIM_ID\" as character varying(16777216)) as \"CLAIM_ID\" ,\n                    cast(\"CLAIM_LINE_NUMBER\" as NUMBER(38,0)) as \"CLAIM_LINE_NUMBER\" ,\n                    cast(\"DATA_SOURCE\" as character varying(16777216)) as \"DATA_SOURCE\" ,\n                    cast(\"CLAIM_LINE_ID\" as character varying(16777216)) as \"CLAIM_LINE_ID\" ,\n                    cast(\"SERVICE_CATEGORY_1\" as character varying(12)) as \"SERVICE_CATEGORY_1\" ,\n                    cast(\"SERVICE_CATEGORY_2\" as character varying(16777216)) as \"SERVICE_CATEGORY_2\" ,\n                    cast(\"SERVICE_CATEGORY_3\" as character varying(16777216)) as \"SERVICE_CATEGORY_3\" ,\n                    cast(\"SOURCE_MODEL_NAME\" as character varying(60)) as \"SOURCE_MODEL_NAME\" ,\n                    cast(\"TUVA_LAST_RUN\" as character varying(32)) as \"TUVA_LAST_RUN\" \n\n            from tuva.claims_preprocessing.service_category__outpatient_physical_therapy_professional\n\n            \n        )\n\n        union all\n        \n\n        (\n            select\n                cast('tuva.claims_preprocessing.service_category__outpatient_radiology_professional' as TEXT) as _dbt_source_relation,\n\n                \n                    cast(\"CLAIM_ID\" as character varying(16777216)) as \"CLAIM_ID\" ,\n                    cast(\"CLAIM_LINE_NUMBER\" as NUMBER(38,0)) as \"CLAIM_LINE_NUMBER\" ,\n                    cast(\"DATA_SOURCE\" as character varying(16777216)) as \"DATA_SOURCE\" ,\n                    cast(\"CLAIM_LINE_ID\" as character varying(16777216)) as \"CLAIM_LINE_ID\" ,\n                    cast(\"SERVICE_CATEGORY_1\" as character varying(12)) as \"SERVICE_CATEGORY_1\" ,\n                    cast(\"SERVICE_CATEGORY_2\" as character varying(16777216)) as \"SERVICE_CATEGORY_2\" ,\n                    cast(\"SERVICE_CATEGORY_3\" as character varying(16777216)) as \"SERVICE_CATEGORY_3\" ,\n                    cast(\"SOURCE_MODEL_NAME\" as character varying(60)) as \"SOURCE_MODEL_NAME\" ,\n                    cast(\"TUVA_LAST_RUN\" as character varying(32)) as \"TUVA_LAST_RUN\" \n\n            from tuva.claims_preprocessing.service_category__outpatient_radiology_professional\n\n            \n        )\n\n        union all\n        \n\n        (\n            select\n                cast('tuva.claims_preprocessing._int_observation_professional' as TEXT) as _dbt_source_relation,\n\n                \n                    cast(\"CLAIM_ID\" as character varying(16777216)) as \"CLAIM_ID\" ,\n                    cast(\"CLAIM_LINE_NUMBER\" as NUMBER(38,0)) as \"CLAIM_LINE_NUMBER\" ,\n                    cast(\"DATA_SOURCE\" as character varying(16777216)) as \"DATA_SOURCE\" ,\n                    cast(\"CLAIM_LINE_ID\" as character varying(16777216)) as \"CLAIM_LINE_ID\" ,\n                    cast(\"SERVICE_CATEGORY_1\" as character varying(12)) as \"SERVICE_CATEGORY_1\" ,\n                    cast(\"SERVICE_CATEGORY_2\" as character varying(16777216)) as \"SERVICE_CATEGORY_2\" ,\n                    cast(\"SERVICE_CATEGORY_3\" as character varying(16777216)) as \"SERVICE_CATEGORY_3\" ,\n                    cast(\"SOURCE_MODEL_NAME\" as character varying(60)) as \"SOURCE_MODEL_NAME\" ,\n                    cast(\"TUVA_LAST_RUN\" as character varying(32)) as \"TUVA_LAST_RUN\" \n\n            from tuva.claims_preprocessing._int_observation_professional\n\n            \n        )\n\n        union all\n        \n\n        (\n            select\n                cast('tuva.claims_preprocessing._int_dme_professional' as TEXT) as _dbt_source_relation,\n\n                \n                    cast(\"CLAIM_ID\" as character varying(16777216)) as \"CLAIM_ID\" ,\n                    cast(\"CLAIM_LINE_NUMBER\" as NUMBER(38,0)) as \"CLAIM_LINE_NUMBER\" ,\n                    cast(\"DATA_SOURCE\" as character varying(16777216)) as \"DATA_SOURCE\" ,\n                    cast(\"CLAIM_LINE_ID\" as character varying(16777216)) as \"CLAIM_LINE_ID\" ,\n                    cast(\"SERVICE_CATEGORY_1\" as character varying(12)) as \"SERVICE_CATEGORY_1\" ,\n                    cast(\"SERVICE_CATEGORY_2\" as character varying(16777216)) as \"SERVICE_CATEGORY_2\" ,\n                    cast(\"SERVICE_CATEGORY_3\" as character varying(16777216)) as \"SERVICE_CATEGORY_3\" ,\n                    cast(\"SOURCE_MODEL_NAME\" as character varying(60)) as \"SOURCE_MODEL_NAME\" ,\n                    cast(\"TUVA_LAST_RUN\" as character varying(32)) as \"TUVA_LAST_RUN\" \n\n            from tuva.claims_preprocessing._int_dme_professional\n\n            \n        )\n\n        union all\n        \n\n        (\n            select\n                cast('tuva.claims_preprocessing._int_ambulance_professional' as TEXT) as _dbt_source_relation,\n\n                \n                    cast(\"CLAIM_ID\" as character varying(16777216)) as \"CLAIM_ID\" ,\n                    cast(\"CLAIM_LINE_NUMBER\" as NUMBER(38,0)) as \"CLAIM_LINE_NUMBER\" ,\n                    cast(\"DATA_SOURCE\" as character varying(16777216)) as \"DATA_SOURCE\" ,\n                    cast(\"CLAIM_LINE_ID\" as character varying(16777216)) as \"CLAIM_LINE_ID\" ,\n                    cast(\"SERVICE_CATEGORY_1\" as character varying(12)) as \"SERVICE_CATEGORY_1\" ,\n                    cast(\"SERVICE_CATEGORY_2\" as character varying(16777216)) as \"SERVICE_CATEGORY_2\" ,\n                    cast(\"SERVICE_CATEGORY_3\" as character varying(16777216)) as \"SERVICE_CATEGORY_3\" ,\n                    cast(\"SOURCE_MODEL_NAME\" as character varying(60)) as \"SOURCE_MODEL_NAME\" ,\n                    cast(\"TUVA_LAST_RUN\" as character varying(32)) as \"TUVA_LAST_RUN\" \n\n            from tuva.claims_preprocessing._int_ambulance_professional\n\n            \n        )\n\n        union all\n        \n\n        (\n            select\n                cast('tuva.claims_preprocessing.service_category__outpatient_surgery_professional' as TEXT) as _dbt_source_relation,\n\n                \n                    cast(\"CLAIM_ID\" as character varying(16777216)) as \"CLAIM_ID\" ,\n                    cast(\"CLAIM_LINE_NUMBER\" as NUMBER(38,0)) as \"CLAIM_LINE_NUMBER\" ,\n                    cast(\"DATA_SOURCE\" as character varying(16777216)) as \"DATA_SOURCE\" ,\n                    cast(null as character varying(16777216)) as \"CLAIM_LINE_ID\" ,\n                    cast(\"SERVICE_CATEGORY_1\" as character varying(12)) as \"SERVICE_CATEGORY_1\" ,\n                    cast(\"SERVICE_CATEGORY_2\" as character varying(16777216)) as \"SERVICE_CATEGORY_2\" ,\n                    cast(\"SERVICE_CATEGORY_3\" as character varying(16777216)) as \"SERVICE_CATEGORY_3\" ,\n                    cast(\"SOURCE_MODEL_NAME\" as character varying(60)) as \"SOURCE_MODEL_NAME\" ,\n                    cast(\"TUVA_LAST_RUN\" as character varying(32)) as \"TUVA_LAST_RUN\" \n\n            from tuva.claims_preprocessing.service_category__outpatient_surgery_professional\n\n            \n        )\n\n        \n)\n\nselect\n    p.claim_id\n    , p.claim_line_number\n    , p.data_source\n    , p.claim_line_id\n    , p.service_category_1\n    , p.service_category_2\n    , p.service_category_3\n    , p.tuva_last_run\n    , p.source_model_name\nfrom combined_professional_services as p", "relation_name": "tuva.claims_preprocessing._int_combined_professional", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:26.853075Z", "completed_at": "2025-06-03T19:50:26.872643Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:26.873013Z", "completed_at": "2025-06-03T19:50:26.873021Z"}], "thread_id": "Thread-2", "execution_time": 0.021127939224243164, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.service_category__service_category_grouper", "compiled": true, "compiled_code": "\n\nwith service_category_1_mapping as (\n    select distinct\n        a.claim_id\n        , a.claim_line_number\n        , a.data_source\n        , a.claim_type\n        , case when s.service_category_1 is null and b.service_category_1 is not null then 'Service cat value not in seed table'\n            else b.service_category_1\n          end as service_category_1\n        , case when s.service_category_2 is null and b.service_category_2 is not null then 'Service cat value not in seed table'\n            else s.service_category_2\n          end as service_category_2\n        , case\n            when s.service_category_3 is null and b.service_category_3 is not null then 'Service cat value not in seed table'\n            else s.service_category_3\n          end as service_category_3\n        , b.service_category_2 as original_service_cat_2\n        , b.service_category_3 as original_service_cat_3\n        , s.priority\n        , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\n        , b.source_model_name\n    from tuva.claims_preprocessing.service_category__stg_medical_claim as a\n    left outer join tuva.claims_preprocessing._int_combined_professional as b\n      on a.claim_id = b.claim_id\n      and a.claim_line_number = b.claim_line_number\n      and a.data_source = b.data_source\n    left outer join tuva.claims_preprocessing.service_category__service_categories as s on b.service_category_2 = s.service_category_2\n      and b.service_category_3 = s.service_category_3\n    where a.claim_type = 'professional'\n\n    union all\n\n    select distinct\n        a.claim_id\n        , a.claim_line_number\n        , a.data_source\n        , a.claim_type\n        , case when s.service_category_1 is null and b.service_category_1 is not null then 'Service cat value not in seed table'\n            else b.service_category_1\n          end as service_category_1\n        , case when s.service_category_2 is null and b.service_category_2 is not null then 'Service cat value not in seed table'\n            else s.service_category_2\n          end as service_category_2\n        , case\n            when s.service_category_3 is null and b.service_category_3 is not null then 'Service cat value not in seed table'\n            else s.service_category_3\n          end as service_category_3\n        , b.service_category_2 as original_service_cat_2\n        , b.service_category_3 as original_service_cat_3\n        , s.priority\n        , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\n        , b.source_model_name\n    from tuva.claims_preprocessing.service_category__stg_medical_claim as a\n    left outer join tuva.claims_preprocessing._int_combined_institutional_header_level as b\n      on a.claim_id = b.claim_id\n      and a.data_source = b.data_source\n    left outer join tuva.claims_preprocessing.service_category__service_categories as s\n      on b.service_category_2 = s.service_category_2\n      and b.service_category_3 = s.service_category_3\n    where a.claim_type = 'institutional'\n\n    union all\n\n    select distinct\n        a.claim_id\n        , a.claim_line_number\n        , a.data_source\n        , a.claim_type\n        , case when s.service_category_1 is null and b.service_category_1 is not null then 'Service cat value not in seed table'\n            else b.service_category_1\n          end as service_category_1\n        , case when s.service_category_2 is null and b.service_category_2 is not null then 'Service cat value not in seed table'\n            else s.service_category_2\n          end as service_category_2\n        , case\n            when s.service_category_3 is null and b.service_category_3 is not null then 'Service cat value not in seed table'\n            else s.service_category_3\n          end as service_category_3\n        , b.service_category_2 as original_service_cat_2\n        , b.service_category_3 as original_service_cat_3\n        , s.priority\n        , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\n        , b.source_model_name\n    from tuva.claims_preprocessing.service_category__stg_medical_claim as a\n    left outer join tuva.claims_preprocessing._int_combined_institutional_line_level as b\n      on a.claim_id = b.claim_id\n      and a.claim_line_number = b.claim_line_number\n      and a.data_source = b.data_source\n    left outer join tuva.claims_preprocessing.service_category__service_categories as s\n      on b.service_category_2 = s.service_category_2\n      and b.service_category_3 = s.service_category_3\n    where a.claim_type = 'institutional'\n)\n\n, service_category_2_deduplication as (\n    select\n        claim_id\n        , claim_line_number\n        , data_source\n        , claim_type\n        , service_category_1\n        , service_category_2\n        , service_category_3\n        , original_service_cat_2\n        , original_service_cat_3\n        , source_model_name\n        , row_number() over (partition by claim_id, claim_line_number\norder by coalesce(priority, 99999)) as duplicate_row_number\n    from service_category_1_mapping\n)\n\nselect\n    d.claim_id\n    , d.claim_line_number\n    , d.data_source\n    , d.claim_type\n    , coalesce(d.service_category_1, 'other') as service_category_1\n    , coalesce(d.service_category_2, 'other') as service_category_2\n    , coalesce(d.service_category_3, 'other') as service_category_3\n    , d.original_service_cat_2\n    , d.original_service_cat_3\n    , d.duplicate_row_number\n    , s.ccs_category\n    , s.ccs_category_description\n    , s.drg_code\n    , s.drg_description\n    , s.place_of_service_code\n    , s.place_of_service_description\n    , s.revenue_center_code\n    , s.revenue_center_description\n    , s.hcpcs_code\n    , s.default_ccsr_category_ip\n    , s.default_ccsr_category_op\n    , s.default_ccsr_category_description_ip\n    , s.default_ccsr_category_description_op\n    , s.primary_taxonomy_code\n    , s.primary_specialty_description\n    , s.modality\n    , s.bill_type_code\n    , s.bill_type_description\n    , d.source_model_name\nfrom service_category_2_deduplication as d\ninner join tuva.claims_preprocessing.service_category__stg_medical_claim as s\n  on d.claim_id = s.claim_id\n  and d.claim_line_number = s.claim_line_number\n  and d.data_source = s.data_source", "relation_name": "tuva.claims_preprocessing.service_category_grouper", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:26.876290Z", "completed_at": "2025-06-03T19:50:26.898272Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:26.898826Z", "completed_at": "2025-06-03T19:50:26.898833Z"}], "thread_id": "Thread-1", "execution_time": 0.024248838424682617, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.encounters__stg_medical_claim", "compiled": true, "compiled_code": "\n\n\nselect\n  m.person_id\n  , d.patient_data_source_id\n  , m.claim_id\n  , m.claim_line_number\n  , m.claim_id || '|' || cast(m.claim_line_number as TEXT) as claim_line_id\n  , m.claim_type\n  , coalesce(m.admission_date, m.claim_line_start_date, m.claim_start_date) as start_date\n  , coalesce(m.discharge_date, m.claim_line_end_date, m.claim_end_date) as end_date\n  , m.admission_date\n  , m.discharge_date\n  , m.claim_start_date\n  , m.claim_end_date\n  , m.claim_line_start_date\n  , m.claim_line_end_date\n  , g.service_category_1\n  , g.service_category_2\n  , g.service_category_3\n  , m.bill_type_code\n  , bt.bill_type_description\n  , m.hcpcs_code\n  , m.hcpcs_modifier_1\n  , m.hcpcs_modifier_2\n  , m.hcpcs_modifier_3\n  , m.hcpcs_modifier_4\n  , m.hcpcs_modifier_5\n  , c.ccs_category\n  , c.ccs_category_description\n  , m.drg_code_type\n  , m.drg_code\n  , coalesce(msdrg.ms_drg_description, aprdrg.apr_drg_description) as drg_description\n  , m.admit_source_code\n  , m.admit_type_code\n  , m.place_of_service_code\n  , pos.place_of_service_description\n  , m.revenue_center_code\n  , r.revenue_center_description\n  , m.diagnosis_code_type\n  , m.diagnosis_code_1\n  , dx.default_ccsr_category_ip\n  , dx.default_ccsr_category_op\n  , dx.default_ccsr_category_description_ip\n  , dx.default_ccsr_category_description_op\n  , p.primary_taxonomy_code\n  , p.primary_specialty_description\n  , n.modality\n  , m.billing_id\n  , m.rendering_id\n  , rend.primary_specialty_description as rend_primary_specialty_description\n  , m.facility_id\n  , m.discharge_disposition_code\n  , m.paid_amount\n  , m.charge_amount\n  , m.allowed_amount\n  , m.data_source\n  , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom tuva.claims_preprocessing.normalized_input_medical_claim as m\ninner join tuva.claims_preprocessing.service_category_grouper as g on m.claim_id = g.claim_id\nand\nm.claim_line_number = g.claim_line_number\nand g.duplicate_row_number = 1\ninner join tuva.claims_preprocessing.encounters__patient_data_source_id as d on m.person_id = d.person_id\nand\nm.data_source = d.data_source\nleft outer join tuva.ccsr._value_set_dxccsr_v2023_1_cleaned_map as dx on m.diagnosis_code_1 = dx.icd_10_cm_code\nleft outer join tuva.terminology.provider as p on m.facility_id = p.npi\nleft outer join tuva.terminology.ccs_services_procedures as c on m.hcpcs_code = c.hcpcs_code\nleft outer join tuva.terminology.nitos as n on m.hcpcs_code = n.hcpcs_code\nleft outer join tuva.terminology.ms_drg as msdrg on m.drg_code_type = 'ms-drg' and m.drg_code = msdrg.ms_drg_code\nleft outer join tuva.terminology.apr_drg as aprdrg on m.drg_code_type = 'apr-drg' and m.drg_code = aprdrg.apr_drg_code\nleft outer join tuva.terminology.revenue_center as r on m.revenue_center_code = r.revenue_center_code\nleft outer join tuva.terminology.place_of_service as pos on m.place_of_service_code = pos.place_of_service_code\nleft outer join tuva.terminology.bill_type as bt on m.bill_type_code = bt.bill_type_code\nleft outer join tuva.terminology.provider as rend on m.rendering_id = rend.npi", "relation_name": "tuva.claims_preprocessing.encounters__stg_medical_claim", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:26.887447Z", "completed_at": "2025-06-03T19:50:26.898545Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:26.899307Z", "completed_at": "2025-06-03T19:50:26.899312Z"}], "thread_id": "Thread-3", "execution_time": 0.024279117584228516, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_expectations_expect_table_row_count_to_be_between_service_category__service_category_grouper_1__False.b7e4fcbf66", "compiled": true, "compiled_code": "\n\n\n\n    with grouped_expression as (\n    select\n        \n        \n    \n  \n( 1=1 and count(*) >= 1\n)\n as expression\n\n\n    from tuva.claims_preprocessing.service_category_grouper\n    \n\n),\nvalidation_errors as (\n\n    select\n        *\n    from\n        grouped_expression\n    where\n        not(expression = true)\n\n)\n\nselect *\nfrom validation_errors\n\n\n\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:26.903441Z", "completed_at": "2025-06-03T19:50:26.926429Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:26.926734Z", "completed_at": "2025-06-03T19:50:26.926741Z"}], "thread_id": "Thread-2", "execution_time": 0.025540828704833984, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.acute_inpatient__generate_encounter_id", "compiled": true, "compiled_code": "\n\nwith claim_start_end as (\nselect claim_id\n, patient_data_source_id\n, min(start_date) as start_date\n, max(end_date) as end_date\n  from tuva.claims_preprocessing.encounters__stg_medical_claim\n  group by claim_id\n  , patient_data_source_id\n)\n\n, base as (\n  select distinct\n      enc.claim_id\n    , enc.patient_data_source_id\n    , c.start_date\n    , c.end_date\n    , enc.facility_id\n    , enc.discharge_disposition_code\n  from tuva.claims_preprocessing.encounters__stg_medical_claim as enc\n    inner join claim_start_end as c on enc.claim_id = c.claim_id\n  and\n  c.patient_data_source_id = enc.patient_data_source_id\n  where\n    service_category_2 in ('acute inpatient')\n    and claim_type = 'institutional'\n)\n\n, add_row_num as (\n  select\n      patient_data_source_id\n    , claim_id\n    , start_date\n    , end_date\n    , discharge_disposition_code\n    , facility_id\n    , row_number() over (partition by patient_data_source_id\norder by end_date, start_date, claim_id) as row_num\n  from base\n)\n\n, check_for_merges_with_larger_row_num as (\n  select\n      aa.patient_data_source_id\n    , aa.claim_id as claim_id_a\n    , bb.claim_id as claim_id_b\n    , aa.row_num as row_num_a\n    , bb.row_num as row_num_b\n    , case\n        -- Claims with same end_date and same facility_id should be merged:\n        when aa.end_date = bb.end_date\n          and aa.facility_id = bb.facility_id then 1\n\n        -- Claims with different end_date and start_date that are\n        -- adjacent (i.e. separated by 1 day) should be merged:\n        when \n\n    dateadd(\n        day,\n        1,\n        aa.end_date\n        )\n\n = bb.start_date\n          and aa.facility_id = bb.facility_id\n          and aa.discharge_disposition_code = '30' then 1\n\n        -- Claims with different end_date \n        -- should be merged if they overlap:\n        when aa.end_date <> bb.end_date\n          and aa.end_date > bb.start_date\n          and aa.facility_id = bb.facility_id then 1\n        else 0\n      end as merge_flag\n  from add_row_num as aa\n  inner join add_row_num as bb\n    on aa.patient_data_source_id = bb.patient_data_source_id\n    and aa.row_num < bb.row_num\n  where aa.claim_id <> bb.claim_id\n)\n\n, merges_with_larger_row_num as (\n  select\n      patient_data_source_id\n    , claim_id_a\n    , claim_id_b\n    , row_num_a\n    , row_num_b\n    , merge_flag\n  from check_for_merges_with_larger_row_num\n  where merge_flag = 1\n)\n\n, claim_ids_that_merge_with_larger_row_num as (\n  select distinct\n      claim_id_a as claim_id\n  from merges_with_larger_row_num\n)\n\n, claim_ids_having_a_smaller_row_num_merging_with_a_larger_row_num as (\n  select distinct\n      aa.claim_id as claim_id\n  from add_row_num as aa\n  inner join merges_with_larger_row_num as bb\n    on aa.patient_data_source_id = bb.patient_data_source_id\n    and bb.row_num_a < aa.row_num\n    and bb.row_num_b > aa.row_num\n)\n\n, close_flags as (\n  select\n      aa.patient_data_source_id\n    , aa.claim_id\n    , aa.start_date\n    , aa.end_date\n    , aa.discharge_disposition_code\n    , aa.facility_id\n    , aa.row_num\n    , case\n        when bb.claim_id is null\n          and cc.claim_id is null then 1\n        else 0\n      end as close_flag\n  from add_row_num as aa\n  left outer join claim_ids_that_merge_with_larger_row_num as bb\n    on aa.claim_id = bb.claim_id\n  left outer join claim_ids_having_a_smaller_row_num_merging_with_a_larger_row_num as cc\n    on aa.claim_id = cc.claim_id\n)\n\n, join_every_row_to_later_closes as (\n  select\n      aa.patient_data_source_id\n    , aa.claim_id\n    , aa.row_num\n    , bb.row_num as row_num_b\n  from close_flags as aa\n  inner join close_flags as bb\n    on aa.patient_data_source_id = bb.patient_data_source_id\n    and aa.row_num <= bb.row_num\n  where bb.close_flag = 1\n)\n\n, find_min_closing_row_num_for_every_claim as (\n  select\n      patient_data_source_id\n    , claim_id\n    , min(row_num_b) as min_closing_row\n  from join_every_row_to_later_closes\n  group by\n      patient_data_source_id\n    , claim_id\n)\n\n, add_min_closing_row_to_every_claim as (\n  select\n      aa.patient_data_source_id\n    , aa.claim_id\n    , aa.start_date\n    , aa.end_date\n    , aa.discharge_disposition_code\n    , aa.facility_id\n    , aa.row_num\n    , aa.close_flag\n    , bb.min_closing_row\n  from close_flags as aa\n  left outer join find_min_closing_row_num_for_every_claim as bb\n    on aa.patient_data_source_id = bb.patient_data_source_id\n    and aa.claim_id = bb.claim_id\n)\n\n, add_encounter_id as (\n  select\n      aa.patient_data_source_id\n    , aa.claim_id\n    , aa.start_date\n    , aa.end_date\n    , aa.discharge_disposition_code\n    , aa.facility_id\n    , aa.row_num\n    , aa.close_flag\n    , aa.min_closing_row\n    , bb.claim_id as encounter_id\n  from add_min_closing_row_to_every_claim as aa\n  left outer join add_min_closing_row_to_every_claim as bb\n    on aa.patient_data_source_id = bb.patient_data_source_id\n    and aa.min_closing_row = bb.row_num\n)\n\nselect\n    patient_data_source_id\n  , claim_id\n  , start_date\n  , end_date\n  , discharge_disposition_code\n  , facility_id\n  , row_number() over (partition by encounter_id\norder by start_date, end_date, claim_id) as encounter_claim_number\n  , row_number() over (partition by encounter_id\norder by start_date desc, end_date desc, claim_id desc) as encounter_claim_number_desc\n  , close_flag\n  , min_closing_row\n  , dense_rank() over (\norder by encounter_id) as encounter_id\nfrom add_encounter_id", "relation_name": "tuva.claims_preprocessing.acute_inpatient__generate_encounter_id", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:26.909708Z", "completed_at": "2025-06-03T19:50:26.927437Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:26.928361Z", "completed_at": "2025-06-03T19:50:26.928365Z"}], "thread_id": "Thread-4", "execution_time": 0.026546001434326172, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.ambulance__anchor_events", "compiled": true, "compiled_code": "\n\nwith service_category as (\n  select distinct\n      claim_id\n    , patient_data_source_id\n    , start_date\n  from tuva.claims_preprocessing.encounters__stg_medical_claim\n  where\n    service_category_2 = 'ambulance' --both inst and prof\n\n)\n\nselect distinct\nclaim_id\n, '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom service_category", "relation_name": "tuva.claims_preprocessing.ambulance__anchor_events", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:26.914939Z", "completed_at": "2025-06-03T19:50:26.927711Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:26.928724Z", "completed_at": "2025-06-03T19:50:26.928728Z"}], "thread_id": "Thread-1", "execution_time": 0.026589155197143555, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.asc__anchor_events", "compiled": true, "compiled_code": "\n\nwith service_category as (\n  select distinct\n      claim_id\n    , patient_data_source_id\n    , start_date\n    , end_date\n  from tuva.claims_preprocessing.encounters__stg_medical_claim\n  where\n    service_category_2 = 'ambulatory surgery center' -- include both professional and institutional claims as anchor events\n\n)\n\nselect distinct\nclaim_id\n, '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom service_category", "relation_name": "tuva.claims_preprocessing.asc__anchor_events", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:26.920879Z", "completed_at": "2025-06-03T19:50:26.928151Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:26.929289Z", "completed_at": "2025-06-03T19:50:26.929292Z"}], "thread_id": "Thread-3", "execution_time": 0.02661895751953125, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.dialysis__anchor_events", "compiled": true, "compiled_code": "\n\nwith service_category as (\n  select distinct\n      claim_id\n    , patient_data_source_id\n    , start_date\n  from tuva.claims_preprocessing.encounters__stg_medical_claim\n  where\n    service_category_2 = 'dialysis' --both inst and professional as anchor\n\n)\n\nselect distinct\nclaim_id\n, '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom service_category", "relation_name": "tuva.claims_preprocessing.dialysis__anchor_events", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:26.930129Z", "completed_at": "2025-06-03T19:50:27.052310Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:27.052762Z", "completed_at": "2025-06-03T19:50:27.052769Z"}], "thread_id": "Thread-2", "execution_time": 0.12493491172790527, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.dme__anchor_events", "compiled": true, "compiled_code": "\n\nwith service_category as (\n  select distinct\n      claim_id\n    , patient_data_source_id\n    , start_date\n  from tuva.claims_preprocessing.encounters__stg_medical_claim\n  where\n    service_category_2 = 'durable medical equipment' --both inst and prof\n\n)\n\nselect distinct\nclaim_id\n, '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom service_category", "relation_name": "tuva.claims_preprocessing.dme__anchor_events", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:27.041514Z", "completed_at": "2025-06-03T19:50:27.054079Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:27.059941Z", "completed_at": "2025-06-03T19:50:27.059949Z"}], "thread_id": "Thread-1", "execution_time": 0.025075912475585938, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.home_health__anchor_events", "compiled": true, "compiled_code": "\n\nwith service_category as (\n  select distinct\n      claim_id\n    , patient_data_source_id\n    , start_date\n  from tuva.claims_preprocessing.encounters__stg_medical_claim\n  where\n    service_category_2 = 'home health' -- both prof and inst as anchors\n\n)\n\nselect distinct\nclaim_id\n, '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom service_category", "relation_name": "tuva.claims_preprocessing.home_health__anchor_events", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:27.046233Z", "completed_at": "2025-06-03T19:50:27.054290Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:27.060575Z", "completed_at": "2025-06-03T19:50:27.060580Z"}], "thread_id": "Thread-3", "execution_time": 0.0253598690032959, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.inpatient_hospice__generate_encounter_id", "compiled": true, "compiled_code": "\n\nwith claim_start_end as (\n  select\n    claim_id\n    , patient_data_source_id\n    , min(start_date) as start_date\n    , max(end_date) as end_date\n  from tuva.claims_preprocessing.encounters__stg_medical_claim\n  group by claim_id, patient_data_source_id\n)\n\n, base as (\n  select distinct\n    enc.claim_id\n    , enc.patient_data_source_id\n    , c.start_date\n    , c.end_date\n    , enc.facility_id\n    , enc.discharge_disposition_code\n  from tuva.claims_preprocessing.encounters__stg_medical_claim as enc\n  inner join claim_start_end as c\n    on enc.claim_id = c.claim_id\n    and c.patient_data_source_id = enc.patient_data_source_id\n  where\n    enc.service_category_2 in ('inpatient hospice')\n    and enc.claim_type = 'institutional'\n)\n\n, add_row_num as (\n  select\n    patient_data_source_id\n    , claim_id\n    , start_date\n    , end_date\n    , discharge_disposition_code\n    , facility_id\n    , row_number() over (partition by patient_data_source_id\norder by end_date, start_date, claim_id) as row_num\n  from base\n)\n\n, check_for_merges_with_larger_row_num as (\n  select\n    aa.patient_data_source_id\n    , aa.claim_id as claim_id_a\n    , bb.claim_id as claim_id_b\n    , aa.row_num as row_num_a\n    , bb.row_num as row_num_b\n    , case\n      when aa.end_date = bb.end_date and aa.facility_id = bb.facility_id then 1\n      when \n\n    dateadd(\n        day,\n        1,\n        aa.end_date\n        )\n\n = bb.start_date\n        and aa.facility_id = bb.facility_id\n        and aa.discharge_disposition_code = '30' then 1\n      when aa.end_date <> bb.end_date\n        and aa.end_date > bb.start_date\n        and aa.facility_id = bb.facility_id then 1\n      else 0\n    end as merge_flag\n  from add_row_num as aa\n  inner join add_row_num as bb\n    on aa.patient_data_source_id = bb.patient_data_source_id\n    and aa.row_num < bb.row_num\n    and aa.claim_id <> bb.claim_id\n)\n\n\n, merges_with_larger_row_num as (\n  select\n      patient_data_source_id\n    , claim_id_a\n    , claim_id_b\n    , row_num_a\n    , row_num_b\n    , merge_flag\n  from check_for_merges_with_larger_row_num\n  where merge_flag = 1\n)\n\n, claim_ids_that_merge_with_larger_row_num as (\n  select distinct\n      claim_id_a as claim_id\n  from merges_with_larger_row_num\n)\n\n, claim_ids_having_a_smaller_row_num_merging_with_a_larger_row_num as (\n  select distinct\n      aa.claim_id as claim_id\n  from add_row_num as aa\n  inner join merges_with_larger_row_num as bb\n    on aa.patient_data_source_id = bb.patient_data_source_id\n    and bb.row_num_a < aa.row_num\n    and bb.row_num_b > aa.row_num\n)\n\n, close_flags as (\n  select\n      aa.patient_data_source_id\n    , aa.claim_id\n    , aa.start_date\n    , aa.end_date\n    , aa.discharge_disposition_code\n    , aa.facility_id\n    , aa.row_num\n    , case\n        when bb.claim_id is null\n          and cc.claim_id is null then 1\n        else 0\n      end as close_flag\n  from add_row_num as aa\n  left outer join claim_ids_that_merge_with_larger_row_num as bb\n    on aa.claim_id = bb.claim_id\n  left outer join claim_ids_having_a_smaller_row_num_merging_with_a_larger_row_num as cc\n    on aa.claim_id = cc.claim_id\n)\n\n, join_every_row_to_later_closes as (\n  select\n      aa.patient_data_source_id\n    , aa.claim_id\n    , aa.row_num\n    , bb.row_num as row_num_b\n  from close_flags as aa\n  inner join close_flags as bb\n    on aa.patient_data_source_id = bb.patient_data_source_id\n    and aa.row_num <= bb.row_num\n  where bb.close_flag = 1\n)\n\n, find_min_closing_row_num_for_every_claim as (\n  select\n      patient_data_source_id\n    , claim_id\n    , min(row_num_b) as min_closing_row\n  from join_every_row_to_later_closes\n  group by\n      patient_data_source_id\n    , claim_id\n)\n\n, add_min_closing_row_to_every_claim as (\n  select\n      aa.patient_data_source_id\n    , aa.claim_id\n    , aa.start_date\n    , aa.end_date\n    , aa.discharge_disposition_code\n    , aa.facility_id\n    , aa.row_num\n    , aa.close_flag\n    , bb.min_closing_row\n  from close_flags as aa\n  left outer join find_min_closing_row_num_for_every_claim as bb\n    on aa.patient_data_source_id = bb.patient_data_source_id\n    and aa.claim_id = bb.claim_id\n)\n\n, add_encounter_id as (\n  select\n      aa.patient_data_source_id\n    , aa.claim_id\n    , aa.start_date\n    , aa.end_date\n    , aa.discharge_disposition_code\n    , aa.facility_id\n    , aa.row_num\n    , aa.close_flag\n    , aa.min_closing_row\n    , bb.claim_id as encounter_id\n  from add_min_closing_row_to_every_claim as aa\n  left outer join add_min_closing_row_to_every_claim as bb\n    on aa.patient_data_source_id = bb.patient_data_source_id\n    and aa.min_closing_row = bb.row_num\n)\n\nselect\n    patient_data_source_id\n  , claim_id\n  , start_date\n  , end_date\n  , discharge_disposition_code\n  , facility_id\n  , row_number() over (partition by encounter_id\norder by start_date, end_date, claim_id) as encounter_claim_number\n  , row_number() over (partition by encounter_id\norder by start_date desc, end_date desc, claim_id desc) as encounter_claim_number_desc\n  , close_flag\n  , min_closing_row\n  , dense_rank() over (\norder by encounter_id) as encounter_id\nfrom add_encounter_id", "relation_name": "tuva.claims_preprocessing.inpatient_hospice__generate_encounter_id", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:27.036282Z", "completed_at": "2025-06-03T19:50:27.060345Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:27.061355Z", "completed_at": "2025-06-03T19:50:27.061359Z"}], "thread_id": "Thread-4", "execution_time": 0.02675485610961914, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.emergency_department__generate_encounter_id_pre_sort", "compiled": true, "compiled_code": "\n\nwith claim_start_end as (\n  select\n    claim_id\n    , patient_data_source_id\n    , min(start_date) as start_date\n    , max(end_date) as end_date\n  from tuva.claims_preprocessing.encounters__stg_medical_claim\n  group by claim_id, patient_data_source_id\n)\n\n, base as (\n  select distinct\n    enc.claim_id\n    , enc.patient_data_source_id\n    , c.start_date\n    , c.end_date\n    , enc.facility_id\n    , enc.discharge_disposition_code\n  from tuva.claims_preprocessing.encounters__stg_medical_claim as enc\n  inner join claim_start_end as c\n    on enc.claim_id = c.claim_id\n    and c.patient_data_source_id = enc.patient_data_source_id\n  where\n    enc.service_category_2 = 'emergency department' --both inst and prof\n)\n\n, add_row_num as (\n  select\n    patient_data_source_id\n    , claim_id\n    , start_date\n    , end_date\n    , discharge_disposition_code\n    , facility_id\n    , row_number() over (partition by patient_data_source_id\norder by end_date, start_date, claim_id) as row_num\n  from base\n)\n\n, check_for_merges_with_larger_row_num as (\n  select\n    aa.patient_data_source_id\n    , aa.claim_id as claim_id_a\n    , bb.claim_id as claim_id_b\n    , aa.row_num as row_num_a\n    , bb.row_num as row_num_b\n    , case\n      when aa.end_date = bb.end_date and aa.facility_id = bb.facility_id then 1\n      when \n\n    dateadd(\n        day,\n        1,\n        aa.end_date\n        )\n\n = bb.start_date\n        and aa.facility_id = bb.facility_id\n        and aa.discharge_disposition_code = '30' then 1\n      when aa.end_date <> bb.end_date\n        and aa.end_date >= bb.start_date\n        and aa.facility_id = bb.facility_id then 1\n      else 0\n    end as merge_flag\n  from add_row_num as aa\n  inner join add_row_num as bb\n    on aa.patient_data_source_id = bb.patient_data_source_id\n    and aa.row_num < bb.row_num\n    and aa.claim_id <> bb.claim_id\n)\n\n, merges_with_larger_row_num as (\n  select\n      patient_data_source_id\n    , claim_id_a\n    , claim_id_b\n    , row_num_a\n    , row_num_b\n    , merge_flag\n  from check_for_merges_with_larger_row_num\n  where merge_flag = 1\n)\n\n, claim_ids_that_merge_with_larger_row_num as (\n  select distinct\n      claim_id_a as claim_id\n  from merges_with_larger_row_num\n)\n\n, claim_ids_having_a_smaller_row_num_merging_with_a_larger_row_num as (\n  select distinct\n      aa.claim_id as claim_id\n  from add_row_num as aa\n  inner join merges_with_larger_row_num as bb\n    on aa.patient_data_source_id = bb.patient_data_source_id\n    and bb.row_num_a < aa.row_num\n    and bb.row_num_b > aa.row_num\n)\n\n, close_flags as (\n  select\n      aa.patient_data_source_id\n    , aa.claim_id\n    , aa.start_date\n    , aa.end_date\n    , aa.discharge_disposition_code\n    , aa.facility_id\n    , aa.row_num\n    , case\n        when bb.claim_id is null\n          and cc.claim_id is null then 1\n        else 0\n      end as close_flag\n  from add_row_num as aa\n  left outer join claim_ids_that_merge_with_larger_row_num as bb\n    on aa.claim_id = bb.claim_id\n  left outer join claim_ids_having_a_smaller_row_num_merging_with_a_larger_row_num as cc\n    on aa.claim_id = cc.claim_id\n)\n\n, join_every_row_to_later_closes as (\n  select\n      aa.patient_data_source_id\n    , aa.claim_id\n    , aa.row_num\n    , bb.row_num as row_num_b\n  from close_flags as aa\n  inner join close_flags as bb\n    on aa.patient_data_source_id = bb.patient_data_source_id\n    and aa.row_num <= bb.row_num\n  where bb.close_flag = 1\n)\n\n, find_min_closing_row_num_for_every_claim as (\n  select\n      patient_data_source_id\n    , claim_id\n    , min(row_num_b) as min_closing_row\n  from join_every_row_to_later_closes\n  group by\n      patient_data_source_id\n    , claim_id\n)\n\n, add_min_closing_row_to_every_claim as (\n  select\n      aa.patient_data_source_id\n    , aa.claim_id\n    , aa.start_date\n    , aa.end_date\n    , aa.discharge_disposition_code\n    , aa.facility_id\n    , aa.row_num\n    , aa.close_flag\n    , bb.min_closing_row\n  from close_flags as aa\n  left outer join find_min_closing_row_num_for_every_claim as bb\n    on aa.patient_data_source_id = bb.patient_data_source_id\n    and aa.claim_id = bb.claim_id\n)\n\n\n  select\n      aa.patient_data_source_id\n    , aa.claim_id\n    , aa.start_date\n    , aa.end_date\n    , aa.discharge_disposition_code\n    , aa.facility_id\n    , aa.row_num\n    , aa.close_flag\n    , aa.min_closing_row\n    , bb.claim_id as encounter_id\n  from add_min_closing_row_to_every_claim as aa\n  left outer join add_min_closing_row_to_every_claim as bb\n    on aa.patient_data_source_id = bb.patient_data_source_id\n    and aa.min_closing_row = bb.row_num", "relation_name": "tuva.claims_preprocessing.emergency_department__generate_encounter_id_pre_sort", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:27.054505Z", "completed_at": "2025-06-03T19:50:27.062062Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:27.063103Z", "completed_at": "2025-06-03T19:50:27.063107Z"}], "thread_id": "Thread-2", "execution_time": 0.009634017944335938, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.inpatient_psych__generate_encounter_id", "compiled": true, "compiled_code": "\n\nwith claim_start_end as (\n  select\n    claim_id\n    , patient_data_source_id\n    , min(start_date) as start_date\n    , max(end_date) as end_date\n  from tuva.claims_preprocessing.encounters__stg_medical_claim\n  group by claim_id, patient_data_source_id\n)\n\n, base as (\n  select distinct\n    enc.claim_id\n    , enc.patient_data_source_id\n    , c.start_date\n    , c.end_date\n    , enc.facility_id\n    , enc.discharge_disposition_code\n  from tuva.claims_preprocessing.encounters__stg_medical_claim as enc\n  inner join claim_start_end as c\n    on enc.claim_id = c.claim_id\n    and c.patient_data_source_id = enc.patient_data_source_id\n  where\n    enc.service_category_2 = 'inpatient psychiatric'\n    and enc.claim_type = 'institutional'\n)\n\n, add_row_num as (\n  select\n    patient_data_source_id\n    , claim_id\n    , start_date\n    , end_date\n    , discharge_disposition_code\n    , facility_id\n    , row_number() over (partition by patient_data_source_id\norder by end_date, start_date, claim_id) as row_num\n  from base\n)\n\n, check_for_merges_with_larger_row_num as (\n  select\n    aa.patient_data_source_id\n    , aa.claim_id as claim_id_a\n    , bb.claim_id as claim_id_b\n    , aa.row_num as row_num_a\n    , bb.row_num as row_num_b\n    , case\n      when aa.end_date = bb.end_date and aa.facility_id = bb.facility_id then 1\n      when \n\n    dateadd(\n        day,\n        1,\n        aa.end_date\n        )\n\n = bb.start_date\n        and aa.facility_id = bb.facility_id\n        and aa.discharge_disposition_code = '30' then 1\n      when aa.end_date <> bb.end_date\n        and aa.end_date > bb.start_date\n        and aa.facility_id = bb.facility_id then 1\n      else 0\n    end as merge_flag\n  from add_row_num as aa\n  inner join add_row_num as bb\n    on aa.patient_data_source_id = bb.patient_data_source_id\n    and aa.row_num < bb.row_num\n    and aa.claim_id <> bb.claim_id\n)\n\n\n, merges_with_larger_row_num as (\n  select\n      patient_data_source_id\n    , claim_id_a\n    , claim_id_b\n    , row_num_a\n    , row_num_b\n    , merge_flag\n  from check_for_merges_with_larger_row_num\n  where merge_flag = 1\n)\n\n, claim_ids_that_merge_with_larger_row_num as (\n  select distinct\n      claim_id_a as claim_id\n  from merges_with_larger_row_num\n)\n\n, claim_ids_having_a_smaller_row_num_merging_with_a_larger_row_num as (\n  select distinct\n      aa.claim_id as claim_id\n  from add_row_num as aa\n  inner join merges_with_larger_row_num as bb\n    on aa.patient_data_source_id = bb.patient_data_source_id\n    and bb.row_num_a < aa.row_num\n    and bb.row_num_b > aa.row_num\n)\n\n, close_flags as (\n  select\n      aa.patient_data_source_id\n    , aa.claim_id\n    , aa.start_date\n    , aa.end_date\n    , aa.discharge_disposition_code\n    , aa.facility_id\n    , aa.row_num\n    , case\n        when bb.claim_id is null\n          and cc.claim_id is null then 1\n        else 0\n      end as close_flag\n  from add_row_num as aa\n  left outer join claim_ids_that_merge_with_larger_row_num as bb\n    on aa.claim_id = bb.claim_id\n  left outer join claim_ids_having_a_smaller_row_num_merging_with_a_larger_row_num as cc\n    on aa.claim_id = cc.claim_id\n)\n\n, join_every_row_to_later_closes as (\n  select\n      aa.patient_data_source_id\n    , aa.claim_id\n    , aa.row_num\n    , bb.row_num as row_num_b\n  from close_flags as aa\n  inner join close_flags as bb\n    on aa.patient_data_source_id = bb.patient_data_source_id\n    and aa.row_num <= bb.row_num\n  where bb.close_flag = 1\n)\n\n, find_min_closing_row_num_for_every_claim as (\n  select\n      patient_data_source_id\n    , claim_id\n    , min(row_num_b) as min_closing_row\n  from join_every_row_to_later_closes\n  group by\n      patient_data_source_id\n    , claim_id\n)\n\n, add_min_closing_row_to_every_claim as (\n  select\n      aa.patient_data_source_id\n    , aa.claim_id\n    , aa.start_date\n    , aa.end_date\n    , aa.discharge_disposition_code\n    , aa.facility_id\n    , aa.row_num\n    , aa.close_flag\n    , bb.min_closing_row\n  from close_flags as aa\n  left outer join find_min_closing_row_num_for_every_claim as bb\n    on aa.patient_data_source_id = bb.patient_data_source_id\n    and aa.claim_id = bb.claim_id\n)\n\n, add_encounter_id as (\n  select\n      aa.patient_data_source_id\n    , aa.claim_id\n    , aa.start_date\n    , aa.end_date\n    , aa.discharge_disposition_code\n    , aa.facility_id\n    , aa.row_num\n    , aa.close_flag\n    , aa.min_closing_row\n    , bb.claim_id as encounter_id\n  from add_min_closing_row_to_every_claim as aa\n  left outer join add_min_closing_row_to_every_claim as bb\n    on aa.patient_data_source_id = bb.patient_data_source_id\n    and aa.min_closing_row = bb.row_num\n)\n\nselect\n    patient_data_source_id\n  , claim_id\n  , start_date\n  , end_date\n  , discharge_disposition_code\n  , facility_id\n  , row_number() over (partition by encounter_id\norder by start_date, end_date, claim_id) as encounter_claim_number\n  , row_number() over (partition by encounter_id\norder by start_date desc, end_date desc, claim_id desc) as encounter_claim_number_desc\n  , close_flag\n  , min_closing_row\n  , dense_rank() over (\norder by encounter_id) as encounter_id\nfrom add_encounter_id", "relation_name": "tuva.claims_preprocessing.inpatient_psych__generate_encounter_id", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:27.064381Z", "completed_at": "2025-06-03T19:50:27.083134Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:27.089188Z", "completed_at": "2025-06-03T19:50:27.089196Z"}], "thread_id": "Thread-1", "execution_time": 0.027008056640625, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.inpatient_rehab__generate_encounter_id", "compiled": true, "compiled_code": "\n\nwith claim_start_end as (\n  select\n    claim_id\n    , patient_data_source_id\n    , min(start_date) as start_date\n    , max(end_date) as end_date\n  from tuva.claims_preprocessing.encounters__stg_medical_claim\n  group by claim_id, patient_data_source_id\n)\n\n, base as (\n  select distinct\n    enc.claim_id\n    , enc.patient_data_source_id\n    , c.start_date\n    , c.end_date\n    , enc.facility_id\n    , enc.discharge_disposition_code\n  from tuva.claims_preprocessing.encounters__stg_medical_claim as enc\n  inner join claim_start_end as c\n    on enc.claim_id = c.claim_id\n    and c.patient_data_source_id = enc.patient_data_source_id\n  where\n    enc.service_category_2 = 'inpatient rehabilitation'\n    and enc.claim_type = 'institutional'\n)\n\n, add_row_num as (\n  select\n    patient_data_source_id\n    , claim_id\n    , start_date\n    , end_date\n    , discharge_disposition_code\n    , facility_id\n    , row_number() over (partition by patient_data_source_id\norder by end_date, start_date, claim_id) as row_num\n  from base\n)\n\n, check_for_merges_with_larger_row_num as (\n  select\n    aa.patient_data_source_id\n    , aa.claim_id as claim_id_a\n    , bb.claim_id as claim_id_b\n    , aa.row_num as row_num_a\n    , bb.row_num as row_num_b\n    , case\n      when aa.end_date = bb.end_date and aa.facility_id = bb.facility_id then 1\n      when \n\n    dateadd(\n        day,\n        1,\n        aa.end_date\n        )\n\n = bb.start_date\n        and aa.facility_id = bb.facility_id\n        and aa.discharge_disposition_code = '30' then 1\n      when aa.end_date <> bb.end_date\n        and aa.end_date > bb.start_date\n        and aa.facility_id = bb.facility_id then 1\n      else 0\n    end as merge_flag\n  from add_row_num as aa\n  inner join add_row_num as bb\n    on aa.patient_data_source_id = bb.patient_data_source_id\n    and aa.row_num < bb.row_num\n    and aa.claim_id <> bb.claim_id\n)\n\n\n, merges_with_larger_row_num as (\n  select\n      patient_data_source_id\n    , claim_id_a\n    , claim_id_b\n    , row_num_a\n    , row_num_b\n    , merge_flag\n  from check_for_merges_with_larger_row_num\n  where merge_flag = 1\n)\n\n, claim_ids_that_merge_with_larger_row_num as (\n  select distinct\n      claim_id_a as claim_id\n  from merges_with_larger_row_num\n)\n\n, claim_ids_having_a_smaller_row_num_merging_with_a_larger_row_num as (\n  select distinct\n      aa.claim_id as claim_id\n  from add_row_num as aa\n  inner join merges_with_larger_row_num as bb\n    on aa.patient_data_source_id = bb.patient_data_source_id\n    and bb.row_num_a < aa.row_num\n    and bb.row_num_b > aa.row_num\n)\n\n, close_flags as (\n  select\n      aa.patient_data_source_id\n    , aa.claim_id\n    , aa.start_date\n    , aa.end_date\n    , aa.discharge_disposition_code\n    , aa.facility_id\n    , aa.row_num\n    , case\n        when bb.claim_id is null\n          and cc.claim_id is null then 1\n        else 0\n      end as close_flag\n  from add_row_num as aa\n  left outer join claim_ids_that_merge_with_larger_row_num as bb\n    on aa.claim_id = bb.claim_id\n  left outer join claim_ids_having_a_smaller_row_num_merging_with_a_larger_row_num as cc\n    on aa.claim_id = cc.claim_id\n)\n\n, join_every_row_to_later_closes as (\n  select\n      aa.patient_data_source_id\n    , aa.claim_id\n    , aa.row_num\n    , bb.row_num as row_num_b\n  from close_flags as aa\n  inner join close_flags as bb\n    on aa.patient_data_source_id = bb.patient_data_source_id\n    and aa.row_num <= bb.row_num\n  where bb.close_flag = 1\n)\n\n, find_min_closing_row_num_for_every_claim as (\n  select\n      patient_data_source_id\n    , claim_id\n    , min(row_num_b) as min_closing_row\n  from join_every_row_to_later_closes\n  group by\n      patient_data_source_id\n    , claim_id\n)\n\n, add_min_closing_row_to_every_claim as (\n  select\n      aa.patient_data_source_id\n    , aa.claim_id\n    , aa.start_date\n    , aa.end_date\n    , aa.discharge_disposition_code\n    , aa.facility_id\n    , aa.row_num\n    , aa.close_flag\n    , bb.min_closing_row\n  from close_flags as aa\n  left outer join find_min_closing_row_num_for_every_claim as bb\n    on aa.patient_data_source_id = bb.patient_data_source_id\n    and aa.claim_id = bb.claim_id\n)\n\n, add_encounter_id as (\n  select\n      aa.patient_data_source_id\n    , aa.claim_id\n    , aa.start_date\n    , aa.end_date\n    , aa.discharge_disposition_code\n    , aa.facility_id\n    , aa.row_num\n    , aa.close_flag\n    , aa.min_closing_row\n    , bb.claim_id as encounter_id\n  from add_min_closing_row_to_every_claim as aa\n  left outer join add_min_closing_row_to_every_claim as bb\n    on aa.patient_data_source_id = bb.patient_data_source_id\n    and aa.min_closing_row = bb.row_num\n)\n\nselect\n    patient_data_source_id\n  , claim_id\n  , start_date\n  , end_date\n  , discharge_disposition_code\n  , facility_id\n  , row_number() over (partition by encounter_id\norder by start_date, end_date, claim_id) as encounter_claim_number\n  , row_number() over (partition by encounter_id\norder by start_date desc, end_date desc, claim_id desc) as encounter_claim_number_desc\n  , close_flag\n  , min_closing_row\n  , dense_rank() over (\norder by encounter_id) as encounter_id\nfrom add_encounter_id", "relation_name": "tuva.claims_preprocessing.inpatient_rehab__generate_encounter_id", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:27.070745Z", "completed_at": "2025-06-03T19:50:27.088931Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:27.089703Z", "completed_at": "2025-06-03T19:50:27.089709Z"}], "thread_id": "Thread-3", "execution_time": 0.026940107345581055, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.inpatient_snf__generate_encounter_id", "compiled": true, "compiled_code": "\n\nwith claim_start_end as (\n  select\n    claim_id\n    , patient_data_source_id\n    , min(start_date) as start_date\n    , max(end_date) as end_date\n  from tuva.claims_preprocessing.encounters__stg_medical_claim\n  group by claim_id, patient_data_source_id\n)\n\n, base as (\n  select distinct\n    enc.claim_id\n    , enc.patient_data_source_id\n    , c.start_date\n    , c.end_date\n    , enc.facility_id\n    , enc.discharge_disposition_code\n  from tuva.claims_preprocessing.encounters__stg_medical_claim as enc\n  inner join claim_start_end as c\n    on enc.claim_id = c.claim_id\n    and c.patient_data_source_id = enc.patient_data_source_id\n  where\n    enc.service_category_2 = 'skilled nursing'\n    and enc.claim_type = 'institutional'\n)\n\n, add_row_num as (\n  select\n    patient_data_source_id\n    , claim_id\n    , start_date\n    , end_date\n    , discharge_disposition_code\n    , facility_id\n    , row_number() over (partition by patient_data_source_id\norder by end_date, start_date, claim_id) as row_num\n  from base\n)\n\n, check_for_merges_with_larger_row_num as (\n  select\n    aa.patient_data_source_id\n    , aa.claim_id as claim_id_a\n    , bb.claim_id as claim_id_b\n    , aa.row_num as row_num_a\n    , bb.row_num as row_num_b\n    , case\n      when aa.end_date = bb.end_date and aa.facility_id = bb.facility_id then 1\n      when \n\n    dateadd(\n        day,\n        1,\n        aa.end_date\n        )\n\n = bb.start_date\n        and aa.facility_id = bb.facility_id\n        and aa.discharge_disposition_code = '30' then 1\n      when aa.end_date <> bb.end_date\n        and aa.end_date > bb.start_date\n        and aa.facility_id = bb.facility_id then 1\n      else 0\n    end as merge_flag\n  from add_row_num as aa\n  inner join add_row_num as bb\n    on aa.patient_data_source_id = bb.patient_data_source_id\n    and aa.row_num < bb.row_num\n    and aa.claim_id <> bb.claim_id\n)\n\n, merges_with_larger_row_num as (\n  select\n      patient_data_source_id\n    , claim_id_a\n    , claim_id_b\n    , row_num_a\n    , row_num_b\n    , merge_flag\n  from check_for_merges_with_larger_row_num\n  where merge_flag = 1\n)\n\n, claim_ids_that_merge_with_larger_row_num as (\n  select distinct\n      claim_id_a as claim_id\n  from merges_with_larger_row_num\n)\n\n, claim_ids_having_a_smaller_row_num_merging_with_a_larger_row_num as (\n  select distinct\n      aa.claim_id as claim_id\n  from add_row_num as aa\n  inner join merges_with_larger_row_num as bb\n    on aa.patient_data_source_id = bb.patient_data_source_id\n    and bb.row_num_a < aa.row_num\n    and bb.row_num_b > aa.row_num\n)\n\n, close_flags as (\n  select\n      aa.patient_data_source_id\n    , aa.claim_id\n    , aa.start_date\n    , aa.end_date\n    , aa.discharge_disposition_code\n    , aa.facility_id\n    , aa.row_num\n    , case\n        when bb.claim_id is null\n          and cc.claim_id is null then 1\n        else 0\n      end as close_flag\n  from add_row_num as aa\n  left outer join claim_ids_that_merge_with_larger_row_num as bb\n    on aa.claim_id = bb.claim_id\n  left outer join claim_ids_having_a_smaller_row_num_merging_with_a_larger_row_num as cc\n    on aa.claim_id = cc.claim_id\n)\n\n, join_every_row_to_later_closes as (\n  select\n      aa.patient_data_source_id\n    , aa.claim_id\n    , aa.row_num\n    , bb.row_num as row_num_b\n  from close_flags as aa\n  inner join close_flags as bb\n    on aa.patient_data_source_id = bb.patient_data_source_id\n    and aa.row_num <= bb.row_num\n  where bb.close_flag = 1\n)\n\n, find_min_closing_row_num_for_every_claim as (\n  select\n      patient_data_source_id\n    , claim_id\n    , min(row_num_b) as min_closing_row\n  from join_every_row_to_later_closes\n  group by\n      patient_data_source_id\n    , claim_id\n)\n\n, add_min_closing_row_to_every_claim as (\n  select\n      aa.patient_data_source_id\n    , aa.claim_id\n    , aa.start_date\n    , aa.end_date\n    , aa.discharge_disposition_code\n    , aa.facility_id\n    , aa.row_num\n    , aa.close_flag\n    , bb.min_closing_row\n  from close_flags as aa\n  left outer join find_min_closing_row_num_for_every_claim as bb\n    on aa.patient_data_source_id = bb.patient_data_source_id\n    and aa.claim_id = bb.claim_id\n)\n\n, add_encounter_id as (\n  select\n      aa.patient_data_source_id\n    , aa.claim_id\n    , aa.start_date\n    , aa.end_date\n    , aa.discharge_disposition_code\n    , aa.facility_id\n    , aa.row_num\n    , aa.close_flag\n    , aa.min_closing_row\n    , bb.claim_id as encounter_id\n  from add_min_closing_row_to_every_claim as aa\n  left outer join add_min_closing_row_to_every_claim as bb\n    on aa.patient_data_source_id = bb.patient_data_source_id\n    and aa.min_closing_row = bb.row_num\n)\n\nselect\n    patient_data_source_id\n  , claim_id\n  , start_date\n  , end_date\n  , discharge_disposition_code\n  , facility_id\n  , row_number() over (partition by encounter_id\norder by start_date, end_date, claim_id) as encounter_claim_number\n  , row_number() over (partition by encounter_id\norder by start_date desc, end_date desc, claim_id desc) as encounter_claim_number_desc\n  , close_flag\n  , min_closing_row\n  , dense_rank() over (\norder by encounter_id) as encounter_id\nfrom add_encounter_id", "relation_name": "tuva.claims_preprocessing.inpatient_snf__generate_encounter_id", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:27.076340Z", "completed_at": "2025-06-03T19:50:27.090132Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:27.091221Z", "completed_at": "2025-06-03T19:50:27.091225Z"}], "thread_id": "Thread-4", "execution_time": 0.027601957321166992, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.inpatient_substance_use__generate_encounter_id", "compiled": true, "compiled_code": "\n\nwith claim_start_end as (\n  select\n    claim_id\n    , patient_data_source_id\n    , min(start_date) as start_date\n    , max(end_date) as end_date\n  from tuva.claims_preprocessing.encounters__stg_medical_claim\n  group by claim_id, patient_data_source_id\n)\n\n, base as (\n  select distinct\n    enc.claim_id\n    , enc.patient_data_source_id\n    , c.start_date\n    , c.end_date\n    , enc.facility_id\n    , enc.discharge_disposition_code\n  from tuva.claims_preprocessing.encounters__stg_medical_claim as enc\n  inner join claim_start_end as c\n    on enc.claim_id = c.claim_id\n    and c.patient_data_source_id = enc.patient_data_source_id\n  where\n    enc.service_category_2 = 'inpatient substance use'\n    and enc.claim_type = 'institutional'\n)\n\n, add_row_num as (\n  select\n    patient_data_source_id\n    , claim_id\n    , start_date\n    , end_date\n    , discharge_disposition_code\n    , facility_id\n    , row_number() over (partition by patient_data_source_id\norder by end_date, start_date, claim_id) as row_num\n  from base\n)\n\n, check_for_merges_with_larger_row_num as (\n  select\n    aa.patient_data_source_id\n    , aa.claim_id as claim_id_a\n    , bb.claim_id as claim_id_b\n    , aa.row_num as row_num_a\n    , bb.row_num as row_num_b\n    , case\n      when aa.end_date = bb.end_date and aa.facility_id = bb.facility_id then 1\n      when \n\n    dateadd(\n        day,\n        1,\n        aa.end_date\n        )\n\n = bb.start_date\n        and aa.facility_id = bb.facility_id\n        and aa.discharge_disposition_code = '30' then 1\n      when aa.end_date <> bb.end_date\n        and aa.end_date > bb.start_date\n        and aa.facility_id = bb.facility_id then 1\n      else 0\n    end as merge_flag\n  from add_row_num as aa\n  inner join add_row_num as bb\n    on aa.patient_data_source_id = bb.patient_data_source_id\n    and aa.row_num < bb.row_num\n    and aa.claim_id <> bb.claim_id\n)\n\n\n, merges_with_larger_row_num as (\n  select\n      patient_data_source_id\n    , claim_id_a\n    , claim_id_b\n    , row_num_a\n    , row_num_b\n    , merge_flag\n  from check_for_merges_with_larger_row_num\n  where merge_flag = 1\n)\n\n, claim_ids_that_merge_with_larger_row_num as (\n  select distinct\n      claim_id_a as claim_id\n  from merges_with_larger_row_num\n)\n\n, claim_ids_having_a_smaller_row_num_merging_with_a_larger_row_num as (\n  select distinct\n      aa.claim_id as claim_id\n  from add_row_num as aa\n  inner join merges_with_larger_row_num as bb\n    on aa.patient_data_source_id = bb.patient_data_source_id\n    and bb.row_num_a < aa.row_num\n    and bb.row_num_b > aa.row_num\n)\n\n, close_flags as (\n  select\n      aa.patient_data_source_id\n    , aa.claim_id\n    , aa.start_date\n    , aa.end_date\n    , aa.discharge_disposition_code\n    , aa.facility_id\n    , aa.row_num\n    , case\n        when bb.claim_id is null\n          and cc.claim_id is null then 1\n        else 0\n      end as close_flag\n  from add_row_num as aa\n  left outer join claim_ids_that_merge_with_larger_row_num as bb\n    on aa.claim_id = bb.claim_id\n  left outer join claim_ids_having_a_smaller_row_num_merging_with_a_larger_row_num as cc\n    on aa.claim_id = cc.claim_id\n)\n\n, join_every_row_to_later_closes as (\n  select\n      aa.patient_data_source_id\n    , aa.claim_id\n    , aa.row_num\n    , bb.row_num as row_num_b\n  from close_flags as aa\n  inner join close_flags as bb\n    on aa.patient_data_source_id = bb.patient_data_source_id\n    and aa.row_num <= bb.row_num\n  where bb.close_flag = 1\n)\n\n, find_min_closing_row_num_for_every_claim as (\n  select\n      patient_data_source_id\n    , claim_id\n    , min(row_num_b) as min_closing_row\n  from join_every_row_to_later_closes\n  group by\n      patient_data_source_id\n    , claim_id\n)\n\n, add_min_closing_row_to_every_claim as (\n  select\n      aa.patient_data_source_id\n    , aa.claim_id\n    , aa.start_date\n    , aa.end_date\n    , aa.discharge_disposition_code\n    , aa.facility_id\n    , aa.row_num\n    , aa.close_flag\n    , bb.min_closing_row\n  from close_flags as aa\n  left outer join find_min_closing_row_num_for_every_claim as bb\n    on aa.patient_data_source_id = bb.patient_data_source_id\n    and aa.claim_id = bb.claim_id\n)\n\n, add_encounter_id as (\n  select\n      aa.patient_data_source_id\n    , aa.claim_id\n    , aa.start_date\n    , aa.end_date\n    , aa.discharge_disposition_code\n    , aa.facility_id\n    , aa.row_num\n    , aa.close_flag\n    , aa.min_closing_row\n    , bb.claim_id as encounter_id\n  from add_min_closing_row_to_every_claim as aa\n  left outer join add_min_closing_row_to_every_claim as bb\n    on aa.patient_data_source_id = bb.patient_data_source_id\n    and aa.min_closing_row = bb.row_num\n)\n\nselect\n    patient_data_source_id\n  , claim_id\n  , start_date\n  , end_date\n  , discharge_disposition_code\n  , facility_id\n  , row_number() over (partition by encounter_id\norder by start_date, end_date, claim_id) as encounter_claim_number\n  , row_number() over (partition by encounter_id\norder by start_date desc, end_date desc, claim_id desc) as encounter_claim_number_desc\n  , close_flag\n  , min_closing_row\n  , dense_rank() over (\norder by encounter_id) as encounter_id\nfrom add_encounter_id", "relation_name": "tuva.claims_preprocessing.inpatient_substance_use__generate_encounter_id", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:27.083588Z", "completed_at": "2025-06-03T19:50:27.091001Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:27.092134Z", "completed_at": "2025-06-03T19:50:27.092137Z"}], "thread_id": "Thread-2", "execution_time": 0.016209125518798828, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.lab__anchor_events", "compiled": true, "compiled_code": "\n\nwith service_category as (\n  select distinct\n      claim_id\n    , patient_data_source_id\n    , start_date\n  from tuva.claims_preprocessing.encounters__stg_medical_claim\n  where\n    service_category_2 = 'lab' --both inst and prof\n\n)\n\nselect distinct\nclaim_id\n, '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom service_category", "relation_name": "tuva.claims_preprocessing.lab__anchor_events", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:27.093689Z", "completed_at": "2025-06-03T19:50:27.119045Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:27.119981Z", "completed_at": "2025-06-03T19:50:27.119989Z"}], "thread_id": "Thread-1", "execution_time": 0.028446197509765625, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.office_visits__int_office_visits", "compiled": true, "compiled_code": "\n\nwith anchor as (\n    select distinct\n        mc.patient_data_source_id\n      , mc.start_date\n      , mc.claim_id\n      , mc.claim_line_number\n      , mc.service_category_1\n      , mc.service_category_2\n      , mc.service_category_3\n    from tuva.claims_preprocessing.encounters__stg_medical_claim as mc\n    inner join tuva.claims_preprocessing._int_combined_professional as p -- joining in all sc regardless of final priority\n      on mc.claim_id = p.claim_id\n      and mc.claim_line_number = p.claim_line_number\n    where p.service_category_1 = 'office-based'\n)\n\nselect\n    patient_data_source_id\n  , start_date\n  , claim_id\n  , claim_line_number\n  , service_category_1\n  , service_category_2\n  , service_category_3\n  , dense_rank() over (\norder by patient_data_source_id, start_date) as old_encounter_id\nfrom anchor", "relation_name": "tuva.claims_preprocessing.office_visits__int_office_visits", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:27.099482Z", "completed_at": "2025-06-03T19:50:27.120450Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:27.120989Z", "completed_at": "2025-06-03T19:50:27.120993Z"}], "thread_id": "Thread-3", "execution_time": 0.029163122177124023, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.outpatient_hospice__anchor_events", "compiled": true, "compiled_code": "\n\nwith service_category as (\n  select distinct\n      claim_id\n    , patient_data_source_id\n    , start_date\n  from tuva.claims_preprocessing.encounters__stg_medical_claim\n  where\n    service_category_2 = 'outpatient hospice' --both inst and prof\n\n)\n\nselect distinct\nclaim_id\n, '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom service_category", "relation_name": "tuva.claims_preprocessing.outpatient_hospice__anchor_events", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:27.108181Z", "completed_at": "2025-06-03T19:50:27.121524Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:27.122485Z", "completed_at": "2025-06-03T19:50:27.122489Z"}], "thread_id": "Thread-4", "execution_time": 0.029103994369506836, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.outpatient_hospital_or_clinic__anchor_events", "compiled": true, "compiled_code": "\n\nwith service_category as (\n    select distinct\n        claim_id\n      , patient_data_source_id\n      , start_date\n    from tuva.claims_preprocessing.encounters__stg_medical_claim\n    where\n      service_category_2 in (\n          'outpatient hospital or clinic' -- both prof and inst\n        , 'observation' -- orphaned obs that didn't roll up to other encounter\n      )\n)\n\nselect distinct\n    claim_id\n  , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom service_category", "relation_name": "tuva.claims_preprocessing.outpatient_hospital_or_clinic__anchor_events", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:27.113331Z", "completed_at": "2025-06-03T19:50:27.122009Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:27.123091Z", "completed_at": "2025-06-03T19:50:27.123095Z"}], "thread_id": "Thread-2", "execution_time": 0.015872955322265625, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.outpatient_injections__anchor_events", "compiled": true, "compiled_code": "\n\nwith multiple_sources as (\nselect distinct\n    med.patient_data_source_id\n    , med.start_date\nfrom tuva.claims_preprocessing.encounters__stg_medical_claim as med\ninner join tuva.claims_preprocessing.encounters__stg_outpatient_institutional as outpatient\n    on med.claim_id = outpatient.claim_id\nwhere substring(med.hcpcs_code, 1, 1) = 'J'\n)\n\n\nselect distinct\n    patient_data_source_id\n    , start_date\n, '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom multiple_sources", "relation_name": "tuva.claims_preprocessing.outpatient_injections__anchor_events", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:27.123980Z", "completed_at": "2025-06-03T19:50:27.136171Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:27.143035Z", "completed_at": "2025-06-03T19:50:27.143043Z"}], "thread_id": "Thread-1", "execution_time": 0.021348237991333008, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.outpatient_psych__anchor_events", "compiled": true, "compiled_code": "\n\nwith service_category as (\n  select distinct\n      claim_id\n    , patient_data_source_id\n    , start_date\n  from tuva.claims_preprocessing.encounters__stg_medical_claim\n  where\n    service_category_2 = 'outpatient psychiatric' --both inst and prof as anchor\n)\n\nselect distinct\nclaim_id\n, '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom service_category", "relation_name": "tuva.claims_preprocessing.outpatient_psych__anchor_events", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:27.130401Z", "completed_at": "2025-06-03T19:50:27.148473Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:27.149151Z", "completed_at": "2025-06-03T19:50:27.149157Z"}], "thread_id": "Thread-3", "execution_time": 0.025784969329833984, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.outpatient_ptotst__anchor_events", "compiled": true, "compiled_code": "\n\nwith service_category as (\n  select distinct\n      claim_id\n    , patient_data_source_id\n    , start_date\n  from tuva.claims_preprocessing.encounters__stg_medical_claim\n  where\n    service_category_2 = 'outpatient pt/ot/st' --both inst and prof as anchor\n)\n\nselect distinct\nclaim_id\n, '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom service_category", "relation_name": "tuva.claims_preprocessing.outpatient_ptotst__anchor_events", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:27.136660Z", "completed_at": "2025-06-03T19:50:27.149530Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:27.150561Z", "completed_at": "2025-06-03T19:50:27.150564Z"}], "thread_id": "Thread-4", "execution_time": 0.020802021026611328, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.outpatient_radiology__anchor_events", "compiled": true, "compiled_code": "\n\nwith service_category as (\n  select distinct\n    patient_data_source_id\n    , start_date\n    , hcpcs_code\n  from tuva.claims_preprocessing.encounters__stg_medical_claim\n  where\n    service_category_2 = 'outpatient radiology' --both professional and inst\n)\n\nselect distinct\n    patient_data_source_id\n    , start_date\n    , hcpcs_code\n, '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom service_category", "relation_name": "tuva.claims_preprocessing.outpatient_radiology__anchor_events", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:27.143453Z", "completed_at": "2025-06-03T19:50:27.150369Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:27.151406Z", "completed_at": "2025-06-03T19:50:27.151411Z"}], "thread_id": "Thread-2", "execution_time": 0.021325111389160156, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.outpatient_rehab__anchor_events", "compiled": true, "compiled_code": "\n\nwith service_category as (\n  select distinct\n      claim_id\n    , patient_data_source_id\n    , start_date\n  from tuva.claims_preprocessing.encounters__stg_medical_claim\n  where\n    service_category_2 = 'outpatient rehabilitation'\n)\n\nselect distinct\nclaim_id\n, '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom service_category", "relation_name": "tuva.claims_preprocessing.outpatient_rehab__anchor_events", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:27.152130Z", "completed_at": "2025-06-03T19:50:27.164754Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:27.170486Z", "completed_at": "2025-06-03T19:50:27.170494Z"}], "thread_id": "Thread-1", "execution_time": 0.02082204818725586, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.outpatient_substance_use__anchor_events", "compiled": true, "compiled_code": "\n\nwith service_category as (\n  select distinct\n      claim_id\n    , patient_data_source_id\n    , start_date\n  from tuva.claims_preprocessing.encounters__stg_medical_claim\n  where\n    service_category_2 = 'outpatient substance use'\n    and claim_type = 'institutional'\n)\n\nselect distinct\nclaim_id\n, '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom service_category", "relation_name": "tuva.claims_preprocessing.outpatient_substance_use__anchor_events", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:27.159039Z", "completed_at": "2025-06-03T19:50:27.170890Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:27.175980Z", "completed_at": "2025-06-03T19:50:27.175985Z"}], "thread_id": "Thread-3", "execution_time": 0.024897098541259766, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.outpatient_surgery__anchor_events", "compiled": true, "compiled_code": "\n\nwith service_category as (\n  select distinct\n      claim_id\n    , patient_data_source_id\n    , start_date\n  from tuva.claims_preprocessing.encounters__stg_medical_claim\n  where\n    service_category_2 in ('outpatient surgery') --both inst and prof anchor\n)\n\nselect distinct\nclaim_id\n, '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom service_category", "relation_name": "tuva.claims_preprocessing.outpatient_surgery__anchor_events", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:27.165188Z", "completed_at": "2025-06-03T19:50:27.176764Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:27.177680Z", "completed_at": "2025-06-03T19:50:27.177684Z"}], "thread_id": "Thread-4", "execution_time": 0.01905989646911621, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.urgent_care__anchor_events", "compiled": true, "compiled_code": "\n\n  select distinct\n      claim_id\n  from tuva.claims_preprocessing.encounters__stg_medical_claim\n  where\n    service_category_2 in ('urgent care') --both inst and prof anchor", "relation_name": "tuva.claims_preprocessing.urgent_care__anchor_events", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:27.171112Z", "completed_at": "2025-06-03T19:50:27.177489Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:27.182735Z", "completed_at": "2025-06-03T19:50:27.182740Z"}], "thread_id": "Thread-2", "execution_time": 0.018619775772094727, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.acute_inpatient__start_end_dates", "compiled": true, "compiled_code": "\n\nselect encounter_id\n, min(start_date) as encounter_start_date\n, max(end_date) as encounter_end_date\nfrom tuva.claims_preprocessing.acute_inpatient__generate_encounter_id\ngroup by encounter_id", "relation_name": "tuva.claims_preprocessing.acute_inpatient__start_end_dates", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:27.178258Z", "completed_at": "2025-06-03T19:50:27.189956Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:27.192802Z", "completed_at": "2025-06-03T19:50:27.192808Z"}], "thread_id": "Thread-1", "execution_time": 0.016358137130737305, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.ambulance__generate_encounter_id", "compiled": true, "compiled_code": "\n\nwith anchor as (\nselect distinct m.patient_data_source_id\n , m.start_date\n , m.claim_id\nfrom tuva.claims_preprocessing.encounters__stg_medical_claim as m\ninner join tuva.claims_preprocessing.ambulance__anchor_events as u on m.claim_id = u.claim_id\n)\n\nselect patient_data_source_id\n, start_date\n, claim_id\n, dense_rank() over (\norder by patient_data_source_id, start_date) as old_encounter_id\nfrom anchor", "relation_name": "tuva.claims_preprocessing.ambulance__generate_encounter_id", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:27.184198Z", "completed_at": "2025-06-03T19:50:27.203156Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:27.203869Z", "completed_at": "2025-06-03T19:50:27.203875Z"}], "thread_id": "Thread-3", "execution_time": 0.025900602340698242, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.asc__generate_encounter_id", "compiled": true, "compiled_code": "\n\nwith base_data as (\n    select distinct\n        m.patient_data_source_id\n      , m.start_date\n      , m.end_date\n      , m.claim_id\n    from tuva.claims_preprocessing.encounters__stg_medical_claim as m\n    inner join tuva.claims_preprocessing.asc__anchor_events as u\n      on m.claim_id = u.claim_id\n)\n\n-- Determine Previous Maximum End Date\n, grouped_data as (\n    select\n        bd.*\n      , max(end_date) over (\n            partition by patient_data_source_id\n            order by start_date, claim_id\n            rows between unbounded preceding and 1 preceding\n        ) as previous_max_end_date\n    from base_data as bd\n)\n\n-- Flag New Encounter Groups\n, flagged_data as (\n    select\n        gd.*\n      , case\n            when start_date > coalesce(previous_max_end_date, \n    cast('1900-01-01' as date)\n     ) then 1\n            else 0\n        end as new_group_flag\n    from grouped_data as gd\n)\n\n-- Assign Encounter Groups per Patient\n, numbered_data as (\n    select\n        fd.*\n      , sum(new_group_flag) over (\n            partition by patient_data_source_id\n            order by start_date, claim_id\n            rows unbounded preceding\n        ) as encounter_group\n    from flagged_data as fd\n)\n\n-- Identify Unique Encounters\n, unique_encounters as (\n    select\n        patient_data_source_id\n      , encounter_group\n      , min(start_date) as encounter_start_date\n    from numbered_data\n    group by\n        patient_data_source_id\n      , encounter_group\n)\n\n-- Assign asc encounter_id\n, numbered_encounters as (\n    select\n        patient_data_source_id\n      , encounter_group\n      , row_number() over (\n            order by patient_data_source_id, encounter_start_date\n        ) as encounter_id\n    from unique_encounters\n)\n\n-- Merge Encounters with Claims\nselect\n    nd.patient_data_source_id\n  , nd.start_date\n  , nd.end_date\n  , nd.claim_id\n  , ne.encounter_id as old_encounter_id\nfrom numbered_data as nd\ninner join numbered_encounters as ne\n  on nd.patient_data_source_id = ne.patient_data_source_id\n  and nd.encounter_group = ne.encounter_group", "relation_name": "tuva.claims_preprocessing.asc__generate_encounter_id", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:27.193441Z", "completed_at": "2025-06-03T19:50:27.204267Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:27.205134Z", "completed_at": "2025-06-03T19:50:27.205137Z"}], "thread_id": "Thread-4", "execution_time": 0.021247148513793945, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.dialysis__generate_encounter_id", "compiled": true, "compiled_code": "\n\nwith anchor as (\nselect distinct m.patient_data_source_id\n , m.start_date\n , m.claim_id\nfrom tuva.claims_preprocessing.encounters__stg_medical_claim as m\ninner join tuva.claims_preprocessing.dialysis__anchor_events as u on m.claim_id = u.claim_id\n)\n\nselect patient_data_source_id\n, start_date\n, claim_id\n, dense_rank() over (\norder by patient_data_source_id, start_date) as old_encounter_id\nfrom anchor", "relation_name": "tuva.claims_preprocessing.dialysis__generate_encounter_id", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:27.198084Z", "completed_at": "2025-06-03T19:50:27.204899Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:27.210260Z", "completed_at": "2025-06-03T19:50:27.210266Z"}], "thread_id": "Thread-2", "execution_time": 0.018023967742919922, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.dme__generate_encounter_id", "compiled": true, "compiled_code": "\n\nwith anchor as (\nselect distinct m.patient_data_source_id\n , m.start_date\n , m.claim_id\nfrom tuva.claims_preprocessing.encounters__stg_medical_claim as m\ninner join tuva.claims_preprocessing.dme__anchor_events as u on m.claim_id = u.claim_id\n)\n\nselect patient_data_source_id\n, start_date\n, claim_id\n, dense_rank() over (\norder by patient_data_source_id, start_date) as old_encounter_id\nfrom anchor", "relation_name": "tuva.claims_preprocessing.dme__generate_encounter_id", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:27.205517Z", "completed_at": "2025-06-03T19:50:27.211648Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:27.217425Z", "completed_at": "2025-06-03T19:50:27.217431Z"}], "thread_id": "Thread-1", "execution_time": 0.013991832733154297, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.home_health__generate_encounter_id", "compiled": true, "compiled_code": "\n\nwith anchor as (\nselect distinct m.patient_data_source_id\n , m.start_date\n , m.claim_id\nfrom tuva.claims_preprocessing.encounters__stg_medical_claim as m\ninner join tuva.claims_preprocessing.home_health__anchor_events as u on m.claim_id = u.claim_id\n)\n\nselect patient_data_source_id\n, start_date\n, claim_id\n, dense_rank() over (\norder by patient_data_source_id, start_date) as old_encounter_id\nfrom anchor", "relation_name": "tuva.claims_preprocessing.home_health__generate_encounter_id", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:27.211918Z", "completed_at": "2025-06-03T19:50:27.222798Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:27.227904Z", "completed_at": "2025-06-03T19:50:27.227910Z"}], "thread_id": "Thread-3", "execution_time": 0.01795816421508789, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.inpatient_hospice__start_end_dates", "compiled": true, "compiled_code": "\n\nselect encounter_id\n, min(start_date) as encounter_start_date\n, max(end_date) as encounter_end_date\nfrom tuva.claims_preprocessing.inpatient_hospice__generate_encounter_id\ngroup by encounter_id", "relation_name": "tuva.claims_preprocessing.inpatient_hospice__start_end_dates", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:27.218079Z", "completed_at": "2025-06-03T19:50:27.228334Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:27.229044Z", "completed_at": "2025-06-03T19:50:27.229049Z"}], "thread_id": "Thread-4", "execution_time": 0.017674922943115234, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.emergency_department__generate_encounter_id", "compiled": true, "compiled_code": "\n\n\nselect\n    patient_data_source_id\n  , claim_id\n  , start_date\n  , end_date\n  , discharge_disposition_code\n  , facility_id\n  , row_number() over (partition by encounter_id\norder by start_date, end_date, claim_id) as encounter_claim_number\n  , row_number() over (partition by encounter_id\norder by start_date desc, end_date desc, claim_id desc) as encounter_claim_number_desc\n  , close_flag\n  , min_closing_row\n  , dense_rank() over (\norder by encounter_id) as encounter_id\nfrom tuva.claims_preprocessing.emergency_department__generate_encounter_id_pre_sort", "relation_name": "tuva.claims_preprocessing.emergency_department__generate_encounter_id", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:27.223092Z", "completed_at": "2025-06-03T19:50:27.229385Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:27.235523Z", "completed_at": "2025-06-03T19:50:27.235529Z"}], "thread_id": "Thread-2", "execution_time": 0.018662214279174805, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.inpatient_psych__start_end_dates", "compiled": true, "compiled_code": "\n\nselect encounter_id\n, min(start_date) as encounter_start_date\n, max(end_date) as encounter_end_date\nfrom tuva.claims_preprocessing.inpatient_psych__generate_encounter_id\ngroup by encounter_id", "relation_name": "tuva.claims_preprocessing.inpatient_psych__start_end_dates", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:27.229639Z", "completed_at": "2025-06-03T19:50:27.236614Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:27.241739Z", "completed_at": "2025-06-03T19:50:27.241744Z"}], "thread_id": "Thread-1", "execution_time": 0.01417994499206543, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.inpatient_rehab__start_end_dates", "compiled": true, "compiled_code": "\n\nselect encounter_id\n, min(start_date) as encounter_start_date\n, max(end_date) as encounter_end_date\nfrom tuva.claims_preprocessing.inpatient_rehab__generate_encounter_id\ngroup by encounter_id", "relation_name": "tuva.claims_preprocessing.inpatient_rehab__start_end_dates", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:27.236856Z", "completed_at": "2025-06-03T19:50:27.247892Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:27.253284Z", "completed_at": "2025-06-03T19:50:27.253291Z"}], "thread_id": "Thread-3", "execution_time": 0.018385887145996094, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.inpatient_snf__start_end_dates", "compiled": true, "compiled_code": "\n\nselect encounter_id\n, min(start_date) as encounter_start_date\n, max(end_date) as encounter_end_date\nfrom tuva.claims_preprocessing.inpatient_snf__generate_encounter_id\ngroup by encounter_id", "relation_name": "tuva.claims_preprocessing.inpatient_snf__start_end_dates", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:27.242146Z", "completed_at": "2025-06-03T19:50:27.253707Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:27.254432Z", "completed_at": "2025-06-03T19:50:27.254436Z"}], "thread_id": "Thread-4", "execution_time": 0.01831817626953125, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.inpatient_substance_use__start_end_dates", "compiled": true, "compiled_code": "\n\nselect encounter_id\n, min(start_date) as encounter_start_date\n, max(end_date) as encounter_end_date\nfrom tuva.claims_preprocessing.inpatient_substance_use__generate_encounter_id\ngroup by encounter_id", "relation_name": "tuva.claims_preprocessing.inpatient_substance_use__start_end_dates", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:27.248202Z", "completed_at": "2025-06-03T19:50:27.254832Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:27.259890Z", "completed_at": "2025-06-03T19:50:27.259896Z"}], "thread_id": "Thread-2", "execution_time": 0.018470048904418945, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.lab__generate_encounter_id", "compiled": true, "compiled_code": "\n\nwith anchor as (\nselect distinct m.patient_data_source_id\n , m.start_date\n , m.claim_id\nfrom tuva.claims_preprocessing.encounters__stg_medical_claim as m\ninner join tuva.claims_preprocessing.lab__anchor_events as u on m.claim_id = u.claim_id\n)\n\nselect patient_data_source_id\n, start_date\n, claim_id\n, dense_rank() over (\norder by patient_data_source_id, start_date) as old_encounter_id\nfrom anchor", "relation_name": "tuva.claims_preprocessing.lab__generate_encounter_id", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:27.255061Z", "completed_at": "2025-06-03T19:50:27.261074Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:27.267227Z", "completed_at": "2025-06-03T19:50:27.267233Z"}], "thread_id": "Thread-1", "execution_time": 0.014297962188720703, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.office_visits__int_office_visits_em", "compiled": true, "compiled_code": "\n\nselect distinct\n    ov.patient_data_source_id\n    , ov.start_date\n    , ov.claim_id\n    , ov.claim_line_number\n    , ov.old_encounter_id\nfrom tuva.claims_preprocessing.office_visits__int_office_visits as ov\nwhere service_category_2 = 'office-based visit'", "relation_name": "tuva.claims_preprocessing.office_visits__int_office_visits_em", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:27.261284Z", "completed_at": "2025-06-03T19:50:27.272358Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:27.278549Z", "completed_at": "2025-06-03T19:50:27.278556Z"}], "thread_id": "Thread-3", "execution_time": 0.019240140914916992, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.office_visits__int_office_visits_injections", "compiled": true, "compiled_code": "\n\nselect distinct\n    ov.patient_data_source_id\n    , ov.start_date\n    , ov.claim_id\n    , ov.claim_line_number\n    , ov.old_encounter_id\nfrom tuva.claims_preprocessing.office_visits__int_office_visits as ov\ninner join tuva.claims_preprocessing.encounters__stg_medical_claim as mc on mc.claim_id = ov.claim_id\n    and mc.claim_line_number = ov.claim_line_number\nwhere substring(hcpcs_code, 1, 1) = 'J'", "relation_name": "tuva.claims_preprocessing.office_visits__int_office_visits_injections", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:27.267639Z", "completed_at": "2025-06-03T19:50:27.278924Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:27.281113Z", "completed_at": "2025-06-03T19:50:27.281117Z"}], "thread_id": "Thread-4", "execution_time": 0.020602941513061523, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.office_visits__int_office_visits_ptotst", "compiled": true, "compiled_code": "\n\nselect distinct\n    ov.patient_data_source_id\n    , ov.start_date\n    , ov.claim_id\n    , ov.claim_line_number\n    , ov.old_encounter_id\nfrom tuva.claims_preprocessing.office_visits__int_office_visits as ov\nwhere service_category_2 = 'office-based pt/ot/st'", "relation_name": "tuva.claims_preprocessing.office_visits__int_office_visits_ptotst", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:27.272649Z", "completed_at": "2025-06-03T19:50:27.285851Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:27.286616Z", "completed_at": "2025-06-03T19:50:27.286621Z"}], "thread_id": "Thread-2", "execution_time": 0.019702672958374023, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.office_visits__int_office_visits_radiology", "compiled": true, "compiled_code": "\n\nwith max_encounter as (\n    select max(old_encounter_id) as max_encounter_id\n    from tuva.claims_preprocessing.office_visits__int_office_visits\n)\n\nselect distinct\n    ov.patient_data_source_id\n    , ov.start_date\n    , ov.claim_id\n    , ov.claim_line_number\n    , mc.hcpcs_code\n    , dense_rank() over (\norder by ov.patient_data_source_id, ov.start_date, mc.hcpcs_code) + mx.max_encounter_id as old_encounter_id\nfrom tuva.claims_preprocessing.office_visits__int_office_visits as ov\ncross join max_encounter as mx\ninner join tuva.claims_preprocessing.encounters__stg_medical_claim as mc on mc.claim_id = ov.claim_id\n    and mc.claim_line_number = ov.claim_line_number\ninner join tuva.claims_preprocessing.service_category__office_based_radiology as scrad on mc.claim_id = scrad.claim_id\n    and mc.claim_line_number = scrad.claim_line_number", "relation_name": "tuva.claims_preprocessing.office_visits__int_office_visits_radiology", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:27.281517Z", "completed_at": "2025-06-03T19:50:27.287473Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:27.293091Z", "completed_at": "2025-06-03T19:50:27.293097Z"}], "thread_id": "Thread-1", "execution_time": 0.014890909194946289, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.office_visits__int_office_visits_surgery", "compiled": true, "compiled_code": "\n\nselect distinct\n    ov.patient_data_source_id\n    , ov.start_date\n    , ov.claim_id\n    , ov.claim_line_number\n    , ov.old_encounter_id\nfrom tuva.claims_preprocessing.office_visits__int_office_visits as ov\nwhere service_category_2 = 'office-based surgery'", "relation_name": "tuva.claims_preprocessing.office_visits__int_office_visits_surgery", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:27.287907Z", "completed_at": "2025-06-03T19:50:27.298620Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:27.303708Z", "completed_at": "2025-06-03T19:50:27.303714Z"}], "thread_id": "Thread-3", "execution_time": 0.017704010009765625, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.office_visits__int_office_visits_telehealth", "compiled": true, "compiled_code": "\n\nselect distinct\n    ov.patient_data_source_id\n    , ov.start_date\n    , ov.claim_id\n    , ov.claim_line_number\n    , ov.old_encounter_id\nfrom tuva.claims_preprocessing.office_visits__int_office_visits as ov\nwhere service_category_2 = 'telehealth visit'", "relation_name": "tuva.claims_preprocessing.office_visits__int_office_visits_telehealth", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:27.293737Z", "completed_at": "2025-06-03T19:50:27.303501Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:27.304320Z", "completed_at": "2025-06-03T19:50:27.304324Z"}], "thread_id": "Thread-4", "execution_time": 0.017126798629760742, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.outpatient_hospice__generate_encounter_id", "compiled": true, "compiled_code": "\n\nwith anchor as (\nselect distinct m.patient_data_source_id\n , m.start_date\n , m.claim_id\nfrom tuva.claims_preprocessing.encounters__stg_medical_claim as m\ninner join tuva.claims_preprocessing.outpatient_hospice__anchor_events as u on m.claim_id = u.claim_id\n)\n\nselect patient_data_source_id\n, start_date\n, claim_id\n, dense_rank() over (\norder by patient_data_source_id, start_date) as old_encounter_id\nfrom anchor", "relation_name": "tuva.claims_preprocessing.outpatient_hospice__generate_encounter_id", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:27.299121Z", "completed_at": "2025-06-03T19:50:27.309969Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:27.310751Z", "completed_at": "2025-06-03T19:50:27.310756Z"}], "thread_id": "Thread-2", "execution_time": 0.01735973358154297, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.outpatient_hospital_or_clinic__generate_encounter_id", "compiled": true, "compiled_code": "\n\nwith anchor as (\nselect distinct m.patient_data_source_id\n , m.start_date\n , m.claim_id\nfrom tuva.claims_preprocessing.encounters__stg_medical_claim as m\ninner join tuva.claims_preprocessing.outpatient_hospital_or_clinic__anchor_events as u on m.claim_id = u.claim_id\n)\n\nselect patient_data_source_id\n, start_date\n, claim_id\n, dense_rank() over (\norder by patient_data_source_id, start_date) as old_encounter_id\nfrom anchor", "relation_name": "tuva.claims_preprocessing.outpatient_hospital_or_clinic__generate_encounter_id", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:27.304939Z", "completed_at": "2025-06-03T19:50:27.311598Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:27.316837Z", "completed_at": "2025-06-03T19:50:27.316843Z"}], "thread_id": "Thread-1", "execution_time": 0.018035888671875, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.outpatient_injections__generate_encounter_id", "compiled": true, "compiled_code": "\n\nselect patient_data_source_id\n, start_date\n, dense_rank() over (\norder by patient_data_source_id, start_date) as old_encounter_id\nfrom tuva.claims_preprocessing.outpatient_injections__anchor_events", "relation_name": "tuva.claims_preprocessing.outpatient_injections__generate_encounter_id", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:27.312274Z", "completed_at": "2025-06-03T19:50:27.322977Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:27.327712Z", "completed_at": "2025-06-03T19:50:27.327718Z"}], "thread_id": "Thread-3", "execution_time": 0.017333984375, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.outpatient_psych__generate_encounter_id", "compiled": true, "compiled_code": "\n\nwith anchor as (\nselect distinct m.patient_data_source_id\n , m.start_date\n , m.claim_id\nfrom tuva.claims_preprocessing.encounters__stg_medical_claim as m\ninner join tuva.claims_preprocessing.outpatient_psych__anchor_events as u on m.claim_id = u.claim_id\n)\n\nselect patient_data_source_id\n, start_date\n, claim_id\n, dense_rank() over (\norder by patient_data_source_id, start_date) as old_encounter_id\nfrom anchor", "relation_name": "tuva.claims_preprocessing.outpatient_psych__generate_encounter_id", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:27.317462Z", "completed_at": "2025-06-03T19:50:27.328298Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:27.333222Z", "completed_at": "2025-06-03T19:50:27.333227Z"}], "thread_id": "Thread-4", "execution_time": 0.022148847579956055, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.outpatient_ptotst__generate_encounter_id", "compiled": true, "compiled_code": "\n\nwith anchor as (\nselect distinct m.patient_data_source_id\n , m.start_date\n , m.claim_id\nfrom tuva.claims_preprocessing.encounters__stg_medical_claim as m\ninner join tuva.claims_preprocessing.outpatient_ptotst__anchor_events as u on m.claim_id = u.claim_id\n)\n\nselect patient_data_source_id\n, start_date\n, claim_id\n, dense_rank() over (\norder by patient_data_source_id, start_date) as old_encounter_id\nfrom anchor", "relation_name": "tuva.claims_preprocessing.outpatient_ptotst__generate_encounter_id", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:27.323520Z", "completed_at": "2025-06-03T19:50:27.333592Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:27.334378Z", "completed_at": "2025-06-03T19:50:27.334382Z"}], "thread_id": "Thread-2", "execution_time": 0.01721477508544922, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.outpatient_radiology__generate_encounter_id", "compiled": true, "compiled_code": "\n\nselect patient_data_source_id\n, start_date\n, hcpcs_code\n, dense_rank() over (\norder by patient_data_source_id, start_date, hcpcs_code) as old_encounter_id\nfrom tuva.claims_preprocessing.outpatient_radiology__anchor_events", "relation_name": "tuva.claims_preprocessing.outpatient_radiology__generate_encounter_id", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:27.328815Z", "completed_at": "2025-06-03T19:50:27.334782Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:27.335675Z", "completed_at": "2025-06-03T19:50:27.335679Z"}], "thread_id": "Thread-1", "execution_time": 0.012504100799560547, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.outpatient_rehab__generate_encounter_id", "compiled": true, "compiled_code": "\n\nwith anchor as (\nselect distinct m.patient_data_source_id\n , m.start_date\n , m.claim_id\nfrom tuva.claims_preprocessing.encounters__stg_medical_claim as m\ninner join tuva.claims_preprocessing.outpatient_rehab__anchor_events as u on m.claim_id = u.claim_id\n)\n\nselect patient_data_source_id\n, start_date\n, claim_id\n, dense_rank() over (\norder by patient_data_source_id, start_date) as old_encounter_id\nfrom anchor", "relation_name": "tuva.claims_preprocessing.outpatient_rehab__generate_encounter_id", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:27.336046Z", "completed_at": "2025-06-03T19:50:27.346783Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:27.352397Z", "completed_at": "2025-06-03T19:50:27.352404Z"}], "thread_id": "Thread-3", "execution_time": 0.018664121627807617, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.outpatient_substance_use__generate_encounter_id", "compiled": true, "compiled_code": "\nwith anchor as (\nselect distinct m.patient_data_source_id\n , m.start_date\n , m.claim_id\nfrom tuva.claims_preprocessing.encounters__stg_medical_claim as m\ninner join tuva.claims_preprocessing.outpatient_substance_use__anchor_events as u on m.claim_id = u.claim_id\n)\n\nselect patient_data_source_id\n, start_date\n, claim_id\n, dense_rank() over (\norder by patient_data_source_id, start_date) as old_encounter_id\nfrom anchor", "relation_name": "tuva.claims_preprocessing.outpatient_substance_use__generate_encounter_id", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:27.341979Z", "completed_at": "2025-06-03T19:50:27.352804Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:27.358067Z", "completed_at": "2025-06-03T19:50:27.358072Z"}], "thread_id": "Thread-4", "execution_time": 0.022943973541259766, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.outpatient_surgery__generate_encounter_id", "compiled": true, "compiled_code": "\nwith anchor as (\nselect distinct m.patient_data_source_id\n , m.start_date\n , m.claim_id\nfrom tuva.claims_preprocessing.encounters__stg_medical_claim as m\ninner join tuva.claims_preprocessing.outpatient_surgery__anchor_events as u on m.claim_id = u.claim_id\n)\n\nselect patient_data_source_id\n, start_date\n, claim_id\n, dense_rank() over (\norder by patient_data_source_id, start_date) as old_encounter_id\nfrom anchor", "relation_name": "tuva.claims_preprocessing.outpatient_surgery__generate_encounter_id", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:27.347034Z", "completed_at": "2025-06-03T19:50:27.358442Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:27.359222Z", "completed_at": "2025-06-03T19:50:27.359226Z"}], "thread_id": "Thread-2", "execution_time": 0.01786208152770996, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.urgent_care__generate_encounter_id", "compiled": true, "compiled_code": "\n\nwith anchor as (\nselect distinct m.patient_data_source_id\n , m.start_date\n , m.claim_id\nfrom tuva.claims_preprocessing.encounters__stg_medical_claim as m\ninner join tuva.claims_preprocessing.urgent_care__anchor_events as u on m.claim_id = u.claim_id\n)\n\nselect patient_data_source_id\n, start_date\n, claim_id\n, dense_rank() over (\norder by patient_data_source_id, start_date) as old_encounter_id\nfrom anchor", "relation_name": "tuva.claims_preprocessing.urgent_care__generate_encounter_id", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:27.353027Z", "completed_at": "2025-06-03T19:50:27.359834Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:27.365691Z", "completed_at": "2025-06-03T19:50:27.365696Z"}], "thread_id": "Thread-1", "execution_time": 0.01922464370727539, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.acute_inpatient__prof_claims", "compiled": true, "compiled_code": "\n\nwith first_claim as (\n    select *\n    from tuva.claims_preprocessing.acute_inpatient__generate_encounter_id\n    where encounter_claim_number = 1\n)\n\n, join_first_claim_dates as (\n    select f.*\n    , dat.encounter_end_date\n    , dat.encounter_start_date\n    from first_claim as f\n    inner join tuva.claims_preprocessing.acute_inpatient__start_end_dates as dat on f.encounter_id = dat.encounter_id\n)\n\n-- ensuring each prof claim is only attributed to one institutional claim with claim_attribution_number\nselect dat.encounter_id\n, dat.encounter_start_date\n, dat.encounter_end_date\n, prof.claim_id\n, prof.claim_line_number\n, row_number() over (partition by prof.claim_line_id\norder by dat.encounter_id) as claim_attribution_number\nfrom tuva.claims_preprocessing.encounters__stg_medical_claim as med\ninner join tuva.claims_preprocessing.encounters__stg_professional as prof on med.claim_line_id = prof.claim_line_id\ninner join join_first_claim_dates as dat on med.patient_data_source_id = dat.patient_data_source_id\nand med.start_date between dat.encounter_start_date and dat.encounter_end_date", "relation_name": "tuva.claims_preprocessing.acute_inpatient__prof_claims", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:27.360528Z", "completed_at": "2025-06-03T19:50:27.371234Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:27.376190Z", "completed_at": "2025-06-03T19:50:27.376197Z"}], "thread_id": "Thread-3", "execution_time": 0.01756906509399414, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.ambulance__match_claims_to_anchor", "compiled": true, "compiled_code": "\n\nselect distinct m.patient_data_source_id\n , m.start_date\n , m.claim_id\n , m.claim_line_number\n , u.old_encounter_id\nfrom tuva.claims_preprocessing.encounters__stg_medical_claim as m\ninner join tuva.claims_preprocessing.ambulance__generate_encounter_id as u on m.patient_data_source_id = u.patient_data_source_id\nand\nm.start_date = u.start_date\nwhere m.service_category_2 = 'ambulance'", "relation_name": "tuva.claims_preprocessing.ambulance__match_claims_to_anchor", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:27.366840Z", "completed_at": "2025-06-03T19:50:27.376865Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:27.383179Z", "completed_at": "2025-06-03T19:50:27.383186Z"}], "thread_id": "Thread-4", "execution_time": 0.02321004867553711, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.asc__start_end_dates", "compiled": true, "compiled_code": "\n\nselect\n    patient_data_source_id\n  , old_encounter_id\n  , min(start_date) as encounter_start_date\n  , max(end_date) as encounter_end_date\nfrom tuva.claims_preprocessing.asc__generate_encounter_id\ngroup by\n    patient_data_source_id\n  , old_encounter_id", "relation_name": "tuva.claims_preprocessing.asc__start_end_dates", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:27.371724Z", "completed_at": "2025-06-03T19:50:27.383868Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:27.384770Z", "completed_at": "2025-06-03T19:50:27.384775Z"}], "thread_id": "Thread-2", "execution_time": 0.018548011779785156, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.dialysis__match_claims_to_anchor", "compiled": true, "compiled_code": "\n\nselect distinct m.patient_data_source_id\n , m.start_date\n , m.claim_id\n , m.claim_line_number\n , u.old_encounter_id\nfrom tuva.claims_preprocessing.encounters__stg_medical_claim as m\ninner join tuva.claims_preprocessing.dialysis__generate_encounter_id as u on m.patient_data_source_id = u.patient_data_source_id\nand\nm.start_date = u.start_date", "relation_name": "tuva.claims_preprocessing.dialysis__match_claims_to_anchor", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:27.377438Z", "completed_at": "2025-06-03T19:50:27.385110Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:27.390419Z", "completed_at": "2025-06-03T19:50:27.390424Z"}], "thread_id": "Thread-1", "execution_time": 0.01904773712158203, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.dme__match_claims_to_anchor", "compiled": true, "compiled_code": "\n\nselect distinct m.patient_data_source_id\n , m.start_date\n , m.claim_id\n , m.claim_line_number\n , u.old_encounter_id\nfrom tuva.claims_preprocessing.encounters__stg_medical_claim as m\ninner join tuva.claims_preprocessing.dme__generate_encounter_id as u on m.patient_data_source_id = u.patient_data_source_id\nand\nm.start_date = u.start_date\nwhere m.service_category_2 = 'durable medical equipment'", "relation_name": "tuva.claims_preprocessing.dme__match_claims_to_anchor", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:27.385558Z", "completed_at": "2025-06-03T19:50:27.396980Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:27.397766Z", "completed_at": "2025-06-03T19:50:27.397770Z"}], "thread_id": "Thread-3", "execution_time": 0.014225244522094727, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.home_health__match_claims_to_anchor", "compiled": true, "compiled_code": "\n\nselect distinct m.patient_data_source_id\n , m.start_date\n , m.claim_id\n , m.claim_line_number\n , u.old_encounter_id\nfrom tuva.claims_preprocessing.encounters__stg_medical_claim as m\ninner join tuva.claims_preprocessing.home_health__generate_encounter_id as u on m.patient_data_source_id = u.patient_data_source_id\nand\nm.start_date = u.start_date", "relation_name": "tuva.claims_preprocessing.home_health__match_claims_to_anchor", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:27.391565Z", "completed_at": "2025-06-03T19:50:27.402586Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:27.409128Z", "completed_at": "2025-06-03T19:50:27.409137Z"}], "thread_id": "Thread-4", "execution_time": 0.023894071578979492, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.inpatient_hospice__prof_claims", "compiled": true, "compiled_code": "\n\nwith first_claim as (\n    select *\n    from tuva.claims_preprocessing.inpatient_hospice__generate_encounter_id\n    where encounter_claim_number = 1\n)\n\n, join_first_claim_dates as (\n    select f.*\n    , dat.encounter_end_date\n    , dat.encounter_start_date\n    from first_claim as f\n    inner join tuva.claims_preprocessing.inpatient_hospice__start_end_dates as dat on f.encounter_id = dat.encounter_id\n)\n\n-- ensuring each prof claim is only attributed to one institutional claim with claim_attribution_number\nselect dat.encounter_id\n, dat.encounter_start_date\n, dat.encounter_end_date\n, prof.claim_id\n, prof.claim_line_number\n, row_number() over (partition by prof.claim_line_id\norder by dat.encounter_id) as claim_attribution_number\nfrom tuva.claims_preprocessing.encounters__stg_medical_claim as med\ninner join tuva.claims_preprocessing.encounters__stg_professional as prof on med.claim_line_id = prof.claim_line_id\ninner join join_first_claim_dates as dat on med.patient_data_source_id = dat.patient_data_source_id\nand med.start_date between dat.encounter_start_date and dat.encounter_end_date", "relation_name": "tuva.claims_preprocessing.inpatient_hospice__prof_claims", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:27.398136Z", "completed_at": "2025-06-03T19:50:27.409854Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:27.410799Z", "completed_at": "2025-06-03T19:50:27.410804Z"}], "thread_id": "Thread-2", "execution_time": 0.019792795181274414, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.emergency_department__start_end_dates", "compiled": true, "compiled_code": "\n\nselect encounter_id\n, min(start_date) as encounter_start_date\n, max(end_date) as encounter_end_date\nfrom tuva.claims_preprocessing.emergency_department__generate_encounter_id\ngroup by encounter_id", "relation_name": "tuva.claims_preprocessing.emergency_department__start_end_dates", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:27.403063Z", "completed_at": "2025-06-03T19:50:27.410611Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:27.417410Z", "completed_at": "2025-06-03T19:50:27.417417Z"}], "thread_id": "Thread-1", "execution_time": 0.020012855529785156, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.inpatient_psych__prof_claims", "compiled": true, "compiled_code": "\n\nwith first_claim as (\n    select *\n    from tuva.claims_preprocessing.inpatient_psych__generate_encounter_id\n    where encounter_claim_number = 1\n)\n\n, join_first_claim_dates as (\n    select f.*\n    , dat.encounter_end_date\n    , dat.encounter_start_date\n    from first_claim as f\n    inner join tuva.claims_preprocessing.inpatient_psych__start_end_dates as dat on f.encounter_id = dat.encounter_id\n)\n\n-- ensuring each prof claim is only attributed to one institutional claim with claim_attribution_number\nselect dat.encounter_id\n, dat.encounter_start_date\n, dat.encounter_end_date\n, prof.claim_id\n, prof.claim_line_number\n, row_number() over (partition by prof.claim_line_id\norder by dat.encounter_id) as claim_attribution_number\nfrom tuva.claims_preprocessing.encounters__stg_medical_claim as med\ninner join tuva.claims_preprocessing.encounters__stg_professional as prof on med.claim_line_id = prof.claim_line_id\ninner join join_first_claim_dates as dat on med.patient_data_source_id = dat.patient_data_source_id\nand med.start_date between dat.encounter_start_date and dat.encounter_end_date", "relation_name": "tuva.claims_preprocessing.inpatient_psych__prof_claims", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:27.411408Z", "completed_at": "2025-06-03T19:50:27.423860Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:27.424606Z", "completed_at": "2025-06-03T19:50:27.424612Z"}], "thread_id": "Thread-3", "execution_time": 0.015073060989379883, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.inpatient_rehab__prof_claims", "compiled": true, "compiled_code": "\n\nwith first_claim as (\n    select *\n    from tuva.claims_preprocessing.inpatient_rehab__generate_encounter_id\n    where encounter_claim_number = 1\n)\n\n, join_first_claim_dates as (\n    select f.*\n    , dat.encounter_end_date\n    , dat.encounter_start_date\n    from first_claim as f\n    inner join tuva.claims_preprocessing.inpatient_rehab__start_end_dates as dat on f.encounter_id = dat.encounter_id\n)\n\n-- ensuring each prof claim is only attributed to one institutional claim with claim_attribution_number\nselect dat.encounter_id\n, dat.encounter_start_date\n, dat.encounter_end_date\n, prof.claim_id\n, prof.claim_line_number\n, row_number() over (partition by prof.claim_line_id\norder by dat.encounter_id) as claim_attribution_number\nfrom tuva.claims_preprocessing.encounters__stg_medical_claim as med\ninner join tuva.claims_preprocessing.encounters__stg_professional as prof on med.claim_line_id = prof.claim_line_id\ninner join join_first_claim_dates as dat on med.patient_data_source_id = dat.patient_data_source_id\nand med.start_date between dat.encounter_start_date and dat.encounter_end_date", "relation_name": "tuva.claims_preprocessing.inpatient_rehab__prof_claims", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:27.418937Z", "completed_at": "2025-06-03T19:50:27.430755Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:27.435632Z", "completed_at": "2025-06-03T19:50:27.435639Z"}], "thread_id": "Thread-4", "execution_time": 0.024525165557861328, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.inpatient_snf__prof_claims", "compiled": true, "compiled_code": "\n\nwith first_claim as (\n    select *\n    from tuva.claims_preprocessing.inpatient_snf__generate_encounter_id\n    where encounter_claim_number = 1\n)\n\n, join_first_claim_dates as (\n    select f.*\n    , dat.encounter_end_date\n    , dat.encounter_start_date\n    from first_claim as f\n    inner join tuva.claims_preprocessing.inpatient_snf__start_end_dates as dat on f.encounter_id = dat.encounter_id\n)\n\n-- ensuring each prof claim is only attributed to one institutional claim with claim_attribution_number\nselect dat.encounter_id\n, dat.encounter_start_date\n, dat.encounter_end_date\n, prof.claim_id\n, prof.claim_line_number\n, row_number() over (partition by prof.claim_line_id\norder by dat.encounter_id) as claim_attribution_number\nfrom tuva.claims_preprocessing.encounters__stg_medical_claim as med\ninner join tuva.claims_preprocessing.encounters__stg_professional as prof on med.claim_line_id = prof.claim_line_id\ninner join join_first_claim_dates as dat on med.patient_data_source_id = dat.patient_data_source_id\nand med.start_date between dat.encounter_start_date and dat.encounter_end_date", "relation_name": "tuva.claims_preprocessing.inpatient_snf__prof_claims", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:27.425229Z", "completed_at": "2025-06-03T19:50:27.436335Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:27.437036Z", "completed_at": "2025-06-03T19:50:27.437040Z"}], "thread_id": "Thread-2", "execution_time": 0.01845693588256836, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.inpatient_substance_use__prof_claims", "compiled": true, "compiled_code": "\n\nwith first_claim as (\n    select *\n    from tuva.claims_preprocessing.inpatient_substance_use__generate_encounter_id\n    where encounter_claim_number = 1\n)\n\n, join_first_claim_dates as (\n    select f.*\n    , dat.encounter_end_date\n    , dat.encounter_start_date\n    from first_claim as f\n    inner join tuva.claims_preprocessing.inpatient_substance_use__start_end_dates as dat on f.encounter_id = dat.encounter_id\n)\n\n-- ensuring each prof claim is only attributed to one institutional claim with claim_attribution_number\nselect dat.encounter_id\n, dat.encounter_start_date\n, dat.encounter_end_date\n, prof.claim_id\n, prof.claim_line_number\n-- ,med.start_date\n-- ,med.end_date\n-- ,med.place_of_service_code\n-- ,med.place_of_service_description\n, row_number() over (partition by prof.claim_line_id\norder by dat.encounter_id) as claim_attribution_number\nfrom tuva.claims_preprocessing.encounters__stg_medical_claim as med\ninner join tuva.claims_preprocessing.encounters__stg_professional as prof on med.claim_line_id = prof.claim_line_id\ninner join join_first_claim_dates as dat on med.patient_data_source_id = dat.patient_data_source_id\nand med.start_date between dat.encounter_start_date and dat.encounter_end_date", "relation_name": "tuva.claims_preprocessing.inpatient_substance_use__prof_claims", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:27.431252Z", "completed_at": "2025-06-03T19:50:27.437387Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:27.445305Z", "completed_at": "2025-06-03T19:50:27.445310Z"}], "thread_id": "Thread-1", "execution_time": 0.021270036697387695, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.lab__match_claims_to_anchor", "compiled": true, "compiled_code": "\n\nselect distinct m.patient_data_source_id\n , m.start_date\n , m.claim_id\n , m.claim_line_number\n , u.old_encounter_id\nfrom tuva.claims_preprocessing.encounters__stg_medical_claim as m\ninner join tuva.claims_preprocessing.lab__generate_encounter_id as u on m.patient_data_source_id = u.patient_data_source_id\nand\nm.start_date = u.start_date\nwhere m.service_category_2 = 'lab'", "relation_name": "tuva.claims_preprocessing.lab__match_claims_to_anchor", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:27.437817Z", "completed_at": "2025-06-03T19:50:27.450904Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:27.451647Z", "completed_at": "2025-06-03T19:50:27.451652Z"}], "thread_id": "Thread-3", "execution_time": 0.015681982040405273, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.office_visits__int_office_visits_union", "compiled": true, "compiled_code": "\n\n\nselect claim_id\n, claim_line_number\n, old_encounter_id\n, 'office visit radiology' as encounter_type\n, 0 as priority_number\nfrom tuva.claims_preprocessing.office_visits__int_office_visits_radiology\n\n\nunion distinct\n\n\nselect claim_id\n, claim_line_number\n, old_encounter_id\n, 'office visit surgery' as encounter_type\n, 1 as priority_number\nfrom tuva.claims_preprocessing.office_visits__int_office_visits_surgery\n\n\nunion distinct\n\n\nselect claim_id\n, claim_line_number\n, old_encounter_id\n, 'office visit injections' as encounter_type\n, 2 as priority_number\nfrom tuva.claims_preprocessing.office_visits__int_office_visits_injections\n\n\nunion distinct\n\n\nselect claim_id\n, claim_line_number\n, old_encounter_id\n, 'office visit pt/ot/st' as encounter_type\n, 3 as priority_number\nfrom tuva.claims_preprocessing.office_visits__int_office_visits_ptotst\n\n\nunion distinct\n\n\nselect claim_id\n, claim_line_number\n, old_encounter_id\n, 'office visit' as encounter_type\n, 4 as priority_number\nfrom tuva.claims_preprocessing.office_visits__int_office_visits_em\n\n\nunion distinct\n\n\nselect claim_id\n, claim_line_number\n, old_encounter_id\n, 'telehealth' as encounter_type\n, 5 as priority_number\nfrom tuva.claims_preprocessing.office_visits__int_office_visits_telehealth\n\n\nunion distinct\n\n\nselect claim_id\n, claim_line_number\n, old_encounter_id\n, 'office visit - other' as encounter_type\n, 9999 as priority_number\nfrom tuva.claims_preprocessing.office_visits__int_office_visits", "relation_name": "tuva.claims_preprocessing.office_visits__int_office_visits_union", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:27.446460Z", "completed_at": "2025-06-03T19:50:27.456557Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:27.555878Z", "completed_at": "2025-06-03T19:50:27.555886Z"}], "thread_id": "Thread-4", "execution_time": 0.1183781623840332, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.outpatient_hospice__match_claims_to_anchor", "compiled": true, "compiled_code": "\n\nselect distinct m.patient_data_source_id\n , m.start_date\n , m.claim_id\n , m.claim_line_number\n , u.old_encounter_id\nfrom tuva.claims_preprocessing.encounters__stg_medical_claim as m\ninner join tuva.claims_preprocessing.outpatient_hospice__generate_encounter_id as u on m.patient_data_source_id = u.patient_data_source_id\nand\nm.start_date = u.start_date", "relation_name": "tuva.claims_preprocessing.outpatient_hospice__match_claims_to_anchor", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:27.452023Z", "completed_at": "2025-06-03T19:50:27.556304Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:27.557150Z", "completed_at": "2025-06-03T19:50:27.557155Z"}], "thread_id": "Thread-2", "execution_time": 0.1112661361694336, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.outpatient_hospital_or_clinic__match_claims_to_anchor", "compiled": true, "compiled_code": "\n\nselect distinct m.patient_data_source_id\n , m.start_date\n , m.claim_id\n , m.claim_line_number\n , u.old_encounter_id\nfrom tuva.claims_preprocessing.encounters__stg_medical_claim as m\ninner join tuva.claims_preprocessing.outpatient_hospital_or_clinic__generate_encounter_id as u on m.patient_data_source_id = u.patient_data_source_id\nand\nm.start_date = u.start_date", "relation_name": "tuva.claims_preprocessing.outpatient_hospital_or_clinic__match_claims_to_anchor", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:27.457094Z", "completed_at": "2025-06-03T19:50:27.558223Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:27.563491Z", "completed_at": "2025-06-03T19:50:27.563497Z"}], "thread_id": "Thread-1", "execution_time": 0.11219120025634766, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.outpatient_injections__match_claims_to_anchor", "compiled": true, "compiled_code": "\n\nselect distinct m.patient_data_source_id\n , m.start_date\n , m.claim_id\n , m.claim_line_number\n , u.old_encounter_id\nfrom tuva.claims_preprocessing.encounters__stg_medical_claim as m\ninner join tuva.claims_preprocessing.outpatient_injections__generate_encounter_id as u on m.patient_data_source_id = u.patient_data_source_id\nand\nm.start_date = u.start_date", "relation_name": "tuva.claims_preprocessing.outpatient_injections__match_claims_to_anchor", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:27.558435Z", "completed_at": "2025-06-03T19:50:27.569719Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:27.575367Z", "completed_at": "2025-06-03T19:50:27.575378Z"}], "thread_id": "Thread-3", "execution_time": 0.01893782615661621, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.outpatient_psych__match_claims_to_anchor", "compiled": true, "compiled_code": "\n\nselect distinct m.patient_data_source_id\n , m.start_date\n , m.claim_id\n , m.claim_line_number\n , u.old_encounter_id\nfrom tuva.claims_preprocessing.encounters__stg_medical_claim as m\ninner join tuva.claims_preprocessing.outpatient_psych__generate_encounter_id as u on m.patient_data_source_id = u.patient_data_source_id\nand\nm.start_date = u.start_date", "relation_name": "tuva.claims_preprocessing.outpatient_psych__match_claims_to_anchor", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:27.563934Z", "completed_at": "2025-06-03T19:50:27.575857Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:27.577379Z", "completed_at": "2025-06-03T19:50:27.577430Z"}], "thread_id": "Thread-4", "execution_time": 0.019790172576904297, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.outpatient_ptotst__match_claims_to_anchor", "compiled": true, "compiled_code": "\n\nselect distinct m.patient_data_source_id\n , m.start_date\n , m.claim_id\n , m.claim_line_number\n , u.old_encounter_id\nfrom tuva.claims_preprocessing.encounters__stg_medical_claim as m\ninner join tuva.claims_preprocessing.outpatient_ptotst__generate_encounter_id as u on m.patient_data_source_id = u.patient_data_source_id\nand\nm.start_date = u.start_date", "relation_name": "tuva.claims_preprocessing.outpatient_ptotst__match_claims_to_anchor", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:27.570016Z", "completed_at": "2025-06-03T19:50:27.578670Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:27.585855Z", "completed_at": "2025-06-03T19:50:27.585863Z"}], "thread_id": "Thread-2", "execution_time": 0.02272319793701172, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.outpatient_radiology__match_claims_to_anchor", "compiled": true, "compiled_code": "\n\nselect distinct m.patient_data_source_id\n , m.start_date\n , m.claim_id\n , m.claim_line_number\n , m.hcpcs_code\n , u.old_encounter_id\nfrom tuva.claims_preprocessing.encounters__stg_medical_claim as m\ninner join tuva.claims_preprocessing.outpatient_radiology__generate_encounter_id as u on m.patient_data_source_id = u.patient_data_source_id\nand\nm.start_date = u.start_date\nand\nm.hcpcs_code = u.hcpcs_code", "relation_name": "tuva.claims_preprocessing.outpatient_radiology__match_claims_to_anchor", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:27.579000Z", "completed_at": "2025-06-03T19:50:27.587511Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:27.596536Z", "completed_at": "2025-06-03T19:50:27.596545Z"}], "thread_id": "Thread-1", "execution_time": 0.02160787582397461, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.outpatient_rehab__match_claims_to_anchor", "compiled": true, "compiled_code": "\n\nselect distinct m.patient_data_source_id\n , m.start_date\n , m.claim_id\n , m.claim_line_number\n , u.old_encounter_id\nfrom tuva.claims_preprocessing.encounters__stg_medical_claim as m\ninner join tuva.claims_preprocessing.outpatient_rehab__generate_encounter_id as u on m.patient_data_source_id = u.patient_data_source_id\nand\nm.start_date = u.start_date", "relation_name": "tuva.claims_preprocessing.outpatient_rehab__match_claims_to_anchor", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:27.587826Z", "completed_at": "2025-06-03T19:50:27.603806Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:27.610253Z", "completed_at": "2025-06-03T19:50:27.610260Z"}], "thread_id": "Thread-3", "execution_time": 0.025307893753051758, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.outpatient_substance_use__match_claims_to_anchor", "compiled": true, "compiled_code": "\n\nselect distinct m.patient_data_source_id\n , m.start_date\n , m.claim_id\n , m.claim_line_number\n , u.old_encounter_id\nfrom tuva.claims_preprocessing.encounters__stg_medical_claim as m\ninner join tuva.claims_preprocessing.outpatient_substance_use__generate_encounter_id as u on m.patient_data_source_id = u.patient_data_source_id\nand\nm.start_date = u.start_date", "relation_name": "tuva.claims_preprocessing.outpatient_substance_use__match_claims_to_anchor", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:27.597156Z", "completed_at": "2025-06-03T19:50:27.610691Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:27.611477Z", "completed_at": "2025-06-03T19:50:27.611481Z"}], "thread_id": "Thread-4", "execution_time": 0.02480792999267578, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.outpatient_surgery__match_claims_to_anchor", "compiled": true, "compiled_code": "\n\nselect distinct m.patient_data_source_id\n , m.start_date\n , m.claim_id\n , m.claim_line_number\n , u.old_encounter_id\nfrom tuva.claims_preprocessing.encounters__stg_medical_claim as m\ninner join tuva.claims_preprocessing.outpatient_surgery__generate_encounter_id as u on m.patient_data_source_id = u.patient_data_source_id\nand\nm.start_date = u.start_date", "relation_name": "tuva.claims_preprocessing.outpatient_surgery__match_claims_to_anchor", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:27.604178Z", "completed_at": "2025-06-03T19:50:27.611832Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:27.617576Z", "completed_at": "2025-06-03T19:50:27.617583Z"}], "thread_id": "Thread-2", "execution_time": 0.021538734436035156, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.urgent_care__match_claims_to_anchor", "compiled": true, "compiled_code": "\n\nselect distinct m.patient_data_source_id\n , m.start_date\n , m.claim_id\n , m.claim_line_number\n , u.old_encounter_id\nfrom tuva.claims_preprocessing.encounters__stg_medical_claim as m\ninner join tuva.claims_preprocessing.urgent_care__generate_encounter_id as u on m.patient_data_source_id = u.patient_data_source_id\nand\nm.start_date = u.start_date", "relation_name": "tuva.claims_preprocessing.urgent_care__match_claims_to_anchor", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:27.612051Z", "completed_at": "2025-06-03T19:50:27.618623Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:27.624810Z", "completed_at": "2025-06-03T19:50:27.624819Z"}], "thread_id": "Thread-1", "execution_time": 0.014954805374145508, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.asc__match_claims_to_anchor", "compiled": true, "compiled_code": "\n\nselect\n    dat.old_encounter_id\n  , dat.encounter_start_date\n  , dat.encounter_end_date\n  , med.claim_id\n  , med.claim_line_number\n  , row_number() over (\n        partition by med.claim_id, med.claim_line_number\n        order by dat.old_encounter_id\n    ) as claim_attribution_number\nfrom tuva.claims_preprocessing.encounters__stg_medical_claim as med\ninner join tuva.claims_preprocessing.asc__start_end_dates as dat\n  on med.patient_data_source_id = dat.patient_data_source_id\n  and med.start_date between dat.encounter_start_date and dat.encounter_end_date", "relation_name": "tuva.claims_preprocessing.asc__match_claims_to_anchor", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:27.618907Z", "completed_at": "2025-06-03T19:50:27.631358Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:27.631605Z", "completed_at": "2025-06-03T19:50:27.631610Z"}], "thread_id": "Thread-3", "execution_time": 0.014739990234375, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.emergency_department__prof_claims", "compiled": true, "compiled_code": "\n\nwith first_claim as (\n    select *\n    from tuva.claims_preprocessing.emergency_department__generate_encounter_id\n    where encounter_claim_number = 1\n)\n\n, join_first_claim_dates as (\n    select f.*\n    , dat.encounter_end_date\n    , dat.encounter_start_date\n    from first_claim as f\n    inner join tuva.claims_preprocessing.emergency_department__start_end_dates as dat on f.encounter_id = dat.encounter_id\n)\n\n\n-- ensuring each claim is only attributed to one encounter with claim_attribution_number\n, inst_and_prof as (\nselect dat.encounter_id\n, dat.encounter_start_date\n, dat.encounter_end_date\n, prof.claim_id\n, prof.claim_line_number\nfrom tuva.claims_preprocessing.encounters__stg_medical_claim as med\ninner join tuva.claims_preprocessing.encounters__stg_professional as prof on med.claim_line_id = prof.claim_line_id\ninner join join_first_claim_dates as dat on med.patient_data_source_id = dat.patient_data_source_id\nand med.start_date between dat.encounter_start_date and dat.encounter_end_date\n\nunion all\n\nselect dat.encounter_id\n, dat.encounter_start_date\n, dat.encounter_end_date\n, med.claim_id\n, med.claim_line_number\nfrom tuva.claims_preprocessing.encounters__stg_medical_claim as med\ninner join tuva.claims_preprocessing.encounters__stg_outpatient_institutional as inst on med.claim_id = inst.claim_id\ninner join join_first_claim_dates as dat on med.patient_data_source_id = dat.patient_data_source_id\nand med.start_date between dat.encounter_start_date and dat.encounter_end_date\nwhere dat.claim_id <> med.claim_id\n)\n\nselect distinct encounter_id\n, encounter_start_date\n, encounter_end_date\n, claim_id\n, claim_line_number\n, row_number() over (partition by claim_id, claim_line_number\norder by encounter_id) as claim_attribution_number\nfrom inst_and_prof", "relation_name": "tuva.claims_preprocessing.emergency_department__prof_claims", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:27.625298Z", "completed_at": "2025-06-03T19:50:27.632087Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:27.632299Z", "completed_at": "2025-06-03T19:50:27.632302Z"}], "thread_id": "Thread-4", "execution_time": 0.014050006866455078, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.office_visits__int_office_visits_encounter_ranking", "compiled": true, "compiled_code": "\n\nwith rank_cte as (\nselect *\nfrom tuva.claims_preprocessing.office_visits__int_office_visits_union\n)\n\n, dist_encounter as (\nselect distinct old_encounter_id\n, encounter_type\n, priority_number\nfrom rank_cte\n)\n\nselect\nold_encounter_id\n, encounter_type\n, priority_number\n, row_number() over (partition by old_encounter_id\norder by priority_number) as relative_rank\nfrom dist_encounter", "relation_name": "tuva.claims_preprocessing.office_visits__int_office_visits_encounter_ranking", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:27.633521Z", "completed_at": "2025-06-03T19:50:27.638822Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:27.639072Z", "completed_at": "2025-06-03T19:50:27.639079Z"}], "thread_id": "Thread-2", "execution_time": 0.006081104278564453, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.office_visits__int_office_visits_claim_line", "compiled": true, "compiled_code": "\n\nwith rank_cte as (\nselect *\nfrom tuva.claims_preprocessing.office_visits__int_office_visits_union\n)\n\n, crosswalk_cte as (\nselect old_encounter_id\n, encounter_type\nfrom tuva.claims_preprocessing.office_visits__int_office_visits_encounter_ranking\nwhere relative_rank = 1\n)\n\nselect r.claim_id\n, r.claim_line_number\n, r.old_encounter_id\n, x.encounter_type\nfrom rank_cte as r\ninner join crosswalk_cte as x on r.old_encounter_id = x.old_encounter_id", "relation_name": "tuva.claims_preprocessing.office_visits__int_office_visits_claim_line", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:27.640380Z", "completed_at": "2025-06-03T19:50:27.652687Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:27.652912Z", "completed_at": "2025-06-03T19:50:27.652918Z"}], "thread_id": "Thread-3", "execution_time": 0.013133049011230469, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.encounters__combined_claim_line_crosswalk", "compiled": true, "compiled_code": "\n\nwith cte as (\nselect claim_id\n , claim_line_number\n , encounter_id\n , 'acute inpatient' as encounter_type\n , 'inpatient' as encounter_group\n , 0 as priority_number\nfrom tuva.claims_preprocessing.acute_inpatient__prof_claims\nwhere claim_attribution_number = 1\n\nunion all\n\nselect enc.claim_id\n, med.claim_line_number\n, enc.encounter_id\n, 'acute inpatient' as encounter_type\n, 'inpatient' as encounter_group\n, 0 as priority_number\nfrom tuva.claims_preprocessing.acute_inpatient__generate_encounter_id as enc\ninner join tuva.claims_preprocessing.encounters__stg_medical_claim as med on enc.claim_id = med.claim_id\n\nunion all\n\nselect claim_id\n , claim_line_number\n , encounter_id\n , 'emergency department' as encounter_type\n , 'outpatient' as encounter_group\n , 1 as priority_number\nfrom tuva.claims_preprocessing.acute_inpatient__prof_claims\nwhere claim_attribution_number = 1\n\nunion all\n\nselect enc.claim_id\n, med.claim_line_number\n, enc.encounter_id\n, 'emergency department' as encounter_type\n, 'outpatient' as encounter_group\n, 1 as priority_number\nfrom tuva.claims_preprocessing.emergency_department__generate_encounter_id as enc\ninner join tuva.claims_preprocessing.encounters__stg_medical_claim as med on enc.claim_id = med.claim_id\n\nunion all\n\nselect claim_id\n , claim_line_number\n , encounter_id\n , 'emergency department' as encounter_type\n , 'outpatient' as encounter_group\n , 1 as priority_number\nfrom tuva.claims_preprocessing.emergency_department__prof_claims\nwhere claim_attribution_number = 1\n\nunion all\n\nselect enc.claim_id\n, med.claim_line_number\n, enc.encounter_id\n, 'inpatient hospice' as encounter_type\n, 'inpatient' as encounter_group\n, 1 as priority_number\nfrom tuva.claims_preprocessing.inpatient_hospice__generate_encounter_id as enc\ninner join tuva.claims_preprocessing.encounters__stg_medical_claim as med on enc.claim_id = med.claim_id\n\nunion all\n\nselect claim_id\n, claim_line_number\n, encounter_id\n, 'inpatient psych' as encounter_type\n, 'inpatient' as encounter_group\n, 2 as priority_number\nfrom tuva.claims_preprocessing.inpatient_psych__prof_claims\nwhere claim_attribution_number = 1\n\nunion all\n\nselect enc.claim_id\n, med.claim_line_number\n, enc.encounter_id\n, 'inpatient psych' as encounter_type\n, 'inpatient' as encounter_group\n, 2 as priority_number\nfrom tuva.claims_preprocessing.inpatient_psych__generate_encounter_id as enc\ninner join tuva.claims_preprocessing.encounters__stg_medical_claim as med on enc.claim_id = med.claim_id\n\nunion all\n\nselect claim_id\n, claim_line_number\n, encounter_id\n, 'inpatient rehabilitation' as encounter_type\n, 'inpatient' as encounter_group\n, 3 as priority_number\nfrom tuva.claims_preprocessing.inpatient_rehab__prof_claims\nwhere claim_attribution_number = 1\n\nunion all\n\nselect enc.claim_id\n, med.claim_line_number\n, enc.encounter_id\n, 'inpatient rehabilitation' as encounter_type\n, 'inpatient' as encounter_group\n, 3 as priority_number\nfrom tuva.claims_preprocessing.inpatient_rehab__generate_encounter_id as enc\ninner join tuva.claims_preprocessing.encounters__stg_medical_claim as med on enc.claim_id = med.claim_id\n\nunion all\n\nselect claim_id\n, claim_line_number\n, encounter_id\n, 'inpatient skilled nursing' as encounter_type\n, 'inpatient' as encounter_group\n, 4 as priority_number\nfrom tuva.claims_preprocessing.inpatient_snf__prof_claims\nwhere claim_attribution_number = 1\n\nunion all\n\nselect enc.claim_id\n, med.claim_line_number\n, enc.encounter_id\n, 'inpatient skilled nursing' as encounter_type\n, 'inpatient' as encounter_group\n, 4 as priority_number\nfrom tuva.claims_preprocessing.inpatient_snf__generate_encounter_id as enc\ninner join tuva.claims_preprocessing.encounters__stg_medical_claim as med on enc.claim_id = med.claim_id\n\nunion all\n\nselect claim_id\n, claim_line_number\n, encounter_id\n, 'inpatient substance use' as encounter_type\n, 'inpatient' as encounter_group\n, 5 as priority_number\nfrom tuva.claims_preprocessing.inpatient_substance_use__prof_claims\nwhere claim_attribution_number = 1\n\nunion all\n\nselect enc.claim_id\n, med.claim_line_number\n, enc.encounter_id\n, 'inpatient substance use' as encounter_type\n, 'inpatient' as encounter_group\n, 5 as priority_number\nfrom tuva.claims_preprocessing.inpatient_substance_use__generate_encounter_id as enc\ninner join tuva.claims_preprocessing.encounters__stg_medical_claim as med on enc.claim_id = med.claim_id\n\nunion all\n\nselect claim_id\n, claim_line_number\n, old_encounter_id\n, encounter_type\n, 'office based' as encounter_group\n, 9 as priority_number --priority set in combined office visit encounter ranking model\nfrom tuva.claims_preprocessing.office_visits__int_office_visits_claim_line\nwhere encounter_type = 'office visit radiology'\n\n\nunion all\n\nselect claim_id\n, claim_line_number\n, old_encounter_id\n, encounter_type\n, 'office based' as encounter_group\n, 10 as priority_number --priority set in combined office visit encounter ranking model\nfrom tuva.claims_preprocessing.office_visits__int_office_visits_claim_line\nwhere encounter_type <> 'office visit radiology'\n\n\nunion all\n\nselect claim_id\n, claim_line_number\n, old_encounter_id\n, 'urgent care' as encounter_type\n, 'outpatient' as encounter_group\n, 11 as priority_number --urgent care needs to be lower than ed and inpatient\nfrom tuva.claims_preprocessing.urgent_care__match_claims_to_anchor\n\nunion all\n\nselect claim_id\n, claim_line_number\n, old_encounter_id\n, 'outpatient psych' as encounter_type\n, 'outpatient' as encounter_group\n, 12 as priority_number\nfrom tuva.claims_preprocessing.outpatient_psych__match_claims_to_anchor\n\nunion all\n\nselect claim_id\n, claim_line_number\n, old_encounter_id\n, 'outpatient rehabilitation' as encounter_type\n, 'outpatient' as encounter_group\n, 13 as priority_number\nfrom tuva.claims_preprocessing.outpatient_rehab__match_claims_to_anchor\n\nunion all\n\nselect claim_id\n, claim_line_number\n, old_encounter_id\n, 'ambulatory surgery center' as encounter_type\n, 'outpatient' as encounter_group\n, 14 as priority_number\nfrom tuva.claims_preprocessing.asc__match_claims_to_anchor\n\nunion all\n\n\nselect claim_id\n, claim_line_number\n, old_encounter_id\n, 'outpatient hospital or clinic' as encounter_type\n, 'outpatient' as encounter_group\n, 999 as priority_number\nfrom tuva.claims_preprocessing.outpatient_hospital_or_clinic__match_claims_to_anchor --lowest outpatient priority, roll up to more specific encounter type when available\n\nunion all\n\nselect claim_id\n, claim_line_number\n, old_encounter_id\n, 'outpatient surgery' as encounter_type\n, 'outpatient' as encounter_group\n, 18 as priority_number\nfrom tuva.claims_preprocessing.outpatient_surgery__match_claims_to_anchor\n\n\nunion all\n\nselect claim_id\n, claim_line_number\n, old_encounter_id\n, 'dialysis' as encounter_type\n, 'outpatient' as encounter_group\n, 15 as priority_number\nfrom tuva.claims_preprocessing.dialysis__match_claims_to_anchor\n\nunion all\n\nselect claim_id\n, claim_line_number\n, old_encounter_id\n, 'outpatient hospice' as encounter_type\n, 'outpatient' as encounter_group\n, 16 as priority_number\nfrom tuva.claims_preprocessing.outpatient_hospice__match_claims_to_anchor\n\nunion all\n\nselect claim_id\n, claim_line_number\n, old_encounter_id\n, 'home health' as encounter_type\n, 'outpatient' as encounter_group\n, 17 as priority_number\nfrom tuva.claims_preprocessing.home_health__match_claims_to_anchor\n\nunion all\n\nselect claim_id\n, claim_line_number\n, old_encounter_id\n, 'outpatient injections' as encounter_type\n, 'outpatient' as encounter_group\n, 19 as priority_number\nfrom tuva.claims_preprocessing.outpatient_injections__match_claims_to_anchor\n\nunion all\n\nselect claim_id\n, claim_line_number\n, old_encounter_id\n, 'outpatient pt/ot/st' as encounter_type\n, 'outpatient' as encounter_group\n, 20 as priority_number\nfrom tuva.claims_preprocessing.outpatient_ptotst__match_claims_to_anchor\n\nunion all\n\nselect claim_id\n, claim_line_number\n, old_encounter_id\n, 'outpatient substance use' as encounter_type\n, 'outpatient' as encounter_group\n, 21 as priority_number\nfrom tuva.claims_preprocessing.outpatient_substance_use__match_claims_to_anchor\n\nunion all\n\nselect claim_id\n, claim_line_number\n, old_encounter_id\n, 'outpatient radiology' as encounter_type\n, 'outpatient' as encounter_group\n, 22 as priority_number\nfrom tuva.claims_preprocessing.outpatient_radiology__match_claims_to_anchor\n\nunion all\n\nselect claim_id\n, claim_line_number\n, old_encounter_id\n, 'lab - orphaned' as encounter_type\n, 'other' as encounter_group\n, 1000000 as priority_number\nfrom tuva.claims_preprocessing.lab__match_claims_to_anchor\n\nunion all\n\nselect claim_id\n, claim_line_number\n, old_encounter_id\n, 'dme - orphaned' as encounter_type\n, 'other' as encounter_group\n, 1000001 as priority_number\nfrom tuva.claims_preprocessing.dme__match_claims_to_anchor\n\nunion all\n\nselect claim_id\n, claim_line_number\n, old_encounter_id\n, 'ambulance - orphaned' as encounter_type\n, 'other' as encounter_group\n, 1000002 as priority_number\nfrom tuva.claims_preprocessing.ambulance__match_claims_to_anchor\n\n)\n\n\nselect\n  claim_id\n, claim_line_number\n, encounter_id as old_encounter_id\n, dense_rank() over (\norder by encounter_type, encounter_id) as encounter_id\n, encounter_type\n, encounter_group\n, priority_number\n, row_number() over (partition by claim_id, claim_line_number\norder by priority_number) as claim_line_attribution_number\nfrom cte", "relation_name": "tuva.claims_preprocessing.encounters__combined_claim_line_crosswalk", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:27.656018Z", "completed_at": "2025-06-03T19:50:27.690382Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:27.695355Z", "completed_at": "2025-06-03T19:50:27.695362Z"}], "thread_id": "Thread-1", "execution_time": 0.04117012023925781, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.acute_inpatient__encounter_grain", "compiled": true, "compiled_code": "\n\nwith detail_values as (\n    select stg.*\n    , cli.encounter_id\n    , cli.old_encounter_id\n    , ed.encounter_start_date\n    , ed.encounter_end_date\n    , cli.encounter_type\n    , cli.encounter_group\n    from tuva.claims_preprocessing.encounters__stg_medical_claim as stg\n    inner join tuva.claims_preprocessing.encounters__combined_claim_line_crosswalk as cli on stg.claim_id = cli.claim_id  --replace this ref with the deduped version when complete\n    and\n    stg.claim_line_number = cli.claim_line_number\n    and\n    cli.encounter_type = 'acute inpatient'\n    and\n    cli.claim_line_attribution_number = 1\n    inner join tuva.claims_preprocessing.acute_inpatient__start_end_dates as ed on cli.old_encounter_id = ed.encounter_id\n)\n\n, encounter_cross_walk as (\n  select distinct encounter_id\n  , old_encounter_id\n  from detail_values\n)\n\n, first_last_inst_inst_values as (\nselect *\n, row_number() over (partition by encounter_id\norder by start_date, claim_id) as first_num\n, row_number() over (partition by encounter_id\norder by end_date desc, claim_id) as last_num\nfrom detail_values\nwhere claim_type = 'institutional'\n)\n\n, institutional_claim_details as (\n    select distinct\n        d.encounter_id\n        , f.diagnosis_code_1\n        , f.diagnosis_code_type\n        , f.facility_id as facility_id\n        , f.drg_code_type\n        , f.drg_code\n        , f.admit_source_code as admit_source_code\n        , f.admit_type_code as admit_type_code\n        , l.discharge_disposition_code as discharge_disposition_code\n        , d.patient_data_source_id\n        , d.data_source\n    from detail_values as d\n    inner join first_last_inst_inst_values as f on d.encounter_id = f.encounter_id\n    and\n    f.first_num = 1\n    inner join first_last_inst_inst_values as l on d.encounter_id = l.encounter_id\n    and\n    l.last_num = 1\n)\n\n, service_category_flags as (\n    select\n        d.encounter_id\n       , max(case when d.service_category_3 in ('l/d - cesarean delivery', 'l/d - vaginal delivery') then 1 else 0 end) as delivery_flag\n       , max(case when d.service_category_3 = 'l/d - cesarean delivery' then 1 else 0 end) as cesarean_delivery\n       , max(case when d.service_category_3 = 'l/d - vaginal delivery' then 1 else 0 end) as vaginal_delivery\n       , max(case when d.service_category_3 in ('l/d - newborn', 'l/d - newborn nicu') then 1 else 0 end) as newborn_flag\n       , max(case when d.service_category_3 = 'l/d - newborn nicu' then 1 else 0 end) as nicu_flag\n       , max(case when scr.service_category_2 = 'observation' then 1 else 0 end) as observation_flag\n       , max(case when scr.service_category_2 = 'emergency department' then 1 else 0 end) as ed_flag\n       , max(case when scr.service_category_2 = 'lab' then 1 else 0 end) as lab_flag\n       , max(case when scr.service_category_2 = 'ambulance' then 1 else 0 end) as ambulance_flag\n       , max(case when scr.service_category_2 = 'durable medical equipment' then 1 else 0 end) as dme_flag\n       , max(case when scr.service_category_2 = 'pharmacy' then 1\n              else 0 end) as pharmacy_flag\n    from detail_values as d\n    left outer join tuva.claims_preprocessing.service_category_grouper as scr on d.claim_id = scr.claim_id\n    and\n    scr.claim_line_number = d.claim_line_number\n    group by d.encounter_id\n)\n\n\n\n, patient as (\n    select\n        patient_data_source_id\n        , birth_date\n        , gender\n        , race\n    from tuva.claims_preprocessing.encounters__stg_eligibility\n    where patient_row_num = 1\n    )\n\n, total_amounts as (\n    select\n    encounter_id\n    , encounter_type\n    , encounter_group\n    , sum(paid_amount) as total_paid_amount\n    , sum(allowed_amount) as total_allowed_amount\n    , sum(charge_amount) as total_charge_amount\n    , count(distinct claim_id) as claim_count\n    , count(distinct(case when claim_type = 'institutional' then claim_id else null end)) as inst_claim_count\n    , count(distinct(case when claim_type = 'professional' then claim_id else null end)) as prof_claim_count\nfrom detail_values\ngroup by encounter_id\n, encounter_type -- not changing grain, but bringing into final\n, encounter_group\n)\n\n\n\nselect\n  x.encounter_id\n, a.encounter_start_date\n, a.encounter_end_date\n, c.patient_data_source_id\n, tot.encounter_type\n, tot.encounter_group\n, datediff(\n        day,\n        birth_date,\n        encounter_end_date\n        ) / 365 as admit_age\n, e.gender\n, e.race\n, c.diagnosis_code_type as primary_diagnosis_code_type\n, c.diagnosis_code_1 as primary_diagnosis_code\n, coalesce(icd10cm.long_description, icd9cm.long_description) as primary_diagnosis_description\n, c.facility_id as facility_id\n, sc.observation_flag\n, sc.ed_flag\n, sc.lab_flag\n, sc.dme_flag\n, sc.ambulance_flag\n, sc.pharmacy_flag\n, b.provider_organization_name as facility_name\n, b.primary_specialty_description as facility_type\n, sc.delivery_flag\n, case when sc.cesarean_delivery = 1 then 'cesarean'\n       when sc.vaginal_delivery = 1 then 'vaginal'\n       else null end as delivery_type\n, sc.newborn_flag\n, sc.nicu_flag\n, c.drg_code_type\n, c.drg_code\n, coalesce(msdrg.ms_drg_description, aprdrg.apr_drg_description) as drg_description\n, coalesce(msdrg.medical_surgical, aprdrg.medical_surgical) as medical_surgical\n, c.admit_source_code\n, h.admit_source_description\n, c.admit_type_code\n, i.admit_type_description\n, c.discharge_disposition_code\n, g.discharge_disposition_description\n, tot.total_paid_amount\n, tot.total_allowed_amount\n, tot.total_charge_amount\n, tot.claim_count\n, tot.inst_claim_count\n, tot.prof_claim_count\n, datediff(\n        day,\n        a.encounter_start_date,\n        a.encounter_end_date\n        ) as length_of_stay\n, case\n    when c.discharge_disposition_code = '20' then 1\n    else 0\n  end as mortality_flag\n, c.data_source\n, '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom tuva.claims_preprocessing.acute_inpatient__start_end_dates as a\ninner join encounter_cross_walk as x on a.encounter_id = x.old_encounter_id\ninner join total_amounts as tot on x.encounter_id = tot.encounter_id\ninner join service_category_flags as sc on x.encounter_id = sc.encounter_id\nleft outer join institutional_claim_details as c\n  on x.encounter_id = c.encounter_id\nleft outer join patient as e\n  on c.patient_data_source_id = e.patient_data_source_id\nleft outer join tuva.terminology.provider as b\n  on c.facility_id = b.npi\nleft outer join tuva.terminology.discharge_disposition as g\n  on c.discharge_disposition_code = g.discharge_disposition_code\nleft outer join tuva.terminology.admit_source as h\n  on c.admit_source_code = h.admit_source_code\nleft outer join tuva.terminology.admit_type as i\n  on c.admit_type_code = i.admit_type_code\nleft outer join tuva.terminology.ms_drg as msdrg\n  on c.drg_code_type = 'ms-drg'\n  and c.drg_code = msdrg.ms_drg_code\nleft outer join tuva.terminology.apr_drg as aprdrg\n  on c.drg_code_type = 'apr-drg'\n  and c.drg_code = aprdrg.apr_drg_code\nleft outer join tuva.terminology.icd_10_cm as icd10cm\n  on c.diagnosis_code_1 = icd10cm.icd_10_cm\n  and c.diagnosis_code_type = 'icd-10-cm'\nleft outer join tuva.terminology.icd_9_cm as icd9cm\n  on c.diagnosis_code_1 = icd9cm.icd_9_cm\n  and c.diagnosis_code_type = 'icd-9-cm'", "relation_name": "tuva.claims_preprocessing.acute_inpatient__encounter_grain", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:27.664545Z", "completed_at": "2025-06-03T19:50:27.695785Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:27.696385Z", "completed_at": "2025-06-03T19:50:27.696389Z"}], "thread_id": "Thread-2", "execution_time": 0.041527748107910156, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.ambulance__encounter_grain", "compiled": true, "compiled_code": "\n\nwith encounter_date as (\n  select distinct old_encounter_id\n  , start_date as encounter_start_date\n  from tuva.claims_preprocessing.ambulance__generate_encounter_id\n)\n\n, detail_values as (\n    select stg.*\n    , cli.encounter_id\n    , cli.old_encounter_id\n    , cli.encounter_type\n    , cli.encounter_group\n    , d.encounter_start_date\n    , row_number() over (partition by cli.encounter_id\norder by stg.claim_type, stg.start_date) as encounter_row_number --institutional then professional\n    from tuva.claims_preprocessing.encounters__stg_medical_claim as stg\n    inner join tuva.claims_preprocessing.encounters__combined_claim_line_crosswalk as cli on stg.claim_id = cli.claim_id\n    and\n    stg.claim_line_number = cli.claim_line_number\n    and\n    cli.encounter_type = 'ambulance - orphaned'\n    and\n    cli.claim_line_attribution_number = 1\n    inner join encounter_date as d on cli.old_encounter_id = d.old_encounter_id\n)\n\n, patient as (\n    select\n        patient_data_source_id\n        , birth_date\n        , gender\n        , race\n    from tuva.claims_preprocessing.encounters__stg_eligibility\n    where patient_row_num = 1\n    )\n\n, total_amounts as (\n    select\n    encounter_id\n    , encounter_type\n    , encounter_group\n    , sum(paid_amount) as total_paid_amount\n    , sum(allowed_amount) as total_allowed_amount\n    , sum(charge_amount) as total_charge_amount\n    , count(distinct claim_id) as claim_count\n    , count(distinct(case when claim_type = 'institutional' then claim_id else null end)) as inst_claim_count\n    , count(distinct(case when claim_type = 'professional' then claim_id else null end)) as prof_claim_count\nfrom detail_values\ngroup by encounter_id\n, encounter_type -- not changing grain, but bringing into final\n, encounter_group\n\n)\n\n\n, highest_paid_diagnosis as (\n  select encounter_id\n  , diagnosis_code_1\n  , diagnosis_code_type\n  , row_number() over (partition by encounter_id\norder by sum(paid_amount) desc) as paid_order\n  , sum(paid_amount) as paid_amount\n  from detail_values\n  where diagnosis_code_1 is not null\n  group by diagnosis_code_1\n  , encounter_id\n  , diagnosis_code_type\n)\n\n, highest_paid_facility as (\n  select encounter_id\n  , facility_id\n  , row_number() over (partition by encounter_id\norder by sum(paid_amount) desc) as paid_order\n  , sum(paid_amount) as paid_amount\n  from detail_values\n  where facility_id is not null\n  group by\n   encounter_id\n  , facility_id\n)\n\n, highest_paid_pos as (\n  select encounter_id\n  , place_of_service_code\n  , place_of_service_description\n  , row_number() over (partition by encounter_id\norder by sum(paid_amount) desc) as paid_order\n  , sum(paid_amount) as paid_amount\n  from detail_values\n  where place_of_service_code is not null\n  group by\n   encounter_id\n  , place_of_service_code\n  , place_of_service_description\n)\n\n\n, service_category_flags as (\n    select\n        d.encounter_id\n       , max(case when scr.service_category_2 = 'lab' then 1 else 0 end) as lab_flag\n       , max(case when scr.service_category_2 = 'ambulance' then 1 else 0 end) as ambulance_flag\n       , max(case when scr.service_category_2 = 'durable medical equipment' then 1 else 0 end) as dme_flag\n       , max(case when scr.service_category_2 = 'outpatient pharmacy' then 1\n                when scr.service_category_2 = 'office-based pharmacy' then 1 else 0 end) as pharmacy_flag\n    from detail_values as d\n    left outer join tuva.claims_preprocessing.service_category_grouper as scr on d.claim_id = scr.claim_id\n    and\n    scr.claim_line_number = d.claim_line_number\n    group by d.encounter_id\n)\n\n\n\nselect d.encounter_id\n, d.encounter_start_date\n, d.patient_data_source_id\n\n, tot.encounter_type\n, tot.encounter_group\n, datediff(\n        day,\n        birth_date,\n        d.encounter_start_date\n        ) / 365 as admit_age\n, e.gender\n, e.race\n, hp.diagnosis_code_type as primary_diagnosis_code_type\n, hp.diagnosis_code_1 as primary_diagnosis_code\n, coalesce(icd10cm.long_description, icd9cm.long_description) as primary_diagnosis_description\n, hf.facility_id as facility_id\n, b.provider_organization_name as facility_name\n, b.primary_specialty_description as facility_type\n, sc.lab_flag\n, sc.dme_flag\n, sc.ambulance_flag\n, sc.pharmacy_flag, pos.place_of_service_code\n, pos.place_of_service_description\n, tot.total_paid_amount\n, tot.total_allowed_amount\n, tot.total_charge_amount\n, tot.claim_count\n, tot.inst_claim_count\n, tot.prof_claim_count\n, d.data_source\n, '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom detail_values as d\ninner join total_amounts as tot on d.encounter_id = tot.encounter_id\ninner join service_category_flags as sc on d.encounter_id = sc.encounter_id\nleft outer join highest_paid_diagnosis as hp on d.encounter_id = hp.encounter_id\nand\nhp.paid_order = 1\nleft outer join highest_paid_facility as hf on d.encounter_id = hf.encounter_id\nand\nhf.paid_order = 1\nleft outer join highest_paid_pos as pos on d.encounter_id = pos.encounter_id\nand\npos.paid_order = 1\nleft outer join patient as e\n  on d.patient_data_source_id = e.patient_data_source_id\nleft outer join tuva.terminology.provider as b\n  on hf.facility_id = b.npi\nleft outer join tuva.terminology.icd_10_cm as icd10cm\n  on hp.diagnosis_code_1 = icd10cm.icd_10_cm\n  and hp.diagnosis_code_type = 'icd-10-cm'\nleft outer join tuva.terminology.icd_9_cm as icd9cm\n  on hp.diagnosis_code_1 = icd9cm.icd_9_cm\n  and hp.diagnosis_code_type = 'icd-9-cm'\nwhere d.encounter_row_number = 1", "relation_name": "tuva.claims_preprocessing.ambulance__encounter_grain", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:27.672049Z", "completed_at": "2025-06-03T19:50:27.696719Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:27.697588Z", "completed_at": "2025-06-03T19:50:27.697591Z"}], "thread_id": "Thread-4", "execution_time": 0.0422821044921875, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.asc__encounter_grain", "compiled": true, "compiled_code": "\n\n\n\nwith detail_values as (\n    select stg.*\n    , cli.encounter_id\n    , cli.old_encounter_id\n      , cli.encounter_type\n    , cli.encounter_group\n    , ed.encounter_start_date\n    , ed.encounter_end_date\n    , row_number() over (partition by cli.encounter_id\norder by stg.claim_type, stg.start_date) as encounter_row_number --institutional then professional\n    from tuva.claims_preprocessing.encounters__stg_medical_claim as stg\n    inner join tuva.claims_preprocessing.encounters__combined_claim_line_crosswalk as cli on stg.claim_id = cli.claim_id\n    and\n    stg.claim_line_number = cli.claim_line_number\n    and\n    cli.encounter_type = 'ambulatory surgery center'\n    and\n    cli.claim_line_attribution_number = 1\n    inner join tuva.claims_preprocessing.asc__start_end_dates as ed on cli.old_encounter_id = ed.old_encounter_id\n)\n\n, patient as (\n    select\n        patient_data_source_id\n        , birth_date\n        , gender\n        , race\n    from tuva.claims_preprocessing.encounters__stg_eligibility\n    where patient_row_num = 1\n    )\n\n, total_amounts as (\n    select\n    encounter_id\n    , encounter_type\n    , encounter_group\n    , sum(paid_amount) as total_paid_amount\n    , sum(allowed_amount) as total_allowed_amount\n    , sum(charge_amount) as total_charge_amount\n    , count(distinct claim_id) as claim_count\n    , count(distinct(case when claim_type = 'institutional' then claim_id else null end)) as inst_claim_count\n    , count(distinct(case when claim_type = 'professional' then claim_id else null end)) as prof_claim_count\nfrom detail_values\ngroup by encounter_id\n, encounter_type\n, encounter_group\n)\n\n\n, highest_paid_diagnosis as (\n  select encounter_id\n  , diagnosis_code_1\n  , diagnosis_code_type\n  , row_number() over (partition by encounter_id\norder by sum(paid_amount) desc) as paid_order\n  , sum(paid_amount) as paid_amount\n  from detail_values\n  where diagnosis_code_1 is not null\n  group by diagnosis_code_1\n  , encounter_id\n  , diagnosis_code_type\n)\n\n, highest_paid_facility as (\n  select encounter_id\n  , facility_id\n  , row_number() over (partition by encounter_id\norder by sum(paid_amount) desc) as paid_order\n  , sum(paid_amount) as paid_amount\n  from detail_values\n  where facility_id is not null\n  group by\n   encounter_id\n  , facility_id\n)\n\n, highest_paid_hcpc as (\n  select encounter_id\n  , hcpcs_code\n  , row_number() over (partition by encounter_id\norder by sum(paid_amount) desc) as paid_order\n  , sum(paid_amount) as paid_amount\n  from detail_values\n  where hcpcs_code is not null\n  group by\n   encounter_id\n  , hcpcs_code\n)\n\n, service_category_flags as (\n    select\n        d.encounter_id\n       , max(case when scr.service_category_2 = 'lab' then 1 else 0 end) as lab_flag\n       , max(case when scr.service_category_2 = 'ambulance' then 1 else 0 end) as ambulance_flag\n       , max(case when scr.service_category_2 = 'durable medical equipment' then 1 else 0 end) as dme_flag\n       , max(case when scr.service_category_2 = 'outpatient pharmacy' then 1\n                when scr.service_category_2 = 'office-based pharmacy' then 1 else 0 end) as pharmacy_flag\n    from detail_values as d\n    left outer join tuva.claims_preprocessing.service_category_grouper as scr on d.claim_id = scr.claim_id\n    and\n    scr.claim_line_number = d.claim_line_number\n    group by d.encounter_id\n)\n\n\nselect d.encounter_id\n, d.encounter_start_date\n, d.encounter_end_date\n, d.patient_data_source_id\n, tot.encounter_type\n, tot.encounter_group\n, datediff(\n        day,\n        birth_date,\n        d.encounter_start_date\n        ) / 365 as admit_age\n, datediff(\n        day,\n        d.encounter_start_date,\n        d.encounter_end_date\n        ) as length_of_stay\n, e.gender\n, e.race\n, hp.diagnosis_code_type as primary_diagnosis_code_type\n, hp.diagnosis_code_1 as primary_diagnosis_code\n, coalesce(icd10cm.long_description, icd9cm.long_description) as primary_diagnosis_description\n, hf.facility_id as facility_id\n, b.provider_organization_name as facility_name\n, b.primary_specialty_description as facility_type\n, sc.lab_flag\n, sc.dme_flag\n, sc.ambulance_flag\n, sc.pharmacy_flag\n, hcpc.hcpcs_code\n, tot.total_paid_amount\n, tot.total_allowed_amount\n, tot.total_charge_amount\n, tot.claim_count\n, tot.inst_claim_count\n, tot.prof_claim_count\n, d.data_source\n, '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom detail_values as d\ninner join total_amounts as tot on d.encounter_id = tot.encounter_id\ninner join service_category_flags as sc on d.encounter_id = sc.encounter_id\nleft outer join highest_paid_diagnosis as hp on d.encounter_id = hp.encounter_id\nand\nhp.paid_order = 1\nleft outer join highest_paid_facility as hf on d.encounter_id = hf.encounter_id\nand\nhf.paid_order = 1\nleft outer join highest_paid_hcpc as hcpc on d.encounter_id = hcpc.encounter_id\nand\nhcpc.paid_order = 1\nleft outer join patient as e\n  on d.patient_data_source_id = e.patient_data_source_id\nleft outer join tuva.terminology.provider as b\n  on hf.facility_id = b.npi\nleft outer join tuva.terminology.icd_10_cm as icd10cm\n  on hp.diagnosis_code_1 = icd10cm.icd_10_cm\n  and hp.diagnosis_code_type = 'icd-10-cm'\nleft outer join tuva.terminology.icd_9_cm as icd9cm\n  on hp.diagnosis_code_1 = icd9cm.icd_9_cm\n  and hp.diagnosis_code_type = 'icd-9-cm'\nwhere d.encounter_row_number = 1", "relation_name": "tuva.claims_preprocessing.asc__encounter_grain", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:27.679113Z", "completed_at": "2025-06-03T19:50:27.697394Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:27.698397Z", "completed_at": "2025-06-03T19:50:27.698400Z"}], "thread_id": "Thread-3", "execution_time": 0.04286623001098633, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.core__stg_claims_condition", "compiled": true, "compiled_code": "\n\n-- *************************************************\n-- This dbt model creates the condition table in core.\n-- *************************************************\n\nwith unpivot_cte as (\n\nselect\n    claim_id\n  , claim_line_number\n  , person_id\n  , member_id\n  , coalesce(admission_date\n           , claim_start_date\n           , discharge_date\n           , claim_end_date\n    ) as recorded_date\n  , 'discharge_diagnosis' as condition_type\n  , diagnosis_code_type as source_code_type\n  , diagnosis_code_1 as source_code\n  , 1 as diagnosis_rank\n  , diagnosis_poa_1 as present_on_admit_code\n  , data_source\nfrom tuva.claims_preprocessing.normalized_input_medical_claim\nwhere diagnosis_code_1 is not null\n\nunion all\n\nselect\n    claim_id\n  , claim_line_number\n  , person_id\n  , member_id\n  , coalesce(admission_date\n           , claim_start_date\n\t       , discharge_date\n\t       , claim_end_date\n    ) as recorded_date\n  , 'discharge_diagnosis' as condition_type\n  , diagnosis_code_type as source_code_type\n  , diagnosis_code_2 as source_code\n  , 2 as diagnosis_rank\n  , diagnosis_poa_2 as present_on_admit_code\n  , data_source\nfrom tuva.claims_preprocessing.normalized_input_medical_claim\nwhere diagnosis_code_2 is not null\n\nunion all\n\nselect\n    claim_id\n  , claim_line_number\n  , person_id\n  , member_id\n  , coalesce(admission_date\n           , claim_start_date\n           , discharge_date\n           , claim_end_date\n    ) as recorded_date\n  , 'discharge_diagnosis' as condition_type\n  , diagnosis_code_type as source_code_type\n  , diagnosis_code_3 as source_code\n  , 3 as diagnosis_rank\n  , diagnosis_poa_3 as present_on_admit_code\n  , data_source\nfrom tuva.claims_preprocessing.normalized_input_medical_claim\nwhere diagnosis_code_3 is not null\n\nunion all\n\nselect\n    claim_id\n  , claim_line_number\n  , person_id\n  , member_id\n  , coalesce(admission_date\n           , claim_start_date\n           , discharge_date\n           , claim_end_date\n    ) as recorded_date\n  , 'discharge_diagnosis' as condition_type\n  , diagnosis_code_type as source_code_type\n  , diagnosis_code_4 as source_code\n  , 4 as diagnosis_rank\n  , diagnosis_poa_4 as present_on_admit_code\n  , data_source\nfrom tuva.claims_preprocessing.normalized_input_medical_claim\nwhere diagnosis_code_4 is not null\n\nunion all\n\nselect\n    claim_id\n  , claim_line_number\n  , person_id\n  , member_id\n  , coalesce(admission_date\n           , claim_start_date\n           , discharge_date\n           , claim_end_date\n    ) as recorded_date\n  , 'discharge_diagnosis' as condition_type\n  , diagnosis_code_type as source_code_type\n  , diagnosis_code_5 as source_code\n  , 5 as diagnosis_rank\n  , diagnosis_poa_5 as present_on_admit_code\n  , data_source\nfrom tuva.claims_preprocessing.normalized_input_medical_claim\nwhere diagnosis_code_5 is not null\n\nunion all\n\nselect\n    claim_id\n  , claim_line_number\n  , person_id\n  , member_id\n  , coalesce(admission_date\n           , claim_start_date\n           , discharge_date\n           , claim_end_date\n    ) as recorded_date\n  , 'discharge_diagnosis' as condition_type\n  , diagnosis_code_type as source_code_type\n  , diagnosis_code_6 as source_code\n  , 6 as diagnosis_rank\n  , diagnosis_poa_6 as present_on_admit_code\n  , data_source\nfrom tuva.claims_preprocessing.normalized_input_medical_claim\nwhere diagnosis_code_6 is not null\n\nunion all\n\nselect\n    claim_id\n  , claim_line_number\n  , person_id\n  , member_id\n  , coalesce(admission_date\n           , claim_start_date\n           , discharge_date\n           , claim_end_date\n    ) as recorded_date\n  , 'discharge_diagnosis' as condition_type\n  , diagnosis_code_type as source_code_type\n  , diagnosis_code_7 as source_code\n  , 7 as diagnosis_rank\n  , diagnosis_poa_7 as present_on_admit_code\n  , data_source\nfrom tuva.claims_preprocessing.normalized_input_medical_claim\nwhere diagnosis_code_7 is not null\n\nunion all\n\nselect\n    claim_id\n  , claim_line_number\n  , person_id\n  , member_id\n  , coalesce(admission_date\n           , claim_start_date\n           , discharge_date\n           , claim_end_date\n    ) as recorded_date\n  , 'discharge_diagnosis' as condition_type\n  , diagnosis_code_type as source_code_type\n  , diagnosis_code_8 as source_code\n  , 8 as diagnosis_rank\n  , diagnosis_poa_8 as present_on_admit_code\n  , data_source\nfrom tuva.claims_preprocessing.normalized_input_medical_claim\nwhere diagnosis_code_8 is not null\n\nunion all\n\nselect\n    claim_id\n  , claim_line_number\n  , person_id\n  , member_id\n  , coalesce(admission_date\n           , claim_start_date\n           , discharge_date\n           , claim_end_date\n    ) as recorded_date\n  , 'discharge_diagnosis' as condition_type\n  , diagnosis_code_type as source_code_type\n  , diagnosis_code_9 as source_code\n  , 9 as diagnosis_rank\n  , diagnosis_poa_9 as present_on_admit_code\n  , data_source\nfrom tuva.claims_preprocessing.normalized_input_medical_claim\nwhere diagnosis_code_9 is not null\n\nunion all\n\nselect\n    claim_id\n  , claim_line_number\n  , person_id\n  , member_id\n  , coalesce(admission_date\n           , claim_start_date\n           , discharge_date\n           , claim_end_date\n    ) as recorded_date\n  , 'discharge_diagnosis' as condition_type\n  , diagnosis_code_type as source_code_type\n  , diagnosis_code_10 as source_code\n  , 10 as diagnosis_rank\n  , diagnosis_poa_10 as present_on_admit_code\n  , data_source\nfrom tuva.claims_preprocessing.normalized_input_medical_claim\nwhere diagnosis_code_10 is not null\n\nunion all\n\nselect\n    claim_id\n  , claim_line_number\n  , person_id\n  , member_id\n  , coalesce(admission_date\n           , claim_start_date\n           , discharge_date\n           , claim_end_date\n    ) as recorded_date\n  , 'discharge_diagnosis' as condition_type\n  , diagnosis_code_type as source_code_type\n  , diagnosis_code_11 as source_code\n  , 11 as diagnosis_rank\n  , diagnosis_poa_11 as present_on_admit_code\n  , data_source\nfrom tuva.claims_preprocessing.normalized_input_medical_claim\nwhere diagnosis_code_11 is not null\n\nunion all\n\nselect\n    claim_id\n  , claim_line_number\n  , person_id\n  , member_id\n  , coalesce(admission_date\n           , claim_start_date\n           , discharge_date\n           , claim_end_date\n    ) as recorded_date\n  , 'discharge_diagnosis' as condition_type\n  , diagnosis_code_type as source_code_type\n  , diagnosis_code_12 as source_code\n  , 12 as diagnosis_rank\n  , diagnosis_poa_12 as present_on_admit_code\n  , data_source\nfrom tuva.claims_preprocessing.normalized_input_medical_claim\nwhere diagnosis_code_12 is not null\n\nunion all\n\nselect\n    claim_id\n  , claim_line_number\n  , person_id\n  , member_id\n  , coalesce(admission_date\n           , claim_start_date\n           , discharge_date\n           , claim_end_date\n    ) as recorded_date\n  , 'discharge_diagnosis' as condition_type\n  , diagnosis_code_type as source_code_type\n  , diagnosis_code_13 as source_code\n  , 13 as diagnosis_rank\n  , diagnosis_poa_13 as present_on_admit_code\n  , data_source\nfrom tuva.claims_preprocessing.normalized_input_medical_claim\nwhere diagnosis_code_13 is not null\n\nunion all\n\nselect\n    claim_id\n  , claim_line_number\n  , person_id\n  , member_id\n  , coalesce(admission_date\n           , claim_start_date\n           , discharge_date\n           , claim_end_date\n    ) as recorded_date\n  , 'discharge_diagnosis' as condition_type\n  , diagnosis_code_type as source_code_type\n  , diagnosis_code_14 as source_code\n  , 14 as diagnosis_rank\n  , diagnosis_poa_14 as present_on_admit_code\n  , data_source\nfrom tuva.claims_preprocessing.normalized_input_medical_claim\nwhere diagnosis_code_14 is not null\n\nunion all\n\nselect\n    claim_id\n  , claim_line_number\n  , person_id\n  , member_id\n  , coalesce(admission_date\n           , claim_start_date\n           , discharge_date\n           , claim_end_date\n    ) as recorded_date\n  , 'discharge_diagnosis' as condition_type\n  , diagnosis_code_type as source_code_type\n  , diagnosis_code_15 as source_code\n  , 15 as diagnosis_rank\n  , diagnosis_poa_15 as present_on_admit_code\n  , data_source\nfrom tuva.claims_preprocessing.normalized_input_medical_claim\nwhere diagnosis_code_15 is not null\n\nunion all\n\nselect\n    claim_id\n  , claim_line_number\n  , person_id\n  , member_id\n  , coalesce(admission_date\n           , claim_start_date\n           , discharge_date\n           , claim_end_date\n    ) as recorded_date\n  , 'discharge_diagnosis' as condition_type\n  , diagnosis_code_type as source_code_type\n  , diagnosis_code_16 as source_code\n  , 16 as diagnosis_rank\n  , diagnosis_poa_16 as present_on_admit_code\n  , data_source\nfrom tuva.claims_preprocessing.normalized_input_medical_claim\nwhere diagnosis_code_16 is not null\n\nunion all\n\nselect\n    claim_id\n  , claim_line_number\n  , person_id\n  , member_id\n  , coalesce(admission_date\n           , claim_start_date\n           , discharge_date\n           , claim_end_date\n    ) as recorded_date\n  , 'discharge_diagnosis' as condition_type\n  , diagnosis_code_type as source_code_type\n  , diagnosis_code_17 as source_code\n  , 17 as diagnosis_rank\n  , diagnosis_poa_17 as present_on_admit_code\n  , data_source\nfrom tuva.claims_preprocessing.normalized_input_medical_claim\nwhere diagnosis_code_17 is not null\n\nunion all\n\nselect\n    claim_id\n  , claim_line_number\n  , person_id\n  , member_id\n  , coalesce(admission_date\n           , claim_start_date\n           , discharge_date\n           , claim_end_date\n    ) as recorded_date\n  , 'discharge_diagnosis' as condition_type\n  , diagnosis_code_type as source_code_type\n  , diagnosis_code_18 as source_code\n  , 18 as diagnosis_rank\n  , diagnosis_poa_18 as present_on_admit_code\n  , data_source\nfrom tuva.claims_preprocessing.normalized_input_medical_claim\nwhere diagnosis_code_18 is not null\n\nunion all\n\nselect\n    claim_id\n  , claim_line_number\n  , person_id\n  , member_id\n  , coalesce(admission_date\n           , claim_start_date\n           , discharge_date\n           , claim_end_date\n    ) as recorded_date\n  , 'discharge_diagnosis' as condition_type\n  , diagnosis_code_type as source_code_type\n  , diagnosis_code_19 as source_code\n  , 19 as diagnosis_rank\n  , diagnosis_poa_19 as present_on_admit_code\n  , data_source\nfrom tuva.claims_preprocessing.normalized_input_medical_claim\nwhere diagnosis_code_19 is not null\n\nunion all\n\nselect\n    claim_id\n  , claim_line_number\n  , person_id\n  , member_id\n  , coalesce(admission_date\n           , claim_start_date\n           , discharge_date\n           , claim_end_date\n    ) as recorded_date\n  , 'discharge_diagnosis' as condition_type\n  , diagnosis_code_type as source_code_type\n  , diagnosis_code_20 as source_code\n  , 20 as diagnosis_rank\n  , diagnosis_poa_20 as present_on_admit_code\n  , data_source\nfrom tuva.claims_preprocessing.normalized_input_medical_claim\nwhere diagnosis_code_20 is not null\n\nunion all\n\nselect\n    claim_id\n  , claim_line_number\n  , person_id\n  , member_id\n  , coalesce(admission_date\n           , claim_start_date\n           , discharge_date\n           , claim_end_date\n    ) as recorded_date\n  , 'discharge_diagnosis' as condition_type\n  , diagnosis_code_type as source_code_type\n  , diagnosis_code_21 as source_code\n  , 21 as diagnosis_rank\n  , diagnosis_poa_21 as present_on_admit_code\n  , data_source\nfrom tuva.claims_preprocessing.normalized_input_medical_claim\nwhere diagnosis_code_21 is not null\n\nunion all\n\nselect\n    claim_id\n  , claim_line_number\n  , person_id\n  , member_id\n  , coalesce(admission_date\n           , claim_start_date\n           , discharge_date\n           , claim_end_date\n    ) as recorded_date\n  , 'discharge_diagnosis' as condition_type\n  , diagnosis_code_type as source_code_type\n  , diagnosis_code_22 as source_code\n  , 22 as diagnosis_rank\n  , diagnosis_poa_22 as present_on_admit_code\n  , data_source\nfrom tuva.claims_preprocessing.normalized_input_medical_claim\nwhere diagnosis_code_22 is not null\n\nunion all\n\nselect\n    claim_id\n  , claim_line_number\n  , person_id\n  , member_id\n  , coalesce(admission_date\n           , claim_start_date\n           , discharge_date\n           , claim_end_date\n    ) as recorded_date\n  , 'discharge_diagnosis' as condition_type\n  , diagnosis_code_type as source_code_type\n  , diagnosis_code_23 as source_code\n  , 23 as diagnosis_rank\n  , diagnosis_poa_23 as present_on_admit_code\n  , data_source\nfrom tuva.claims_preprocessing.normalized_input_medical_claim\nwhere diagnosis_code_23 is not null\n\nunion all\n\nselect\n    claim_id\n  , claim_line_number\n  , person_id\n  , member_id\n  , coalesce(admission_date\n           , claim_start_date\n           , discharge_date\n           , claim_end_date\n    ) as recorded_date\n  , 'discharge_diagnosis' as condition_type\n  , diagnosis_code_type as source_code_type\n  , diagnosis_code_24 as source_code\n  , 24 as diagnosis_rank\n  , diagnosis_poa_24 as present_on_admit_code\n  , data_source\nfrom tuva.claims_preprocessing.normalized_input_medical_claim\nwhere diagnosis_code_24 is not null\n\nunion all\n\nselect\n    claim_id\n  , claim_line_number\n  , person_id\n  , member_id\n  , coalesce(admission_date\n           , claim_start_date\n           , discharge_date\n           , claim_end_date\n    ) as recorded_date\n  , 'discharge_diagnosis' as condition_type\n  , diagnosis_code_type as source_code_type\n  , diagnosis_code_25 as source_code\n  , 25 as diagnosis_rank\n  , diagnosis_poa_25 as present_on_admit_code\n  , data_source\nfrom tuva.claims_preprocessing.normalized_input_medical_claim\nwhere diagnosis_code_25 is not null\n\n)\n\nselect distinct\n\n    \n        try_cast(CAST(unpivot_cte.data_source AS TEXT) || '_' || CAST(unpivot_cte.claim_id AS TEXT) || '_' || CAST(unpivot_cte.diagnosis_rank AS TEXT) || '_' || CAST(unpivot_cte.source_code AS TEXT) as TEXT)\n     as condition_id\n    , cast(unpivot_cte.person_id as TEXT) as person_id\n    , cast(unpivot_cte.member_id as TEXT) as member_id\n    , cast(null as TEXT) as patient_id\n    , cast(null as TEXT) as encounter_id --one claim can be on multiple encounters, so nulling out for now\n    , cast(unpivot_cte.claim_id as TEXT) as claim_id\n    , try_cast( unpivot_cte.recorded_date as date ) as recorded_date\n    , try_cast( null as date ) as onset_date\n    , try_cast( null as date ) as resolved_date\n    , cast('active' as TEXT) as status\n    , cast(unpivot_cte.condition_type as TEXT) as condition_type\n    , cast(unpivot_cte.source_code_type as TEXT) as source_code_type\n    , cast(unpivot_cte.source_code as TEXT) as source_code\n    , cast(null as TEXT) as source_description\n    , cast(\n        case\n        when icd.icd_10_cm is not null then 'icd-10-cm'\n        end as TEXT\n      ) as normalized_code_type\n    , cast(icd.icd_10_cm as TEXT) as normalized_code\n    , cast(icd.long_description as TEXT) as normalized_description\n    , cast(unpivot_cte.diagnosis_rank as integer) as condition_rank\n    , cast(unpivot_cte.present_on_admit_code as TEXT) as present_on_admit_code\n    , cast(poa.present_on_admit_description as TEXT) as present_on_admit_description\n    , cast(unpivot_cte.data_source as TEXT) as data_source\n    , cast('2025-06-03 19:49:40.396647+00:00' as timestamp) as tuva_last_run\nfrom unpivot_cte\n--inner join tuva.claims_preprocessing.encounters__combined_claim_line_crosswalk x on unpivot_cte.claim_id = x.claim_id\n--and\n--unpivot_cte.claim_line_number = x.claim_line_number\n--and\n--x.claim_line_attribution_number = 1\nleft outer join tuva.terminology.icd_10_cm as icd\n    on unpivot_cte.source_code = icd.icd_10_cm\nleft outer join tuva.terminology.present_on_admission as poa\n    on unpivot_cte.present_on_admit_code = poa.present_on_admit_code", "relation_name": "tuva.core._stg_claims_condition", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:27.698972Z", "completed_at": "2025-06-03T19:50:27.728393Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:27.735503Z", "completed_at": "2025-06-03T19:50:27.735510Z"}], "thread_id": "Thread-1", "execution_time": 0.0386199951171875, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.core__stg_claims_procedure", "compiled": true, "compiled_code": "\n\n-- *************************************************\n-- This dbt model creates the procedure table in core.\n-- *************************************************\n\nwith unpivot_cte as (\n\nselect\n    claim_id as claim_id\n  , claim_line_number as procedure_sequence_id\n  , person_id\n  , member_id\n  , coalesce(claim_line_start_date\n           , claim_start_date\n           , admission_date\n           , discharge_date\n           , claim_end_date\n    ) as procedure_date\n  , 'hcpcs' as source_code_type\n  , hcpcs_code as source_code\n  , rendering_id as practitioner_npi\n  , hcpcs_modifier_1 as modifier_1\n  , hcpcs_modifier_2 as modifier_2\n  , hcpcs_modifier_3 as modifier_3\n  , hcpcs_modifier_4 as modifier_4\n  , hcpcs_modifier_5 as modifier_5\n  , data_source as data_source\nfrom tuva.claims_preprocessing.normalized_input_medical_claim\nwhere hcpcs_code is not null\n\n\nunion distinct\n\n\nselect\n    claim_id as claim_id\n  , 1 as procedure_sequence_id\n  , person_id\n  , member_id\n  , procedure_date_1 as procedure_date\n  , procedure_code_type as source_code_type\n  , procedure_code_1 as source_code\n  , rendering_id as practitioner_npi\n  , null as modifier_1\n  , null as modifier_2\n  , null as modifier_3\n  , null as modifier_4\n  , null as modifier_5\n  , data_source as data_source\nfrom tuva.claims_preprocessing.normalized_input_medical_claim\nwhere procedure_code_1 is not null\n\n\nunion distinct\n\n\nselect\n    claim_id as claim_id\n  , 2 as procedure_sequence_id\n  , person_id\n  , member_id\n  , procedure_date_2 as procedure_date\n  , procedure_code_type as source_code_type\n  , procedure_code_2 as source_code\n  , rendering_id as practitioner_npi\n  , null as modifier_1\n  , null as modifier_2\n  , null as modifier_3\n  , null as modifier_4\n  , null as modifier_5\n  , data_source as data_source\nfrom tuva.claims_preprocessing.normalized_input_medical_claim\nwhere procedure_code_2 is not null\n\n\nunion distinct\n\n\nselect\n    claim_id as claim_id\n  , 3 as procedure_sequence_id\n  , person_id\n  , member_id\n  , procedure_date_3 as procedure_date\n  , procedure_code_type as source_code_type\n  , procedure_code_3 as source_code\n  , rendering_id as practitioner_npi\n  , null as modifier_1\n  , null as modifier_2\n  , null as modifier_3\n  , null as modifier_4\n  , null as modifier_5\n  , data_source as data_source\nfrom tuva.claims_preprocessing.normalized_input_medical_claim\nwhere procedure_code_3 is not null\n\n\nunion distinct\n\n\nselect\n    claim_id as claim_id\n  , 4 as procedure_sequence_id\n  , person_id\n  , member_id\n  , procedure_date_4 as procedure_date\n  , procedure_code_type as source_code_type\n  , procedure_code_4 as source_code\n  , rendering_id as practitioner_npi\n  , null as modifier_1\n  , null as modifier_2\n  , null as modifier_3\n  , null as modifier_4\n  , null as modifier_5\n  , data_source as data_source\nfrom tuva.claims_preprocessing.normalized_input_medical_claim\nwhere procedure_code_4 is not null\n\n\nunion distinct\n\n\nselect\n    claim_id as claim_id\n  , 5 as procedure_sequence_id\n  , person_id\n  , member_id\n  , procedure_date_5 as procedure_date\n  , procedure_code_type as source_code_type\n  , procedure_code_5 as source_code\n  , rendering_id as practitioner_npi\n  , null as modifier_1\n  , null as modifier_2\n  , null as modifier_3\n  , null as modifier_4\n  , null as modifier_5\n  , data_source as data_source\nfrom tuva.claims_preprocessing.normalized_input_medical_claim\nwhere procedure_code_5 is not null\n\n\nunion distinct\n\n\nselect\n    claim_id as claim_id\n  , 6 as procedure_sequence_id\n  , person_id\n  , member_id\n  , procedure_date_6 as procedure_date\n  , procedure_code_type as source_code_type\n  , procedure_code_6 as source_code\n  , rendering_id as practitioner_npi\n  , null as modifier_1\n  , null as modifier_2\n  , null as modifier_3\n  , null as modifier_4\n  , null as modifier_5\n  , data_source as data_source\nfrom tuva.claims_preprocessing.normalized_input_medical_claim\nwhere procedure_code_6 is not null\n\n\nunion distinct\n\n\nselect\n    claim_id as claim_id\n  , 7 as procedure_sequence_id\n  , person_id\n  , member_id\n  , procedure_date_7 as procedure_date\n  , procedure_code_type as source_code_type\n  , procedure_code_7 as source_code\n  , rendering_id as practitioner_npi\n  , null as modifier_1\n  , null as modifier_2\n  , null as modifier_3\n  , null as modifier_4\n  , null as modifier_5\n  , data_source as data_source\nfrom tuva.claims_preprocessing.normalized_input_medical_claim\nwhere procedure_code_7 is not null\n\n\nunion distinct\n\n\nselect\n    claim_id as claim_id\n  , 8 as procedure_sequence_id\n  , person_id\n  , member_id\n  , procedure_date_8 as procedure_date\n  , procedure_code_type as source_code_type\n  , procedure_code_8 as source_code\n  , rendering_id as practitioner_npi\n  , null as modifier_1\n  , null as modifier_2\n  , null as modifier_3\n  , null as modifier_4\n  , null as modifier_5\n  , data_source as data_source\nfrom tuva.claims_preprocessing.normalized_input_medical_claim\nwhere procedure_code_8 is not null\n\n\nunion distinct\n\n\nselect\n    claim_id as claim_id\n  , 9 as procedure_sequence_id\n  , person_id\n  , member_id\n  , procedure_date_9 as procedure_date\n  , procedure_code_type as source_code_type\n  , procedure_code_9 as source_code\n  , rendering_id as practitioner_npi\n  , null as modifier_1\n  , null as modifier_2\n  , null as modifier_3\n  , null as modifier_4\n  , null as modifier_5\n  , data_source as data_source\nfrom tuva.claims_preprocessing.normalized_input_medical_claim\nwhere procedure_code_9 is not null\n\n\nunion distinct\n\n\nselect\n    claim_id as claim_id\n  , 10 as procedure_sequence_id\n  , person_id\n  , member_id\n  , procedure_date_10 as procedure_date\n  , procedure_code_type as source_code_type\n  , procedure_code_10 as source_code\n  , rendering_id as practitioner_npi\n  , null as modifier_1\n  , null as modifier_2\n  , null as modifier_3\n  , null as modifier_4\n  , null as modifier_5\n  , data_source as data_source\nfrom tuva.claims_preprocessing.normalized_input_medical_claim\nwhere procedure_code_10 is not null\n\n\nunion distinct\n\n\nselect\n    claim_id as claim_id\n  , 11 as procedure_sequence_id\n  , person_id\n  , member_id\n  , procedure_date_11 as procedure_date\n  , procedure_code_type as source_code_type\n  , procedure_code_11 as source_code\n  , rendering_id as practitioner_npi\n  , null as modifier_1\n  , null as modifier_2\n  , null as modifier_3\n  , null as modifier_4\n  , null as modifier_5\n  , data_source as data_source\nfrom tuva.claims_preprocessing.normalized_input_medical_claim\nwhere procedure_code_11 is not null\n\n\nunion distinct\n\n\nselect\n    claim_id as claim_id\n  , 12 as procedure_sequence_id\n  , person_id\n  , member_id\n  , procedure_date_12 as procedure_date\n  , procedure_code_type as source_code_type\n  , procedure_code_12 as source_code\n  , rendering_id as practitioner_npi\n  , null as modifier_1\n  , null as modifier_2\n  , null as modifier_3\n  , null as modifier_4\n  , null as modifier_5\n  , data_source as data_source\nfrom tuva.claims_preprocessing.normalized_input_medical_claim\nwhere procedure_code_12 is not null\n\n\nunion distinct\n\n\nselect\n    claim_id as claim_id\n  , 13 as procedure_sequence_id\n  , person_id\n  , member_id\n  , procedure_date_13 as procedure_date\n  , procedure_code_type as source_code_type\n  , procedure_code_13 as source_code\n  , rendering_id as practitioner_npi\n  , null as modifier_1\n  , null as modifier_2\n  , null as modifier_3\n  , null as modifier_4\n  , null as modifier_5\n  , data_source as data_source\nfrom tuva.claims_preprocessing.normalized_input_medical_claim\nwhere procedure_code_13 is not null\n\n\nunion distinct\n\n\nselect\n    claim_id as claim_id\n  , 14 as procedure_sequence_id\n  , person_id\n  , member_id\n  , procedure_date_14 as procedure_date\n  , procedure_code_type as source_code_type\n  , procedure_code_14 as source_code\n  , rendering_id as practitioner_npi\n  , null as modifier_1\n  , null as modifier_2\n  , null as modifier_3\n  , null as modifier_4\n  , null as modifier_5\n  , data_source as data_source\nfrom tuva.claims_preprocessing.normalized_input_medical_claim\nwhere procedure_code_14 is not null\n\n\nunion distinct\n\n\nselect\n    claim_id as claim_id\n  , 15 as procedure_sequence_id\n  , person_id\n  , member_id\n  , procedure_date_15 as procedure_date\n  , procedure_code_type as source_code_type\n  , procedure_code_15 as source_code\n  , rendering_id as practitioner_npi\n  , null as modifier_1\n  , null as modifier_2\n  , null as modifier_3\n  , null as modifier_4\n  , null as modifier_5\n  , data_source as data_source\nfrom tuva.claims_preprocessing.normalized_input_medical_claim\nwhere procedure_code_15 is not null\n\n\nunion distinct\n\n\nselect\n    claim_id as claim_id\n  , 16 as procedure_sequence_id\n  , person_id\n  , member_id\n  , procedure_date_16 as procedure_date\n  , procedure_code_type as source_code_type\n  , procedure_code_16 as source_code\n  , rendering_id as practitioner_npi\n  , null as modifier_1\n  , null as modifier_2\n  , null as modifier_3\n  , null as modifier_4\n  , null as modifier_5\n  , data_source as data_source\nfrom tuva.claims_preprocessing.normalized_input_medical_claim\nwhere procedure_code_16 is not null\n\n\nunion distinct\n\n\nselect\n    claim_id as claim_id\n  , 17 as procedure_sequence_id\n  , person_id\n  , member_id\n  , procedure_date_17 as procedure_date\n  , procedure_code_type as source_code_type\n  , procedure_code_17 as source_code\n  , rendering_id as practitioner_npi\n  , null as modifier_1\n  , null as modifier_2\n  , null as modifier_3\n  , null as modifier_4\n  , null as modifier_5\n  , data_source as data_source\nfrom tuva.claims_preprocessing.normalized_input_medical_claim\nwhere procedure_code_17 is not null\n\n\nunion distinct\n\n\nselect\n    claim_id as claim_id\n  , 18 as procedure_sequence_id\n  , person_id\n  , member_id\n  , procedure_date_18 as procedure_date\n  , procedure_code_type as source_code_type\n  , procedure_code_18 as source_code\n  , rendering_id as practitioner_npi\n  , null as modifier_1\n  , null as modifier_2\n  , null as modifier_3\n  , null as modifier_4\n  , null as modifier_5\n  , data_source as data_source\nfrom tuva.claims_preprocessing.normalized_input_medical_claim\nwhere procedure_code_18 is not null\n\n\nunion distinct\n\n\nselect\n    claim_id as claim_id\n  , 19 as procedure_sequence_id\n  , person_id\n  , member_id\n  , procedure_date_19 as procedure_date\n  , procedure_code_type as source_code_type\n  , procedure_code_19 as source_code\n  , rendering_id as practitioner_npi\n  , null as modifier_1\n  , null as modifier_2\n  , null as modifier_3\n  , null as modifier_4\n  , null as modifier_5\n  , data_source as data_source\nfrom tuva.claims_preprocessing.normalized_input_medical_claim\nwhere procedure_code_19 is not null\n\n\nunion distinct\n\n\nselect\n    claim_id as claim_id\n  , 20 as procedure_sequence_id\n  , person_id\n  , member_id\n  , procedure_date_20 as procedure_date\n  , procedure_code_type as source_code_type\n  , procedure_code_20 as source_code\n  , rendering_id as practitioner_npi\n  , null as modifier_1\n  , null as modifier_2\n  , null as modifier_3\n  , null as modifier_4\n  , null as modifier_5\n  , data_source as data_source\nfrom tuva.claims_preprocessing.normalized_input_medical_claim\nwhere procedure_code_20 is not null\n\n\nunion distinct\n\n\nselect\n    claim_id as claim_id\n  , 21 as procedure_sequence_id\n  , person_id\n  , member_id\n  , procedure_date_21 as procedure_date\n  , procedure_code_type as source_code_type\n  , procedure_code_21 as source_code\n  , rendering_id as practitioner_npi\n  , null as modifier_1\n  , null as modifier_2\n  , null as modifier_3\n  , null as modifier_4\n  , null as modifier_5\n  , data_source as data_source\nfrom tuva.claims_preprocessing.normalized_input_medical_claim\nwhere procedure_code_21 is not null\n\n\nunion distinct\n\n\nselect\n    claim_id as claim_id\n  , 22 as procedure_sequence_id\n  , person_id\n  , member_id\n  , procedure_date_22 as procedure_date\n  , procedure_code_type as source_code_type\n  , procedure_code_22 as source_code\n  , rendering_id as practitioner_npi\n  , null as modifier_1\n  , null as modifier_2\n  , null as modifier_3\n  , null as modifier_4\n  , null as modifier_5\n  , data_source as data_source\nfrom tuva.claims_preprocessing.normalized_input_medical_claim\nwhere procedure_code_22 is not null\n\n\nunion distinct\n\n\nselect\n    claim_id as claim_id\n  , 23 as procedure_sequence_id\n  , person_id\n  , member_id\n  , procedure_date_23 as procedure_date\n  , procedure_code_type as source_code_type\n  , procedure_code_23 as source_code\n  , rendering_id as practitioner_npi\n  , null as modifier_1\n  , null as modifier_2\n  , null as modifier_3\n  , null as modifier_4\n  , null as modifier_5\n  , data_source as data_source\nfrom tuva.claims_preprocessing.normalized_input_medical_claim\nwhere procedure_code_23 is not null\n\n\nunion distinct\n\n\nselect\n    claim_id as claim_id\n  , 24 as procedure_sequence_id\n  , person_id\n  , member_id\n  , procedure_date_24 as procedure_date\n  , procedure_code_type as source_code_type\n  , procedure_code_24 as source_code\n  , rendering_id as practitioner_npi\n  , null as modifier_1\n  , null as modifier_2\n  , null as modifier_3\n  , null as modifier_4\n  , null as modifier_5\n  , data_source as data_source\nfrom tuva.claims_preprocessing.normalized_input_medical_claim\nwhere procedure_code_24 is not null\n\n\nunion distinct\n\n\nselect\n    claim_id as claim_id\n  , 25 as procedure_sequence_id\n  , person_id\n  , member_id\n  , procedure_date_25 as procedure_date\n  , procedure_code_type as source_code_type\n  , procedure_code_25 as source_code\n  , rendering_id as practitioner_npi\n  , null as modifier_1\n  , null as modifier_2\n  , null as modifier_3\n  , null as modifier_4\n  , null as modifier_5\n  , data_source as data_source\nfrom tuva.claims_preprocessing.normalized_input_medical_claim\nwhere procedure_code_25 is not null\n\n)\n\nselect distinct\n\n    \n        try_cast(unpivot_cte.data_source || '_' || unpivot_cte.claim_id || '_' || unpivot_cte.procedure_sequence_id || '_' || unpivot_cte.source_code || case when unpivot_cte.modifier_1 is not null then CONCAT('_', unpivot_cte.modifier_1) else '' end || case when unpivot_cte.modifier_2 is not null then CONCAT('_', unpivot_cte.modifier_2) else '' end || case when unpivot_cte.modifier_3 is not null then CONCAT('_', unpivot_cte.modifier_3) else '' end || case when unpivot_cte.modifier_4 is not null then CONCAT('_', unpivot_cte.modifier_4) else '' end || case when unpivot_cte.modifier_5 is not null then CONCAT('_', unpivot_cte.modifier_5) else '' end || case when unpivot_cte.practitioner_npi is not null then CONCAT('_', unpivot_cte.practitioner_npi) else '' end as TEXT)\n     as procedure_id\n    , cast(unpivot_cte.person_id as TEXT) as person_id\n    , cast(unpivot_cte.member_id as TEXT) as member_id\n    , cast(null as TEXT) as patient_id\n    , cast(null as TEXT) as encounter_id --one claim can be on multiple encounters, so nulling out for now\n    , cast(unpivot_cte.claim_id as TEXT) as claim_id\n    , try_cast( unpivot_cte.procedure_date as date ) as procedure_date\n    , cast(unpivot_cte.source_code_type as TEXT) as source_code_type\n    , cast(unpivot_cte.source_code as TEXT) as source_code\n    , cast(null as TEXT) as source_description\n    , cast(\n        case\n        when icd.icd_10_pcs is not null then 'icd-10-pcs'\n        when hcpcs.hcpcs is not null then 'hcpcs'\n        end\n      as TEXT) as normalized_code_type\n    , cast(\n        coalesce(\n            icd.icd_10_pcs\n          , hcpcs.hcpcs\n        )\n      as TEXT) as normalized_code\n    , cast(\n        coalesce(\n            icd.description\n          , hcpcs.short_description\n        )\n      as TEXT) as normalized_description\n    , cast(unpivot_cte.modifier_1 as TEXT) as modifier_1\n    , cast(unpivot_cte.modifier_2 as TEXT) as modifier_2\n    , cast(unpivot_cte.modifier_3 as TEXT) as modifier_3\n    , cast(unpivot_cte.modifier_4 as TEXT) as modifier_4\n    , cast(unpivot_cte.modifier_5 as TEXT) as modifier_5\n    , cast(unpivot_cte.practitioner_npi as TEXT) as practitioner_id\n    , cast(unpivot_cte.data_source as TEXT) as data_source\n    , cast('2025-06-03 19:49:40.396647+00:00' as timestamp) as tuva_last_run\nfrom unpivot_cte\n--inner join tuva.claims_preprocessing.encounters__combined_claim_line_crosswalk x on unpivot_cte.claim_id = x.claim_id\n--and\n--unpivot_cte.claim_line_number = x.claim_line_number\n--and\n--x.claim_line_attribution_number = 1\nleft outer join tuva.terminology.icd_10_pcs as icd\n    on unpivot_cte.source_code = icd.icd_10_pcs\nleft outer join tuva.terminology.hcpcs_level_2 as hcpcs\n    on unpivot_cte.source_code = hcpcs.hcpcs", "relation_name": "tuva.core._stg_claims_procedure", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:27.720504Z", "completed_at": "2025-06-03T19:50:27.734127Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:27.741809Z", "completed_at": "2025-06-03T19:50:27.741817Z"}], "thread_id": "Thread-2", "execution_time": 0.043710947036743164, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.dialysis__encounter_grain", "compiled": true, "compiled_code": "\n\nwith encounter_date as (\n  select distinct old_encounter_id\n  , start_date as encounter_start_date\n  from tuva.claims_preprocessing.dialysis__generate_encounter_id\n)\n\n, detail_values as (\n    select stg.*\n    , cli.encounter_id\n    , cli.old_encounter_id\n      , cli.encounter_type\n    , cli.encounter_group\n    , d.encounter_start_date\n    , row_number() over (partition by cli.encounter_id\norder by stg.claim_type, stg.start_date) as encounter_row_number --institutional then professional\n    from tuva.claims_preprocessing.encounters__stg_medical_claim as stg\n    inner join tuva.claims_preprocessing.encounters__combined_claim_line_crosswalk as cli on stg.claim_id = cli.claim_id\n    and\n    stg.claim_line_number = cli.claim_line_number\n    and\n    cli.encounter_type = 'dialysis'\n    and\n    cli.claim_line_attribution_number = 1\n    inner join encounter_date as d on cli.old_encounter_id = d.old_encounter_id\n)\n\n, patient as (\n    select\n        patient_data_source_id\n        , birth_date\n        , gender\n        , race\n    from tuva.claims_preprocessing.encounters__stg_eligibility\n    where patient_row_num = 1\n    )\n\n, total_amounts as (\n    select\n    encounter_id\n    , encounter_type\n    , encounter_group\n    , sum(paid_amount) as total_paid_amount\n    , sum(allowed_amount) as total_allowed_amount\n    , sum(charge_amount) as total_charge_amount\n    , count(distinct claim_id) as claim_count\n    , count(distinct(case when claim_type = 'institutional' then claim_id else null end)) as inst_claim_count\n    , count(distinct(case when claim_type = 'professional' then claim_id else null end)) as prof_claim_count\nfrom detail_values\ngroup by encounter_id\n, encounter_type\n, encounter_group\n)\n\n\n, highest_paid_diagnosis as (\n  select encounter_id\n  , diagnosis_code_1\n  , diagnosis_code_type\n  , row_number() over (partition by encounter_id\norder by sum(paid_amount) desc) as paid_order\n  , sum(paid_amount) as paid_amount\n  from detail_values\n  where diagnosis_code_1 is not null\n  group by diagnosis_code_1\n  , encounter_id\n  , diagnosis_code_type\n)\n\n, highest_paid_facility as (\n  select encounter_id\n  , facility_id\n  , row_number() over (partition by encounter_id\norder by sum(paid_amount) desc) as paid_order\n  , sum(paid_amount) as paid_amount\n  from detail_values\n  where facility_id is not null\n  group by\n   encounter_id\n  , facility_id\n)\n\n, service_category_flags as (\n    select\n        d.encounter_id\n       , max(case when scr.service_category_2 = 'lab' then 1 else 0 end) as lab_flag\n       , max(case when scr.service_category_2 = 'ambulance' then 1 else 0 end) as ambulance_flag\n       , max(case when scr.service_category_2 = 'durable medical equipment' then 1 else 0 end) as dme_flag\n       , max(case when scr.service_category_2 = 'outpatient pharmacy' then 1\n                when scr.service_category_2 = 'office-based pharmacy' then 1 else 0 end) as pharmacy_flag\n    from detail_values as d\n    left outer join tuva.claims_preprocessing.service_category_grouper as scr on d.claim_id = scr.claim_id\n    and\n    scr.claim_line_number = d.claim_line_number\n    group by d.encounter_id\n)\n\n\n\nselect d.encounter_id\n, d.encounter_start_date\n, d.patient_data_source_id\n, tot.encounter_type\n, tot.encounter_group\n, datediff(\n        day,\n        birth_date,\n        d.encounter_start_date\n        ) / 365 as admit_age\n, e.gender\n, e.race\n, hp.diagnosis_code_type as primary_diagnosis_code_type\n, hp.diagnosis_code_1 as primary_diagnosis_code\n, coalesce(icd10cm.long_description, icd9cm.long_description) as primary_diagnosis_description\n, hf.facility_id as facility_id\n, b.provider_organization_name as facility_name\n, b.primary_specialty_description as facility_type\n, sc.lab_flag\n, sc.dme_flag\n, sc.ambulance_flag\n, sc.pharmacy_flag\n, tot.total_paid_amount\n, tot.total_allowed_amount\n, tot.total_charge_amount\n, tot.claim_count\n, tot.inst_claim_count\n, tot.prof_claim_count\n, d.data_source\n, '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom detail_values as d\ninner join total_amounts as tot on d.encounter_id = tot.encounter_id\ninner join service_category_flags as sc on d.encounter_id = sc.encounter_id\nleft outer join highest_paid_diagnosis as hp on d.encounter_id = hp.encounter_id\nand\nhp.paid_order = 1\nleft outer join highest_paid_facility as hf on d.encounter_id = hf.encounter_id\nand\nhf.paid_order = 1\nleft outer join patient as e\n  on d.patient_data_source_id = e.patient_data_source_id\nleft outer join tuva.terminology.provider as b\n  on hf.facility_id = b.npi\nleft outer join tuva.terminology.icd_10_cm as icd10cm\n  on hp.diagnosis_code_1 = icd10cm.icd_10_cm\n  and hp.diagnosis_code_type = 'icd-10-cm'\nleft outer join tuva.terminology.icd_9_cm as icd9cm\n  on hp.diagnosis_code_1 = icd9cm.icd_9_cm\n  and hp.diagnosis_code_type = 'icd-9-cm'\nwhere d.encounter_row_number = 1", "relation_name": "tuva.claims_preprocessing.dialysis__encounter_grain", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:27.735897Z", "completed_at": "2025-06-03T19:50:27.745990Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:27.746784Z", "completed_at": "2025-06-03T19:50:27.746789Z"}], "thread_id": "Thread-3", "execution_time": 0.01902484893798828, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.emergency_department__encounter_grain", "compiled": true, "compiled_code": "\n\nwith detail_values as (\n    select stg.*\n    , cli.encounter_id\n    , cli.old_encounter_id\n    , ed.encounter_start_date\n    , ed.encounter_end_date\n    , cli.encounter_type\n    , cli.encounter_group\n    from tuva.claims_preprocessing.encounters__stg_medical_claim as stg\n    inner join tuva.claims_preprocessing.encounters__combined_claim_line_crosswalk as cli on stg.claim_id = cli.claim_id  --replace this ref with the deduped version when complete\n    and\n    stg.claim_line_number = cli.claim_line_number\n    and\n    cli.encounter_type = 'emergency department'\n    and\n    cli.claim_line_attribution_number = 1\n    inner join tuva.claims_preprocessing.emergency_department__start_end_dates as ed on cli.old_encounter_id = ed.encounter_id\n)\n\n, encounter_cross_walk as (\n  select distinct encounter_id\n  , old_encounter_id\n  from detail_values\n)\n\n, first_last_inst_inst_values as (\nselect *\n, row_number() over (partition by encounter_id\norder by start_date, claim_id) as first_num\n, row_number() over (partition by encounter_id\norder by end_date desc, claim_id) as last_num\nfrom detail_values\nwhere claim_type = 'institutional'\n)\n\n, encounter_header_values as (\n  select distinct patient_data_source_id\n  , data_source\n  , encounter_id\n  from detail_values\n)\n\n, institutional_claim_details as (\n    select distinct\n        d.encounter_id\n        , f.diagnosis_code_1\n        , f.diagnosis_code_type\n        , f.facility_id as facility_id\n        , f.drg_code_type as drg_code_type\n        , f.drg_code as drg_code\n        , f.admit_source_code as admit_source_code\n        , f.admit_type_code as admit_type_code\n        , l.discharge_disposition_code as discharge_disposition_code\n        , d.patient_data_source_id\n        , d.data_source\n    from detail_values as d\n    inner join first_last_inst_inst_values as f on d.encounter_id = f.encounter_id\n    and\n    f.first_num = 1\n    inner join first_last_inst_inst_values as l on d.encounter_id = l.encounter_id\n    and\n    l.last_num = 1\n\n)\n\n, patient as (\n    select\n        patient_data_source_id\n        , birth_date\n        , gender\n        , race\n    from tuva.claims_preprocessing.encounters__stg_eligibility\n    where patient_row_num = 1\n    )\n\n, total_amounts as (\n    select\n    encounter_id\n    , encounter_type\n    , encounter_group\n    , sum(paid_amount) as total_paid_amount\n    , sum(allowed_amount) as total_allowed_amount\n    , sum(charge_amount) as total_charge_amount\n    , count(distinct claim_id) as claim_count\n    , count(distinct(case when claim_type = 'institutional' then claim_id else null end)) as inst_claim_count\n    , count(distinct(case when claim_type = 'professional' then claim_id else null end)) as prof_claim_count\nfrom detail_values\ngroup by encounter_id\n, encounter_type -- not changing grain, but bringing into final\n, encounter_group\n)\n\n\n\n\n, service_category_flags as (\n    select\n        d.encounter_id\n       , max(case when scr.service_category_2 = 'lab' then 1 else 0 end) as lab_flag\n       , max(case when scr.service_category_2 = 'ambulance' then 1 else 0 end) as ambulance_flag\n       , max(case when scr.service_category_2 = 'durable medical equipment' then 1 else 0 end) as dme_flag\n       , max(case when scr.service_category_2 = 'observation' then 1 else 0 end) as observation_flag\n       , max(case when scr.service_category_2 = 'pharmacy' then 1\n              else 0 end) as pharmacy_flag\n    from detail_values as d\n    left outer join tuva.claims_preprocessing.service_category_grouper as scr on d.claim_id = scr.claim_id\n    and\n    scr.claim_line_number = d.claim_line_number\n    group by d.encounter_id\n)\n\n\nselect\n  x.encounter_id\n, a.encounter_start_date\n, a.encounter_end_date\n, ehv.patient_data_source_id\n, tot.encounter_type\n, tot.encounter_group\n, datediff(\n        day,\n        birth_date,\n        a.encounter_end_date\n        ) / 365 as admit_age\n, e.gender\n, e.race\n, c.diagnosis_code_type as primary_diagnosis_code_type\n, c.diagnosis_code_1 as primary_diagnosis_code\n, coalesce(icd10cm.long_description, icd9cm.long_description) as primary_diagnosis_description\n, sc.observation_flag\n, c.facility_id as facility_id\n, b.provider_organization_name as facility_name\n, b.primary_specialty_description as facility_type\n, sc.lab_flag\n, sc.dme_flag\n, sc.ambulance_flag\n, sc.pharmacy_flag\n, c.drg_code_type\n, c.drg_code\n, coalesce(msdrg.ms_drg_description, aprdrg.apr_drg_description) as drg_description\n, coalesce(msdrg.medical_surgical, aprdrg.medical_surgical) as medical_surgical\n, c.admit_source_code\n, h.admit_source_description\n, c.admit_type_code\n, i.admit_type_description\n, c.discharge_disposition_code\n, g.discharge_disposition_description\n, tot.total_paid_amount\n, tot.total_allowed_amount\n, tot.total_charge_amount\n, tot.claim_count\n, tot.inst_claim_count\n, tot.prof_claim_count\n, datediff(\n        day,\n        a.encounter_start_date,\n        a.encounter_end_date\n        ) as length_of_stay\n, case\n    when c.discharge_disposition_code = '20' then 1\n    else 0\n  end as mortality_flag\n, ehv.data_source\n, '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom tuva.claims_preprocessing.emergency_department__start_end_dates as a\ninner join encounter_cross_walk as x on a.encounter_id = x.old_encounter_id\ninner join total_amounts as tot on x.encounter_id = tot.encounter_id\ninner join service_category_flags as sc on x.encounter_id = sc.encounter_id\ninner join encounter_header_values as ehv on x.encounter_id = ehv.encounter_id\nleft outer join institutional_claim_details as c\n  on x.encounter_id = c.encounter_id\nleft outer join patient as e\n  on c.patient_data_source_id = e.patient_data_source_id\nleft outer join tuva.terminology.provider as b\n  on c.facility_id = b.npi\nleft outer join tuva.terminology.discharge_disposition as g\n  on c.discharge_disposition_code = g.discharge_disposition_code\nleft outer join tuva.terminology.admit_source as h\n  on c.admit_source_code = h.admit_source_code\nleft outer join tuva.terminology.admit_type as i\n  on c.admit_type_code = i.admit_type_code\nleft outer join tuva.terminology.ms_drg as msdrg\n  on c.drg_code_type = 'ms-drg'\n  and c.drg_code = msdrg.ms_drg_code\nleft outer join tuva.terminology.apr_drg as aprdrg\n  on c.drg_code_type = 'apr-drg'\n  and c.drg_code = aprdrg.apr_drg_code\nleft outer join tuva.terminology.icd_10_cm as icd10cm\n  on c.diagnosis_code_1 = icd10cm.icd_10_cm\n  and c.diagnosis_code_type = 'icd-10-cm'\nleft outer join tuva.terminology.icd_9_cm as icd9cm\n  on c.diagnosis_code_1 = icd9cm.icd_9_cm\n  and c.diagnosis_code_type = 'icd-9-cm'", "relation_name": "tuva.claims_preprocessing.emergency_department__encounter_grain", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:27.728832Z", "completed_at": "2025-06-03T19:50:27.746377Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:27.751796Z", "completed_at": "2025-06-03T19:50:27.751801Z"}], "thread_id": "Thread-4", "execution_time": 0.031638145446777344, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.dme__encounter_grain", "compiled": true, "compiled_code": "\n\nwith encounter_date as (\n  select distinct old_encounter_id\n  , start_date as encounter_start_date\n  from tuva.claims_preprocessing.dme__generate_encounter_id\n)\n\n, detail_values as (\n    select stg.*\n    , cli.encounter_id\n    , cli.old_encounter_id\n      , cli.encounter_type\n    , cli.encounter_group\n    , d.encounter_start_date\n    , row_number() over (partition by cli.encounter_id\norder by stg.claim_type, stg.start_date) as encounter_row_number --institutional then professional\n    from tuva.claims_preprocessing.encounters__stg_medical_claim as stg\n    inner join tuva.claims_preprocessing.encounters__combined_claim_line_crosswalk as cli on stg.claim_id = cli.claim_id\n    and\n    stg.claim_line_number = cli.claim_line_number\n    and\n    cli.encounter_type = 'dme - orphaned'\n    and\n    cli.claim_line_attribution_number = 1\n    inner join encounter_date as d on cli.old_encounter_id = d.old_encounter_id\n)\n\n, patient as (\n    select\n        patient_data_source_id\n        , birth_date\n        , gender\n        , race\n    from tuva.claims_preprocessing.encounters__stg_eligibility\n    where patient_row_num = 1\n    )\n\n, total_amounts as (\n    select\n    encounter_id\n    , encounter_type\n    , encounter_group\n    , sum(paid_amount) as total_paid_amount\n    , sum(allowed_amount) as total_allowed_amount\n    , sum(charge_amount) as total_charge_amount\n    , count(distinct claim_id) as claim_count\n    , count(distinct(case when claim_type = 'institutional' then claim_id else null end)) as inst_claim_count\n    , count(distinct(case when claim_type = 'professional' then claim_id else null end)) as prof_claim_count\nfrom detail_values\ngroup by encounter_id\n, encounter_type\n, encounter_group\n)\n\n\n, highest_paid_diagnosis as (\n  select encounter_id\n  , diagnosis_code_1\n  , diagnosis_code_type\n  , row_number() over (partition by encounter_id\norder by sum(paid_amount) desc) as paid_order\n  , sum(paid_amount) as paid_amount\n  from detail_values\n  where diagnosis_code_1 is not null\n  group by diagnosis_code_1\n  , encounter_id\n  , diagnosis_code_type\n)\n\n, highest_paid_facility as (\n  select encounter_id\n  , facility_id\n  , row_number() over (partition by encounter_id\norder by sum(paid_amount) desc) as paid_order\n  , sum(paid_amount) as paid_amount\n  from detail_values\n  where facility_id is not null\n  group by\n   encounter_id\n  , facility_id\n)\n\n, highest_paid_pos as (\n  select encounter_id\n  , place_of_service_code\n  , place_of_service_description\n  , row_number() over (partition by encounter_id\norder by sum(paid_amount) desc) as paid_order\n  , sum(paid_amount) as paid_amount\n  from detail_values\n  where place_of_service_code is not null\n  group by\n   encounter_id\n  , place_of_service_code\n  , place_of_service_description\n)\n\n\n\n\n, service_category_flags as (\n    select\n        d.encounter_id\n       , max(case when scr.service_category_2 = 'lab' then 1 else 0 end) as lab_flag\n       , max(case when scr.service_category_2 = 'ambulance' then 1 else 0 end) as ambulance_flag\n       , max(case when scr.service_category_2 = 'durable medical equipment' then 1 else 0 end) as dme_flag\n       , max(case when scr.service_category_2 = 'outpatient pharmacy' then 1\n                when scr.service_category_2 = 'office-based pharmacy' then 1 else 0 end) as pharmacy_flag\n    from detail_values as d\n    left outer join tuva.claims_preprocessing.service_category_grouper as scr on d.claim_id = scr.claim_id\n    and\n    scr.claim_line_number = d.claim_line_number\n    group by d.encounter_id\n)\n\n\n\nselect d.encounter_id\n, d.encounter_start_date\n, d.patient_data_source_id\n\n, tot.encounter_type\n, tot.encounter_group\n, datediff(\n        day,\n        birth_date,\n        d.encounter_start_date\n        ) / 365 as admit_age\n, e.gender\n, e.race\n, hp.diagnosis_code_type as primary_diagnosis_code_type\n, hp.diagnosis_code_1 as primary_diagnosis_code\n, coalesce(icd10cm.long_description, icd9cm.long_description) as primary_diagnosis_description\n, hf.facility_id as facility_id\n, b.provider_organization_name as facility_name\n, b.primary_specialty_description as facility_type\n, sc.lab_flag\n, sc.dme_flag\n, sc.ambulance_flag\n, sc.pharmacy_flag\n, pos.place_of_service_code\n, pos.place_of_service_description\n, tot.total_paid_amount\n, tot.total_allowed_amount\n, tot.total_charge_amount\n, tot.claim_count\n, tot.inst_claim_count\n, tot.prof_claim_count\n, d.data_source\n, '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom detail_values as d\ninner join total_amounts as tot on d.encounter_id = tot.encounter_id\ninner join service_category_flags as sc on d.encounter_id = sc.encounter_id\nleft outer join highest_paid_diagnosis as hp on d.encounter_id = hp.encounter_id\nand\nhp.paid_order = 1\nleft outer join highest_paid_facility as hf on d.encounter_id = hf.encounter_id\nand\nhf.paid_order = 1\nleft outer join highest_paid_pos as pos on d.encounter_id = pos.encounter_id\nand\npos.paid_order = 1\nleft outer join patient as e\n  on d.patient_data_source_id = e.patient_data_source_id\nleft outer join tuva.terminology.provider as b\n  on hf.facility_id = b.npi\nleft outer join tuva.terminology.icd_10_cm as icd10cm\n  on hp.diagnosis_code_1 = icd10cm.icd_10_cm\n  and hp.diagnosis_code_type = 'icd-10-cm'\nleft outer join tuva.terminology.icd_9_cm as icd9cm\n  on hp.diagnosis_code_1 = icd9cm.icd_9_cm\n  and hp.diagnosis_code_type = 'icd-9-cm'\nwhere d.encounter_row_number = 1", "relation_name": "tuva.claims_preprocessing.dme__encounter_grain", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:27.747135Z", "completed_at": "2025-06-03T19:50:27.760342Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:27.761161Z", "completed_at": "2025-06-03T19:50:27.761166Z"}], "thread_id": "Thread-1", "execution_time": 0.01577615737915039, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.encounters__orphaned_claims", "compiled": true, "compiled_code": "\n\nwith cte as (\n  select stg.claim_id\n  , stg.claim_line_number\n  , stg.service_category_1\n  , stg.service_category_2\n  , stg.service_category_3\n  , stg.claim_type\n  , stg.claim_start_date\n  , stg.claim_end_date\n  , stg.start_date\n  , stg.end_date\n  , stg.patient_data_source_id\n  from tuva.claims_preprocessing.encounters__stg_medical_claim as stg\n  left outer join tuva.claims_preprocessing.encounters__combined_claim_line_crosswalk as enc on stg.claim_id = enc.claim_id\n  and\n  stg.claim_line_number = enc.claim_line_number\n  where enc.claim_id is null -- missing from encounter mapping table\n)\n\n, max_encounter as (\n  select max(encounter_id) as max_encounter_id\n  from tuva.claims_preprocessing.encounters__combined_claim_line_crosswalk\n)\n\nselect\n  claim_id\n, claim_line_number\n, dense_rank() over (\norder by patient_data_source_id, claim_id) + max_encounter.max_encounter_id as encounter_id\n, 'orphaned claim' as encounter_type\n, 'other' as encounter_group\nfrom cte\ncross join max_encounter", "relation_name": "tuva.claims_preprocessing.encounters__orphaned_claims", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:27.752168Z", "completed_at": "2025-06-03T19:50:27.760971Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:27.775739Z", "completed_at": "2025-06-03T19:50:27.775747Z"}], "thread_id": "Thread-2", "execution_time": 0.030071020126342773, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.home_health__encounter_grain", "compiled": true, "compiled_code": "\n\nwith encounter_date as (\n  select distinct old_encounter_id\n  , start_date as encounter_start_date\n  from tuva.claims_preprocessing.home_health__generate_encounter_id\n)\n\n, detail_values as (\n    select stg.*\n    , cli.encounter_id\n    , cli.old_encounter_id\n      , cli.encounter_type\n    , cli.encounter_group\n    , d.encounter_start_date\n    , row_number() over (partition by cli.encounter_id\norder by stg.claim_type, stg.start_date) as encounter_row_number --institutional then professional\n    from tuva.claims_preprocessing.encounters__stg_medical_claim as stg\n    inner join tuva.claims_preprocessing.encounters__combined_claim_line_crosswalk as cli on stg.claim_id = cli.claim_id\n    and\n    stg.claim_line_number = cli.claim_line_number\n    and\n    cli.encounter_type = 'home health'\n    and\n    cli.claim_line_attribution_number = 1\n    inner join encounter_date as d on cli.old_encounter_id = d.old_encounter_id\n)\n\n, patient as (\n    select\n        patient_data_source_id\n        , birth_date\n        , gender\n        , race\n    from tuva.claims_preprocessing.encounters__stg_eligibility\n    where patient_row_num = 1\n    )\n\n, total_amounts as (\n    select\n    encounter_id\n    , encounter_type\n    , encounter_group\n    , sum(paid_amount) as total_paid_amount\n    , sum(allowed_amount) as total_allowed_amount\n    , sum(charge_amount) as total_charge_amount\n    , count(distinct claim_id) as claim_count\n    , count(distinct(case when claim_type = 'institutional' then claim_id else null end)) as inst_claim_count\n    , count(distinct(case when claim_type = 'professional' then claim_id else null end)) as prof_claim_count\nfrom detail_values\ngroup by encounter_id\n, encounter_type\n, encounter_group\n)\n\n\n, highest_paid_diagnosis as (\n  select encounter_id\n  , diagnosis_code_1\n  , diagnosis_code_type\n  , row_number() over (partition by encounter_id\norder by sum(paid_amount) desc) as paid_order\n  , sum(paid_amount) as paid_amount\n  from detail_values\n  where diagnosis_code_1 is not null\n  group by diagnosis_code_1\n  , encounter_id\n  , diagnosis_code_type\n)\n\n, highest_paid_facility as (\n  select encounter_id\n  , facility_id\n  , row_number() over (partition by encounter_id\norder by sum(paid_amount) desc) as paid_order\n  , sum(paid_amount) as paid_amount\n  from detail_values\n  where facility_id is not null\n  group by\n   encounter_id\n  , facility_id\n)\n\n\n\n, service_category_flags as (\n    select\n        d.encounter_id\n       , max(case when scr.service_category_2 = 'lab' then 1 else 0 end) as lab_flag\n       , max(case when scr.service_category_2 = 'ambulance' then 1 else 0 end) as ambulance_flag\n       , max(case when scr.service_category_2 = 'durable medical equipment' then 1 else 0 end) as dme_flag\n       , max(case when scr.service_category_2 = 'outpatient pharmacy' then 1\n                when scr.service_category_2 = 'office-based pharmacy' then 1 else 0 end) as pharmacy_flag\n    from detail_values as d\n    left outer join tuva.claims_preprocessing.service_category_grouper as scr on d.claim_id = scr.claim_id\n    and\n    scr.claim_line_number = d.claim_line_number\n    group by d.encounter_id\n)\n\n\n\nselect d.encounter_id\n, d.encounter_start_date\n, d.patient_data_source_id\n\n, tot.encounter_type\n, tot.encounter_group\n, datediff(\n        day,\n        birth_date,\n        d.encounter_start_date\n        ) / 365 as admit_age\n, e.gender\n, e.race\n, hp.diagnosis_code_type as primary_diagnosis_code_type\n, hp.diagnosis_code_1 as primary_diagnosis_code\n, coalesce(icd10cm.long_description, icd9cm.long_description) as primary_diagnosis_description\n, hf.facility_id as facility_id\n, b.provider_organization_name as facility_name\n, b.primary_specialty_description as facility_type\n, sc.lab_flag\n, sc.dme_flag\n, sc.ambulance_flag\n, sc.pharmacy_flag\n, tot.total_paid_amount\n, tot.total_allowed_amount\n, tot.total_charge_amount\n, tot.claim_count\n, tot.inst_claim_count\n, tot.prof_claim_count\n, d.data_source\n, '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom detail_values as d\ninner join total_amounts as tot on d.encounter_id = tot.encounter_id\ninner join service_category_flags as sc on d.encounter_id = sc.encounter_id\nleft outer join highest_paid_diagnosis as hp on d.encounter_id = hp.encounter_id\nand\nhp.paid_order = 1\nleft outer join highest_paid_facility as hf on d.encounter_id = hf.encounter_id\nand\nhf.paid_order = 1\nleft outer join patient as e\n  on d.patient_data_source_id = e.patient_data_source_id\nleft outer join tuva.terminology.provider as b\n  on hf.facility_id = b.npi\nleft outer join tuva.terminology.icd_10_cm as icd10cm\n  on hp.diagnosis_code_1 = icd10cm.icd_10_cm\n  and hp.diagnosis_code_type = 'icd-10-cm'\nleft outer join tuva.terminology.icd_9_cm as icd9cm\n  on hp.diagnosis_code_1 = icd9cm.icd_9_cm\n  and hp.diagnosis_code_type = 'icd-9-cm'\nwhere d.encounter_row_number = 1", "relation_name": "tuva.claims_preprocessing.home_health__encounter_grain", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:27.761515Z", "completed_at": "2025-06-03T19:50:27.779453Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:27.780300Z", "completed_at": "2025-06-03T19:50:27.780305Z"}], "thread_id": "Thread-3", "execution_time": 0.02060699462890625, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.inpatient_hospice__encounter_grain", "compiled": true, "compiled_code": "\n\nwith detail_values as (\n    select stg.*\n    , cli.encounter_id\n    , cli.old_encounter_id\n    , ed.encounter_start_date\n    , ed.encounter_end_date\n    , cli.encounter_type\n    , cli.encounter_group\n    from tuva.claims_preprocessing.encounters__stg_medical_claim as stg\n    inner join tuva.claims_preprocessing.encounters__combined_claim_line_crosswalk as cli on stg.claim_id = cli.claim_id  --replace this ref with the deduped version when complete\n    and\n    stg.claim_line_number = cli.claim_line_number\n    and\n    cli.encounter_type = 'inpatient hospice'\n    and\n    cli.claim_line_attribution_number = 1\n    inner join tuva.claims_preprocessing.inpatient_hospice__start_end_dates as ed on cli.old_encounter_id = ed.encounter_id\n)\n\n, encounter_cross_walk as (\n  select distinct encounter_id\n  , old_encounter_id\n  from detail_values\n)\n\n, first_last_inst_inst_values as (\nselect *\n, row_number() over (partition by encounter_id\norder by start_date, claim_id) as first_num\n, row_number() over (partition by encounter_id\norder by end_date desc, claim_id) as last_num\nfrom detail_values\nwhere claim_type = 'institutional'\n)\n\n, institutional_claim_details as (\n    select distinct\n        d.encounter_id\n        , f.diagnosis_code_1\n        , f.diagnosis_code_type\n        , f.facility_id as facility_id\n        , f.drg_code_type\n        , f.drg_code as drg_code\n        , f.admit_source_code as admit_source_code\n        , f.admit_type_code as admit_type_code\n        , l.discharge_disposition_code as discharge_disposition_code\n        , d.patient_data_source_id\n        , d.data_source\n    from detail_values as d\n    inner join first_last_inst_inst_values as f on d.encounter_id = f.encounter_id\n    and\n    f.first_num = 1\n    inner join first_last_inst_inst_values as l on d.encounter_id = l.encounter_id\n    and\n    l.last_num = 1\n\n)\n\n, patient as (\n    select\n        patient_data_source_id\n        , birth_date\n        , gender\n        , race\n    from tuva.claims_preprocessing.encounters__stg_eligibility\n    where patient_row_num = 1\n    )\n\n, total_amounts as (\n    select\n    encounter_id\n    , encounter_type\n    , encounter_group\n    , sum(paid_amount) as total_paid_amount\n    , sum(allowed_amount) as total_allowed_amount\n    , sum(charge_amount) as total_charge_amount\n    , count(distinct claim_id) as claim_count\n    , count(distinct(case when claim_type = 'institutional' then claim_id else null end)) as inst_claim_count\n    , count(distinct(case when claim_type = 'professional' then claim_id else null end)) as prof_claim_count\nfrom detail_values\ngroup by encounter_id\n, encounter_type\n, encounter_group\n\n)\n\n\n\n, service_category_flags as (\n    select\n        d.encounter_id\n       , max(case when scr.service_category_2 = 'lab' then 1 else 0 end) as lab_flag\n       , max(case when scr.service_category_2 = 'ambulance' then 1 else 0 end) as ambulance_flag\n       , max(case when scr.service_category_2 = 'durable medical equipment' then 1 else 0 end) as dme_flag\n       , max(case when scr.service_category_2 = 'observation' then 1 else 0 end) as observation_flag\n       , max(case when scr.service_category_2 = 'emergency department' then 1 else 0 end) as ed_flag\n       , max(case when scr.service_category_2 = 'pharmacy' then 1 else 0 end) as pharmacy_flag\n    from detail_values as d\n    left outer join tuva.claims_preprocessing.service_category_grouper as scr on d.claim_id = scr.claim_id\n    and\n    scr.claim_line_number = d.claim_line_number\n    group by d.encounter_id\n)\n\nselect\n  x.encounter_id\n, a.encounter_start_date\n, a.encounter_end_date\n, c.patient_data_source_id\n, tot.encounter_type\n, tot.encounter_group\n, datediff(\n        day,\n        birth_date,\n        encounter_end_date\n        ) / 365 as admit_age\n, e.gender\n, e.race\n, c.diagnosis_code_type as primary_diagnosis_code_type\n, c.diagnosis_code_1 as primary_diagnosis_code\n, coalesce(icd10cm.long_description, icd9cm.long_description) as primary_diagnosis_description\n, c.facility_id as facility_id\n, b.provider_organization_name as facility_name\n, b.primary_specialty_description as facility_type\n, sc.lab_flag\n, sc.dme_flag\n, sc.ambulance_flag\n, sc.pharmacy_flag\n, sc.observation_flag\n, sc.ed_flag\n, c.drg_code_type\n, c.drg_code\n, coalesce(msdrg.ms_drg_description, aprdrg.apr_drg_description) as drg_description\n, coalesce(msdrg.medical_surgical, aprdrg.medical_surgical) as medical_surgical\n, c.admit_source_code\n, h.admit_source_description\n, c.admit_type_code\n, i.admit_type_description\n, c.discharge_disposition_code\n, g.discharge_disposition_description\n, tot.total_paid_amount\n, tot.total_allowed_amount\n, tot.total_charge_amount\n, tot.claim_count\n, tot.inst_claim_count\n, tot.prof_claim_count\n, datediff(\n        day,\n        a.encounter_start_date,\n        a.encounter_end_date\n        ) as length_of_stay\n, case\n    when c.discharge_disposition_code = '20' then 1\n    else 0\n  end as mortality_flag\n, c.data_source\n, '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom tuva.claims_preprocessing.inpatient_hospice__start_end_dates as a\ninner join encounter_cross_walk as x on a.encounter_id = x.old_encounter_id\ninner join total_amounts as tot on x.encounter_id = tot.encounter_id\ninner join service_category_flags as sc on x.encounter_id = sc.encounter_id\nleft outer join institutional_claim_details as c\n  on x.encounter_id = c.encounter_id\nleft outer join patient as e\n  on c.patient_data_source_id = e.patient_data_source_id\nleft outer join tuva.terminology.provider as b\n  on c.facility_id = b.npi\nleft outer join tuva.terminology.discharge_disposition as g\n  on c.discharge_disposition_code = g.discharge_disposition_code\nleft outer join tuva.terminology.admit_source as h\n  on c.admit_source_code = h.admit_source_code\nleft outer join tuva.terminology.admit_type as i\n  on c.admit_type_code = i.admit_type_code\nleft outer join tuva.terminology.ms_drg as msdrg\n  on c.drg_code_type = 'ms-drg'\n  and c.drg_code = msdrg.ms_drg_code\nleft outer join tuva.terminology.apr_drg as aprdrg\n  on c.drg_code_type = 'apr-drg'\n  and c.drg_code = aprdrg.apr_drg_code\nleft outer join tuva.terminology.icd_10_cm as icd10cm\n  on c.diagnosis_code_1 = icd10cm.icd_10_cm\n  and c.diagnosis_code_type = 'icd-10-cm'\nleft outer join tuva.terminology.icd_9_cm as icd9cm\n  on c.diagnosis_code_1 = icd9cm.icd_9_cm\n  and c.diagnosis_code_type = 'icd-9-cm'", "relation_name": "tuva.claims_preprocessing.inpatient_hospice__encounter_grain", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:27.769411Z", "completed_at": "2025-06-03T19:50:27.779896Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:27.788394Z", "completed_at": "2025-06-03T19:50:27.788400Z"}], "thread_id": "Thread-4", "execution_time": 0.028347015380859375, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.inpatient_psych__encounter_grain", "compiled": true, "compiled_code": "\n\nwith detail_values as (\n    select stg.*\n    , cli.encounter_id\n    , cli.old_encounter_id\n    , ed.encounter_start_date\n    , ed.encounter_end_date\n    , cli.encounter_type\n    , cli.encounter_group\n    from tuva.claims_preprocessing.encounters__stg_medical_claim as stg\n    inner join tuva.claims_preprocessing.encounters__combined_claim_line_crosswalk as cli on stg.claim_id = cli.claim_id  --replace this ref with the deduped version when complete\n    and\n    stg.claim_line_number = cli.claim_line_number\n    and\n    cli.encounter_type = 'inpatient psych'\n    and\n    cli.claim_line_attribution_number = 1\n    inner join tuva.claims_preprocessing.inpatient_psych__start_end_dates as ed on cli.old_encounter_id = ed.encounter_id\n)\n\n, encounter_cross_walk as (\n  select distinct encounter_id\n  , old_encounter_id\n  from detail_values\n)\n\n, first_last_inst_inst_values as (\nselect *\n, row_number() over (partition by encounter_id\norder by start_date, claim_id) as first_num\n, row_number() over (partition by encounter_id\norder by end_date desc, claim_id) as last_num\nfrom detail_values\nwhere claim_type = 'institutional'\n)\n\n, institutional_claim_details as (\n    select distinct\n        d.encounter_id\n        , f.diagnosis_code_1\n        , f.diagnosis_code_type\n        , f.facility_id as facility_id\n        , f.drg_code_type\n        , f.drg_code as drg_code\n        , f.admit_source_code as admit_source_code\n        , f.admit_type_code as admit_type_code\n        , l.discharge_disposition_code as discharge_disposition_code\n        , d.patient_data_source_id\n        , d.data_source\n    from detail_values as d\n    inner join first_last_inst_inst_values as f on d.encounter_id = f.encounter_id\n    and\n    f.first_num = 1\n    inner join first_last_inst_inst_values as l on d.encounter_id = l.encounter_id\n    and\n    l.last_num = 1\n\n)\n\n, patient as (\n    select\n        patient_data_source_id\n        , birth_date\n        , gender\n        , race\n    from tuva.claims_preprocessing.encounters__stg_eligibility\n    where patient_row_num = 1\n    )\n\n, total_amounts as (\n    select\n    encounter_id\n    , encounter_type\n    , encounter_group\n    , sum(paid_amount) as total_paid_amount\n    , sum(allowed_amount) as total_allowed_amount\n    , sum(charge_amount) as total_charge_amount\n    , count(distinct claim_id) as claim_count\n    , count(distinct(case when claim_type = 'institutional' then claim_id else null end)) as inst_claim_count\n    , count(distinct(case when claim_type = 'professional' then claim_id else null end)) as prof_claim_count\nfrom detail_values\ngroup by encounter_id\n, encounter_type\n, encounter_group\n\n)\n\n\n\n, service_category_flags as (\n    select\n        d.encounter_id\n       , max(case when scr.service_category_2 = 'lab' then 1 else 0 end) as lab_flag\n       , max(case when scr.service_category_2 = 'ambulance' then 1 else 0 end) as ambulance_flag\n       , max(case when scr.service_category_2 = 'durable medical equipment' then 1 else 0 end) as dme_flag\n       , max(case when scr.service_category_2 = 'observation' then 1 else 0 end) as observation_flag\n       , max(case when scr.service_category_2 = 'emergency department' then 1 else 0 end) as ed_flag\n       , max(case when scr.service_category_2 = 'pharmacy' then 1\n              else 0 end) as pharmacy_flag\n    from detail_values as d\n    left outer join tuva.claims_preprocessing.service_category_grouper as scr on d.claim_id = scr.claim_id\n    and\n    scr.claim_line_number = d.claim_line_number\n    group by d.encounter_id\n)\n\nselect\n  x.encounter_id\n, a.encounter_start_date\n, a.encounter_end_date\n, c.patient_data_source_id\n, tot.encounter_type\n, tot.encounter_group\n, datediff(\n        day,\n        birth_date,\n        encounter_end_date\n        ) / 365 as admit_age\n, e.gender\n, e.race\n, c.diagnosis_code_type as primary_diagnosis_code_type\n, c.diagnosis_code_1 as primary_diagnosis_code\n, coalesce(icd10cm.long_description, icd9cm.long_description) as primary_diagnosis_description\n, c.facility_id as facility_id\n, b.provider_organization_name as facility_name\n, b.primary_specialty_description as facility_type\n, sc.lab_flag\n, sc.dme_flag\n, sc.ambulance_flag\n, sc.pharmacy_flag\n, sc.observation_flag\n, sc.ed_flag\n, c.drg_code_type\n, c.drg_code\n, coalesce(msdrg.ms_drg_description, aprdrg.apr_drg_description) as drg_description\n, coalesce(msdrg.medical_surgical, aprdrg.medical_surgical) as medical_surgical\n, c.admit_source_code\n, h.admit_source_description\n, c.admit_type_code\n, i.admit_type_description\n, c.discharge_disposition_code\n, g.discharge_disposition_description\n, tot.total_paid_amount\n, tot.total_allowed_amount\n, tot.total_charge_amount\n, tot.claim_count\n, tot.inst_claim_count\n, tot.prof_claim_count\n, datediff(\n        day,\n        a.encounter_start_date,\n        a.encounter_end_date\n        ) as length_of_stay\n, case\n    when c.discharge_disposition_code = '20' then 1\n    else 0\n  end as mortality_flag\n, c.data_source\n, '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom tuva.claims_preprocessing.inpatient_psych__start_end_dates as a\ninner join encounter_cross_walk as x on a.encounter_id = x.old_encounter_id\ninner join total_amounts as tot on x.encounter_id = tot.encounter_id\ninner join service_category_flags as sc on x.encounter_id = sc.encounter_id\nleft outer join institutional_claim_details as c\n  on x.encounter_id = c.encounter_id\nleft outer join patient as e\n  on c.patient_data_source_id = e.patient_data_source_id\nleft outer join tuva.terminology.provider as b\n  on c.facility_id = b.npi\nleft outer join tuva.terminology.discharge_disposition as g\n  on c.discharge_disposition_code = g.discharge_disposition_code\nleft outer join tuva.terminology.admit_source as h\n  on c.admit_source_code = h.admit_source_code\nleft outer join tuva.terminology.admit_type as i\n  on c.admit_type_code = i.admit_type_code\nleft outer join tuva.terminology.ms_drg as msdrg\n  on c.drg_code_type = 'ms-drg'\n  and c.drg_code = msdrg.ms_drg_code\nleft outer join tuva.terminology.apr_drg as aprdrg\n  on c.drg_code_type = 'apr-drg'\n  and c.drg_code = aprdrg.apr_drg_code\nleft outer join tuva.terminology.icd_10_cm as icd10cm\n  on c.diagnosis_code_1 = icd10cm.icd_10_cm\n  and c.diagnosis_code_type = 'icd-10-cm'\nleft outer join tuva.terminology.icd_9_cm as icd9cm\n  on c.diagnosis_code_1 = icd9cm.icd_9_cm\n  and c.diagnosis_code_type = 'icd-9-cm'", "relation_name": "tuva.claims_preprocessing.inpatient_psych__encounter_grain", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:27.780652Z", "completed_at": "2025-06-03T19:50:27.797759Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:27.807003Z", "completed_at": "2025-06-03T19:50:27.807009Z"}], "thread_id": "Thread-1", "execution_time": 0.028101205825805664, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.inpatient_rehab__encounter_grain", "compiled": true, "compiled_code": "\n\nwith detail_values as (\n    select stg.*\n    , cli.encounter_id\n    , cli.old_encounter_id\n    , ed.encounter_start_date\n    , ed.encounter_end_date\n      , cli.encounter_type\n    , cli.encounter_group\n    from tuva.claims_preprocessing.encounters__stg_medical_claim as stg\n    inner join tuva.claims_preprocessing.encounters__combined_claim_line_crosswalk as cli on stg.claim_id = cli.claim_id  --replace this ref with the deduped version when complete\n    and\n    stg.claim_line_number = cli.claim_line_number\n    and\n    cli.encounter_type = 'inpatient rehabilitation'\n    and\n    cli.claim_line_attribution_number = 1\n    inner join tuva.claims_preprocessing.inpatient_rehab__start_end_dates as ed on cli.old_encounter_id = ed.encounter_id\n)\n\n, encounter_cross_walk as (\n  select distinct encounter_id\n  , old_encounter_id\n  from detail_values\n)\n\n, first_last_inst_inst_values as (\nselect *\n, row_number() over (partition by encounter_id\norder by start_date, claim_id) as first_num\n, row_number() over (partition by encounter_id\norder by end_date desc, claim_id) as last_num\nfrom detail_values\nwhere claim_type = 'institutional'\n)\n\n, institutional_claim_details as (\n    select distinct\n        d.encounter_id\n        , f.diagnosis_code_1\n        , f.diagnosis_code_type\n        , f.facility_id as facility_id\n        , f.drg_code_type\n        , f.drg_code as drg_code\n        , f.admit_source_code as admit_source_code\n        , f.admit_type_code as admit_type_code\n        , l.discharge_disposition_code as discharge_disposition_code\n        , d.patient_data_source_id\n        , d.data_source\n    from detail_values as d\n    inner join first_last_inst_inst_values as f on d.encounter_id = f.encounter_id\n    and\n    f.first_num = 1\n    inner join first_last_inst_inst_values as l on d.encounter_id = l.encounter_id\n    and\n    l.last_num = 1\n\n)\n\n, patient as (\n    select\n        patient_data_source_id\n        , birth_date\n        , gender\n        , race\n    from tuva.claims_preprocessing.encounters__stg_eligibility\n    where patient_row_num = 1\n    )\n\n, total_amounts as (\n    select\n    encounter_id\n, encounter_group\n    , encounter_type\n    , sum(paid_amount) as total_paid_amount\n    , sum(allowed_amount) as total_allowed_amount\n    , sum(charge_amount) as total_charge_amount\n    , count(distinct claim_id) as claim_count\n    , count(distinct(case when claim_type = 'institutional' then claim_id else null end)) as inst_claim_count\n    , count(distinct(case when claim_type = 'professional' then claim_id else null end)) as prof_claim_count\nfrom detail_values\ngroup by encounter_id\n, encounter_type\n, encounter_group\n\n)\n\n\n\n, service_category_flags as (\n    select\n        d.encounter_id\n       , max(case when scr.service_category_2 = 'lab' then 1 else 0 end) as lab_flag\n       , max(case when scr.service_category_2 = 'ambulance' then 1 else 0 end) as ambulance_flag\n       , max(case when scr.service_category_2 = 'durable medical equipment' then 1 else 0 end) as dme_flag\n       , max(case when scr.service_category_2 = 'observation' then 1 else 0 end) as observation_flag\n       , max(case when scr.service_category_2 = 'emergency department' then 1 else 0 end) as ed_flag\n       , max(case when scr.service_category_2 = 'pharmacy' then 1\n              else 0 end) as pharmacy_flag\n    from detail_values as d\n    left outer join tuva.claims_preprocessing.service_category_grouper as scr on d.claim_id = scr.claim_id\n    and\n    scr.claim_line_number = d.claim_line_number\n    group by d.encounter_id\n)\n\nselect\n  x.encounter_id\n, a.encounter_start_date\n, a.encounter_end_date\n, c.patient_data_source_id\n, tot.encounter_type\n, tot.encounter_group\n, datediff(\n        day,\n        birth_date,\n        encounter_end_date\n        ) / 365 as admit_age\n, e.gender\n, e.race\n, c.diagnosis_code_type as primary_diagnosis_code_type\n, c.diagnosis_code_1 as primary_diagnosis_code\n, coalesce(icd10cm.long_description, icd9cm.long_description) as primary_diagnosis_description\n, c.facility_id as facility_id\n, b.provider_organization_name as facility_name\n, b.primary_specialty_description as facility_type\n, sc.lab_flag\n, sc.dme_flag\n, sc.ambulance_flag\n, sc.pharmacy_flag\n, sc.observation_flag\n, sc.ed_flag\n, c.drg_code_type\n, c.drg_code\n, coalesce(msdrg.ms_drg_description, aprdrg.apr_drg_description) as drg_description\n, coalesce(msdrg.medical_surgical, aprdrg.medical_surgical) as medical_surgical\n, c.admit_source_code\n, h.admit_source_description\n, c.admit_type_code\n, i.admit_type_description\n, c.discharge_disposition_code\n, g.discharge_disposition_description\n, tot.total_paid_amount\n, tot.total_allowed_amount\n, tot.total_charge_amount\n, tot.claim_count\n, tot.inst_claim_count\n, tot.prof_claim_count\n, datediff(\n        day,\n        a.encounter_start_date,\n        a.encounter_end_date\n        ) as length_of_stay\n, case\n    when c.discharge_disposition_code = '20' then 1\n    else 0\n  end as mortality_flag\n, c.data_source\n, '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom tuva.claims_preprocessing.inpatient_rehab__start_end_dates as a\ninner join encounter_cross_walk as x on a.encounter_id = x.old_encounter_id\ninner join total_amounts as tot on x.encounter_id = tot.encounter_id\ninner join service_category_flags as sc on x.encounter_id = sc.encounter_id\nleft outer join institutional_claim_details as c\n  on x.encounter_id = c.encounter_id\nleft outer join patient as e\n  on c.patient_data_source_id = e.patient_data_source_id\nleft outer join tuva.terminology.provider as b\n  on c.facility_id = b.npi\nleft outer join tuva.terminology.discharge_disposition as g\n  on c.discharge_disposition_code = g.discharge_disposition_code\nleft outer join tuva.terminology.admit_source as h\n  on c.admit_source_code = h.admit_source_code\nleft outer join tuva.terminology.admit_type as i\n  on c.admit_type_code = i.admit_type_code\nleft outer join tuva.terminology.ms_drg as msdrg\n  on c.drg_code_type = 'ms-drg'\n  and c.drg_code = msdrg.ms_drg_code\nleft outer join tuva.terminology.apr_drg as aprdrg\n  on c.drg_code_type = 'apr-drg'\n  and c.drg_code = aprdrg.apr_drg_code\nleft outer join tuva.terminology.icd_10_cm as icd10cm\n  on c.diagnosis_code_1 = icd10cm.icd_10_cm\n  and c.diagnosis_code_type = 'icd-10-cm'\nleft outer join tuva.terminology.icd_9_cm as icd9cm\n  on c.diagnosis_code_1 = icd9cm.icd_9_cm\n  and c.diagnosis_code_type = 'icd-9-cm'", "relation_name": "tuva.claims_preprocessing.inpatient_rehab__encounter_grain", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:27.788777Z", "completed_at": "2025-06-03T19:50:27.797980Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:27.807385Z", "completed_at": "2025-06-03T19:50:27.807388Z"}], "thread_id": "Thread-2", "execution_time": 0.02820730209350586, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.inpatient_snf__encounter_grain", "compiled": true, "compiled_code": "\n\nwith detail_values as (\n    select stg.*\n    , cli.encounter_id\n    , cli.old_encounter_id\n    , ed.encounter_start_date\n    , ed.encounter_end_date\n      , cli.encounter_type\n    , cli.encounter_group\n    from tuva.claims_preprocessing.encounters__stg_medical_claim as stg\n    inner join tuva.claims_preprocessing.encounters__combined_claim_line_crosswalk as cli on stg.claim_id = cli.claim_id  --replace this ref with the deduped version when complete\n    and\n    stg.claim_line_number = cli.claim_line_number\n    and\n    cli.encounter_type = 'inpatient skilled nursing'\n    and\n    cli.claim_line_attribution_number = 1\n    inner join tuva.claims_preprocessing.inpatient_snf__start_end_dates as ed on cli.old_encounter_id = ed.encounter_id\n)\n\n, encounter_cross_walk as (\n  select distinct encounter_id\n  , old_encounter_id\n  from detail_values\n)\n\n, first_last_inst_inst_values as (\nselect *\n, row_number() over (partition by encounter_id\norder by start_date, claim_id) as first_num\n, row_number() over (partition by encounter_id\norder by end_date desc, claim_id) as last_num\nfrom detail_values\nwhere claim_type = 'institutional'\n)\n\n, institutional_claim_details as (\n    select distinct\n        d.encounter_id\n        , f.diagnosis_code_1\n        , f.diagnosis_code_type\n        , f.facility_id as facility_id\n        , f.drg_code_type\n        , f.drg_code as drg_code\n        , f.admit_source_code as admit_source_code\n        , f.admit_type_code as admit_type_code\n        , l.discharge_disposition_code as discharge_disposition_code\n        , d.patient_data_source_id\n        , d.data_source\n    from detail_values as d\n    inner join first_last_inst_inst_values as f on d.encounter_id = f.encounter_id\n    and\n    f.first_num = 1\n    inner join first_last_inst_inst_values as l on d.encounter_id = l.encounter_id\n    and\n    l.last_num = 1\n\n)\n\n, patient as (\n    select\n        patient_data_source_id\n        , birth_date\n        , gender\n        , race\n    from tuva.claims_preprocessing.encounters__stg_eligibility\n    where patient_row_num = 1\n    )\n\n, total_amounts as (\n    select\n    encounter_id\n    , encounter_type\n    , encounter_group\n    , sum(paid_amount) as total_paid_amount\n    , sum(allowed_amount) as total_allowed_amount\n    , sum(charge_amount) as total_charge_amount\n    , count(distinct claim_id) as claim_count\n    , count(distinct(case when claim_type = 'institutional' then claim_id else null end)) as inst_claim_count\n    , count(distinct(case when claim_type = 'professional' then claim_id else null end)) as prof_claim_count\nfrom detail_values\ngroup by encounter_id\n, encounter_type\n, encounter_group\n)\n\n\n\n, service_category_flags as (\n    select\n        d.encounter_id\n       , max(case when scr.service_category_2 = 'lab' then 1 else 0 end) as lab_flag\n       , max(case when scr.service_category_2 = 'ambulance' then 1 else 0 end) as ambulance_flag\n       , max(case when scr.service_category_2 = 'durable medical equipment' then 1 else 0 end) as dme_flag\n       , max(case when scr.service_category_2 = 'observation' then 1 else 0 end) as observation_flag\n       , max(case when scr.service_category_2 = 'emergency department' then 1 else 0 end) as ed_flag\n       , max(case when scr.service_category_2 = 'pharmacy' then 1\n              else 0 end) as pharmacy_flag\n    from detail_values as d\n    left outer join tuva.claims_preprocessing.service_category_grouper as scr on d.claim_id = scr.claim_id\n    and\n    scr.claim_line_number = d.claim_line_number\n    group by d.encounter_id\n)\n\nselect\n  x.encounter_id\n, a.encounter_start_date\n, a.encounter_end_date\n, c.patient_data_source_id\n, tot.encounter_type\n, tot.encounter_group\n, datediff(\n        day,\n        birth_date,\n        encounter_end_date\n        ) / 365 as admit_age\n, e.gender\n, e.race\n, c.diagnosis_code_type as primary_diagnosis_code_type\n, c.diagnosis_code_1 as primary_diagnosis_code\n, coalesce(icd10cm.long_description, icd9cm.long_description) as primary_diagnosis_description\n, c.facility_id as facility_id\n, b.provider_organization_name as facility_name\n, b.primary_specialty_description as facility_type\n, sc.lab_flag\n, sc.dme_flag\n, sc.ambulance_flag\n, sc.pharmacy_flag\n, sc.observation_flag\n, sc.ed_flag\n, c.drg_code_type\n, c.drg_code\n, coalesce(msdrg.ms_drg_description, aprdrg.apr_drg_description) as drg_description\n, coalesce(msdrg.medical_surgical, aprdrg.medical_surgical) as medical_surgical\n, c.admit_source_code\n, h.admit_source_description\n, c.admit_type_code\n, i.admit_type_description\n, c.discharge_disposition_code\n, g.discharge_disposition_description\n, tot.total_paid_amount\n, tot.total_allowed_amount\n, tot.total_charge_amount\n, tot.claim_count\n, tot.inst_claim_count\n, tot.prof_claim_count\n, datediff(\n        day,\n        a.encounter_start_date,\n        a.encounter_end_date\n        ) as length_of_stay\n, case\n    when c.discharge_disposition_code = '20' then 1\n    else 0\n  end as mortality_flag\n, c.data_source\n, '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom tuva.claims_preprocessing.inpatient_snf__start_end_dates as a\ninner join encounter_cross_walk as x on a.encounter_id = x.old_encounter_id\ninner join total_amounts as tot on x.encounter_id = tot.encounter_id\ninner join service_category_flags as sc on x.encounter_id = sc.encounter_id\nleft outer join institutional_claim_details as c\n  on x.encounter_id = c.encounter_id\nleft outer join patient as e\n  on c.patient_data_source_id = e.patient_data_source_id\nleft outer join tuva.terminology.provider as b\n  on c.facility_id = b.npi\nleft outer join tuva.terminology.discharge_disposition as g\n  on c.discharge_disposition_code = g.discharge_disposition_code\nleft outer join tuva.terminology.admit_source as h\n  on c.admit_source_code = h.admit_source_code\nleft outer join tuva.terminology.admit_type as i\n  on c.admit_type_code = i.admit_type_code\nleft outer join tuva.terminology.ms_drg as msdrg\n  on c.drg_code_type = 'ms-drg'\n  and c.drg_code = msdrg.ms_drg_code\nleft outer join tuva.terminology.apr_drg as aprdrg\n  on c.drg_code_type = 'apr-drg'\n  and c.drg_code = aprdrg.apr_drg_code\nleft outer join tuva.terminology.icd_10_cm as icd10cm\n  on c.diagnosis_code_1 = icd10cm.icd_10_cm\n  and c.diagnosis_code_type = 'icd-10-cm'\nleft outer join tuva.terminology.icd_9_cm as icd9cm\n  on c.diagnosis_code_1 = icd9cm.icd_9_cm\n  and c.diagnosis_code_type = 'icd-9-cm'", "relation_name": "tuva.claims_preprocessing.inpatient_snf__encounter_grain", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:27.798364Z", "completed_at": "2025-06-03T19:50:27.814934Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:27.815669Z", "completed_at": "2025-06-03T19:50:27.815674Z"}], "thread_id": "Thread-3", "execution_time": 0.018722057342529297, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.inpatient_substance_use__encounter_grain", "compiled": true, "compiled_code": "\n\nwith detail_values as (\n    select stg.*\n    , cli.encounter_id\n    , cli.old_encounter_id\n    , ed.encounter_start_date\n    , ed.encounter_end_date\n      , cli.encounter_type\n    , cli.encounter_group\n    from tuva.claims_preprocessing.encounters__stg_medical_claim as stg\n    inner join tuva.claims_preprocessing.encounters__combined_claim_line_crosswalk as cli on stg.claim_id = cli.claim_id  --replace this ref with the deduped version when complete\n    and\n    stg.claim_line_number = cli.claim_line_number\n    and\n    cli.encounter_type = 'inpatient substance use'\n    and\n    cli.claim_line_attribution_number = 1\n    inner join tuva.claims_preprocessing.inpatient_substance_use__start_end_dates as ed on cli.old_encounter_id = ed.encounter_id\n)\n\n, encounter_cross_walk as (\n  select distinct encounter_id\n  , old_encounter_id\n  from detail_values\n)\n\n, first_last_inst_inst_values as (\nselect *\n, row_number() over (partition by encounter_id\norder by start_date, claim_id) as first_num\n, row_number() over (partition by encounter_id\norder by end_date desc, claim_id) as last_num\nfrom detail_values\nwhere claim_type = 'institutional'\n)\n\n, institutional_claim_details as (\n    select distinct\n        d.encounter_id\n        , f.diagnosis_code_1\n        , f.diagnosis_code_type\n        , f.facility_id as facility_id\n        , f.drg_code_type\n        , f.drg_code as drg_code\n        , f.admit_source_code as admit_source_code\n        , f.admit_type_code as admit_type_code\n        , l.discharge_disposition_code as discharge_disposition_code\n        , d.patient_data_source_id\n        , d.data_source\n    from detail_values as d\n    inner join first_last_inst_inst_values as f on d.encounter_id = f.encounter_id\n    and\n    f.first_num = 1\n    inner join first_last_inst_inst_values as l on d.encounter_id = l.encounter_id\n    and\n    l.last_num = 1\n\n)\n\n, patient as (\n    select\n        patient_data_source_id\n        , birth_date\n        , gender\n        , race\n    from tuva.claims_preprocessing.encounters__stg_eligibility\n    where patient_row_num = 1\n    )\n\n, total_amounts as (\n    select\n    encounter_id\n    , encounter_type\n    , encounter_group\n    , sum(paid_amount) as total_paid_amount\n    , sum(allowed_amount) as total_allowed_amount\n    , sum(charge_amount) as total_charge_amount\n    , count(distinct claim_id) as claim_count\n    , count(distinct(case when claim_type = 'institutional' then claim_id else null end)) as inst_claim_count\n    , count(distinct(case when claim_type = 'professional' then claim_id else null end)) as prof_claim_count\nfrom detail_values\ngroup by encounter_id\n, encounter_type\n, encounter_group\n\n)\n\n\n\n, service_category_flags as (\n    select\n        d.encounter_id\n       , max(case when scr.service_category_2 = 'lab' then 1 else 0 end) as lab_flag\n       , max(case when scr.service_category_2 = 'ambulance' then 1 else 0 end) as ambulance_flag\n       , max(case when scr.service_category_2 = 'durable medical equipment' then 1 else 0 end) as dme_flag\n       , max(case when scr.service_category_2 = 'observation' then 1 else 0 end) as observation_flag\n       , max(case when scr.service_category_2 = 'emergency department' then 1 else 0 end) as ed_flag\n       , max(case when scr.service_category_2 = 'pharmacy' then 1\n              else 0 end) as pharmacy_flag\n    from detail_values as d\n    left outer join tuva.claims_preprocessing.service_category_grouper as scr on d.claim_id = scr.claim_id\n    and\n    scr.claim_line_number = d.claim_line_number\n    group by d.encounter_id\n)\n\nselect\n  x.encounter_id\n, a.encounter_start_date\n, a.encounter_end_date\n, c.patient_data_source_id\n, tot.encounter_type\n, tot.encounter_group\n, datediff(\n        day,\n        birth_date,\n        encounter_end_date\n        ) / 365 as admit_age\n, e.gender\n, e.race\n, c.diagnosis_code_type as primary_diagnosis_code_type\n, c.diagnosis_code_1 as primary_diagnosis_code\n, coalesce(icd10cm.long_description, icd9cm.long_description) as primary_diagnosis_description\n, c.facility_id as facility_id\n, b.provider_organization_name as facility_name\n, b.primary_specialty_description as facility_type\n, sc.lab_flag\n, sc.dme_flag\n, sc.ambulance_flag\n, sc.pharmacy_flag\n, sc.observation_flag\n, sc.ed_flag\n, c.drg_code_type\n, c.drg_code\n, coalesce(msdrg.ms_drg_description, aprdrg.apr_drg_description) as drg_description\n, coalesce(msdrg.medical_surgical, aprdrg.medical_surgical) as medical_surgical\n, c.admit_source_code\n, h.admit_source_description\n, c.admit_type_code\n, i.admit_type_description\n, c.discharge_disposition_code\n, g.discharge_disposition_description\n, tot.total_paid_amount\n, tot.total_allowed_amount\n, tot.total_charge_amount\n, tot.claim_count\n, tot.inst_claim_count\n, tot.prof_claim_count\n, datediff(\n        day,\n        a.encounter_start_date,\n        a.encounter_end_date\n        ) as length_of_stay\n, case\n    when c.discharge_disposition_code = '20' then 1\n    else 0\n  end as mortality_flag\n, c.data_source\n, '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom tuva.claims_preprocessing.inpatient_substance_use__start_end_dates as a\ninner join encounter_cross_walk as x on a.encounter_id = x.old_encounter_id\ninner join total_amounts as tot on x.encounter_id = tot.encounter_id\ninner join service_category_flags as sc on x.encounter_id = sc.encounter_id\nleft outer join institutional_claim_details as c\n  on x.encounter_id = c.encounter_id\nleft outer join patient as e\n  on c.patient_data_source_id = e.patient_data_source_id\nleft outer join tuva.terminology.provider as b\n  on c.facility_id = b.npi\nleft outer join tuva.terminology.discharge_disposition as g\n  on c.discharge_disposition_code = g.discharge_disposition_code\nleft outer join tuva.terminology.admit_source as h\n  on c.admit_source_code = h.admit_source_code\nleft outer join tuva.terminology.admit_type as i\n  on c.admit_type_code = i.admit_type_code\nleft outer join tuva.terminology.ms_drg as msdrg\n  on c.drg_code_type = 'ms-drg'\n  and c.drg_code = msdrg.ms_drg_code\nleft outer join tuva.terminology.apr_drg as aprdrg\n  on c.drg_code_type = 'apr-drg'\n  and c.drg_code = aprdrg.apr_drg_code\nleft outer join tuva.terminology.icd_10_cm as icd10cm\n  on c.diagnosis_code_1 = icd10cm.icd_10_cm\n  and c.diagnosis_code_type = 'icd-10-cm'\nleft outer join tuva.terminology.icd_9_cm as icd9cm\n  on c.diagnosis_code_1 = icd9cm.icd_9_cm\n  and c.diagnosis_code_type = 'icd-9-cm'", "relation_name": "tuva.claims_preprocessing.inpatient_substance_use__encounter_grain", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:27.807728Z", "completed_at": "2025-06-03T19:50:27.816004Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:27.816856Z", "completed_at": "2025-06-03T19:50:27.816859Z"}], "thread_id": "Thread-4", "execution_time": 0.01960015296936035, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.lab__encounter_grain", "compiled": true, "compiled_code": "\n\nwith encounter_date as (\n  select distinct old_encounter_id\n  , start_date as encounter_start_date\n  from tuva.claims_preprocessing.lab__generate_encounter_id\n)\n\n, detail_values as (\n    select stg.*\n    , cli.encounter_id\n    , cli.old_encounter_id\n      , cli.encounter_type\n    , cli.encounter_group\n    , d.encounter_start_date\n    , row_number() over (partition by cli.encounter_id\norder by stg.claim_type, stg.start_date) as encounter_row_number --institutional then professional\n    from tuva.claims_preprocessing.encounters__stg_medical_claim as stg\n    inner join tuva.claims_preprocessing.encounters__combined_claim_line_crosswalk as cli on stg.claim_id = cli.claim_id\n    and\n    stg.claim_line_number = cli.claim_line_number\n    and\n    cli.encounter_type = 'lab - orphaned'\n    and\n    cli.claim_line_attribution_number = 1\n    inner join encounter_date as d on cli.old_encounter_id = d.old_encounter_id\n)\n\n, patient as (\n    select\n        patient_data_source_id\n        , birth_date\n        , gender\n        , race\n    from tuva.claims_preprocessing.encounters__stg_eligibility\n    where patient_row_num = 1\n    )\n\n, total_amounts as (\n    select\n    encounter_id\n    , encounter_type\n    , encounter_group\n    , sum(paid_amount) as total_paid_amount\n    , sum(allowed_amount) as total_allowed_amount\n    , sum(charge_amount) as total_charge_amount\n    , count(distinct claim_id) as claim_count\n    , count(distinct(case when claim_type = 'institutional' then claim_id else null end)) as inst_claim_count\n    , count(distinct(case when claim_type = 'professional' then claim_id else null end)) as prof_claim_count\nfrom detail_values\ngroup by encounter_id\n, encounter_type\n, encounter_group\n)\n\n\n, highest_paid_diagnosis as (\n  select encounter_id\n  , diagnosis_code_1\n  , diagnosis_code_type\n  , row_number() over (partition by encounter_id\norder by sum(paid_amount) desc) as paid_order\n  , sum(paid_amount) as paid_amount\n  from detail_values\n  where diagnosis_code_1 is not null\n  group by diagnosis_code_1\n  , encounter_id\n  , diagnosis_code_type\n)\n\n, highest_paid_facility as (\n  select encounter_id\n  , facility_id\n  , row_number() over (partition by encounter_id\norder by sum(paid_amount) desc) as paid_order\n  , sum(paid_amount) as paid_amount\n  from detail_values\n  where facility_id is not null\n  group by\n   encounter_id\n  , facility_id\n)\n\n, highest_paid_pos as (\n  select encounter_id\n  , place_of_service_code\n  , place_of_service_description\n  , row_number() over (partition by encounter_id\norder by sum(paid_amount) desc) as paid_order\n  , sum(paid_amount) as paid_amount\n  from detail_values\n  where place_of_service_code is not null\n  group by\n   encounter_id\n  , place_of_service_code\n  , place_of_service_description\n)\n\n\n\n\n, service_category_flags as (\n    select\n        d.encounter_id\n       , max(case when scr.service_category_2 = 'lab' then 1 else 0 end) as lab_flag\n       , max(case when scr.service_category_2 = 'ambulance' then 1 else 0 end) as ambulance_flag\n       , max(case when scr.service_category_2 = 'durable medical equipment' then 1 else 0 end) as dme_flag\n       , max(case when scr.service_category_2 = 'outpatient pharmacy' then 1\n                when scr.service_category_2 = 'office-based pharmacy' then 1 else 0 end) as pharmacy_flag\n    from detail_values as d\n    left outer join tuva.claims_preprocessing.service_category_grouper as scr on d.claim_id = scr.claim_id\n    and\n    scr.claim_line_number = d.claim_line_number\n    group by d.encounter_id\n)\n\n\n\nselect d.encounter_id\n, d.encounter_start_date\n, d.patient_data_source_id\n\n, tot.encounter_type\n, tot.encounter_group\n, datediff(\n        day,\n        birth_date,\n        d.encounter_start_date\n        ) / 365 as admit_age\n, e.gender\n, e.race\n, hp.diagnosis_code_type as primary_diagnosis_code_type\n, hp.diagnosis_code_1 as primary_diagnosis_code\n, coalesce(icd10cm.long_description, icd9cm.long_description) as primary_diagnosis_description\n, hf.facility_id as facility_id\n, b.provider_organization_name as facility_name\n, b.primary_specialty_description as facility_type\n, sc.lab_flag\n, sc.dme_flag\n, sc.ambulance_flag\n, sc.pharmacy_flag\n, pos.place_of_service_code\n, pos.place_of_service_description\n, tot.total_paid_amount\n, tot.total_allowed_amount\n, tot.total_charge_amount\n, tot.claim_count\n, tot.inst_claim_count\n, tot.prof_claim_count\n, d.data_source\n, '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom detail_values as d\ninner join total_amounts as tot on d.encounter_id = tot.encounter_id\ninner join service_category_flags as sc on d.encounter_id = sc.encounter_id\nleft outer join highest_paid_diagnosis as hp on d.encounter_id = hp.encounter_id\nand\nhp.paid_order = 1\nleft outer join highest_paid_facility as hf on d.encounter_id = hf.encounter_id\nand\nhf.paid_order = 1\nleft outer join highest_paid_pos as pos on d.encounter_id = pos.encounter_id\nand\npos.paid_order = 1\nleft outer join patient as e\n  on d.patient_data_source_id = e.patient_data_source_id\nleft outer join tuva.terminology.provider as b\n  on hf.facility_id = b.npi\nleft outer join tuva.terminology.icd_10_cm as icd10cm\n  on hp.diagnosis_code_1 = icd10cm.icd_10_cm\n  and hp.diagnosis_code_type = 'icd-10-cm'\nleft outer join tuva.terminology.icd_9_cm as icd9cm\n  on hp.diagnosis_code_1 = icd9cm.icd_9_cm\n  and hp.diagnosis_code_type = 'icd-9-cm'\nwhere d.encounter_row_number = 1", "relation_name": "tuva.claims_preprocessing.lab__encounter_grain", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:27.823464Z", "completed_at": "2025-06-03T19:50:27.838373Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:27.839038Z", "completed_at": "2025-06-03T19:50:27.839043Z"}], "thread_id": "Thread-2", "execution_time": 0.023674964904785156, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.outpatient_hospice__encounter_grain", "compiled": true, "compiled_code": "\n\nwith encounter_date as (\n  select distinct old_encounter_id\n  , start_date as encounter_start_date\n  from tuva.claims_preprocessing.outpatient_hospice__generate_encounter_id\n)\n\n, detail_values as (\n    select stg.*\n    , cli.encounter_id\n    , cli.old_encounter_id\n      , cli.encounter_type\n    , cli.encounter_group\n    , d.encounter_start_date\n    , row_number() over (partition by cli.encounter_id\norder by stg.claim_type, stg.start_date) as encounter_row_number --institutional then professional\n    from tuva.claims_preprocessing.encounters__stg_medical_claim as stg\n    inner join tuva.claims_preprocessing.encounters__combined_claim_line_crosswalk as cli on stg.claim_id = cli.claim_id\n    and\n    stg.claim_line_number = cli.claim_line_number\n    and\n    cli.encounter_type = 'outpatient hospice'\n    and\n    cli.claim_line_attribution_number = 1\n    inner join encounter_date as d on cli.old_encounter_id = d.old_encounter_id\n)\n\n, patient as (\n    select\n        patient_data_source_id\n        , birth_date\n        , gender\n        , race\n    from tuva.claims_preprocessing.encounters__stg_eligibility\n    where patient_row_num = 1\n    )\n\n, total_amounts as (\n    select\n    encounter_id\n    , encounter_type\n    , encounter_group\n    , sum(paid_amount) as total_paid_amount\n    , sum(allowed_amount) as total_allowed_amount\n    , sum(charge_amount) as total_charge_amount\n    , count(distinct claim_id) as claim_count\n    , count(distinct(case when claim_type = 'institutional' then claim_id else null end)) as inst_claim_count\n    , count(distinct(case when claim_type = 'professional' then claim_id else null end)) as prof_claim_count\nfrom detail_values\ngroup by encounter_id\n, encounter_type\n, encounter_group\n)\n\n\n, highest_paid_diagnosis as (\n  select encounter_id\n  , diagnosis_code_1\n  , diagnosis_code_type\n  , row_number() over (partition by encounter_id\norder by sum(paid_amount) desc) as paid_order\n  , sum(paid_amount) as paid_amount\n  from detail_values\n  where diagnosis_code_1 is not null\n  group by diagnosis_code_1\n  , encounter_id\n  , diagnosis_code_type\n)\n\n, highest_paid_facility as (\n  select encounter_id\n  , facility_id\n  , row_number() over (partition by encounter_id\norder by sum(paid_amount) desc) as paid_order\n  , sum(paid_amount) as paid_amount\n  from detail_values\n  where facility_id is not null\n  group by\n   encounter_id\n  , facility_id\n)\n\n\n\n, service_category_flags as (\n    select\n        d.encounter_id\n       , max(case when scr.service_category_2 = 'lab' then 1 else 0 end) as lab_flag\n       , max(case when scr.service_category_2 = 'ambulance' then 1 else 0 end) as ambulance_flag\n       , max(case when scr.service_category_2 = 'durable medical equipment' then 1 else 0 end) as dme_flag\n       , max(case when scr.service_category_2 = 'observation' then 1 else 0 end) as observation_flag\n       , max(case when scr.service_category_2 = 'pharmacy' then 1\n              else 0 end) as pharmacy_flag\n    from detail_values as d\n    left outer join tuva.claims_preprocessing.service_category_grouper as scr on d.claim_id = scr.claim_id\n    and\n    scr.claim_line_number = d.claim_line_number\n    group by d.encounter_id\n)\n\n\nselect d.encounter_id\n, d.encounter_start_date\n, d.patient_data_source_id\n, tot.encounter_type\n, tot.encounter_group\n, datediff(\n        day,\n        birth_date,\n        d.encounter_start_date\n        ) / 365 as admit_age\n, e.gender\n, e.race\n, hp.diagnosis_code_type as primary_diagnosis_code_type\n, hp.diagnosis_code_1 as primary_diagnosis_code\n, coalesce(icd10cm.long_description, icd9cm.long_description) as primary_diagnosis_description\n, hf.facility_id as facility_id\n, b.provider_organization_name as facility_name\n, b.primary_specialty_description as facility_type\n, sc.lab_flag\n, sc.dme_flag\n, sc.ambulance_flag\n, sc.pharmacy_flag\n, sc.observation_flag\n, tot.total_paid_amount\n, tot.total_allowed_amount\n, tot.total_charge_amount\n, tot.claim_count\n, tot.inst_claim_count\n, tot.prof_claim_count\n, d.data_source\n, '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom detail_values as d\ninner join total_amounts as tot on d.encounter_id = tot.encounter_id\ninner join service_category_flags as sc on d.encounter_id = sc.encounter_id\nleft outer join highest_paid_diagnosis as hp on d.encounter_id = hp.encounter_id\nand\nhp.paid_order = 1\nleft outer join highest_paid_facility as hf on d.encounter_id = hf.encounter_id\nand\nhf.paid_order = 1\nleft outer join patient as e\n  on d.patient_data_source_id = e.patient_data_source_id\nleft outer join tuva.terminology.provider as b\n  on hf.facility_id = b.npi\nleft outer join tuva.terminology.icd_10_cm as icd10cm\n  on hp.diagnosis_code_1 = icd10cm.icd_10_cm\n  and hp.diagnosis_code_type = 'icd-10-cm'\nleft outer join tuva.terminology.icd_9_cm as icd9cm\n  on hp.diagnosis_code_1 = icd9cm.icd_9_cm\n  and hp.diagnosis_code_type = 'icd-9-cm'\nwhere d.encounter_row_number = 1", "relation_name": "tuva.claims_preprocessing.outpatient_hospice__encounter_grain", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:27.817198Z", "completed_at": "2025-06-03T19:50:27.838769Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:27.845937Z", "completed_at": "2025-06-03T19:50:27.845943Z"}], "thread_id": "Thread-1", "execution_time": 0.030848979949951172, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.office_visits__int_detail_values", "compiled": true, "compiled_code": "\nwith encounter_date as (\n  select distinct old_encounter_id\n  , start_date as encounter_start_date\n  , 'office visit surgery' as encounter_type\n  from tuva.claims_preprocessing.office_visits__int_office_visits_surgery\n\n  union all\n\nselect distinct old_encounter_id\n  , start_date as encounter_start_date\n  , 'office visit injections' as encounter_type\n  from tuva.claims_preprocessing.office_visits__int_office_visits_injections\n\n  union all\n\nselect distinct old_encounter_id\n  , start_date as encounter_start_date\n  , 'office visit radiology' as encounter_type\n  from tuva.claims_preprocessing.office_visits__int_office_visits_radiology\n\n  union all\n\nselect distinct old_encounter_id\n  , start_date as encounter_start_date\n  , 'office visit - other' as encounter_type\n  from tuva.claims_preprocessing.office_visits__int_office_visits\n\n  union all\n\nselect distinct old_encounter_id\n  , start_date as encounter_start_date\n  , 'office visit' as encounter_type\n  from tuva.claims_preprocessing.office_visits__int_office_visits_em\n\n  union all\n\nselect distinct old_encounter_id\n  , start_date as encounter_start_date\n  , 'telehealth' as encounter_type\n  from tuva.claims_preprocessing.office_visits__int_office_visits_telehealth\n\n  union all\n\nselect distinct old_encounter_id\n  , start_date as encounter_start_date\n  , 'office visit pt/ot/st' as encounter_type\n  from tuva.claims_preprocessing.office_visits__int_office_visits\n)\n\n\n    select\n      stg.paid_amount\n    , stg.allowed_amount\n    , stg.charge_amount\n    , stg.claim_id\n    , stg.claim_type\n    , stg.diagnosis_code_1\n    , stg.diagnosis_code_type\n    , stg.facility_id\n    , stg.billing_id\n    , stg.hcpcs_code\n    , stg.ccs_category\n    , stg.ccs_category_description\n    , stg.claim_line_number\n    , stg.patient_data_source_id\n    , stg.data_source\n    , cli.encounter_id\n    , cli.old_encounter_id\n    , cli.encounter_type\n    , cli.encounter_group\n    , d.encounter_start_date\n    , row_number() over (partition by cli.encounter_id\norder by stg.claim_type, stg.start_date) as encounter_row_number --institutional then professional\n    from tuva.claims_preprocessing.encounters__stg_medical_claim as stg\n    inner join tuva.claims_preprocessing.encounters__combined_claim_line_crosswalk as cli on stg.claim_id = cli.claim_id\n    and\n    stg.claim_line_number = cli.claim_line_number\n    and\n    cli.encounter_group = 'office based'\n    and\n    cli.claim_line_attribution_number = 1\n    inner join encounter_date as d on cli.old_encounter_id = d.old_encounter_id\n    and\n    d.encounter_type = cli.encounter_type", "relation_name": "tuva.claims_preprocessing.office_visits__int_detail_values", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:27.831119Z", "completed_at": "2025-06-03T19:50:27.846337Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:27.847230Z", "completed_at": "2025-06-03T19:50:27.847235Z"}], "thread_id": "Thread-3", "execution_time": 0.017519712448120117, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.outpatient_hospital_or_clinic__encounter_grain", "compiled": true, "compiled_code": "\n\nwith encounter_date as (\n  select distinct old_encounter_id\n  , start_date as encounter_start_date\n  from tuva.claims_preprocessing.outpatient_hospital_or_clinic__generate_encounter_id\n)\n\n, detail_values as (\n    select stg.*\n    , cli.encounter_id\n    , cli.old_encounter_id\n      , cli.encounter_type\n    , cli.encounter_group\n    , d.encounter_start_date\n    , row_number() over (partition by cli.encounter_id\norder by stg.claim_type, stg.start_date) as encounter_row_number --institutional then professional\n    from tuva.claims_preprocessing.encounters__stg_medical_claim as stg\n    inner join tuva.claims_preprocessing.encounters__combined_claim_line_crosswalk as cli on stg.claim_id = cli.claim_id\n    and\n    stg.claim_line_number = cli.claim_line_number\n    and\n    cli.encounter_type = 'outpatient hospital or clinic'\n    and\n    cli.claim_line_attribution_number = 1\n    inner join encounter_date as d on cli.old_encounter_id = d.old_encounter_id\n)\n\n, patient as (\n    select\n        patient_data_source_id\n        , birth_date\n        , gender\n        , race\n    from tuva.claims_preprocessing.encounters__stg_eligibility\n    where patient_row_num = 1\n    )\n\n, total_amounts as (\n    select\n    encounter_id\n    , encounter_type\n    , encounter_group\n    , sum(paid_amount) as total_paid_amount\n    , sum(allowed_amount) as total_allowed_amount\n    , sum(charge_amount) as total_charge_amount\n    , count(distinct claim_id) as claim_count\n    , count(distinct(case when claim_type = 'institutional' then claim_id else null end)) as inst_claim_count\n    , count(distinct(case when claim_type = 'professional' then claim_id else null end)) as prof_claim_count\nfrom detail_values\ngroup by encounter_id\n, encounter_type\n, encounter_group\n)\n\n\n, highest_paid_diagnosis as (\n  select encounter_id\n  , diagnosis_code_1\n  , diagnosis_code_type\n  , row_number() over (partition by encounter_id\norder by sum(paid_amount) desc) as paid_order\n  , sum(paid_amount) as paid_amount\n  from detail_values\n  where diagnosis_code_1 is not null\n  group by diagnosis_code_1\n  , encounter_id\n  , diagnosis_code_type\n)\n\n, highest_paid_facility as (\n  select encounter_id\n  , facility_id\n  , row_number() over (partition by encounter_id\norder by sum(paid_amount) desc) as paid_order\n  , sum(paid_amount) as paid_amount\n  from detail_values\n  where facility_id is not null\n  group by\n   encounter_id\n  , facility_id\n)\n\n\n\n, service_category_flags as (\n    select\n        d.encounter_id\n       , max(case when scr.service_category_2 = 'lab' then 1 else 0 end) as lab_flag\n       , max(case when scr.service_category_2 = 'ambulance' then 1 else 0 end) as ambulance_flag\n       , max(case when scr.service_category_2 = 'durable medical equipment' then 1 else 0 end) as dme_flag\n       , max(case when scr.service_category_2 = 'observation' then 1 else 0 end) as observation_flag\n       , max(case when scr.service_category_2 = 'pharmacy' then 1\n              else 0 end) as pharmacy_flag\n    from detail_values as d\n    left outer join tuva.claims_preprocessing.service_category_grouper as scr on d.claim_id = scr.claim_id\n    and\n    scr.claim_line_number = d.claim_line_number\n    group by d.encounter_id\n)\n\n\nselect d.encounter_id\n, d.encounter_start_date\n, d.patient_data_source_id\n\n, tot.encounter_type\n, tot.encounter_group\n, datediff(\n        day,\n        birth_date,\n        d.encounter_start_date\n        ) / 365 as admit_age\n, e.gender\n, e.race\n, hp.diagnosis_code_type as primary_diagnosis_code_type\n, hp.diagnosis_code_1 as primary_diagnosis_code\n, coalesce(icd10cm.long_description, icd9cm.long_description) as primary_diagnosis_description\n, hf.facility_id as facility_id\n, b.provider_organization_name as facility_name\n, b.primary_specialty_description as facility_type\n, sc.lab_flag\n, sc.dme_flag\n, sc.ambulance_flag\n, sc.pharmacy_flag, sc.observation_flag\n, tot.total_paid_amount\n, tot.total_allowed_amount\n, tot.total_charge_amount\n, tot.claim_count\n, tot.inst_claim_count\n, tot.prof_claim_count\n, d.data_source\n, '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom detail_values as d\ninner join total_amounts as tot on d.encounter_id = tot.encounter_id\ninner join service_category_flags as sc on d.encounter_id = sc.encounter_id\nleft outer join highest_paid_diagnosis as hp on d.encounter_id = hp.encounter_id\nand\nhp.paid_order = 1\nleft outer join highest_paid_facility as hf on d.encounter_id = hf.encounter_id\nand\nhf.paid_order = 1\nleft outer join patient as e\n  on d.patient_data_source_id = e.patient_data_source_id\nleft outer join tuva.terminology.provider as b\n  on hf.facility_id = b.npi\nleft outer join tuva.terminology.icd_10_cm as icd10cm\n  on hp.diagnosis_code_1 = icd10cm.icd_10_cm\n  and hp.diagnosis_code_type = 'icd-10-cm'\nleft outer join tuva.terminology.icd_9_cm as icd9cm\n  on hp.diagnosis_code_1 = icd9cm.icd_9_cm\n  and hp.diagnosis_code_type = 'icd-9-cm'\nwhere d.encounter_row_number = 1", "relation_name": "tuva.claims_preprocessing.outpatient_hospital_or_clinic__encounter_grain", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:27.839404Z", "completed_at": "2025-06-03T19:50:27.847917Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:27.848945Z", "completed_at": "2025-06-03T19:50:27.848949Z"}], "thread_id": "Thread-4", "execution_time": 0.018149852752685547, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.outpatient_injections__encounter_grain", "compiled": true, "compiled_code": "\n\nwith encounter_date as (\n  select distinct old_encounter_id\n  , start_date as encounter_start_date\n  from tuva.claims_preprocessing.outpatient_injections__generate_encounter_id\n)\n\n, detail_values as (\n    select stg.*\n    , cli.encounter_id\n    , cli.old_encounter_id\n      , cli.encounter_type\n    , cli.encounter_group\n    , d.encounter_start_date\n    , row_number() over (partition by cli.encounter_id\norder by stg.claim_type, stg.start_date) as encounter_row_number --institutional then professional\n    from tuva.claims_preprocessing.encounters__stg_medical_claim as stg\n    inner join tuva.claims_preprocessing.encounters__combined_claim_line_crosswalk as cli on stg.claim_id = cli.claim_id\n    and\n    stg.claim_line_number = cli.claim_line_number\n    and\n    cli.encounter_type = 'outpatient injections'\n    and\n    cli.claim_line_attribution_number = 1\n    inner join encounter_date as d on cli.old_encounter_id = d.old_encounter_id\n)\n\n, patient as (\n    select\n        patient_data_source_id\n        , birth_date\n        , gender\n        , race\n    from tuva.claims_preprocessing.encounters__stg_eligibility\n    where patient_row_num = 1\n    )\n\n, total_amounts as (\n    select\n    encounter_id\n    , encounter_type\n    , encounter_group\n    , sum(paid_amount) as total_paid_amount\n    , sum(allowed_amount) as total_allowed_amount\n    , sum(charge_amount) as total_charge_amount\n    , count(distinct claim_id) as claim_count\n    , count(distinct(case when claim_type = 'institutional' then claim_id else null end)) as inst_claim_count\n    , count(distinct(case when claim_type = 'professional' then claim_id else null end)) as prof_claim_count\nfrom detail_values\ngroup by encounter_id\n, encounter_type\n, encounter_group\n)\n\n\n, highest_paid_diagnosis as (\n  select encounter_id\n  , diagnosis_code_1\n  , diagnosis_code_type\n  , row_number() over (partition by encounter_id\norder by sum(paid_amount) desc) as paid_order\n  , sum(paid_amount) as paid_amount\n  from detail_values\n  where diagnosis_code_1 is not null\n  group by diagnosis_code_1\n  , encounter_id\n  , diagnosis_code_type\n)\n\n, highest_paid_facility as (\n  select encounter_id\n  , facility_id\n  , row_number() over (partition by encounter_id\norder by sum(paid_amount) desc) as paid_order\n  , sum(paid_amount) as paid_amount\n  from detail_values\n  where facility_id is not null\n  group by\n   encounter_id\n  , facility_id\n)\n\n, highest_paid_hcpc as (\n  select encounter_id\n  , hcpcs_code\n  , row_number() over (partition by encounter_id\norder by sum(paid_amount) desc) as paid_order\n  , sum(paid_amount) as paid_amount\n  from detail_values\n  where substring(hcpcs_code, 1, 1) = 'J'\n\n  group by\n   encounter_id\n  , hcpcs_code\n)\n\n\n\n, service_category_flags as (\n    select\n        d.encounter_id\n       , max(case when scr.service_category_2 = 'lab' then 1 else 0 end) as lab_flag\n       , max(case when scr.service_category_2 = 'ambulance' then 1 else 0 end) as ambulance_flag\n       , max(case when scr.service_category_2 = 'durable medical equipment' then 1 else 0 end) as dme_flag\n       , max(case when scr.service_category_2 = 'observation' then 1 else 0 end) as observation_flag\n       , max(case when scr.service_category_2 = 'pharmacy' then 1\n              else 0 end) as pharmacy_flag\n    from detail_values as d\n    left outer join tuva.claims_preprocessing.service_category_grouper as scr on d.claim_id = scr.claim_id\n    and\n    scr.claim_line_number = d.claim_line_number\n    group by d.encounter_id\n)\n\n\nselect d.encounter_id\n, d.encounter_start_date\n, d.patient_data_source_id\n\n, tot.encounter_type\n, tot.encounter_group\n, datediff(\n        day,\n        birth_date,\n        d.encounter_start_date\n        ) / 365 as admit_age\n, e.gender\n, e.race\n, hp.diagnosis_code_type as primary_diagnosis_code_type\n, hp.diagnosis_code_1 as primary_diagnosis_code\n, coalesce(icd10cm.long_description, icd9cm.long_description) as primary_diagnosis_description\n, hf.facility_id as facility_id\n, b.provider_organization_name as facility_name\n, b.primary_specialty_description as facility_type\n, sc.lab_flag\n, sc.dme_flag\n, sc.ambulance_flag\n, sc.pharmacy_flag, sc.observation_flag\n, hcpc.hcpcs_code\n, tot.total_paid_amount\n, tot.total_allowed_amount\n, tot.total_charge_amount\n, tot.claim_count\n, tot.inst_claim_count\n, tot.prof_claim_count\n, d.data_source\n, '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom detail_values as d\ninner join total_amounts as tot on d.encounter_id = tot.encounter_id\ninner join service_category_flags as sc on d.encounter_id = sc.encounter_id\nleft outer join highest_paid_diagnosis as hp on d.encounter_id = hp.encounter_id\nand\nhp.paid_order = 1\nleft outer join highest_paid_facility as hf on d.encounter_id = hf.encounter_id\nand\nhf.paid_order = 1\nleft outer join highest_paid_hcpc as hcpc on d.encounter_id = hcpc.encounter_id\nand\nhcpc.paid_order = 1\nleft outer join patient as e\n  on d.patient_data_source_id = e.patient_data_source_id\nleft outer join tuva.terminology.provider as b\n  on hf.facility_id = b.npi\nleft outer join tuva.terminology.icd_10_cm as icd10cm\n  on hp.diagnosis_code_1 = icd10cm.icd_10_cm\n  and hp.diagnosis_code_type = 'icd-10-cm'\nleft outer join tuva.terminology.icd_9_cm as icd9cm\n  on hp.diagnosis_code_1 = icd9cm.icd_9_cm\n  and hp.diagnosis_code_type = 'icd-9-cm'\nwhere d.encounter_row_number = 1", "relation_name": "tuva.claims_preprocessing.outpatient_injections__encounter_grain", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:27.849814Z", "completed_at": "2025-06-03T19:50:27.872492Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:27.879435Z", "completed_at": "2025-06-03T19:50:27.879440Z"}], "thread_id": "Thread-2", "execution_time": 0.03184008598327637, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.outpatient_psych__encounter_grain", "compiled": true, "compiled_code": "\n\nwith encounter_date as (\n  select distinct old_encounter_id\n  , start_date as encounter_start_date\n  from tuva.claims_preprocessing.outpatient_psych__generate_encounter_id\n)\n\n, detail_values as (\n    select stg.*\n    , cli.encounter_id\n    , cli.old_encounter_id\n      , cli.encounter_type\n    , cli.encounter_group\n    , d.encounter_start_date\n    , row_number() over (partition by cli.encounter_id\norder by stg.claim_type, stg.start_date) as encounter_row_number --institutional then professional\n    from tuva.claims_preprocessing.encounters__stg_medical_claim as stg\n    inner join tuva.claims_preprocessing.encounters__combined_claim_line_crosswalk as cli on stg.claim_id = cli.claim_id\n    and\n    stg.claim_line_number = cli.claim_line_number\n    and\n    cli.encounter_type = 'outpatient psych'\n    and\n    cli.claim_line_attribution_number = 1\n    inner join encounter_date as d on cli.old_encounter_id = d.old_encounter_id\n)\n\n, patient as (\n    select\n        patient_data_source_id\n        , birth_date\n        , gender\n        , race\n    from tuva.claims_preprocessing.encounters__stg_eligibility\n    where patient_row_num = 1\n    )\n\n, total_amounts as (\n    select\n    encounter_id\n    , encounter_type\n    , encounter_group\n    , sum(paid_amount) as total_paid_amount\n    , sum(allowed_amount) as total_allowed_amount\n    , sum(charge_amount) as total_charge_amount\n    , count(distinct claim_id) as claim_count\n    , count(distinct(case when claim_type = 'institutional' then claim_id else null end)) as inst_claim_count\n    , count(distinct(case when claim_type = 'professional' then claim_id else null end)) as prof_claim_count\nfrom detail_values\ngroup by encounter_id\n, encounter_type\n, encounter_group\n)\n\n\n, highest_paid_diagnosis as (\n  select encounter_id\n  , diagnosis_code_1\n  , diagnosis_code_type\n  , row_number() over (partition by encounter_id\norder by sum(paid_amount) desc) as paid_order\n  , sum(paid_amount) as paid_amount\n  from detail_values\n  where diagnosis_code_1 is not null\n  group by diagnosis_code_1\n  , encounter_id\n  , diagnosis_code_type\n)\n\n, highest_paid_facility as (\n  select encounter_id\n  , facility_id\n  , row_number() over (partition by encounter_id\norder by sum(paid_amount) desc) as paid_order\n  , sum(paid_amount) as paid_amount\n  from detail_values\n  where facility_id is not null\n  group by\n   encounter_id\n  , facility_id\n)\n\n\n\n, service_category_flags as (\n    select\n        d.encounter_id\n       , max(case when scr.service_category_2 = 'lab' then 1 else 0 end) as lab_flag\n       , max(case when scr.service_category_2 = 'ambulance' then 1 else 0 end) as ambulance_flag\n       , max(case when scr.service_category_2 = 'durable medical equipment' then 1 else 0 end) as dme_flag\n       , max(case when scr.service_category_2 = 'observation' then 1 else 0 end) as observation_flag\n       , max(case when scr.service_category_2 = 'pharmacy' then 1\n              else 0 end) as pharmacy_flag\n    from detail_values as d\n    left outer join tuva.claims_preprocessing.service_category_grouper as scr on d.claim_id = scr.claim_id\n    and\n    scr.claim_line_number = d.claim_line_number\n    group by d.encounter_id\n)\n\n\nselect d.encounter_id\n, d.encounter_start_date\n, d.patient_data_source_id\n\n, tot.encounter_type\n, tot.encounter_group\n, datediff(\n        day,\n        birth_date,\n        d.encounter_start_date\n        ) / 365 as admit_age\n, e.gender\n, e.race\n, hp.diagnosis_code_type as primary_diagnosis_code_type\n, hp.diagnosis_code_1 as primary_diagnosis_code\n, coalesce(icd10cm.long_description, icd9cm.long_description) as primary_diagnosis_description\n, hf.facility_id as facility_id\n, b.provider_organization_name as facility_name\n, b.primary_specialty_description as facility_type\n, sc.lab_flag\n, sc.dme_flag\n, sc.ambulance_flag\n, sc.pharmacy_flag, sc.observation_flag\n, tot.total_paid_amount\n, tot.total_allowed_amount\n, tot.total_charge_amount\n, tot.claim_count\n, tot.inst_claim_count\n, tot.prof_claim_count\n, d.data_source\n, '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom detail_values as d\ninner join total_amounts as tot on d.encounter_id = tot.encounter_id\ninner join service_category_flags as sc on d.encounter_id = sc.encounter_id\nleft outer join highest_paid_diagnosis as hp on d.encounter_id = hp.encounter_id\nand\nhp.paid_order = 1\nleft outer join highest_paid_facility as hf on d.encounter_id = hf.encounter_id\nand\nhf.paid_order = 1\nleft outer join patient as e\n  on d.patient_data_source_id = e.patient_data_source_id\nleft outer join tuva.terminology.provider as b\n  on hf.facility_id = b.npi\nleft outer join tuva.terminology.icd_10_cm as icd10cm\n  on hp.diagnosis_code_1 = icd10cm.icd_10_cm\n  and hp.diagnosis_code_type = 'icd-10-cm'\nleft outer join tuva.terminology.icd_9_cm as icd9cm\n  on hp.diagnosis_code_1 = icd9cm.icd_9_cm\n  and hp.diagnosis_code_type = 'icd-9-cm'\nwhere d.encounter_row_number = 1", "relation_name": "tuva.claims_preprocessing.outpatient_psych__encounter_grain", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:27.857737Z", "completed_at": "2025-06-03T19:50:27.879037Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:27.879845Z", "completed_at": "2025-06-03T19:50:27.879849Z"}], "thread_id": "Thread-1", "execution_time": 0.0317540168762207, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.outpatient_ptotst__encounter_grain", "compiled": true, "compiled_code": "\n\nwith encounter_date as (\n  select distinct old_encounter_id\n  , start_date as encounter_start_date\n  from tuva.claims_preprocessing.outpatient_ptotst__generate_encounter_id\n)\n\n, detail_values as (\n    select stg.*\n    , cli.encounter_id\n    , cli.old_encounter_id\n      , cli.encounter_type\n    , cli.encounter_group\n    , d.encounter_start_date\n    , row_number() over (partition by cli.encounter_id\norder by stg.claim_type, stg.start_date) as encounter_row_number --institutional then professional\n    from tuva.claims_preprocessing.encounters__stg_medical_claim as stg\n    inner join tuva.claims_preprocessing.encounters__combined_claim_line_crosswalk as cli on stg.claim_id = cli.claim_id\n    and\n    stg.claim_line_number = cli.claim_line_number\n    and\n    cli.encounter_type = 'outpatient pt/ot/st'\n    and\n    cli.claim_line_attribution_number = 1\n    inner join encounter_date as d on cli.old_encounter_id = d.old_encounter_id\n)\n\n, patient as (\n    select\n        patient_data_source_id\n        , birth_date\n        , gender\n        , race\n    from tuva.claims_preprocessing.encounters__stg_eligibility\n    where patient_row_num = 1\n    )\n\n, total_amounts as (\n    select\n    encounter_id\n    , encounter_type\n    , encounter_group\n    , sum(paid_amount) as total_paid_amount\n    , sum(allowed_amount) as total_allowed_amount\n    , sum(charge_amount) as total_charge_amount\n    , count(distinct claim_id) as claim_count\n    , count(distinct(case when claim_type = 'institutional' then claim_id else null end)) as inst_claim_count\n    , count(distinct(case when claim_type = 'professional' then claim_id else null end)) as prof_claim_count\nfrom detail_values\ngroup by encounter_id\n, encounter_type\n, encounter_group\n)\n\n\n, highest_paid_diagnosis as (\n  select encounter_id\n  , diagnosis_code_1\n  , diagnosis_code_type\n  , row_number() over (partition by encounter_id\norder by sum(paid_amount) desc) as paid_order\n  , sum(paid_amount) as paid_amount\n  from detail_values\n  where diagnosis_code_1 is not null\n  group by diagnosis_code_1\n  , encounter_id\n  , diagnosis_code_type\n)\n\n, highest_paid_facility as (\n  select encounter_id\n  , facility_id\n  , row_number() over (partition by encounter_id\norder by sum(paid_amount) desc) as paid_order\n  , sum(paid_amount) as paid_amount\n  from detail_values\n  where facility_id is not null\n  group by\n   encounter_id\n  , facility_id\n)\n\n\n\n, service_category_flags as (\n    select\n        d.encounter_id\n       , max(case when scr.service_category_2 = 'lab' then 1 else 0 end) as lab_flag\n       , max(case when scr.service_category_2 = 'ambulance' then 1 else 0 end) as ambulance_flag\n       , max(case when scr.service_category_2 = 'durable medical equipment' then 1 else 0 end) as dme_flag\n       , max(case when scr.service_category_2 = 'observation' then 1 else 0 end) as observation_flag\n       , max(case when scr.service_category_2 = 'pharmacy' then 1\n              else 0 end) as pharmacy_flag\n    from detail_values as d\n    left outer join tuva.claims_preprocessing.service_category_grouper as scr on d.claim_id = scr.claim_id\n    and\n    scr.claim_line_number = d.claim_line_number\n    group by d.encounter_id\n)\n\n\nselect d.encounter_id\n, d.encounter_start_date\n, d.patient_data_source_id\n\n, tot.encounter_type\n, tot.encounter_group\n, datediff(\n        day,\n        birth_date,\n        d.encounter_start_date\n        ) / 365 as admit_age\n, e.gender\n, e.race\n, hp.diagnosis_code_type as primary_diagnosis_code_type\n, hp.diagnosis_code_1 as primary_diagnosis_code\n, coalesce(icd10cm.long_description, icd9cm.long_description) as primary_diagnosis_description\n, hf.facility_id as facility_id\n, b.provider_organization_name as facility_name\n, b.primary_specialty_description as facility_type\n, sc.lab_flag\n, sc.dme_flag\n, sc.ambulance_flag\n, sc.pharmacy_flag, sc.observation_flag\n, tot.total_paid_amount\n, tot.total_allowed_amount\n, tot.total_charge_amount\n, tot.claim_count\n, tot.inst_claim_count\n, tot.prof_claim_count\n, d.data_source\n, '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom detail_values as d\ninner join total_amounts as tot on d.encounter_id = tot.encounter_id\ninner join service_category_flags as sc on d.encounter_id = sc.encounter_id\nleft outer join highest_paid_diagnosis as hp on d.encounter_id = hp.encounter_id\nand\nhp.paid_order = 1\nleft outer join highest_paid_facility as hf on d.encounter_id = hf.encounter_id\nand\nhf.paid_order = 1\nleft outer join patient as e\n  on d.patient_data_source_id = e.patient_data_source_id\nleft outer join tuva.terminology.provider as b\n  on hf.facility_id = b.npi\nleft outer join tuva.terminology.icd_10_cm as icd10cm\n  on hp.diagnosis_code_1 = icd10cm.icd_10_cm\n  and hp.diagnosis_code_type = 'icd-10-cm'\nleft outer join tuva.terminology.icd_9_cm as icd9cm\n  on hp.diagnosis_code_1 = icd9cm.icd_9_cm\n  and hp.diagnosis_code_type = 'icd-9-cm'\nwhere d.encounter_row_number = 1", "relation_name": "tuva.claims_preprocessing.outpatient_ptotst__encounter_grain", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:27.864986Z", "completed_at": "2025-06-03T19:50:27.880214Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:27.880980Z", "completed_at": "2025-06-03T19:50:27.880983Z"}], "thread_id": "Thread-3", "execution_time": 0.031497955322265625, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.outpatient_radiology__encounter_grain", "compiled": true, "compiled_code": "\n\nwith encounter_date as (\n  select distinct old_encounter_id\n  , start_date as encounter_start_date\n  from tuva.claims_preprocessing.outpatient_radiology__generate_encounter_id\n)\n\n, detail_values as (\n    select stg.*\n    , cli.encounter_id\n    , cli.old_encounter_id\n      , cli.encounter_type\n    , cli.encounter_group\n    , d.encounter_start_date\n    , row_number() over (partition by cli.encounter_id\norder by stg.claim_type, stg.start_date) as encounter_row_number --institutional then professional\n    from tuva.claims_preprocessing.encounters__stg_medical_claim as stg\n    inner join tuva.claims_preprocessing.encounters__combined_claim_line_crosswalk as cli on stg.claim_id = cli.claim_id\n    and\n    stg.claim_line_number = cli.claim_line_number\n    and\n    cli.encounter_type = 'outpatient radiology'\n    and\n    cli.claim_line_attribution_number = 1\n    inner join encounter_date as d on cli.old_encounter_id = d.old_encounter_id\n)\n\n, patient as (\n    select\n        patient_data_source_id\n        , birth_date\n        , gender\n        , race\n    from tuva.claims_preprocessing.encounters__stg_eligibility\n    where patient_row_num = 1\n    )\n\n, total_amounts as (\n    select\n    encounter_id\n    , encounter_type\n    , encounter_group\n    , sum(paid_amount) as total_paid_amount\n    , sum(allowed_amount) as total_allowed_amount\n    , sum(charge_amount) as total_charge_amount\n    , count(distinct claim_id) as claim_count\n    , count(distinct(case when claim_type = 'institutional' then claim_id else null end)) as inst_claim_count\n    , count(distinct(case when claim_type = 'professional' then claim_id else null end)) as prof_claim_count\nfrom detail_values\ngroup by encounter_id\n, encounter_type\n, encounter_group\n)\n\n\n, highest_paid_diagnosis as (\n  select encounter_id\n  , diagnosis_code_1\n  , diagnosis_code_type\n  , row_number() over (partition by encounter_id\norder by sum(paid_amount) desc) as paid_order\n  , sum(paid_amount) as paid_amount\n  from detail_values\n  where diagnosis_code_1 is not null\n  group by diagnosis_code_1\n  , encounter_id\n  , diagnosis_code_type\n)\n\n, highest_paid_facility as (\n  select encounter_id\n  , facility_id\n  , row_number() over (partition by encounter_id\norder by sum(paid_amount) desc) as paid_order\n  , sum(paid_amount) as paid_amount\n  from detail_values\n  where facility_id is not null\n  group by\n   encounter_id\n  , facility_id\n)\n\n, hcpcs_code as (\n  select distinct hcpcs_code\n  , encounter_id\n  from detail_values\n\n)\n\n\n\n, service_category_flags as (\n    select\n        d.encounter_id\n       , max(case when scr.service_category_2 = 'lab' then 1 else 0 end) as lab_flag\n       , max(case when scr.service_category_2 = 'ambulance' then 1 else 0 end) as ambulance_flag\n       , max(case when scr.service_category_2 = 'durable medical equipment' then 1 else 0 end) as dme_flag\n       , max(case when scr.service_category_2 = 'observation' then 1 else 0 end) as observation_flag\n       , max(case when scr.service_category_2 = 'pharmacy' then 1\n              else 0 end) as pharmacy_flag\n    from detail_values as d\n    left outer join tuva.claims_preprocessing.service_category_grouper as scr on d.claim_id = scr.claim_id\n    and\n    scr.claim_line_number = d.claim_line_number\n    group by d.encounter_id\n)\n\n\nselect d.encounter_id\n, d.encounter_start_date\n, d.patient_data_source_id\n\n, tot.encounter_type\n, tot.encounter_group\n, datediff(\n        day,\n        birth_date,\n        d.encounter_start_date\n        ) / 365 as admit_age\n, e.gender\n, e.race\n, hp.diagnosis_code_type as primary_diagnosis_code_type\n, hp.diagnosis_code_1 as primary_diagnosis_code\n, coalesce(icd10cm.long_description, icd9cm.long_description) as primary_diagnosis_description\n, hf.facility_id as facility_id\n, b.provider_organization_name as facility_name\n, b.primary_specialty_description as facility_type\n, sc.lab_flag\n, sc.dme_flag\n, sc.ambulance_flag\n, sc.pharmacy_flag, sc.observation_flag\n, hcpc.hcpcs_code\n, tot.total_paid_amount\n, tot.total_allowed_amount\n, tot.total_charge_amount\n, tot.claim_count\n, tot.inst_claim_count\n, tot.prof_claim_count\n, d.data_source\n, '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom detail_values as d\ninner join total_amounts as tot on d.encounter_id = tot.encounter_id\ninner join service_category_flags as sc on d.encounter_id = sc.encounter_id\nleft outer join highest_paid_diagnosis as hp on d.encounter_id = hp.encounter_id\nand\nhp.paid_order = 1\nleft outer join highest_paid_facility as hf on d.encounter_id = hf.encounter_id\nand\nhf.paid_order = 1\nleft outer join hcpcs_code as hcpc on d.encounter_id = hcpc.encounter_id\nleft outer join patient as e\n  on d.patient_data_source_id = e.patient_data_source_id\nleft outer join tuva.terminology.provider as b\n  on hf.facility_id = b.npi\nleft outer join tuva.terminology.icd_10_cm as icd10cm\n  on hp.diagnosis_code_1 = icd10cm.icd_10_cm\n  and hp.diagnosis_code_type = 'icd-10-cm'\nleft outer join tuva.terminology.icd_9_cm as icd9cm\n  on hp.diagnosis_code_1 = icd9cm.icd_9_cm\n  and hp.diagnosis_code_type = 'icd-9-cm'\nwhere d.encounter_row_number = 1", "relation_name": "tuva.claims_preprocessing.outpatient_radiology__encounter_grain", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:27.872765Z", "completed_at": "2025-06-03T19:50:27.881339Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:27.882220Z", "completed_at": "2025-06-03T19:50:27.882224Z"}], "thread_id": "Thread-4", "execution_time": 0.017567873001098633, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.outpatient_rehab__encounter_grain", "compiled": true, "compiled_code": "\n\nwith encounter_date as (\n  select distinct old_encounter_id\n  , start_date as encounter_start_date\n  from tuva.claims_preprocessing.outpatient_rehab__generate_encounter_id\n)\n\n, detail_values as (\n    select stg.*\n    , cli.encounter_id\n    , cli.old_encounter_id\n      , cli.encounter_type\n    , cli.encounter_group\n    , d.encounter_start_date\n    , row_number() over (partition by cli.encounter_id\norder by stg.claim_type, stg.start_date) as encounter_row_number --institutional then professional\n    from tuva.claims_preprocessing.encounters__stg_medical_claim as stg\n    inner join tuva.claims_preprocessing.encounters__combined_claim_line_crosswalk as cli on stg.claim_id = cli.claim_id\n    and\n    stg.claim_line_number = cli.claim_line_number\n    and\n    cli.encounter_type = 'outpatient rehabilitation'\n    and\n    cli.claim_line_attribution_number = 1\n    inner join encounter_date as d on cli.old_encounter_id = d.old_encounter_id\n)\n\n, patient as (\n    select\n        patient_data_source_id\n        , birth_date\n        , gender\n        , race\n    from tuva.claims_preprocessing.encounters__stg_eligibility\n    where patient_row_num = 1\n    )\n\n, total_amounts as (\n    select\n    encounter_id\n    , encounter_type\n    , encounter_group\n    , sum(paid_amount) as total_paid_amount\n    , sum(allowed_amount) as total_allowed_amount\n    , sum(charge_amount) as total_charge_amount\n    , count(distinct claim_id) as claim_count\n    , count(distinct(case when claim_type = 'institutional' then claim_id else null end)) as inst_claim_count\n    , count(distinct(case when claim_type = 'professional' then claim_id else null end)) as prof_claim_count\nfrom detail_values\ngroup by encounter_id\n, encounter_type\n, encounter_group\n)\n\n\n, highest_paid_diagnosis as (\n  select encounter_id\n  , diagnosis_code_1\n  , diagnosis_code_type\n  , row_number() over (partition by encounter_id\norder by sum(paid_amount) desc) as paid_order\n  , sum(paid_amount) as paid_amount\n  from detail_values\n  where diagnosis_code_1 is not null\n  group by diagnosis_code_1\n  , encounter_id\n  , diagnosis_code_type\n)\n\n, highest_paid_facility as (\n  select encounter_id\n  , facility_id\n  , row_number() over (partition by encounter_id\norder by sum(paid_amount) desc) as paid_order\n  , sum(paid_amount) as paid_amount\n  from detail_values\n  where facility_id is not null\n  group by\n   encounter_id\n  , facility_id\n)\n\n\n\n, service_category_flags as (\n    select\n        d.encounter_id\n       , max(case when scr.service_category_2 = 'lab' then 1 else 0 end) as lab_flag\n       , max(case when scr.service_category_2 = 'ambulance' then 1 else 0 end) as ambulance_flag\n       , max(case when scr.service_category_2 = 'durable medical equipment' then 1 else 0 end) as dme_flag\n       , max(case when scr.service_category_2 = 'observation' then 1 else 0 end) as observation_flag\n       , max(case when scr.service_category_2 = 'pharmacy' then 1\n              else 0 end) as pharmacy_flag\n    from detail_values as d\n    left outer join tuva.claims_preprocessing.service_category_grouper as scr on d.claim_id = scr.claim_id\n    and\n    scr.claim_line_number = d.claim_line_number\n    group by d.encounter_id\n)\n\n\nselect d.encounter_id\n, d.encounter_start_date\n, d.patient_data_source_id\n\n, tot.encounter_type\n, tot.encounter_group\n, datediff(\n        day,\n        birth_date,\n        d.encounter_start_date\n        ) / 365 as admit_age\n, e.gender\n, e.race\n, hp.diagnosis_code_type as primary_diagnosis_code_type\n, hp.diagnosis_code_1 as primary_diagnosis_code\n, coalesce(icd10cm.long_description, icd9cm.long_description) as primary_diagnosis_description\n, hf.facility_id as facility_id\n, b.provider_organization_name as facility_name\n, b.primary_specialty_description as facility_type\n, sc.lab_flag\n, sc.dme_flag\n, sc.ambulance_flag\n, sc.pharmacy_flag, sc.observation_flag\n, tot.total_paid_amount\n, tot.total_allowed_amount\n, tot.total_charge_amount\n, tot.claim_count\n, tot.inst_claim_count\n, tot.prof_claim_count\n, d.data_source\n, '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom detail_values as d\ninner join total_amounts as tot on d.encounter_id = tot.encounter_id\ninner join service_category_flags as sc on d.encounter_id = sc.encounter_id\nleft outer join highest_paid_diagnosis as hp on d.encounter_id = hp.encounter_id\nand\nhp.paid_order = 1\nleft outer join highest_paid_facility as hf on d.encounter_id = hf.encounter_id\nand\nhf.paid_order = 1\nleft outer join patient as e\n  on d.patient_data_source_id = e.patient_data_source_id\nleft outer join tuva.terminology.provider as b\n  on hf.facility_id = b.npi\nleft outer join tuva.terminology.icd_10_cm as icd10cm\n  on hp.diagnosis_code_1 = icd10cm.icd_10_cm\n  and hp.diagnosis_code_type = 'icd-10-cm'\nleft outer join tuva.terminology.icd_9_cm as icd9cm\n  on hp.diagnosis_code_1 = icd9cm.icd_9_cm\n  and hp.diagnosis_code_type = 'icd-9-cm'\nwhere d.encounter_row_number = 1", "relation_name": "tuva.claims_preprocessing.outpatient_rehab__encounter_grain", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:27.889972Z", "completed_at": "2025-06-03T19:50:27.910217Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:27.913662Z", "completed_at": "2025-06-03T19:50:27.913669Z"}], "thread_id": "Thread-1", "execution_time": 0.031976938247680664, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.outpatient_surgery__encounter_grain", "compiled": true, "compiled_code": "\n\nwith encounter_date as (\n  select distinct old_encounter_id\n  , start_date as encounter_start_date\n  from tuva.claims_preprocessing.outpatient_surgery__generate_encounter_id\n)\n\n, detail_values as (\n    select stg.*\n    , cli.encounter_id\n    , cli.old_encounter_id\n      , cli.encounter_type\n    , cli.encounter_group\n    , d.encounter_start_date\n    , row_number() over (partition by cli.encounter_id\norder by stg.claim_type, stg.start_date) as encounter_row_number --institutional then professional\n    from tuva.claims_preprocessing.encounters__stg_medical_claim as stg\n    inner join tuva.claims_preprocessing.encounters__combined_claim_line_crosswalk as cli on stg.claim_id = cli.claim_id\n    and\n    stg.claim_line_number = cli.claim_line_number\n    and\n    cli.encounter_type = 'outpatient surgery'\n    and\n    cli.claim_line_attribution_number = 1\n    inner join encounter_date as d on cli.old_encounter_id = d.old_encounter_id\n)\n\n, patient as (\n    select\n        patient_data_source_id\n        , birth_date\n        , gender\n        , race\n    from tuva.claims_preprocessing.encounters__stg_eligibility\n    where patient_row_num = 1\n    )\n\n, total_amounts as (\n    select\n    encounter_id\n    , encounter_type\n    , encounter_group\n    , sum(paid_amount) as total_paid_amount\n    , sum(allowed_amount) as total_allowed_amount\n    , sum(charge_amount) as total_charge_amount\n    , count(distinct claim_id) as claim_count\n    , count(distinct(case when claim_type = 'institutional' then claim_id else null end)) as inst_claim_count\n    , count(distinct(case when claim_type = 'professional' then claim_id else null end)) as prof_claim_count\nfrom detail_values\ngroup by encounter_id\n, encounter_type\n, encounter_group\n)\n\n\n, highest_paid_diagnosis as (\n  select encounter_id\n  , diagnosis_code_1\n  , diagnosis_code_type\n  , row_number() over (partition by encounter_id\norder by sum(paid_amount) desc) as paid_order\n  , sum(paid_amount) as paid_amount\n  from detail_values\n  where diagnosis_code_1 is not null\n  group by diagnosis_code_1\n  , encounter_id\n  , diagnosis_code_type\n)\n\n, highest_paid_facility as (\n  select encounter_id\n  , facility_id\n  , row_number() over (partition by encounter_id\norder by sum(paid_amount) desc) as paid_order\n  , sum(paid_amount) as paid_amount\n  from detail_values\n  where facility_id is not null\n  group by\n   encounter_id\n  , facility_id\n)\n\n\n\n, service_category_flags as (\n    select\n        d.encounter_id\n       , max(case when scr.service_category_2 = 'lab' then 1 else 0 end) as lab_flag\n       , max(case when scr.service_category_2 = 'ambulance' then 1 else 0 end) as ambulance_flag\n       , max(case when scr.service_category_2 = 'durable medical equipment' then 1 else 0 end) as dme_flag\n       , max(case when scr.service_category_2 = 'observation' then 1 else 0 end) as observation_flag\n       , max(case when scr.service_category_2 = 'pharmacy' then 1\n              else 0 end) as pharmacy_flag\n    from detail_values as d\n    left outer join tuva.claims_preprocessing.service_category_grouper as scr on d.claim_id = scr.claim_id\n    and\n    scr.claim_line_number = d.claim_line_number\n    group by d.encounter_id\n)\n\n\nselect d.encounter_id\n, d.encounter_start_date\n, d.patient_data_source_id\n\n, tot.encounter_type\n, tot.encounter_group\n, datediff(\n        day,\n        birth_date,\n        d.encounter_start_date\n        ) / 365 as admit_age\n, e.gender\n, e.race\n, hp.diagnosis_code_type as primary_diagnosis_code_type\n, hp.diagnosis_code_1 as primary_diagnosis_code\n, coalesce(icd10cm.long_description, icd9cm.long_description) as primary_diagnosis_description\n, hf.facility_id as facility_id\n, b.provider_organization_name as facility_name\n, b.primary_specialty_description as facility_type\n, sc.lab_flag\n, sc.dme_flag\n, sc.ambulance_flag\n, sc.pharmacy_flag, sc.observation_flag\n, tot.total_paid_amount\n, tot.total_allowed_amount\n, tot.total_charge_amount\n, tot.claim_count\n, tot.inst_claim_count\n, tot.prof_claim_count\n, d.data_source\n, '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom detail_values as d\ninner join total_amounts as tot on d.encounter_id = tot.encounter_id\ninner join service_category_flags as sc on d.encounter_id = sc.encounter_id\nleft outer join highest_paid_diagnosis as hp on d.encounter_id = hp.encounter_id\nand\nhp.paid_order = 1\nleft outer join highest_paid_facility as hf on d.encounter_id = hf.encounter_id\nand\nhf.paid_order = 1\nleft outer join patient as e\n  on d.patient_data_source_id = e.patient_data_source_id\nleft outer join tuva.terminology.provider as b\n  on hf.facility_id = b.npi\nleft outer join tuva.terminology.icd_10_cm as icd10cm\n  on hp.diagnosis_code_1 = icd10cm.icd_10_cm\n  and hp.diagnosis_code_type = 'icd-10-cm'\nleft outer join tuva.terminology.icd_9_cm as icd9cm\n  on hp.diagnosis_code_1 = icd9cm.icd_9_cm\n  and hp.diagnosis_code_type = 'icd-9-cm'\nwhere d.encounter_row_number = 1", "relation_name": "tuva.claims_preprocessing.outpatient_surgery__encounter_grain", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:27.883425Z", "completed_at": "2025-06-03T19:50:27.910446Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:27.914097Z", "completed_at": "2025-06-03T19:50:27.914101Z"}], "thread_id": "Thread-2", "execution_time": 0.03263211250305176, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.outpatient_substance_use__encounter_grain", "compiled": true, "compiled_code": "\n\nwith encounter_date as (\n  select distinct old_encounter_id\n  , start_date as encounter_start_date\n  from tuva.claims_preprocessing.outpatient_substance_use__generate_encounter_id\n)\n\n, detail_values as (\n    select stg.*\n    , cli.encounter_id\n    , cli.old_encounter_id\n      , cli.encounter_type\n    , cli.encounter_group\n    , d.encounter_start_date\n    , row_number() over (partition by cli.encounter_id\norder by stg.claim_type, stg.start_date) as encounter_row_number --institutional then professional\n    from tuva.claims_preprocessing.encounters__stg_medical_claim as stg\n    inner join tuva.claims_preprocessing.encounters__combined_claim_line_crosswalk as cli on stg.claim_id = cli.claim_id\n    and\n    stg.claim_line_number = cli.claim_line_number\n    and\n    cli.encounter_type = 'outpatient substance use'\n    and\n    cli.claim_line_attribution_number = 1\n    inner join encounter_date as d on cli.old_encounter_id = d.old_encounter_id\n)\n\n, patient as (\n    select\n        patient_data_source_id\n        , birth_date\n        , gender\n        , race\n    from tuva.claims_preprocessing.encounters__stg_eligibility\n    where patient_row_num = 1\n    )\n\n, total_amounts as (\n    select\n    encounter_id\n    , encounter_type\n    , encounter_group\n    , sum(paid_amount) as total_paid_amount\n    , sum(allowed_amount) as total_allowed_amount\n    , sum(charge_amount) as total_charge_amount\n    , count(distinct claim_id) as claim_count\n    , count(distinct(case when claim_type = 'institutional' then claim_id else null end)) as inst_claim_count\n    , count(distinct(case when claim_type = 'professional' then claim_id else null end)) as prof_claim_count\nfrom detail_values\ngroup by encounter_id\n, encounter_type\n, encounter_group\n)\n\n\n, highest_paid_diagnosis as (\n  select encounter_id\n  , diagnosis_code_1\n  , diagnosis_code_type\n  , row_number() over (partition by encounter_id\norder by sum(paid_amount) desc) as paid_order\n  , sum(paid_amount) as paid_amount\n  from detail_values\n  where diagnosis_code_1 is not null\n  group by diagnosis_code_1\n  , encounter_id\n  , diagnosis_code_type\n)\n\n, highest_paid_facility as (\n  select encounter_id\n  , facility_id\n  , row_number() over (partition by encounter_id\norder by sum(paid_amount) desc) as paid_order\n  , sum(paid_amount) as paid_amount\n  from detail_values\n  where facility_id is not null\n  group by\n   encounter_id\n  , facility_id\n)\n\n\n\n, service_category_flags as (\n    select\n        d.encounter_id\n       , max(case when scr.service_category_2 = 'lab' then 1 else 0 end) as lab_flag\n       , max(case when scr.service_category_2 = 'ambulance' then 1 else 0 end) as ambulance_flag\n       , max(case when scr.service_category_2 = 'durable medical equipment' then 1 else 0 end) as dme_flag\n       , max(case when scr.service_category_2 = 'observation' then 1 else 0 end) as observation_flag\n       , max(case when scr.service_category_2 = 'pharmacy' then 1\n              else 0 end) as pharmacy_flag\n    from detail_values as d\n    left outer join tuva.claims_preprocessing.service_category_grouper as scr on d.claim_id = scr.claim_id\n    and\n    scr.claim_line_number = d.claim_line_number\n    group by d.encounter_id\n)\n\nselect d.encounter_id\n, d.encounter_start_date\n, d.patient_data_source_id\n\n, tot.encounter_type\n, tot.encounter_group\n, datediff(\n        day,\n        birth_date,\n        d.encounter_start_date\n        ) / 365 as admit_age\n, e.gender\n, e.race\n, hp.diagnosis_code_type as primary_diagnosis_code_type\n, hp.diagnosis_code_1 as primary_diagnosis_code\n, coalesce(icd10cm.long_description, icd9cm.long_description) as primary_diagnosis_description\n, hf.facility_id as facility_id\n, b.provider_organization_name as facility_name\n, b.primary_specialty_description as facility_type\n, sc.lab_flag\n, sc.dme_flag\n, sc.ambulance_flag\n, sc.pharmacy_flag, sc.observation_flag\n, tot.total_paid_amount\n, tot.total_allowed_amount\n, tot.total_charge_amount\n, tot.claim_count\n, tot.inst_claim_count\n, tot.prof_claim_count\n, d.data_source\n, '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom detail_values as d\ninner join total_amounts as tot on d.encounter_id = tot.encounter_id\ninner join service_category_flags as sc on d.encounter_id = sc.encounter_id\nleft outer join highest_paid_diagnosis as hp on d.encounter_id = hp.encounter_id\nand\nhp.paid_order = 1\nleft outer join highest_paid_facility as hf on d.encounter_id = hf.encounter_id\nand\nhf.paid_order = 1\nleft outer join patient as e\n  on d.patient_data_source_id = e.patient_data_source_id\nleft outer join tuva.terminology.provider as b\n  on hf.facility_id = b.npi\nleft outer join tuva.terminology.icd_10_cm as icd10cm\n  on hp.diagnosis_code_1 = icd10cm.icd_10_cm\n  and hp.diagnosis_code_type = 'icd-10-cm'\nleft outer join tuva.terminology.icd_9_cm as icd9cm\n  on hp.diagnosis_code_1 = icd9cm.icd_9_cm\n  and hp.diagnosis_code_type = 'icd-9-cm'\nwhere d.encounter_row_number = 1", "relation_name": "tuva.claims_preprocessing.outpatient_substance_use__encounter_grain", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:27.898071Z", "completed_at": "2025-06-03T19:50:27.914454Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:27.915230Z", "completed_at": "2025-06-03T19:50:27.915234Z"}], "thread_id": "Thread-3", "execution_time": 0.032311201095581055, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.urgent_care__encounter_grain", "compiled": true, "compiled_code": "\n\nwith encounter_date as (\n  select distinct old_encounter_id\n  , start_date as encounter_start_date\n  from tuva.claims_preprocessing.urgent_care__generate_encounter_id\n)\n\n, detail_values as (\n    select stg.*\n    , cli.encounter_id\n    , cli.old_encounter_id\n      , cli.encounter_type\n    , cli.encounter_group\n    , d.encounter_start_date\n    , row_number() over (partition by cli.encounter_id\norder by stg.claim_type, stg.start_date) as encounter_row_number --institutional then professional\n    from tuva.claims_preprocessing.encounters__stg_medical_claim as stg\n    inner join tuva.claims_preprocessing.encounters__combined_claim_line_crosswalk as cli on stg.claim_id = cli.claim_id\n    and\n    stg.claim_line_number = cli.claim_line_number\n    and\n    cli.encounter_type = 'urgent care'\n    and\n    cli.claim_line_attribution_number = 1\n    inner join encounter_date as d on cli.old_encounter_id = d.old_encounter_id\n)\n\n, patient as (\n    select\n        patient_data_source_id\n        , birth_date\n        , gender\n        , race\n    from tuva.claims_preprocessing.encounters__stg_eligibility\n    where patient_row_num = 1\n    )\n\n, total_amounts as (\n    select\n    encounter_id\n    , encounter_type\n    , encounter_group\n    , sum(paid_amount) as total_paid_amount\n    , sum(allowed_amount) as total_allowed_amount\n    , sum(charge_amount) as total_charge_amount\n    , count(distinct claim_id) as claim_count\n    , count(distinct(case when claim_type = 'institutional' then claim_id else null end)) as inst_claim_count\n    , count(distinct(case when claim_type = 'professional' then claim_id else null end)) as prof_claim_count\nfrom detail_values\ngroup by encounter_id\n, encounter_type\n, encounter_group\n)\n\n\n, highest_paid_diagnosis as (\n  select encounter_id\n  , diagnosis_code_1\n  , diagnosis_code_type\n  , row_number() over (partition by encounter_id\norder by sum(paid_amount) desc) as paid_order\n  , sum(paid_amount) as paid_amount\n  from detail_values\n  where diagnosis_code_1 is not null\n  group by diagnosis_code_1\n  , encounter_id\n  , diagnosis_code_type\n)\n\n, highest_paid_facility as (\n  select encounter_id\n  , facility_id\n  , row_number() over (partition by encounter_id\norder by sum(paid_amount) desc) as paid_order\n  , sum(paid_amount) as paid_amount\n  from detail_values\n  where facility_id is not null\n  group by\n   encounter_id\n  , facility_id\n)\n\n\n\n, service_category_flags as (\n    select\n        d.encounter_id\n       , max(case when scr.service_category_2 = 'lab' then 1 else 0 end) as lab_flag\n       , max(case when scr.service_category_2 = 'ambulance' then 1 else 0 end) as ambulance_flag\n       , max(case when scr.service_category_2 = 'durable medical equipment' then 1 else 0 end) as dme_flag\n       , max(case when scr.service_category_2 = 'observation' then 1 else 0 end) as observation_flag\n       , max(case when scr.service_category_2 = 'pharmacy' then 1\n              else 0 end) as pharmacy_flag\n    from detail_values as d\n    left outer join tuva.claims_preprocessing.service_category_grouper as scr on d.claim_id = scr.claim_id\n    and\n    scr.claim_line_number = d.claim_line_number\n    group by d.encounter_id\n)\n\n\nselect d.encounter_id\n, d.encounter_start_date\n, d.patient_data_source_id\n\n, tot.encounter_type\n, tot.encounter_group\n, datediff(\n        day,\n        birth_date,\n        d.encounter_start_date\n        ) / 365 as admit_age\n, e.gender\n, e.race\n, hp.diagnosis_code_type as primary_diagnosis_code_type\n, hp.diagnosis_code_1 as primary_diagnosis_code\n, coalesce(icd10cm.long_description, icd9cm.long_description) as primary_diagnosis_description\n, hf.facility_id as facility_id\n, b.provider_organization_name as facility_name\n, b.primary_specialty_description as facility_type\n, sc.lab_flag\n, sc.dme_flag\n, sc.ambulance_flag\n, sc.pharmacy_flag\n, sc.observation_flag\n, tot.total_paid_amount\n, tot.total_allowed_amount\n, tot.total_charge_amount\n, tot.claim_count\n, tot.inst_claim_count\n, tot.prof_claim_count\n, d.data_source\n, '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom detail_values as d\ninner join total_amounts as tot on d.encounter_id = tot.encounter_id\ninner join service_category_flags as sc on d.encounter_id = sc.encounter_id\nleft outer join highest_paid_diagnosis as hp on d.encounter_id = hp.encounter_id\nand\nhp.paid_order = 1\nleft outer join highest_paid_facility as hf on d.encounter_id = hf.encounter_id\nand\nhf.paid_order = 1\nleft outer join patient as e\n  on d.patient_data_source_id = e.patient_data_source_id\nleft outer join tuva.terminology.provider as b\n  on hf.facility_id = b.npi\nleft outer join tuva.terminology.icd_10_cm as icd10cm\n  on hp.diagnosis_code_1 = icd10cm.icd_10_cm\n  and hp.diagnosis_code_type = 'icd-10-cm'\nleft outer join tuva.terminology.icd_9_cm as icd9cm\n  on hp.diagnosis_code_1 = icd9cm.icd_9_cm\n  and hp.diagnosis_code_type = 'icd-9-cm'\nwhere d.encounter_row_number = 1", "relation_name": "tuva.claims_preprocessing.urgent_care__encounter_grain", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:27.905024Z", "completed_at": "2025-06-03T19:50:27.915592Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:27.916491Z", "completed_at": "2025-06-03T19:50:27.916494Z"}], "thread_id": "Thread-4", "execution_time": 0.018919944763183594, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.core__condition", "compiled": true, "compiled_code": "\n\n\nwith all_conditions as (\nselect *\n    from tuva.core._stg_claims_condition\n    union all\n    select *\n    from tuva.core._stg_clinical_condition\n\n\n)\n\n\n\n\nselect\n    all_conditions.condition_id\n  , all_conditions.person_id\n  , all_conditions.member_id\n  , all_conditions.patient_id\n  , all_conditions.encounter_id\n  , all_conditions.claim_id\n  , all_conditions.recorded_date\n  , all_conditions.onset_date\n  , all_conditions.resolved_date\n  , all_conditions.status\n  , all_conditions.condition_type\n  , all_conditions.source_code_type\n  , all_conditions.source_code\n  , all_conditions.source_description\n  , case\n        when all_conditions.normalized_code_type is not null then all_conditions.normalized_code_type\n        when icd10.icd_10_cm is not null then 'icd-10-cm'\n        when icd9.icd_9_cm is not null then 'icd-9-cm'\n        when snomed_ct.snomed_ct is not null then 'snomed-ct'\n        else null end as normalized_code_type\n  , coalesce(\n        all_conditions.normalized_code\n      , icd10.icd_10_cm\n      , icd9.icd_9_cm\n      , snomed_ct.snomed_ct) as normalized_code\n  , coalesce(\n        all_conditions.normalized_description\n      , icd10.short_description\n      , icd9.short_description\n      , snomed_ct.description) as normalized_description\n  , case when coalesce(all_conditions.normalized_code, all_conditions.normalized_description) is not null then 'manual'\n         when coalesce(icd10.icd_10_cm, icd9.icd_9_cm, snomed_ct.snomed_ct) is not null then 'automatic'\n         end as mapping_method\n  , all_conditions.condition_rank\n  , all_conditions.present_on_admit_code\n  , all_conditions.present_on_admit_description\n  , all_conditions.data_source\n  , all_conditions.tuva_last_run\nfrom\nall_conditions\nleft outer join tuva.terminology.icd_10_cm as icd10\n    on all_conditions.source_code_type = 'icd-10-cm'\n        and replace(all_conditions.source_code, '.', '') = icd10.icd_10_cm\nleft outer join tuva.terminology.icd_9_cm as icd9\n    on all_conditions.source_code_type = 'icd-9-cm'\n        and replace(all_conditions.source_code, '.', '') = icd9.icd_9_cm\nleft outer join tuva.terminology.snomed_ct as snomed_ct\n    on all_conditions.source_code_type = 'snomed-ct'\n        and all_conditions.source_code = snomed_ct.snomed_ct\n\n\n\n\n", "relation_name": "tuva.core.condition", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:27.917821Z", "completed_at": "2025-06-03T19:50:27.949310Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:27.949830Z", "completed_at": "2025-06-03T19:50:27.949837Z"}], "thread_id": "Thread-1", "execution_time": 0.034113168716430664, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.core__procedure", "compiled": true, "compiled_code": "\n\n\nwith all_procedures as (\nselect * from tuva.core._stg_claims_procedure\nunion all\nselect * from tuva.core._stg_clinical_procedure\n\n\n)\n\n\n\nselect\n    all_procedures.procedure_id\n  , all_procedures.person_id\n  , all_procedures.member_id\n  , all_procedures.patient_id\n  , all_procedures.encounter_id\n  , all_procedures.claim_id\n  , all_procedures.procedure_date\n  , all_procedures.source_code_type\n  , all_procedures.source_code\n  , all_procedures.source_description\n  , case when all_procedures.normalized_code_type is not null then all_procedures.normalized_code_type\n      when icd10.icd_10_pcs is not null then 'icd-10-pcs'\n      when icd9.icd_9_pcs is not null then 'icd-9-pcs'\n      when hcpcs.hcpcs is not null then 'hcpcs'\n      when snomed_ct.snomed_ct is not null then 'snomed-ct'\n      end as normalized_code_type\n  , coalesce(all_procedures.normalized_code\n      , icd10.icd_10_pcs\n      , icd9.icd_9_pcs\n      , hcpcs.hcpcs\n      , snomed_ct.snomed_ct) as normalized_code\n  , coalesce(all_procedures.normalized_description\n      , icd10.description\n      , icd9.short_description\n      , hcpcs.short_description\n      , snomed_ct.description) as normalized_description\n  , case when coalesce(all_procedures.normalized_code, all_procedures.normalized_description) is not null then 'manual'\n         when coalesce(icd10.icd_10_pcs, icd9.icd_9_pcs, hcpcs.hcpcs, snomed_ct.snomed_ct) is not null then 'automatic'\n         end as mapping_method\n  , all_procedures.modifier_1\n  , all_procedures.modifier_2\n  , all_procedures.modifier_3\n  , all_procedures.modifier_4\n  , all_procedures.modifier_5\n  , all_procedures.practitioner_id\n  , all_procedures.data_source\n  , all_procedures.tuva_last_run\nfrom all_procedures\nleft outer join tuva.terminology.icd_10_pcs as icd10\n    on all_procedures.source_code_type = 'icd-10-pcs'\n        and all_procedures.source_code = icd10.icd_10_pcs\nleft outer join tuva.terminology.icd_9_pcs as icd9\n    on all_procedures.source_code_type = 'icd-9-pcs'\n        and all_procedures.source_code = icd9.icd_9_pcs\nleft outer join tuva.terminology.hcpcs_level_2 as hcpcs\n    on all_procedures.source_code_type = 'hcpcs'\n        and all_procedures.source_code = hcpcs.hcpcs\nleft outer join tuva.terminology.snomed_ct as snomed_ct\n    on all_procedures.source_code_type = 'snomed-ct'\n        and all_procedures.source_code = snomed_ct.snomed_ct\n\n\n", "relation_name": "tuva.core.procedure", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:27.925802Z", "completed_at": "2025-06-03T19:50:27.950183Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:27.958961Z", "completed_at": "2025-06-03T19:50:27.958965Z"}], "thread_id": "Thread-2", "execution_time": 0.042994022369384766, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.core__stg_claims_medical_claim", "compiled": true, "compiled_code": "\n\n-- *************************************************\n-- This dbt model creates the medical_claim table\n-- in core. It adds these 4 fields to the input layer\n-- medical claim table:\n--      encounter_id\n--      service_category_1\n--      service_category_2\n-- *************************************************\n\nwith all_encounters as (\n    select claim_id\n, claim_line_number\n, encounter_id\n, encounter_type\n, encounter_group\n    from tuva.claims_preprocessing.encounters__combined_claim_line_crosswalk\n    where claim_line_attribution_number = 1\n\n    union all\n\n    select\n  claim_id\n, claim_line_number\n, encounter_id\n, encounter_type\n, encounter_group\n    from tuva.claims_preprocessing.encounters__orphaned_claims\n)\n\nselect\n    med.claim_id || '-' || med.claim_line_number || '-' || med.data_source as medical_claim_id\n    , cast(med.claim_id as TEXT) as claim_id\n    , cast(med.claim_line_number as integer) as claim_line_number\n    , cast(x.encounter_id as TEXT) as encounter_id\n    , cast(x.encounter_type as TEXT) as encounter_type\n    , cast(x.encounter_group as TEXT) as encounter_group\n    , cast(med.claim_type as TEXT) as claim_type\n    , cast(med.person_id as TEXT) as person_id\n    , cast(med.member_id as TEXT) as member_id\n    , cast(med.payer as TEXT) as payer\n    , med.plan\n    , try_cast( med.claim_start_date as date ) as claim_start_date\n    , try_cast( med.claim_end_date as date ) as claim_end_date\n    , try_cast( med.claim_line_start_date as date ) as claim_line_start_date\n    , try_cast( med.claim_line_end_date as date ) as claim_line_end_date\n    , try_cast( med.admission_date as date ) as admission_date\n    , try_cast( med.discharge_date as date ) as discharge_date\n    , cast(srv_group.service_category_1 as TEXT) as service_category_1\n    , cast(srv_group.service_category_2 as TEXT) as service_category_2\n    , cast(srv_group.service_category_3 as TEXT) as service_category_3\n    , cast(med.admit_source_code as TEXT) as admit_source_code\n    , cast(med.admit_source_description as TEXT) as admit_source_description\n    , cast(med.admit_type_code as TEXT) as admit_type_code\n    , cast(med.admit_type_description as TEXT) as admit_type_description\n    , cast(med.discharge_disposition_code as TEXT) as discharge_disposition_code\n    , cast(med.discharge_disposition_description as TEXT) as discharge_disposition_description\n    , cast(med.place_of_service_code as TEXT) as place_of_service_code\n    , cast(med.place_of_service_description as TEXT) as place_of_service_description\n    , cast(med.bill_type_code as TEXT) as bill_type_code\n    , cast(med.bill_type_description as TEXT) as bill_type_description\n    , cast(med.drg_code_type as TEXT) as drg_code_type\n    , cast(med.drg_code as TEXT) as drg_code\n    , cast(med.drg_description as TEXT) as drg_description\n    , cast(med.revenue_center_code as TEXT) as revenue_center_code\n    , cast(med.revenue_center_description as TEXT) as revenue_center_description\n    , cast(med.service_unit_quantity as numeric(28,6)) as service_unit_quantity\n    , cast(med.hcpcs_code as TEXT) as hcpcs_code\n    , cast(med.hcpcs_modifier_1 as TEXT) as hcpcs_modifier_1\n    , cast(med.hcpcs_modifier_2 as TEXT) as hcpcs_modifier_2\n    , cast(med.hcpcs_modifier_3 as TEXT) as hcpcs_modifier_3\n    , cast(med.hcpcs_modifier_4 as TEXT) as hcpcs_modifier_4\n    , cast(med.hcpcs_modifier_5 as TEXT) as hcpcs_modifier_5\n    , cast(med.rendering_id as TEXT) as rendering_id\n    , cast(med.rendering_tin as TEXT) as rendering_tin\n    , cast(med.rendering_name as TEXT) as rendering_name\n    , cast(med.billing_id as TEXT) as billing_id\n    , cast(med.billing_tin as TEXT) as billing_tin\n    , cast(med.billing_name as TEXT) as billing_name\n    , cast(med.facility_id as TEXT) as facility_id\n    , cast(med.facility_name as TEXT) as facility_name\n    , try_cast( med.paid_date as date ) as paid_date\n    , cast(med.paid_amount as numeric(28,6)) as paid_amount\n    , cast(med.allowed_amount as numeric(28,6)) as allowed_amount\n    , cast(med.charge_amount as numeric(28,6)) as charge_amount\n    , cast(med.coinsurance_amount as numeric(28,6)) as coinsurance_amount\n    , cast(med.copayment_amount as numeric(28,6)) as copayment_amount\n    , cast(med.deductible_amount as numeric(28,6)) as deductible_amount\n    , cast(med.total_cost_amount as numeric(28,6)) as total_cost_amount\n    , cast(med.in_network_flag as int) as in_network_flag\n    , cast(\n    case\n        when enroll.claim_id is not null then 1\n            else 0\n    end as int) as enrollment_flag\n    , enroll.member_month_key\n    , cast(med.data_source as TEXT) as data_source\n    , cast('2025-06-03 19:49:40.396647+00:00' as timestamp) as tuva_last_run\nfrom tuva.claims_preprocessing.normalized_input_medical_claim as med\ninner join tuva.claims_preprocessing.service_category_grouper as srv_group\n  on med.claim_id = srv_group.claim_id\n  and med.claim_line_number = srv_group.claim_line_number\n  and srv_group.duplicate_row_number = 1\ninner join all_encounters as x\n  on med.claim_id = x.claim_id\n  and med.claim_line_number = x.claim_line_number\nleft outer join tuva.claims_preprocessing.flag_claims_with_enrollment as enroll\n  on med.claim_id = enroll.claim_id\n  and med.claim_line_number = enroll.claim_line_number\n  and med.person_id = enroll.person_id\n  and med.payer = enroll.payer\n  and med.plan = enroll.plan\n  and med.data_source = enroll.data_source", "relation_name": "tuva.core._stg_claims_medical_claim", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:27.942435Z", "completed_at": "2025-06-03T19:50:27.958436Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:27.959477Z", "completed_at": "2025-06-03T19:50:27.959481Z"}], "thread_id": "Thread-3", "execution_time": 0.04230499267578125, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.orphaned_claim__encounter_grain", "compiled": true, "compiled_code": "\n\nwith encounter_date as (\n    select\n        cli.encounter_id\n      , min(stg.start_date) as encounter_start_date\n      , max(stg.start_date) as encounter_end_date\n    from tuva.claims_preprocessing.encounters__stg_medical_claim as stg\n    inner join tuva.claims_preprocessing.encounters__orphaned_claims as cli\n      on stg.claim_id = cli.claim_id\n      and stg.claim_line_number = cli.claim_line_number\n    group by\n        cli.encounter_id\n)\n\n, detail_values as (\n    select stg.*\n    , cli.encounter_id\n    , cli.encounter_type\n    , cli.encounter_group\n    , d.encounter_start_date\n    , d.encounter_end_date\n    , row_number() over (partition by cli.encounter_id\norder by stg.claim_type, stg.start_date) as encounter_row_number --institutional then professional\n    from tuva.claims_preprocessing.encounters__stg_medical_claim as stg\n    inner join tuva.claims_preprocessing.encounters__orphaned_claims as cli on stg.claim_id = cli.claim_id\n    and\n    stg.claim_line_number = cli.claim_line_number\n    inner join encounter_date as d on cli.encounter_id = d.encounter_id\n)\n\n, patient as (\n    select\n        patient_data_source_id\n        , birth_date\n        , gender\n        , race\n    from tuva.claims_preprocessing.encounters__stg_eligibility\n    where patient_row_num = 1\n    )\n\n, total_amounts as (\n    select\n    encounter_id\n    , encounter_type\n    , encounter_group\n    , sum(paid_amount) as total_paid_amount\n    , sum(allowed_amount) as total_allowed_amount\n    , sum(charge_amount) as total_charge_amount\n    , count(distinct claim_id) as claim_count\n    , count(distinct(case when claim_type = 'institutional' then claim_id else null end)) as inst_claim_count\n    , count(distinct(case when claim_type = 'professional' then claim_id else null end)) as prof_claim_count\nfrom detail_values\ngroup by encounter_id\n, encounter_type\n, encounter_group\n)\n\n\n, highest_paid_diagnosis as (\n  select encounter_id\n  , diagnosis_code_1\n  , diagnosis_code_type\n  , row_number() over (partition by encounter_id\norder by sum(paid_amount) desc) as paid_order\n  , sum(paid_amount) as paid_amount\n  from detail_values\n  where diagnosis_code_1 is not null\n  group by diagnosis_code_1\n  , encounter_id\n  , diagnosis_code_type\n)\n\n, highest_paid_facility as (\n  select encounter_id\n  , facility_id\n  , row_number() over (partition by encounter_id\norder by sum(paid_amount) desc) as paid_order\n  , sum(paid_amount) as paid_amount\n  from detail_values\n  where facility_id is not null\n  group by\n   encounter_id\n  , facility_id\n)\n\n, highest_paid_pos as (\n  select encounter_id\n  , place_of_service_code\n  , place_of_service_description\n  , row_number() over (partition by encounter_id\norder by sum(paid_amount) desc) as paid_order\n  , sum(paid_amount) as paid_amount\n  from detail_values\n  where place_of_service_code is not null\n  group by\n   encounter_id\n  , place_of_service_code\n  , place_of_service_description\n)\n\n\n\n, service_category_flags as (\n    select\n        d.encounter_id\n       , max(case when scr.service_category_2 = 'lab' then 1 else 0 end) as lab_flag\n       , max(case when scr.service_category_2 = 'ambulance' then 1 else 0 end) as ambulance_flag\n       , max(case when scr.service_category_2 = 'durable medical equipment' then 1 else 0 end) as dme_flag\n       , max(case when scr.service_category_2 = 'observation' then 1 else 0 end) as observation_flag\n       , max(case when scr.service_category_2 = 'pharmacy' then 1\n              else 0 end) as pharmacy_flag\n    from detail_values as d\n    left outer join tuva.claims_preprocessing.service_category_grouper as scr on d.claim_id = scr.claim_id\n    and\n    scr.claim_line_number = d.claim_line_number\n    group by d.encounter_id\n)\n\nselect d.encounter_id\n, d.encounter_start_date\n, d.encounter_end_date\n, d.patient_data_source_id\n, tot.encounter_type\n, tot.encounter_group\n, datediff(\n        day,\n        birth_date,\n        d.encounter_start_date\n        ) / 365 as admit_age\n, e.gender\n, e.race\n, hp.diagnosis_code_type as primary_diagnosis_code_type\n, hp.diagnosis_code_1 as primary_diagnosis_code\n, coalesce(icd10cm.long_description, icd9cm.long_description) as primary_diagnosis_description\n, hf.facility_id as facility_id\n, b.provider_organization_name as facility_name\n, b.primary_specialty_description as facility_type\n, sc.lab_flag\n, sc.dme_flag\n, sc.ambulance_flag\n, sc.pharmacy_flag\n, pos.place_of_service_code\n, pos.place_of_service_description\n, tot.total_paid_amount\n, tot.total_allowed_amount\n, tot.total_charge_amount\n, tot.claim_count\n, tot.inst_claim_count\n, tot.prof_claim_count\n, d.data_source\n, '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom detail_values as d\ninner join total_amounts as tot on d.encounter_id = tot.encounter_id\ninner join service_category_flags as sc on d.encounter_id = sc.encounter_id\nleft outer join highest_paid_diagnosis as hp on d.encounter_id = hp.encounter_id\nand\nhp.paid_order = 1\nleft outer join highest_paid_facility as hf on d.encounter_id = hf.encounter_id\nand\nhf.paid_order = 1\nleft outer join highest_paid_pos as pos on d.encounter_id = pos.encounter_id\nand\npos.paid_order = 1\nleft outer join patient as e\n  on d.patient_data_source_id = e.patient_data_source_id\nleft outer join tuva.terminology.provider as b\n  on hf.facility_id = b.npi\nleft outer join tuva.terminology.icd_10_cm as icd10cm\n  on hp.diagnosis_code_1 = icd10cm.icd_10_cm\n  and hp.diagnosis_code_type = 'icd-10-cm'\nleft outer join tuva.terminology.icd_9_cm as icd9cm\n  on hp.diagnosis_code_1 = icd9cm.icd_9_cm\n  and hp.diagnosis_code_type = 'icd-9-cm'\nwhere d.encounter_row_number = 1", "relation_name": "tuva.claims_preprocessing.orphaned_claim__encounter_grain", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:27.950406Z", "completed_at": "2025-06-03T19:50:27.960360Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:27.961269Z", "completed_at": "2025-06-03T19:50:27.961273Z"}], "thread_id": "Thread-4", "execution_time": 0.019212007522583008, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.office_visit__encounter_grain", "compiled": true, "compiled_code": "\n\n\n\n with patient as (\n    select\n        patient_data_source_id\n        , birth_date\n        , gender\n        , race\n    from tuva.claims_preprocessing.encounters__stg_eligibility\n    where patient_row_num = 1\n    )\n\n, total_amounts as (\n    select\n    encounter_id\n    , encounter_type\n    , encounter_group\n    , sum(paid_amount) as total_paid_amount\n    , sum(allowed_amount) as total_allowed_amount\n    , sum(charge_amount) as total_charge_amount\n    , count(distinct claim_id) as claim_count\n    , count(distinct(case when claim_type = 'institutional' then claim_id else null end)) as inst_claim_count\n    , count(distinct(case when claim_type = 'professional' then claim_id else null end)) as prof_claim_count\nfrom tuva.claims_preprocessing.office_visits__int_detail_values\ngroup by encounter_id\n, encounter_type\n, encounter_group\n)\n\n\n, highest_paid_diagnosis as (\n  select encounter_id\n  , diagnosis_code_1\n  , diagnosis_code_type\n  , row_number() over (partition by encounter_id\norder by sum(paid_amount) desc) as paid_order\n  , sum(paid_amount) as paid_amount\n  from tuva.claims_preprocessing.office_visits__int_detail_values\n  where diagnosis_code_1 is not null\n  group by diagnosis_code_1\n  , encounter_id\n  , diagnosis_code_type\n)\n\n, highest_paid_facility as (\n  select encounter_id\n  , facility_id\n  , row_number() over (partition by encounter_id\norder by sum(paid_amount) desc) as paid_order\n  , sum(paid_amount) as paid_amount\n  from tuva.claims_preprocessing.office_visits__int_detail_values\n  where facility_id is not null\n  group by\n   encounter_id\n  , facility_id\n)\n\n, highest_paid_physician as (\n  select encounter_id\n  , billing_id\n  , row_number() over (partition by encounter_id\norder by sum(paid_amount) desc) as paid_order\n  , sum(paid_amount) as paid_amount\n  from tuva.claims_preprocessing.office_visits__int_detail_values\n  where billing_id is not null\n  group by\n   encounter_id\n  , billing_id\n)\n\n, highest_paid_hcpc as (\n  select encounter_id\n  , hcpcs_code\n  , ccs_category\n  , ccs_category_description\n  , row_number() over (partition by encounter_id\norder by sum(paid_amount) desc) as paid_order\n  , sum(paid_amount) as paid_amount\n  from tuva.claims_preprocessing.office_visits__int_detail_values\n  where hcpcs_code is not null\n  group by\n   encounter_id\n  , hcpcs_code\n  , ccs_category\n  , ccs_category_description\n)\n\n\n\n, service_category_flags as (\n    select\n        d.encounter_id\n       , max(case when scr.service_category_2 = 'lab' then 1 else 0 end) as lab_flag\n       , max(case when scr.service_category_2 = 'ambulance' then 1 else 0 end) as ambulance_flag\n       , max(case when scr.service_category_2 = 'durable medical equipment' then 1 else 0 end) as dme_flag\n       , max(case when scr.service_category_2 = 'observation' then 1 else 0 end) as observation_flag\n       , max(case when scr.service_category_2 = 'pharmacy' then 1\n              else 0 end) as pharmacy_flag\n    from tuva.claims_preprocessing.office_visits__int_detail_values as d\n    left outer join tuva.claims_preprocessing.service_category_grouper as scr on d.claim_id = scr.claim_id\n    and\n    scr.claim_line_number = d.claim_line_number\n    group by d.encounter_id\n)\n\n\nselect d.encounter_id\n, d.encounter_start_date\n, d.patient_data_source_id\n, tot.encounter_type\n, tot.encounter_group\n, datediff(\n        day,\n        birth_date,\n        d.encounter_start_date\n        ) / 365 as admit_age\n, e.gender\n, e.race\n, hp.diagnosis_code_type as primary_diagnosis_code_type\n, hp.diagnosis_code_1 as primary_diagnosis_code\n, coalesce(icd10cm.long_description, icd9cm.long_description) as primary_diagnosis_description\n, hf.facility_id as facility_id\n, b.provider_organization_name as facility_name\n, phy.billing_id\n, b2.provider_first_name || ' ' || b2.provider_last_name as provider_name\n, b2.primary_specialty_description as provider_specialty\n, sc.lab_flag\n, sc.dme_flag\n, sc.ambulance_flag\n, sc.pharmacy_flag\n, hcpc.hcpcs_code\n, hcpc.ccs_category\n, hcpc.ccs_category_description\n, tot.total_paid_amount\n, tot.total_allowed_amount\n, tot.total_charge_amount\n, tot.claim_count\n, tot.inst_claim_count\n, tot.prof_claim_count\n, d.data_source\n, '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom tuva.claims_preprocessing.office_visits__int_detail_values as d\ninner join total_amounts as tot on d.encounter_id = tot.encounter_id\ninner join service_category_flags as sc on d.encounter_id = sc.encounter_id\nleft outer join highest_paid_diagnosis as hp on d.encounter_id = hp.encounter_id\nand\nhp.paid_order = 1\nleft outer join highest_paid_facility as hf on d.encounter_id = hf.encounter_id\nand\nhf.paid_order = 1\nleft outer join highest_paid_physician as phy on d.encounter_id = phy.encounter_id\nand\nphy.paid_order = 1\nleft outer join highest_paid_hcpc as hcpc on d.encounter_id = hcpc.encounter_id\nand\nhcpc.paid_order = 1\nleft outer join patient as e\n  on d.patient_data_source_id = e.patient_data_source_id\nleft outer join tuva.terminology.provider as b\n  on hf.facility_id = b.npi\nleft outer join tuva.terminology.provider as b2\n  on phy.billing_id = b2.npi\nleft outer join tuva.terminology.icd_10_cm as icd10cm\n  on hp.diagnosis_code_1 = icd10cm.icd_10_cm\n  and hp.diagnosis_code_type = 'icd-10-cm'\nleft outer join tuva.terminology.icd_9_cm as icd9cm\n  on hp.diagnosis_code_1 = icd9cm.icd_9_cm\n  and hp.diagnosis_code_type = 'icd-9-cm'\nwhere d.encounter_row_number = 1", "relation_name": "tuva.claims_preprocessing.office_visit__encounter_grain", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:28.009483Z", "completed_at": "2025-06-03T19:50:28.024105Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:28.024636Z", "completed_at": "2025-06-03T19:50:28.024643Z"}], "thread_id": "Thread-1", "execution_time": 0.017200946807861328, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.not_null_core__condition_person_id.7f81399829", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect person_id\nfrom tuva.core.condition\nwhere person_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:28.015378Z", "completed_at": "2025-06-03T19:50:28.025001Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:28.031699Z", "completed_at": "2025-06-03T19:50:28.031703Z"}], "thread_id": "Thread-2", "execution_time": 0.02283620834350586, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.unique_core__condition_condition_id.ef1067e2f0", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    condition_id as unique_field,\n    count(*) as n_records\n\nfrom tuva.core.condition\nwhere condition_id is not null\ngroup by condition_id\nhaving count(*) > 1\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:28.162271Z", "completed_at": "2025-06-03T19:50:28.176921Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:28.177464Z", "completed_at": "2025-06-03T19:50:28.177470Z"}], "thread_id": "Thread-1", "execution_time": 0.017110824584960938, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.not_null_core__procedure_person_id.6727e33118", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect person_id\nfrom tuva.core.procedure\nwhere person_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:28.167565Z", "completed_at": "2025-06-03T19:50:28.186758Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:28.187504Z", "completed_at": "2025-06-03T19:50:28.187509Z"}], "thread_id": "Thread-3", "execution_time": 0.0257570743560791, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.unique_core__procedure_procedure_id.feb1b6b4d5", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    procedure_id as unique_field,\n    count(*) as n_records\n\nfrom tuva.core.procedure\nwhere procedure_id is not null\ngroup by procedure_id\nhaving count(*) > 1\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:28.171929Z", "completed_at": "2025-06-03T19:50:28.187248Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:28.188167Z", "completed_at": "2025-06-03T19:50:28.188170Z"}], "thread_id": "Thread-2", "execution_time": 0.026179075241088867, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.core__medical_claim", "compiled": true, "compiled_code": "\n\nselect * from tuva.core._stg_claims_medical_claim", "relation_name": "tuva.core.medical_claim", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:28.177934Z", "completed_at": "2025-06-03T19:50:28.188506Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:28.189403Z", "completed_at": "2025-06-03T19:50:28.189406Z"}], "thread_id": "Thread-4", "execution_time": 0.022136926651000977, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.core__stg_claims_location", "compiled": true, "compiled_code": "\n\nwith all_providers_in_claims_dataset as (\nselect distinct facility_id as npi\nfrom tuva.core._stg_claims_medical_claim\n\n\nunion distinct\n\n\nselect distinct rendering_id as npi\nfrom tuva.core._stg_claims_medical_claim\n\n\nunion distinct\n\n\nselect distinct billing_id as npi\nfrom tuva.core._stg_claims_medical_claim\n\n\nunion distinct\n\n\nselect distinct prescribing_provider_id as npi\nfrom tuva.core._stg_claims_pharmacy_claim\n\n\nunion distinct\n\n\nselect distinct dispensing_provider_id as npi\nfrom tuva.core._stg_claims_pharmacy_claim\n)\n\n\n, provider as (\nselect aa.*\nfrom tuva.terminology.provider as aa\ninner join all_providers_in_claims_dataset as bb\non aa.npi = bb.npi\nwhere lower(aa.entity_type_description) = 'organization'\n)\n\n\n\nselect\n    cast(npi as TEXT) as location_id\n    , cast(npi as TEXT) as npi\n    , cast(provider_organization_name as TEXT) as name\n    , cast(null as TEXT) as facility_type\n    , cast(parent_organization_name as TEXT) as parent_organization\n    , cast(practice_address_line_1 as TEXT) as address\n    , cast(practice_city as TEXT) as city\n    , cast(practice_state as TEXT) as state\n    , cast(practice_zip_code as TEXT) as zip_code\n    , cast(null as float) as latitude\n    , cast(null as float) as longitude\n    , cast(null as TEXT) as data_source\n    , cast('2025-06-03 19:49:40.396647+00:00' as timestamp) as tuva_last_run\nfrom provider", "relation_name": "tuva.core._stg_claims_location", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:28.190168Z", "completed_at": "2025-06-03T19:50:28.209010Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:28.233049Z", "completed_at": "2025-06-03T19:50:28.233056Z"}], "thread_id": "Thread-1", "execution_time": 0.045214176177978516, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.core__stg_claims_practitioner", "compiled": true, "compiled_code": "\n\n-- *************************************************\n-- This dbt model creates the provider table \n-- in core. It includes data about all providers\n-- present in the raw claims dataset.\n-- *************************************************\n\n\nwith all_providers_in_claims_dataset as (\nselect distinct facility_id as npi\nfrom tuva.core._stg_claims_medical_claim\n\n\nunion distinct\n\n\nselect distinct rendering_id as npi\nfrom tuva.core._stg_claims_medical_claim\n\n\nunion distinct\n\n\nselect distinct billing_id as npi\nfrom tuva.core._stg_claims_medical_claim\n\n\nunion distinct\n\n\nselect distinct prescribing_provider_id as npi\nfrom tuva.core._stg_claims_pharmacy_claim\n\n\nunion distinct\n\n\nselect distinct dispensing_provider_id as npi\nfrom tuva.core._stg_claims_pharmacy_claim\n)\n\n\n, provider as (\nselect aa.*\nfrom tuva.terminology.provider as aa\ninner join all_providers_in_claims_dataset as bb\non aa.npi = bb.npi\nwhere lower(aa.entity_type_description) = 'individual'\n)\n\n\n\nselect\n    cast(npi as TEXT) as practitioner_id\n    , cast(npi as TEXT) as npi\n    , cast(provider_first_name as TEXT) as provider_first_name\n    , cast(provider_last_name as TEXT) as provider_last_name\n    , cast(parent_organization_name as TEXT) as practice_affiliation\n    , cast(primary_specialty_description as TEXT) as specialty\n    , cast(null as TEXT) as sub_specialty\n    , cast(null as TEXT) as data_source\n    , cast('2025-06-03 19:49:40.396647+00:00' as timestamp) as tuva_last_run\nfrom provider", "relation_name": "tuva.core._stg_claims_practitioner", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:28.221398Z", "completed_at": "2025-06-03T19:50:28.253313Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:28.254368Z", "completed_at": "2025-06-03T19:50:28.254375Z"}], "thread_id": "Thread-2", "execution_time": 0.05444002151489258, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.ccsr__long_condition_category", "compiled": true, "compiled_code": "\n\nwith  __dbt__cte__ccsr__stg_core__condition as (\n\n\nselect\n    encounter_id\n    , claim_id\n    , person_id\n    , normalized_code\n    , condition_rank\n    , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom tuva.core.condition\nwhere normalized_code_type = 'icd-10-cm'\n), ccsr__dx_vertical_pivot as (\n\n    select * from tuva.ccsr.dx_vertical_pivot\n\n)\n\n, condition as (\n\n    select * from __dbt__cte__ccsr__stg_core__condition\n\n)\n\n, dxccsr_body_systems as (\n\n    select * from tuva.ccsr._value_set_dxccsr_v2023_1_body_systems\n\n)\n\nselect\n      condition.encounter_id\n    , condition.claim_id\n    , condition.person_id\n    , condition.normalized_code\n    , ccsr__dx_vertical_pivot.code_description\n    , condition.condition_rank\n    , ccsr__dx_vertical_pivot.ccsr_parent_category\n    , dxccsr_body_systems.body_system\n    , dxccsr_body_systems.parent_category_description\n    , ccsr__dx_vertical_pivot.ccsr_category\n    , ccsr__dx_vertical_pivot.ccsr_category_description\n    , ccsr__dx_vertical_pivot.ccsr_category_rank\n    , ccsr__dx_vertical_pivot.is_ip_default_category\n    , ccsr__dx_vertical_pivot.is_op_default_category\n    , '2023.1' as dxccsr_version\n    , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom condition\nleft outer join ccsr__dx_vertical_pivot\n    on condition.normalized_code = ccsr__dx_vertical_pivot.code\nleft outer join dxccsr_body_systems on ccsr__dx_vertical_pivot.ccsr_parent_category = dxccsr_body_systems.ccsr_parent_category", "relation_name": "tuva.ccsr.long_condition_category", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:28.233795Z", "completed_at": "2025-06-03T19:50:28.254778Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:28.272844Z", "completed_at": "2025-06-03T19:50:28.272852Z"}], "thread_id": "Thread-4", "execution_time": 0.07053899765014648, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.hcc_suspecting__int_prep_conditions", "compiled": true, "compiled_code": "\n\nwith  __dbt__cte___stg_condition as (\n\nselect\n      claim_id\n    , person_id\n    , recorded_date\n    , condition_type\n    , lower(normalized_code_type) as code_type\n    , normalized_code as code\n    , data_source\nfrom tuva.core.condition\n), conditions as (\n\n    select\n          person_id\n        , recorded_date\n        , condition_type\n        , code_type\n        , code\n        , data_source\n    from __dbt__cte___stg_condition\n\n)\n\n/*\n    Default mapping guidance: Most map groups terminate with an unconditional\n    rule \u2013 a rule whose predicate is \u201cTRUE\u201d or, equivalently, \u201cOTHERWISE TRUE\u201d.\n    This rule is considered a \u201cdefault\u201d because it should be applied if\n    nothing further is known about the patient\u2019s condition.\n*/\n, seed_snomed_icd_10_map as (\n\n    select\n          referenced_component_id as snomed_code\n        , map_target as icd_10_code\n    from tuva.terminology.snomed_icd_10_map\n    where lower(map_rule) in ('true', 'otherwise true')\n    and map_group = '1'\n\n)\n\n, snomed_conditions as (\n\n    select\n          person_id\n        , recorded_date\n        , condition_type\n        , 'icd-10-cm' as code_type\n        , icd_10_code as code\n        , data_source\n    from conditions\n         inner join seed_snomed_icd_10_map\n         on conditions.code = seed_snomed_icd_10_map.snomed_code\n    where conditions.code_type = 'snomed-ct'\n\n)\n\n, other_conditions as (\n\n    select\n          person_id\n        , recorded_date\n        , condition_type\n        , code_type\n        , code\n        , data_source\n    from conditions\n    where conditions.code_type <> 'snomed-ct'\n\n)\n\n, union_conditions as (\n\n    select * from snomed_conditions\n    union all\n    select * from other_conditions\n\n)\n\n, add_data_types as (\n\n    select\n          cast(person_id as TEXT) as person_id\n        , cast(recorded_date as date) as recorded_date\n        , cast(condition_type as TEXT) as condition_type\n        , cast(code_type as TEXT) as code_type\n        , cast(code as TEXT) as code\n        , cast(data_source as TEXT) as data_source\n    from union_conditions\n\n)\n\nselect\n      person_id\n    , recorded_date\n    , condition_type\n    , code_type\n    , code\n    , data_source\n    , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom add_data_types", "relation_name": "tuva.hcc_suspecting._int_prep_conditions", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:28.255031Z", "completed_at": "2025-06-03T19:50:28.274199Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:28.274980Z", "completed_at": "2025-06-03T19:50:28.274985Z"}], "thread_id": "Thread-1", "execution_time": 0.02217388153076172, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.quality_measures__int_cqm438_denominator_criteria3", "compiled": true, "compiled_code": "\n\nwith  __dbt__cte___stg_condition as (\n\nselect\n      person_id\n    , claim_id\n    , encounter_id\n    , recorded_date\n    , source_code_type\n    , source_code\n    , normalized_code_type\n    , normalized_code\n    , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom tuva.core.condition\n), diabetes_codes as (\n\n    select\n          code\n        , code_system\n        , concept_name\n    from tuva.quality_measures._value_set_codes\n    where lower(concept_name) in (\n              'diabetes'\n        )\n\n)\n\n, conditions as (\n\n    select\n          person_id\n        , claim_id\n        , encounter_id\n        , recorded_date\n        , source_code\n        , source_code_type\n        , normalized_code\n        , normalized_code_type\n    from __dbt__cte___stg_condition\n\n)\n\n, diabetes_conditions as (\n\n    select\n          conditions.person_id\n        , conditions.recorded_date as evidence_date\n    from conditions\n    inner join diabetes_codes\n        on coalesce(conditions.normalized_code_type, conditions.source_code_type) = diabetes_codes.code_system\n            and coalesce(conditions.normalized_code, conditions.source_code) = diabetes_codes.code\n\n)\n\n, patients_with_diabetes as (\n\n    select\n        distinct\n          person_id\n        , performance_period_begin\n        , performance_period_end\n        , measure_id\n        , measure_name\n        , measure_version\n    from diabetes_conditions\n    inner join tuva.quality_measures._int_cqm438__performance_period as pp\n    on evidence_date <= pp.performance_period_end\n\n)\n\n, add_data_types as (\n\n    select\n          cast(person_id as TEXT) as person_id\n        , cast(performance_period_begin as date) as performance_period_begin\n        , cast(performance_period_end as date) as performance_period_end\n        , cast(measure_id as TEXT) as measure_id\n        , cast(measure_name as TEXT) as measure_name\n        , cast(measure_version as TEXT) as measure_version\n    from patients_with_diabetes\n\n)\n\nselect\n      person_id\n    , performance_period_begin\n    , performance_period_end\n    , measure_id\n    , measure_name\n    , measure_version\n    , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom add_data_types", "relation_name": "tuva.quality_measures._int_cqm438_denominator_criteria3", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:28.275356Z", "completed_at": "2025-06-03T19:50:28.288618Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:28.294207Z", "completed_at": "2025-06-03T19:50:28.294215Z"}], "thread_id": "Thread-2", "execution_time": 0.020731210708618164, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.not_null_quality_measures__stg_core__condition_person_id.41bf288421", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nwith __dbt__cte___stg_condition as (\n\nselect\n      person_id\n    , claim_id\n    , encounter_id\n    , recorded_date\n    , source_code_type\n    , source_code\n    , normalized_code_type\n    , normalized_code\n    , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom tuva.core.condition\n) select person_id\nfrom __dbt__cte___stg_condition\nwhere person_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:28.282341Z", "completed_at": "2025-06-03T19:50:28.301530Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:28.308139Z", "completed_at": "2025-06-03T19:50:28.308147Z"}], "thread_id": "Thread-4", "execution_time": 0.03349709510803223, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.chronic_conditions__tuva_chronic_conditions_long", "compiled": true, "compiled_code": "\n\nwith  __dbt__cte__tuva_chronic_conditions__stg_core__condition as (\n\n\nselect\n      person_id\n    , normalized_code\n    , recorded_date\n    , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom tuva.core.condition\n), all_conditions as (\nselect\n  person_id\n  , normalized_code\n  , recorded_date\n    from __dbt__cte__tuva_chronic_conditions__stg_core__condition\n)\n\n\n, conditions_with_first_and_last_diagnosis_date as (\nselect\n  person_id\n  , normalized_code as icd_10_cm\n  , min(recorded_date) as first_diagnosis_date\n  , max(recorded_date) as last_diagnosis_date\nfrom all_conditions\ngroup by person_id, normalized_code\n\n)\n\n\nselect\n  aa.person_id\n  , bb.concept_name as condition\n  , min(first_diagnosis_date) as first_diagnosis_date\n  , max(last_diagnosis_date) as last_diagnosis_date\n  , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom conditions_with_first_and_last_diagnosis_date as aa\ninner join tuva.clinical_concept_library.value_set_member_relevant_fields as bb\non aa.icd_10_cm = bb.code\ngroup by aa.person_id, bb.concept_name", "relation_name": "tuva.chronic_conditions.tuva_chronic_conditions_long", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:28.295459Z", "completed_at": "2025-06-03T19:50:28.335798Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:28.355244Z", "completed_at": "2025-06-03T19:50:28.355251Z"}], "thread_id": "Thread-1", "execution_time": 0.06157207489013672, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.ccsr__long_procedure_category", "compiled": true, "compiled_code": "\n\nwith  __dbt__cte__ccsr__stg_core__procedure as (\n\n\nselect\n      encounter_id\n    , claim_id\n    , person_id\n    , normalized_code\n    , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom tuva.core.procedure\n), procedures as (\n\n    select * from __dbt__cte__ccsr__stg_core__procedure\n\n)\n\n, ccsr__procedure_category_map as (\n\n    select * from tuva.ccsr.procedure_category_map\n\n)\n\nselect distinct\n      procedures.encounter_id\n    , procedures.claim_id\n    , procedures.person_id\n    , procedures.normalized_code\n    , ccsr__procedure_category_map.code_description\n    , ccsr__procedure_category_map.ccsr_parent_category\n    , ccsr__procedure_category_map.ccsr_category\n    , ccsr__procedure_category_map.ccsr_category_description\n    , ccsr__procedure_category_map.clinical_domain\n    , ccsr__procedure_category_map.procedure_section\n    , ccsr__procedure_category_map.operation\n    , ccsr__procedure_category_map.approach\n    , ccsr__procedure_category_map.device\n    , ccsr__procedure_category_map.qualifier\n    , '2023.1' as prccsr_version\n    , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom procedures\nleft outer join ccsr__procedure_category_map\n    on procedures.normalized_code = ccsr__procedure_category_map.code", "relation_name": "tuva.ccsr.long_procedure_category", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:28.309543Z", "completed_at": "2025-06-03T19:50:28.356077Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:28.356631Z", "completed_at": "2025-06-03T19:50:28.356635Z"}], "thread_id": "Thread-2", "execution_time": 0.04899716377258301, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.fhir_preprocessing__procedure", "compiled": true, "compiled_code": "\nwith __dbt__cte___stg_procedure as (\n\nselect\n      procedure_id\n    , person_id\n    , claim_id\n    , encounter_id\n    , normalized_code_type\n    , normalized_code\n    , normalized_description\n    , source_code_type\n    , source_code\n    , source_description\n    , procedure_date\n    , practitioner_id\n    , data_source\nfrom tuva.core.procedure\n) select distinct\n      cast(person_id as TEXT ) as patient_internal_id\n    , cast(procedure_id as TEXT ) as resource_internal_id\n    , 'completed' as procedure_status\n    , case\n        when lower(\n            coalesce(\n                  cast(normalized_code_type as TEXT )\n                , cast(source_code_type as TEXT )\n            )\n        ) = 'icd-10-pcs' then 'ICD10'\n        when lower(\n            coalesce(\n                  cast(normalized_code_type as TEXT )\n                , cast(source_code_type as TEXT )\n            )\n        ) = 'icd-9-pcs' then 'ICD9'\n        else coalesce(\n              cast(normalized_code_type as TEXT )\n            , cast(source_code_type as TEXT )\n        )\n      end as procedure_code_system\n    , coalesce(\n          cast(normalized_code as TEXT )\n        , cast(source_code as TEXT )\n      ) as procedure_code\n    , coalesce(\n          cast(normalized_description as TEXT )\n        , cast(source_description as TEXT )\n      ) as procedure_display\n    , cast(procedure_date as timestamp ) as procedure_performed_datetime\n    , cast(practitioner_id as TEXT ) as practitioner_npi\n    , cast(data_source as TEXT ) as data_source\n    , cast('2025-06-03 19:49:40.396647+00:00' as timestamp) as tuva_last_run\n    , cast('0.14.13' as TEXT ) as tuva_package_version\nfrom __dbt__cte___stg_procedure\nwhere procedure_id is not null\nand normalized_code_type is not null\nand claim_id is null /* claim procedures are included in the EOB resource */", "relation_name": "tuva.fhir_preprocessing.procedure", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:28.327797Z", "completed_at": "2025-06-03T19:50:28.356976Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:28.357650Z", "completed_at": "2025-06-03T19:50:28.357654Z"}], "thread_id": "Thread-4", "execution_time": 0.03561806678771973, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.quality_measures__int_cqm438_denominator_criteria1", "compiled": true, "compiled_code": "\n\nwith  __dbt__cte___stg_condition as (\n\nselect\n      person_id\n    , claim_id\n    , encounter_id\n    , recorded_date\n    , source_code_type\n    , source_code\n    , normalized_code_type\n    , normalized_code\n    , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom tuva.core.condition\n),  __dbt__cte___stg_procedure as (\n\nselect\n      person_id\n    , encounter_id\n    , procedure_date\n    , source_code_type\n    , source_code\n    , normalized_code_type\n    , normalized_code\n    , modifier_1\n    , modifier_2\n    , modifier_3\n    , modifier_4\n    , modifier_5\n    , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom tuva.core.procedure\n), ascvd_codes as (\n\n    select\n          code\n        , code_system\n    from tuva.quality_measures._value_set_codes\n    where lower(concept_name) in (\n              'atherosclerosis and peripheral arterial disease'\n            , 'myocardial infarction'\n            , 'pci'\n            , 'stable and unstable angina'\n            , 'cabg or pci procedure'\n            , 'cabg surgeries'\n            , 'cerebrovascular disease stroke or tia'\n            , 'ischemic heart disease or related diagnoses'\n            , 'carotid intervention'\n        )\n\n)\n\n, conditions as (\n\n    select\n          person_id\n        , claim_id\n        , encounter_id\n        , recorded_date\n        , source_code\n        , source_code_type\n        , normalized_code\n        , normalized_code_type\n    from __dbt__cte___stg_condition\n\n)\n\n, ascvd_conditions as (\n\n    select\n          conditions.person_id\n        , conditions.recorded_date as evidence_date\n    from conditions\n    inner join ascvd_codes\n        on coalesce(conditions.normalized_code_type, conditions.source_code_type) = ascvd_codes.code_system\n            and coalesce(conditions.normalized_code, conditions.source_code) = ascvd_codes.code\n\n)\n\n, procedures as (\n\n    select\n          person_id\n        , procedure_date\n        , coalesce(\n              normalized_code_type\n            , case\n                when lower(source_code_type) = 'cpt' then 'hcpcs'\n                when lower(source_code_type) = 'snomed' then 'snomed-ct'\n                else lower(source_code_type)\n              end\n          ) as code_type\n        , coalesce(\n              normalized_code\n            , source_code\n          ) as code\n    from __dbt__cte___stg_procedure\n\n)\n\n, ascvd_procedures as (\n\n    select\n          procedures.person_id\n        , procedures.procedure_date as evidence_date\n    from procedures\n         inner join ascvd_codes\n             on procedures.code = ascvd_codes.code\n             and procedures.code_type = ascvd_codes.code_system\n\n)\n\n, historical_ascvd as (\n\n    select\n          ascvd_conditions.person_id\n        , ascvd_conditions.evidence_date\n    from ascvd_conditions\n\n    union all\n\n    select\n          ascvd_procedures.person_id\n        , ascvd_procedures.evidence_date\n    from ascvd_procedures\n\n)\n\n, patients_with_ascvd as (\n\n    select\n        distinct\n          historical_ascvd.person_id\n        , pp.performance_period_begin\n        , pp.performance_period_end\n        , pp.measure_id\n        , pp.measure_name\n        , pp.measure_version\n    from historical_ascvd\n    inner join tuva.quality_measures._int_cqm438__performance_period as pp\n    on evidence_date <= pp.performance_period_end\n\n)\n\n, add_data_types as (\n\n    select\n          cast(person_id as TEXT) as person_id\n        , cast(performance_period_begin as date) as performance_period_begin\n        , cast(performance_period_end as date) as performance_period_end\n        , cast(measure_id as TEXT) as measure_id\n        , cast(measure_name as TEXT) as measure_name\n        , cast(measure_version as TEXT) as measure_version\n    from patients_with_ascvd\n\n)\n\nselect\n      person_id\n    , performance_period_begin\n    , performance_period_end\n    , measure_id\n    , measure_name\n    , measure_version\n    , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom add_data_types", "relation_name": "tuva.quality_measures._int_cqm438_denominator_criteria1", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:28.358054Z", "completed_at": "2025-06-03T19:50:28.406341Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:28.408704Z", "completed_at": "2025-06-03T19:50:28.408713Z"}], "thread_id": "Thread-1", "execution_time": 0.05250382423400879, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.quality_measures__int_cqm438_denominator_criteria2", "compiled": true, "compiled_code": "\n\nwith  __dbt__cte___stg_condition as (\n\nselect\n      person_id\n    , claim_id\n    , encounter_id\n    , recorded_date\n    , source_code_type\n    , source_code\n    , normalized_code_type\n    , normalized_code\n    , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom tuva.core.condition\n),  __dbt__cte___stg_procedure as (\n\nselect\n      person_id\n    , encounter_id\n    , procedure_date\n    , source_code_type\n    , source_code\n    , normalized_code_type\n    , normalized_code\n    , modifier_1\n    , modifier_2\n    , modifier_3\n    , modifier_4\n    , modifier_5\n    , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom tuva.core.procedure\n),  __dbt__cte___stg_lab_result as (\n\n\nselect\n      person_id\n    , result\n    , result_date\n    , collection_date\n    , source_code_type\n    , source_code\n    , normalized_code_type\n    , normalized_code\n    , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom tuva.core.lab_result\n\n\n), cholesterol_codes as (\n\n    select\n          code\n        , code_system\n        , concept_name\n    from tuva.quality_measures._value_set_codes\n    where lower(concept_name) in (\n              'ldl cholesterol'\n            , 'familial hypercholesterolemia'\n        )\n\n)\n\n, conditions as (\n\n    select\n          person_id\n        , claim_id\n        , encounter_id\n        , recorded_date\n        , source_code\n        , source_code_type\n        , normalized_code\n        , normalized_code_type\n    from __dbt__cte___stg_condition\n\n)\n\n, cholesterol_conditions as (\n\n    select\n          conditions.person_id\n        , conditions.recorded_date as evidence_date\n    from conditions\n    inner join cholesterol_codes\n        on coalesce(conditions.normalized_code_type, conditions.source_code_type) = cholesterol_codes.code_system\n            and coalesce(conditions.normalized_code, conditions.source_code) = cholesterol_codes.code\n\n)\n\n, procedures as (\n\n    select\n          person_id\n        , procedure_date\n        , coalesce(\n              normalized_code_type\n            , case\n                when lower(source_code_type) = 'cpt' then 'hcpcs'\n                when lower(source_code_type) = 'snomed' then 'snomed-ct'\n                else lower(source_code_type)\n              end\n          ) as code_type\n        , coalesce(\n              normalized_code\n            , source_code\n          ) as code\n    from __dbt__cte___stg_procedure\n\n)\n\n, cholesterol_procedures as (\n\n    select\n          procedures.person_id\n        , procedures.procedure_date as evidence_date\n    from procedures\n         inner join cholesterol_codes\n             on procedures.code = cholesterol_codes.code\n             and procedures.code_type = cholesterol_codes.code_system\n\n)\n\n, labs as (\n\n    select\n          person_id\n        , result\n        , result_date\n        , collection_date\n        , source_code_type\n        , source_code\n        , normalized_code_type\n        , normalized_code\n    from __dbt__cte___stg_lab_result\n\n)\n\n, cholesterol_tests_with_result as (\n\n    select\n      labs.person_id\n    , labs.result as evidence_value\n    , coalesce(collection_date, result_date) as evidence_date\n    , cholesterol_codes.concept_name\n    , row_number() over (partition by labs.person_id\n                          order by labs.result desc\n                        , result_date desc) as rn\n    from labs\n    inner join cholesterol_codes\n      on coalesce(labs.normalized_code, labs.source_code) = cholesterol_codes.code\n        and coalesce(labs.normalized_code_type, labs.source_code_type) = cholesterol_codes.code_system\n   \n        where regexp_like(result, '^[+-]?([0-9]*[.])?[0-9]+$')\n    \n\n)\n\n, cholesterol_labs as (\n\n    select\n          person_id\n        , evidence_date\n    from cholesterol_tests_with_result\n    where rn = 1\n        and cast(evidence_value as numeric(28,6)) >= 190\n\n)\n\n, all_patients_with_cholesterol as (\n\n    select\n          cholesterol_conditions.person_id\n        , cholesterol_conditions.evidence_date\n    from cholesterol_conditions\n\n    union all\n\n    select\n          cholesterol_procedures.person_id\n        , cholesterol_procedures.evidence_date\n    from cholesterol_procedures\n\n    union all\n\n    select\n          cholesterol_labs.person_id\n        , cholesterol_labs.evidence_date\n    from cholesterol_labs\n\n)\n\n, patients_with_cholesterol as (\n\n    select\n        distinct\n          person_id\n        , performance_period_begin\n        , performance_period_end\n        , measure_id\n        , measure_name\n        , measure_version\n    from all_patients_with_cholesterol\n    inner join tuva.quality_measures._int_cqm438__performance_period as pp\n    on evidence_date <= pp.performance_period_end\n\n)\n\n, add_data_types as (\n\n    select\n          cast(person_id as TEXT) as person_id\n        , cast(performance_period_begin as date) as performance_period_begin\n        , cast(performance_period_end as date) as performance_period_end\n        , cast(measure_id as TEXT) as measure_id\n        , cast(measure_name as TEXT) as measure_name\n        , cast(measure_version as TEXT) as measure_version\n    from patients_with_cholesterol\n\n)\n\nselect\n      person_id\n    , performance_period_begin\n    , performance_period_end\n    , measure_id\n    , measure_name\n    , measure_version\n    , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom add_data_types", "relation_name": "tuva.quality_measures._int_cqm438_denominator_criteria2", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:28.394313Z", "completed_at": "2025-06-03T19:50:28.414702Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:28.419166Z", "completed_at": "2025-06-03T19:50:28.419172Z"}], "thread_id": "Thread-2", "execution_time": 0.036364078521728516, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.not_null_quality_measures__stg_core__procedure_person_id.d4aee2f83a", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nwith __dbt__cte___stg_procedure as (\n\nselect\n      person_id\n    , encounter_id\n    , procedure_date\n    , source_code_type\n    , source_code\n    , normalized_code_type\n    , normalized_code\n    , modifier_1\n    , modifier_2\n    , modifier_3\n    , modifier_4\n    , modifier_5\n    , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom tuva.core.procedure\n) select person_id\nfrom __dbt__cte___stg_procedure\nwhere person_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:28.409413Z", "completed_at": "2025-06-03T19:50:28.420918Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:28.427870Z", "completed_at": "2025-06-03T19:50:28.427877Z"}], "thread_id": "Thread-4", "execution_time": 0.03399300575256348, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.readmissions__procedure_ccs", "compiled": true, "compiled_code": "\n\nwith __dbt__cte__readmissions__stg_core__procedure as (\n\n\nselect\n  encounter_id\n, normalized_code\n, normalized_code_type\n, '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom tuva.core.procedure\n) -- Here we map every procedure code to its corresponding\n-- CCS procedure category.\n-- This model may list more than one CCS procedure category\n-- per encounter_id because different procedures associated with the\n-- encounter (different rows on the stg_procedure model) may have\n-- different associated CCS procedure categories.\n\n\n\nselect\n    aa.encounter_id\n    , aa.normalized_code as procedure_code\n    , case\n        when bb.icd_10_pcs is null then 0\n\telse 1\n    end as valid_icd_10_pcs_flag\n    , cc.ccs_procedure_category\n    , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom\n    __dbt__cte__readmissions__stg_core__procedure as aa\n    left outer join tuva.terminology.icd_10_pcs as bb\n    on aa.normalized_code = bb.icd_10_pcs\n    left outer join tuva.readmissions._value_set_icd_10_pcs_to_ccs as cc\n    on aa.normalized_code = cc.icd_10_pcs\nwhere aa.normalized_code_type = 'icd-10-pcs'", "relation_name": "tuva.readmissions._int_procedure_ccs", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:28.457395Z", "completed_at": "2025-06-03T19:50:28.471738Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:28.480254Z", "completed_at": "2025-06-03T19:50:28.480261Z"}], "thread_id": "Thread-2", "execution_time": 0.024199962615966797, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.mart_review__stg_medical_claim", "compiled": true, "compiled_code": "\n\nselect mc.*\n, cast(c.year_month_int as TEXT) as year_month\nfrom tuva.core.medical_claim as mc\nleft outer join tuva.reference_data.calendar as c on coalesce(mc.claim_line_start_date,mc.claim_start_date) = c.full_date", "relation_name": "tuva.data_quality.mart_review__stg_medical_claim", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:28.482435Z", "completed_at": "2025-06-03T19:50:28.494230Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:28.500672Z", "completed_at": "2025-06-03T19:50:28.500682Z"}], "thread_id": "Thread-1", "execution_time": 0.01992201805114746, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.not_null_core__medical_claim_person_id.10967fedc3", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect person_id\nfrom tuva.core.medical_claim\nwhere person_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:28.488344Z", "completed_at": "2025-06-03T19:50:28.501812Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:28.502410Z", "completed_at": "2025-06-03T19:50:28.502415Z"}], "thread_id": "Thread-2", "execution_time": 0.020300626754760742, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.unique_core__medical_claim_medical_claim_id.74a5d63708", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    medical_claim_id as unique_field,\n    count(*) as n_records\n\nfrom tuva.core.medical_claim\nwhere medical_claim_id is not null\ngroup by medical_claim_id\nhaving count(*) > 1\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:28.494530Z", "completed_at": "2025-06-03T19:50:28.503009Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:28.511197Z", "completed_at": "2025-06-03T19:50:28.511207Z"}], "thread_id": "Thread-4", "execution_time": 0.02327132225036621, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.core__location", "compiled": true, "compiled_code": "\n\nselect * from tuva.core._stg_claims_location\nunion all\nselect * from tuva.core._stg_clinical_location\n\n", "relation_name": "tuva.core.location", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:28.503453Z", "completed_at": "2025-06-03T19:50:28.512983Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:28.519896Z", "completed_at": "2025-06-03T19:50:28.519905Z"}], "thread_id": "Thread-1", "execution_time": 0.01789402961730957, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.core__practitioner", "compiled": true, "compiled_code": "\n\nselect * from tuva.core._stg_claims_practitioner\nunion all\nselect * from tuva.core._stg_clinical_practitioner\n\n", "relation_name": "tuva.core.practitioner", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:28.513204Z", "completed_at": "2025-06-03T19:50:28.543743Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:28.548824Z", "completed_at": "2025-06-03T19:50:28.548835Z"}], "thread_id": "Thread-2", "execution_time": 0.03724384307861328, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.ccsr__singular_condition_category", "compiled": true, "compiled_code": "\n\nselect\n      encounter_id\n    , claim_id\n    , person_id\n    , normalized_code\n    , code_description\n    , ccsr_category\n    , ccsr_category_description\n    , ccsr_parent_category\n    , parent_category_description\n    , body_system\n    , '2023.1' as dxccsr_version\n    , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom tuva.ccsr.long_condition_category\nwhere is_ip_default_category = 1\nand condition_rank = 1", "relation_name": "tuva.ccsr.singular_condition_category", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:28.520533Z", "completed_at": "2025-06-03T19:50:28.549637Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:28.571734Z", "completed_at": "2025-06-03T19:50:28.571743Z"}], "thread_id": "Thread-4", "execution_time": 0.059103965759277344, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.hcc_suspecting__int_all_conditions", "compiled": true, "compiled_code": "\n\nwith conditions as (\n\n    select\n          person_id\n        , recorded_date\n        , condition_type\n        , code_type\n        , code\n        , data_source\n    from tuva.hcc_suspecting._int_prep_conditions\n\n)\n\n, seed_hcc_mapping as (\n\n    select\n          diagnosis_code\n        , cms_hcc_v28 as hcc_code\n    from tuva.hcc_suspecting._value_set_icd_10_cm_mappings\n    where cms_hcc_v28 is not null\n\n)\n\n, seed_hcc_descriptions as (\n\n    select distinct\n          hcc_code\n        , hcc_description\n    from tuva.hcc_suspecting._value_set_hcc_descriptions\n\n)\n\n, joined as (\n\n    select\n          conditions.person_id\n        , conditions.recorded_date\n        , conditions.condition_type\n        , conditions.code\n        , conditions.data_source\n        , seed_hcc_mapping.hcc_code\n        , seed_hcc_descriptions.hcc_description\n    from conditions\n         left outer join seed_hcc_mapping\n         on conditions.code = seed_hcc_mapping.diagnosis_code\n         left outer join seed_hcc_descriptions\n         on seed_hcc_mapping.hcc_code = seed_hcc_descriptions.hcc_code\n    where conditions.code_type = 'icd-10-cm'\n\n)\n\n, add_data_types as (\n\n    select\n          cast(person_id as TEXT) as person_id\n        , cast(recorded_date as date) as recorded_date\n        , cast(condition_type as TEXT) as condition_type\n        , cast(code as TEXT) as icd_10_cm_code\n        , cast(hcc_code as TEXT) as hcc_code\n        , cast(hcc_description as TEXT) as hcc_description\n        , cast(data_source as TEXT) as data_source\n    from joined\n\n)\n\nselect\n      person_id\n    , recorded_date\n    , condition_type\n    , icd_10_cm_code\n    , hcc_code\n    , hcc_description\n    , data_source\n    , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom add_data_types", "relation_name": "tuva.hcc_suspecting._int_all_conditions", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:28.558480Z", "completed_at": "2025-06-03T19:50:28.573583Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:28.581459Z", "completed_at": "2025-06-03T19:50:28.581468Z"}], "thread_id": "Thread-1", "execution_time": 0.03705120086669922, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.chronic_conditions__tuva_chronic_conditions_wide", "compiled": true, "compiled_code": "\n\nwith patients as (\nselect distinct person_id\nfrom tuva.chronic_conditions.tuva_chronic_conditions_long\n)\n\n, obesity as (\nselect distinct person_id\nfrom tuva.chronic_conditions.tuva_chronic_conditions_long\nwhere condition = 'Obesity'\n)\n\n\n, osteoarthritis as (\nselect distinct person_id\nfrom tuva.chronic_conditions.tuva_chronic_conditions_long\nwhere condition = 'Osteoarthritis'\n)\n\n, copd as (\nselect distinct person_id\nfrom tuva.chronic_conditions.tuva_chronic_conditions_long\nwhere condition = 'Chronic Obstructive Pulmonary Disease'\n)\n\n, anxiety_disorders as (\nselect distinct person_id\nfrom tuva.chronic_conditions.tuva_chronic_conditions_long\nwhere condition = 'Anxiety Disorders'\n)\n\n, ckd as (\nselect distinct person_id\nfrom tuva.chronic_conditions.tuva_chronic_conditions_long\nwhere condition = 'Chronic Kidney Disease'\n)\n\n, t2d as (\nselect distinct person_id\nfrom tuva.chronic_conditions.tuva_chronic_conditions_long\nwhere condition = 'Type 2 Diabetes Mellitus'\n)\n\n, cll as (\nselect distinct person_id\nfrom tuva.chronic_conditions.tuva_chronic_conditions_long\nwhere condition = 'Chronic Lymphocytic Leukemia'\n)\n\n, dysplipidemias as (\nselect distinct person_id\nfrom tuva.chronic_conditions.tuva_chronic_conditions_long\nwhere condition = 'Dyslipidemias'\n)\n\n, hypertension as (\nselect distinct person_id\nfrom tuva.chronic_conditions.tuva_chronic_conditions_long\nwhere condition = 'Hypertension'\n)\n\n, atherosclerosis as (\nselect distinct person_id\nfrom tuva.chronic_conditions.tuva_chronic_conditions_long\nwhere condition = 'Atherosclerosis'\n)\n\n, dementia as (\nselect distinct person_id\nfrom tuva.chronic_conditions.tuva_chronic_conditions_long\nwhere condition = 'Dementia'\n)\n\n, rheumatoid_arthritis as (\nselect distinct person_id\nfrom tuva.chronic_conditions.tuva_chronic_conditions_long\nwhere condition = 'Rheumatoid Arthritis'\n)\n\n, celiac as (\nselect distinct person_id\nfrom tuva.chronic_conditions.tuva_chronic_conditions_long\nwhere condition = 'Celiac Disease'\n)\n\n, hip_fracture as (\nselect distinct person_id\nfrom tuva.chronic_conditions.tuva_chronic_conditions_long\nwhere condition = 'Hip Fracture'\n)\n\n, immunodeficiencies_and_white_blood_cell_disorders as (\nselect distinct person_id\nfrom tuva.chronic_conditions.tuva_chronic_conditions_long\nwhere condition = 'Specified Immunodeficiencies and White Blood Cell Disorders  (HCC v28 concept #115)'\n)\n\n, asthma as (\nselect distinct person_id\nfrom tuva.chronic_conditions.tuva_chronic_conditions_long\nwhere condition = 'Asthma'\n)\n\n, t1d as (\nselect distinct person_id\nfrom tuva.chronic_conditions.tuva_chronic_conditions_long\nwhere condition = 'Type 1 Diabetes Mellitus'\n)\n\n, ulcerative_colitis as (\nselect distinct person_id\nfrom tuva.chronic_conditions.tuva_chronic_conditions_long\nwhere condition = 'Ulcerative colitis'\n)\n\n, chrohns as (\nselect distinct person_id\nfrom tuva.chronic_conditions.tuva_chronic_conditions_long\nwhere condition = 'Crohns Disease'\n)\n\n, holicobacter as (\nselect distinct person_id\nfrom tuva.chronic_conditions.tuva_chronic_conditions_long\nwhere condition = 'Helicobacter pylori Infection'\n)\n\n, bipolar as (\nselect distinct person_id\nfrom tuva.chronic_conditions.tuva_chronic_conditions_long\nwhere condition = 'Bipolar Affective Disorder'\n)\n\n, heart_failure as (\nselect distinct person_id\nfrom tuva.chronic_conditions.tuva_chronic_conditions_long\nwhere condition = 'Heart Failure'\n)\n\n, tabacco as (\nselect distinct person_id\nfrom tuva.chronic_conditions.tuva_chronic_conditions_long\nwhere condition = 'Tobacco Use'\n)\n\n, lyme as (\nselect distinct person_id\nfrom tuva.chronic_conditions.tuva_chronic_conditions_long\nwhere condition = 'Lyme Disease'\n)\n\n, breast_cancer as (\nselect distinct person_id\nfrom tuva.chronic_conditions.tuva_chronic_conditions_long\nwhere condition = 'Breast Cancer'\n)\n\n, osteoporosis as (\nselect distinct person_id\nfrom tuva.chronic_conditions.tuva_chronic_conditions_long\nwhere condition = 'Osteoporosis'\n)\n\n, pulmonary_embolism as (\nselect distinct person_id\nfrom tuva.chronic_conditions.tuva_chronic_conditions_long\nwhere condition = 'Pulmonary Embolism, Thrombotic or Unspecified'\n)\n\n, schizophrenia as (\nselect distinct person_id\nfrom tuva.chronic_conditions.tuva_chronic_conditions_long\nwhere condition = 'Schizophrenia'\n)\n\n, atrial_fibrillation as (\nselect distinct person_id\nfrom tuva.chronic_conditions.tuva_chronic_conditions_long\nwhere condition = 'Atrial Fibrillation'\n)\n\n, colorectal_cancer as (\nselect distinct person_id\nfrom tuva.chronic_conditions.tuva_chronic_conditions_long\nwhere condition = 'Colorectal Cancer'\n)\n\n, depression as (\nselect distinct person_id\nfrom tuva.chronic_conditions.tuva_chronic_conditions_long\nwhere condition = 'Major Depressive Disorder'\n)\n\n, deep_vein_thrombosis as (\nselect distinct person_id\nfrom tuva.chronic_conditions.tuva_chronic_conditions_long\nwhere condition = 'Deep Vein Thrombosis of Extremities or Central Veins'\n)\n\n, alzheimer as (\nselect distinct person_id\nfrom tuva.chronic_conditions.tuva_chronic_conditions_long\nwhere condition = 'Alzheimer Disease'\n)\n\n, stroke as (\nselect distinct person_id\nfrom tuva.chronic_conditions.tuva_chronic_conditions_long\nwhere condition = 'Stroke'\n)\n\n, myocardial_infraction as (\nselect distinct person_id\nfrom tuva.chronic_conditions.tuva_chronic_conditions_long\nwhere condition = 'Myocardial Infarction'\n)\n\n, opiod_use_disorder as (\nselect distinct person_id\nfrom tuva.chronic_conditions.tuva_chronic_conditions_long\nwhere condition = 'Opioid Use Disorder'\n)\n\n, lung_cancer as (\nselect distinct person_id\nfrom tuva.chronic_conditions.tuva_chronic_conditions_long\nwhere condition = 'Lung cancer, primary or unspecified'\n)\n\n, herpes as (\nselect distinct person_id\nfrom tuva.chronic_conditions.tuva_chronic_conditions_long\nwhere condition = 'Herpes Simplex Infection'\n)\n\n, rickettsiosis as (\nselect distinct person_id\nfrom tuva.chronic_conditions.tuva_chronic_conditions_long\nwhere condition = 'Rickettsiosis'\n)\n\n, ms as (\nselect distinct person_id\nfrom tuva.chronic_conditions.tuva_chronic_conditions_long\nwhere condition = 'Multiple Sclerosis'\n)\n\n, alchohol as (\nselect distinct person_id\nfrom tuva.chronic_conditions.tuva_chronic_conditions_long\nwhere condition = 'Alcohol Use Disorder'\n)\n\n, adhd as (\nselect distinct person_id\nfrom tuva.chronic_conditions.tuva_chronic_conditions_long\nwhere condition = 'Attention Deficit-Hyperactivity Disorder'\n)\n\n, hiv as (\nselect distinct person_id\nfrom tuva.chronic_conditions.tuva_chronic_conditions_long\nwhere condition = 'HIV/AIDS  (HCC v28 concept #1)'\n)\n\n, ptsd as (\nselect distinct person_id\nfrom tuva.chronic_conditions.tuva_chronic_conditions_long\nwhere condition = 'Post-Traumatic Stress Disorder'\n)\n\n, lupus as (\nselect distinct person_id\nfrom tuva.chronic_conditions.tuva_chronic_conditions_long\nwhere condition = 'Systemic Lupus Erythematosus'\n)\n\n\n\n\nselect\n  person_id\n  , case when person_id in (select * from obesity) then 1\n       else 0\n  end as obesity\n  , case when person_id in (select * from osteoarthritis) then 1\n       else 0\n  end as osteoarthritis\n  , case when person_id in (select * from copd) then 1\n       else 0\n  end as copd\n  , case when person_id in (select * from anxiety_disorders) then 1\n       else 0\n  end as anxiety_disorders\n  , case when person_id in (select * from ckd) then 1\n       else 0\n  end as ckd\n  , case when person_id in (select * from t2d) then 1\n       else 0\n  end as t2d\n  , case when person_id in (select * from cll) then 1\n       else 0\n  end as cll\n  , case when person_id in (select * from dysplipidemias) then 1\n       else 0\n  end as dysplipidemias\n  , case when person_id in (select * from hypertension) then 1\n       else 0\n  end as hypertension\n  , case when person_id in (select * from atherosclerosis) then 1\n       else 0\n  end as atherosclerosis\n  , case when person_id in (select * from dementia) then 1\n       else 0\n  end as dementia\n  , case when person_id in (select * from rheumatoid_arthritis) then 1\n       else 0\n  end as rheumatoid_arthritis\n  , case when person_id in (select * from celiac) then 1\n       else 0\n  end as celiac\n  , case when person_id in (select * from hip_fracture) then 1\n       else 0\n  end as hip_fracture\n  , case when person_id in (select * from immunodeficiencies_and_white_blood_cell_disorders) then 1\n       else 0\n  end as immunodeficiencies_and_white_blood_cell_disorders\n  , case when person_id in (select * from asthma) then 1\n       else 0\n  end as asthma\n  , case when person_id in (select * from t1d) then 1\n       else 0\n  end as t1d\n  , case when person_id in (select * from ulcerative_colitis) then 1\n       else 0\n  end as ulcerative_colitis\n  , case when person_id in (select * from chrohns) then 1\n       else 0\n  end as chrohns\n  , case when person_id in (select * from holicobacter) then 1\n       else 0\n  end as holicobacter\n  , case when person_id in (select * from bipolar) then 1\n       else 0\n  end as bipolar\n  , case when person_id in (select * from heart_failure) then 1\n       else 0\n  end as heart_failure\n  , case when person_id in (select * from tabacco) then 1\n       else 0\n  end as tabacco\n  , case when person_id in (select * from lyme) then 1\n       else 0\n  end as lyme\n  , case when person_id in (select * from breast_cancer) then 1\n       else 0\n  end as breast_cancer\n  , case when person_id in (select * from osteoporosis) then 1\n       else 0\n  end as osteoporosis\n  , case when person_id in (select * from pulmonary_embolism) then 1\n       else 0\n  end as pulmonary_embolism\n  , case when person_id in (select * from schizophrenia) then 1\n       else 0\n  end as schizophrenia\n  , case when person_id in (select * from atrial_fibrillation) then 1\n       else 0\n  end as atrial_fibrillation\n  , case when person_id in (select * from colorectal_cancer) then 1\n       else 0\n  end as colorectal_cancer\n  , case when person_id in (select * from depression) then 1\n       else 0\n  end as depression\n  , case when person_id in (select * from deep_vein_thrombosis) then 1\n       else 0\n  end as deep_vein_thrombosis\n  , case when person_id in (select * from alzheimer) then 1\n       else 0\n  end as alzheimer\n  , case when person_id in (select * from stroke) then 1\n       else 0\n  end as stroke\n  , case when person_id in (select * from myocardial_infraction) then 1\n       else 0\n  end as myocardial_infraction\n  , case when person_id in (select * from opiod_use_disorder) then 1\n       else 0\n  end as opiod_use_disorder\n  , case when person_id in (select * from lung_cancer) then 1\n       else 0\n  end as lung_cancer\n  , case when person_id in (select * from herpes) then 1\n       else 0\n  end as herpes\n  , case when person_id in (select * from rickettsiosis) then 1\n       else 0\n  end as rickettsiosis\n  , case when person_id in (select * from ms) then 1\n       else 0\n  end as ms\n  , case when person_id in (select * from alchohol) then 1\n       else 0\n  end as alchohol\n  , case when person_id in (select * from adhd) then 1\n       else 0\n  end as adhd\n  , case when person_id in (select * from hiv) then 1\n       else 0\n  end as hiv\n  , case when person_id in (select * from ptsd) then 1\n       else 0\n  end as ptsd\n  , case when person_id in (select * from lupus) then 1\n       else 0\n  end as lupus\n  , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\n\nfrom patients", "relation_name": "tuva.chronic_conditions.tuva_chronic_conditions_wide", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:28.574131Z", "completed_at": "2025-06-03T19:50:28.589834Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:28.590359Z", "completed_at": "2025-06-03T19:50:28.590366Z"}], "thread_id": "Thread-2", "execution_time": 0.01797771453857422, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.mart_review__number_of_conditions", "compiled": true, "compiled_code": "\n\nwith xwalk as (\n    select distinct person_id, data_source\n    from tuva.core.patient\n)\n, cte as (\n    select l.person_id\n           , x.data_source\n           , count(*) as numofconditions\n    from tuva.chronic_conditions.tuva_chronic_conditions_long as l\n    left outer join xwalk as x on l.person_id = x.person_id\n    group by l.person_id, x.data_source\n)\nselect p.person_id\n       , p.data_source\n        , p.person_id || '|' || p.data_source as patient_source_key\n       , coalesce(cte.numofconditions, 0) as numofconditions\n    , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom tuva.core.patient as p\nleft outer join cte on p.person_id = cte.person_id and p.data_source = cte.data_source", "relation_name": "tuva.data_quality.mart_review__number_of_conditions", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:28.582901Z", "completed_at": "2025-06-03T19:50:28.596270Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:28.597935Z", "completed_at": "2025-06-03T19:50:28.597941Z"}], "thread_id": "Thread-4", "execution_time": 0.024180889129638672, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.mart_review__tuva_chronic_conditions", "compiled": true, "compiled_code": "\n\nwith cte as (\n    select distinct\n        person_id\n    from tuva.chronic_conditions.tuva_chronic_conditions_long\n)\n\n, patientxwalk as (\n    select distinct\n        person_id\n      , data_source\n    from tuva.core.patient\n)\n\n, result as (\n    select\n        l.person_id\n      , p.data_source\n      , l.condition\n    from tuva.chronic_conditions.tuva_chronic_conditions_long as l\n    inner join patientxwalk as p\n      on l.person_id = p.person_id\n\n    union all\n\n    select\n        p.person_id\n      , p.data_source\n      , 'No Chronic Conditions' as condition\n    from tuva.core.patient as p\n    left outer join cte\n      on p.person_id = cte.person_id\n    where cte.person_id is null\n)\n\nselect *\n   , person_id || '|' || data_source as patient_source_key\n    , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom result", "relation_name": "tuva.data_quality.mart_review__tuva_chronic_conditions", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:28.590861Z", "completed_at": "2025-06-03T19:50:28.599452Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:28.605483Z", "completed_at": "2025-06-03T19:50:28.605491Z"}], "thread_id": "Thread-1", "execution_time": 0.01601719856262207, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_expectations_expect_table_row_count_to_be_between_chronic_conditions__tuva_chronic_conditions_long_1__False.3243a7af9b", "compiled": true, "compiled_code": "\n\n\n\n    with grouped_expression as (\n    select\n        \n        \n    \n  \n( 1=1 and count(*) >= 1\n)\n as expression\n\n\n    from tuva.chronic_conditions.tuva_chronic_conditions_long\n    \n\n),\nvalidation_errors as (\n\n    select\n        *\n    from\n        grouped_expression\n    where\n        not(expression = true)\n\n)\n\nselect *\nfrom validation_errors\n\n\n\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:28.599925Z", "completed_at": "2025-06-03T19:50:28.612438Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:28.612940Z", "completed_at": "2025-06-03T19:50:28.612946Z"}], "thread_id": "Thread-2", "execution_time": 0.01435232162475586, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_utils_unique_combination_of_columns_chronic_conditions__tuva_chronic_conditions_long_person_id__condition.aa373ab7fc", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith validation_errors as (\n\n    select\n        person_id, condition\n    from tuva.chronic_conditions.tuva_chronic_conditions_long\n    group by person_id, condition\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:28.606519Z", "completed_at": "2025-06-03T19:50:28.621747Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:28.622353Z", "completed_at": "2025-06-03T19:50:28.622361Z"}], "thread_id": "Thread-4", "execution_time": 0.022768259048461914, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.ccsr__procedure_summary", "compiled": true, "compiled_code": "\n\nwith procedure_base as (\n    select\n        encounter_id\n        , claim_id\n        , normalized_code\n        , code_description\n        , ccsr_parent_category\n        , ccsr_category\n        , ccsr_category_description\n        , clinical_domain\n        , operation\n        , approach\n        , count(claim_id) over\n            (partition by ccsr_category, operation) as n_total_occurrences\n    from tuva.ccsr.long_procedure_category\n    -- include only records that map to a CCSR procedure category\n    where ccsr_category is not null\n)\n\n, procedures_aggregated as (\n    select\n        ccsr_category\n        , ccsr_category_description\n        , operation\n        , approach\n        , count(claim_id) as n_occurrences_with_approach\n        , n_total_occurrences\n        , count(claim_id) / n_total_occurrences * 100 as approach_rate\n    from procedure_base\n    group by\n        ccsr_category\n        , ccsr_category_description\n        , operation\n        , approach\n        , n_total_occurrences\n)\n\nselect\n    *\n    , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom procedures_aggregated", "relation_name": "tuva.ccsr.procedure_summary", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:28.616336Z", "completed_at": "2025-06-03T19:50:28.623053Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:28.636208Z", "completed_at": "2025-06-03T19:50:28.636220Z"}], "thread_id": "Thread-1", "execution_time": 0.024158954620361328, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_utils_unique_combination_of_columns_fhir_preprocessing__procedure_patient_internal_id__resource_internal_id.f672212966", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith validation_errors as (\n\n    select\n        patient_internal_id, resource_internal_id\n    from tuva.fhir_preprocessing.procedure\n    group by patient_internal_id, resource_internal_id\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:28.623579Z", "completed_at": "2025-06-03T19:50:28.659915Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:28.677481Z", "completed_at": "2025-06-03T19:50:28.677491Z"}], "thread_id": "Thread-2", "execution_time": 0.055542707443237305, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.chronic_conditions__cms_chronic_conditions_all", "compiled": true, "compiled_code": "\n\nwith  __dbt__cte__cms_chronic_conditions__stg_core__condition as (\n\n\nselect\n      claim_id\n    , person_id\n    , recorded_date\n    , normalized_code_type\n    , normalized_code\n    , data_source\n    , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom tuva.core.condition\nwhere claim_id is not null\n),  __dbt__cte__cms_chronic_conditions__stg_core__medical_claim as (\n\n\nselect\n      claim_id\n    , person_id\n    , claim_start_date\n    , drg_code_type\n    , drg_code\n    , data_source\n    , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom tuva.core.medical_claim\n),  __dbt__cte__cms_chronic_conditions__stg_core__procedure as (\n\n\nselect\n      claim_id\n    , person_id\n    , procedure_date\n    , normalized_code_type\n    , normalized_code\n    , data_source\n    , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom tuva.core.procedure\nwhere claim_id is not null\n), chronic_conditions as (\n\n    select * from tuva.chronic_conditions._value_set_cms_chronic_conditions_hierarchy\n\n)\n\n, patient_conditions as (\n\n    select\n          person_id\n        , claim_id\n        , recorded_date as start_date\n        , normalized_code_type as code_type\n        , replace(normalized_code, '.', '') as code\n        , data_source\n    from __dbt__cte__cms_chronic_conditions__stg_core__condition\n\n)\n\n, patient_ms_drgs as (\n\n    select\n          person_id\n        , claim_id\n        , claim_start_date as start_date\n        , drg_code_type as drg_code_type\n        , drg_code as code\n        , data_source\n    from __dbt__cte__cms_chronic_conditions__stg_core__medical_claim\n    where drg_code_type = 'ms-drg'\n\n)\n\n, patient_procedures as (\n\n    select\n          person_id\n        , claim_id\n        , procedure_date as start_date\n        , normalized_code_type as code_type\n        , replace(normalized_code, '.', '') as code\n        , data_source\n    from __dbt__cte__cms_chronic_conditions__stg_core__procedure\n\n)\n\n, inclusions_diagnosis as (\n\n    select\n          patient_conditions.person_id\n        , patient_conditions.claim_id\n        , patient_conditions.start_date\n        , patient_conditions.data_source\n        , chronic_conditions.chronic_condition_type\n        , chronic_conditions.condition_category\n        , chronic_conditions.condition\n    from patient_conditions\n         inner join chronic_conditions\n             on patient_conditions.code = chronic_conditions.code\n    where chronic_conditions.inclusion_type = 'Include'\n    and chronic_conditions.code_system = 'ICD-10-CM'\n    and chronic_conditions.additional_logic = 'None'\n\n)\n\n, inclusions_ms_drg as (\n\n    select\n          patient_ms_drgs.person_id\n        , patient_ms_drgs.claim_id\n        , patient_ms_drgs.start_date\n        , patient_ms_drgs.data_source\n        , chronic_conditions.chronic_condition_type\n        , chronic_conditions.condition_category\n        , chronic_conditions.condition\n    from patient_ms_drgs\n         inner join chronic_conditions\n             on patient_ms_drgs.code = chronic_conditions.code\n    where chronic_conditions.inclusion_type = 'Include'\n    and chronic_conditions.code_system = 'MS-DRG'\n    and chronic_conditions.additional_logic = 'None'\n\n)\n\n, inclusions_procedure as (\n\n    select\n          patient_procedures.person_id\n        , patient_procedures.claim_id\n        , patient_procedures.start_date\n        , patient_procedures.data_source\n        , chronic_conditions.chronic_condition_type\n        , chronic_conditions.condition_category\n        , chronic_conditions.condition\n    from patient_procedures\n         inner join chronic_conditions\n             on patient_procedures.code = chronic_conditions.code\n    where chronic_conditions.inclusion_type = 'Include'\n    and chronic_conditions.code_system in ('ICD-10-PCS', 'HCPCS')\n    and chronic_conditions.additional_logic = 'None'\n\n)\n\n, exclusions_diagnosis as (\n\n    select distinct\n          patient_conditions.claim_id\n        , chronic_conditions.condition\n    from patient_conditions\n         inner join chronic_conditions\n             on patient_conditions.code = chronic_conditions.code\n    where chronic_conditions.inclusion_type = 'Exclude'\n    and chronic_conditions.code_system = 'ICD-10-CM'\n\n)\n\n\n, inclusions_unioned as (\n\n    select * from inclusions_diagnosis\n    union distinct\n    select * from inclusions_procedure\n    union distinct\n    select * from inclusions_ms_drg\n\n)\n\n\nselect distinct\n      cast(inclusions_unioned.person_id as TEXT) as person_id\n    , cast(inclusions_unioned.claim_id as TEXT) as claim_id\n    , cast(inclusions_unioned.start_date as date) as start_date\n    , cast(inclusions_unioned.chronic_condition_type as TEXT) as chronic_condition_type\n    , cast(inclusions_unioned.condition_category as TEXT) as condition_category\n    , cast(inclusions_unioned.condition as TEXT) as condition\n    , cast(inclusions_unioned.data_source as TEXT) as data_source\n    , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom inclusions_unioned\n     left outer join exclusions_diagnosis\n         on inclusions_unioned.claim_id = exclusions_diagnosis.claim_id\n         and inclusions_unioned.condition = exclusions_diagnosis.condition\nwhere exclusions_diagnosis.claim_id is null", "relation_name": "tuva.chronic_conditions._int_cms_chronic_condition_all", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:28.653482Z", "completed_at": "2025-06-03T19:50:28.688710Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:28.689396Z", "completed_at": "2025-06-03T19:50:28.689402Z"}], "thread_id": "Thread-4", "execution_time": 0.03730893135070801, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.chronic_conditions__cms_chronic_conditions_hiv_aids", "compiled": true, "compiled_code": "with  __dbt__cte__cms_chronic_conditions__stg_core__condition as (\n\n\nselect\n      claim_id\n    , person_id\n    , recorded_date\n    , normalized_code_type\n    , normalized_code\n    , data_source\n    , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom tuva.core.condition\nwhere claim_id is not null\n),  __dbt__cte__cms_chronic_conditions__stg_core__medical_claim as (\n\n\nselect\n      claim_id\n    , person_id\n    , claim_start_date\n    , drg_code_type\n    , drg_code\n    , data_source\n    , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom tuva.core.medical_claim\n), chronic_conditions as (\n\n    select * from tuva.chronic_conditions._value_set_cms_chronic_conditions_hierarchy\n    where condition = 'Human Immunodeficiency Virus and/or Acquired Immunodeficiency Syndrome (HIV/AIDS)'\n\n)\n\n, patient_conditions as (\n\n    select\n          person_id\n        , claim_id\n        , recorded_date as start_date\n        , normalized_code_type as code_type\n        , replace(normalized_code, '.', '') as code\n        , data_source\n    from __dbt__cte__cms_chronic_conditions__stg_core__condition\n\n)\n\n, patient_ms_drgs as (\n\n    select\n          person_id\n        , claim_id\n        , claim_start_date as start_date\n        , drg_code_type as drg_code_type\n        , drg_code as code\n        , data_source\n    from __dbt__cte__cms_chronic_conditions__stg_core__medical_claim\n    where\n        drg_code_type = 'ms-drg'\n\n)\n\n/*\n    Exception logic: a claim with the diagnosis code R75 requires a second\n    qualifying claim that is not R75 (a screening code)\n\n    This CTE excludes encounters with the exception code. Those encounters\n    will be evaluated separately.\n*/\n, inclusions_diagnosis as (\n\n    select\n          patient_conditions.person_id\n        , patient_conditions.claim_id\n        , patient_conditions.start_date\n        , patient_conditions.data_source\n        , chronic_conditions.chronic_condition_type\n        , chronic_conditions.condition_category\n        , chronic_conditions.condition\n    from patient_conditions\n         inner join chronic_conditions\n             on patient_conditions.code = chronic_conditions.code\n    where chronic_conditions.inclusion_type = 'Include'\n    and chronic_conditions.code_system = 'ICD-10-CM'\n    and chronic_conditions.code <> 'R75'\n\n)\n\n, inclusions_ms_drg as (\n\n    select\n          patient_ms_drgs.person_id\n        , patient_ms_drgs.claim_id\n        , patient_ms_drgs.start_date\n        , patient_ms_drgs.data_source\n        , chronic_conditions.chronic_condition_type\n        , chronic_conditions.condition_category\n        , chronic_conditions.condition\n    from patient_ms_drgs\n         inner join chronic_conditions\n             on patient_ms_drgs.code = chronic_conditions.code\n    where chronic_conditions.inclusion_type = 'Include'\n    and chronic_conditions.code_system = 'MS-DRG'\n\n)\n\n/*\n    Exception logic: a claim with the diagnosis code R75 requires a second\n    qualifying claim that is not R75 (a screening code)\n\n    This CTE includes encounters with the exception code only where that\n    patient has another encounter that is not R75.\n*/\n, exception_diagnosis as (\n\n    select\n          patient_conditions.person_id\n        , patient_conditions.claim_id\n        , patient_conditions.start_date\n        , patient_conditions.data_source\n        , chronic_conditions.chronic_condition_type\n        , chronic_conditions.condition_category\n        , chronic_conditions.condition\n    from patient_conditions\n         inner join chronic_conditions\n             on patient_conditions.code = chronic_conditions.code\n         inner join inclusions_diagnosis\n             on patient_conditions.person_id = inclusions_diagnosis.person_id\n    where chronic_conditions.inclusion_type = 'Include'\n    and chronic_conditions.code_system = 'ICD-10-CM'\n    and chronic_conditions.code = 'R75'\n\n)\n\n\n, inclusions_unioned as (\n\n    select * from inclusions_diagnosis\n    union distinct\n    select * from inclusions_ms_drg\n    union distinct\n    select * from exception_diagnosis\n\n)\n\n\nselect distinct\n      cast(inclusions_unioned.person_id as TEXT) as person_id\n    , cast(inclusions_unioned.claim_id as TEXT) as claim_id\n    , cast(inclusions_unioned.start_date as date) as start_date\n    , cast(inclusions_unioned.chronic_condition_type as TEXT) as chronic_condition_type\n    , cast(inclusions_unioned.condition_category as TEXT) as condition_category\n    , cast(inclusions_unioned.condition as TEXT) as condition\n    , cast(inclusions_unioned.data_source as TEXT) as data_source\n    , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom inclusions_unioned", "relation_name": "tuva.chronic_conditions._int_cms_chronic_condition_hiv_aids", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:28.677994Z", "completed_at": "2025-06-03T19:50:28.690008Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:28.709479Z", "completed_at": "2025-06-03T19:50:28.709489Z"}], "thread_id": "Thread-1", "execution_time": 0.05640602111816406, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.cms_hcc__int_monthly_collection_dates", "compiled": true, "compiled_code": "\n\nwith  __dbt__cte___stg_medical_claim as (\n\nselect\n      claim_id\n    , claim_line_number\n    , claim_type\n    , person_id\n    , claim_start_date\n    , claim_end_date\n    , bill_type_code\n    , hcpcs_code\n    , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom tuva.core.medical_claim\n), collection_date_range as (\n\n    select\n          cast(min(date_trunc('year', claim_end_date)) as date) as start_date\n        , cast(max(claim_end_date) as date) as end_date\n    from __dbt__cte___stg_medical_claim\n\n)\n\nselect distinct\n      cast(date_trunc('year', calendar.last_day_of_month) as date) as collection_start_date\n    , cast(calendar.last_day_of_month as date) as collection_end_date\n    , cast(calendar.year as integer) as collection_year\n    , cast(calendar.year + 1 as integer) as payment_year\nfrom tuva.reference_data.calendar as calendar\ninner join collection_date_range\n    on calendar.first_day_of_month\n        between collection_date_range.start_date and collection_date_range.end_date", "relation_name": "tuva.cms_hcc._int_monthly_collection_dates", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:28.690473Z", "completed_at": "2025-06-03T19:50:28.722023Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:28.735511Z", "completed_at": "2025-06-03T19:50:28.735526Z"}], "thread_id": "Thread-2", "execution_time": 0.04654383659362793, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.fhir_preprocessing__int_medical_claim_diagnosis", "compiled": true, "compiled_code": "\nwith  __dbt__cte___stg_medical_claim as (\n\n\nselect\n      medical_claim_id\n    , person_id\n    , claim_id\n    , claim_line_number\n    , claim_type\n    , encounter_group\n    , claim_start_date\n    , claim_end_date\n    , claim_line_start_date\n    , payer\n    , plan\n    , billing_id\n    , billing_name\n    , rendering_id\n    , rendering_name\n    , admission_date\n    , discharge_date\n    , bill_type_code\n    , revenue_center_code\n    , revenue_center_description\n    , place_of_service_code\n    , place_of_service_description\n    , hcpcs_code\n    , hcpcs_modifier_1\n    , hcpcs_modifier_2\n    , hcpcs_modifier_3\n    , hcpcs_modifier_4\n    , hcpcs_modifier_5\n    , paid_date\n    , paid_amount\n    , in_network_flag\n    , data_source\nfrom tuva.core.medical_claim\n\n\n),  __dbt__cte___stg_condition as (\n\nselect\n      condition_id\n    , person_id\n    , claim_id\n    , encounter_id\n    , recorded_date\n    , onset_date\n    , resolved_date\n    , status\n    , normalized_code_type\n    , normalized_code\n    , normalized_description\n    , condition_rank\n    , data_source\nfrom tuva.core.condition\n), staging as (\n\n    select\n          medical_claim.claim_id\n        , claim_condition.condition_rank as eob_diagnosis_sequence\n        , case\n            when lower(claim_condition.normalized_code_type) = 'icd-10-cm' then 'ICD10'\n            else 'ICD9'\n          end as eob_diagnosis_system\n        /* HEDIS valuesets require formatted diagnosis codes */\n        , case\n            when lower(claim_condition.normalized_code_type) = 'icd-10-cm'\n              and \n  length( claim_condition.normalized_code )\n > 3\n              then substring(claim_condition.normalized_code,1,3) || '.' || substring(claim_condition.normalized_code,4)\n            else claim_condition.normalized_code\n          end as eob_diagnosis_code\n        , replace(claim_condition.normalized_description,',','') as eob_diagnosis_display\n        , case\n            when claim_condition.condition_rank = 1 then 'principal'\n            else 'other'\n          end as eob_diagnosis_type_code\n    from __dbt__cte___stg_medical_claim as medical_claim\n        inner join __dbt__cte___stg_condition as claim_condition\n            on medical_claim.claim_id = claim_condition.claim_id\n    where medical_claim.claim_line_number = 1 /* filter to claim header */\n\n)\n\n/* create a json string for CSV export */\n\nselect\n    claim_id\n    , to_json(\n        array_agg(\n            object_construct(\n                'eobDiagnosisSequence',eob_diagnosis_sequence\n                , 'eobDiagnosisSystem',eob_diagnosis_system\n                , 'eobDiagnosisCode',eob_diagnosis_code\n                , 'eobDiagnosisDisplay',eob_diagnosis_display\n                , 'eobDiagnosisTypeCode',eob_diagnosis_type_code\n            )\n        )\n    ) as eob_diagnosis_list\nfrom staging\ngroup by claim_id\n", "relation_name": "tuva.fhir_preprocessing._int_medical_claim_diagnosis", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:28.722889Z", "completed_at": "2025-06-03T19:50:28.757511Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:28.758369Z", "completed_at": "2025-06-03T19:50:28.758377Z"}], "thread_id": "Thread-4", "execution_time": 0.047341108322143555, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.fhir_preprocessing__int_medical_claim_item_adjudication", "compiled": true, "compiled_code": "\nwith  __dbt__cte___stg_medical_claim as (\n\n\nselect\n      medical_claim_id\n    , person_id\n    , claim_id\n    , claim_line_number\n    , claim_type\n    , encounter_group\n    , claim_start_date\n    , claim_end_date\n    , claim_line_start_date\n    , payer\n    , plan\n    , billing_id\n    , billing_name\n    , rendering_id\n    , rendering_name\n    , admission_date\n    , discharge_date\n    , bill_type_code\n    , revenue_center_code\n    , revenue_center_description\n    , place_of_service_code\n    , place_of_service_description\n    , hcpcs_code\n    , hcpcs_modifier_1\n    , hcpcs_modifier_2\n    , hcpcs_modifier_3\n    , hcpcs_modifier_4\n    , hcpcs_modifier_5\n    , paid_date\n    , paid_amount\n    , in_network_flag\n    , data_source\nfrom tuva.core.medical_claim\n\n\n), adjudication_amount as (\n\n    select\n          claim_id\n        , claim_line_number\n        , 'ADJ_TYPE' as eob_item_adjudication_category_system\n        , 'benefit' as eob_item_adjudication_category_code\n        , 'USD' as eob_item_adjudication_amount_currency\n        /* required by HEDIS, cannot be <= $0 */\n        , case\n            when paid_amount <= 0 then cast(0.01 as numeric(28,6) )\n            else cast(paid_amount as numeric(28,6) )\n          end as eob_item_adjudication_amount_value\n    from __dbt__cte___stg_medical_claim\n\n)\n\n, adjudication_status as (\n    select\n          claim_id\n        , claim_line_number\n        , 'ADJ_STATUS' as eob_item_adjudication_category_system\n        , case\n            when in_network_flag = 1 then 'innetwork'\n            when in_network_flag = 0 then 'outofnetwork'\n            else 'other'\n          end as eob_item_adjudication_category_code\n        , 'USD' as eob_item_adjudication_amount_currency\n        /* required by HEDIS, cannot be <= $0 */\n        , case\n            when paid_amount <= 0 then cast(0.01 as numeric(28,6) )\n            else cast(paid_amount as numeric(28,6) )\n          end as eob_item_adjudication_amount_value\n    from __dbt__cte___stg_medical_claim\n)\n\n, unioned as (\n\n    select * from adjudication_amount\n    union all\n    select * from adjudication_status\n\n)\n\n/* create a json string for CSV export */\n\nselect\n    claim_id, claim_line_number\n    , to_json(\n        array_agg(\n            object_construct(\n                'eobItemAdjudicationCategorySystem',eob_item_adjudication_category_system\n                , 'eobItemAdjudicationCategoryCode',eob_item_adjudication_category_code\n                , 'eobItemAdjudicationAmountCurrency',eob_item_adjudication_amount_currency\n                , 'eobItemAdjudicationAmountValue',eob_item_adjudication_amount_value\n            )\n        )\n    ) as eob_item_adjudication_list\nfrom unioned\ngroup by claim_id, claim_line_number\n", "relation_name": "tuva.fhir_preprocessing._int_medical_claim_item_adjudication", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:28.741046Z", "completed_at": "2025-06-03T19:50:28.758853Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:28.775273Z", "completed_at": "2025-06-03T19:50:28.775280Z"}], "thread_id": "Thread-1", "execution_time": 0.05277371406555176, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.fhir_preprocessing__int_medical_claim_item_modifier", "compiled": true, "compiled_code": "\n/* unpivot hcpcs modifier codes into rows to be grouped into a json list for CSV export */\nwith  __dbt__cte___stg_medical_claim as (\n\n\nselect\n      medical_claim_id\n    , person_id\n    , claim_id\n    , claim_line_number\n    , claim_type\n    , encounter_group\n    , claim_start_date\n    , claim_end_date\n    , claim_line_start_date\n    , payer\n    , plan\n    , billing_id\n    , billing_name\n    , rendering_id\n    , rendering_name\n    , admission_date\n    , discharge_date\n    , bill_type_code\n    , revenue_center_code\n    , revenue_center_description\n    , place_of_service_code\n    , place_of_service_description\n    , hcpcs_code\n    , hcpcs_modifier_1\n    , hcpcs_modifier_2\n    , hcpcs_modifier_3\n    , hcpcs_modifier_4\n    , hcpcs_modifier_5\n    , paid_date\n    , paid_amount\n    , in_network_flag\n    , data_source\nfrom tuva.core.medical_claim\n\n\n), hcpcs_modifier_1 as (\n\n    select\n          claim_id\n        , claim_line_number\n        , 'CPT' as eob_item_modifier_system\n        , hcpcs_modifier_1 as eob_item_modifier_code\n    from __dbt__cte___stg_medical_claim\n    where hcpcs_modifier_1 is not null\n\n)\n\n, hcpcs_modifier_2 as (\n\n    select\n          claim_id\n        , claim_line_number\n        , 'CPT' as eob_item_modifier_system\n        , hcpcs_modifier_2 as eob_item_modifier_code\n    from __dbt__cte___stg_medical_claim\n    where hcpcs_modifier_2 is not null\n\n)\n\n, hcpcs_modifier_3 as (\n\n    select\n          claim_id\n        , claim_line_number\n        , 'CPT' as eob_item_modifier_system\n        , hcpcs_modifier_3 as eob_item_modifier_code\n    from __dbt__cte___stg_medical_claim\n    where hcpcs_modifier_3 is not null\n\n)\n\n, hcpcs_modifier_4 as (\n\n    select\n          claim_id\n        , claim_line_number\n        , 'CPT' as eob_item_modifier_system\n        , hcpcs_modifier_4 as eob_item_modifier_code\n    from __dbt__cte___stg_medical_claim\n    where hcpcs_modifier_4 is not null\n\n)\n\n, hcpcs_modifier_5 as (\n\n    select\n          claim_id\n        , claim_line_number\n        , 'CPT' as eob_item_modifier_system\n        , hcpcs_modifier_5 as eob_item_modifier_code\n    from __dbt__cte___stg_medical_claim\n    where hcpcs_modifier_5 is not null\n\n)\n\n, unioned as (\n\n    select * from hcpcs_modifier_1\n    union all\n    select * from hcpcs_modifier_2\n    union all\n    select * from hcpcs_modifier_3\n    union all\n    select * from hcpcs_modifier_4\n    union all\n    select * from hcpcs_modifier_5\n\n)\n\n/* create a json string for CSV export */\n\nselect\n    claim_id, claim_line_number\n    , to_json(\n        array_agg(\n            object_construct(\n                'eobItemModifierSystem',eob_item_modifier_system\n                , 'eobItemModifierCode',eob_item_modifier_code\n            )\n        )\n    ) as eob_item_modifier_list\nfrom unioned\ngroup by claim_id, claim_line_number\n", "relation_name": "tuva.fhir_preprocessing._int_medical_claim_item_modifier", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:28.759071Z", "completed_at": "2025-06-03T19:50:28.776959Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:28.795514Z", "completed_at": "2025-06-03T19:50:28.795524Z"}], "thread_id": "Thread-2", "execution_time": 0.03856611251831055, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.fhir_preprocessing__int_medical_claim_procedure", "compiled": true, "compiled_code": "\nwith  __dbt__cte___stg_procedure as (\n\nselect\n      procedure_id\n    , person_id\n    , claim_id\n    , encounter_id\n    , normalized_code_type\n    , normalized_code\n    , normalized_description\n    , source_code_type\n    , source_code\n    , source_description\n    , procedure_date\n    , practitioner_id\n    , data_source\nfrom tuva.core.procedure\n),  __dbt__cte___stg_medical_claim as (\n\n\nselect\n      medical_claim_id\n    , person_id\n    , claim_id\n    , claim_line_number\n    , claim_type\n    , encounter_group\n    , claim_start_date\n    , claim_end_date\n    , claim_line_start_date\n    , payer\n    , plan\n    , billing_id\n    , billing_name\n    , rendering_id\n    , rendering_name\n    , admission_date\n    , discharge_date\n    , bill_type_code\n    , revenue_center_code\n    , revenue_center_description\n    , place_of_service_code\n    , place_of_service_description\n    , hcpcs_code\n    , hcpcs_modifier_1\n    , hcpcs_modifier_2\n    , hcpcs_modifier_3\n    , hcpcs_modifier_4\n    , hcpcs_modifier_5\n    , paid_date\n    , paid_amount\n    , in_network_flag\n    , data_source\nfrom tuva.core.medical_claim\n\n\n), add_sequence as (\n\n    select\n          claim_id\n        , procedure_id\n        , row_number() over(\n            partition by claim_id\n            order by procedure_id\n          ) as eob_procedure_sequence\n    from __dbt__cte___stg_procedure\n\n)\n\n, staging as (\n\n    select\n          medical_claim.claim_id\n        , add_sequence.eob_procedure_sequence\n        , case\n            when lower(claim_procedure.normalized_code_type) = 'icd-10-pcs' then 'ICD10PCS'\n            else 'ICD9'\n          end as eob_procedure_system\n        , claim_procedure.normalized_code as eob_procedure_code\n        , replace(claim_procedure.normalized_description,',','') as eob_procedure_display\n        , case\n            when add_sequence.eob_procedure_sequence = 1 then 'principal'\n            else 'other'\n          end as eob_procedure_type_code\n    from __dbt__cte___stg_medical_claim as medical_claim\n        inner join __dbt__cte___stg_procedure as claim_procedure\n            on medical_claim.claim_id = claim_procedure.claim_id\n        inner join add_sequence\n            on claim_procedure.claim_id = add_sequence.claim_id\n            and claim_procedure.procedure_id = add_sequence.procedure_id\n    where medical_claim.claim_line_number = 1 /* filter to claim header */\n    and lower(claim_procedure.normalized_code_type) in ('icd-9-pcs', 'icd-10-pcs')\n\n)\n\n/* create a json string for CSV export */\n\nselect\n    claim_id\n    , to_json(\n        array_agg(\n            object_construct(\n                'eobProcedureSequence',eob_procedure_sequence\n                , 'eobProcedureSystem',eob_procedure_system\n                , 'eobProcedureCode',eob_procedure_code\n                , 'eobProcedureDisplay',eob_procedure_display\n                , 'eobProcedureTypeCode',eob_procedure_type_code\n            )\n        )\n    ) as eob_procedure_list\nfrom staging\ngroup by claim_id\n", "relation_name": "tuva.fhir_preprocessing._int_medical_claim_procedure", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:28.777211Z", "completed_at": "2025-06-03T19:50:28.817826Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:28.839302Z", "completed_at": "2025-06-03T19:50:28.839310Z"}], "thread_id": "Thread-4", "execution_time": 0.06361031532287598, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.fhir_preprocessing__int_medical_claim_supporting_info", "compiled": true, "compiled_code": "\nwith  __dbt__cte___stg_medical_claim as (\n\n\nselect\n      medical_claim_id\n    , person_id\n    , claim_id\n    , claim_line_number\n    , claim_type\n    , encounter_group\n    , claim_start_date\n    , claim_end_date\n    , claim_line_start_date\n    , payer\n    , plan\n    , billing_id\n    , billing_name\n    , rendering_id\n    , rendering_name\n    , admission_date\n    , discharge_date\n    , bill_type_code\n    , revenue_center_code\n    , revenue_center_description\n    , place_of_service_code\n    , place_of_service_description\n    , hcpcs_code\n    , hcpcs_modifier_1\n    , hcpcs_modifier_2\n    , hcpcs_modifier_3\n    , hcpcs_modifier_4\n    , hcpcs_modifier_5\n    , paid_date\n    , paid_amount\n    , in_network_flag\n    , data_source\nfrom tuva.core.medical_claim\n\n\n), admission_period as (\n\n    select\n          claim_id\n        , 'admissionperiod' as eob_supporting_info_category_code\n        , cast(null as TEXT ) as eob_supporting_info_code /* required for union */\n        , cast(null as TEXT ) as eob_supporting_info_system /* required for union */\n        , admission_date as eob_supporting_info_timing_start\n        , discharge_date as eob_supporting_info_timing_end\n    from __dbt__cte___stg_medical_claim\n    where claim_line_number = 1 /* filter to claim header */\n    and admission_date is not null\n\n)\n\n, type_of_bill as (\n\n    select\n          claim_id\n        , 'typeofbill' as eob_supporting_info_category_code\n        , bill_type_code as eob_supporting_info_code\n        , 'UBTOB' as eob_supporting_info_system\n        , cast(null as date) as eob_supporting_info_timing_start /* required for union */\n        , cast(null as date) as eob_supporting_info_timing_end /* required for union */\n    from __dbt__cte___stg_medical_claim\n    where claim_line_number = 1 /* filter to claim header */\n    and bill_type_code is not null\n\n)\n\n, unioned as (\n\n    select * from admission_period\n    union all\n    select * from type_of_bill\n\n)\n\n, add_sequence as (\n\n    select\n          claim_id\n        , eob_supporting_info_category_code\n        , eob_supporting_info_code\n        , eob_supporting_info_system\n        /* cast date to string for redshift support */\n        , cast(eob_supporting_info_timing_start as TEXT ) as eob_supporting_info_timing_start\n        , cast(eob_supporting_info_timing_end as TEXT ) as eob_supporting_info_timing_end\n        , row_number() over(\n            partition by claim_id\n            order by eob_supporting_info_category_code\n          ) as eob_supporting_info_sequence\n    from unioned\n\n)\n\n/* create a json string for CSV export */\n\nselect\n    claim_id\n    , to_json(\n        array_agg(\n            object_construct(\n                'eobSupportingInfoSequence',eob_supporting_info_sequence\n                , 'eobSupportingInfoCategoryCode',eob_supporting_info_category_code\n                , 'eobSupportingInfoCode',eob_supporting_info_code\n                , 'eobSupportingInfoSystem',eob_supporting_info_system\n                , 'eobSupportingInfoTimingStart',eob_supporting_info_timing_start\n                , 'eobSupportingInfoTimingEnd',eob_supporting_info_timing_end\n            )\n        )\n    ) as eob_supporting_info_list\nfrom add_sequence\ngroup by claim_id\n", "relation_name": "tuva.fhir_preprocessing._int_medical_claim_supporting_info", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:28.796304Z", "completed_at": "2025-06-03T19:50:28.834877Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:28.839768Z", "completed_at": "2025-06-03T19:50:28.839773Z"}], "thread_id": "Thread-1", "execution_time": 0.06314802169799805, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.fhir_preprocessing__int_medical_claim_total", "compiled": true, "compiled_code": "\nwith  __dbt__cte___stg_medical_claim as (\n\n\nselect\n      medical_claim_id\n    , person_id\n    , claim_id\n    , claim_line_number\n    , claim_type\n    , encounter_group\n    , claim_start_date\n    , claim_end_date\n    , claim_line_start_date\n    , payer\n    , plan\n    , billing_id\n    , billing_name\n    , rendering_id\n    , rendering_name\n    , admission_date\n    , discharge_date\n    , bill_type_code\n    , revenue_center_code\n    , revenue_center_description\n    , place_of_service_code\n    , place_of_service_description\n    , hcpcs_code\n    , hcpcs_modifier_1\n    , hcpcs_modifier_2\n    , hcpcs_modifier_3\n    , hcpcs_modifier_4\n    , hcpcs_modifier_5\n    , paid_date\n    , paid_amount\n    , in_network_flag\n    , data_source\nfrom tuva.core.medical_claim\n\n\n), total_amount as (\n\n    select\n          claim_id\n        , 'ADJ_TYPE' as eob_total_category_system\n        , 'benefit' as eob_total_category_code\n        , 'USD' as eob_total_amount_currency\n        /* required by HEDIS, cannot be <= $0 */\n        , case when paid_amount <= 0 then cast(0.01 as numeric(28,6) )\n            else cast(paid_amount as numeric(28,6) )\n          end as eob_total_amount_value\n    from __dbt__cte___stg_medical_claim\n    where claim_line_number = 1 /* filter to claim header */\n\n)\n\n, total_status as (\n\n    select\n          claim_id\n        , 'ADJ_STATUS' as eob_total_category_system\n        , case\n            when in_network_flag = 1 then 'innetwork'\n            when in_network_flag = 0 then 'outofnetwork'\n            else 'other'\n          end as eob_total_category_code\n        , 'USD' as eob_total_amount_currency\n        /* required by HEDIS, cannot be <= $0 */\n        , case when paid_amount <= 0 then cast(0.01 as numeric(28,6) )\n            else cast(paid_amount as numeric(28,6) )\n          end as eob_total_amount_value\n    from __dbt__cte___stg_medical_claim\n    where claim_line_number = 1 /* filter to claim header */\n\n)\n\n, unioned as (\n\n    select * from total_amount\n    union all\n    select * from total_status\n\n)\n\n/* create a json string for CSV export */\n\nselect\n    claim_id\n    , to_json(\n        array_agg(\n            object_construct(\n                'eobTotalCategorySystem',eob_total_category_system\n                , 'eobTotalCategoryCode',eob_total_category_code\n                , 'eobTotalAmountCurrency',eob_total_amount_currency\n                , 'eobTotalAmountValue',eob_total_amount_value\n            )\n        )\n    ) as eob_total_list\nfrom unioned\ngroup by claim_id\n", "relation_name": "tuva.fhir_preprocessing._int_medical_claim_total", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:28.818089Z", "completed_at": "2025-06-03T19:50:28.841132Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:28.841905Z", "completed_at": "2025-06-03T19:50:28.841910Z"}], "thread_id": "Thread-2", "execution_time": 0.024721860885620117, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.financial_pmpm__patient_spend_with_service_categories", "compiled": true, "compiled_code": "\n\nwith  __dbt__cte__financial_pmpm__stg_medical_claim as (\n\n\n\nselect\n    person_id\n    , claim_id\n    , claim_line_number\n    , claim_start_date\n    , claim_end_date\n    , service_category_1\n    , service_category_2\n    , paid_amount\n    , allowed_amount\n    , payer\n    , plan\n    , data_source\n    , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom tuva.core.medical_claim\n),  __dbt__cte__financial_pmpm__stg_pharmacy_claim as (\n\n\n\nselect\n    person_id\n    , dispensing_date\n    , paid_date\n    , paid_amount\n    , allowed_amount\n    , payer\n    , plan\n    , data_source\n    , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom tuva.core.pharmacy_claim\n), claims_with_service_categories as (\n  select\n      person_id\n    , payer\n    , plan\n    , service_category_1\n    , service_category_2\n    , coalesce(claim_start_date, claim_end_date) as claim_date\n    , paid_amount\n    , allowed_amount\n    , data_source\n  from __dbt__cte__financial_pmpm__stg_medical_claim\n)\n\n, medical_claims_year_month as (\n  select\n      person_id\n    , payer\n    , plan\n    , service_category_1\n    , service_category_2\n    , date_part('year', claim_date) || \n\n    case when 2 = 0\n        then ''\n    else\n        right(\n            '0' || date_part('month', claim_date),\n            2\n        )\n    end as year_month\n    , paid_amount\n    , allowed_amount\n    , data_source\n  from claims_with_service_categories\n)\n\n, rx_claims as (\n  select\n      person_id\n    , payer\n    , plan\n    , 'pharmacy' as service_category_1\n    , cast(null as TEXT) as service_category_2\n    , coalesce(dispensing_date, paid_date) as claim_date\n    , paid_amount\n    , allowed_amount\n    , data_source\n  from __dbt__cte__financial_pmpm__stg_pharmacy_claim\n)\n\n, rx_claims_year_month as (\n  select\n      person_id\n    , payer\n    , plan\n    , service_category_1\n    , service_category_2\n    , date_part('year', claim_date) || \n\n    case when 2 = 0\n        then ''\n    else\n        right(\n            '0' || date_part('month', claim_date),\n            2\n        )\n    end as year_month\n    , paid_amount\n    , allowed_amount\n    , data_source\n  from rx_claims\n)\n\n, combine_medical_and_rx as (\nselect *\nfrom medical_claims_year_month\n\nunion all\n\nselect *\nfrom rx_claims_year_month\n)\n\nselect\n    person_id\n  , year_month\n  , payer\n  , plan\n  , service_category_1\n  , service_category_2\n  , sum(paid_amount) as total_paid\n  , sum(allowed_amount) as total_allowed\n  , data_source\n  , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\n  from combine_medical_and_rx\ngroup by\n    person_id\n  , year_month\n  , payer\n  , plan\n  , service_category_1\n  , service_category_2\n  , data_source", "relation_name": "tuva.financial_pmpm._int_patient_spend_with_service_categories", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:28.842501Z", "completed_at": "2025-06-03T19:50:28.862699Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:28.876407Z", "completed_at": "2025-06-03T19:50:28.876417Z"}], "thread_id": "Thread-4", "execution_time": 0.03563284873962402, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.mart_review__claims_with_enrollment", "compiled": true, "compiled_code": "\n\nwith enrollment_stage as(\nselect\n    mc.data_source\n    , mc.year_month\n    , mc.payer\n    , mc.plan\n    , SUM(case when mm.person_id is not null then 1 else 0 end) as claims_with_enrollment\n    , COUNT(*) as claims\nfrom tuva.data_quality.mart_review__stg_medical_claim as mc\nleft outer join tuva.core.member_months as mm\n    on mc.member_month_key = mm.member_month_key\ngroup by mc.data_source\n, mc.year_month\n, mc.payer\n, mc.plan\n)\n\nselect\n    data_source\n    , year_month\n    , payer\n    , plan\n    , claims_with_enrollment\n    , claims\n    , CAST(claims_with_enrollment / claims as numeric(28,6) ) as percentage_claims_with_enrollment\n    , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom enrollment_stage", "relation_name": "tuva.data_quality.mart_review__claims_with_enrollment", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:28.849720Z", "completed_at": "2025-06-03T19:50:28.876834Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:28.897662Z", "completed_at": "2025-06-03T19:50:28.897670Z"}], "thread_id": "Thread-1", "execution_time": 0.05637717247009277, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.mart_review__members_with_claims", "compiled": true, "compiled_code": "\n\nwith medical_claim as (\n    select\n        data_source\n        , person_id\n        , year_month\n        , SUM(paid_amount) as paid_amount\n    from tuva.data_quality.mart_review__stg_medical_claim\n    group by data_source\n    , person_id\n    , year_month\n)\n\n,pharmacy_claim as (\n    select\n        data_source\n        , person_id\n        , year_month\n        , SUM(paid_amount) as paid_amount\n    from tuva.data_quality.mart_review__stg_pharmacy_claim\n    group by data_source\n    , person_id\n    , year_month\n)\n, final as(\nselect\n    mm.data_source\n    , mm.year_month\n    , SUM(case when mc.person_id is not null then 1 else 0 end) as members_with_medical_claims\n    , SUM(case when pc.person_id is not null then 1 else 0 end) as members_with_pharmacy_claims\n    , SUM(case when pc.person_id is not null then 1\n             when mc.person_id is not null then 1 else 0 end) as members_with_claims\n    , COUNT(*) as total_member_months\n    , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom tuva.core.member_months as mm\nleft outer join medical_claim as mc\n    on mm.person_id = mc.person_id\n    and mm.data_source = mc.data_source\n    and mm.year_month = mc.year_month\nleft outer join pharmacy_claim as pc\n    on mm.person_id = pc.person_id\n    and mm.data_source = pc.data_source\n    and mm.year_month = pc.year_month\ngroup by mm.data_source, mm.year_month\n)\n\nselect\n    data_source\n    , year_month\n    , members_with_medical_claims\n    , members_with_pharmacy_claims\n    , members_with_claims\n    , total_member_months\n    , CAST(members_with_claims/ total_member_months as numeric(28,6)) as percent_members_with_claims\n    , CAST(members_with_medical_claims/ total_member_months  as numeric(28,6)) as percent_members_with_medical_claims\n    , CAST(members_with_pharmacy_claims/ total_member_months as numeric(28,6))  as  percent_members_with_pharmacy_claims\nfrom final", "relation_name": "tuva.data_quality.mart_review__members_with_claims", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:28.856403Z", "completed_at": "2025-06-03T19:50:28.899316Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:28.900223Z", "completed_at": "2025-06-03T19:50:28.900228Z"}], "thread_id": "Thread-2", "execution_time": 0.04453396797180176, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.quality_measures__int_shared_exclusions_frailty", "compiled": true, "compiled_code": "\n\nwith  __dbt__cte___stg_patient as (\n\nselect\n      person_id\n    , sex\n    , birth_date\n    , death_date\n    , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom tuva.core.patient\n),  __dbt__cte___stg_condition as (\n\nselect\n      person_id\n    , claim_id\n    , encounter_id\n    , recorded_date\n    , source_code_type\n    , source_code\n    , normalized_code_type\n    , normalized_code\n    , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom tuva.core.condition\n),  __dbt__cte___stg_medical_claim as (\n\n\nselect\n      person_id\n    , claim_id\n    , claim_start_date\n    , claim_end_date\n    , place_of_service_code\n    , hcpcs_code\n    , hcpcs_modifier_1\n    , hcpcs_modifier_2\n    , hcpcs_modifier_3\n    , hcpcs_modifier_4\n    , hcpcs_modifier_5\n    , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom tuva.core.medical_claim\n\n\n),  __dbt__cte___stg_observation as (\n\n\nselect\n      person_id\n    , encounter_id\n    , observation_date\n    , result\n    , source_code_type\n    , source_code\n    , normalized_code_type\n    , normalized_code\n    , normalized_description\n    , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom tuva.core.observation\n\n\n),  __dbt__cte___stg_procedure as (\n\nselect\n      person_id\n    , encounter_id\n    , procedure_date\n    , source_code_type\n    , source_code\n    , normalized_code_type\n    , normalized_code\n    , modifier_1\n    , modifier_2\n    , modifier_3\n    , modifier_4\n    , modifier_5\n    , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom tuva.core.procedure\n), patients as (\n\n    select\n          person_id\n    from __dbt__cte___stg_patient\n\n)\n\n, exclusion_codes as (\n\n    select\n          code\n        , code_system\n        , concept_name\n    from tuva.quality_measures._value_set_codes\n    where lower(concept_name) in (\n          'frailty device'\n        , 'frailty diagnosis'\n        , 'frailty encounter'\n        , 'frailty symptom'\n    )\n\n)\n\n, conditions as (\n\n    select\n          person_id\n        , recorded_date\n        , coalesce(\n              normalized_code_type\n            , case\n                when lower(source_code_type) = 'snomed' then 'snomed-ct'\n                else lower(source_code_type)\n              end\n          ) as code_type\n        , coalesce(\n              normalized_code\n            , source_code\n          ) as code\n    from __dbt__cte___stg_condition\n\n)\n\n, medical_claim as (\n\n    select\n          person_id\n        , claim_start_date\n        , claim_end_date\n        , hcpcs_code\n        , place_of_service_code\n    from __dbt__cte___stg_medical_claim\n\n)\n\n, observations as (\n\n    select\n          person_id\n        , observation_date\n        , coalesce(\n              normalized_code_type\n            , case\n                when lower(source_code_type) = 'cpt' then 'hcpcs'\n                when lower(source_code_type) = 'snomed' then 'snomed-ct'\n                else lower(source_code_type)\n              end\n          ) as code_type\n        , coalesce(\n              normalized_code\n            , source_code\n          ) as code\n    from __dbt__cte___stg_observation\n\n)\n\n, procedures as (\n\n    select\n          person_id\n        , procedure_date\n        , coalesce(\n              normalized_code_type\n            , case\n                when lower(source_code_type) = 'cpt' then 'hcpcs'\n                when lower(source_code_type) = 'snomed' then 'snomed-ct'\n                else lower(source_code_type)\n              end\n          ) as code_type\n        , coalesce(\n              normalized_code\n            , source_code\n          ) as code\n    from __dbt__cte___stg_procedure\n\n)\n\n, condition_exclusions as (\n\n    select\n          conditions.person_id\n        , conditions.recorded_date\n        , exclusion_codes.concept_name\n    from conditions\n         inner join exclusion_codes\n             on conditions.code = exclusion_codes.code\n             and conditions.code_type = exclusion_codes.code_system\n\n)\n\n, med_claim_exclusions as (\n\n    select\n          medical_claim.person_id\n        , medical_claim.claim_start_date\n        , medical_claim.claim_end_date\n        , medical_claim.hcpcs_code\n        , exclusion_codes.concept_name\n    from medical_claim\n         inner join exclusion_codes\n            on medical_claim.hcpcs_code = exclusion_codes.code\n    where exclusion_codes.code_system = 'hcpcs'\n\n)\n\n, observation_exclusions as (\n\n    select\n          observations.person_id\n        , observations.observation_date\n        , exclusion_codes.concept_name\n    from observations\n         inner join exclusion_codes\n             on observations.code = exclusion_codes.code\n             and observations.code_type = exclusion_codes.code_system\n\n)\n\n, procedure_exclusions as (\n\n    select\n          procedures.person_id\n        , procedures.procedure_date\n        , exclusion_codes.concept_name\n    from procedures\n         inner join exclusion_codes\n             on procedures.code = exclusion_codes.code\n             and procedures.code_type = exclusion_codes.code_system\n\n)\n\n, patients_with_frailty as (\n\n    select\n          patients.person_id\n        , condition_exclusions.recorded_date as exclusion_date\n        , condition_exclusions.concept_name as exclusion_reason\n    from patients\n         inner join condition_exclusions\n            on patients.person_id = condition_exclusions.person_id\n\n    union all\n\n    select\n          patients.person_id\n        , coalesce(\n              med_claim_exclusions.claim_start_date\n            , med_claim_exclusions.claim_end_date\n          ) as exclusion_date\n        , med_claim_exclusions.concept_name as exclusion_reason\n    from patients\n         inner join med_claim_exclusions\n            on patients.person_id = med_claim_exclusions.person_id\n\n    union all\n\n    select\n          patients.person_id\n        , observation_exclusions.observation_date as exclusion_date\n        , observation_exclusions.concept_name as exclusion_reason\n    from patients\n         inner join observation_exclusions\n            on patients.person_id = observation_exclusions.person_id\n\n    union all\n\n    select\n          patients.person_id\n        , procedure_exclusions.procedure_date as exclusion_date\n        , procedure_exclusions.concept_name as exclusion_reason\n    from patients\n         inner join procedure_exclusions\n            on patients.person_id = procedure_exclusions.person_id\n\n)\n\nselect\n      person_id\n    , exclusion_date\n    , exclusion_reason\n    , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom patients_with_frailty", "relation_name": "tuva.quality_measures._int_shared_exclusions_frailty", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:29.027614Z", "completed_at": "2025-06-03T19:50:29.044668Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:29.044921Z", "completed_at": "2025-06-03T19:50:29.044927Z"}], "thread_id": "Thread-1", "execution_time": 0.14500188827514648, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.quality_measures__int_shared_exclusions_institutional_snp", "compiled": true, "compiled_code": "\n\n/*\n    patients in institutional special needs plans (snp)\n    or residing in long term care\n\n    while referencing this model, patients greater or equal than 66 years of age should be taken\n\n    filtering out age from this model has been stripped out as different measures calculate age varingly\n\n    future enhancement: group claims into encounters\n*/\n\nwith  __dbt__cte___stg_patient as (\n\nselect\n      person_id\n    , sex\n    , birth_date\n    , death_date\n    , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom tuva.core.patient\n),  __dbt__cte___stg_medical_claim as (\n\n\nselect\n      person_id\n    , claim_id\n    , claim_start_date\n    , claim_end_date\n    , place_of_service_code\n    , hcpcs_code\n    , hcpcs_modifier_1\n    , hcpcs_modifier_2\n    , hcpcs_modifier_3\n    , hcpcs_modifier_4\n    , hcpcs_modifier_5\n    , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom tuva.core.medical_claim\n\n\n), patients as (\n\n    select\n          person_id\n    from __dbt__cte___stg_patient\n\n)\n\n, medical_claim as (\n\n    select\n          person_id\n        , claim_start_date\n        , claim_end_date\n        , hcpcs_code\n        , place_of_service_code\n    from __dbt__cte___stg_medical_claim\n\n)\n\n, exclusions as (\n\n    select\n          patients.person_id\n        , coalesce(\n              medical_claim.claim_start_date\n            , medical_claim.claim_end_date\n          ) as exclusion_date\n        , 'institutional or long term care' as exclusion_reason\n    from patients\n         inner join medical_claim\n         on patients.person_id = medical_claim.person_id\n    where place_of_service_code in ('32', '33', '34', '54', '56')\n    and datediff(\n        day,\n        medical_claim.claim_start_date,\n        medical_claim.claim_end_date\n        ) >= 90\n\n)\n\nselect\n      person_id\n    , exclusion_date\n    , exclusion_reason\n    , 'institutional_snp' as exclusion_type\n    , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom exclusions", "relation_name": "tuva.quality_measures._int_shared_exclusions_institutional_snp", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:28.900642Z", "completed_at": "2025-06-03T19:50:29.051673Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:29.052167Z", "completed_at": "2025-06-03T19:50:29.052171Z"}], "thread_id": "Thread-4", "execution_time": 0.1538083553314209, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.quality_measures__int_shared_exclusions_hospice_palliative", "compiled": true, "compiled_code": "\n\n/*\nDENOMINATOR EXCLUSIONS:\nPatient was provided hospice services any time during the measurement period: G9687\n*/\n\n\nwith  __dbt__cte___stg_condition as (\n\nselect\n      person_id\n    , claim_id\n    , encounter_id\n    , recorded_date\n    , source_code_type\n    , source_code\n    , normalized_code_type\n    , normalized_code\n    , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom tuva.core.condition\n),  __dbt__cte___stg_medical_claim as (\n\n\nselect\n      person_id\n    , claim_id\n    , claim_start_date\n    , claim_end_date\n    , place_of_service_code\n    , hcpcs_code\n    , hcpcs_modifier_1\n    , hcpcs_modifier_2\n    , hcpcs_modifier_3\n    , hcpcs_modifier_4\n    , hcpcs_modifier_5\n    , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom tuva.core.medical_claim\n\n\n),  __dbt__cte___stg_observation as (\n\n\nselect\n      person_id\n    , encounter_id\n    , observation_date\n    , result\n    , source_code_type\n    , source_code\n    , normalized_code_type\n    , normalized_code\n    , normalized_description\n    , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom tuva.core.observation\n\n\n),  __dbt__cte___stg_procedure as (\n\nselect\n      person_id\n    , encounter_id\n    , procedure_date\n    , source_code_type\n    , source_code\n    , normalized_code_type\n    , normalized_code\n    , modifier_1\n    , modifier_2\n    , modifier_3\n    , modifier_4\n    , modifier_5\n    , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom tuva.core.procedure\n), exclusion_codes as (\n\n    select\n          code\n        , case code_system\n            when 'SNOMEDCT' then 'snomed-ct'\n            when 'ICD9CM' then 'icd-9-cm'\n            when 'ICD10CM' then 'icd-10-cm'\n            when 'CPT' then 'hcpcs'\n            when 'ICD10PCS' then 'icd-10-pcs'\n          else lower(code_system) end as code_system\n        , concept_name\n    from tuva.quality_measures._value_set_codes\n    where lower(concept_name) in (\n            'hospice encounter'\n          , 'hospice care ambulatory'\n          , 'hospice diagnosis'\n          , 'palliative care encounter'\n          , 'palliative care diagnosis'\n          , 'palliative care intervention'\n    )\n)\n\n, conditions as (\n\n    select\n          person_id\n        , claim_id\n        , recorded_date\n        , coalesce(\n              normalized_code_type\n            , case\n                when lower(source_code_type) = 'snomed' then 'snomed-ct'\n                else lower(source_code_type)\n              end\n          ) as code_type\n        , coalesce(\n              normalized_code\n            , source_code\n          ) as code\n    from __dbt__cte___stg_condition\n\n)\n\n, medical_claim as (\n\n    select\n          person_id\n        , claim_id\n        , claim_start_date\n        , claim_end_date\n        , hcpcs_code\n        , place_of_service_code\n    from __dbt__cte___stg_medical_claim\n\n)\n\n, observations as (\n\n    select\n          person_id\n        , observation_date\n        , coalesce(\n              normalized_code_type\n            , case\n                when lower(source_code_type) = 'cpt' then 'hcpcs'\n                when lower(source_code_type) = 'snomed' then 'snomed-ct'\n                else lower(source_code_type)\n              end\n          ) as code_type\n        , coalesce(\n              normalized_code\n            , source_code\n          ) as code\n    from __dbt__cte___stg_observation\n\n)\n\n, procedures as (\n\n    select\n          person_id\n        , procedure_date\n        , coalesce(\n              normalized_code_type\n            , case\n                when lower(source_code_type) = 'cpt' then 'hcpcs'\n                when lower(source_code_type) = 'snomed' then 'snomed-ct'\n                else lower(source_code_type)\n              end\n          ) as code_type\n        , coalesce(\n              normalized_code\n            , source_code\n          ) as code\n    from __dbt__cte___stg_procedure\n\n)\n\n, condition_exclusions as (\n\n    select\n          conditions.person_id\n        , conditions.claim_id\n        , conditions.recorded_date\n        , exclusion_codes.concept_name as concept_name\n    from conditions\n         inner join exclusion_codes\n            on conditions.code = exclusion_codes.code\n            and conditions.code_type = exclusion_codes.code_system\n\n)\n\n, med_claim_exclusions as (\n\n    select\n          medical_claim.person_id\n        , medical_claim.claim_id\n        , medical_claim.claim_start_date\n        , medical_claim.claim_end_date\n        , medical_claim.hcpcs_code\n        , exclusion_codes.concept_name as concept_name\n    from medical_claim\n         inner join exclusion_codes\n            on medical_claim.hcpcs_code = exclusion_codes.code\n    where exclusion_codes.code_system = 'hcpcs'\n\n)\n\n, observation_exclusions as (\n\n    select\n          observations.person_id\n        , observations.observation_date\n        , exclusion_codes.concept_name as concept_name\n    from observations\n    inner join exclusion_codes\n        on observations.code = exclusion_codes.code\n        and observations.code_type = exclusion_codes.code_system\n\n)\n\n, procedure_exclusions as (\n\n    select\n          procedures.person_id\n        , procedures.procedure_date\n        , exclusion_codes.concept_name as concept_name\n    from procedures\n         inner join exclusion_codes\n             on procedures.code = exclusion_codes.code\n             and procedures.code_type = exclusion_codes.code_system\n\n)\n\n, patients_with_exclusions as (\n\n    select person_id\n        , recorded_date as exclusion_date\n        , concept_name as exclusion_reason\n    from condition_exclusions\n\n    union all\n\n    select person_id\n        , coalesce(claim_end_date, claim_start_date) as exclusion_date\n        , concept_name as exclusion_reason\n    from med_claim_exclusions\n\n    union all\n\n    select person_id\n        , observation_date as exclusion_date\n        , concept_name as exclusion_reason\n    from observation_exclusions\n\n    union all\n\n    select person_id\n        , procedure_date as exclusion_date\n        , concept_name as exclusion_reason\n    from procedure_exclusions\n\n)\n\nselect\n      person_id\n    , exclusion_date\n    , exclusion_reason\n    , 'hospice_palliative' as exclusion_type\n    , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom patients_with_exclusions", "relation_name": "tuva.quality_measures._int_shared_exclusions_hospice_palliative", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:29.039140Z", "completed_at": "2025-06-03T19:50:29.051912Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:29.052557Z", "completed_at": "2025-06-03T19:50:29.052560Z"}], "thread_id": "Thread-2", "execution_time": 0.014239072799682617, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.unique_core__location_location_id.dc12ec8d3a", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    location_id as unique_field,\n    count(*) as n_records\n\nfrom tuva.core.location\nwhere location_id is not null\ngroup by location_id\nhaving count(*) > 1\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:29.045954Z", "completed_at": "2025-06-03T19:50:29.053155Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:29.053923Z", "completed_at": "2025-06-03T19:50:29.053926Z"}], "thread_id": "Thread-1", "execution_time": 0.008454084396362305, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.mart_review__pharmacy", "compiled": true, "compiled_code": "\n\nselect\n    p.claim_id\n  , p.claim_line_number\n  , p.person_id\n  , p.data_source\n  , p.person_id || '|' || p.data_source as patient_source_key\n  , p.ndc_code\n  , coalesce(n.fda_description, n.rxnorm_description) as ndc_description\n  , p.paid_amount\n  , p.allowed_amount\n  , p.prescribing_provider_id\n  , p.prescribing_provider_name\n  , prac.specialty as prescribing_specialty\n  , p.dispensing_provider_id\n  , p.dispensing_provider_name\n  , p.paid_date\n  , p.dispensing_date\n  , p.days_supply\n  , case \n      when p.days_supply = 0 then null\n      else p.paid_amount / p.days_supply\n    end as cost_per_day\n  , case \n      when p.days_supply = 0 then null\n      else (p.paid_amount / p.days_supply) * 30\n    end as thirty_day_equivalent_cost\n  , case \n      when p.days_supply = 0 then 0\n      when (p.paid_amount / p.days_supply) * 30 >= 950 then 1\n      else 0 \n    end as specialty_tier -- $950 is the threshold set by CMS for CY 2024\n  , n.rxcui\n  , n.rxnorm_description\n  , r.brand_name\n  , r.brand_vs_generic\n  , r.ingredient_name\n  , a.atc_1_name\n  , a.atc_2_name\n  , a.atc_3_name\n  , a.atc_4_name\n  , pe.generic_available_total_opportunity\n  , pe.generic_average_cost_per_unit * p.quantity as generic_cost_at_units\n  , pe.brand_cost_per_unit * p.quantity as brand_paid_amount\n  , pe.generic_available\n  , pe.generic_available_sk\n  , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom tuva.core.pharmacy_claim as p\nleft outer join tuva.terminology.ndc as n \n  on p.ndc_code = n.ndc\nleft outer join tuva.terminology.rxnorm_brand_generic as r \n  on n.rxcui = r.product_rxcui\nleft outer join tuva.terminology.rxnorm_to_atc as a \n  on n.rxcui = a.rxcui\nleft outer join tuva.core.practitioner as prac \n  on p.prescribing_provider_id = prac.practitioner_id\nleft outer join tuva.pharmacy.pharmacy_claim_expanded as pe \n  on p.data_source = pe.data_source\n  and p.claim_id = pe.claim_id\n  and p.claim_line_number = pe.claim_line_number", "relation_name": "tuva.data_quality.mart_review__pharmacy", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:29.060541Z", "completed_at": "2025-06-03T19:50:29.076776Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:29.077355Z", "completed_at": "2025-06-03T19:50:29.077365Z"}], "thread_id": "Thread-2", "execution_time": 0.023220062255859375, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.hcc_suspecting__int_patient_hcc_history", "compiled": true, "compiled_code": "\n\nwith all_conditions as (\n\n    select\n          person_id\n        , data_source\n        , recorded_date\n        , condition_type\n        , icd_10_cm_code\n        , hcc_code\n        , hcc_description\n    from tuva.hcc_suspecting._int_all_conditions\n    where hcc_code is not null\n\n)\n\n, hcc_grouped as (\n\n    select\n          person_id\n        , data_source\n        , hcc_code\n        , hcc_description\n        , min(recorded_date) as first_recorded\n        , max(recorded_date) as last_recorded\n    from all_conditions\n    where hcc_code is not null\n    group by\n          person_id\n        , hcc_code\n        , hcc_description\n        , data_source\n\n)\n\n, hcc_billed as (\n\n    select\n          person_id\n        , data_source\n        , hcc_code\n        , hcc_description\n        , max(recorded_date) as last_billed\n    from all_conditions\n    where hcc_code is not null\n    and lower(condition_type) <> 'problem'\n    group by\n          person_id\n        , hcc_code\n        , hcc_description\n        , data_source\n\n)\n\n, add_flag as (\n\n    select\n          hcc_grouped.person_id\n        , hcc_grouped.data_source\n        , hcc_grouped.hcc_code\n        , hcc_grouped.hcc_description\n        , hcc_grouped.first_recorded\n        , hcc_grouped.last_recorded\n        , hcc_billed.last_billed\n        , case\n            when date_part('year', hcc_billed.last_billed) = date_part('year', convert_timezone('UTC', current_timestamp()))\n            then 1\n            else 0\n          end as current_year_billed\n\n    from hcc_grouped\n         left outer join hcc_billed\n         on hcc_grouped.person_id = hcc_billed.person_id\n         and hcc_grouped.hcc_code = hcc_billed.hcc_code\n         and hcc_grouped.data_source = hcc_billed.data_source\n\n)\n\n, all_conditions_with_flag as (\n\n    select distinct\n          all_conditions.person_id\n        , all_conditions.data_source\n        , all_conditions.recorded_date\n        , all_conditions.condition_type\n        , all_conditions.icd_10_cm_code\n        , all_conditions.hcc_code\n        , all_conditions.hcc_description\n        , add_flag.first_recorded\n        , add_flag.last_recorded\n        , add_flag.last_billed\n        , add_flag.current_year_billed\n        , cast('Prior coding history' as TEXT) as reason\n        , icd_10_cm_code || case when last_billed is not null then ' last billed on ' || last_billed when last_billed is null and last_recorded is not null then ' last recorded on ' || last_recorded else ' (missing recorded and billing dates) ' end as contributing_factor\n        , coalesce(last_billed, last_recorded) as condition_date\n    from all_conditions\n         left outer join add_flag\n            on all_conditions.person_id = add_flag.person_id\n            and all_conditions.hcc_code = add_flag.hcc_code\n            and all_conditions.data_source = add_flag.data_source\n\n)\n\n, add_standard_fields as (\n\n    select distinct\n          person_id\n        , data_source\n        , recorded_date\n        , condition_type\n        , icd_10_cm_code\n        , hcc_code\n        , hcc_description\n        , first_recorded\n        , last_recorded\n        , last_billed\n        , current_year_billed\n        , 'Prior coding history' as reason\n        , icd_10_cm_code || case when last_billed is not null then ' last billed on ' || last_billed when last_billed is null and last_recorded is not null then ' last recorded on ' || last_recorded else ' (missing recorded and billing dates) ' end as contributing_factor\n        , coalesce(last_billed, last_recorded) as suspect_date\n    from all_conditions_with_flag\n\n)\n\n, add_data_types as (\n\n    select\n          cast(person_id as TEXT) as person_id\n        , cast(data_source as TEXT) as data_source\n        , cast(recorded_date as date) as recorded_date\n        , cast(condition_type as TEXT) as condition_type\n        , cast(icd_10_cm_code as TEXT) as icd_10_cm_code\n        , cast(hcc_code as TEXT) as hcc_code\n        , cast(hcc_description as TEXT) as hcc_description\n        , cast(first_recorded as date) as first_recorded\n        , cast(last_recorded as date) as last_recorded\n        , cast(last_billed as date) as last_billed\n        \n            , cast(current_year_billed as boolean) as current_year_billed\n        \n        , cast(reason as TEXT) as reason\n        , cast(contributing_factor as TEXT) as contributing_factor\n        , cast(suspect_date as date) as suspect_date\n    from add_standard_fields\n\n)\n\nselect\n      person_id\n    , data_source\n    , recorded_date\n    , condition_type\n    , icd_10_cm_code\n    , hcc_code\n    , hcc_description\n    , first_recorded\n    , last_recorded\n    , last_billed\n    , current_year_billed\n    , reason\n    , contributing_factor\n    , suspect_date\n    , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom add_data_types", "relation_name": "tuva.hcc_suspecting._int_patient_hcc_history", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:29.055109Z", "completed_at": "2025-06-03T19:50:29.078908Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:29.079995Z", "completed_at": "2025-06-03T19:50:29.080005Z"}], "thread_id": "Thread-4", "execution_time": 0.02643299102783203, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.unique_core__practitioner_practitioner_id.24d565a6b6", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    practitioner_id as unique_field,\n    count(*) as n_records\n\nfrom tuva.core.practitioner\nwhere practitioner_id is not null\ngroup by practitioner_id\nhaving count(*) > 1\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:29.070304Z", "completed_at": "2025-06-03T19:50:29.081130Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:29.083797Z", "completed_at": "2025-06-03T19:50:29.083808Z"}], "thread_id": "Thread-1", "execution_time": 0.0236361026763916, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.not_null_chronic_conditions__tuva_chronic_conditions_wide_person_id.ddc3902157", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect person_id\nfrom tuva.chronic_conditions.tuva_chronic_conditions_wide\nwhere person_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:29.086529Z", "completed_at": "2025-06-03T19:50:29.122833Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:29.135611Z", "completed_at": "2025-06-03T19:50:29.135622Z"}], "thread_id": "Thread-2", "execution_time": 0.05353069305419922, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.unique_chronic_conditions__tuva_chronic_conditions_wide_person_id.e237644a97", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    person_id as unique_field,\n    count(*) as n_records\n\nfrom tuva.chronic_conditions.tuva_chronic_conditions_wide\nwhere person_id is not null\ngroup by person_id\nhaving count(*) > 1\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:29.123299Z", "completed_at": "2025-06-03T19:50:29.149180Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:29.151656Z", "completed_at": "2025-06-03T19:50:29.151662Z"}], "thread_id": "Thread-1", "execution_time": 0.05853700637817383, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.not_null_chronic_conditions__cms_chronic_conditions_all_claim_id.84015aec48", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect claim_id\nfrom tuva.chronic_conditions._int_cms_chronic_condition_all\nwhere claim_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:29.093650Z", "completed_at": "2025-06-03T19:50:29.152044Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:29.152945Z", "completed_at": "2025-06-03T19:50:29.152948Z"}], "thread_id": "Thread-4", "execution_time": 0.06716084480285645, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.chronic_conditions__cms_chronic_conditions_oud", "compiled": true, "compiled_code": "with  __dbt__cte__cms_chronic_conditions__stg_core__condition as (\n\n\nselect\n      claim_id\n    , person_id\n    , recorded_date\n    , normalized_code_type\n    , normalized_code\n    , data_source\n    , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom tuva.core.condition\nwhere claim_id is not null\n),  __dbt__cte__cms_chronic_conditions__stg_core__pharmacy_claim as (\n\n\nselect\n      claim_id\n    , person_id\n    , paid_date\n    , ndc_code\n    , data_source\n    , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom tuva.core.pharmacy_claim\n),  __dbt__cte__cms_chronic_conditions__stg_core__procedure as (\n\n\nselect\n      claim_id\n    , person_id\n    , procedure_date\n    , normalized_code_type\n    , normalized_code\n    , data_source\n    , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom tuva.core.procedure\nwhere claim_id is not null\n), chronic_conditions as (\n\n    select * from tuva.chronic_conditions._value_set_cms_chronic_conditions_hierarchy\n    where condition = 'Opioid Use Disorder (OUD)'\n\n)\n\n, patient_conditions as (\n\n    select\n          person_id\n        , claim_id\n        , recorded_date as start_date\n        , normalized_code_type as code_type\n        , replace(normalized_code, '.', '') as code\n        , data_source\n    from __dbt__cte__cms_chronic_conditions__stg_core__condition\n\n)\n\n, patient_medications as (\n\n    select\n          person_id\n        , claim_id\n        , paid_date as start_date\n        , replace(ndc_code, '.', '') as code\n        , data_source\n    from __dbt__cte__cms_chronic_conditions__stg_core__pharmacy_claim\n\n)\n\n, patient_procedures as (\n\n    select\n          person_id\n        , claim_id\n        , procedure_date as start_date\n        , normalized_code_type as code_type\n        , replace(normalized_code, '.', '') as code\n        , data_source\n    from __dbt__cte__cms_chronic_conditions__stg_core__procedure\n\n)\n\n, inclusions_diagnosis as (\n\n    select\n          patient_conditions.person_id\n        , patient_conditions.claim_id\n        , patient_conditions.start_date\n        , patient_conditions.data_source\n        , chronic_conditions.chronic_condition_type\n        , chronic_conditions.condition_category\n        , chronic_conditions.condition\n    from patient_conditions\n         inner join chronic_conditions\n             on patient_conditions.code = chronic_conditions.code\n    where chronic_conditions.inclusion_type = 'Include'\n    and chronic_conditions.code_system = 'ICD-10-CM'\n\n)\n\n, inclusions_procedure as (\n\n    select\n          patient_procedures.person_id\n        , patient_procedures.claim_id\n        , patient_procedures.start_date\n        , patient_procedures.data_source\n        , chronic_conditions.chronic_condition_type\n        , chronic_conditions.condition_category\n        , chronic_conditions.condition\n    from patient_procedures\n         inner join chronic_conditions\n             on patient_procedures.code = chronic_conditions.code\n    where chronic_conditions.inclusion_type = 'Include'\n    and chronic_conditions.code_system in ('ICD-10-PCS', 'HCPCS')\n\n)\n\n/*\n    Exclusion logic: Naltrexone NDCs are excluded if there is evidence of an\n    alcohol or other drug use disorder where opioid DX is not present\n\n    This CTE excludes medication encounters with the exception codes for\n    Naltrexone. Those encounters will be evaluated separately.\n*/\n, inclusions_medication as (\n\n    select\n          patient_medications.person_id\n        , patient_medications.claim_id\n        , patient_medications.start_date\n        , patient_medications.data_source\n        , chronic_conditions.chronic_condition_type\n        , chronic_conditions.condition_category\n        , chronic_conditions.condition\n    from patient_medications\n         inner join chronic_conditions\n             on patient_medications.code = chronic_conditions.code\n    where chronic_conditions.inclusion_type = 'Include'\n    and chronic_conditions.code_system = 'NDC'\n    and chronic_conditions.code not in ('00056001122', '00056001130', '00056001170', '00056007950', '00056008050', '00185003901', '00185003930', '00406009201', '00406009203', '00406117001', '00406117003', '00555090201', '00555090202', '00904703604', '16729008101', '16729008110', '42291063230', '43063059115', '47335032683', '47335032688', '50090286600', '50436010501', '51224020630', '51224020650', '51285027501', '51285027502', '52152010502', '52152010504', '52152010530', '54868557400', '63459030042', '63629104601', '63629104701', '65694010003', '65694010010', '65757030001', '65757030202', '68084029111', '68084029121', '68094085362', '68115068030')\n\n)\n\n/*\n    Exclusion logic: Naltrexone NDCs are excluded if there is evidence of an\n    alcohol or other drug use disorder where opioid DX is not present\n\n    This CTE includes patients with evidence of the chronic conditions Alcohol\n    Use Disorders or Drug Use Disorders.\n*/\n, exclusions_other_chronic_conditions as (\n\n    select distinct person_id\n    from tuva.chronic_conditions._int_cms_chronic_condition_all\n    where condition in (\n          'Alcohol Use Disorders'\n        , 'Drug Use Disorders'\n    )\n\n)\n\n/*\n    Exclusion logic: Naltrexone NDCs are excluded if there is evidence of an\n    alcohol or other drug use disorder where opioid DX is not present\n\n    This CTE creates the exclusion list which consists of patients with\n    medication encounters for Naltrexone having Alcohol Use Disorder or Drug\n    Use Disorder and missing the Opioid Use Disorder diagnosis codes.\n*/\n, exclusions_medication as (\n    select distinct\n          patient_medications.person_id\n    from patient_medications\n         inner join chronic_conditions\n             on patient_medications.code = chronic_conditions.code\n         inner join exclusions_other_chronic_conditions\n             on patient_medications.person_id = exclusions_other_chronic_conditions.person_id\n         left outer join inclusions_diagnosis\n             on patient_medications.person_id = inclusions_diagnosis.person_id\n    where chronic_conditions.inclusion_type = 'Include'\n    and chronic_conditions.code_system = 'NDC'\n    and chronic_conditions.code in ('00056001122', '00056001130', '00056001170', '00056007950', '00056008050', '00185003901', '00185003930', '00406009201', '00406009203', '00406117001', '00406117003', '00555090201', '00555090202', '00904703604', '16729008101', '16729008110', '42291063230', '43063059115', '47335032683', '47335032688', '50090286600', '50436010501', '51224020630', '51224020650', '51285027501', '51285027502', '52152010502', '52152010504', '52152010530', '54868557400', '63459030042', '63629104601', '63629104701', '65694010003', '65694010010', '65757030001', '65757030202', '68084029111', '68084029121', '68094085362', '68115068030')\n    and inclusions_diagnosis.person_id is null\n\n)\n\n\n, inclusions_unioned as (\n\n    select * from inclusions_diagnosis\n    union distinct\n    select * from inclusions_procedure\n    union distinct\n    select * from inclusions_medication\n\n)\n\n\nselect distinct\n      cast(inclusions_unioned.person_id as TEXT) as person_id\n    , cast(inclusions_unioned.claim_id as TEXT) as claim_id\n    , cast(inclusions_unioned.start_date as date) as start_date\n    , cast(inclusions_unioned.chronic_condition_type as TEXT) as chronic_condition_type\n    , cast(inclusions_unioned.condition_category as TEXT) as condition_category\n    , cast(inclusions_unioned.condition as TEXT) as condition\n    , cast(inclusions_unioned.data_source as TEXT) as data_source\n    , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom inclusions_unioned\n     left outer join exclusions_medication\n         on inclusions_unioned.person_id = exclusions_medication.person_id\nwhere exclusions_medication.person_id is null", "relation_name": "tuva.chronic_conditions._int_cms_chronic_condition_oud", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:29.153476Z", "completed_at": "2025-06-03T19:50:29.165720Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:29.166411Z", "completed_at": "2025-06-03T19:50:29.166418Z"}], "thread_id": "Thread-2", "execution_time": 0.015119075775146484, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.not_null_chronic_conditions__cms_chronic_conditions_all_condition.bb780b4840", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect condition\nfrom tuva.chronic_conditions._int_cms_chronic_condition_all\nwhere condition is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:29.159897Z", "completed_at": "2025-06-03T19:50:29.172248Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:29.172877Z", "completed_at": "2025-06-03T19:50:29.172882Z"}], "thread_id": "Thread-1", "execution_time": 0.014627933502197266, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.not_null_chronic_conditions__cms_chronic_conditions_all_person_id.639395081a", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect person_id\nfrom tuva.chronic_conditions._int_cms_chronic_condition_all\nwhere person_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:29.166911Z", "completed_at": "2025-06-03T19:50:29.173300Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:29.174061Z", "completed_at": "2025-06-03T19:50:29.174065Z"}], "thread_id": "Thread-4", "execution_time": 0.014533042907714844, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.accepted_values_chronic_conditions__cms_chronic_conditions_hiv_aids_condition__Human_Immunodeficiency_Virus_and_or_Acquired_Immunodeficiency_Syndrome_HIV_AIDS_.c54d45a2c6", "compiled": true, "compiled_code": "\n    \n    \n\nwith all_values as (\n\n    select\n        condition as value_field,\n        count(*) as n_records\n\n    from tuva.chronic_conditions._int_cms_chronic_condition_hiv_aids\n    group by condition\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    'Human Immunodeficiency Virus and/or Acquired Immunodeficiency Syndrome (HIV/AIDS)'\n)\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:29.174437Z", "completed_at": "2025-06-03T19:50:29.186847Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:29.191648Z", "completed_at": "2025-06-03T19:50:29.191655Z"}], "thread_id": "Thread-2", "execution_time": 0.019133806228637695, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.not_null_chronic_conditions__cms_chronic_conditions_hiv_aids_claim_id.9baa48027d", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect claim_id\nfrom tuva.chronic_conditions._int_cms_chronic_condition_hiv_aids\nwhere claim_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:29.180596Z", "completed_at": "2025-06-03T19:50:29.192725Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:29.193385Z", "completed_at": "2025-06-03T19:50:29.193389Z"}], "thread_id": "Thread-1", "execution_time": 0.014001846313476562, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.not_null_chronic_conditions__cms_chronic_conditions_hiv_aids_condition.da32954f00", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect condition\nfrom tuva.chronic_conditions._int_cms_chronic_condition_hiv_aids\nwhere condition is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:29.187107Z", "completed_at": "2025-06-03T19:50:29.193158Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:29.205410Z", "completed_at": "2025-06-03T19:50:29.205420Z"}], "thread_id": "Thread-4", "execution_time": 0.02518773078918457, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.not_null_chronic_conditions__cms_chronic_conditions_hiv_aids_person_id.1539571692", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect person_id\nfrom tuva.chronic_conditions._int_cms_chronic_condition_hiv_aids\nwhere person_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:29.193755Z", "completed_at": "2025-06-03T19:50:29.234677Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:29.272202Z", "completed_at": "2025-06-03T19:50:29.272210Z"}], "thread_id": "Thread-2", "execution_time": 0.07986211776733398, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.cms_hcc__int_eligible_conditions", "compiled": true, "compiled_code": "\n/*\nSteps for staging condition data:\n    1) Filter to risk-adjustable claims per claim type for the collection year.\n    2) Gather diagnosis codes from condition for the eligible claims.\n    3) Map and filter diagnosis codes to HCCs\n\nClaims filtering logic:\n - Professional:\n    - CPT/HCPCS in CPT/HCPCS seed file from CMS\n - Inpatient:\n    - Bill type code in (11X, 41X)\n - Outpatient:\n    - Bill type code in (12X, 13X, 43X, 71X, 73X, 76X, 77X, 85X)\n    - CPT/HCPCS in CPT/HCPCS seed file from CMS\n\nJinja is used to set payment year variable.\n - The payment_year var has been set here so it gets compiled.\n - The collection year is one year prior to the payment year.\n*/\n\nwith  __dbt__cte___stg_medical_claim as (\n\nselect\n      claim_id\n    , claim_line_number\n    , claim_type\n    , person_id\n    , claim_start_date\n    , claim_end_date\n    , bill_type_code\n    , hcpcs_code\n    , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom tuva.core.medical_claim\n),  __dbt__cte___stg_condition as (\n\nselect\n      claim_id\n    , person_id\n    , recorded_date\n    , condition_type\n    , normalized_code_type as code_type\n    , normalized_code as code\n    , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom tuva.core.condition\n), medical_claims as (\n\n    select\n          claim_id\n        , claim_line_number\n        , claim_type\n        , person_id\n        , claim_start_date\n        , claim_end_date\n        , bill_type_code\n        , hcpcs_code\n    from __dbt__cte___stg_medical_claim\n\n)\n\n, conditions as (\n\n    select\n          claim_id\n        , person_id\n        , code\n    from __dbt__cte___stg_condition\n    where code_type = 'icd-10-cm'\n\n)\n\n, cpt_hcpcs_list as (\n\n    select\n          payment_year\n        , hcpcs_cpt_code\n    from tuva.cms_hcc._value_set_cpt_hcpcs\n\n)\n\n, professional_claims as (\n\n    select\n          medical_claims.claim_id\n        , medical_claims.claim_line_number\n        , medical_claims.claim_type\n        , medical_claims.person_id\n        , medical_claims.claim_start_date\n        , medical_claims.claim_end_date\n        , medical_claims.bill_type_code\n        , medical_claims.hcpcs_code\n        , dates.payment_year\n        , dates.collection_start_date\n        , dates.collection_end_date\n    from medical_claims\n        inner join cpt_hcpcs_list\n            on medical_claims.hcpcs_code = cpt_hcpcs_list.hcpcs_cpt_code\n        inner join tuva.cms_hcc._int_monthly_collection_dates as dates\n            on claim_end_date between dates.collection_start_date and dates.collection_end_date\n            and cpt_hcpcs_list.payment_year = dates.payment_year\n    where claim_type = 'professional'\n\n)\n\n, inpatient_claims as (\n\n    select\n          medical_claims.claim_id\n        , medical_claims.claim_line_number\n        , medical_claims.claim_type\n        , medical_claims.person_id\n        , medical_claims.claim_start_date\n        , medical_claims.claim_end_date\n        , medical_claims.bill_type_code\n        , medical_claims.hcpcs_code\n        , dates.payment_year\n        , dates.collection_start_date\n        , dates.collection_end_date\n    from medical_claims\n        inner join tuva.cms_hcc._int_monthly_collection_dates as dates\n            on claim_end_date between dates.collection_start_date and dates.collection_end_date\n    where claim_type = 'institutional'\n        and substring(bill_type_code, 1, 2) in ('11', '41')\n\n)\n\n, outpatient_claims as (\n\n    select\n          medical_claims.claim_id\n        , medical_claims.claim_line_number\n        , medical_claims.claim_type\n        , medical_claims.person_id\n        , medical_claims.claim_start_date\n        , medical_claims.claim_end_date\n        , medical_claims.bill_type_code\n        , medical_claims.hcpcs_code\n        , dates.payment_year\n        , dates.collection_start_date\n        , dates.collection_end_date\n    from medical_claims\n        inner join cpt_hcpcs_list\n            on medical_claims.hcpcs_code = cpt_hcpcs_list.hcpcs_cpt_code\n        inner join tuva.cms_hcc._int_monthly_collection_dates as dates\n            on claim_end_date between dates.collection_start_date and dates.collection_end_date\n            and cpt_hcpcs_list.payment_year = dates.payment_year\n    where claim_type = 'institutional'\n        and substring(bill_type_code, 1, 2) in ('12', '13', '43', '71', '73', '76', '77', '85')\n\n)\n\n, eligible_claims as (\n\n    select * from professional_claims\n    union all\n    select * from inpatient_claims\n    union all\n    select * from outpatient_claims\n\n)\n\n, eligible_conditions as (\n\n    select distinct\n          eligible_claims.claim_id\n        , eligible_claims.person_id\n        , eligible_claims.payment_year\n        , eligible_claims.collection_start_date\n        , eligible_claims.collection_end_date\n        , conditions.code\n    from eligible_claims\n        inner join conditions\n            on eligible_claims.claim_id = conditions.claim_id\n            and eligible_claims.person_id = conditions.person_id\n\n)\n\n, add_data_types as (\n\n    select distinct\n          cast(person_id as TEXT) as person_id\n        , cast(code as TEXT) as condition_code\n        , cast(payment_year as integer) as payment_year\n        , cast(collection_start_date as date) as collection_start_date\n        , cast(collection_end_date as date) as collection_end_date\n    from eligible_conditions\n\n)\n\nselect\n      person_id\n    , condition_code\n    , payment_year\n    , collection_start_date\n    , collection_end_date\n    , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom add_data_types", "relation_name": "tuva.cms_hcc._int_eligible_conditions", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:29.241400Z", "completed_at": "2025-06-03T19:50:29.320829Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:29.328211Z", "completed_at": "2025-06-03T19:50:29.328220Z"}], "thread_id": "Thread-4", "execution_time": 0.09950995445251465, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.fhir_preprocessing__int_medical_claim_item", "compiled": true, "compiled_code": "\nwith  __dbt__cte___stg_medical_claim as (\n\n\nselect\n      medical_claim_id\n    , person_id\n    , claim_id\n    , claim_line_number\n    , claim_type\n    , encounter_group\n    , claim_start_date\n    , claim_end_date\n    , claim_line_start_date\n    , payer\n    , plan\n    , billing_id\n    , billing_name\n    , rendering_id\n    , rendering_name\n    , admission_date\n    , discharge_date\n    , bill_type_code\n    , revenue_center_code\n    , revenue_center_description\n    , place_of_service_code\n    , place_of_service_description\n    , hcpcs_code\n    , hcpcs_modifier_1\n    , hcpcs_modifier_2\n    , hcpcs_modifier_3\n    , hcpcs_modifier_4\n    , hcpcs_modifier_5\n    , paid_date\n    , paid_amount\n    , in_network_flag\n    , data_source\nfrom tuva.core.medical_claim\n\n\n), adjudication as (\n\n    select\n          claim_id\n        , claim_line_number\n        , eob_item_adjudication_list\n    from tuva.fhir_preprocessing._int_medical_claim_item_adjudication\n\n)\n\n, modifier as (\n\n    select\n          claim_id\n        , claim_line_number\n        , eob_item_modifier_list\n    from tuva.fhir_preprocessing._int_medical_claim_item_modifier\n\n)\n\n, joined as (\n\n    select\n          medical_claim.claim_id\n        /* required for FHIR validation, sequence must be >0, temporary fix for possible issues with ADR  */\n        , abs(medical_claim.claim_line_number) as eob_item_sequence\n        , medical_claim.revenue_center_code as eob_item_revenue_code\n        , medical_claim.revenue_center_description as eob_item_revenue_display\n        , case\n            when medical_claim.hcpcs_code is not null then 'CPT'\n            else null\n          end as eob_item_product_or_service_system\n        /* required for FHIR validation, default to dummy code */\n        , coalesce(medical_claim.hcpcs_code, '00000') as eob_item_product_or_service_code\n        , cast(coalesce(\n              medical_claim.claim_line_start_date\n            , medical_claim.claim_start_date\n          ) as TEXT ) as eob_item_serviced_date /* cast date to string for redshift support */\n        , case\n            when medical_claim.place_of_service_code is not null then 'POS'\n            else null\n          end as eob_item_location_system\n        , medical_claim.place_of_service_code as eob_item_location_code\n        , medical_claim.place_of_service_description as eob_item_location_display\n        , adjudication.eob_item_adjudication_list\n        , modifier.eob_item_modifier_list\n    from __dbt__cte___stg_medical_claim as medical_claim\n        left outer join adjudication\n            on medical_claim.claim_id = adjudication.claim_id\n            and medical_claim.claim_line_number = adjudication.claim_line_number\n        left outer join modifier\n            on medical_claim.claim_id = modifier.claim_id\n            and medical_claim.claim_line_number = modifier.claim_line_number\n\n)\n\n/* create a json string for CSV export */\n\nselect\n    claim_id\n    , to_json(\n        array_agg(\n            object_construct(\n                'eobItemSequence',eob_item_sequence\n                , 'eobItemRevenueCode',eob_item_revenue_code\n                , 'eobItemRevenueDisplay',eob_item_revenue_display\n                , 'eobItemProductOrServiceSystem',eob_item_product_or_service_system\n                , 'eobItemProductOrServiceCode',eob_item_product_or_service_code\n                , 'eobItemServicedDate',eob_item_serviced_date\n                , 'eobItemLocationSystem',eob_item_location_system\n                , 'eobItemLocationCode',eob_item_location_code\n                , 'eobItemLocationDisplay',eob_item_location_display\n                , 'eobItemAdjudicationList',parse_json( eob_item_adjudication_list ) /* Parse JSON lists to prevent escaping */\n                , 'eobItemModifierList',parse_json( eob_item_modifier_list ) /* Parse JSON lists to prevent escaping */\n            )\n        )\n    ) as eob_item_list\nfrom joined\ngroup by claim_id\n", "relation_name": "tuva.fhir_preprocessing._int_medical_claim_item", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:29.229521Z", "completed_at": "2025-06-03T19:50:29.328857Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:29.343175Z", "completed_at": "2025-06-03T19:50:29.343182Z"}], "thread_id": "Thread-1", "execution_time": 0.11483502388000488, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.cms_hcc__int_members", "compiled": true, "compiled_code": "\n/*\nSteps for transforming eligibility data into member demographics:\n    1) Determine enrollment status using eligibility from the collection year.\n    2) Roll up to latest eligibility record for enrollment statuses.\n    3) Add age groups based on the payment year.\n    4) Determine other statuses.\n\nJinja is used to set payment year variable.\n - The payment_year var has been set here so it gets compiled.\n - CMS guidance: Age is calculated as of Feb 1 of the payment year.\n - The collection year is one year prior to the payment year.\n*/\n\nwith  __dbt__cte___stg_eligibility as (\n\nselect\n      person_id\n    , enrollment_start_date\n    , enrollment_end_date\n    , original_reason_entitlement_code\n    , dual_status_code\n    , medicare_status_code\n    , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom tuva.core.eligibility\n),  __dbt__cte___stg_patient as (\n\nselect\n      person_id\n    , sex\n    , birth_date\n    , death_date\n    , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom tuva.core.patient\n), stg_eligibility as (\n\n    select\n          elig.person_id\n        , elig.enrollment_start_date\n        , elig.enrollment_end_date\n        , elig.original_reason_entitlement_code\n        , elig.dual_status_code\n        , elig.medicare_status_code\n        , dates.collection_year\n        , dates.payment_year\n        , dates.collection_start_date\n        , dates.collection_end_date\n        , dates.payment_year || '-12-31' as payment_year_end_date\n        , row_number() over (\n            partition by elig.person_id, dates.collection_end_date\n            order by elig.enrollment_end_date desc\n        ) as row_num /* used to dedupe eligibility */\n    from __dbt__cte___stg_eligibility as elig\n    inner join tuva.cms_hcc._int_monthly_collection_dates as dates\n        /* filter to members with eligibility in collection or payment year */\n        on elig.enrollment_start_date <= cast(dates.payment_year || '-12-31' as date)\n        and elig.enrollment_end_date >= dates.collection_start_date\n\n)\n\n, payment_year_age_dates as (\n\n    select distinct\n          payment_year\n        , cast(payment_year || '-02-01' as date) as payment_year_age_date\n    from tuva.cms_hcc._int_monthly_collection_dates\n\n)\n\n, stg_patient as (\n\n    select\n          patient.person_id\n        , patient.sex\n        , patient.birth_date\n        , dates.payment_year\n        , floor(datediff(\n        year,\n        birth_date,\n        payment_year_age_date\n        )) as payment_year_age\n        , patient.death_date\n    from __dbt__cte___stg_patient as patient\n    cross join payment_year_age_dates as dates\n\n)\n\n/* create proxy enrollment dates if outside of the collection year */\n, cap_collection_start_end_dates as (\n\n    select\n          person_id\n        , enrollment_start_date\n        , enrollment_end_date\n        , payment_year\n        , collection_start_date\n        , collection_end_date\n        , case\n            when enrollment_start_date < try_cast( collection_start_date as date )\n            then try_cast( collection_start_date as date )\n            else enrollment_start_date\n          end as proxy_enrollment_start_date\n        , case\n            when enrollment_end_date > try_cast( payment_year_end_date as date )\n            then try_cast( payment_year_end_date as date )\n            else enrollment_end_date\n          end as proxy_enrollment_end_date\n    from stg_eligibility\n\n)\n\n, calculate_prior_coverage as (\n\n    select person_id\n        , payment_year\n        , collection_end_date\n        , sum(datediff(\n        month,\n        proxy_enrollment_start_date,\n        proxy_enrollment_end_date\n        ) + 1) as coverage_months  /* include starting month */\n        , min(datediff(\n        month,\n        collection_start_date,\n        collection_end_date\n        ) + 1) as collection_months\n    from cap_collection_start_end_dates\n    group by person_id\n        , payment_year\n        , collection_end_date\n\n)\n\n/*\n   CMS guidance: A \u201cNew Enrollee\u201d status is when a beneficiary has less than\n   12 months of coverage prior to the payment year.\n*/\n, add_enrollment as (\n\n    select\n          person_id\n        , payment_year\n        , collection_end_date\n        , case\n            when coverage_months < collection_months then 'New'\n            else 'Continuing'\n          end as enrollment_status\n    from calculate_prior_coverage\n\n)\n\n, latest_eligibility as (\n\n    select\n          stg_eligibility.person_id\n        , stg_eligibility.payment_year\n        , stg_eligibility.collection_start_date\n        , stg_eligibility.collection_end_date\n        , stg_patient.sex as gender\n        , stg_patient.payment_year_age\n        , stg_eligibility.original_reason_entitlement_code\n        , stg_eligibility.dual_status_code\n        , stg_eligibility.medicare_status_code\n        /* Defaulting to \"New\" enrollment status when missing */\n        , case\n            when add_enrollment.enrollment_status is null then 'New'\n            else add_enrollment.enrollment_status\n          end as enrollment_status\n        \n            , case\n                when add_enrollment.enrollment_status is null then true\n                else false\n              end as enrollment_status_default\n        \n    from stg_eligibility\n        left outer join add_enrollment\n            on stg_eligibility.person_id = add_enrollment.person_id\n            and stg_eligibility.payment_year = add_enrollment.payment_year\n            and stg_eligibility.collection_end_date = add_enrollment.collection_end_date\n        left outer join stg_patient\n            on stg_eligibility.person_id = stg_patient.person_id\n            and stg_eligibility.payment_year = stg_patient.payment_year\n    where stg_eligibility.row_num = 1\n\n)\n\n, add_age_group as (\n\n    select\n          person_id\n        , payment_year\n        , collection_start_date\n        , collection_end_date\n        , gender\n        , payment_year_age\n        , original_reason_entitlement_code\n        , dual_status_code\n        , medicare_status_code\n        , enrollment_status\n        , enrollment_status_default\n        , case\n            when enrollment_status = 'Continuing' and payment_year_age between 0 and 34 then '0-34'\n            when enrollment_status = 'Continuing' and payment_year_age between 35 and 44 then '35-44'\n            when enrollment_status = 'Continuing' and payment_year_age between 45 and 54 then '45-54'\n            when enrollment_status = 'Continuing' and payment_year_age between 55 and 59 then '55-59'\n            when enrollment_status = 'Continuing' and payment_year_age between 60 and 64 then '60-64'\n            when enrollment_status = 'Continuing' and payment_year_age between 65 and 69 then '65-69'\n            when enrollment_status = 'Continuing' and payment_year_age between 70 and 74 then '70-74'\n            when enrollment_status = 'Continuing' and payment_year_age between 75 and 79 then '75-79'\n            when enrollment_status = 'Continuing' and payment_year_age between 80 and 84 then '80-84'\n            when enrollment_status = 'Continuing' and payment_year_age between 85 and 89 then '85-89'\n            when enrollment_status = 'Continuing' and payment_year_age between 90 and 94 then '90-94'\n            when enrollment_status = 'Continuing' and payment_year_age >= 95 then '>=95'\n            when enrollment_status = 'New' and payment_year_age between 0 and 34 then '0-34'\n            when enrollment_status = 'New' and payment_year_age between 35 and 44 then '35-44'\n            when enrollment_status = 'New' and payment_year_age between 45 and 54 then '45-54'\n            when enrollment_status = 'New' and payment_year_age between 55 and 59 then '55-59'\n            when enrollment_status = 'New' and payment_year_age between 60 and 64 then '60-64'\n            when enrollment_status = 'New' and payment_year_age = 65 then '65'\n            when enrollment_status = 'New' and payment_year_age = 66 then '66'\n            when enrollment_status = 'New' and payment_year_age = 67 then '67'\n            when enrollment_status = 'New' and payment_year_age = 68 then '68'\n            when enrollment_status = 'New' and payment_year_age = 69 then '69'\n            when enrollment_status = 'New' and payment_year_age between 70 and 74 then '70-74'\n            when enrollment_status = 'New' and payment_year_age between 75 and 79 then '75-79'\n            when enrollment_status = 'New' and payment_year_age between 80 and 84 then '80-84'\n            when enrollment_status = 'New' and payment_year_age between 85 and 89 then '85-89'\n            when enrollment_status = 'New' and payment_year_age between 90 and 94 then '90-94'\n            when enrollment_status = 'New' and payment_year_age >= 95 then '>=95'\n          end as age_group\n    from latest_eligibility\n\n)\n\n, add_status_logic as (\n\n    select\n          person_id\n        , payment_year\n        , collection_start_date\n        , collection_end_date\n        , enrollment_status\n        , case\n            when gender = 'female' then 'Female'\n            when gender = 'male' then 'Male'\n            else null\n          end as gender\n        , age_group\n        , case\n            when dual_status_code in ('01', '02', '03', '04', '05', '06', '08') then 'Yes'\n            else 'No'\n          end as medicaid_status\n        , case\n            when dual_status_code in ('02', '04', '08') then 'Full'\n            when dual_status_code in ('01', '03', '05', '06') then 'Partial'\n            else 'Non'\n          end as dual_status\n        /*\n           The CMS-HCC model does not have factors for ESRD for these edge-cases,\n           we default to 'Aged'. When OREC is missing, latest Medicare status is\n           used, if available.\n        */\n        , case\n            when original_reason_entitlement_code in ('0', '2') then 'Aged'\n            when original_reason_entitlement_code in ('1', '3') then 'Disabled'\n            when original_reason_entitlement_code is null and medicare_status_code in ('10', '11', '31') then 'Aged'\n            when original_reason_entitlement_code is null and medicare_status_code in ('20', '21') then 'Disabled'\n            when coalesce(original_reason_entitlement_code, medicare_status_code) is null then 'Aged'\n          end as orec\n        /* Defaulting everyone to non-institutional until logic is added */\n        , cast('No' as TEXT) as institutional_status\n        , enrollment_status_default\n        , case\n            \n                when dual_status_code is null then true\n                else false\n            \n          end as medicaid_dual_status_default\n        /* Setting default true when OREC or Medicare Status is ESRD, or null */\n        , case\n            \n                when original_reason_entitlement_code in ('2') then true\n                when original_reason_entitlement_code is null and medicare_status_code in ('31') then true\n                when coalesce(original_reason_entitlement_code, medicare_status_code) is null then true\n                else false\n            \n          end as orec_default\n        /* Setting default true until institutional logic is added */\n        \n            , true as institutional_status_default\n        \n    from add_age_group\n\n)\n\n, add_data_types as (\n\n    select\n          cast(person_id as TEXT) as person_id\n        , cast(enrollment_status as TEXT) as enrollment_status\n        , cast(gender as TEXT) as gender\n        , cast(age_group as TEXT) as age_group\n        , cast(medicaid_status as TEXT) as medicaid_status\n        , cast(dual_status as TEXT) as dual_status\n        , cast(orec as TEXT) as orec\n        , cast(institutional_status as TEXT) as institutional_status\n        \n            , cast(enrollment_status_default as boolean) as enrollment_status_default\n            , cast(medicaid_dual_status_default as boolean) as medicaid_dual_status_default\n            , cast(orec_default as boolean) as orec_default\n            , cast(institutional_status_default as boolean) as institutional_status_default\n        \n        , cast(payment_year as integer) as payment_year\n        , cast(collection_start_date as date) as collection_start_date\n        , cast(collection_end_date as date) as collection_end_date\n    from add_status_logic\n\n)\n\nselect\n      person_id\n    , enrollment_status\n    , gender\n    , age_group\n    , medicaid_status\n    , dual_status\n    , orec\n    , institutional_status\n    , enrollment_status_default\n    , medicaid_dual_status_default\n    , orec_default\n    , institutional_status_default\n    , payment_year\n    , collection_start_date\n    , collection_end_date\n    , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom add_data_types", "relation_name": "tuva.cms_hcc._int_members", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:29.329048Z", "completed_at": "2025-06-03T19:50:29.344996Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:29.352679Z", "completed_at": "2025-06-03T19:50:29.352686Z"}], "thread_id": "Thread-2", "execution_time": 0.03219795227050781, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.financial_pmpm__service_category_1_allowed_pivot", "compiled": true, "compiled_code": "\n\nwith service_cat_1 as (\n  select\n    person_id\n  , year_month\n  , payer\n  , plan\n  , service_category_1\n  , data_source\n  , sum(total_allowed) as total_allowed\n  from tuva.financial_pmpm._int_patient_spend_with_service_categories\n  group by\n    person_id\n  , year_month\n  , payer\n  , plan\n  , service_category_1\n  , data_source\n)\n\nselect\n  person_id\n, year_month\n, payer\n, plan\n, data_source\n, \n  \n    sum(\n      \n      case\n      when service_category_1 = 'inpatient'\n        then total_allowed\n      else 0\n      end\n    )\n    \n      \n        as inpatient_allowed\n      \n    \n    ,\n  \n    sum(\n      \n      case\n      when service_category_1 = 'outpatient'\n        then total_allowed\n      else 0\n      end\n    )\n    \n      \n        as outpatient_allowed\n      \n    \n    ,\n  \n    sum(\n      \n      case\n      when service_category_1 = 'office-based'\n        then total_allowed\n      else 0\n      end\n    )\n    \n      \n        as office_based_allowed\n      \n    \n    ,\n  \n    sum(\n      \n      case\n      when service_category_1 = 'ancillary'\n        then total_allowed\n      else 0\n      end\n    )\n    \n      \n        as ancillary_allowed\n      \n    \n    ,\n  \n    sum(\n      \n      case\n      when service_category_1 = 'other'\n        then total_allowed\n      else 0\n      end\n    )\n    \n      \n        as other_allowed\n      \n    \n    ,\n  \n    sum(\n      \n      case\n      when service_category_1 = 'pharmacy'\n        then total_allowed\n      else 0\n      end\n    )\n    \n      \n        as pharmacy_allowed\n      \n    \n    \n  \n\n, '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom service_cat_1\ngroup by\n  person_id\n, year_month\n, payer\n, plan\n, data_source", "relation_name": "tuva.financial_pmpm._int_service_category_1_allowed_pivot", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:29.345636Z", "completed_at": "2025-06-03T19:50:29.364377Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:29.364941Z", "completed_at": "2025-06-03T19:50:29.364949Z"}], "thread_id": "Thread-4", "execution_time": 0.021327972412109375, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.financial_pmpm__service_category_1_paid_pivot", "compiled": true, "compiled_code": "\n\nwith service_cat_1 as (\n  select\n    person_id\n  , year_month\n  , payer\n  , plan\n  , service_category_1\n  , data_source\n  , sum(total_paid) as total_paid\n  from tuva.financial_pmpm._int_patient_spend_with_service_categories\n  group by\n    person_id\n  , year_month\n  , payer\n  , plan\n  , service_category_1\n  , data_source\n)\n\nselect\n  person_id\n, year_month\n, payer\n, plan\n, data_source\n, \n  \n    sum(\n      \n      case\n      when service_category_1 = 'inpatient'\n        then total_paid\n      else 0\n      end\n    )\n    \n      \n        as inpatient_paid\n      \n    \n    ,\n  \n    sum(\n      \n      case\n      when service_category_1 = 'outpatient'\n        then total_paid\n      else 0\n      end\n    )\n    \n      \n        as outpatient_paid\n      \n    \n    ,\n  \n    sum(\n      \n      case\n      when service_category_1 = 'office-based'\n        then total_paid\n      else 0\n      end\n    )\n    \n      \n        as office_based_paid\n      \n    \n    ,\n  \n    sum(\n      \n      case\n      when service_category_1 = 'ancillary'\n        then total_paid\n      else 0\n      end\n    )\n    \n      \n        as ancillary_paid\n      \n    \n    ,\n  \n    sum(\n      \n      case\n      when service_category_1 = 'other'\n        then total_paid\n      else 0\n      end\n    )\n    \n      \n        as other_paid\n      \n    \n    ,\n  \n    sum(\n      \n      case\n      when service_category_1 = 'pharmacy'\n        then total_paid\n      else 0\n      end\n    )\n    \n      \n        as pharmacy_paid\n      \n    \n    \n  \n\n, '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom service_cat_1\ngroup by\n  person_id\n, year_month\n, payer\n, plan\n, data_source", "relation_name": "tuva.financial_pmpm._int_service_category_1_paid_pivot", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:29.354022Z", "completed_at": "2025-06-03T19:50:29.371287Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:29.375234Z", "completed_at": "2025-06-03T19:50:29.375240Z"}], "thread_id": "Thread-1", "execution_time": 0.02996516227722168, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.financial_pmpm__service_category_2_allowed_pivot", "compiled": true, "compiled_code": "\n\nwith service_cat_2 as (\n  select\n    person_id\n  , year_month\n  , payer\n  , plan\n  , service_category_2\n  , data_source\n  , sum(total_allowed) as total_allowed\n  from tuva.financial_pmpm._int_patient_spend_with_service_categories\n  group by\n    person_id\n  , year_month\n  , payer\n  , plan\n  , service_category_2\n  , data_source\n)\n\nselect\n  person_id\n, year_month\n, payer\n, plan\n, data_source\n, \n  \n    sum(\n      \n      case\n      when service_category_2 = 'acute inpatient'\n        then total_allowed\n      else 0\n      end\n    )\n    \n      \n        as acute_inpatient_allowed\n      \n    \n    ,\n  \n    sum(\n      \n      case\n      when service_category_2 = 'ambulance'\n        then total_allowed\n      else 0\n      end\n    )\n    \n      \n        as ambulance_allowed\n      \n    \n    ,\n  \n    sum(\n      \n      case\n      when service_category_2 = 'ambulatory surgery center'\n        then total_allowed\n      else 0\n      end\n    )\n    \n      \n        as ambulatory_surgery_center_allowed\n      \n    \n    ,\n  \n    sum(\n      \n      case\n      when service_category_2 = 'dialysis'\n        then total_allowed\n      else 0\n      end\n    )\n    \n      \n        as dialysis_allowed\n      \n    \n    ,\n  \n    sum(\n      \n      case\n      when service_category_2 = 'durable medical equipment'\n        then total_allowed\n      else 0\n      end\n    )\n    \n      \n        as durable_medical_equipment_allowed\n      \n    \n    ,\n  \n    sum(\n      \n      case\n      when service_category_2 = 'emergency department'\n        then total_allowed\n      else 0\n      end\n    )\n    \n      \n        as emergency_department_allowed\n      \n    \n    ,\n  \n    sum(\n      \n      case\n      when service_category_2 = 'home health'\n        then total_allowed\n      else 0\n      end\n    )\n    \n      \n        as home_health_allowed\n      \n    \n    ,\n  \n    sum(\n      \n      case\n      when service_category_2 = 'inpatient hospice'\n        then total_allowed\n      else 0\n      end\n    )\n    \n      \n        as inpatient_hospice_allowed\n      \n    \n    ,\n  \n    sum(\n      \n      case\n      when service_category_2 = 'inpatient psychiatric'\n        then total_allowed\n      else 0\n      end\n    )\n    \n      \n        as inpatient_psychiatric_allowed\n      \n    \n    ,\n  \n    sum(\n      \n      case\n      when service_category_2 = 'inpatient rehabilitation'\n        then total_allowed\n      else 0\n      end\n    )\n    \n      \n        as inpatient_rehabilitation_allowed\n      \n    \n    ,\n  \n    sum(\n      \n      case\n      when service_category_2 = 'lab'\n        then total_allowed\n      else 0\n      end\n    )\n    \n      \n        as lab_allowed\n      \n    \n    ,\n  \n    sum(\n      \n      case\n      when service_category_2 = 'observation'\n        then total_allowed\n      else 0\n      end\n    )\n    \n      \n        as observation_allowed\n      \n    \n    ,\n  \n    sum(\n      \n      case\n      when service_category_2 = 'office-based other'\n        then total_allowed\n      else 0\n      end\n    )\n    \n      \n        as office_based_other_allowed\n      \n    \n    ,\n  \n    sum(\n      \n      case\n      when service_category_2 = 'office-based pt/ot/st'\n        then total_allowed\n      else 0\n      end\n    )\n    \n      \n        as office_based_ptotst_allowed\n      \n    \n    ,\n  \n    sum(\n      \n      case\n      when service_category_2 = 'office-based radiology'\n        then total_allowed\n      else 0\n      end\n    )\n    \n      \n        as office_based_radiology_allowed\n      \n    \n    ,\n  \n    sum(\n      \n      case\n      when service_category_2 = 'office-based surgery'\n        then total_allowed\n      else 0\n      end\n    )\n    \n      \n        as office_based_surgery_allowed\n      \n    \n    ,\n  \n    sum(\n      \n      case\n      when service_category_2 = 'office-based visit'\n        then total_allowed\n      else 0\n      end\n    )\n    \n      \n        as office_based_visit_allowed\n      \n    \n    ,\n  \n    sum(\n      \n      case\n      when service_category_2 = 'other'\n        then total_allowed\n      else 0\n      end\n    )\n    \n      \n        as other_allowed\n      \n    \n    ,\n  \n    sum(\n      \n      case\n      when service_category_2 = 'outpatient hospice'\n        then total_allowed\n      else 0\n      end\n    )\n    \n      \n        as outpatient_hospice_allowed\n      \n    \n    ,\n  \n    sum(\n      \n      case\n      when service_category_2 = 'outpatient hospital or clinic'\n        then total_allowed\n      else 0\n      end\n    )\n    \n      \n        as outpatient_hospital_or_clinic_allowed\n      \n    \n    ,\n  \n    sum(\n      \n      case\n      when service_category_2 = 'outpatient pt/ot/st'\n        then total_allowed\n      else 0\n      end\n    )\n    \n      \n        as outpatient_ptotst_allowed\n      \n    \n    ,\n  \n    sum(\n      \n      case\n      when service_category_2 = 'outpatient psychiatric'\n        then total_allowed\n      else 0\n      end\n    )\n    \n      \n        as outpatient_psychiatric_allowed\n      \n    \n    ,\n  \n    sum(\n      \n      case\n      when service_category_2 = 'outpatient radiology'\n        then total_allowed\n      else 0\n      end\n    )\n    \n      \n        as outpatient_radiology_allowed\n      \n    \n    ,\n  \n    sum(\n      \n      case\n      when service_category_2 = 'outpatient rehabilitation'\n        then total_allowed\n      else 0\n      end\n    )\n    \n      \n        as outpatient_rehabilitation_allowed\n      \n    \n    ,\n  \n    sum(\n      \n      case\n      when service_category_2 = 'outpatient surgery'\n        then total_allowed\n      else 0\n      end\n    )\n    \n      \n        as outpatient_surgery_allowed\n      \n    \n    ,\n  \n    sum(\n      \n      case\n      when service_category_2 = 'pharmacy'\n        then total_allowed\n      else 0\n      end\n    )\n    \n      \n        as pharmacy_allowed\n      \n    \n    ,\n  \n    sum(\n      \n      case\n      when service_category_2 = 'skilled nursing'\n        then total_allowed\n      else 0\n      end\n    )\n    \n      \n        as skilled_nursing_allowed\n      \n    \n    ,\n  \n    sum(\n      \n      case\n      when service_category_2 = 'telehealth visit'\n        then total_allowed\n      else 0\n      end\n    )\n    \n      \n        as telehealth_visit_allowed\n      \n    \n    ,\n  \n    sum(\n      \n      case\n      when service_category_2 = 'urgent care'\n        then total_allowed\n      else 0\n      end\n    )\n    \n      \n        as urgent_care_allowed\n      \n    \n    \n  \n\n, '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom service_cat_2\ngroup by\n  person_id\n, year_month\n, payer\n, plan\n, data_source", "relation_name": "tuva.financial_pmpm._int_service_category_2_allowed_pivot", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:29.365375Z", "completed_at": "2025-06-03T19:50:29.376442Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:29.388773Z", "completed_at": "2025-06-03T19:50:29.388781Z"}], "thread_id": "Thread-2", "execution_time": 0.024711132049560547, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.financial_pmpm__service_category_2_paid_pivot", "compiled": true, "compiled_code": "\n\nwith service_cat_2 as (\n  select\n    person_id\n  , year_month\n  , payer\n  , plan\n  , service_category_2\n  , data_source\n  , sum(total_paid) as total_paid\n  from tuva.financial_pmpm._int_patient_spend_with_service_categories\n  group by\n    person_id\n  , year_month\n  , payer\n  , plan\n  , service_category_2\n  , data_source\n)\n\nselect\n  person_id\n, year_month\n, payer\n, plan\n, data_source\n, \n  \n    sum(\n      \n      case\n      when service_category_2 = 'acute inpatient'\n        then total_paid\n      else 0\n      end\n    )\n    \n      \n        as acute_inpatient_paid\n      \n    \n    ,\n  \n    sum(\n      \n      case\n      when service_category_2 = 'ambulance'\n        then total_paid\n      else 0\n      end\n    )\n    \n      \n        as ambulance_paid\n      \n    \n    ,\n  \n    sum(\n      \n      case\n      when service_category_2 = 'ambulatory surgery center'\n        then total_paid\n      else 0\n      end\n    )\n    \n      \n        as ambulatory_surgery_center_paid\n      \n    \n    ,\n  \n    sum(\n      \n      case\n      when service_category_2 = 'dialysis'\n        then total_paid\n      else 0\n      end\n    )\n    \n      \n        as dialysis_paid\n      \n    \n    ,\n  \n    sum(\n      \n      case\n      when service_category_2 = 'durable medical equipment'\n        then total_paid\n      else 0\n      end\n    )\n    \n      \n        as durable_medical_equipment_paid\n      \n    \n    ,\n  \n    sum(\n      \n      case\n      when service_category_2 = 'emergency department'\n        then total_paid\n      else 0\n      end\n    )\n    \n      \n        as emergency_department_paid\n      \n    \n    ,\n  \n    sum(\n      \n      case\n      when service_category_2 = 'home health'\n        then total_paid\n      else 0\n      end\n    )\n    \n      \n        as home_health_paid\n      \n    \n    ,\n  \n    sum(\n      \n      case\n      when service_category_2 = 'inpatient hospice'\n        then total_paid\n      else 0\n      end\n    )\n    \n      \n        as inpatient_hospice_paid\n      \n    \n    ,\n  \n    sum(\n      \n      case\n      when service_category_2 = 'inpatient psychiatric'\n        then total_paid\n      else 0\n      end\n    )\n    \n      \n        as inpatient_psychiatric_paid\n      \n    \n    ,\n  \n    sum(\n      \n      case\n      when service_category_2 = 'inpatient rehabilitation'\n        then total_paid\n      else 0\n      end\n    )\n    \n      \n        as inpatient_rehabilitation_paid\n      \n    \n    ,\n  \n    sum(\n      \n      case\n      when service_category_2 = 'lab'\n        then total_paid\n      else 0\n      end\n    )\n    \n      \n        as lab_paid\n      \n    \n    ,\n  \n    sum(\n      \n      case\n      when service_category_2 = 'observation'\n        then total_paid\n      else 0\n      end\n    )\n    \n      \n        as observation_paid\n      \n    \n    ,\n  \n    sum(\n      \n      case\n      when service_category_2 = 'office-based other'\n        then total_paid\n      else 0\n      end\n    )\n    \n      \n        as office_based_other_paid\n      \n    \n    ,\n  \n    sum(\n      \n      case\n      when service_category_2 = 'office-based pt/ot/st'\n        then total_paid\n      else 0\n      end\n    )\n    \n      \n        as office_based_ptotst_paid\n      \n    \n    ,\n  \n    sum(\n      \n      case\n      when service_category_2 = 'office-based radiology'\n        then total_paid\n      else 0\n      end\n    )\n    \n      \n        as office_based_radiology_paid\n      \n    \n    ,\n  \n    sum(\n      \n      case\n      when service_category_2 = 'office-based surgery'\n        then total_paid\n      else 0\n      end\n    )\n    \n      \n        as office_based_surgery_paid\n      \n    \n    ,\n  \n    sum(\n      \n      case\n      when service_category_2 = 'office-based visit'\n        then total_paid\n      else 0\n      end\n    )\n    \n      \n        as office_based_visit_paid\n      \n    \n    ,\n  \n    sum(\n      \n      case\n      when service_category_2 = 'other'\n        then total_paid\n      else 0\n      end\n    )\n    \n      \n        as other_paid\n      \n    \n    ,\n  \n    sum(\n      \n      case\n      when service_category_2 = 'outpatient hospice'\n        then total_paid\n      else 0\n      end\n    )\n    \n      \n        as outpatient_hospice_paid\n      \n    \n    ,\n  \n    sum(\n      \n      case\n      when service_category_2 = 'outpatient hospital or clinic'\n        then total_paid\n      else 0\n      end\n    )\n    \n      \n        as outpatient_hospital_or_clinic_paid\n      \n    \n    ,\n  \n    sum(\n      \n      case\n      when service_category_2 = 'outpatient pt/ot/st'\n        then total_paid\n      else 0\n      end\n    )\n    \n      \n        as outpatient_ptotst_paid\n      \n    \n    ,\n  \n    sum(\n      \n      case\n      when service_category_2 = 'outpatient psychiatric'\n        then total_paid\n      else 0\n      end\n    )\n    \n      \n        as outpatient_psychiatric_paid\n      \n    \n    ,\n  \n    sum(\n      \n      case\n      when service_category_2 = 'outpatient radiology'\n        then total_paid\n      else 0\n      end\n    )\n    \n      \n        as outpatient_radiology_paid\n      \n    \n    ,\n  \n    sum(\n      \n      case\n      when service_category_2 = 'outpatient rehabilitation'\n        then total_paid\n      else 0\n      end\n    )\n    \n      \n        as outpatient_rehabilitation_paid\n      \n    \n    ,\n  \n    sum(\n      \n      case\n      when service_category_2 = 'outpatient surgery'\n        then total_paid\n      else 0\n      end\n    )\n    \n      \n        as outpatient_surgery_paid\n      \n    \n    ,\n  \n    sum(\n      \n      case\n      when service_category_2 = 'pharmacy'\n        then total_paid\n      else 0\n      end\n    )\n    \n      \n        as pharmacy_paid\n      \n    \n    ,\n  \n    sum(\n      \n      case\n      when service_category_2 = 'skilled nursing'\n        then total_paid\n      else 0\n      end\n    )\n    \n      \n        as skilled_nursing_paid\n      \n    \n    ,\n  \n    sum(\n      \n      case\n      when service_category_2 = 'telehealth visit'\n        then total_paid\n      else 0\n      end\n    )\n    \n      \n        as telehealth_visit_paid\n      \n    \n    ,\n  \n    sum(\n      \n      case\n      when service_category_2 = 'urgent care'\n        then total_paid\n      else 0\n      end\n    )\n    \n      \n        as urgent_care_paid\n      \n    \n    \n  \n\n, '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom service_cat_2\ngroup by\n  person_id\n, year_month\n, payer\n, plan\n, data_source", "relation_name": "tuva.financial_pmpm._int_service_category_2_paid_pivot", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:29.420320Z", "completed_at": "2025-06-03T19:50:29.460755Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:29.461075Z", "completed_at": "2025-06-03T19:50:29.461083Z"}], "thread_id": "Thread-1", "execution_time": 0.08452391624450684, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.quality_measures__int_shared_exclusions_dementia", "compiled": true, "compiled_code": "\n\nwith  __dbt__cte___stg_medication as (\n\n\nselect\n      person_id\n    , encounter_id\n    , prescribing_date\n    , dispensing_date\n    , source_code_type\n    , source_code\n    , ndc_code\n    , rxnorm_code\n    , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom tuva.core.medication\n\n\n),  __dbt__cte___stg_pharmacy_claim as (\n\n\nselect\n      person_id\n    , dispensing_date\n    , ndc_code\n    , days_supply\n    , paid_date\n    , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom tuva.core.pharmacy_claim\n\n\n), patients_with_frailty as (\n\n    select\n          person_id\n        , exclusion_date\n        , exclusion_reason\n    from tuva.quality_measures._int_shared_exclusions_frailty\n\n)\n\n, exclusion_codes as (\n\n    select\n          code\n        , code_system\n        , concept_name\n    from tuva.quality_measures._value_set_codes\n    where lower(concept_name) in (\n        'dementia medications'\n    )\n\n)\n\n, medications as (\n\n    select\n          person_id\n        , dispensing_date\n        , source_code_type\n        , source_code\n        , ndc_code\n        , rxnorm_code\n    from __dbt__cte___stg_medication\n\n)\n\n, pharmacy_claim as (\n\n    select\n          person_id\n        , dispensing_date\n        , ndc_code\n        , paid_date\n    from __dbt__cte___stg_pharmacy_claim\n\n)\n\n, medication_exclusions as (\n\n    select\n          medications.person_id\n        , medications.dispensing_date\n        , exclusion_codes.concept_name\n    from medications\n         inner join exclusion_codes\n            on medications.ndc_code = exclusion_codes.code\n    where exclusion_codes.code_system = 'ndc'\n\n    union all\n\n    select\n          medications.person_id\n        , medications.dispensing_date\n        , exclusion_codes.concept_name\n    from medications\n         inner join exclusion_codes\n            on medications.rxnorm_code = exclusion_codes.code\n    where exclusion_codes.code_system = 'rxnorm'\n\n    union all\n\n    select\n          medications.person_id\n        , medications.dispensing_date\n        , exclusion_codes.concept_name\n    from medications\n         inner join exclusion_codes\n            on medications.source_code = exclusion_codes.code\n            and medications.source_code_type = exclusion_codes.code_system\n\n)\n\n, pharmacy_claim_exclusions as (\n\n    select\n          pharmacy_claim.person_id\n        , pharmacy_claim.dispensing_date\n        , pharmacy_claim.ndc_code\n        , pharmacy_claim.paid_date\n        , exclusion_codes.concept_name\n    from pharmacy_claim\n         inner join exclusion_codes\n            on pharmacy_claim.ndc_code = exclusion_codes.code\n    where exclusion_codes.code_system = 'ndc'\n\n)\n\n, frailty_with_dementia as (\n\n    select\n          patients_with_frailty.person_id\n        , patients_with_frailty.exclusion_date\n        , patients_with_frailty.exclusion_reason || ' with ' || pharmacy_claim_exclusions.concept_name as exclusion_reason\n        , pharmacy_claim_exclusions.dispensing_date\n        , pharmacy_claim_exclusions.paid_date\n    from patients_with_frailty\n         inner join pharmacy_claim_exclusions\n            on patients_with_frailty.person_id = pharmacy_claim_exclusions.person_id\n\n    union all\n\n    select\n          patients_with_frailty.person_id\n        , medication_exclusions.dispensing_date as exclusion_date\n        , patients_with_frailty.exclusion_reason || ' with ' || medication_exclusions.concept_name as exclusion_reason\n        , medication_exclusions.dispensing_date\n        , null as paid_date\n    from patients_with_frailty\n         inner join medication_exclusions\n         on patients_with_frailty.person_id = medication_exclusions.person_id\n\n)\n\nselect\n      person_id\n    , exclusion_date\n    , exclusion_reason\n    , 'dementia' as exclusion_type\n    , dispensing_date\n    , paid_date\n    , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom frailty_with_dementia", "relation_name": "tuva.quality_measures._int_shared_exclusions_dementia", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:29.376859Z", "completed_at": "2025-06-03T19:50:29.461476Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:29.467612Z", "completed_at": "2025-06-03T19:50:29.467616Z"}], "thread_id": "Thread-4", "execution_time": 0.09198427200317383, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.quality_measures__int_shared_exclusions_advanced_illness", "compiled": true, "compiled_code": "\n\nwith  __dbt__cte___stg_condition as (\n\nselect\n      person_id\n    , claim_id\n    , encounter_id\n    , recorded_date\n    , source_code_type\n    , source_code\n    , normalized_code_type\n    , normalized_code\n    , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom tuva.core.condition\n),  __dbt__cte___stg_medical_claim as (\n\n\nselect\n      person_id\n    , claim_id\n    , claim_start_date\n    , claim_end_date\n    , place_of_service_code\n    , hcpcs_code\n    , hcpcs_modifier_1\n    , hcpcs_modifier_2\n    , hcpcs_modifier_3\n    , hcpcs_modifier_4\n    , hcpcs_modifier_5\n    , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom tuva.core.medical_claim\n\n\n),  __dbt__cte___stg_procedure as (\n\nselect\n      person_id\n    , encounter_id\n    , procedure_date\n    , source_code_type\n    , source_code\n    , normalized_code_type\n    , normalized_code\n    , modifier_1\n    , modifier_2\n    , modifier_3\n    , modifier_4\n    , modifier_5\n    , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom tuva.core.procedure\n), patients_with_frailty as (\n\n    select\n          person_id\n        , exclusion_date\n        , exclusion_reason\n    from tuva.quality_measures._int_shared_exclusions_frailty\n\n)\n\n, exclusion_codes as (\n\n    select\n          code\n        , code_system\n        , concept_name\n    from tuva.quality_measures._value_set_codes\n    where lower(concept_name) in (\n          'advanced illness'\n        , 'acute inpatient'\n        , 'encounter inpatient'\n        , 'outpatient'\n        , 'observation'\n        , 'emergency department visit'\n        , 'nonacute inpatient'\n    )\n\n)\n\n, conditions as (\n\n    select\n          person_id\n        , claim_id\n        , recorded_date\n        , coalesce(\n              normalized_code_type\n            , case\n                when lower(source_code_type) = 'snomed' then 'snomed-ct'\n                else lower(source_code_type)\n              end\n          ) as code_type\n        , coalesce(\n              normalized_code\n            , source_code\n          ) as code\n    from __dbt__cte___stg_condition\n\n)\n\n, medical_claim as (\n\n    select\n          person_id\n        , claim_id\n        , claim_start_date\n        , claim_end_date\n        , hcpcs_code\n        , place_of_service_code\n    from __dbt__cte___stg_medical_claim\n\n)\n\n, procedures as (\n\n    select\n          person_id\n        , procedure_date\n        , coalesce(\n              normalized_code_type\n            , case\n                when lower(source_code_type) = 'cpt' then 'hcpcs'\n                when lower(source_code_type) = 'snomed' then 'snomed-ct'\n                else lower(source_code_type)\n              end\n          ) as code_type\n        , coalesce(\n              normalized_code\n            , source_code\n          ) as code\n    from __dbt__cte___stg_procedure\n\n)\n\n, condition_exclusions as (\n\n    select\n          conditions.person_id\n        , conditions.claim_id\n        , conditions.recorded_date\n        , exclusion_codes.concept_name\n    from conditions\n         inner join exclusion_codes\n            on conditions.code = exclusion_codes.code\n            and conditions.code_type = exclusion_codes.code_system\n    where lower(exclusion_codes.concept_name) = 'advanced illness'\n\n)\n\n, med_claim_exclusions as (\n\n    select\n          medical_claim.person_id\n        , medical_claim.claim_id\n        , medical_claim.claim_start_date\n        , medical_claim.claim_end_date\n        , medical_claim.hcpcs_code\n        , exclusion_codes.concept_name\n    from medical_claim\n         inner join exclusion_codes\n            on medical_claim.hcpcs_code = exclusion_codes.code\n    where exclusion_codes.code_system = 'hcpcs'\n\n)\n\n, procedure_exclusions as (\n\n    select\n          procedures.person_id\n        , procedures.procedure_date\n        , exclusion_codes.concept_name\n    from procedures\n         inner join exclusion_codes\n             on procedures.code = exclusion_codes.code\n             and procedures.code_type = exclusion_codes.code_system\n\n)\n\n, acute_inpatient as (\n\n    select distinct\n          patients_with_frailty.person_id\n        , coalesce(\n              med_claim_exclusions.claim_start_date\n            , med_claim_exclusions.claim_end_date\n          ) as exclusion_date\n        , patients_with_frailty.exclusion_reason || ' with ' || med_claim_exclusions.concept_name || ' and ' || condition_exclusions.concept_name as exclusion_reason\n        , med_claim_exclusions.claim_start_date\n        , med_claim_exclusions.claim_end_date\n        , cast(null as date) as procedure_date\n    from patients_with_frailty\n         inner join med_claim_exclusions\n            on patients_with_frailty.person_id = med_claim_exclusions.person_id\n         inner join condition_exclusions\n            on med_claim_exclusions.claim_id = condition_exclusions.claim_id\n    where lower(med_claim_exclusions.concept_name) = 'acute inpatient'\n\n    union all\n\n    select distinct\n          patients_with_frailty.person_id\n        , procedure_exclusions.procedure_date as exclusion_date\n        , patients_with_frailty.exclusion_reason || ' with ' || procedure_exclusions.concept_name || ' and ' || condition_exclusions.concept_name as exclusion_reason\n        , cast(null as date) as claim_start_date\n        , cast(null as date) as claim_end_date\n        , procedure_exclusions.procedure_date\n    from patients_with_frailty\n         inner join procedure_exclusions\n         on patients_with_frailty.person_id = procedure_exclusions.person_id\n         inner join condition_exclusions\n         on procedure_exclusions.person_id = condition_exclusions.person_id\n         and procedure_exclusions.procedure_date = condition_exclusions.recorded_date\n    where lower(procedure_exclusions.concept_name) = 'acute inpatient'\n\n)\n\n, nonacute_outpatient as (\n\n    select distinct\n          patients_with_frailty.person_id\n        , coalesce(\n              med_claim_exclusions.claim_start_date\n            , med_claim_exclusions.claim_end_date\n          ) as exclusion_date\n        , patients_with_frailty.exclusion_reason || ' with ' || med_claim_exclusions.concept_name || ' and ' || condition_exclusions.concept_name as exclusion_reason\n        , med_claim_exclusions.claim_start_date\n        , med_claim_exclusions.claim_end_date\n        , cast(null as date) as procedure_date\n    from patients_with_frailty\n         inner join med_claim_exclusions\n            on patients_with_frailty.person_id = med_claim_exclusions.person_id\n         inner join condition_exclusions\n            on med_claim_exclusions.claim_id = condition_exclusions.claim_id\n    where lower(med_claim_exclusions.concept_name) in (\n              'encounter inpatient'\n            , 'outpatient'\n            , 'observation'\n            , 'emergency department visit'\n            , 'nonacute inpatient'\n        )\n\n    union all\n\n    select distinct\n          patients_with_frailty.person_id\n        , procedure_exclusions.procedure_date as exclusion_date\n        , patients_with_frailty.exclusion_reason || ' with ' || procedure_exclusions.concept_name || ' and ' || condition_exclusions.concept_name as exclusion_reason\n        , cast(null as date) as claim_start_date\n        , cast(null as date) as claim_end_date\n        , procedure_exclusions.procedure_date\n    from patients_with_frailty\n         inner join procedure_exclusions\n         on patients_with_frailty.person_id = procedure_exclusions.person_id\n         inner join condition_exclusions\n         on procedure_exclusions.person_id = condition_exclusions.person_id\n         and procedure_exclusions.procedure_date = condition_exclusions.recorded_date\n    where lower(procedure_exclusions.concept_name) in (\n          'encounter inpatient'\n        , 'outpatient'\n        , 'observation'\n        , 'emergency department visit'\n        , 'nonacute inpatient'\n    )\n\n)\n\n, exclusions_unioned as (\n\n    select\n          acute_inpatient.person_id\n        , acute_inpatient.exclusion_date\n        , acute_inpatient.exclusion_reason\n        , acute_inpatient.claim_start_date\n        , acute_inpatient.claim_end_date\n        , acute_inpatient.procedure_date\n        , 'acute_inpatient' as patient_type\n    from acute_inpatient\n\n    union all\n\n    select\n          nonacute_outpatient.person_id\n        , nonacute_outpatient.exclusion_date\n        , nonacute_outpatient.exclusion_reason\n        , nonacute_outpatient.claim_start_date\n        , nonacute_outpatient.claim_end_date\n        , nonacute_outpatient.procedure_date\n        , 'nonacute_outpatient' as patient_type\n    from nonacute_outpatient\n\n)\n\nselect\n      person_id\n    , exclusion_date\n    , exclusion_reason\n    , 'advanced_illness' as exclusion_type\n    , claim_start_date\n    , claim_end_date\n    , procedure_date\n    , patient_type\n    , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom exclusions_unioned", "relation_name": "tuva.quality_measures._int_shared_exclusions_advanced_illness", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:29.441998Z", "completed_at": "2025-06-03T19:50:29.468769Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:29.486862Z", "completed_at": "2025-06-03T19:50:29.486874Z"}], "thread_id": "Thread-2", "execution_time": 0.045586347579956055, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.quality_measures__int_adh_diabetes_exclusions", "compiled": true, "compiled_code": "with  __dbt__cte___stg_condition as (\n\nselect\n      person_id\n    , claim_id\n    , encounter_id\n    , recorded_date\n    , source_code_type\n    , source_code\n    , normalized_code_type\n    , normalized_code\n    , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom tuva.core.condition\n),  __dbt__cte___stg_pharmacy_claim as (\n\n\nselect\n      person_id\n    , dispensing_date\n    , ndc_code\n    , days_supply\n    , paid_date\n    , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom tuva.core.pharmacy_claim\n\n\n), denominator as (\n\n    select\n        person_id\n    from tuva.quality_measures._int_adh_diabetes_denominator\n\n)\n\n, exclusion_codes as (\n\n    select\n        code\n      , code_system\n      , concept_name\n    from tuva.quality_measures._value_set_codes\n    where lower(concept_name) in (\n          'pqa esrd'\n        , 'pqa insulin medications'\n    )\n\n)\n\n, hospice_palliative as (\n\n    select\n          person_id\n        , exclusion_date\n        , exclusion_reason\n    from tuva.quality_measures._int_shared_exclusions_hospice_palliative\n    where exclusion_date between (\n\n  select \n    performance_period_begin\n  from tuva.quality_measures._int_adh_diabetes__performance_period\n\n) and (\n\n  select \n    performance_period_end\n  from tuva.quality_measures._int_adh_diabetes__performance_period\n\n)\n\n)\n\n, valid_hospice as (\n\n    select\n          person_id\n        , exclusion_date\n        , exclusion_reason\n    from hospice_palliative\n    where lower(exclusion_reason) in (\n            'hospice encounter'\n          , 'hospice care ambulatory'\n          , 'hospice diagnosis'\n    )\n\n)\n\n, conditions as (\n\n    select\n          person_id\n        , recorded_date\n        , claim_id\n        , coalesce(\n              normalized_code_type\n            , case\n                when lower(source_code_type) = 'snomed' then 'snomed-ct'\n                else lower(source_code_type)\n              end\n          ) as code_type\n        , coalesce(\n              normalized_code\n            , source_code\n          ) as code\n    from __dbt__cte___stg_condition\n    where recorded_date between (\n\n  select \n    performance_period_begin\n  from tuva.quality_measures._int_adh_diabetes__performance_period\n\n) and (\n\n  select \n    performance_period_end\n  from tuva.quality_measures._int_adh_diabetes__performance_period\n\n)\n\n)\n\n, condition_exclusions as (\n\n      select\n          conditions.person_id\n        , conditions.recorded_date as exclusion_date\n        , exclusion_codes.concept_name as exclusion_reason\n    from conditions\n    inner join exclusion_codes\n      on conditions.code = exclusion_codes.code\n        and conditions.code_type = exclusion_codes.code_system\n\n)\n\n, pharmacy_exclusions as (\n\n    select\n        person_id\n      , dispensing_date as exclusion_date\n      , concept_name as exclusion_reason\n    from __dbt__cte___stg_pharmacy_claim as pharmacy_claims\n    inner join exclusion_codes\n      on pharmacy_claims.ndc_code = exclusion_codes.code\n        and exclusion_codes.code_system = 'ndc'\n\n)\n\n, exclusion_patients as (\n\n    select\n        person_id\n      , exclusion_date\n      , exclusion_reason\n    from valid_hospice\n\n    union all\n\n    select\n        person_id\n      , exclusion_date\n      , exclusion_reason\n    from condition_exclusions\n\n    union all\n\n    select\n        person_id\n      , exclusion_date\n      , exclusion_reason\n    from pharmacy_exclusions\n\n)\n\n, combined_exclusions as (\n\n    select\n        exclusion_patients.person_id\n      , exclusion_patients.exclusion_date\n      , exclusion_patients.exclusion_reason\n    from exclusion_patients\n    inner join denominator\n      on exclusion_patients.person_id = denominator.person_id\n\n)\n\n, add_data_types as (\n\n    select\n        distinct\n          cast(person_id as TEXT) as person_id\n        , cast(exclusion_date as date) as exclusion_date\n        , cast(exclusion_reason as TEXT) as exclusion_reason\n        , cast(1 as integer) as exclusion_flag\n    from combined_exclusions\n\n)\n\nselect\n      person_id\n    , exclusion_date\n    , exclusion_reason\n    , exclusion_flag\n    , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom add_data_types", "relation_name": "tuva.quality_measures._int_adh_diabetes_exclusions", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:29.469205Z", "completed_at": "2025-06-03T19:50:29.527774Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:29.539875Z", "completed_at": "2025-06-03T19:50:29.539884Z"}], "thread_id": "Thread-1", "execution_time": 0.07194900512695312, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.quality_measures__int_adh_statins_exclusions", "compiled": true, "compiled_code": "with  __dbt__cte___stg_condition as (\n\nselect\n      person_id\n    , claim_id\n    , encounter_id\n    , recorded_date\n    , source_code_type\n    , source_code\n    , normalized_code_type\n    , normalized_code\n    , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom tuva.core.condition\n), denominator as (\n\n    select\n          person_id\n    from tuva.quality_measures._int_adh_statins_denominator\n\n)\n\n, hospice_palliative as (\n\n    select\n        person_id\n      , exclusion_date\n      , exclusion_reason\n    from tuva.quality_measures._int_shared_exclusions_hospice_palliative\n    where exclusion_date between (\n  select \n    performance_period_begin\n  from tuva.quality_measures._int_adh_statins__performance_period\n\n) and (\n  select \n    performance_period_end\n  from tuva.quality_measures._int_adh_statins__performance_period\n\n)\n\n)\n\n, valid_hospice as (\n\n    select\n          person_id\n        , exclusion_date\n        , exclusion_reason\n    from hospice_palliative\n    where lower(exclusion_reason) in (\n            'hospice encounter'\n          , 'hospice care ambulatory'\n          , 'hospice diagnosis'\n    )\n\n)\n\n, esrd_codes as (\n\n    select\n            code\n          , code_system\n          , concept_name\n    from tuva.quality_measures._value_set_codes\n    where concept_name in (\n            'PQA ESRD'\n        )\n\n)\n\n, valid_esrd as (\n\n    select\n          condition.person_id\n        , condition.recorded_date as exclusion_date\n        , esrd_codes.concept_name as exclusion_reason\n    from __dbt__cte___stg_condition as condition\n    inner join esrd_codes\n      on coalesce(condition.normalized_code, condition.source_code) = esrd_codes.code\n        and coalesce(condition.normalized_code_type, condition.source_code_type) = esrd_codes.code_system\n    where condition.recorded_date between (\n  select \n    performance_period_begin\n  from tuva.quality_measures._int_adh_statins__performance_period\n\n) and (\n  select \n    performance_period_end\n  from tuva.quality_measures._int_adh_statins__performance_period\n\n)\n\n)\n\n, exclusions as (\n\n    select\n          person_id\n        , exclusion_date\n        , exclusion_reason\n    from valid_hospice\n\n    union all\n\n    select\n          person_id\n        , exclusion_date\n        , exclusion_reason\n    from valid_esrd\n\n)\n\n, measure_exclusions as (\n\n    select\n          exclusions.person_id\n        , exclusion_date\n        , exclusion_reason\n    from exclusions\n    inner join denominator\n      on exclusions.person_id = denominator.person_id\n\n)\n\n, add_data_types as (\n\n    select\n        distinct\n            cast(person_id as TEXT) as person_id\n          , cast(exclusion_date as date) as exclusion_date\n          , cast(exclusion_reason as TEXT) as exclusion_reason\n          , 1 as exclusion_flag\n    from measure_exclusions\n\n)\n\nselect\n      person_id\n    , exclusion_date\n    , exclusion_reason\n    , exclusion_flag\n    , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom add_data_types", "relation_name": "tuva.quality_measures._int_adh_statins_exclusions", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:29.490352Z", "completed_at": "2025-06-03T19:50:29.551404Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:29.552345Z", "completed_at": "2025-06-03T19:50:29.552350Z"}], "thread_id": "Thread-4", "execution_time": 0.08342909812927246, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.quality_measures__int_adhras_exclusions", "compiled": true, "compiled_code": "with  __dbt__cte___stg_condition as (\n\nselect\n      person_id\n    , claim_id\n    , encounter_id\n    , recorded_date\n    , source_code_type\n    , source_code\n    , normalized_code_type\n    , normalized_code\n    , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom tuva.core.condition\n),  __dbt__cte___stg_pharmacy_claim as (\n\n\nselect\n      person_id\n    , dispensing_date\n    , ndc_code\n    , days_supply\n    , paid_date\n    , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom tuva.core.pharmacy_claim\n\n\n), denominator as (\n\n    select\n          person_id\n    from tuva.quality_measures._int_adhras_denominator\n\n)\n\n, valid_hospice_palliative as (\n\n    select\n        person_id\n      , exclusion_date\n      , exclusion_reason\n    from tuva.quality_measures._int_shared_exclusions_hospice_palliative\n    where exclusion_date between (\n  select \n    performance_period_begin\n  from tuva.quality_measures._int_adhras__performance_period\n\n) and (\n  select \n    performance_period_end\n  from tuva.quality_measures._int_adhras__performance_period\n\n)\n\n)\n\n, codes as (\n\n    select\n            code\n          , code_system\n          , concept_name\n    from tuva.quality_measures._value_set_codes\n    where concept_name in (\n            'PQA ESRD'\n          , 'PQA Sacubitril Valsartan Medications'\n        )\n\n)\n\n, valid_esrd as (\n\n    select\n          condition.person_id\n        , condition.recorded_date as exclusion_date\n        , codes.concept_name as exclusion_reason\n    from __dbt__cte___stg_condition as condition\n    inner join codes\n      on coalesce(condition.normalized_code, condition.source_code) = codes.code\n        and coalesce(condition.normalized_code_type, condition.source_code_type) = codes.code_system\n    where condition.recorded_date between (\n  select \n    performance_period_begin\n  from tuva.quality_measures._int_adhras__performance_period\n\n) and (\n  select \n    performance_period_end\n  from tuva.quality_measures._int_adhras__performance_period\n\n)\n\n)\n\n, sacubitril_pharmacy_claim as (\n\n    select\n          pharmacy_claim.person_id\n        , pharmacy_claim.dispensing_date as exclusion_date\n        , codes.concept_name as exclusion_reason\n    from __dbt__cte___stg_pharmacy_claim as pharmacy_claim\n    inner join codes\n      on pharmacy_claim.ndc_code = codes.code\n    where pharmacy_claim.dispensing_date between (\n  select \n    performance_period_begin\n  from tuva.quality_measures._int_adhras__performance_period\n\n) and (\n  select \n    performance_period_end\n  from tuva.quality_measures._int_adhras__performance_period\n\n)\n\n)\n\n, exclusions as (\n\n    select\n          person_id\n        , exclusion_date\n        , exclusion_reason\n    from valid_hospice_palliative\n\n    union all\n\n    select\n          person_id\n        , exclusion_date\n        , exclusion_reason\n    from valid_esrd\n\n    union all\n\n    select\n          person_id\n        , exclusion_date\n        , exclusion_reason\n    from sacubitril_pharmacy_claim\n\n)\n\n, measure_exclusions as (\n\n    select\n          exclusions.person_id\n        , exclusion_date\n        , exclusion_reason\n    from exclusions\n    inner join denominator\n      on exclusions.person_id = denominator.person_id\n\n)\n\n, add_data_types as (\n\n    select\n        distinct\n            cast(person_id as TEXT) as person_id\n          , cast(exclusion_date as date) as exclusion_date\n          , cast(exclusion_reason as TEXT) as exclusion_reason\n          , 1 as exclusion_flag\n    from measure_exclusions\n\n)\n\nselect\n      person_id\n    , exclusion_date\n    , exclusion_reason\n    , exclusion_flag\n    , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom add_data_types", "relation_name": "tuva.quality_measures._int_adhras_exclusions", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:29.503683Z", "completed_at": "2025-06-03T19:50:29.551897Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:29.552921Z", "completed_at": "2025-06-03T19:50:29.552924Z"}], "thread_id": "Thread-2", "execution_time": 0.0498960018157959, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.quality_measures__int_supd_exclusions", "compiled": true, "compiled_code": "with  __dbt__cte___stg_condition as (\n\nselect\n      person_id\n    , claim_id\n    , encounter_id\n    , recorded_date\n    , source_code_type\n    , source_code\n    , normalized_code_type\n    , normalized_code\n    , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom tuva.core.condition\n),  __dbt__cte___stg_pharmacy_claim as (\n\n\nselect\n      person_id\n    , dispensing_date\n    , ndc_code\n    , days_supply\n    , paid_date\n    , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom tuva.core.pharmacy_claim\n\n\n), denominator as (\n\n    select\n        person_id\n    from tuva.quality_measures._int_supd_denominator\n\n)\n\n, exclusion_codes as (\n\n    select\n        code\n      , code_system\n      , concept_name\n    from tuva.quality_measures._value_set_codes\n    where lower(concept_name) in (\n          'pqa esrd'\n        , 'pqa rhabdomyolysis myopathy'\n        , 'pqa pregnancy'\n        , 'pqa lactation'\n        , 'pqa fertility medications'\n        , 'pqa cirrhosis'\n        , 'pqa pcos'\n        , 'pqa prediabetes'\n    )\n\n)\n\n, hospice_palliative as (\n\n    select\n          person_id\n        , exclusion_date\n        , exclusion_reason\n    from tuva.quality_measures._int_shared_exclusions_hospice_palliative\n    where exclusion_date between (\n\n  select \n    performance_period_begin\n  from tuva.quality_measures._int_supd__performance_period\n\n) and (\n\n  select \n    performance_period_end\n  from tuva.quality_measures._int_supd__performance_period\n\n)\n\n)\n\n, valid_hospice as (\n\n    select\n          person_id\n        , exclusion_date\n        , exclusion_reason\n    from hospice_palliative\n    where lower(exclusion_reason) in (\n            'hospice encounter'\n          , 'hospice care ambulatory'\n          , 'hospice diagnosis'\n    )\n\n)\n\n, conditions as (\n\n    select\n          person_id\n        , recorded_date\n        , claim_id\n        , coalesce(\n              normalized_code_type\n            , case\n                when lower(source_code_type) = 'snomed' then 'snomed-ct'\n                else lower(source_code_type)\n              end\n          ) as code_type\n        , coalesce(\n              normalized_code\n            , source_code\n          ) as code\n    from __dbt__cte___stg_condition\n    where recorded_date between (\n\n  select \n    performance_period_begin\n  from tuva.quality_measures._int_supd__performance_period\n\n) and (\n\n  select \n    performance_period_end\n  from tuva.quality_measures._int_supd__performance_period\n\n)\n\n)\n\n, condition_exclusions as (\n\n      select\n          conditions.person_id\n        , conditions.recorded_date as exclusion_date\n        , exclusion_codes.concept_name as exclusion_reason\n    from conditions\n    inner join exclusion_codes\n      on conditions.code = exclusion_codes.code\n        and conditions.code_type = exclusion_codes.code_system\n\n)\n\n, pharmacy_exclusions as (\n\n    select\n        person_id\n      , dispensing_date as exclusion_date\n      , concept_name as exclusion_reason\n    from __dbt__cte___stg_pharmacy_claim as pharmacy_claims\n    inner join exclusion_codes\n        on exclusion_codes.code_system = 'ndc'\n          and pharmacy_claims.ndc_code = exclusion_codes.code\n\n)\n\n, exclusion_patients as (\n\n    select\n        person_id\n      , exclusion_date\n      , exclusion_reason\n    from valid_hospice\n\n    union all\n\n    select\n        person_id\n      , exclusion_date\n      , exclusion_reason\n    from condition_exclusions\n\n    union all\n\n    select\n        person_id\n      , exclusion_date\n      , exclusion_reason\n    from pharmacy_exclusions\n\n)\n\n, combined_exclusions as (\n\n    select\n        exclusion_patients.person_id\n      , exclusion_patients.exclusion_date\n      , exclusion_patients.exclusion_reason\n    from exclusion_patients\n    inner join denominator\n      on exclusion_patients.person_id = denominator.person_id\n\n)\n\n, add_data_types as (\n\n    select\n        distinct\n          cast(person_id as TEXT) as person_id\n        , cast(exclusion_date as date) as exclusion_date\n        , cast(exclusion_reason as TEXT) as exclusion_reason\n        , cast(1 as integer) as exclusion_flag\n    from combined_exclusions\n\n)\n\nselect\n      person_id\n    , exclusion_date\n    , exclusion_reason\n    , exclusion_flag\n    , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom add_data_types", "relation_name": "tuva.quality_measures._int_supd_exclusions", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:29.553715Z", "completed_at": "2025-06-03T19:50:29.565297Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:29.582835Z", "completed_at": "2025-06-03T19:50:29.582845Z"}], "thread_id": "Thread-1", "execution_time": 0.03127884864807129, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.hcc_suspecting__int_comorbidity_suspects", "compiled": true, "compiled_code": "\n\nwith conditions as (\n\n    select\n          person_id\n        , recorded_date\n        , condition_type\n        , code_type\n        , code\n        , data_source\n    from tuva.hcc_suspecting._int_prep_conditions\n\n)\n\n, seed_clinical_concepts as (\n\n    select\n          concept_name\n        , code\n        , code_system\n    from tuva.hcc_suspecting._value_set_clinical_concepts\n\n)\n\n, seed_hcc_descriptions as (\n\n    select distinct\n          hcc_code\n        , hcc_description\n    from tuva.hcc_suspecting._value_set_hcc_descriptions\n\n)\n\n, billed_hccs as (\n\n    select distinct\n          person_id\n        , data_source\n        , hcc_code\n        , current_year_billed\n    from tuva.hcc_suspecting._int_patient_hcc_history\n\n)\n\n/* BEGIN HCC 37 logic */\n, ckd_stage_1_or_2 as (\n\n    select\n          conditions.person_id\n        , conditions.recorded_date\n        , conditions.condition_type\n        , conditions.code_type\n        , conditions.code\n        , conditions.data_source\n        , seed_clinical_concepts.concept_name\n        , row_number() over (\n            partition by\n                  conditions.person_id\n                , conditions.data_source\n            order by\n                  conditions.recorded_date desc\n                , conditions.code desc\n          ) as row_num\n    from conditions\n        inner join seed_clinical_concepts\n            on conditions.code_type = seed_clinical_concepts.code_system\n            and conditions.code = seed_clinical_concepts.code\n    where lower(seed_clinical_concepts.concept_name) in (\n          'chronic kidney disease, stage 1'\n        , 'chronic kidney disease, stage 2'\n    )\n\n)\n\n, ckd_stage_1_or_2_dedupe as (\n\n    select\n          person_id\n        , recorded_date\n        , condition_type\n        , code_type\n        , code\n        , data_source\n        , concept_name\n    from ckd_stage_1_or_2\n    where row_num = 1\n\n)\n\n, diabetes as (\n\n    select\n          conditions.person_id\n        , conditions.recorded_date\n        , conditions.condition_type\n        , conditions.code_type\n        , conditions.code\n        , conditions.data_source\n        , seed_clinical_concepts.concept_name\n        , row_number() over (\n            partition by\n                  conditions.person_id\n                , conditions.data_source\n            order by\n                  conditions.recorded_date desc\n                , conditions.code desc\n          ) as row_num\n    from conditions\n        inner join seed_clinical_concepts\n            on conditions.code_type = seed_clinical_concepts.code_system\n            and conditions.code = seed_clinical_concepts.code\n    where lower(seed_clinical_concepts.concept_name) = 'diabetes'\n)\n\n, diabetes_dedupe as (\n\n    select\n          person_id\n        , recorded_date\n        , condition_type\n        , code_type\n        , code\n        , data_source\n        , concept_name\n    from diabetes\n    where row_num = 1\n\n)\n\n, hcc_37_suspect as (\n\n    select\n          diabetes_dedupe.person_id\n        , diabetes_dedupe.data_source\n        , seed_hcc_descriptions.hcc_code\n        , seed_hcc_descriptions.hcc_description\n        , diabetes_dedupe.concept_name as condition_1_concept_name\n        , diabetes_dedupe.code as condition_1_code\n        , diabetes_dedupe.recorded_date as condition_1_recorded_date\n        , ckd_stage_1_or_2_dedupe.concept_name as condition_2_concept_name\n        , ckd_stage_1_or_2_dedupe.code as condition_2_code\n        , ckd_stage_1_or_2_dedupe.recorded_date as condition_2_recorded_date\n    from diabetes_dedupe\n        inner join ckd_stage_1_or_2_dedupe\n            on diabetes_dedupe.person_id = ckd_stage_1_or_2_dedupe.person_id\n            and diabetes_dedupe.data_source = ckd_stage_1_or_2_dedupe.data_source\n            /* ensure conditions overlap in the same year */\n            and date_part('year', diabetes_dedupe.recorded_date) = date_part('year', ckd_stage_1_or_2_dedupe.recorded_date)\n        inner join seed_hcc_descriptions\n            on hcc_code = '37'\n\n)\n/* END HCC 37 logic */\n\n, unioned as (\n\n    select * from hcc_37_suspect\n\n)\n\n, add_billed_flag as (\n\n    select\n          unioned.person_id\n        , unioned.data_source\n        , unioned.hcc_code\n        , unioned.hcc_description\n        , unioned.condition_1_concept_name\n        , unioned.condition_1_code\n        , unioned.condition_1_recorded_date\n        , unioned.condition_2_concept_name\n        , unioned.condition_2_code\n        , unioned.condition_2_recorded_date\n        , billed_hccs.current_year_billed\n    from unioned\n        left outer join billed_hccs\n            on unioned.person_id = billed_hccs.person_id\n            and unioned.data_source = billed_hccs.data_source\n            and unioned.hcc_code = billed_hccs.hcc_code\n\n)\n\n, add_standard_fields as (\n\n    select\n          person_id\n        , data_source\n        , hcc_code\n        , hcc_description\n        , condition_1_concept_name\n        , condition_1_code\n        , condition_1_recorded_date\n        , condition_2_concept_name\n        , condition_2_code\n        , condition_2_recorded_date\n        , current_year_billed\n        , cast('Comorbidity suspect' as TEXT) as reason\n        , condition_1_concept_name || ' (' || condition_1_code || ') on ' || condition_1_recorded_date || ') and ' || condition_2_concept_name || ' (' || condition_2_code || ') on ' || condition_2_recorded_date as contributing_factor\n        , condition_1_recorded_date as suspect_date\n    from add_billed_flag\n\n)\n\n\n, add_data_types as (\n\n    select\n          cast(person_id as TEXT) as person_id\n        , cast(data_source as TEXT) as data_source\n        , cast(hcc_code as TEXT) as hcc_code\n        , cast(hcc_description as TEXT) as hcc_description\n        , cast(condition_1_concept_name as TEXT) as condition_1_concept_name\n        , cast(condition_1_code as TEXT) as condition_1_code\n        , cast(condition_1_recorded_date as date) as condition_1_recorded_date\n        , cast(condition_2_concept_name as TEXT) as condition_2_concept_name\n        , cast(condition_2_code as TEXT) as condition_2_code\n        , cast(condition_2_recorded_date as date) as condition_2_recorded_date\n        \n            , cast(current_year_billed as boolean) as current_year_billed\n        \n        , cast(reason as TEXT) as reason\n        , cast(contributing_factor as TEXT) as contributing_factor\n        , cast(suspect_date as date) as suspect_date\n    from add_standard_fields\n\n)\n\nselect\n      person_id\n    , data_source\n    , hcc_code\n    , hcc_description\n    , condition_1_concept_name\n    , condition_1_code\n    , condition_1_recorded_date\n    , condition_2_concept_name\n    , condition_2_code\n    , condition_2_recorded_date\n    , current_year_billed\n    , reason\n    , contributing_factor\n    , suspect_date\n    , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom add_data_types", "relation_name": "tuva.hcc_suspecting._int_comorbidity_suspects", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:29.565595Z", "completed_at": "2025-06-03T19:50:29.590599Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:29.603465Z", "completed_at": "2025-06-03T19:50:29.603476Z"}], "thread_id": "Thread-4", "execution_time": 0.03963327407836914, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.hcc_suspecting__int_lab_suspects", "compiled": true, "compiled_code": "\n\nwith egfr_labs as (\n\n    select\n          person_id\n        , data_source\n        , code_type\n        , code\n        , result_date\n        , result\n    from tuva.hcc_suspecting._int_prep_egfr_labs\n\n)\n\n, seed_hcc_descriptions as (\n\n    select distinct\n          hcc_code\n        , hcc_description\n    from tuva.hcc_suspecting._value_set_hcc_descriptions\n\n)\n\n, billed_hccs as (\n\n    select distinct\n          person_id\n        , data_source\n        , hcc_code\n        , current_year_billed\n    from tuva.hcc_suspecting._int_patient_hcc_history\n\n)\n\n/* BEGIN CKD logic */\n\n/*\n    Find a patient\u2019s two most recent eGFR lab results that are spaced by at\n    least 90 days.\n*/\n, max_lab_date as (\n\n    select\n          person_id\n        , data_source\n        , max(result_date) as max_result_date\n    from egfr_labs\n    group by\n          person_id\n        , data_source\n\n)\n\n, lab_lookback as (\n\n    select\n          egfr_labs.person_id\n        , egfr_labs.data_source\n        , max_lab_date.max_result_date\n        , max(egfr_labs.result_date) as lookback_result_date\n    from egfr_labs\n        left outer join max_lab_date\n        on egfr_labs.person_id = max_lab_date.person_id\n        and egfr_labs.data_source = max_lab_date.data_source\n    where egfr_labs.result_date <= \n\n    dateadd(\n        day,\n        -90,\n        max_result_date\n        )\n\n\n    group by\n          egfr_labs.person_id\n        , egfr_labs.data_source\n        , max_lab_date.max_result_date\n\n)\n\n/*\n    Take the highest eGFR result that occurred between the date range.\n*/\n, eligible_labs as (\n\n    select\n          egfr_labs.person_id\n        , egfr_labs.data_source\n        , egfr_labs.code_type\n        , egfr_labs.code\n        , egfr_labs.result_date\n        , egfr_labs.result\n        , row_number() over (\n            partition by\n                  egfr_labs.person_id\n                , egfr_labs.data_source\n            order by egfr_labs.result desc\n        ) as row_num\n    from egfr_labs\n        inner join lab_lookback\n        on egfr_labs.person_id = lab_lookback.person_id\n        and egfr_labs.data_source = lab_lookback.data_source\n    where egfr_labs.result_date >= lab_lookback.lookback_result_date\n\n)\n\n/*\n    Assign a patient's kidney disease stage based on the highest eGFR based on\n    the following range:\n\n    CKD 3a: eGFR in the range (45-59)\n    CKD 3b: eGFR in the range (30-44)\n    CKD 4: eGFR in the range (15-29)\n    CKD 5: eGFR in the range (0-14)\n*/\n, ckd_suspects as (\n\n    select\n          person_id\n        , data_source\n        , code_type\n        , code as lab_code\n        , result_date\n        , result\n        , case\n            when result between 0 and 14 then '326'\n            when result between 15 and 29 then '327'\n            when result between 30 and 44 then '328'\n            when result between 45 and 59 then '329'\n          end as hcc_code\n        , 'eGFR (' || code || ') result ' || result || ' on ' || result_date as contributing_factor\n    from eligible_labs\n    where row_num = 1\n\n)\n/* END CKD logic */\n\n, unioned as (\n\n    select * from ckd_suspects\n\n)\n\n, add_billed_flag as (\n\n    select\n          unioned.person_id\n        , unioned.data_source\n        , unioned.result_date\n        , unioned.result\n        , unioned.lab_code\n        , unioned.hcc_code\n        , unioned.contributing_factor\n        , seed_hcc_descriptions.hcc_description\n        , billed_hccs.current_year_billed\n    from unioned\n        inner join seed_hcc_descriptions\n            on unioned.hcc_code = seed_hcc_descriptions.hcc_code\n        left outer join billed_hccs\n            on unioned.person_id = billed_hccs.person_id\n            and unioned.data_source = billed_hccs.data_source\n            and unioned.hcc_code = billed_hccs.hcc_code\n\n)\n\n, add_standard_fields as (\n\n    select\n          person_id\n        , data_source\n        , result_date\n        , result\n        , lab_code\n        , hcc_code\n        , hcc_description\n        , contributing_factor\n        , current_year_billed\n        , cast('Lab result suspect' as TEXT) as reason\n        , result_date as suspect_date\n    from add_billed_flag\n\n)\n\n, add_data_types as (\n\n    select\n          cast(person_id as TEXT) as person_id\n        , cast(data_source as TEXT) as data_source\n        , cast(result_date as date) as result_date\n        , cast(result as numeric(28,6)) as result\n        , cast(lab_code as TEXT) as lab_code\n        , cast(hcc_code as TEXT) as hcc_code\n        , cast(hcc_description as TEXT) as hcc_description\n        \n            , cast(current_year_billed as boolean) as current_year_billed\n        \n        , cast(reason as TEXT) as reason\n        , cast(contributing_factor as TEXT) as contributing_factor\n        , cast(suspect_date as date) as suspect_date\n    from add_standard_fields\n\n)\n\nselect\n      person_id\n    , data_source\n    , result_date\n    , result\n    , lab_code\n    , hcc_code\n    , hcc_description\n    , current_year_billed\n    , reason\n    , contributing_factor\n    , suspect_date\n    , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom add_data_types", "relation_name": "tuva.hcc_suspecting._int_lab_suspects", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:29.573863Z", "completed_at": "2025-06-03T19:50:29.604409Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:29.635719Z", "completed_at": "2025-06-03T19:50:29.635728Z"}], "thread_id": "Thread-2", "execution_time": 0.07130169868469238, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.hcc_suspecting__int_medication_suspects", "compiled": true, "compiled_code": "\n\nwith all_medications as (\n\n    select\n          person_id\n        , dispensing_date\n        , drug_code\n        , code_system\n        , data_source\n    from tuva.hcc_suspecting._int_all_medications\n\n)\n\n, seed_clinical_concepts as (\n\n    select\n          concept_name\n        , code\n        , code_system\n    from tuva.hcc_suspecting._value_set_clinical_concepts\n\n)\n\n, seed_hcc_descriptions as (\n\n    select distinct\n          hcc_code\n        , hcc_description\n    from tuva.hcc_suspecting._value_set_hcc_descriptions\n\n)\n\n, billed_hccs as (\n\n    select distinct\n          person_id\n        , data_source\n        , hcc_code\n        , current_year_billed\n    from tuva.hcc_suspecting._int_patient_hcc_history\n\n)\n\n/* BEGIN HCC 155 logic (Major Depression, Moderate or Severe, without Psychosis)\n\n   antidepressant medication taken within the past five years\n*/\n, hcc_155_suspect as (\n\n    select\n          all_medications.person_id\n        , all_medications.dispensing_date\n        , all_medications.drug_code\n        , all_medications.code_system\n        , all_medications.data_source\n        , seed_clinical_concepts.concept_name\n        , seed_hcc_descriptions.hcc_code\n        , seed_hcc_descriptions.hcc_description\n    from all_medications\n        inner join seed_clinical_concepts\n            on all_medications.code_system = seed_clinical_concepts.code_system\n            and all_medications.drug_code = seed_clinical_concepts.code\n        inner join seed_hcc_descriptions\n            on hcc_code = '155'\n    where lower(seed_clinical_concepts.concept_name) = 'antidepressant medication'\n    and all_medications.dispensing_date >= \n\n    dateadd(\n        year,\n        -5,\n        convert_timezone('UTC', current_timestamp())\n        )\n\n\n\n)\n/* END HCC 155 logic */\n\n, unioned as (\n\n    select * from hcc_155_suspect\n\n)\n\n, add_billed_flag as (\n\n    select\n          unioned.person_id\n        , unioned.data_source\n        , unioned.hcc_code\n        , unioned.hcc_description\n        , unioned.concept_name\n        , unioned.dispensing_date\n        , unioned.drug_code\n        , billed_hccs.current_year_billed\n    from unioned\n        left outer join billed_hccs\n            on unioned.person_id = billed_hccs.person_id\n            and unioned.data_source = billed_hccs.data_source\n            and unioned.hcc_code = billed_hccs.hcc_code\n)\n\n, add_standard_fields as (\n\n    select\n          person_id\n        , data_source\n        , hcc_code\n        , hcc_description\n        , dispensing_date\n        , drug_code\n        , current_year_billed\n        , cast('Medication suspect' as TEXT) as reason\n        , concept_name || drug_code || ') dispensed on ' || dispensing_date as contributing_factor\n        , dispensing_date as suspect_date\n    from add_billed_flag\n\n)\n\n, add_data_types as (\n\n    select\n          cast(person_id as TEXT) as person_id\n        , cast(data_source as TEXT) as data_source\n        , cast(hcc_code as TEXT) as hcc_code\n        , cast(hcc_description as TEXT) as hcc_description\n        , cast(dispensing_date as date) as dispensing_date\n        , cast(drug_code as TEXT) as drug_code\n        \n            , cast(current_year_billed as boolean) as current_year_billed\n        \n        , cast(reason as TEXT) as reason\n        , cast(contributing_factor as TEXT) as contributing_factor\n        , cast(suspect_date as date) as suspect_date\n    from add_standard_fields\n\n)\n\nselect\n      person_id\n    , data_source\n    , hcc_code\n    , hcc_description\n    , dispensing_date\n    , drug_code\n    , current_year_billed\n    , reason\n    , contributing_factor\n    , suspect_date\n    , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom add_data_types", "relation_name": "tuva.hcc_suspecting._int_medication_suspects", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:29.584274Z", "completed_at": "2025-06-03T19:50:29.676774Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:29.677221Z", "completed_at": "2025-06-03T19:50:29.677227Z"}], "thread_id": "Thread-1", "execution_time": 0.09346127510070801, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.hcc_suspecting__int_observation_suspects", "compiled": true, "compiled_code": "\n\nwith  __dbt__cte___stg_observation as (\n\n\nselect\n      person_id\n    , observation_date\n    , result\n    , lower(coalesce(normalized_code_type, source_code_type)) as code_type\n    , coalesce(normalized_code, source_code) as code\n    , data_source\nfrom tuva.core.observation\n\n\n), conditions as (\n\n    select\n          person_id\n        , recorded_date\n        , condition_type\n        , code_type\n        , code\n        , data_source\n    from tuva.hcc_suspecting._int_prep_conditions\n\n)\n\n, observations as (\n\n    select\n          person_id\n        , observation_date\n        , result\n        , code_type\n        , code\n        , data_source\n    from __dbt__cte___stg_observation\n\n)\n\n, numeric_observations as (\n\n    select\n          person_id\n        , observation_date\n        \n        , CAST(result as numeric(28,6)) as result\n        \n        , code_type\n        , code\n        , data_source\n    from observations\n   \n        where regexp_like(result, '^[+-]?([0-9]*[.])?[0-9]+$')\n    \n\n)\n\n, seed_clinical_concepts as (\n\n    select\n          concept_name\n        , code\n        , code_system\n    from tuva.hcc_suspecting._value_set_clinical_concepts\n\n)\n\n, seed_hcc_descriptions as (\n\n    select distinct\n          hcc_code\n        , hcc_description\n    from tuva.hcc_suspecting._value_set_hcc_descriptions\n\n)\n\n, billed_hccs as (\n\n    select distinct\n          person_id\n        , data_source\n        , hcc_code\n        , current_year_billed\n    from tuva.hcc_suspecting._int_patient_hcc_history\n\n)\n\n, depression_assessment as (\n\n    select\n          numeric_observations.person_id\n        , numeric_observations.observation_date\n        , numeric_observations.result\n        , numeric_observations.code_type\n        , numeric_observations.code\n        , numeric_observations.data_source\n        , seed_clinical_concepts.concept_name\n    from numeric_observations\n        inner join seed_clinical_concepts\n            on numeric_observations.code_type = seed_clinical_concepts.code_system\n            and numeric_observations.code = seed_clinical_concepts.code\n    where LOWER(seed_clinical_concepts.concept_name) = 'depression assessment (phq-9)'\n\n)\n\n, diabetes as (\n\n     select\n          conditions.person_id\n        , conditions.recorded_date\n        , conditions.condition_type\n        , conditions.code_type\n        , conditions.code\n        , conditions.data_source\n        , seed_clinical_concepts.concept_name\n    from conditions\n        inner join seed_clinical_concepts\n            on conditions.code_type = seed_clinical_concepts.code_system\n            and conditions.code = seed_clinical_concepts.code\n    where LOWER(seed_clinical_concepts.concept_name) = 'diabetes'\n\n)\n\n, hypertension as (\n\n     select\n          conditions.person_id\n        , conditions.recorded_date\n        , conditions.condition_type\n        , conditions.code_type\n        , conditions.code\n        , conditions.data_source\n        , seed_clinical_concepts.concept_name\n    from conditions\n        inner join seed_clinical_concepts\n            on conditions.code_type = seed_clinical_concepts.code_system\n            and conditions.code = seed_clinical_concepts.code\n    where LOWER(seed_clinical_concepts.concept_name) = 'essential hypertension'\n\n)\n\n, obstructive_sleep_apnea as (\n\n     select\n          conditions.person_id\n        , conditions.recorded_date\n        , conditions.condition_type\n        , conditions.code_type\n        , conditions.code\n        , conditions.data_source\n        , seed_clinical_concepts.concept_name\n    from conditions\n        inner join seed_clinical_concepts\n            on conditions.code_type = seed_clinical_concepts.code_system\n            and conditions.code = seed_clinical_concepts.code\n    where LOWER(seed_clinical_concepts.concept_name) = 'obstructive sleep apnea'\n\n)\n\n/* BEGIN HCC 48 logic (Morbid Obesity) */\n, bmi_over_30_with_osa as (\n\n    select\n          numeric_observations.person_id\n        , numeric_observations.data_source\n        , numeric_observations.observation_date\n        , numeric_observations.result as observation_result\n        , obstructive_sleep_apnea.code as condition_code\n        , obstructive_sleep_apnea.recorded_date as condition_date\n        , obstructive_sleep_apnea.concept_name as condition_concept_name\n        , seed_hcc_descriptions.hcc_code\n        , seed_hcc_descriptions.hcc_description\n    from numeric_observations\n        inner join seed_clinical_concepts\n            on numeric_observations.code_type = seed_clinical_concepts.code_system\n            and numeric_observations.code = seed_clinical_concepts.code\n        inner join obstructive_sleep_apnea\n            on numeric_observations.person_id = obstructive_sleep_apnea.person_id\n            /* ensure bmi and condition overlaps in the same year */\n            and date_part('year', numeric_observations.observation_date) = date_part('year', obstructive_sleep_apnea.recorded_date)\n        inner join seed_hcc_descriptions\n            on hcc_code = '48'\n    where LOWER(seed_clinical_concepts.concept_name) = 'bmi'\n    and result >= 30\n\n)\n\n, bmi_over_35_with_diabetes as (\n\n    select\n          numeric_observations.person_id\n        , numeric_observations.data_source\n        , numeric_observations.observation_date\n        , numeric_observations.result as observation_result\n        , diabetes.code as condition_code\n        , diabetes.recorded_date as condition_date\n        , diabetes.concept_name as condition_concept_name\n        , seed_hcc_descriptions.hcc_code\n        , seed_hcc_descriptions.hcc_description\n    from numeric_observations\n        inner join seed_clinical_concepts\n            on numeric_observations.code_type = seed_clinical_concepts.code_system\n            and numeric_observations.code = seed_clinical_concepts.code\n        inner join diabetes\n            on numeric_observations.person_id = diabetes.person_id\n            /* ensure bmi and condition overlaps in the same year */\n            and date_part('year', numeric_observations.observation_date) = date_part('year', diabetes.recorded_date)\n        inner join seed_hcc_descriptions\n            on hcc_code = '48'\n    where LOWER(seed_clinical_concepts.concept_name) = 'bmi'\n    and result >= 35\n\n)\n\n, bmi_over_35_with_hypertension as (\n\n    select\n          numeric_observations.person_id\n        , numeric_observations.data_source\n        , numeric_observations.observation_date\n        , numeric_observations.result as observation_result\n        , hypertension.code as condition_code\n        , hypertension.recorded_date as condition_date\n        , hypertension.concept_name as condition_concept_name\n        , seed_hcc_descriptions.hcc_code\n        , seed_hcc_descriptions.hcc_description\n    from numeric_observations\n        inner join seed_clinical_concepts\n            on numeric_observations.code_type = seed_clinical_concepts.code_system\n            and numeric_observations.code = seed_clinical_concepts.code\n        inner join hypertension\n            on numeric_observations.person_id = hypertension.person_id\n            /* ensure bmi and condition overlaps in the same year */\n            and date_part('year', numeric_observations.observation_date) = date_part('year', hypertension.recorded_date)\n        inner join seed_hcc_descriptions\n            on hcc_code = '48'\n    where LOWER(seed_clinical_concepts.concept_name) = 'bmi'\n    and result >= 35\n\n)\n\n, bmi_over_40 as (\n\n    select\n          numeric_observations.person_id\n        , numeric_observations.data_source\n        , numeric_observations.observation_date\n        , numeric_observations.result as observation_result\n        , CAST(null as TEXT) as condition_code\n        , CAST(null as date) as condition_date\n        , CAST(null as TEXT) as condition_concept_name\n        , seed_hcc_descriptions.hcc_code\n        , seed_hcc_descriptions.hcc_description\n    from numeric_observations\n        inner join seed_clinical_concepts\n            on numeric_observations.code_type = seed_clinical_concepts.code_system\n            and numeric_observations.code = seed_clinical_concepts.code\n        inner join seed_hcc_descriptions\n            on hcc_code = '48'\n    where LOWER(seed_clinical_concepts.concept_name) = 'bmi'\n    and result >= 40\n\n)\n\n, hcc_48_unioned as (\n\n    select * from bmi_over_30_with_osa\n    union all\n    select * from bmi_over_35_with_diabetes\n    union all\n    select * from bmi_over_35_with_hypertension\n    union all\n    select * from bmi_over_40\n\n)\n\n, hcc_48_suspect as (\n\n    select\n          person_id\n        , data_source\n        , observation_date\n        , observation_result\n        , condition_code\n        , condition_date\n        , condition_concept_name\n        , hcc_code\n        , hcc_description\n        , 'BMI result ' || observation_result || case when condition_code is null then ''  else ' with ' || condition_concept_name || '(' || condition_code || ' on ' || condition_date || ')' end as contributing_factor\n    from hcc_48_unioned\n\n)\n/* END HCC 48 logic */\n\n/* BEGIN HCC 155 logic (Major Depression, Moderate or Severe, without Psychosis)\n\n   to determine a positive PHQ-9 assessment, we look at the past 3 screenings\n   for a patient and take the highest result\n*/\n, eligible_depression_assessments as (\n\n    select\n          depression_assessment.person_id\n        , depression_assessment.observation_date\n        , depression_assessment.result\n        , depression_assessment.code_type\n        , depression_assessment.code\n        , depression_assessment.data_source\n        , depression_assessment.concept_name\n        , ROW_NUMBER() over (\n            partition by\n                  depression_assessment.person_id\n                , depression_assessment.data_source\n            order by\n                case when depression_assessment.observation_date is null then 1 else 0 end\n                , depression_assessment.observation_date desc\n        ) as assessment_order\n    from depression_assessment\n\n)\n\n, depression_assessments_ordered as (\n\n    select\n          person_id\n        , observation_date\n        , code_type\n        , code\n        , data_source\n        , concept_name\n        , result\n        , ROW_NUMBER() over (\n            partition by\n                  person_id\n                , data_source\n            --order by result desc nulls last\n            order by\n                case when result is null then 1 else 0 end\n                , result desc\n        ) as result_order --order the last three assessments by result value\n    from eligible_depression_assessments\n    where assessment_order <= 3\n\n)\n\n, hcc_155_suspect as (\n\n    select\n          depression_assessments_ordered.person_id\n        , depression_assessments_ordered.data_source\n        , depression_assessments_ordered.observation_date\n        , depression_assessments_ordered.result as observation_result\n        , CAST(null as TEXT) as condition_code\n        , CAST(null as date) as condition_date\n        , depression_assessments_ordered.concept_name as condition_concept_name\n        , seed_hcc_descriptions.hcc_code\n        , seed_hcc_descriptions.hcc_description\n        , 'PHQ-9 result ' || depression_assessments_ordered.result || ' on ' || depression_assessments_ordered.observation_date as contributing_factor\n    from depression_assessments_ordered\n        inner join seed_hcc_descriptions\n            on hcc_code = '155'\n    where result_order = 1\n    and result >= 15\n\n)\n\n/* END HCC 155 logic */\n\n, unioned as (\n\n    select * from hcc_48_suspect\n    union all\n    select * from hcc_155_suspect\n\n)\n\n, add_billed_flag as (\n\n    select\n          unioned.person_id\n        , unioned.data_source\n        , unioned.observation_date\n        , unioned.observation_result\n        , unioned.condition_code\n        , unioned.condition_date\n        , unioned.condition_concept_name\n        , unioned.hcc_code\n        , unioned.hcc_description\n        , unioned.contributing_factor\n        , billed_hccs.current_year_billed\n    from unioned\n        left outer join billed_hccs\n            on unioned.person_id = billed_hccs.person_id\n            and unioned.data_source = billed_hccs.data_source\n            and unioned.hcc_code = billed_hccs.hcc_code\n\n)\n\n, add_standard_fields as (\n\n    select\n          person_id\n        , data_source\n        , observation_date\n        , observation_result\n        , condition_code\n        , condition_date\n        , condition_concept_name\n        , hcc_code\n        , hcc_description\n        , contributing_factor\n        , current_year_billed\n        , CAST('Observation suspect' as TEXT) as reason\n        , observation_date as suspect_date\n    from add_billed_flag\n\n)\n\n, add_data_types as (\n\n    select\n          CAST(person_id as TEXT) as person_id\n        , CAST(data_source as TEXT) as data_source\n        , CAST(observation_date as date) as observation_date\n        , CAST(observation_result as TEXT) as observation_result\n        , CAST(condition_code as TEXT) as condition_code\n        , CAST(condition_date as date) as condition_date\n        , CAST(condition_concept_name as TEXT) as condition_concept_name\n        , CAST(hcc_code as TEXT) as hcc_code\n        , CAST(hcc_description as TEXT) as hcc_description\n        \n            , CAST(current_year_billed as boolean) as current_year_billed\n        \n        , CAST(reason as TEXT) as reason\n        , CAST(contributing_factor as TEXT) as contributing_factor\n        , CAST(suspect_date as date) as suspect_date\n    from add_standard_fields\n\n)\n\nselect\n      person_id\n    , data_source\n    , observation_date\n    , observation_result\n    , condition_code\n    , condition_date\n    , condition_concept_name\n    , hcc_code\n    , hcc_description\n    , current_year_billed\n    , reason\n    , contributing_factor\n    , suspect_date\n    , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom add_data_types", "relation_name": "tuva.hcc_suspecting._int_observation_suspects", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:29.654614Z", "completed_at": "2025-06-03T19:50:29.676999Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:29.677661Z", "completed_at": "2025-06-03T19:50:29.677666Z"}], "thread_id": "Thread-4", "execution_time": 0.07358527183532715, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.chronic_conditions__cms_chronic_conditions_long", "compiled": true, "compiled_code": "\n\n\nwith conditions_unioned as (\n\n    select * from tuva.chronic_conditions._int_cms_chronic_condition_all\n    union distinct\n    select * from tuva.chronic_conditions._int_cms_chronic_condition_hiv_aids\n    union distinct\n    select * from tuva.chronic_conditions._int_cms_chronic_condition_oud\n\n)\n\n\nselect\n      person_id\n    , claim_id\n    , start_date\n    , chronic_condition_type\n    , condition_category\n    , condition\n    , data_source\n    , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom conditions_unioned", "relation_name": "tuva.chronic_conditions.cms_chronic_conditions_long", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:29.671172Z", "completed_at": "2025-06-03T19:50:29.677993Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:29.678700Z", "completed_at": "2025-06-03T19:50:29.678704Z"}], "thread_id": "Thread-2", "execution_time": 0.008098125457763672, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.accepted_values_chronic_conditions__cms_chronic_conditions_oud_condition__Opioid_Use_Disorder_OUD_.f44489eec5", "compiled": true, "compiled_code": "\n    \n    \n\nwith all_values as (\n\n    select\n        condition as value_field,\n        count(*) as n_records\n\n    from tuva.chronic_conditions._int_cms_chronic_condition_oud\n    group by condition\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    'Opioid Use Disorder (OUD)'\n)\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:29.680499Z", "completed_at": "2025-06-03T19:50:29.694887Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:29.695141Z", "completed_at": "2025-06-03T19:50:29.695147Z"}], "thread_id": "Thread-1", "execution_time": 0.016049861907958984, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.not_null_chronic_conditions__cms_chronic_conditions_oud_claim_id.7ee5fe28fe", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect claim_id\nfrom tuva.chronic_conditions._int_cms_chronic_condition_oud\nwhere claim_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:29.684857Z", "completed_at": "2025-06-03T19:50:29.696057Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:29.697183Z", "completed_at": "2025-06-03T19:50:29.697188Z"}], "thread_id": "Thread-4", "execution_time": 0.017840147018432617, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.not_null_chronic_conditions__cms_chronic_conditions_oud_condition.6800b245ea", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect condition\nfrom tuva.chronic_conditions._int_cms_chronic_condition_oud\nwhere condition is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:29.690164Z", "completed_at": "2025-06-03T19:50:29.696438Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:29.703804Z", "completed_at": "2025-06-03T19:50:29.703810Z"}], "thread_id": "Thread-2", "execution_time": 0.02359294891357422, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.not_null_chronic_conditions__cms_chronic_conditions_oud_person_id.e3541cf516", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect person_id\nfrom tuva.chronic_conditions._int_cms_chronic_condition_oud\nwhere person_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:29.697547Z", "completed_at": "2025-06-03T19:50:29.711946Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:29.713230Z", "completed_at": "2025-06-03T19:50:29.713236Z"}], "thread_id": "Thread-1", "execution_time": 0.01749396324157715, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.cms_hcc__int_hcc_mapping", "compiled": true, "compiled_code": "\n/*\nSteps for staging the medical claim data:\n    1) Filter to risk-adjustable claims per claim type for the collection year.\n    2) Gather diagnosis codes from Condition for the eligible claims.\n    3) Map and filter diagnosis codes to HCCs for each CMS model version\n    4) Union results from each CMS model version\n       (note: some payment years may not have results for v28)\n*/\n\nwith conditions as (\n\n    select\n          person_id\n        , condition_code\n        , payment_year\n        , collection_start_date\n        , collection_end_date\n    from tuva.cms_hcc._int_eligible_conditions\n\n)\n\n, seed_hcc_mapping as (\n\n    select\n          payment_year\n        , diagnosis_code\n        , cms_hcc_v24\n        , cms_hcc_v24_flag\n        , cms_hcc_v28\n        , cms_hcc_v28_flag\n    from tuva.cms_hcc._value_set_icd_10_cm_mappings\n\n)\n\n/* casting hcc_code to avoid formatting changes during union */\n, v24_mapped as (\n\n    select distinct\n          conditions.person_id\n        , conditions.condition_code\n        , conditions.payment_year\n        , conditions.collection_start_date\n        , conditions.collection_end_date\n        , 'CMS-HCC-V24' as model_version\n        , cast(seed_hcc_mapping.cms_hcc_v24 as TEXT) as hcc_code\n    from conditions\n        inner join seed_hcc_mapping\n            on conditions.condition_code = seed_hcc_mapping.diagnosis_code\n            and conditions.payment_year = seed_hcc_mapping.payment_year\n    where cms_hcc_v24_flag = 'Yes'\n\n)\n\n, v28_mapped as (\n\n    select distinct\n          conditions.person_id\n        , conditions.condition_code\n        , conditions.payment_year\n        , conditions.collection_start_date\n        , conditions.collection_end_date\n        , 'CMS-HCC-V28' as model_version\n        , cast(seed_hcc_mapping.cms_hcc_v28 as TEXT) as hcc_code\n    from conditions\n        inner join seed_hcc_mapping\n            on conditions.condition_code = seed_hcc_mapping.diagnosis_code\n            and conditions.payment_year = seed_hcc_mapping.payment_year\n    where cms_hcc_v28_flag = 'Yes'\n\n)\n\n, unioned as (\n\n    select * from v24_mapped\n    union all\n    select * from v28_mapped\n\n)\n\n, add_data_types as (\n\n    select\n          cast(person_id as TEXT) as person_id\n        , cast(condition_code as TEXT) as condition_code\n        , cast(hcc_code as TEXT) as hcc_code\n        , cast(model_version as TEXT) as model_version\n        , cast(payment_year as integer) as payment_year\n        , cast(collection_start_date as date) as collection_start_date\n        , cast(collection_end_date as date) as collection_end_date\n    from unioned\n\n)\n\nselect\n      person_id\n    , condition_code\n    , hcc_code\n    , model_version\n    , payment_year\n    , collection_start_date\n    , collection_end_date\n    , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom add_data_types", "relation_name": "tuva.cms_hcc._int_hcc_mapping", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:29.713609Z", "completed_at": "2025-06-03T19:50:29.859431Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:29.860097Z", "completed_at": "2025-06-03T19:50:29.860105Z"}], "thread_id": "Thread-4", "execution_time": 0.14871788024902344, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.not_null_cms_hcc__int_eligible_conditions_condition_code.e811a078bc", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect condition_code\nfrom tuva.cms_hcc._int_eligible_conditions\nwhere condition_code is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:29.718248Z", "completed_at": "2025-06-03T19:50:29.866808Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:29.870198Z", "completed_at": "2025-06-03T19:50:29.870204Z"}], "thread_id": "Thread-2", "execution_time": 0.15855073928833008, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.fhir_preprocessing__int_medical_claim_eob", "compiled": true, "compiled_code": "\nwith  __dbt__cte___stg_eligibility as (\n\n\nselect\n      eligibility_id\n    , person_id\n    , member_id\n    , payer_type\n    , payer\n    , plan\n    , enrollment_start_date\n    , enrollment_end_date\n    , subscriber_relation\n    , subscriber_id\n    , data_source\nfrom tuva.core.eligibility\n\n\n),  __dbt__cte___stg_medical_claim as (\n\n\nselect\n      medical_claim_id\n    , person_id\n    , claim_id\n    , claim_line_number\n    , claim_type\n    , encounter_group\n    , claim_start_date\n    , claim_end_date\n    , claim_line_start_date\n    , payer\n    , plan\n    , billing_id\n    , billing_name\n    , rendering_id\n    , rendering_name\n    , admission_date\n    , discharge_date\n    , bill_type_code\n    , revenue_center_code\n    , revenue_center_description\n    , place_of_service_code\n    , place_of_service_description\n    , hcpcs_code\n    , hcpcs_modifier_1\n    , hcpcs_modifier_2\n    , hcpcs_modifier_3\n    , hcpcs_modifier_4\n    , hcpcs_modifier_5\n    , paid_date\n    , paid_amount\n    , in_network_flag\n    , data_source\nfrom tuva.core.medical_claim\n\n\n), eligibility as (\n\n    select\n          person_id\n        , eligibility_id\n        , payer\n        , plan\n        , enrollment_start_date\n        , enrollment_end_date\n    from __dbt__cte___stg_eligibility\n\n)\n\n, claim_diagnosis as (\n\n    select\n          claim_id\n        , eob_diagnosis_list\n    from tuva.fhir_preprocessing._int_medical_claim_diagnosis\n\n)\n\n, claim_procedure as (\n\n    select\n          claim_id\n        , eob_procedure_list\n    from tuva.fhir_preprocessing._int_medical_claim_procedure\n\n)\n\n, claim_supporting_info as (\n\n    select\n          claim_id\n        , eob_supporting_info_list\n    from tuva.fhir_preprocessing._int_medical_claim_supporting_info\n\n)\n\n, claim_item as (\n\n    select\n          claim_id\n        , eob_item_list\n    from tuva.fhir_preprocessing._int_medical_claim_item\n\n)\n\n, claim_total as (\n\n    select\n          claim_id\n        , eob_total_list\n    from tuva.fhir_preprocessing._int_medical_claim_total\n\n)\n\n/* add window function to dedupe if there is overlapping coverage */\n, add_coverage as (\n\n    select\n          medical_claim.person_id\n        , medical_claim.medical_claim_id\n        , medical_claim.claim_id\n        , medical_claim.claim_type\n        , medical_claim.encounter_group\n        , medical_claim.claim_start_date\n        , medical_claim.claim_end_date\n        , medical_claim.paid_date\n        , medical_claim.payer\n        , medical_claim.billing_id\n        , medical_claim.billing_name\n        , medical_claim.rendering_id\n        , medical_claim.rendering_name\n        , eligibility.eligibility_id\n        , medical_claim.data_source\n        , row_number() over (\n            partition by\n                  medical_claim.person_id\n                , medical_claim.medical_claim_id\n            order by\n                  eligibility.enrollment_start_date desc\n                , eligibility.enrollment_end_date desc\n        ) as coverage_row_num\n    from __dbt__cte___stg_medical_claim as medical_claim\n        left outer join eligibility\n            on medical_claim.person_id = eligibility.person_id\n            and medical_claim.payer = eligibility.payer\n            and medical_claim.plan = eligibility.plan\n            and medical_claim.claim_start_date\n                between eligibility.enrollment_start_date\n                and eligibility.enrollment_end_date\n    where medical_claim.claim_line_number = 1 /* filter to claim header */\n\n)\n\n, dedupe as (\n\n    select\n          person_id\n        , medical_claim_id\n        , claim_id\n        , claim_type\n        , encounter_group\n        , claim_start_date\n        , claim_end_date\n        , paid_date\n        , payer\n        , billing_id\n        , billing_name\n        , rendering_id\n        , rendering_name\n        , eligibility_id\n        , data_source\n    from add_coverage\n    where coverage_row_num = 1\n\n)\n\n, medical_eob as (\n\n    select\n          cast(medical_claim.person_id as TEXT ) as patient_internal_id\n        , cast(medical_claim.medical_claim_id as TEXT ) as resource_internal_id\n        , cast(medical_claim.claim_id as TEXT ) as unique_claim_id\n        , cast(medical_claim.claim_type as TEXT ) as eob_type_code\n        , case\n            when medical_claim.encounter_group = 'inpatient' then 'inpatient'\n            else 'outpatient'\n          end as eob_subtype_code\n        , cast(medical_claim.claim_start_date as date) as eob_billable_period_start\n        , cast(medical_claim.claim_end_date as date) as eob_billable_period_end\n        , coalesce(\n              cast(medical_claim.paid_date as date)\n            , cast(medical_claim.claim_start_date as date)\n          ) as eob_created\n        , cast(medical_claim.payer as TEXT ) as organization_name\n        /* required for FHIR validation, default to dummy practitioner */\n        , coalesce(\n              cast(medical_claim.billing_id as TEXT )\n            , cast(medical_claim.rendering_id as TEXT )\n            , '9999999999'\n          ) as practitioner_internal_id\n        , coalesce(\n              cast(medical_claim.billing_name as TEXT )\n            , cast(medical_claim.rendering_name as TEXT )\n            , 'Dummy Practitioner'\n          ) as practitioner_name_text\n        , cast(md5(cast(coalesce(cast(medical_claim.eligibility_id as TEXT), '_dbt_utils_surrogate_key_null_') as TEXT)) as TEXT ) as coverage_internal_id\n        , cast(claim_diagnosis.eob_diagnosis_list as TEXT ) as eob_diagnosis_list\n        , cast(claim_procedure.eob_procedure_list as TEXT ) as eob_procedure_list\n        , cast(claim_supporting_info.eob_supporting_info_list as TEXT ) as eob_supporting_info_list\n        , cast(claim_item.eob_item_list as TEXT ) as eob_item_list\n        , cast(claim_total.eob_total_list as TEXT ) as eob_total_list\n        , cast(medical_claim.data_source as TEXT ) as data_source\n    from dedupe as medical_claim\n        left outer join claim_diagnosis\n            on medical_claim.claim_id = claim_diagnosis.claim_id\n        left outer join claim_procedure\n            on medical_claim.claim_id = claim_procedure.claim_id\n        left outer join claim_supporting_info\n            on medical_claim.claim_id = claim_supporting_info.claim_id\n        left outer join claim_item\n            on medical_claim.claim_id = claim_item.claim_id\n        left outer join claim_total\n            on medical_claim.claim_id = claim_total.claim_id\n\n)\n\nselect\n      patient_internal_id\n    , resource_internal_id\n    , unique_claim_id\n    , eob_type_code\n    , eob_subtype_code\n    , eob_billable_period_start\n    , eob_billable_period_end\n    , eob_created\n    , organization_name\n    , practitioner_internal_id\n    , practitioner_name_text\n    , coverage_internal_id\n    , eob_diagnosis_list\n    , eob_procedure_list\n    , eob_supporting_info_list\n    , eob_item_list\n    , eob_total_list\n    , data_source\nfrom medical_eob", "relation_name": "tuva.fhir_preprocessing._int_medical_claim_eob", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:29.860533Z", "completed_at": "2025-06-03T19:50:29.871551Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:29.877392Z", "completed_at": "2025-06-03T19:50:29.877400Z"}], "thread_id": "Thread-1", "execution_time": 0.018447160720825195, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.cms_hcc__int_demographic_factors", "compiled": true, "compiled_code": "\n\nwith members as (\n\n    select\n          person_id\n        , enrollment_status\n        , gender\n        , age_group\n        , medicaid_status\n        , dual_status\n        , orec\n        , institutional_status\n        , enrollment_status_default\n        , medicaid_dual_status_default\n        , orec_default\n        , institutional_status_default\n        , payment_year\n        , collection_start_date\n        , collection_end_date\n    from tuva.cms_hcc._int_members\n\n)\n\n, seed_demographic_factors as (\n\n    select\n          model_version\n        , factor_type\n        , enrollment_status\n        , gender\n        , age_group\n        , medicaid_status\n        , dual_status\n        , orec\n        , institutional_status\n        , coefficient\n    from tuva.cms_hcc._value_set_demographic_factors\n    where plan_segment is null /* data not available */\n\n)\n\n, v24_new_enrollees as (\n\n    select\n          members.person_id\n        , members.enrollment_status\n        , members.gender\n        , members.age_group\n        , members.medicaid_status\n        , members.dual_status\n        , members.orec\n        , members.institutional_status\n        , members.enrollment_status_default\n        , members.medicaid_dual_status_default\n        , members.orec_default\n        , members.institutional_status_default\n        , members.payment_year\n        , members.collection_start_date\n        , members.collection_end_date\n        , seed_demographic_factors.model_version\n        , seed_demographic_factors.factor_type\n        , seed_demographic_factors.coefficient\n    from members\n        inner join seed_demographic_factors\n            on members.enrollment_status = seed_demographic_factors.enrollment_status\n            and members.gender = seed_demographic_factors.gender\n            and members.age_group = seed_demographic_factors.age_group\n            and members.medicaid_status = seed_demographic_factors.medicaid_status\n            and members.orec = seed_demographic_factors.orec\n    where members.enrollment_status = 'New'\n        and seed_demographic_factors.model_version = 'CMS-HCC-V24'\n\n)\n\n, v24_continuining_enrollees as (\n\n    select\n          members.person_id\n        , members.enrollment_status\n        , members.gender\n        , members.age_group\n        , members.medicaid_status\n        , members.dual_status\n        , members.orec\n        , members.institutional_status\n        , members.enrollment_status_default\n        , members.medicaid_dual_status_default\n        , members.orec_default\n        , members.institutional_status_default\n        , members.payment_year\n        , members.collection_start_date\n        , members.collection_end_date\n        , seed_demographic_factors.model_version\n        , seed_demographic_factors.factor_type\n        , seed_demographic_factors.coefficient\n    from members\n        inner join seed_demographic_factors\n            on members.enrollment_status = seed_demographic_factors.enrollment_status\n            and members.gender = seed_demographic_factors.gender\n            and members.age_group = seed_demographic_factors.age_group\n            and members.medicaid_status = seed_demographic_factors.medicaid_status\n            and members.dual_status = seed_demographic_factors.dual_status\n                /* THIS CARVE OUT EXISTS AS MEMBERS WITH OREC = DISABLED OVER 65 SHOULD GET THE AGED DEMO FACTOR. */\n            and case when members.age_group in ('65-69', '70-74', '75-79', '80-84', '85-89', '90-94', '>=95') then 'Aged' else members.orec end = seed_demographic_factors.orec\n            and members.institutional_status = seed_demographic_factors.institutional_status\n    where members.enrollment_status = 'Continuing'\n        and seed_demographic_factors.model_version = 'CMS-HCC-V24'\n\n)\n\n, v28_new_enrollees as (\n\n    select\n          members.person_id\n        , members.enrollment_status\n        , members.gender\n        , members.age_group\n        , members.medicaid_status\n        , members.dual_status\n        , members.orec\n        , members.institutional_status\n        , members.enrollment_status_default\n        , members.medicaid_dual_status_default\n        , members.orec_default\n        , members.institutional_status_default\n        , members.payment_year\n        , members.collection_start_date\n        , members.collection_end_date\n        , seed_demographic_factors.model_version\n        , seed_demographic_factors.factor_type\n        , seed_demographic_factors.coefficient\n    from members\n        inner join seed_demographic_factors\n            on members.enrollment_status = seed_demographic_factors.enrollment_status\n            and members.gender = seed_demographic_factors.gender\n            and members.age_group = seed_demographic_factors.age_group\n            and members.medicaid_status = seed_demographic_factors.medicaid_status\n            and members.orec = seed_demographic_factors.orec\n    where members.enrollment_status = 'New'\n        and seed_demographic_factors.model_version = 'CMS-HCC-V28'\n\n)\n\n, v28_continuining_enrollees as (\n\n    select\n          members.person_id\n        , members.enrollment_status\n        , members.gender\n        , members.age_group\n        , members.medicaid_status\n        , members.dual_status\n        , members.orec\n        , members.institutional_status\n        , members.enrollment_status_default\n        , members.medicaid_dual_status_default\n        , members.orec_default\n        , members.institutional_status_default\n        , members.payment_year\n        , members.collection_start_date\n        , members.collection_end_date\n        , seed_demographic_factors.model_version\n        , seed_demographic_factors.factor_type\n        , seed_demographic_factors.coefficient\n    from members\n        inner join seed_demographic_factors\n            on members.enrollment_status = seed_demographic_factors.enrollment_status\n            and members.gender = seed_demographic_factors.gender\n            and members.age_group = seed_demographic_factors.age_group\n            and members.medicaid_status = seed_demographic_factors.medicaid_status\n            and members.dual_status = seed_demographic_factors.dual_status\n                /* THIS CARVE OUT EXISTS AS MEMBERS WITH OREC = DISABLED OVER 65 SHOULD GET THE AGED DEMO FACTOR. */\n            and case when members.age_group in ('65-69', '70-74', '75-79', '80-84', '85-89', '90-94', '>=95') then 'Aged' else members.orec end = seed_demographic_factors.orec\n            and members.institutional_status = seed_demographic_factors.institutional_status\n    where members.enrollment_status = 'Continuing'\n        and seed_demographic_factors.model_version = 'CMS-HCC-V28'\n\n)\n\n, unioned as (\n\n    select * from v24_new_enrollees\n    union all\n    select * from v24_continuining_enrollees\n    union all\n    select * from v28_new_enrollees\n    union all\n    select * from v28_continuining_enrollees\n\n)\n\n, add_data_types as (\n\n    select\n          cast(person_id as TEXT) as person_id\n        , cast(enrollment_status as TEXT) as enrollment_status\n        , cast(gender as TEXT) as gender\n        , cast(age_group as TEXT) as age_group\n        , cast(medicaid_status as TEXT) as medicaid_status\n        , cast(dual_status as TEXT) as dual_status\n        , cast(orec as TEXT) as orec\n        , cast(institutional_status as TEXT) as institutional_status\n        \n            , cast(enrollment_status_default as boolean) as enrollment_status_default\n            , cast(medicaid_dual_status_default as boolean) as medicaid_dual_status_default\n            , cast(orec_default as boolean) as orec_default\n            , cast(institutional_status_default as boolean) as institutional_status_default\n        \n        , round(cast(coefficient as numeric(28,6)), 3) as coefficient\n        , cast(factor_type as TEXT) as factor_type\n        , cast(model_version as TEXT) as model_version\n        , cast(payment_year as integer) as payment_year\n        , cast(collection_start_date as date) as collection_start_date\n        , cast(collection_end_date as date) as collection_end_date\n    from unioned\n\n)\n\nselect\n      person_id\n    , enrollment_status\n    , gender\n    , age_group\n    , medicaid_status\n    , dual_status\n    , orec\n    , institutional_status\n    , enrollment_status_default\n    , medicaid_dual_status_default\n    , orec_default\n    , institutional_status_default\n    , coefficient\n    , factor_type\n    , model_version\n    , payment_year\n    , collection_start_date\n    , collection_end_date\n    , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom add_data_types", "relation_name": "tuva.cms_hcc._int_demographic_factors", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:29.872009Z", "completed_at": "2025-06-03T19:50:29.884427Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:29.884913Z", "completed_at": "2025-06-03T19:50:29.884919Z"}], "thread_id": "Thread-4", "execution_time": 0.014294862747192383, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_utils_unique_combination_of_columns_cms_hcc__int_members_person_id__collection_end_date.10c6ca651a", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith validation_errors as (\n\n    select\n        person_id, collection_end_date\n    from tuva.cms_hcc._int_members\n    group by person_id, collection_end_date\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:29.878429Z", "completed_at": "2025-06-03T19:50:29.885307Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:29.893954Z", "completed_at": "2025-06-03T19:50:29.893961Z"}], "thread_id": "Thread-2", "execution_time": 0.022284984588623047, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.not_null_cms_hcc__int_members_person_id.30ff66ae9a", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect person_id\nfrom tuva.cms_hcc._int_members\nwhere person_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:29.885496Z", "completed_at": "2025-06-03T19:50:29.895318Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:29.903113Z", "completed_at": "2025-06-03T19:50:29.903121Z"}], "thread_id": "Thread-1", "execution_time": 0.019105911254882812, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.financial_pmpm__pmpm_prep", "compiled": true, "compiled_code": "\n\nwith combine as (\n  select\n      a.person_id\n    , a.year_month\n    , a.payer\n    , a.plan\n    , a.data_source\n    , a.payer_attributed_provider\n    , a.payer_attributed_provider_practice\n    , a.payer_attributed_provider_organization\n    , a.payer_attributed_provider_lob\n    , a.custom_attributed_provider\n    , a.custom_attributed_provider_practice\n    , a.custom_attributed_provider_organization\n    , a.custom_attributed_provider_lob\n\n    -- service cat 1 paid\n    , coalesce(b.inpatient_paid, 0) as inpatient_paid\n    , coalesce(b.outpatient_paid, 0) as outpatient_paid\n    , coalesce(b.office_based_paid, 0) as office_based_paid\n    , coalesce(b.ancillary_paid, 0) as ancillary_paid\n    , coalesce(b.other_paid, 0) as other_paid\n    , coalesce(b.pharmacy_paid, 0) as pharmacy_paid\n\n    -- service cat 2 paid\n    , coalesce(c.acute_inpatient_paid, 0) as acute_inpatient_paid\n    , coalesce(c.ambulance_paid, 0) as ambulance_paid\n    , coalesce(c.ambulatory_surgery_center_paid, 0) as ambulatory_surgery_center_paid\n    , coalesce(c.dialysis_paid, 0) as dialysis_paid\n    , coalesce(c.durable_medical_equipment_paid, 0) as durable_medical_equipment_paid\n    , coalesce(c.emergency_department_paid, 0) as emergency_department_paid\n    , coalesce(c.home_health_paid, 0) as home_health_paid\n    , coalesce(c.inpatient_hospice_paid, 0) as inpatient_hospice_paid\n    , coalesce(c.inpatient_psychiatric_paid, 0) as inpatient_psychiatric_paid\n    , coalesce(c.inpatient_rehabilitation_paid, 0) as inpatient_rehabilitation_paid\n    , coalesce(c.lab_paid, 0) as lab_paid\n    , coalesce(c.observation_paid, 0) as observation_paid\n    , coalesce(c.office_based_other_paid, 0) as office_based_other_paid\n    , coalesce(c.office_based_ptotst_paid, 0) as office_based_pt_ot_st_paid\n    , coalesce(c.office_based_radiology_paid, 0) as office_based_radiology_paid\n    , coalesce(c.office_based_surgery_paid, 0) as office_based_surgery_paid\n    , coalesce(c.office_based_visit_paid, 0) as office_based_visit_paid\n    , coalesce(c.other_paid, 0) as other_paid_2\n    , coalesce(c.outpatient_hospice_paid, 0) as outpatient_hospice_paid\n    , coalesce(c.outpatient_hospital_or_clinic_paid, 0) as outpatient_hospital_or_clinic_paid\n    , coalesce(c.outpatient_ptotst_paid, 0) as outpatient_pt_ot_st_paid\n    , coalesce(c.outpatient_psychiatric_paid, 0) as outpatient_psychiatric_paid\n    , coalesce(c.outpatient_radiology_paid, 0) as outpatient_radiology_paid\n    , coalesce(c.outpatient_rehabilitation_paid, 0) as outpatient_rehabilitation_paid\n    , coalesce(c.outpatient_surgery_paid, 0) as outpatient_surgery_paid\n    , coalesce(c.pharmacy_paid, 0) as pharmacy_paid_2\n    , coalesce(c.skilled_nursing_paid, 0) as skilled_nursing_paid\n    , coalesce(c.telehealth_visit_paid, 0) as telehealth_visit_paid\n    , coalesce(c.urgent_care_paid, 0) as urgent_care_paid\n\n    -- service cat 1 allowed\n    , coalesce(d.inpatient_allowed, 0) as inpatient_allowed\n    , coalesce(d.outpatient_allowed, 0) as outpatient_allowed\n    , coalesce(d.office_based_allowed, 0) as office_based_allowed\n    , coalesce(d.ancillary_allowed, 0) as ancillary_allowed\n    , coalesce(d.other_allowed, 0) as other_allowed\n    , coalesce(d.pharmacy_allowed, 0) as pharmacy_allowed\n\n    -- service cat 2 allowed\n    , coalesce(e.acute_inpatient_allowed, 0) as acute_inpatient_allowed\n    , coalesce(e.ambulance_allowed, 0) as ambulance_allowed\n    , coalesce(e.ambulatory_surgery_center_allowed, 0) as ambulatory_surgery_center_allowed\n    , coalesce(e.dialysis_allowed, 0) as dialysis_allowed\n    , coalesce(e.durable_medical_equipment_allowed, 0) as durable_medical_equipment_allowed\n    , coalesce(e.emergency_department_allowed, 0) as emergency_department_allowed\n    , coalesce(e.home_health_allowed, 0) as home_health_allowed\n    , coalesce(e.inpatient_hospice_allowed, 0) as inpatient_hospice_allowed\n    , coalesce(e.inpatient_psychiatric_allowed, 0) as inpatient_psychiatric_allowed\n    , coalesce(e.inpatient_rehabilitation_allowed, 0) as inpatient_rehabilitation_allowed\n    , coalesce(e.lab_allowed, 0) as lab_allowed\n    , coalesce(e.observation_allowed, 0) as observation_allowed\n    , coalesce(e.office_based_other_allowed, 0) as office_based_other_allowed\n    , coalesce(e.office_based_ptotst_allowed, 0) as office_based_pt_ot_st_allowed\n    , coalesce(e.office_based_radiology_allowed, 0) as office_based_radiology_allowed\n    , coalesce(e.office_based_surgery_allowed, 0) as office_based_surgery_allowed\n    , coalesce(e.office_based_visit_allowed, 0) as office_based_visit_allowed\n    , coalesce(e.other_allowed, 0) as other_allowed_2\n    , coalesce(e.outpatient_hospice_allowed, 0) as outpatient_hospice_allowed\n    , coalesce(e.outpatient_hospital_or_clinic_allowed, 0) as outpatient_hospital_or_clinic_allowed\n    , coalesce(e.outpatient_ptotst_allowed, 0) as outpatient_pt_ot_st_allowed\n    , coalesce(e.outpatient_psychiatric_allowed, 0) as outpatient_psychiatric_allowed\n    , coalesce(e.outpatient_radiology_allowed, 0) as outpatient_radiology_allowed\n    , coalesce(e.outpatient_rehabilitation_allowed, 0) as outpatient_rehabilitation_allowed\n    , coalesce(e.outpatient_surgery_allowed, 0) as outpatient_surgery_allowed\n    , coalesce(e.pharmacy_allowed, 0) as pharmacy_allowed_2\n    , coalesce(e.skilled_nursing_allowed, 0) as skilled_nursing_allowed\n    , coalesce(e.telehealth_visit_allowed, 0) as telehealth_visit_allowed\n    , coalesce(e.urgent_care_allowed, 0) as urgent_care_allowed\n\n  from tuva.core.member_months as a\n  left outer join tuva.financial_pmpm._int_service_category_1_paid_pivot as b\n    on a.person_id = b.person_id\n    and a.year_month = b.year_month\n    and a.payer = b.payer\n    and a.plan = b.plan\n    and a.data_source = b.data_source\n  left outer join tuva.financial_pmpm._int_service_category_2_paid_pivot as c\n    on a.person_id = c.person_id\n    and a.year_month = c.year_month\n    and a.payer = c.payer\n    and a.plan = c.plan\n    and a.data_source = c.data_source\n  left outer join tuva.financial_pmpm._int_service_category_1_allowed_pivot as d\n    on a.person_id = d.person_id\n    and a.year_month = d.year_month\n    and a.payer = d.payer\n    and a.plan = d.plan\n    and a.data_source = d.data_source\n  left outer join tuva.financial_pmpm._int_service_category_2_allowed_pivot as e\n    on a.person_id = e.person_id\n    and a.year_month = e.year_month\n    and a.payer = e.payer\n    and a.plan = e.plan\n    and a.data_source = e.data_source\n)\n\nselect\n    *\n  , inpatient_paid + outpatient_paid + office_based_paid + ancillary_paid + other_paid + pharmacy_paid as total_paid\n  , inpatient_paid + outpatient_paid + office_based_paid + ancillary_paid + other_paid as medical_paid\n  , inpatient_allowed + outpatient_allowed + office_based_allowed + ancillary_allowed + other_allowed + pharmacy_allowed as total_allowed\n  , inpatient_allowed + outpatient_allowed + office_based_allowed + ancillary_allowed + other_allowed as medical_allowed\n  , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom combine", "relation_name": "tuva.financial_pmpm.pmpm_prep", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:29.895778Z", "completed_at": "2025-06-03T19:50:29.918759Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:29.919830Z", "completed_at": "2025-06-03T19:50:29.919837Z"}], "thread_id": "Thread-4", "execution_time": 0.02539801597595215, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.quality_measures__int_adh_diabetes_long", "compiled": true, "compiled_code": "\n\nwith denominator as (\n\n    select\n          person_id\n        , performance_period_begin\n        , performance_period_end\n        , measure_id\n        , measure_name\n        , measure_version\n        , denominator_flag\n    from tuva.quality_measures._int_adh_diabetes_denominator\n\n)\n\n, numerator as (\n\n    select\n          person_id\n        , evidence_date\n        , evidence_value\n    from tuva.quality_measures._int_adh_diabetes_numerator\n\n)\n\n, exclusions as (\n\n    select\n          person_id\n        , exclusion_date\n        , exclusion_reason\n    from tuva.quality_measures._int_adh_diabetes_exclusions\n\n)\n\n, measure_flags as (\n\n    select\n          denominator.person_id\n        , case\n            when denominator.person_id is not null\n            then 1\n            else null\n          end as denominator_flag\n        , case\n            when numerator.person_id is not null and denominator.person_id is not null\n            then 1\n            when denominator.person_id is not null\n            then 0\n            else null\n          end as numerator_flag\n        , case\n            when exclusions.person_id is not null and denominator.person_id is not null\n            then 1\n            when denominator.person_id is not null\n            then 0\n            else null\n          end as exclusion_flag\n        , numerator.evidence_date\n        , numerator.evidence_value\n        , exclusions.exclusion_date\n        , exclusions.exclusion_reason\n        , denominator.performance_period_begin\n        , denominator.performance_period_end\n        , denominator.measure_id\n        , denominator.measure_name\n        , denominator.measure_version\n        , (row_number() over (\n            partition by\n                  denominator.person_id\n                , denominator.performance_period_begin\n                , denominator.performance_period_end\n                , denominator.measure_id\n                , denominator.measure_name\n              order by\n                  case when numerator.evidence_date is null then 1 else 0 end\n                  , numerator.evidence_date desc\n                , case when exclusions.exclusion_date is null then 1 else 0 end\n                  , exclusions.exclusion_date desc\n          )) as rn\n    from denominator\n        left outer join numerator\n            on denominator.person_id = numerator.person_id\n        left outer join exclusions\n            on denominator.person_id = exclusions.person_id\n\n)\n\n/*\n    Deduplicate measure rows by latest evidence date or exclusion date\n*/\n, deduped as (\n\n    select\n          person_id\n        , denominator_flag\n        , numerator_flag\n        , exclusion_flag\n        , evidence_date\n        , evidence_value\n        , exclusion_date\n        , exclusion_reason\n        , performance_period_begin\n        , performance_period_end\n        , measure_id\n        , measure_name\n        , measure_version\n    from measure_flags\n    where rn = 1\n\n)\n\n, add_data_types as (\n\n    select\n          cast(person_id as TEXT) as person_id\n        , cast(denominator_flag as integer) as denominator_flag\n        , cast(numerator_flag as integer) as numerator_flag\n        , cast(exclusion_flag as integer) as exclusion_flag\n        , cast(evidence_date as date) as evidence_date\n        , cast(evidence_value as TEXT) as evidence_value\n        , cast(exclusion_date as date) as exclusion_date\n        , cast(exclusion_reason as TEXT) as exclusion_reason\n        , cast(performance_period_begin as date) as performance_period_begin\n        , cast(performance_period_end as date) as performance_period_end\n        , cast(measure_id as TEXT) as measure_id\n        , cast(measure_name as TEXT) as measure_name\n        , cast(measure_version as TEXT) as measure_version\n    from deduped\n\n)\n\nselect\n      person_id\n    , denominator_flag\n    , numerator_flag\n    , exclusion_flag\n    , evidence_date\n    , evidence_value\n    , exclusion_date\n    , exclusion_reason\n    , performance_period_begin\n    , performance_period_end\n    , measure_id\n    , measure_name\n    , measure_version\n    , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom add_data_types", "relation_name": "tuva.quality_measures._int_adh_diabetes_long", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:29.904151Z", "completed_at": "2025-06-03T19:50:29.919627Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:29.920262Z", "completed_at": "2025-06-03T19:50:29.920267Z"}], "thread_id": "Thread-2", "execution_time": 0.024795055389404297, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.quality_measures__int_adh_statins_long", "compiled": true, "compiled_code": "\n\nwith denominator as (\n\n    select\n          person_id\n        , performance_period_begin\n        , performance_period_end\n        , measure_id\n        , measure_name\n        , measure_version\n        , denominator_flag\n    from tuva.quality_measures._int_adh_statins_denominator\n\n)\n\n, numerator as (\n\n    select\n          person_id\n        , evidence_date\n        , evidence_value\n    from tuva.quality_measures._int_adh_statins_numerator\n\n)\n\n, exclusions as (\n\n    select\n          person_id\n        , exclusion_date\n        , exclusion_reason\n    from tuva.quality_measures._int_adh_statins_exclusions\n\n)\n\n, measure_flags as (\n\n    select\n          denominator.person_id\n        , case\n            when denominator.person_id is not null\n            then 1\n            else null\n          end as denominator_flag\n        , case\n            when numerator.person_id is not null and denominator.person_id is not null\n            then 1\n            when denominator.person_id is not null\n            then 0\n            else null\n          end as numerator_flag\n        , case\n            when exclusions.person_id is not null and denominator.person_id is not null\n            then 1\n            when denominator.person_id is not null\n            then 0\n            else null\n          end as exclusion_flag\n        , numerator.evidence_date\n        , numerator.evidence_value\n        , exclusions.exclusion_date\n        , exclusions.exclusion_reason\n        , denominator.performance_period_begin\n        , denominator.performance_period_end\n        , denominator.measure_id\n        , denominator.measure_name\n        , denominator.measure_version\n        , (row_number() over (\n            partition by\n                  denominator.person_id\n                , denominator.performance_period_begin\n                , denominator.performance_period_end\n                , denominator.measure_id\n                , denominator.measure_name\n              order by\n                  case when numerator.evidence_date is null then 1 else 0 end\n                  , numerator.evidence_date desc\n                , case when exclusions.exclusion_date is null then 1 else 0 end\n                  , exclusions.exclusion_date desc\n          )) as rn\n    from denominator\n        left outer join numerator\n            on denominator.person_id = numerator.person_id\n        left outer join exclusions\n            on denominator.person_id = exclusions.person_id\n\n)\n\n, deduped as (\n\n    select\n          person_id\n        , denominator_flag\n        , numerator_flag\n        , exclusion_flag\n        , evidence_date\n        , evidence_value\n        , exclusion_date\n        , exclusion_reason\n        , performance_period_begin\n        , performance_period_end\n        , measure_id\n        , measure_name\n        , measure_version\n    from measure_flags\n    where rn = 1\n\n)\n\n, add_data_types as (\n\n    select\n          cast(person_id as TEXT) as person_id\n        , cast(denominator_flag as integer) as denominator_flag\n        , cast(numerator_flag as integer) as numerator_flag\n        , cast(exclusion_flag as integer) as exclusion_flag\n        , cast(evidence_date as date) as evidence_date\n        , cast(evidence_value as TEXT) as evidence_value\n        , cast(exclusion_date as date) as exclusion_date\n        , cast(exclusion_reason as TEXT) as exclusion_reason\n        , cast(performance_period_begin as date) as performance_period_begin\n        , cast(performance_period_end as date) as performance_period_end\n        , cast(measure_id as TEXT) as measure_id\n        , cast(measure_name as TEXT) as measure_name\n        , cast(measure_version as TEXT) as measure_version\n    from deduped\n\n)\n\nselect\n      person_id\n    , denominator_flag\n    , numerator_flag\n    , exclusion_flag\n    , evidence_date\n    , evidence_value\n    , exclusion_date\n    , exclusion_reason\n    , performance_period_begin\n    , performance_period_end\n    , measure_id\n    , measure_name\n    , measure_version\n    , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom add_data_types", "relation_name": "tuva.quality_measures._int_adh_statins_long", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:29.912787Z", "completed_at": "2025-06-03T19:50:29.921148Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:29.921850Z", "completed_at": "2025-06-03T19:50:29.921854Z"}], "thread_id": "Thread-1", "execution_time": 0.009681940078735352, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.quality_measures__int_adhras_long", "compiled": true, "compiled_code": "\n\nwith denominator as (\n\n    select\n          person_id\n        , performance_period_begin\n        , performance_period_end\n        , measure_id\n        , measure_name\n        , measure_version\n        , denominator_flag\n    from tuva.quality_measures._int_adhras_denominator\n\n)\n\n, numerator as (\n\n    select\n          person_id\n        , evidence_date\n        , evidence_value\n    from tuva.quality_measures._int_adhras_numerator\n\n)\n\n, exclusions as (\n\n    select\n          person_id\n        , exclusion_date\n        , exclusion_reason\n    from tuva.quality_measures._int_adhras_exclusions\n\n)\n\n, measure_flags as (\n\n    select\n          denominator.person_id\n        , case\n            when denominator.person_id is not null\n            then 1\n            else null\n          end as denominator_flag\n        , case\n            when numerator.person_id is not null and denominator.person_id is not null\n            then 1\n            when denominator.person_id is not null\n            then 0\n            else null\n          end as numerator_flag\n        , case\n            when exclusions.person_id is not null and denominator.person_id is not null\n            then 1\n            when denominator.person_id is not null\n            then 0\n            else null\n          end as exclusion_flag\n        , numerator.evidence_date\n        , numerator.evidence_value\n        , exclusions.exclusion_date\n        , exclusions.exclusion_reason\n        , denominator.performance_period_begin\n        , denominator.performance_period_end\n        , denominator.measure_id\n        , denominator.measure_name\n        , denominator.measure_version\n        , (row_number() over (\n            partition by\n                  denominator.person_id\n                , denominator.performance_period_begin\n                , denominator.performance_period_end\n                , denominator.measure_id\n                , denominator.measure_name\n              order by\n                  case when numerator.evidence_date is null then 1 else 0 end\n                  , numerator.evidence_date desc\n                , case when exclusions.exclusion_date is null then 1 else 0 end\n                  , exclusions.exclusion_date desc\n          )) as rn\n    from denominator\n        left outer join numerator\n            on denominator.person_id = numerator.person_id\n        left outer join exclusions\n            on denominator.person_id = exclusions.person_id\n\n)\n\n, deduped as (\n\n    select\n          person_id\n        , denominator_flag\n        , numerator_flag\n        , exclusion_flag\n        , evidence_date\n        , evidence_value\n        , exclusion_date\n        , exclusion_reason\n        , performance_period_begin\n        , performance_period_end\n        , measure_id\n        , measure_name\n        , measure_version\n    from measure_flags\n    where rn = 1\n\n)\n\n, add_data_types as (\n\n    select\n          cast(person_id as TEXT) as person_id\n        , cast(denominator_flag as integer) as denominator_flag\n        , cast(numerator_flag as integer) as numerator_flag\n        , cast(exclusion_flag as integer) as exclusion_flag\n        , cast(evidence_date as date) as evidence_date\n        , cast(evidence_value as TEXT) as evidence_value\n        , cast(exclusion_date as date) as exclusion_date\n        , cast(exclusion_reason as TEXT) as exclusion_reason\n        , cast(performance_period_begin as date) as performance_period_begin\n        , cast(performance_period_end as date) as performance_period_end\n        , cast(measure_id as TEXT) as measure_id\n        , cast(measure_name as TEXT) as measure_name\n        , cast(measure_version as TEXT) as measure_version\n    from deduped\n\n)\n\nselect\n      person_id\n    , denominator_flag\n    , numerator_flag\n    , exclusion_flag\n    , evidence_date\n    , evidence_value\n    , exclusion_date\n    , exclusion_reason\n    , performance_period_begin\n    , performance_period_end\n    , measure_id\n    , measure_name\n    , measure_version\n    , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom add_data_types", "relation_name": "tuva.quality_measures._int_adhras_long", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:29.922824Z", "completed_at": "2025-06-03T19:50:29.951372Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:29.954075Z", "completed_at": "2025-06-03T19:50:29.954081Z"}], "thread_id": "Thread-4", "execution_time": 0.03276681900024414, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.quality_measures__int_supd_long", "compiled": true, "compiled_code": "\n\nwith denominator as (\n\n    select\n          person_id\n        , performance_period_begin\n        , performance_period_end\n        , measure_id\n        , measure_name\n        , measure_version\n    from tuva.quality_measures._int_supd_denominator\n\n)\n\n, numerator as (\n\n    select\n          person_id\n        , evidence_date\n        , evidence_value\n    from tuva.quality_measures._int_supd_numerator\n\n)\n\n, exclusions as (\n\n    select\n          person_id\n        , exclusion_date\n        , exclusion_reason\n    from tuva.quality_measures._int_supd_exclusions\n\n)\n\n, measure_flags as (\n\n    select\n          denominator.person_id\n        , case\n            when denominator.person_id is not null\n            then 1\n            else null\n          end as denominator_flag\n        , case\n            when numerator.person_id is not null and denominator.person_id is not null\n            then 1\n            when denominator.person_id is not null\n            then 0\n            else null\n          end as numerator_flag\n        , case\n            when exclusions.person_id is not null and denominator.person_id is not null\n            then 1\n            when denominator.person_id is not null\n            then 0\n            else null\n          end as exclusion_flag\n        , numerator.evidence_date\n        , numerator.evidence_value\n        , exclusions.exclusion_date\n        , exclusions.exclusion_reason\n        , denominator.performance_period_begin\n        , denominator.performance_period_end\n        , denominator.measure_id\n        , denominator.measure_name\n        , denominator.measure_version\n        , (row_number() over (\n            partition by\n                  denominator.person_id\n                , denominator.performance_period_begin\n                , denominator.performance_period_end\n                , denominator.measure_id\n                , denominator.measure_name\n              order by\n                  case when numerator.evidence_date is null then 1 else 0 end\n                  , numerator.evidence_date desc\n                , case when exclusions.exclusion_date is null then 1 else 0 end\n                  , exclusions.exclusion_date desc\n          )) as rn\n    from denominator\n        left outer join numerator\n            on denominator.person_id = numerator.person_id\n        left outer join exclusions\n            on denominator.person_id = exclusions.person_id\n\n)\n\n/*\n    Deduplicate measure rows by latest evidence date or exclusion date\n*/\n, deduped as (\n\n    select\n          person_id\n        , denominator_flag\n        , numerator_flag\n        , exclusion_flag\n        , evidence_date\n        , evidence_value\n        , exclusion_date\n        , exclusion_reason\n        , performance_period_begin\n        , performance_period_end\n        , measure_id\n        , measure_name\n        , measure_version\n    from measure_flags\n    where rn = 1\n\n)\n\n, add_data_types as (\n\n    select\n          cast(person_id as TEXT) as person_id\n        , cast(denominator_flag as integer) as denominator_flag\n        , cast(numerator_flag as integer) as numerator_flag\n        , cast(exclusion_flag as integer) as exclusion_flag\n        , cast(evidence_date as date) as evidence_date\n        , cast(evidence_value as TEXT) as evidence_value\n        , cast(exclusion_date as date) as exclusion_date\n        , cast(exclusion_reason as TEXT) as exclusion_reason\n        , cast(performance_period_begin as date) as performance_period_begin\n        , cast(performance_period_end as date) as performance_period_end\n        , cast(measure_id as TEXT) as measure_id\n        , cast(measure_name as TEXT) as measure_name\n        , cast(measure_version as TEXT) as measure_version\n    from deduped\n\n)\n\nselect\n      person_id\n    , denominator_flag\n    , numerator_flag\n    , exclusion_flag\n    , evidence_date\n    , evidence_value\n    , exclusion_date\n    , exclusion_reason\n    , performance_period_begin\n    , performance_period_end\n    , measure_id\n    , measure_name\n    , measure_version\n    , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom add_data_types", "relation_name": "tuva.quality_measures._int_supd_long", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:29.945116Z", "completed_at": "2025-06-03T19:50:29.960813Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:29.961047Z", "completed_at": "2025-06-03T19:50:29.961052Z"}], "thread_id": "Thread-1", "execution_time": 0.0194549560546875, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.hcc_suspecting__list", "compiled": true, "compiled_code": "\n\nwith hcc_history_suspects as (\n\n    select distinct\n          person_id\n        , data_source\n        , hcc_code\n        , hcc_description\n        , reason\n        , contributing_factor\n        , suspect_date\n    from tuva.hcc_suspecting._int_patient_hcc_history\n    \n        where (current_year_billed = false\n            or current_year_billed is null)\n    \n\n)\n\n, comorbidity_suspects as (\n\n    select distinct\n          person_id\n        , data_source\n        , hcc_code\n        , hcc_description\n        , reason\n        , contributing_factor\n        , suspect_date\n    from tuva.hcc_suspecting._int_comorbidity_suspects\n    \n        where (current_year_billed = false\n            or current_year_billed is null)\n    \n\n)\n\n, observation_suspects as (\n\n    select distinct\n          person_id\n        , data_source\n        , hcc_code\n        , hcc_description\n        , reason\n        , contributing_factor\n        , suspect_date\n    from tuva.hcc_suspecting._int_observation_suspects\n    \n        where (current_year_billed = false\n            or current_year_billed is null)\n    \n\n)\n\n, lab_suspects as (\n\n    select distinct\n          person_id\n        , data_source\n        , hcc_code\n        , hcc_description\n        , reason\n        , contributing_factor\n        , suspect_date\n    from tuva.hcc_suspecting._int_lab_suspects\n    \n        where (current_year_billed = false\n            or current_year_billed is null)\n    \n\n)\n\n, medication_suspects as (\n\n    select distinct\n          person_id\n        , data_source\n        , hcc_code\n        , hcc_description\n        , reason\n        , contributing_factor\n        , suspect_date\n    from tuva.hcc_suspecting._int_medication_suspects\n    \n        where (current_year_billed = false\n            or current_year_billed is null)\n    \n\n)\n\n, unioned as (\n\n    select * from hcc_history_suspects\n    union all\n    select * from comorbidity_suspects\n    union all\n    select * from observation_suspects\n    union all\n    select * from lab_suspects\n    union all\n    select * from medication_suspects\n\n)\n\n, add_data_types as (\n\n    select\n          cast(person_id as TEXT) as person_id\n        , cast(data_source as TEXT) as data_source\n        , cast(hcc_code as TEXT) as hcc_code\n        , cast(hcc_description as TEXT) as hcc_description\n        , cast(reason as TEXT) as reason\n        , cast(contributing_factor as TEXT) as contributing_factor\n        , cast(suspect_date as date) as suspect_date\n    from unioned\n\n)\n\nselect\n      person_id\n    , data_source\n    , hcc_code\n    , hcc_description\n    , reason\n    , contributing_factor\n    , suspect_date\n    , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom add_data_types", "relation_name": "tuva.hcc_suspecting.list", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:29.955434Z", "completed_at": "2025-06-03T19:50:29.968872Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:29.969153Z", "completed_at": "2025-06-03T19:50:29.969159Z"}], "thread_id": "Thread-4", "execution_time": 0.014267921447753906, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_expectations_expect_table_row_count_to_be_between_chronic_conditions__cms_chronic_conditions_long_1__False.5247a7932a", "compiled": true, "compiled_code": "\n\n\n\n    with grouped_expression as (\n    select\n        \n        \n    \n  \n( 1=1 and count(*) >= 1\n)\n as expression\n\n\n    from tuva.chronic_conditions.cms_chronic_conditions_long\n    \n\n),\nvalidation_errors as (\n\n    select\n        *\n    from\n        grouped_expression\n    where\n        not(expression = true)\n\n)\n\nselect *\nfrom validation_errors\n\n\n\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:29.962157Z", "completed_at": "2025-06-03T19:50:29.970927Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:29.977491Z", "completed_at": "2025-06-03T19:50:29.977499Z"}], "thread_id": "Thread-1", "execution_time": 0.015853166580200195, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_utils_unique_combination_of_columns_chronic_conditions__cms_chronic_conditions_long_person_id__claim_id__data_source__start_date__condition.7a37ece25b", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith validation_errors as (\n\n    select\n        person_id, claim_id, data_source, start_date, condition\n    from tuva.chronic_conditions.cms_chronic_conditions_long\n    group by person_id, claim_id, data_source, start_date, condition\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:29.977912Z", "completed_at": "2025-06-03T19:50:29.986567Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:29.992315Z", "completed_at": "2025-06-03T19:50:29.992324Z"}], "thread_id": "Thread-4", "execution_time": 0.022379159927368164, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.not_null_chronic_conditions__cms_chronic_conditions_long_claim_id.74242d2abc", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect claim_id\nfrom tuva.chronic_conditions.cms_chronic_conditions_long\nwhere claim_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:29.986838Z", "completed_at": "2025-06-03T19:50:29.998231Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:29.998463Z", "completed_at": "2025-06-03T19:50:29.998468Z"}], "thread_id": "Thread-1", "execution_time": 0.013484001159667969, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.not_null_chronic_conditions__cms_chronic_conditions_long_condition.e794460ae3", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect condition\nfrom tuva.chronic_conditions.cms_chronic_conditions_long\nwhere condition is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:29.993640Z", "completed_at": "2025-06-03T19:50:30.007401Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:30.007705Z", "completed_at": "2025-06-03T19:50:30.007712Z"}], "thread_id": "Thread-4", "execution_time": 0.014639139175415039, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.not_null_chronic_conditions__cms_chronic_conditions_long_person_id.8e6796eb20", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect person_id\nfrom tuva.chronic_conditions.cms_chronic_conditions_long\nwhere person_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:29.999981Z", "completed_at": "2025-06-03T19:50:30.008685Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:30.009090Z", "completed_at": "2025-06-03T19:50:30.009094Z"}], "thread_id": "Thread-1", "execution_time": 0.01010894775390625, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.cms_hcc__int_hcc_hierarchy", "compiled": true, "compiled_code": "\n/*\n    Staging HCCs that will be used in disease factor calculations.\n    Final output for each CMS model version includes:\n        - hccs without a hierarchy\n        - lower-level hccs with hierarchy where top-level hcc is missing\n        - top-level hccs from hierarchy\n*/\n\nwith hcc_mapping as (\n\n    select distinct\n          person_id\n        , hcc_code\n        , model_version\n        , payment_year\n        , collection_start_date\n        , collection_end_date\n    from tuva.cms_hcc._int_hcc_mapping\n\n)\n\n, seed_hcc_hierarchy as (\n\n    select\n          model_version\n        , hcc_code\n        , description\n        , hccs_to_exclude\n    from tuva.cms_hcc._value_set_disease_hierarchy\n\n)\n\n/*\n    selecting hccs that do not have a hierarchy\n    all codes in this cte are included in final output\n*/\n, hccs_without_hierarchy as (\n\n    select distinct\n          hcc_mapping.person_id\n        , hcc_mapping.model_version\n        , hcc_mapping.payment_year\n        , hcc_mapping.collection_start_date\n        , hcc_mapping.collection_end_date\n        , hcc_mapping.hcc_code\n    from hcc_mapping\n        left outer join seed_hcc_hierarchy as hcc_top_level\n            on hcc_mapping.hcc_code = hcc_top_level.hcc_code\n            and hcc_mapping.model_version = hcc_top_level.model_version\n        left outer join seed_hcc_hierarchy as hcc_exclusions\n            on hcc_mapping.hcc_code = hcc_exclusions.hccs_to_exclude\n            and hcc_mapping.model_version = hcc_exclusions.model_version\n    where hcc_top_level.hcc_code is null\n        and hcc_exclusions.hccs_to_exclude is null\n\n)\n\n/*\n    selecting hccs that have a hierarchy to be evaluated in the next cte\n*/\n, hccs_with_hierarchy as (\n\n    select\n          hcc_mapping.person_id\n        , hcc_mapping.model_version\n        , hcc_mapping.payment_year\n        , hcc_mapping.collection_start_date\n        , hcc_mapping.collection_end_date\n        , hcc_mapping.hcc_code\n        , seed_hcc_hierarchy.hcc_code as top_level_hcc\n    from hcc_mapping\n        inner join seed_hcc_hierarchy\n            on hcc_mapping.hcc_code = seed_hcc_hierarchy.hccs_to_exclude\n            and hcc_mapping.model_version = seed_hcc_hierarchy.model_version\n\n)\n\n/*\n    applying hcc hierarchy and grouping by patient and hcc\n    to account for multiple hcc combinations\n    minimum HCC is included following CMS's severity logic\n*/\n, hierarchy_applied as (\n\n    select\n          hccs_with_hierarchy.person_id\n        , hccs_with_hierarchy.model_version\n        , hccs_with_hierarchy.payment_year\n        , hccs_with_hierarchy.collection_start_date\n        , hccs_with_hierarchy.collection_end_date\n        , hccs_with_hierarchy.hcc_code\n        , min(hcc_mapping.hcc_code) as top_level_hcc\n    from hccs_with_hierarchy\n        left outer join hcc_mapping\n            on hcc_mapping.person_id = hccs_with_hierarchy.person_id\n            and hcc_mapping.hcc_code = hccs_with_hierarchy.top_level_hcc\n            and hcc_mapping.model_version = hccs_with_hierarchy.model_version\n            and hcc_mapping.payment_year = hccs_with_hierarchy.payment_year\n            and hcc_mapping.collection_end_date = hccs_with_hierarchy.collection_end_date\n    group by\n          hccs_with_hierarchy.person_id\n        , hccs_with_hierarchy.model_version\n        , hccs_with_hierarchy.payment_year\n        , hccs_with_hierarchy.collection_start_date\n        , hccs_with_hierarchy.collection_end_date\n        , hccs_with_hierarchy.hcc_code\n\n)\n\n/*\n    selecting lower-level hccs in hierarchy\n    all codes in this cte are included in final output\n*/\n, lower_level_inclusions as (\n\n    select distinct\n          person_id\n        , model_version\n        , payment_year\n        , collection_start_date\n        , collection_end_date\n        , case\n            when top_level_hcc is not null then top_level_hcc\n            else hcc_code\n          end as hcc_code\n    from hierarchy_applied\n\n)\n\n/*\n    selecting top-level hccs not in previous steps\n    all codes in this cte are included in final output\n*/\n, top_level_inclusions as (\n\n    select distinct\n          hcc_mapping.person_id\n        , hcc_mapping.model_version\n        , hcc_mapping.payment_year\n        , hcc_mapping.collection_start_date\n        , hcc_mapping.collection_end_date\n        , hcc_mapping.hcc_code\n    from hcc_mapping\n        inner join seed_hcc_hierarchy\n            on hcc_mapping.hcc_code = seed_hcc_hierarchy.hcc_code\n            and hcc_mapping.model_version = seed_hcc_hierarchy.model_version\n        left outer join lower_level_inclusions\n            on hcc_mapping.person_id = lower_level_inclusions.person_id\n            and hcc_mapping.hcc_code = lower_level_inclusions.hcc_code\n            and hcc_mapping.model_version = lower_level_inclusions.model_version\n            and hcc_mapping.payment_year = lower_level_inclusions.payment_year\n            and hcc_mapping.collection_end_date = lower_level_inclusions.collection_end_date\n        left outer join hierarchy_applied\n            on hcc_mapping.person_id = hierarchy_applied.person_id\n            and hcc_mapping.hcc_code = hierarchy_applied.hcc_code\n            and hcc_mapping.model_version = hierarchy_applied.model_version\n            and hcc_mapping.payment_year = hierarchy_applied.payment_year\n            and hcc_mapping.collection_end_date = hierarchy_applied.collection_end_date\n    where lower_level_inclusions.hcc_code is null\n        and hierarchy_applied.top_level_hcc is null\n\n)\n\n, unioned as (\n\n    select * from hccs_without_hierarchy\n    union all\n    select * from lower_level_inclusions\n    union all\n    select * from top_level_inclusions\n\n)\n\n, add_data_types as (\n\n    select\n          cast(person_id as TEXT) as person_id\n        , cast(model_version as TEXT) as model_version\n        , cast(payment_year as integer) as payment_year\n        , cast(collection_start_date as date) as collection_start_date\n        , cast(collection_end_date as date) as collection_end_date\n        , cast(hcc_code as TEXT) as hcc_code\n    from unioned\n\n)\n\nselect\n      person_id\n    , model_version\n    , payment_year\n    , collection_start_date\n    , collection_end_date\n    , hcc_code\n    , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom add_data_types", "relation_name": "tuva.cms_hcc._int_hcc_hierarchy", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:30.021177Z", "completed_at": "2025-06-03T19:50:30.027792Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:30.028020Z", "completed_at": "2025-06-03T19:50:30.028026Z"}], "thread_id": "Thread-1", "execution_time": 0.007591962814331055, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.cms_hcc__int_enrollment_interaction_factors", "compiled": true, "compiled_code": "\n\nwith demographics as (\n\n    select\n          person_id\n        , enrollment_status\n        , gender\n        , age_group\n        , medicaid_status\n        , dual_status\n        , orec\n        , institutional_status\n        , model_version\n        , payment_year\n        , collection_start_date\n        , collection_end_date\n    from tuva.cms_hcc._int_demographic_factors\n\n)\n\n, seed_interaction_factors as (\n\n    select\n          model_version\n        , factor_type\n        , gender\n        , enrollment_status\n        , medicaid_status\n        , dual_status\n        , institutional_status\n        , description\n        , coefficient\n    from tuva.cms_hcc._value_set_enrollment_interaction_factors\n\n)\n\n/*\n    Originally disabled interactions for non-institutional members >= 65\n*/\n, non_institutional_interactions as (\n\n    select\n          demographics.person_id\n        , demographics.model_version\n        , demographics.payment_year\n        , demographics.collection_start_date\n        , demographics.collection_end_date\n        , seed_interaction_factors.factor_type\n        , seed_interaction_factors.description\n        , seed_interaction_factors.coefficient\n    from demographics\n        inner join seed_interaction_factors\n            on demographics.gender = seed_interaction_factors.gender\n            and demographics.enrollment_status = seed_interaction_factors.enrollment_status\n            and demographics.medicaid_status = seed_interaction_factors.medicaid_status\n            and demographics.dual_status = seed_interaction_factors.dual_status\n            and demographics.institutional_status = seed_interaction_factors.institutional_status\n            and demographics.model_version = seed_interaction_factors.model_version\n    where demographics.institutional_status = 'No'\n        and demographics.orec = 'Disabled'\n        and demographics.age_group in (\n              '65-69'\n            , '70-74'\n            , '75-79'\n            , '80-84'\n            , '85-89'\n            , '90-94'\n            , '>=95'\n        )\n\n)\n\n/*\n    Medicaid interactions for institutional members\n*/\n, institutional_interactions as (\n\n    select\n          demographics.person_id\n        , demographics.model_version\n        , demographics.payment_year\n        , demographics.collection_start_date\n        , demographics.collection_end_date\n        , seed_interaction_factors.factor_type\n        , seed_interaction_factors.description\n        , seed_interaction_factors.coefficient\n    from demographics\n        inner join seed_interaction_factors\n            on demographics.enrollment_status = seed_interaction_factors.enrollment_status\n            and demographics.institutional_status = seed_interaction_factors.institutional_status\n            and demographics.model_version = seed_interaction_factors.model_version\n    where demographics.institutional_status = 'Yes'\n        and demographics.medicaid_status = 'Yes'\n\n)\n\n, unioned as (\n\n    select * from non_institutional_interactions\n    union all\n    select * from institutional_interactions\n\n)\n\n, add_data_types as (\n\n    select\n          cast(person_id as TEXT) as person_id\n        , cast(description as TEXT) as description\n        , round(cast(coefficient as numeric(28,6)), 3) as coefficient\n        , cast(factor_type as TEXT) as factor_type\n        , cast(model_version as TEXT) as model_version\n        , cast(payment_year as integer) as payment_year\n        , cast(collection_start_date as date) as collection_start_date\n        , cast(collection_end_date as date) as collection_end_date\n    from unioned\n\n)\n\nselect\n      person_id\n    , description\n    , coefficient\n    , factor_type\n    , model_version\n    , payment_year\n    , collection_start_date\n    , collection_end_date\n    , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom add_data_types", "relation_name": "tuva.cms_hcc._int_enrollment_interaction_factors", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:30.029052Z", "completed_at": "2025-06-03T19:50:30.034942Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:30.035178Z", "completed_at": "2025-06-03T19:50:30.035182Z"}], "thread_id": "Thread-1", "execution_time": 0.006621122360229492, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_utils_unique_combination_of_columns_cms_hcc__int_demographic_factors_person_id__model_version__collection_end_date.da0ac9674b", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith validation_errors as (\n\n    select\n        person_id, model_version, collection_end_date\n    from tuva.cms_hcc._int_demographic_factors\n    group by person_id, model_version, collection_end_date\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:30.036443Z", "completed_at": "2025-06-03T19:50:30.042154Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:30.042378Z", "completed_at": "2025-06-03T19:50:30.042383Z"}], "thread_id": "Thread-1", "execution_time": 0.006671905517578125, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.financial_pmpm__pmpm_payer", "compiled": true, "compiled_code": "\n\nselect\n    year_month\n  , payer\n  , data_source\n  , count(1) as member_months\n  , sum(total_paid) / count(1) as total_paid\n  , sum(medical_paid) / count(1) as medical_paid\n  , sum(inpatient_paid) / count(1) as inpatient_paid\n  , sum(outpatient_paid) / count(1) as outpatient_paid\n  , sum(office_based_paid) / count(1) as office_based_paid\n  , sum(ancillary_paid) / count(1) as ancillary_paid\n  , sum(other_paid) / count(1) as other_paid\n  , sum(pharmacy_paid) / count(1) as pharmacy_paid\n  , sum(acute_inpatient_paid) / count(1) as acute_inpatient_paid\n  , sum(ambulance_paid) / count(1) as ambulance_paid\n  , sum(ambulatory_surgery_center_paid) / count(1) as ambulatory_surgery_center_paid\n  , sum(dialysis_paid) / count(1) as dialysis_paid\n  , sum(durable_medical_equipment_paid) / count(1) as durable_medical_equipment_paid\n  , sum(emergency_department_paid) / count(1) as emergency_department_paid\n  , sum(home_health_paid) / count(1) as home_health_paid\n  , sum(inpatient_hospice_paid) / count(1) as inpatient_hospice_paid\n  , sum(inpatient_psychiatric_paid) / count(1) as inpatient_psychiatric_paid\n  , sum(inpatient_rehabilitation_paid) / count(1) as inpatient_rehabilitation_paid\n  , sum(lab_paid) / count(1) as lab_paid\n  , sum(observation_paid) / count(1) as observation_paid\n  , sum(office_based_other_paid) / count(1) as office_based_other_paid\n  , sum(office_based_pt_ot_st_paid) / count(1) as office_based_pt_ot_st_paid\n  , sum(office_based_radiology_paid) / count(1) as office_based_radiology_paid\n  , sum(office_based_surgery_paid) / count(1) as office_based_surgery_paid\n  , sum(office_based_visit_paid) / count(1) as office_based_visit_paid\n  , sum(outpatient_hospital_or_clinic_paid) / count(1) as outpatient_hospital_or_clinic_paid\n  , sum(outpatient_pt_ot_st_paid) / count(1) as outpatient_pt_ot_st_paid\n  , sum(outpatient_psychiatric_paid) / count(1) as outpatient_psychiatric_paid\n  , sum(outpatient_radiology_paid) / count(1) as outpatient_radiology_paid\n  , sum(outpatient_rehabilitation_paid) / count(1) as outpatient_rehabilitation_paid\n  , sum(outpatient_surgery_paid) / count(1) as outpatient_surgery_paid\n  , sum(skilled_nursing_paid) / count(1) as skilled_nursing_paid\n  , sum(telehealth_visit_paid) / count(1) as telehealth_visit_paid\n  , sum(urgent_care_paid) / count(1) as urgent_care_paid\n  , sum(total_allowed) / count(1) as total_allowed\n  , sum(medical_allowed) / count(1) as medical_allowed\n  , sum(inpatient_allowed) / count(1) as inpatient_allowed\n  , sum(outpatient_allowed) / count(1) as outpatient_allowed\n  , sum(office_based_allowed) / count(1) as office_based_allowed\n  , sum(ancillary_allowed) / count(1) as ancillary_allowed\n  , sum(other_allowed) / count(1) as other_allowed\n  , sum(pharmacy_allowed) / count(1) as pharmacy_allowed\n  , sum(acute_inpatient_allowed) / count(1) as acute_inpatient_allowed\n  , sum(ambulance_allowed) / count(1) as ambulance_allowed\n  , sum(ambulatory_surgery_center_allowed) / count(1) as ambulatory_surgery_center_allowed\n  , sum(dialysis_allowed) / count(1) as dialysis_allowed\n  , sum(durable_medical_equipment_allowed) / count(1) as durable_medical_equipment_allowed\n  , sum(emergency_department_allowed) / count(1) as emergency_department_allowed\n  , sum(home_health_allowed) / count(1) as home_health_allowed\n  , sum(inpatient_hospice_allowed) / count(1) as inpatient_hospice_allowed\n  , sum(inpatient_psychiatric_allowed) / count(1) as inpatient_psychiatric_allowed\n  , sum(inpatient_rehabilitation_allowed) / count(1) as inpatient_rehabilitation_allowed\n  , sum(lab_allowed) / count(1) as lab_allowed\n  , sum(observation_allowed) / count(1) as observation_allowed\n  , sum(office_based_other_allowed) / count(1) as office_based_other_allowed\n  , sum(office_based_pt_ot_st_allowed) / count(1) as office_based_pt_ot_st_allowed\n  , sum(office_based_radiology_allowed) / count(1) as office_based_radiology_allowed\n  , sum(office_based_surgery_allowed) / count(1) as office_based_surgery_allowed\n  , sum(office_based_visit_allowed) / count(1) as office_based_visit_allowed\n  , sum(outpatient_hospital_or_clinic_allowed) / count(1) as outpatient_hospital_or_clinic_allowed\n  , sum(outpatient_pt_ot_st_allowed) / count(1) as outpatient_pt_ot_st_allowed\n  , sum(outpatient_psychiatric_allowed) / count(1) as outpatient_psychiatric_allowed\n  , sum(outpatient_radiology_allowed) / count(1) as outpatient_radiology_allowed\n  , sum(outpatient_rehabilitation_allowed) / count(1) as outpatient_rehabilitation_allowed\n  , sum(outpatient_surgery_allowed) / count(1) as outpatient_surgery_allowed\n  , sum(skilled_nursing_allowed) / count(1) as skilled_nursing_allowed\n  , sum(telehealth_visit_allowed) / count(1) as telehealth_visit_allowed\n  , sum(urgent_care_allowed) / count(1) as urgent_care_allowed\n  , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom tuva.financial_pmpm.pmpm_prep as a\ngroup by\n  year_month\n, payer\n, data_source", "relation_name": "tuva.financial_pmpm.pmpm_payer", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:30.043490Z", "completed_at": "2025-06-03T19:50:30.049893Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:30.050107Z", "completed_at": "2025-06-03T19:50:30.050112Z"}], "thread_id": "Thread-1", "execution_time": 0.0071408748626708984, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.financial_pmpm__pmpm_payer_plan", "compiled": true, "compiled_code": "\n\nselect\n    year_month\n  , payer\n  , plan\n  , data_source\n  , count(1) as member_months\n  , sum(total_paid) / count(1) as total_paid\n  , sum(medical_paid) / count(1) as medical_paid\n  , sum(inpatient_paid) / count(1) as inpatient_paid\n  , sum(outpatient_paid) / count(1) as outpatient_paid\n  , sum(office_based_paid) / count(1) as office_based_paid\n  , sum(ancillary_paid) / count(1) as ancillary_paid\n  , sum(other_paid) / count(1) as other_paid\n  , sum(pharmacy_paid) / count(1) as pharmacy_paid\n  , sum(acute_inpatient_paid) / count(1) as acute_inpatient_paid\n  , sum(ambulance_paid) / count(1) as ambulance_paid\n  , sum(ambulatory_surgery_center_paid) / count(1) as ambulatory_surgery_center_paid\n  , sum(dialysis_paid) / count(1) as dialysis_paid\n  , sum(durable_medical_equipment_paid) / count(1) as durable_medical_equipment_paid\n  , sum(emergency_department_paid) / count(1) as emergency_department_paid\n  , sum(home_health_paid) / count(1) as home_health_paid\n  , sum(inpatient_hospice_paid) / count(1) as inpatient_hospice_paid\n  , sum(inpatient_psychiatric_paid) / count(1) as inpatient_psychiatric_paid\n  , sum(inpatient_rehabilitation_paid) / count(1) as inpatient_rehabilitation_paid\n  , sum(lab_paid) / count(1) as lab_paid\n  , sum(observation_paid) / count(1) as observation_paid\n  , sum(office_based_other_paid) / count(1) as office_based_other_paid\n  , sum(office_based_pt_ot_st_paid) / count(1) as office_based_pt_ot_st_paid\n  , sum(office_based_radiology_paid) / count(1) as office_based_radiology_paid\n  , sum(office_based_surgery_paid) / count(1) as office_based_surgery_paid\n  , sum(office_based_visit_paid) / count(1) as office_based_visit_paid\n  , sum(outpatient_hospital_or_clinic_paid) / count(1) as outpatient_hospital_or_clinic_paid\n  , sum(outpatient_pt_ot_st_paid) / count(1) as outpatient_pt_ot_st_paid\n  , sum(outpatient_psychiatric_paid) / count(1) as outpatient_psychiatric_paid\n  , sum(outpatient_radiology_paid) / count(1) as outpatient_radiology_paid\n  , sum(outpatient_rehabilitation_paid) / count(1) as outpatient_rehabilitation_paid\n  , sum(outpatient_surgery_paid) / count(1) as outpatient_surgery_paid\n  , sum(skilled_nursing_paid) / count(1) as skilled_nursing_paid\n  , sum(telehealth_visit_paid) / count(1) as telehealth_visit_paid\n  , sum(urgent_care_paid) / count(1) as urgent_care_paid\n  , sum(total_allowed) / count(1) as total_allowed\n  , sum(medical_allowed) / count(1) as medical_allowed\n  , sum(inpatient_allowed) / count(1) as inpatient_allowed\n  , sum(outpatient_allowed) / count(1) as outpatient_allowed\n  , sum(office_based_allowed) / count(1) as office_based_allowed\n  , sum(ancillary_allowed) / count(1) as ancillary_allowed\n  , sum(other_allowed) / count(1) as other_allowed\n  , sum(pharmacy_allowed) / count(1) as pharmacy_allowed\n  , sum(acute_inpatient_allowed) / count(1) as acute_inpatient_allowed\n  , sum(ambulance_allowed) / count(1) as ambulance_allowed\n  , sum(ambulatory_surgery_center_allowed) / count(1) as ambulatory_surgery_center_allowed\n  , sum(dialysis_allowed) / count(1) as dialysis_allowed\n  , sum(durable_medical_equipment_allowed) / count(1) as durable_medical_equipment_allowed\n  , sum(emergency_department_allowed) / count(1) as emergency_department_allowed\n  , sum(home_health_allowed) / count(1) as home_health_allowed\n  , sum(inpatient_hospice_allowed) / count(1) as inpatient_hospice_allowed\n  , sum(inpatient_psychiatric_allowed) / count(1) as inpatient_psychiatric_allowed\n  , sum(inpatient_rehabilitation_allowed) / count(1) as inpatient_rehabilitation_allowed\n  , sum(lab_allowed) / count(1) as lab_allowed\n  , sum(observation_allowed) / count(1) as observation_allowed\n  , sum(office_based_other_allowed) / count(1) as office_based_other_allowed\n  , sum(office_based_pt_ot_st_allowed) / count(1) as office_based_pt_ot_st_allowed\n  , sum(office_based_radiology_allowed) / count(1) as office_based_radiology_allowed\n  , sum(office_based_surgery_allowed) / count(1) as office_based_surgery_allowed\n  , sum(office_based_visit_allowed) / count(1) as office_based_visit_allowed\n  , sum(outpatient_hospital_or_clinic_allowed) / count(1) as outpatient_hospital_or_clinic_allowed\n  , sum(outpatient_pt_ot_st_allowed) / count(1) as outpatient_pt_ot_st_allowed\n  , sum(outpatient_psychiatric_allowed) / count(1) as outpatient_psychiatric_allowed\n  , sum(outpatient_radiology_allowed) / count(1) as outpatient_radiology_allowed\n  , sum(outpatient_rehabilitation_allowed) / count(1) as outpatient_rehabilitation_allowed\n  , sum(outpatient_surgery_allowed) / count(1) as outpatient_surgery_allowed\n  , sum(skilled_nursing_allowed) / count(1) as skilled_nursing_allowed\n  , sum(telehealth_visit_allowed) / count(1) as telehealth_visit_allowed\n  , sum(urgent_care_allowed) / count(1) as urgent_care_allowed\n  , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom tuva.financial_pmpm.pmpm_prep as a\ngroup by\n    year_month\n  , payer\n  , plan\n  , data_source", "relation_name": "tuva.financial_pmpm.pmpm_payer_plan", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:30.051122Z", "completed_at": "2025-06-03T19:50:30.056193Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:30.056405Z", "completed_at": "2025-06-03T19:50:30.056410Z"}], "thread_id": "Thread-1", "execution_time": 0.00575709342956543, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.mart_review__member_months", "compiled": true, "compiled_code": "\n\nselect m.*\n    , COALESCE(p.total_paid, 0) as total_paid\n    , COALESCE(p.medical_paid, 0) as medical_paid\n    , COALESCE(p.pharmacy_paid, 0) as pharmacy_paid\n    , m.person_id || '|' || m.data_source as patient_data_source_key\nfrom tuva.core.member_months as m\nleft outer join tuva.financial_pmpm.pmpm_prep as p on m.person_id = p.person_id\n    and m.data_source = p.data_source\n    and m.year_month = p.year_month\n    and m.payer = p.payer\n    and m.plan = p.plan", "relation_name": "tuva.data_quality.mart_review__member_months", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:30.057481Z", "completed_at": "2025-06-03T19:50:30.063363Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:30.063603Z", "completed_at": "2025-06-03T19:50:30.063608Z"}], "thread_id": "Thread-1", "execution_time": 0.006676197052001953, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_utils_unique_combination_of_columns_financial_pmpm__pmpm_prep_person_id__year_month__data_source___quote_column_plan_.94068c0fb7", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith validation_errors as (\n\n    select\n        person_id, year_month, data_source, plan\n    from tuva.financial_pmpm.pmpm_prep\n    group by person_id, year_month, data_source, plan\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:30.064629Z", "completed_at": "2025-06-03T19:50:30.070884Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:30.071096Z", "completed_at": "2025-06-03T19:50:30.071101Z"}], "thread_id": "Thread-1", "execution_time": 0.006949663162231445, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.hcc_suspecting__list_rollup", "compiled": true, "compiled_code": "\n\nwith list as (\n\n    select\n          person_id\n        , data_source\n        , hcc_code\n        , hcc_description\n        , reason\n        , contributing_factor\n        , suspect_date\n        , row_number() over (\n            partition by\n                  person_id\n                , hcc_code\n            order by suspect_date desc\n          ) as row_num\n    from tuva.hcc_suspecting.list\n\n)\n\n, list_dedupe as (\n\n    select\n          person_id\n        , hcc_code\n        , hcc_description\n        , reason\n        , contributing_factor\n        , suspect_date as latest_suspect_date\n    from list\n    where row_num = 1\n\n)\n\n, add_data_types as (\n\n    select\n          cast(person_id as TEXT) as person_id\n        , cast(hcc_code as TEXT) as hcc_code\n        , cast(hcc_description as TEXT) as hcc_description\n        , cast(reason as TEXT) as reason\n        , cast(contributing_factor as TEXT) as contributing_factor\n        , cast(latest_suspect_date as date) as latest_suspect_date\n    from list_dedupe\n\n)\n\nselect\n      person_id\n    , hcc_code\n    , hcc_description\n    , reason\n    , contributing_factor\n    , latest_suspect_date\n    , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom add_data_types", "relation_name": "tuva.hcc_suspecting.list_rollup", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:30.072102Z", "completed_at": "2025-06-03T19:50:30.086821Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:30.087046Z", "completed_at": "2025-06-03T19:50:30.087052Z"}], "thread_id": "Thread-1", "execution_time": 0.015430927276611328, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.hcc_suspecting__summary", "compiled": true, "compiled_code": "\n\nwith  __dbt__cte___stg_patient as (\n\nselect\n      person_id\n    , sex\n    , birth_date\n    , death_date\nfrom tuva.core.patient\n), patients as (\n\n    select\n          person_id\n        , sex\n        , birth_date\n        \n            , floor(datediff(\n        hour,\n        birth_date,\n        current_date\n        ) / 8766.0) as age\n        \n    from __dbt__cte___stg_patient\n    where death_date is null\n\n)\n\n, suspecting_list as (\n\n      select\n          person_id\n        , count(*) as gaps\n    from tuva.hcc_suspecting.list\n    group by person_id\n\n)\n\n, joined as (\n\n    select\n          patients.person_id\n        , patients.sex\n        , patients.birth_date\n        , patients.age\n        , suspecting_list.gaps\n    from patients\n         inner join suspecting_list\n         on patients.person_id = suspecting_list.person_id\n\n)\n\n, add_data_types as (\n\n    select\n          cast(person_id as TEXT) as person_id\n        , cast(sex as TEXT) as patient_sex\n        , cast(birth_date as date) as patient_birth_date\n        , cast(age as integer) as patient_age\n        , cast(gaps as integer) as suspecting_gaps\n    from joined\n\n)\n\nselect\n      person_id\n    , patient_sex\n    , patient_birth_date\n    , patient_age\n    , suspecting_gaps\n    , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom add_data_types", "relation_name": "tuva.hcc_suspecting.summary", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:30.088073Z", "completed_at": "2025-06-03T19:50:30.094522Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:30.094738Z", "completed_at": "2025-06-03T19:50:30.094743Z"}], "thread_id": "Thread-1", "execution_time": 0.007151126861572266, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.cms_hcc__int_disabled_interaction_factors", "compiled": true, "compiled_code": "\n\nwith demographics as (\n\n    select\n          person_id\n        , enrollment_status\n        , institutional_status\n        , model_version\n        , payment_year\n        , collection_start_date\n        , collection_end_date\n    from tuva.cms_hcc._int_demographic_factors\n\n)\n\n, hcc_hierarchy as (\n\n    select\n          person_id\n        , hcc_code\n        , model_version\n        , payment_year\n        , collection_start_date\n        , collection_end_date\n    from tuva.cms_hcc._int_hcc_hierarchy\n\n)\n\n, seed_interaction_factors as (\n\n    select\n          model_version\n        , factor_type\n        , enrollment_status\n        , institutional_status\n        , short_name\n        , description\n        , hcc_code\n        , coefficient\n    from tuva.cms_hcc._value_set_disabled_interaction_factors\n\n)\n\n, demographics_with_hccs as (\n\n    select\n          demographics.person_id\n        , demographics.enrollment_status\n        , demographics.institutional_status\n        , demographics.model_version\n        , demographics.payment_year\n        , demographics.collection_start_date\n        , demographics.collection_end_date\n        , hcc_hierarchy.hcc_code\n    from demographics\n        inner join hcc_hierarchy\n            on demographics.person_id = hcc_hierarchy.person_id\n            and demographics.model_version = hcc_hierarchy.model_version\n            and demographics.payment_year = hcc_hierarchy.payment_year\n            and demographics.collection_end_date = hcc_hierarchy.collection_end_date\n\n)\n\n, interactions as (\n\n    select\n          demographics_with_hccs.person_id\n        , demographics_with_hccs.model_version\n        , demographics_with_hccs.payment_year\n        , demographics_with_hccs.collection_start_date\n        , demographics_with_hccs.collection_end_date\n        , seed_interaction_factors.factor_type\n        , seed_interaction_factors.description\n        , seed_interaction_factors.coefficient\n    from demographics_with_hccs\n        inner join seed_interaction_factors\n            on demographics_with_hccs.enrollment_status = seed_interaction_factors.enrollment_status\n            and demographics_with_hccs.institutional_status = seed_interaction_factors.institutional_status\n            and demographics_with_hccs.hcc_code = seed_interaction_factors.hcc_code\n            and demographics_with_hccs.model_version = seed_interaction_factors.model_version\n\n)\n\n, add_data_types as (\n\nselect\n      cast(person_id as TEXT) as person_id\n    , cast(description as TEXT) as description\n    , round(cast(coefficient as numeric(28,6)), 3) as coefficient\n    , cast(factor_type as TEXT) as factor_type\n    , cast(model_version as TEXT) as model_version\n    , cast(payment_year as integer) as payment_year\n    , cast(collection_start_date as date) as collection_start_date\n    , cast(collection_end_date as date) as collection_end_date\nfrom interactions\n\n)\n\nselect\n      person_id\n    , description\n    , coefficient\n    , factor_type\n    , model_version\n    , payment_year\n    , collection_start_date\n    , collection_end_date\n    , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom add_data_types", "relation_name": "tuva.cms_hcc._int_disabled_interaction_factors", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:30.095744Z", "completed_at": "2025-06-03T19:50:30.102260Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:30.102471Z", "completed_at": "2025-06-03T19:50:30.102476Z"}], "thread_id": "Thread-1", "execution_time": 0.0072040557861328125, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.cms_hcc__int_disease_factors", "compiled": true, "compiled_code": "\n\nwith demographics as (\n\n    select\n          person_id\n        , enrollment_status\n        , gender\n        , age_group\n        , medicaid_status\n        , dual_status\n        , orec\n        , institutional_status\n        , model_version\n        , payment_year\n        , collection_start_date\n        , collection_end_date\n    from tuva.cms_hcc._int_demographic_factors\n\n)\n\n, hcc_hierarchy as (\n\n    select\n          person_id\n        , hcc_code\n        , model_version\n        , payment_year\n        , collection_start_date\n        , collection_end_date\n    from tuva.cms_hcc._int_hcc_hierarchy\n\n)\n\n, seed_disease_factors as (\n\n    select\n          model_version\n        , factor_type\n        , enrollment_status\n        , medicaid_status\n        , dual_status\n        , orec\n        , institutional_status\n        , hcc_code\n        , description\n        , coefficient\n    from tuva.cms_hcc._value_set_disease_factors\n\n)\n\n, demographics_with_hccs as (\n\n    select\n          demographics.person_id\n        , demographics.enrollment_status\n        , demographics.gender\n        , demographics.age_group\n        , demographics.medicaid_status\n        , demographics.dual_status\n        , demographics.orec\n        , demographics.institutional_status\n        , demographics.model_version\n        , demographics.payment_year\n        , demographics.collection_start_date\n        , demographics.collection_end_date\n        , hcc_hierarchy.hcc_code\n    from demographics\n        inner join hcc_hierarchy\n            on demographics.person_id = hcc_hierarchy.person_id\n            and demographics.model_version = hcc_hierarchy.model_version\n            and demographics.payment_year = hcc_hierarchy.payment_year\n            and demographics.collection_end_date = hcc_hierarchy.collection_end_date\n\n)\n\n, disease_factors as (\n\n    select\n          demographics_with_hccs.person_id\n        , demographics_with_hccs.hcc_code\n        , demographics_with_hccs.model_version\n        , demographics_with_hccs.payment_year\n        , demographics_with_hccs.collection_start_date\n        , demographics_with_hccs.collection_end_date\n        , seed_disease_factors.factor_type\n        , seed_disease_factors.description\n        , seed_disease_factors.coefficient\n    from demographics_with_hccs\n        inner join seed_disease_factors\n            on demographics_with_hccs.enrollment_status = seed_disease_factors.enrollment_status\n            and demographics_with_hccs.medicaid_status = seed_disease_factors.medicaid_status\n            and demographics_with_hccs.dual_status = seed_disease_factors.dual_status\n            and demographics_with_hccs.orec = seed_disease_factors.orec\n            and demographics_with_hccs.institutional_status = seed_disease_factors.institutional_status\n            and demographics_with_hccs.hcc_code = seed_disease_factors.hcc_code\n            and demographics_with_hccs.model_version = seed_disease_factors.model_version\n\n)\n\n, add_data_types as (\n\n    select\n          cast(person_id as TEXT) as person_id\n        , cast(hcc_code as TEXT) as hcc_code\n        , cast(description as TEXT) as hcc_description\n        , round(cast(coefficient as numeric(28,6)), 3) as coefficient\n        , cast(factor_type as TEXT) as factor_type\n        , cast(model_version as TEXT) as model_version\n        , cast(payment_year as integer) as payment_year\n        , cast(collection_start_date as date) as collection_start_date\n        , cast(collection_end_date as date) as collection_end_date\n    from disease_factors\n\n)\n\nselect\n      person_id\n    , hcc_code\n    , hcc_description\n    , coefficient\n    , factor_type\n    , model_version\n    , payment_year\n    , collection_start_date\n    , collection_end_date\n    , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom add_data_types", "relation_name": "tuva.cms_hcc._int_disease_factors", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:30.103468Z", "completed_at": "2025-06-03T19:50:30.111002Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:30.111221Z", "completed_at": "2025-06-03T19:50:30.111226Z"}], "thread_id": "Thread-1", "execution_time": 0.008228063583374023, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.cms_hcc__int_disease_interaction_factors", "compiled": true, "compiled_code": "\n\nwith demographics as (\n\n    select\n          person_id\n        , enrollment_status\n        , gender\n        , age_group\n        , medicaid_status\n        , dual_status\n        , orec\n        , institutional_status\n        , model_version\n        , payment_year\n        , collection_start_date\n        , collection_end_date\n    from tuva.cms_hcc._int_demographic_factors\n\n)\n\n, hcc_hierarchy as (\n\n    select\n          person_id\n        , hcc_code\n        , model_version\n        , payment_year\n        , collection_start_date\n        , collection_end_date\n    from tuva.cms_hcc._int_hcc_hierarchy\n\n)\n\n, seed_interaction_factors as (\n\n    select\n          model_version\n        , factor_type\n        , enrollment_status\n        , medicaid_status\n        , dual_status\n        , orec\n        , institutional_status\n        , short_name\n        , description\n        , hcc_code_1\n        , hcc_code_2\n        , coefficient\n    from tuva.cms_hcc._value_set_disease_interaction_factors\n\n)\n\n, demographics_with_hccs as (\n\n    select\n          demographics.person_id\n        , demographics.enrollment_status\n        , demographics.medicaid_status\n        , demographics.dual_status\n        , demographics.orec\n        , demographics.institutional_status\n        , demographics.model_version\n        , demographics.payment_year\n        , demographics.collection_start_date\n        , demographics.collection_end_date\n        , hcc_hierarchy.hcc_code\n    from demographics\n        inner join hcc_hierarchy\n            on demographics.person_id = hcc_hierarchy.person_id\n            and demographics.model_version = hcc_hierarchy.model_version\n            and demographics.payment_year = hcc_hierarchy.payment_year\n            and demographics.collection_end_date = hcc_hierarchy.collection_end_date\n\n)\n\n, demographics_with_interactions as (\n\n    select\n          demographics_with_hccs.person_id\n        , demographics_with_hccs.model_version\n        , demographics_with_hccs.payment_year\n        , demographics_with_hccs.collection_start_date\n        , demographics_with_hccs.collection_end_date\n        , interactions_code_1.factor_type\n        , interactions_code_1.description\n        , interactions_code_1.hcc_code_1\n        , interactions_code_1.hcc_code_2\n        , interactions_code_1.coefficient\n    from demographics_with_hccs\n        inner join seed_interaction_factors as interactions_code_1\n            on demographics_with_hccs.enrollment_status = interactions_code_1.enrollment_status\n            and demographics_with_hccs.medicaid_status = interactions_code_1.medicaid_status\n            and demographics_with_hccs.dual_status = interactions_code_1.dual_status\n            and demographics_with_hccs.orec = interactions_code_1.orec\n            and demographics_with_hccs.institutional_status = interactions_code_1.institutional_status\n            and demographics_with_hccs.hcc_code = interactions_code_1.hcc_code_1\n            and demographics_with_hccs.model_version = interactions_code_1.model_version\n\n)\n\n, disease_interactions as (\n\n    select\n          demographics_with_interactions.person_id\n        , demographics_with_interactions.factor_type\n        , demographics_with_interactions.hcc_code_1\n        , demographics_with_interactions.hcc_code_2\n        , demographics_with_interactions.description\n        , demographics_with_interactions.coefficient\n        , demographics_with_interactions.model_version\n        , demographics_with_interactions.payment_year\n        , demographics_with_interactions.collection_start_date\n        , demographics_with_interactions.collection_end_date\n    from demographics_with_interactions\n        inner join demographics_with_hccs as interactions_code_2\n            on demographics_with_interactions.person_id = interactions_code_2.person_id\n            and demographics_with_interactions.hcc_code_2 = interactions_code_2.hcc_code\n            and demographics_with_interactions.model_version = interactions_code_2.model_version\n            and demographics_with_interactions.payment_year = interactions_code_2.payment_year\n            and demographics_with_interactions.collection_end_date = interactions_code_2.collection_end_date\n)\n\n, add_data_types as (\n\n    select\n          cast(person_id as TEXT) as person_id\n        , cast(hcc_code_1 as TEXT) as hcc_code_1\n        , cast(hcc_code_2 as TEXT) as hcc_code_2\n        , cast(description as TEXT) as description\n        , round(cast(coefficient as numeric(28,6)), 3) as coefficient\n        , cast(factor_type as TEXT) as factor_type\n        , cast(model_version as TEXT) as model_version\n        , cast(payment_year as integer) as payment_year\n        , cast(collection_start_date as date) as collection_start_date\n        , cast(collection_end_date as date) as collection_end_date\n    from disease_interactions\n\n)\n\nselect\n      person_id\n    , hcc_code_1\n    , hcc_code_2\n    , description\n    , coefficient\n    , factor_type\n    , model_version\n    , payment_year\n    , collection_start_date\n    , collection_end_date\n    , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom add_data_types", "relation_name": "tuva.cms_hcc._int_disease_interaction_factors", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:30.112236Z", "completed_at": "2025-06-03T19:50:30.118814Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:30.119029Z", "completed_at": "2025-06-03T19:50:30.119034Z"}], "thread_id": "Thread-1", "execution_time": 0.007277250289916992, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.cms_hcc__int_hcc_count_factors", "compiled": true, "compiled_code": "\n\nwith demographics as (\n\n    select\n          person_id\n        , enrollment_status\n        , medicaid_status\n        , dual_status\n        , orec\n        , institutional_status\n        , model_version\n        , payment_year\n        , collection_start_date\n        , collection_end_date\n    from tuva.cms_hcc._int_demographic_factors\n\n)\n\n, seed_payment_hcc_count_factors as (\n\n    select\n          model_version\n        , factor_type\n        , enrollment_status\n        , medicaid_status\n        , dual_status\n        , orec\n        , institutional_status\n        , payment_hcc_count\n        , description\n        , coefficient\n    from tuva.cms_hcc._value_set_payment_hcc_count_factors\n\n)\n\n, hcc_hierarchy as (\n\n    select\n          person_id\n        , hcc_code\n        , model_version\n        , payment_year\n        , collection_start_date\n        , collection_end_date\n    from tuva.cms_hcc._int_hcc_hierarchy\n\n)\n\n, demographics_with_hcc_counts as (\n\n    select\n          demographics.person_id\n        , demographics.enrollment_status\n        , demographics.medicaid_status\n        , demographics.dual_status\n        , demographics.orec\n        , demographics.institutional_status\n        , demographics.model_version\n        , demographics.payment_year\n        , demographics.collection_start_date\n        , demographics.collection_end_date\n        , count(hcc_hierarchy.hcc_code) as hcc_count\n    from demographics\n        inner join hcc_hierarchy\n            on demographics.person_id = hcc_hierarchy.person_id\n            and demographics.model_version = hcc_hierarchy.model_version\n            and demographics.payment_year = hcc_hierarchy.payment_year\n            and demographics.collection_end_date = hcc_hierarchy.collection_end_date\n    group by\n          demographics.person_id\n        , demographics.enrollment_status\n        , demographics.medicaid_status\n        , demographics.dual_status\n        , demographics.orec\n        , demographics.institutional_status\n        , demographics.model_version\n        , demographics.payment_year\n        , demographics.collection_start_date\n        , demographics.collection_end_date\n\n)\n\n, hcc_counts_normalized as (\n\n    select\n          person_id\n        , enrollment_status\n        , medicaid_status\n        , dual_status\n        , orec\n        , institutional_status\n        , model_version\n        , payment_year\n        , collection_start_date\n        , collection_end_date\n        , case\n            when hcc_count >= 10 then '>=10'\n            else cast(hcc_count as TEXT)\n          end as hcc_count_string\n    from demographics_with_hcc_counts\n\n)\n\n, hcc_counts as (\n\n    select\n          hcc_counts_normalized.person_id\n        , hcc_counts_normalized.model_version\n        , hcc_counts_normalized.payment_year\n        , hcc_counts_normalized.collection_start_date\n        , hcc_counts_normalized.collection_end_date\n        , seed_payment_hcc_count_factors.factor_type\n        , seed_payment_hcc_count_factors.description\n        , seed_payment_hcc_count_factors.coefficient\n    from hcc_counts_normalized\n        inner join seed_payment_hcc_count_factors\n            on hcc_counts_normalized.enrollment_status = seed_payment_hcc_count_factors.enrollment_status\n            and hcc_counts_normalized.medicaid_status = seed_payment_hcc_count_factors.medicaid_status\n            and hcc_counts_normalized.dual_status = seed_payment_hcc_count_factors.dual_status\n            and hcc_counts_normalized.orec = seed_payment_hcc_count_factors.orec\n            and hcc_counts_normalized.institutional_status = seed_payment_hcc_count_factors.institutional_status\n            and hcc_counts_normalized.hcc_count_string = seed_payment_hcc_count_factors.payment_hcc_count\n            and hcc_counts_normalized.model_version = seed_payment_hcc_count_factors.model_version\n\n)\n\n, add_data_types as (\n\n    select\n          cast(person_id as TEXT) as person_id\n        , cast(description as TEXT) as description\n        , round(cast(coefficient as numeric(28,6)), 3) as coefficient\n        , cast(factor_type as TEXT) as factor_type\n        , cast(model_version as TEXT) as model_version\n        , cast(payment_year as integer) as payment_year\n        , cast(collection_start_date as date) as collection_start_date\n        , cast(collection_end_date as date) as collection_end_date\n    from hcc_counts\n\n)\n\nselect\n      person_id\n    , description\n    , coefficient\n    , factor_type\n    , model_version\n    , payment_year\n    , collection_start_date\n    , collection_end_date\n    , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom add_data_types", "relation_name": "tuva.cms_hcc._int_hcc_count_factors", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:30.120057Z", "completed_at": "2025-06-03T19:50:30.132056Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:30.138606Z", "completed_at": "2025-06-03T19:50:30.138614Z"}], "thread_id": "Thread-1", "execution_time": 0.019042015075683594, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.mart_review__pmpm", "compiled": true, "compiled_code": "\n\n\nselect *\n       , total_paid * member_months as total_paid_absolute\n       , medical_paid * member_months as medical_paid_absolute\n       , pharmacy_paid * member_months as pharmacy_paid_absolute\n       , inpatient_paid * member_months as inpatient_paid_absolute\n       , outpatient_paid * member_months as outpatient_paid_absolute\n       , office_based_paid * member_months as office_based_paid_absolute\n       , ancillary_paid * member_months as ancillary_paid_absolute\n       , other_paid * member_months as other_paid_absolute\n        , data_source || '|' || year_month as data_source_month_key\nfrom tuva.financial_pmpm.pmpm_payer", "relation_name": "tuva.data_quality.mart_review__pmpm", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:30.214320Z", "completed_at": "2025-06-03T19:50:30.275900Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:30.276726Z", "completed_at": "2025-06-03T19:50:30.276734Z"}], "thread_id": "Thread-1", "execution_time": 0.13225698471069336, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_expectations_expect_table_row_count_to_be_between_financial_pmpm__pmpm_payer_1__False.f1bcdb11b0", "compiled": true, "compiled_code": "\n\n\n\n    with grouped_expression as (\n    select\n        \n        \n    \n  \n( 1=1 and count(*) >= 1\n)\n as expression\n\n\n    from tuva.financial_pmpm.pmpm_payer\n    \n\n),\nvalidation_errors as (\n\n    select\n        *\n    from\n        grouped_expression\n    where\n        not(expression = true)\n\n)\n\nselect *\nfrom validation_errors\n\n\n\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:29.930097Z", "completed_at": "2025-06-03T19:50:30.286774Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:30.287039Z", "completed_at": "2025-06-03T19:50:30.287045Z"}], "thread_id": "Thread-2", "execution_time": 0.3654913902282715, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.chronic_conditions__cms_chronic_conditions_wide", "compiled": true, "compiled_code": "\n\nwith  __dbt__cte__cms_chronic_conditions__stg_core__patient as (\n\n\nselect\n    person_id\n    , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom tuva.core.patient\n), chronic_conditions as (\n\n    select distinct\n          condition\n        , condition_column_name\n    from tuva.chronic_conditions._value_set_cms_chronic_conditions_hierarchy\n\n)\n\n, conditions as (\n\n    select\n          chronic_conditions_unioned.person_id\n        , chronic_conditions.condition_column_name\n        , 1 as condition_count\n    from tuva.chronic_conditions.cms_chronic_conditions_long as chronic_conditions_unioned\n         inner join chronic_conditions as chronic_conditions\n             on chronic_conditions_unioned.condition = chronic_conditions.condition\n\n)\n\nselect\n      p.person_id\n    , \n  \n    max(\n      \n      case\n      when condition_column_name = 'acute_myocardial_infarction'\n        then 1\n      else 0\n      end\n    )\n    \n      \n        as acute_myocardial_infarction\n      \n    \n    ,\n  \n    max(\n      \n      case\n      when condition_column_name = 'adhd_conduct_disorders_and_hyperkinetic_syndrome'\n        then 1\n      else 0\n      end\n    )\n    \n      \n        as adhd_conduct_disorders_and_hyperkinetic_syndrome\n      \n    \n    ,\n  \n    max(\n      \n      case\n      when condition_column_name = 'alcohol_use_disorders'\n        then 1\n      else 0\n      end\n    )\n    \n      \n        as alcohol_use_disorders\n      \n    \n    ,\n  \n    max(\n      \n      case\n      when condition_column_name = 'alzheimers_disease'\n        then 1\n      else 0\n      end\n    )\n    \n      \n        as alzheimers_disease\n      \n    \n    ,\n  \n    max(\n      \n      case\n      when condition_column_name = 'anemia'\n        then 1\n      else 0\n      end\n    )\n    \n      \n        as anemia\n      \n    \n    ,\n  \n    max(\n      \n      case\n      when condition_column_name = 'anxiety_disorders'\n        then 1\n      else 0\n      end\n    )\n    \n      \n        as anxiety_disorders\n      \n    \n    ,\n  \n    max(\n      \n      case\n      when condition_column_name = 'asthma'\n        then 1\n      else 0\n      end\n    )\n    \n      \n        as asthma\n      \n    \n    ,\n  \n    max(\n      \n      case\n      when condition_column_name = 'atrial_fibrillation_and_flutter'\n        then 1\n      else 0\n      end\n    )\n    \n      \n        as atrial_fibrillation_and_flutter\n      \n    \n    ,\n  \n    max(\n      \n      case\n      when condition_column_name = 'autism_spectrum_disorders'\n        then 1\n      else 0\n      end\n    )\n    \n      \n        as autism_spectrum_disorders\n      \n    \n    ,\n  \n    max(\n      \n      case\n      when condition_column_name = 'benign_prostatic_hyperplasia'\n        then 1\n      else 0\n      end\n    )\n    \n      \n        as benign_prostatic_hyperplasia\n      \n    \n    ,\n  \n    max(\n      \n      case\n      when condition_column_name = 'bipolar_disorder'\n        then 1\n      else 0\n      end\n    )\n    \n      \n        as bipolar_disorder\n      \n    \n    ,\n  \n    max(\n      \n      case\n      when condition_column_name = 'cancer_breast'\n        then 1\n      else 0\n      end\n    )\n    \n      \n        as cancer_breast\n      \n    \n    ,\n  \n    max(\n      \n      case\n      when condition_column_name = 'cancer_colorectal'\n        then 1\n      else 0\n      end\n    )\n    \n      \n        as cancer_colorectal\n      \n    \n    ,\n  \n    max(\n      \n      case\n      when condition_column_name = 'cancer_endometrial'\n        then 1\n      else 0\n      end\n    )\n    \n      \n        as cancer_endometrial\n      \n    \n    ,\n  \n    max(\n      \n      case\n      when condition_column_name = 'cancer_lung'\n        then 1\n      else 0\n      end\n    )\n    \n      \n        as cancer_lung\n      \n    \n    ,\n  \n    max(\n      \n      case\n      when condition_column_name = 'cancer_prostate'\n        then 1\n      else 0\n      end\n    )\n    \n      \n        as cancer_prostate\n      \n    \n    ,\n  \n    max(\n      \n      case\n      when condition_column_name = 'cancer_urologic_kidney_renal_pelvis_and_ureter'\n        then 1\n      else 0\n      end\n    )\n    \n      \n        as cancer_urologic_kidney_renal_pelvis_and_ureter\n      \n    \n    ,\n  \n    max(\n      \n      case\n      when condition_column_name = 'cataract'\n        then 1\n      else 0\n      end\n    )\n    \n      \n        as cataract\n      \n    \n    ,\n  \n    max(\n      \n      case\n      when condition_column_name = 'cerebral_palsy'\n        then 1\n      else 0\n      end\n    )\n    \n      \n        as cerebral_palsy\n      \n    \n    ,\n  \n    max(\n      \n      case\n      when condition_column_name = 'chronic_kidney_disease'\n        then 1\n      else 0\n      end\n    )\n    \n      \n        as chronic_kidney_disease\n      \n    \n    ,\n  \n    max(\n      \n      case\n      when condition_column_name = 'chronic_obstructive_pulmonary_disease'\n        then 1\n      else 0\n      end\n    )\n    \n      \n        as chronic_obstructive_pulmonary_disease\n      \n    \n    ,\n  \n    max(\n      \n      case\n      when condition_column_name = 'cystic_fibrosis_and_other_metabolic_developmental_disorders'\n        then 1\n      else 0\n      end\n    )\n    \n      \n        as cystic_fibrosis_and_other_metabolic_developmental_disorders\n      \n    \n    ,\n  \n    max(\n      \n      case\n      when condition_column_name = 'depression_bipolar_or_other_depressive_mood_disorders'\n        then 1\n      else 0\n      end\n    )\n    \n      \n        as depression_bipolar_or_other_depressive_mood_disorders\n      \n    \n    ,\n  \n    max(\n      \n      case\n      when condition_column_name = 'depressive_disorders'\n        then 1\n      else 0\n      end\n    )\n    \n      \n        as depressive_disorders\n      \n    \n    ,\n  \n    max(\n      \n      case\n      when condition_column_name = 'diabetes'\n        then 1\n      else 0\n      end\n    )\n    \n      \n        as diabetes\n      \n    \n    ,\n  \n    max(\n      \n      case\n      when condition_column_name = 'drug_use_disorders'\n        then 1\n      else 0\n      end\n    )\n    \n      \n        as drug_use_disorders\n      \n    \n    ,\n  \n    max(\n      \n      case\n      when condition_column_name = 'epilepsy'\n        then 1\n      else 0\n      end\n    )\n    \n      \n        as epilepsy\n      \n    \n    ,\n  \n    max(\n      \n      case\n      when condition_column_name = 'fibromyalgia_and_chronic_pain_and_fatigue'\n        then 1\n      else 0\n      end\n    )\n    \n      \n        as fibromyalgia_and_chronic_pain_and_fatigue\n      \n    \n    ,\n  \n    max(\n      \n      case\n      when condition_column_name = 'glaucoma'\n        then 1\n      else 0\n      end\n    )\n    \n      \n        as glaucoma\n      \n    \n    ,\n  \n    max(\n      \n      case\n      when condition_column_name = 'heart_failure_and_non_ischemic_heart_disease'\n        then 1\n      else 0\n      end\n    )\n    \n      \n        as heart_failure_and_non_ischemic_heart_disease\n      \n    \n    ,\n  \n    max(\n      \n      case\n      when condition_column_name = 'hepatitis_a'\n        then 1\n      else 0\n      end\n    )\n    \n      \n        as hepatitis_a\n      \n    \n    ,\n  \n    max(\n      \n      case\n      when condition_column_name = 'hepatitis_b_acute_or_unspecified'\n        then 1\n      else 0\n      end\n    )\n    \n      \n        as hepatitis_b_acute_or_unspecified\n      \n    \n    ,\n  \n    max(\n      \n      case\n      when condition_column_name = 'hepatitis_b_chronic'\n        then 1\n      else 0\n      end\n    )\n    \n      \n        as hepatitis_b_chronic\n      \n    \n    ,\n  \n    max(\n      \n      case\n      when condition_column_name = 'hepatitis_c_acute'\n        then 1\n      else 0\n      end\n    )\n    \n      \n        as hepatitis_c_acute\n      \n    \n    ,\n  \n    max(\n      \n      case\n      when condition_column_name = 'hepatitis_c_chronic'\n        then 1\n      else 0\n      end\n    )\n    \n      \n        as hepatitis_c_chronic\n      \n    \n    ,\n  \n    max(\n      \n      case\n      when condition_column_name = 'hepatitis_c_unspecified'\n        then 1\n      else 0\n      end\n    )\n    \n      \n        as hepatitis_c_unspecified\n      \n    \n    ,\n  \n    max(\n      \n      case\n      when condition_column_name = 'hepatitis_d'\n        then 1\n      else 0\n      end\n    )\n    \n      \n        as hepatitis_d\n      \n    \n    ,\n  \n    max(\n      \n      case\n      when condition_column_name = 'hepatitis_e'\n        then 1\n      else 0\n      end\n    )\n    \n      \n        as hepatitis_e\n      \n    \n    ,\n  \n    max(\n      \n      case\n      when condition_column_name = 'hip_pelvic_fracture'\n        then 1\n      else 0\n      end\n    )\n    \n      \n        as hip_pelvic_fracture\n      \n    \n    ,\n  \n    max(\n      \n      case\n      when condition_column_name = 'human_immunodeficiency_virus_and_or_acquired_immunodeficiency_syndrome_hiv_aids'\n        then 1\n      else 0\n      end\n    )\n    \n      \n        as human_immunodeficiency_virus_and_or_acquired_immunodeficiency_syndrome_hiv_aids\n      \n    \n    ,\n  \n    max(\n      \n      case\n      when condition_column_name = 'hyperlipidemia'\n        then 1\n      else 0\n      end\n    )\n    \n      \n        as hyperlipidemia\n      \n    \n    ,\n  \n    max(\n      \n      case\n      when condition_column_name = 'hypertension'\n        then 1\n      else 0\n      end\n    )\n    \n      \n        as hypertension\n      \n    \n    ,\n  \n    max(\n      \n      case\n      when condition_column_name = 'hypothyroidism'\n        then 1\n      else 0\n      end\n    )\n    \n      \n        as hypothyroidism\n      \n    \n    ,\n  \n    max(\n      \n      case\n      when condition_column_name = 'intellectual_disabilities_and_related_conditions'\n        then 1\n      else 0\n      end\n    )\n    \n      \n        as intellectual_disabilities_and_related_conditions\n      \n    \n    ,\n  \n    max(\n      \n      case\n      when condition_column_name = 'ischemic_heart_disease'\n        then 1\n      else 0\n      end\n    )\n    \n      \n        as ischemic_heart_disease\n      \n    \n    ,\n  \n    max(\n      \n      case\n      when condition_column_name = 'learning_disabilities'\n        then 1\n      else 0\n      end\n    )\n    \n      \n        as learning_disabilities\n      \n    \n    ,\n  \n    max(\n      \n      case\n      when condition_column_name = 'leukemias_and_lymphomas'\n        then 1\n      else 0\n      end\n    )\n    \n      \n        as leukemias_and_lymphomas\n      \n    \n    ,\n  \n    max(\n      \n      case\n      when condition_column_name = 'liver_disease_cirrhosis_and_other_liver_conditions_except_viral_hepatitis'\n        then 1\n      else 0\n      end\n    )\n    \n      \n        as liver_disease_cirrhosis_and_other_liver_conditions_except_viral_hepatitis\n      \n    \n    ,\n  \n    max(\n      \n      case\n      when condition_column_name = 'migraine_and_chronic_headache'\n        then 1\n      else 0\n      end\n    )\n    \n      \n        as migraine_and_chronic_headache\n      \n    \n    ,\n  \n    max(\n      \n      case\n      when condition_column_name = 'mobility_impairments'\n        then 1\n      else 0\n      end\n    )\n    \n      \n        as mobility_impairments\n      \n    \n    ,\n  \n    max(\n      \n      case\n      when condition_column_name = 'multiple_sclerosis_and_transverse_myelitis'\n        then 1\n      else 0\n      end\n    )\n    \n      \n        as multiple_sclerosis_and_transverse_myelitis\n      \n    \n    ,\n  \n    max(\n      \n      case\n      when condition_column_name = 'muscular_dystrophy'\n        then 1\n      else 0\n      end\n    )\n    \n      \n        as muscular_dystrophy\n      \n    \n    ,\n  \n    max(\n      \n      case\n      when condition_column_name = 'non_alzheimers_dementia'\n        then 1\n      else 0\n      end\n    )\n    \n      \n        as non_alzheimers_dementia\n      \n    \n    ,\n  \n    max(\n      \n      case\n      when condition_column_name = 'obesity'\n        then 1\n      else 0\n      end\n    )\n    \n      \n        as obesity\n      \n    \n    ,\n  \n    max(\n      \n      case\n      when condition_column_name = 'opioid_use_disorder_oud'\n        then 1\n      else 0\n      end\n    )\n    \n      \n        as opioid_use_disorder_oud\n      \n    \n    ,\n  \n    max(\n      \n      case\n      when condition_column_name = 'osteoporosis_with_or_without_pathological_fracture'\n        then 1\n      else 0\n      end\n    )\n    \n      \n        as osteoporosis_with_or_without_pathological_fracture\n      \n    \n    ,\n  \n    max(\n      \n      case\n      when condition_column_name = 'other_developmental_delays'\n        then 1\n      else 0\n      end\n    )\n    \n      \n        as other_developmental_delays\n      \n    \n    ,\n  \n    max(\n      \n      case\n      when condition_column_name = 'parkinsons_disease_and_secondary_parkinsonism'\n        then 1\n      else 0\n      end\n    )\n    \n      \n        as parkinsons_disease_and_secondary_parkinsonism\n      \n    \n    ,\n  \n    max(\n      \n      case\n      when condition_column_name = 'peripheral_vascular_disease_pvd'\n        then 1\n      else 0\n      end\n    )\n    \n      \n        as peripheral_vascular_disease_pvd\n      \n    \n    ,\n  \n    max(\n      \n      case\n      when condition_column_name = 'personality_disorders'\n        then 1\n      else 0\n      end\n    )\n    \n      \n        as personality_disorders\n      \n    \n    ,\n  \n    max(\n      \n      case\n      when condition_column_name = 'pneumonia_all_cause'\n        then 1\n      else 0\n      end\n    )\n    \n      \n        as pneumonia_all_cause\n      \n    \n    ,\n  \n    max(\n      \n      case\n      when condition_column_name = 'post_traumatic_stress_disorder_ptsd'\n        then 1\n      else 0\n      end\n    )\n    \n      \n        as post_traumatic_stress_disorder_ptsd\n      \n    \n    ,\n  \n    max(\n      \n      case\n      when condition_column_name = 'pressure_and_chronic_ulcers'\n        then 1\n      else 0\n      end\n    )\n    \n      \n        as pressure_and_chronic_ulcers\n      \n    \n    ,\n  \n    max(\n      \n      case\n      when condition_column_name = 'rheumatoid_arthritis_osteoarthritis'\n        then 1\n      else 0\n      end\n    )\n    \n      \n        as rheumatoid_arthritis_osteoarthritis\n      \n    \n    ,\n  \n    max(\n      \n      case\n      when condition_column_name = 'schizophrenia'\n        then 1\n      else 0\n      end\n    )\n    \n      \n        as schizophrenia\n      \n    \n    ,\n  \n    max(\n      \n      case\n      when condition_column_name = 'schizophrenia_and_other_psychotic_disorders'\n        then 1\n      else 0\n      end\n    )\n    \n      \n        as schizophrenia_and_other_psychotic_disorders\n      \n    \n    ,\n  \n    max(\n      \n      case\n      when condition_column_name = 'sensory_blindness_and_visual_impairment'\n        then 1\n      else 0\n      end\n    )\n    \n      \n        as sensory_blindness_and_visual_impairment\n      \n    \n    ,\n  \n    max(\n      \n      case\n      when condition_column_name = 'sensory_deafness_and_hearing_impairment'\n        then 1\n      else 0\n      end\n    )\n    \n      \n        as sensory_deafness_and_hearing_impairment\n      \n    \n    ,\n  \n    max(\n      \n      case\n      when condition_column_name = 'sickle_cell_disease'\n        then 1\n      else 0\n      end\n    )\n    \n      \n        as sickle_cell_disease\n      \n    \n    ,\n  \n    max(\n      \n      case\n      when condition_column_name = 'spina_bifida_and_other_congenital_anomalies_of_the_nervous_system'\n        then 1\n      else 0\n      end\n    )\n    \n      \n        as spina_bifida_and_other_congenital_anomalies_of_the_nervous_system\n      \n    \n    ,\n  \n    max(\n      \n      case\n      when condition_column_name = 'spinal_cord_injury'\n        then 1\n      else 0\n      end\n    )\n    \n      \n        as spinal_cord_injury\n      \n    \n    ,\n  \n    max(\n      \n      case\n      when condition_column_name = 'stroke_transient_ischemic_attack'\n        then 1\n      else 0\n      end\n    )\n    \n      \n        as stroke_transient_ischemic_attack\n      \n    \n    ,\n  \n    max(\n      \n      case\n      when condition_column_name = 'tobacco_use'\n        then 1\n      else 0\n      end\n    )\n    \n      \n        as tobacco_use\n      \n    \n    ,\n  \n    max(\n      \n      case\n      when condition_column_name = 'traumatic_brain_injury_and_nonpsychotic_mental_disorders_due_to_brain_damage'\n        then 1\n      else 0\n      end\n    )\n    \n      \n        as traumatic_brain_injury_and_nonpsychotic_mental_disorders_due_to_brain_damage\n      \n    \n    ,\n  \n    max(\n      \n      case\n      when condition_column_name = 'viral_hepatitis_general'\n        then 1\n      else 0\n      end\n    )\n    \n      \n        as viral_hepatitis_general\n      \n    \n    \n  \n\n      , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom __dbt__cte__cms_chronic_conditions__stg_core__patient as p\n     left outer join conditions\n        on p.person_id = conditions.person_id\ngroup by\n    p.person_id", "relation_name": "tuva.chronic_conditions.cms_chronic_conditions_wide", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:30.277788Z", "completed_at": "2025-06-03T19:50:30.293674Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:30.294035Z", "completed_at": "2025-06-03T19:50:30.294041Z"}], "thread_id": "Thread-1", "execution_time": 0.016750097274780273, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.cms_hcc__patient_risk_factors_monthly", "compiled": true, "compiled_code": "\nwith demographic_factors as (\n\n    select\n          person_id\n        /* concatenate demographic risk factors */\n\n    , gender || ', ' || age_group || ' Years' || ', ' || enrollment_status || ' Enrollee' || ', ' || CASE   WHEN medicaid_status = 'Yes' THEN 'Medicaid'   ELSE 'Non-Medicaid' END || ', ' || dual_status || ' Dual' || ', ' || orec || ', ' || CASE   WHEN institutional_status = 'Yes' THEN 'Institutional'   ELSE 'Non-Institutional' END as description\n\n        , coefficient\n        , factor_type\n        , model_version\n        , payment_year\n        , collection_start_date\n        , collection_end_date\n    from tuva.cms_hcc._int_demographic_factors\n\n)\n\n, demographic_defaults as (\n\n    select\n          person_id\n        , model_version\n        , enrollment_status_default\n        , medicaid_dual_status_default\n        , orec_default\n        , institutional_status_default\n        , payment_year\n        , collection_start_date\n        , collection_end_date\n    from tuva.cms_hcc._int_demographic_factors\n\n)\n\n, disease_factors as (\n\n    select\n          person_id\n        , hcc_description || ' (HCC ' || hcc_code || ')' as description\n        , coefficient\n        , factor_type\n        , model_version\n        , payment_year\n        , collection_start_date\n        , collection_end_date\n    from tuva.cms_hcc._int_disease_factors\n\n)\n\n, enrollment_interactions as (\n\n    select\n          person_id\n        , description\n        , coefficient\n        , factor_type\n        , model_version\n        , payment_year\n        , collection_start_date\n        , collection_end_date\n    from tuva.cms_hcc._int_enrollment_interaction_factors\n\n)\n\n, disabled_interactions as (\n\n    select\n          person_id\n        , description\n        , coefficient\n        , factor_type\n        , model_version\n        , payment_year\n        , collection_start_date\n        , collection_end_date\n    from tuva.cms_hcc._int_disabled_interaction_factors\n\n)\n\n, disease_interactions as (\n\n    select\n          person_id\n        , description\n        , coefficient\n        , factor_type\n        , model_version\n        , payment_year\n        , collection_start_date\n        , collection_end_date\n    from tuva.cms_hcc._int_disease_interaction_factors\n\n)\n\n, hcc_counts as (\n\n    select\n          person_id\n        , description\n        , coefficient\n        , factor_type\n        , model_version\n        , payment_year\n        , collection_start_date\n        , collection_end_date\n    from tuva.cms_hcc._int_hcc_count_factors\n\n)\n\n, unioned as (\n\n    select * from demographic_factors\n    union all\n    select * from disease_factors\n    union all\n    select * from enrollment_interactions\n    union all\n    select * from disabled_interactions\n    union all\n    select * from disease_interactions\n    union all\n    select * from hcc_counts\n\n)\n\n, add_defaults as (\n\n    select\n          unioned.person_id\n        , demographic_defaults.enrollment_status_default\n        , demographic_defaults.medicaid_dual_status_default\n        , demographic_defaults.orec_default\n        , demographic_defaults.institutional_status_default\n        , unioned.description as risk_factor_description\n        , unioned.coefficient\n        , unioned.factor_type\n        , unioned.model_version\n        , unioned.payment_year\n        , unioned.collection_start_date\n        , unioned.collection_end_date\n    from unioned\n        left outer join demographic_defaults\n            on unioned.person_id = demographic_defaults.person_id\n            and unioned.model_version = demographic_defaults.model_version\n            and unioned.payment_year = demographic_defaults.payment_year\n            and unioned.collection_end_date = demographic_defaults.collection_end_date\n\n)\n\n, add_data_types as (\n\n    select\n          cast(person_id as TEXT) as person_id\n        \n            , cast(enrollment_status_default as boolean) as enrollment_status_default\n            , cast(medicaid_dual_status_default as boolean) as medicaid_dual_status_default\n            , cast(orec_default as boolean) as orec_default\n            , cast(institutional_status_default as boolean) as institutional_status_default\n        \n        , cast(factor_type as TEXT) as factor_type\n        , cast(risk_factor_description as TEXT) as risk_factor_description\n        , round(cast(coefficient as numeric(28,6)), 3) as coefficient\n        , cast(model_version as TEXT) as model_version\n        , cast(payment_year as integer) as payment_year\n        , cast(collection_start_date as date) as collection_start_date\n        , cast(collection_end_date as date) as collection_end_date\n    from add_defaults\n\n)\n\nselect\n      person_id\n    , enrollment_status_default\n    , medicaid_dual_status_default\n    , orec_default\n    , institutional_status_default\n    , factor_type\n    , risk_factor_description\n    , coefficient\n    , model_version\n    , payment_year\n    , collection_start_date\n    , collection_end_date\n    , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom add_data_types", "relation_name": "tuva.cms_hcc.patient_risk_factors_monthly", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:30.288355Z", "completed_at": "2025-06-03T19:50:30.300095Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:30.300338Z", "completed_at": "2025-06-03T19:50:30.300343Z"}], "thread_id": "Thread-2", "execution_time": 0.012490034103393555, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.not_null_chronic_conditions__cms_chronic_conditions_wide_person_id.dc7adcca6d", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect person_id\nfrom tuva.chronic_conditions.cms_chronic_conditions_wide\nwhere person_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:30.295486Z", "completed_at": "2025-06-03T19:50:30.300941Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:30.301395Z", "completed_at": "2025-06-03T19:50:30.301399Z"}], "thread_id": "Thread-1", "execution_time": 0.006438016891479492, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.unique_chronic_conditions__cms_chronic_conditions_wide_person_id.2ad66674ce", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    person_id as unique_field,\n    count(*) as n_records\n\nfrom tuva.chronic_conditions.cms_chronic_conditions_wide\nwhere person_id is not null\ngroup by person_id\nhaving count(*) > 1\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:30.302193Z", "completed_at": "2025-06-03T19:50:30.319174Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:30.319454Z", "completed_at": "2025-06-03T19:50:30.319460Z"}], "thread_id": "Thread-2", "execution_time": 0.01836109161376953, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.cms_hcc__patient_risk_factors", "compiled": true, "compiled_code": "\n\nselect\n      person_id\n    , enrollment_status_default\n    , medicaid_dual_status_default\n    , orec_default\n    , institutional_status_default\n    , factor_type\n    , risk_factor_description\n    , coefficient\n    , model_version\n    , payment_year\n    , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom tuva.cms_hcc.patient_risk_factors_monthly\nwhere collection_end_date = (\n        select max(collection_end_date)\n        from tuva.cms_hcc.patient_risk_factors_monthly\n        where payment_year = 2025\n    )", "relation_name": "tuva.cms_hcc.patient_risk_factors", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:30.308759Z", "completed_at": "2025-06-03T19:50:30.348160Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:30.353408Z", "completed_at": "2025-06-03T19:50:30.353413Z"}], "thread_id": "Thread-1", "execution_time": 0.04523801803588867, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.cms_hcc__patient_risk_scores_monthly", "compiled": true, "compiled_code": "\nwith  __dbt__cte___stg_member_months as (\n\nselect\n      person_id\n    , year_month\n    , payer\n    , plan\n    , data_source\n    , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom tuva.core.member_months\n), seed_adjustment_rates as (\n\n    select\n          model_version\n        , payment_year\n        , normalization_factor\n        , ma_coding_pattern_adjustment\n    from tuva.cms_hcc._value_set_adjustment_rates\n\n)\n\n, risk_factors as (\n\n    select\n          person_id\n        , coefficient\n        , model_version\n        , payment_year\n        , collection_start_date\n        , collection_end_date\n    from tuva.cms_hcc.patient_risk_factors_monthly\n\n)\n\n, member_months as (\n\n    select\n        person_id\n        , cast(\n  substr(year_month, 1, 4)\n as integer) as eligible_year\n        , count(1) as member_months\n    from __dbt__cte___stg_member_months\n    group by\n        person_id\n        , cast(\n  substr(year_month, 1, 4)\n as integer)\n)\n\n, raw_score as (\n\n    select\n          person_id\n        , sum(coefficient) as risk_score\n        , model_version\n        , payment_year\n        , collection_start_date\n        , collection_end_date\n    from risk_factors\n    group by\n          person_id\n        , model_version\n        , payment_year\n        , collection_start_date\n        , collection_end_date\n\n)\n\n/*\n    CMS Guidance for the transition from v24 to v28:\n\n    PY2024 risk scores will be blended using 67% of the risk score calculated\n    from v24 and 33% from v28.\n\n    PY2025 risk scores will be blended using 33% of the risk score calculated\n    from v24 and 67% from v28.\n\n    PY2026 risk scores will be 100% from v28.\n\n    Prior payment years will still be calculated from v24 only.\n*/\n, transition_scores as (\n\n    select\n          person_id\n        , risk_score\n        , case\n            when payment_year <= 2023 and model_version = 'CMS-HCC-V24' then risk_score\n            when payment_year = 2024 and model_version = 'CMS-HCC-V24' then risk_score * 0.67\n            when payment_year = 2025 and model_version = 'CMS-HCC-V24' then risk_score * 0.33\n            when payment_year >= 2026 and model_version = 'CMS-HCC-V24' then 0\n            end as v24_risk_score\n        , case\n            when payment_year <= 2023 and model_version = 'CMS-HCC-V28' then 0\n            when payment_year = 2024 and model_version = 'CMS-HCC-V28' then risk_score * 0.33\n            when payment_year = 2025 and model_version = 'CMS-HCC-V28' then risk_score * 0.67\n            when payment_year >= 2026 and model_version = 'CMS-HCC-V28' then risk_score\n            end as v28_risk_score\n        , model_version\n        , payment_year\n        , collection_start_date\n        , collection_end_date\n    from raw_score\n\n)\n\n/*\n    Grouping by patient to create a single row per patient.\n*/\n, transition_scores_grouped as (\n\n    select\n          person_id\n        , max(v24_risk_score) as v24_risk_score\n        , max(v28_risk_score) as v28_risk_score\n        , payment_year\n        , collection_start_date\n        , collection_end_date\n    from transition_scores\n    group by\n          person_id\n        , payment_year\n        , collection_start_date\n        , collection_end_date\n\n)\n\n, blended as (\n\n    select\n          person_id\n        , v24_risk_score\n        , v28_risk_score\n        , v24_risk_score + v28_risk_score as blended_risk_score\n        , payment_year\n        , collection_start_date\n        , collection_end_date\n    from transition_scores_grouped\n\n)\n\n, normalized as (\n\n    select\n          blended.person_id\n        , blended.v24_risk_score\n        , blended.v28_risk_score\n        , blended.blended_risk_score\n        , blended.blended_risk_score / seed_adjustment_rates.normalization_factor as normalized_risk_score\n        , blended.payment_year\n        , blended.collection_start_date\n        , blended.collection_end_date\n    from blended\n        left outer join seed_adjustment_rates\n            on blended.payment_year = seed_adjustment_rates.payment_year\n\n)\n\n, payment as (\n\n    select\n          normalized.person_id\n        , normalized.v24_risk_score\n        , normalized.v28_risk_score\n        , normalized.blended_risk_score\n        , normalized.normalized_risk_score\n        , normalized.normalized_risk_score * (1 - seed_adjustment_rates.ma_coding_pattern_adjustment) as payment_risk_score\n        , normalized.payment_year\n        , normalized.collection_start_date\n        , normalized.collection_end_date\n    from normalized\n        left outer join seed_adjustment_rates\n            on normalized.payment_year = seed_adjustment_rates.payment_year\n\n)\n\n, weighted_score as (\n\n    select\n        payment.person_id\n        , payment.v24_risk_score\n        , payment.v28_risk_score\n        , payment.blended_risk_score\n        , payment.normalized_risk_score\n        , payment.payment_risk_score\n        , member_months.member_months\n        , payment.payment_risk_score * member_months.member_months as payment_risk_score_weighted_by_months\n        , payment.payment_year\n        , payment.collection_start_date\n        , payment.collection_end_date\n    from payment\n    left outer join member_months\n            on payment.person_id = member_months.person_id\n            and payment.payment_year = member_months.eligible_year\n)\n\n, add_data_types as (\n\n    select\n          cast(person_id as TEXT) as person_id\n        , round(cast(v24_risk_score as numeric(28,6)), 3) as v24_risk_score\n        , round(cast(v28_risk_score as numeric(28,6)), 3) as v28_risk_score\n        , round(cast(blended_risk_score as numeric(28,6)), 3) as blended_risk_score\n        , round(cast(normalized_risk_score as numeric(28,6)), 3) as normalized_risk_score\n        , round(cast(payment_risk_score as numeric(28,6)), 3) as payment_risk_score\n        , round(cast(payment_risk_score_weighted_by_months as numeric(28,6)), 3) as payment_risk_score_weighted_by_months\n        , cast(member_months as integer) as member_months\n        , cast(payment_year as integer) as payment_year\n        , cast(collection_start_date as date) as collection_start_date\n        , cast(collection_end_date as date) as collection_end_date\n    from weighted_score\n\n)\n\nselect\n      person_id\n    , v24_risk_score\n    , v28_risk_score\n    , blended_risk_score\n    , normalized_risk_score\n    , payment_risk_score\n    , payment_risk_score_weighted_by_months\n    , member_months\n    , payment_year\n    , collection_start_date\n    , collection_end_date\n    , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom add_data_types", "relation_name": "tuva.cms_hcc.patient_risk_scores_monthly", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:30.348372Z", "completed_at": "2025-06-03T19:50:30.359505Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:30.359731Z", "completed_at": "2025-06-03T19:50:30.359735Z"}], "thread_id": "Thread-2", "execution_time": 0.012130022048950195, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.mart_review__patient_risk_factors", "compiled": true, "compiled_code": "\n\nselect *\n,dense_rank() over (\norder by person_id, model_version, payment_year ) as patient_risk_sk\nfrom tuva.cms_hcc.patient_risk_factors as p", "relation_name": "tuva.data_quality.mart_review__patient_risk_factors", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:30.354628Z", "completed_at": "2025-06-03T19:50:30.360305Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:30.360815Z", "completed_at": "2025-06-03T19:50:30.360818Z"}], "thread_id": "Thread-1", "execution_time": 0.006743907928466797, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_expectations_expect_table_row_count_to_be_between_cms_hcc__patient_risk_factors_1__False.5d1afa6d0c", "compiled": true, "compiled_code": "\n\n\n\n    with grouped_expression as (\n    select\n        \n        \n    \n  \n( 1=1 and count(*) >= 1\n)\n as expression\n\n\n    from tuva.cms_hcc.patient_risk_factors\n    \n\n),\nvalidation_errors as (\n\n    select\n        *\n    from\n        grouped_expression\n    where\n        not(expression = true)\n\n)\n\nselect *\nfrom validation_errors\n\n\n\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:30.361627Z", "completed_at": "2025-06-03T19:50:30.373084Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:30.373304Z", "completed_at": "2025-06-03T19:50:30.373310Z"}], "thread_id": "Thread-2", "execution_time": 0.012809038162231445, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.cms_hcc__patient_risk_scores", "compiled": true, "compiled_code": "\n\nselect\n      person_id\n    , v24_risk_score\n    , v28_risk_score\n    , blended_risk_score\n    , normalized_risk_score\n    , payment_risk_score\n    , payment_risk_score_weighted_by_months\n    , member_months\n    , payment_year\n    , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom tuva.cms_hcc.patient_risk_scores_monthly\nwhere collection_end_date = (\n        select max(collection_end_date)\n        from tuva.cms_hcc.patient_risk_scores_monthly\n        where payment_year = 2025\n    )", "relation_name": "tuva.cms_hcc.patient_risk_scores", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:30.368173Z", "completed_at": "2025-06-03T19:50:30.476767Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:30.484408Z", "completed_at": "2025-06-03T19:50:30.484415Z"}], "thread_id": "Thread-1", "execution_time": 0.11688709259033203, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_utils_unique_combination_of_columns_cms_hcc__patient_risk_scores_monthly_person_id__payment_year__collection_end_date.47c094f8d0", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith validation_errors as (\n\n    select\n        person_id, payment_year, collection_end_date\n    from tuva.cms_hcc.patient_risk_scores_monthly\n    group by person_id, payment_year, collection_end_date\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:30.374363Z", "completed_at": "2025-06-03T19:50:30.490007Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:30.490777Z", "completed_at": "2025-06-03T19:50:30.490782Z"}], "thread_id": "Thread-2", "execution_time": 0.11689591407775879, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.mart_review__patient_risk", "compiled": true, "compiled_code": "\n\n\nwith cte as (\n    select \n        payment_year\n        , person_id\n        , model_version\n        , patient_risk_sk\n        , SUM(coefficient) as risk_score\n    from tuva.data_quality.mart_review__patient_risk_factors\n    group by payment_year\n             , person_id\n             , model_version\n             , patient_risk_sk\n)\n\nselect \n    case \n        when risk_score <= 0.5 then '.5'\n        when risk_score between 0.5 and 1.0 then '1'\n        when risk_score between 1.0 and 1.5 then '1.5'\n        when risk_score between 1.5 and 2.0 then '2'\n        when risk_score between 2.0 and 2.5 then '2.5'\n        when risk_score between 2.5 and 3.0 then '3'\n        when risk_score between 3.0 and 3.5 then '3.5'\n        when risk_score between 3.5 and 4.0 then '4'\n        when risk_score between 4.0 and 4.5 then '4.5'\n        when risk_score between 4.5 and 5.0 then '5'\n        when risk_score > 5.0 then '5+'\n        else null \n        end as risk_score_bucket\n        , payment_year\n        , person_id\n        , model_version\n        , patient_risk_sk\n        , risk_score\n        , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom cte", "relation_name": "tuva.data_quality.mart_review__patient_risk", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:30.009443Z", "completed_at": "2025-06-03T19:50:30.491141Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:30.491844Z", "completed_at": "2025-06-03T19:50:30.491848Z"}], "thread_id": "Thread-4", "execution_time": 0.48347020149230957, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.fhir_preprocessing__explanation_of_benefit", "compiled": true, "compiled_code": "\nwith unioned as (\n\n    \n\n        (\n            select\n                cast('tuva.fhir_preprocessing._int_medical_claim_eob' as TEXT) as _dbt_source_relation,\n\n                \n                    cast(\"PATIENT_INTERNAL_ID\" as character varying(16777216)) as \"PATIENT_INTERNAL_ID\" ,\n                    cast(\"RESOURCE_INTERNAL_ID\" as character varying(16777216)) as \"RESOURCE_INTERNAL_ID\" ,\n                    cast(\"UNIQUE_CLAIM_ID\" as character varying(16777216)) as \"UNIQUE_CLAIM_ID\" ,\n                    cast(\"EOB_TYPE_CODE\" as character varying(16777216)) as \"EOB_TYPE_CODE\" ,\n                    cast(\"EOB_SUBTYPE_CODE\" as character varying(16777216)) as \"EOB_SUBTYPE_CODE\" ,\n                    cast(\"EOB_BILLABLE_PERIOD_START\" as DATE) as \"EOB_BILLABLE_PERIOD_START\" ,\n                    cast(\"EOB_BILLABLE_PERIOD_END\" as DATE) as \"EOB_BILLABLE_PERIOD_END\" ,\n                    cast(\"EOB_CREATED\" as DATE) as \"EOB_CREATED\" ,\n                    cast(\"ORGANIZATION_NAME\" as character varying(16777216)) as \"ORGANIZATION_NAME\" ,\n                    cast(\"PRACTITIONER_INTERNAL_ID\" as character varying(16777216)) as \"PRACTITIONER_INTERNAL_ID\" ,\n                    cast(\"PRACTITIONER_NAME_TEXT\" as character varying(16777216)) as \"PRACTITIONER_NAME_TEXT\" ,\n                    cast(\"COVERAGE_INTERNAL_ID\" as character varying(16777216)) as \"COVERAGE_INTERNAL_ID\" ,\n                    cast(\"EOB_DIAGNOSIS_LIST\" as character varying(16777216)) as \"EOB_DIAGNOSIS_LIST\" ,\n                    cast(\"EOB_PROCEDURE_LIST\" as character varying(16777216)) as \"EOB_PROCEDURE_LIST\" ,\n                    cast(\"EOB_SUPPORTING_INFO_LIST\" as character varying(16777216)) as \"EOB_SUPPORTING_INFO_LIST\" ,\n                    cast(\"EOB_ITEM_LIST\" as character varying(16777216)) as \"EOB_ITEM_LIST\" ,\n                    cast(\"EOB_TOTAL_LIST\" as character varying(16777216)) as \"EOB_TOTAL_LIST\" ,\n                    cast(\"DATA_SOURCE\" as character varying(16777216)) as \"DATA_SOURCE\" \n\n            from tuva.fhir_preprocessing._int_medical_claim_eob\n\n            \n        )\n\n        union all\n        \n\n        (\n            select\n                cast('tuva.fhir_preprocessing._int_pharmacy_claim_eob' as TEXT) as _dbt_source_relation,\n\n                \n                    cast(\"PATIENT_INTERNAL_ID\" as character varying(16777216)) as \"PATIENT_INTERNAL_ID\" ,\n                    cast(\"RESOURCE_INTERNAL_ID\" as character varying(16777216)) as \"RESOURCE_INTERNAL_ID\" ,\n                    cast(\"UNIQUE_CLAIM_ID\" as character varying(16777216)) as \"UNIQUE_CLAIM_ID\" ,\n                    cast(\"EOB_TYPE_CODE\" as character varying(16777216)) as \"EOB_TYPE_CODE\" ,\n                    cast(\"EOB_SUBTYPE_CODE\" as character varying(16777216)) as \"EOB_SUBTYPE_CODE\" ,\n                    cast(\"EOB_BILLABLE_PERIOD_START\" as DATE) as \"EOB_BILLABLE_PERIOD_START\" ,\n                    cast(\"EOB_BILLABLE_PERIOD_END\" as DATE) as \"EOB_BILLABLE_PERIOD_END\" ,\n                    cast(\"EOB_CREATED\" as DATE) as \"EOB_CREATED\" ,\n                    cast(\"ORGANIZATION_NAME\" as character varying(16777216)) as \"ORGANIZATION_NAME\" ,\n                    cast(\"PRACTITIONER_INTERNAL_ID\" as character varying(16777216)) as \"PRACTITIONER_INTERNAL_ID\" ,\n                    cast(\"PRACTITIONER_NAME_TEXT\" as character varying(16777216)) as \"PRACTITIONER_NAME_TEXT\" ,\n                    cast(\"COVERAGE_INTERNAL_ID\" as character varying(16777216)) as \"COVERAGE_INTERNAL_ID\" ,\n                    cast(\"EOB_DIAGNOSIS_LIST\" as character varying(16777216)) as \"EOB_DIAGNOSIS_LIST\" ,\n                    cast(\"EOB_PROCEDURE_LIST\" as character varying(16777216)) as \"EOB_PROCEDURE_LIST\" ,\n                    cast(\"EOB_SUPPORTING_INFO_LIST\" as character varying(16777216)) as \"EOB_SUPPORTING_INFO_LIST\" ,\n                    cast(\"EOB_ITEM_LIST\" as character varying(16777216)) as \"EOB_ITEM_LIST\" ,\n                    cast(\"EOB_TOTAL_LIST\" as character varying(16777216)) as \"EOB_TOTAL_LIST\" ,\n                    cast(\"DATA_SOURCE\" as character varying(16777216)) as \"DATA_SOURCE\" \n\n            from tuva.fhir_preprocessing._int_pharmacy_claim_eob\n\n            \n        )\n\n        \n\n)\n\nselect\n      cast(patient_internal_id as TEXT ) as patient_internal_id\n    , cast(resource_internal_id as TEXT ) as resource_internal_id\n    , cast(unique_claim_id as TEXT ) as unique_claim_id\n    , cast(eob_type_code as TEXT ) as eob_type_code\n    , cast(eob_subtype_code as TEXT ) as eob_subtype_code\n    , cast(eob_billable_period_start as date) as eob_billable_period_start\n    , cast(eob_billable_period_end as date) as eob_billable_period_end\n    , cast(eob_created as date) as eob_created\n    , cast(organization_name as TEXT ) as organization_name\n    , cast(practitioner_internal_id as TEXT ) as practitioner_internal_id\n    , cast(practitioner_name_text as TEXT ) as practitioner_name_text\n    , cast(coverage_internal_id as TEXT ) as coverage_internal_id\n    , cast(eob_diagnosis_list as TEXT ) as eob_diagnosis_list\n    , cast(eob_procedure_list as TEXT ) as eob_procedure_list\n    , cast(eob_supporting_info_list as TEXT ) as eob_supporting_info_list\n    , cast(eob_item_list as TEXT ) as eob_item_list\n    , cast(eob_total_list as TEXT ) as eob_total_list\n    , cast(data_source as TEXT ) as data_source\n    , cast('2025-06-03 19:49:40.396647+00:00' as timestamp) as tuva_last_run\n    , cast('0.14.13' as TEXT ) as tuva_package_version\nfrom unioned", "relation_name": "tuva.fhir_preprocessing.explanation_of_benefit", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:30.492214Z", "completed_at": "2025-06-03T19:50:30.504250Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:30.509280Z", "completed_at": "2025-06-03T19:50:30.509287Z"}], "thread_id": "Thread-1", "execution_time": 0.019112110137939453, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.mart_review__patient_risk_scores", "compiled": true, "compiled_code": "\n\n\nselect *\nfrom tuva.cms_hcc.patient_risk_scores as p", "relation_name": "tuva.data_quality.mart_review__patient_risk_scores", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:30.498249Z", "completed_at": "2025-06-03T19:50:30.509732Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:30.510050Z", "completed_at": "2025-06-03T19:50:30.510054Z"}], "thread_id": "Thread-2", "execution_time": 0.013366222381591797, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.unique_cms_hcc__patient_risk_scores_person_id.01eafaa958", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    person_id as unique_field,\n    count(*) as n_records\n\nfrom tuva.cms_hcc.patient_risk_scores\nwhere person_id is not null\ngroup by person_id\nhaving count(*) > 1\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:30.504536Z", "completed_at": "2025-06-03T19:50:30.510492Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:30.510736Z", "completed_at": "2025-06-03T19:50:30.510740Z"}], "thread_id": "Thread-4", "execution_time": 0.012909173965454102, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_utils_unique_combination_of_columns_fhir_preprocessing__explanation_of_benefit_patient_internal_id__resource_internal_id.5c33dfa38f", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith validation_errors as (\n\n    select\n        patient_internal_id, resource_internal_id\n    from tuva.fhir_preprocessing.explanation_of_benefit\n    group by patient_internal_id, resource_internal_id\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:28.202741Z", "completed_at": "2025-06-03T19:50:32.546716Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:32.547120Z", "completed_at": "2025-06-03T19:50:32.547129Z"}], "thread_id": "Thread-3", "execution_time": 4.357294797897339, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.core__stg_claims_encounter", "compiled": true, "compiled_code": "\n\n-- *************************************************\n-- This dbt model creates the encounter table in core using dbt_utils.union_relations.\n-- *************************************************\n\n\n\nwith base as (\n  \n\n        (\n            select\n                cast('tuva.claims_preprocessing.acute_inpatient__encounter_grain' as TEXT) as _dbt_source_relation,\n\n                \n                    cast(\"ENCOUNTER_ID\" as NUMBER(18,0)) as \"ENCOUNTER_ID\" ,\n                    cast(\"ENCOUNTER_START_DATE\" as DATE) as \"ENCOUNTER_START_DATE\" ,\n                    cast(\"ENCOUNTER_END_DATE\" as DATE) as \"ENCOUNTER_END_DATE\" ,\n                    cast(\"PATIENT_DATA_SOURCE_ID\" as NUMBER(18,0)) as \"PATIENT_DATA_SOURCE_ID\" ,\n                    cast(\"ENCOUNTER_TYPE\" as character varying(29)) as \"ENCOUNTER_TYPE\" ,\n                    cast(\"ENCOUNTER_GROUP\" as character varying(12)) as \"ENCOUNTER_GROUP\" ,\n                    cast(\"ADMIT_AGE\" as NUMBER(15,6)) as \"ADMIT_AGE\" ,\n                    cast(\"GENDER\" as character varying(16777216)) as \"GENDER\" ,\n                    cast(\"RACE\" as character varying(16777216)) as \"RACE\" ,\n                    cast(\"PRIMARY_DIAGNOSIS_CODE_TYPE\" as character varying(16777216)) as \"PRIMARY_DIAGNOSIS_CODE_TYPE\" ,\n                    cast(\"PRIMARY_DIAGNOSIS_CODE\" as character varying(16777216)) as \"PRIMARY_DIAGNOSIS_CODE\" ,\n                    cast(\"PRIMARY_DIAGNOSIS_DESCRIPTION\" as character varying(256)) as \"PRIMARY_DIAGNOSIS_DESCRIPTION\" ,\n                    cast(\"FACILITY_ID\" as character varying(16777216)) as \"FACILITY_ID\" ,\n                    cast(\"OBSERVATION_FLAG\" as NUMBER(1,0)) as \"OBSERVATION_FLAG\" ,\n                    cast(\"ED_FLAG\" as NUMBER(1,0)) as \"ED_FLAG\" ,\n                    cast(\"LAB_FLAG\" as NUMBER(1,0)) as \"LAB_FLAG\" ,\n                    cast(\"DME_FLAG\" as NUMBER(1,0)) as \"DME_FLAG\" ,\n                    cast(\"AMBULANCE_FLAG\" as NUMBER(1,0)) as \"AMBULANCE_FLAG\" ,\n                    cast(\"PHARMACY_FLAG\" as NUMBER(1,0)) as \"PHARMACY_FLAG\" ,\n                    cast(\"FACILITY_NAME\" as character varying(95)) as \"FACILITY_NAME\" ,\n                    cast(\"FACILITY_TYPE\" as character varying(173)) as \"FACILITY_TYPE\" ,\n                    cast(\"DELIVERY_FLAG\" as NUMBER(1,0)) as \"DELIVERY_FLAG\" ,\n                    cast(\"DELIVERY_TYPE\" as character varying(16777216)) as \"DELIVERY_TYPE\" ,\n                    cast(\"NEWBORN_FLAG\" as NUMBER(1,0)) as \"NEWBORN_FLAG\" ,\n                    cast(\"NICU_FLAG\" as NUMBER(1,0)) as \"NICU_FLAG\" ,\n                    cast(\"DRG_CODE_TYPE\" as character varying(16777216)) as \"DRG_CODE_TYPE\" ,\n                    cast(\"DRG_CODE\" as character varying(16777216)) as \"DRG_CODE\" ,\n                    cast(\"DRG_DESCRIPTION\" as character varying(256)) as \"DRG_DESCRIPTION\" ,\n                    cast(\"MEDICAL_SURGICAL\" as character varying(256)) as \"MEDICAL_SURGICAL\" ,\n                    cast(\"ADMIT_SOURCE_CODE\" as character varying(16777216)) as \"ADMIT_SOURCE_CODE\" ,\n                    cast(\"ADMIT_SOURCE_DESCRIPTION\" as character varying(256)) as \"ADMIT_SOURCE_DESCRIPTION\" ,\n                    cast(\"ADMIT_TYPE_CODE\" as character varying(16777216)) as \"ADMIT_TYPE_CODE\" ,\n                    cast(\"ADMIT_TYPE_DESCRIPTION\" as character varying(256)) as \"ADMIT_TYPE_DESCRIPTION\" ,\n                    cast(\"DISCHARGE_DISPOSITION_CODE\" as character varying(16777216)) as \"DISCHARGE_DISPOSITION_CODE\" ,\n                    cast(\"DISCHARGE_DISPOSITION_DESCRIPTION\" as character varying(1024)) as \"DISCHARGE_DISPOSITION_DESCRIPTION\" ,\n                    cast(\"TOTAL_PAID_AMOUNT\" as NUMBER(38,6)) as \"TOTAL_PAID_AMOUNT\" ,\n                    cast(\"TOTAL_ALLOWED_AMOUNT\" as NUMBER(38,6)) as \"TOTAL_ALLOWED_AMOUNT\" ,\n                    cast(\"TOTAL_CHARGE_AMOUNT\" as NUMBER(38,6)) as \"TOTAL_CHARGE_AMOUNT\" ,\n                    cast(\"CLAIM_COUNT\" as NUMBER(18,0)) as \"CLAIM_COUNT\" ,\n                    cast(\"INST_CLAIM_COUNT\" as NUMBER(18,0)) as \"INST_CLAIM_COUNT\" ,\n                    cast(\"PROF_CLAIM_COUNT\" as NUMBER(18,0)) as \"PROF_CLAIM_COUNT\" ,\n                    cast(\"LENGTH_OF_STAY\" as NUMBER(9,0)) as \"LENGTH_OF_STAY\" ,\n                    cast(\"MORTALITY_FLAG\" as NUMBER(1,0)) as \"MORTALITY_FLAG\" ,\n                    cast(\"DATA_SOURCE\" as character varying(16777216)) as \"DATA_SOURCE\" ,\n                    cast(\"TUVA_LAST_RUN\" as character varying(32)) as \"TUVA_LAST_RUN\" ,\n                    cast(null as character varying(16777216)) as \"BILLING_ID\" ,\n                    cast(null as character varying(191)) as \"PROVIDER_NAME\" ,\n                    cast(null as character varying(173)) as \"PROVIDER_SPECIALTY\" ,\n                    cast(null as character varying(16777216)) as \"HCPCS_CODE\" ,\n                    cast(null as character varying(3)) as \"CCS_CATEGORY\" ,\n                    cast(null as character varying(256)) as \"CCS_CATEGORY_DESCRIPTION\" ,\n                    cast(null as character varying(16777216)) as \"PLACE_OF_SERVICE_CODE\" ,\n                    cast(null as character varying(256)) as \"PLACE_OF_SERVICE_DESCRIPTION\" \n\n            from tuva.claims_preprocessing.acute_inpatient__encounter_grain\n\n            \n        )\n\n        union all\n        \n\n        (\n            select\n                cast('tuva.claims_preprocessing.emergency_department__encounter_grain' as TEXT) as _dbt_source_relation,\n\n                \n                    cast(\"ENCOUNTER_ID\" as NUMBER(18,0)) as \"ENCOUNTER_ID\" ,\n                    cast(\"ENCOUNTER_START_DATE\" as DATE) as \"ENCOUNTER_START_DATE\" ,\n                    cast(\"ENCOUNTER_END_DATE\" as DATE) as \"ENCOUNTER_END_DATE\" ,\n                    cast(\"PATIENT_DATA_SOURCE_ID\" as NUMBER(18,0)) as \"PATIENT_DATA_SOURCE_ID\" ,\n                    cast(\"ENCOUNTER_TYPE\" as character varying(29)) as \"ENCOUNTER_TYPE\" ,\n                    cast(\"ENCOUNTER_GROUP\" as character varying(12)) as \"ENCOUNTER_GROUP\" ,\n                    cast(\"ADMIT_AGE\" as NUMBER(15,6)) as \"ADMIT_AGE\" ,\n                    cast(\"GENDER\" as character varying(16777216)) as \"GENDER\" ,\n                    cast(\"RACE\" as character varying(16777216)) as \"RACE\" ,\n                    cast(\"PRIMARY_DIAGNOSIS_CODE_TYPE\" as character varying(16777216)) as \"PRIMARY_DIAGNOSIS_CODE_TYPE\" ,\n                    cast(\"PRIMARY_DIAGNOSIS_CODE\" as character varying(16777216)) as \"PRIMARY_DIAGNOSIS_CODE\" ,\n                    cast(\"PRIMARY_DIAGNOSIS_DESCRIPTION\" as character varying(256)) as \"PRIMARY_DIAGNOSIS_DESCRIPTION\" ,\n                    cast(\"FACILITY_ID\" as character varying(16777216)) as \"FACILITY_ID\" ,\n                    cast(\"OBSERVATION_FLAG\" as NUMBER(1,0)) as \"OBSERVATION_FLAG\" ,\n                    cast(null as NUMBER(1,0)) as \"ED_FLAG\" ,\n                    cast(\"LAB_FLAG\" as NUMBER(1,0)) as \"LAB_FLAG\" ,\n                    cast(\"DME_FLAG\" as NUMBER(1,0)) as \"DME_FLAG\" ,\n                    cast(\"AMBULANCE_FLAG\" as NUMBER(1,0)) as \"AMBULANCE_FLAG\" ,\n                    cast(\"PHARMACY_FLAG\" as NUMBER(1,0)) as \"PHARMACY_FLAG\" ,\n                    cast(\"FACILITY_NAME\" as character varying(95)) as \"FACILITY_NAME\" ,\n                    cast(\"FACILITY_TYPE\" as character varying(173)) as \"FACILITY_TYPE\" ,\n                    cast(null as NUMBER(1,0)) as \"DELIVERY_FLAG\" ,\n                    cast(null as character varying(16777216)) as \"DELIVERY_TYPE\" ,\n                    cast(null as NUMBER(1,0)) as \"NEWBORN_FLAG\" ,\n                    cast(null as NUMBER(1,0)) as \"NICU_FLAG\" ,\n                    cast(\"DRG_CODE_TYPE\" as character varying(16777216)) as \"DRG_CODE_TYPE\" ,\n                    cast(\"DRG_CODE\" as character varying(16777216)) as \"DRG_CODE\" ,\n                    cast(\"DRG_DESCRIPTION\" as character varying(256)) as \"DRG_DESCRIPTION\" ,\n                    cast(\"MEDICAL_SURGICAL\" as character varying(256)) as \"MEDICAL_SURGICAL\" ,\n                    cast(\"ADMIT_SOURCE_CODE\" as character varying(16777216)) as \"ADMIT_SOURCE_CODE\" ,\n                    cast(\"ADMIT_SOURCE_DESCRIPTION\" as character varying(256)) as \"ADMIT_SOURCE_DESCRIPTION\" ,\n                    cast(\"ADMIT_TYPE_CODE\" as character varying(16777216)) as \"ADMIT_TYPE_CODE\" ,\n                    cast(\"ADMIT_TYPE_DESCRIPTION\" as character varying(256)) as \"ADMIT_TYPE_DESCRIPTION\" ,\n                    cast(\"DISCHARGE_DISPOSITION_CODE\" as character varying(16777216)) as \"DISCHARGE_DISPOSITION_CODE\" ,\n                    cast(\"DISCHARGE_DISPOSITION_DESCRIPTION\" as character varying(1024)) as \"DISCHARGE_DISPOSITION_DESCRIPTION\" ,\n                    cast(\"TOTAL_PAID_AMOUNT\" as NUMBER(38,6)) as \"TOTAL_PAID_AMOUNT\" ,\n                    cast(\"TOTAL_ALLOWED_AMOUNT\" as NUMBER(38,6)) as \"TOTAL_ALLOWED_AMOUNT\" ,\n                    cast(\"TOTAL_CHARGE_AMOUNT\" as NUMBER(38,6)) as \"TOTAL_CHARGE_AMOUNT\" ,\n                    cast(\"CLAIM_COUNT\" as NUMBER(18,0)) as \"CLAIM_COUNT\" ,\n                    cast(\"INST_CLAIM_COUNT\" as NUMBER(18,0)) as \"INST_CLAIM_COUNT\" ,\n                    cast(\"PROF_CLAIM_COUNT\" as NUMBER(18,0)) as \"PROF_CLAIM_COUNT\" ,\n                    cast(\"LENGTH_OF_STAY\" as NUMBER(9,0)) as \"LENGTH_OF_STAY\" ,\n                    cast(\"MORTALITY_FLAG\" as NUMBER(1,0)) as \"MORTALITY_FLAG\" ,\n                    cast(\"DATA_SOURCE\" as character varying(16777216)) as \"DATA_SOURCE\" ,\n                    cast(\"TUVA_LAST_RUN\" as character varying(32)) as \"TUVA_LAST_RUN\" ,\n                    cast(null as character varying(16777216)) as \"BILLING_ID\" ,\n                    cast(null as character varying(191)) as \"PROVIDER_NAME\" ,\n                    cast(null as character varying(173)) as \"PROVIDER_SPECIALTY\" ,\n                    cast(null as character varying(16777216)) as \"HCPCS_CODE\" ,\n                    cast(null as character varying(3)) as \"CCS_CATEGORY\" ,\n                    cast(null as character varying(256)) as \"CCS_CATEGORY_DESCRIPTION\" ,\n                    cast(null as character varying(16777216)) as \"PLACE_OF_SERVICE_CODE\" ,\n                    cast(null as character varying(256)) as \"PLACE_OF_SERVICE_DESCRIPTION\" \n\n            from tuva.claims_preprocessing.emergency_department__encounter_grain\n\n            \n        )\n\n        union all\n        \n\n        (\n            select\n                cast('tuva.claims_preprocessing.inpatient_hospice__encounter_grain' as TEXT) as _dbt_source_relation,\n\n                \n                    cast(\"ENCOUNTER_ID\" as NUMBER(18,0)) as \"ENCOUNTER_ID\" ,\n                    cast(\"ENCOUNTER_START_DATE\" as DATE) as \"ENCOUNTER_START_DATE\" ,\n                    cast(\"ENCOUNTER_END_DATE\" as DATE) as \"ENCOUNTER_END_DATE\" ,\n                    cast(\"PATIENT_DATA_SOURCE_ID\" as NUMBER(18,0)) as \"PATIENT_DATA_SOURCE_ID\" ,\n                    cast(\"ENCOUNTER_TYPE\" as character varying(29)) as \"ENCOUNTER_TYPE\" ,\n                    cast(\"ENCOUNTER_GROUP\" as character varying(12)) as \"ENCOUNTER_GROUP\" ,\n                    cast(\"ADMIT_AGE\" as NUMBER(15,6)) as \"ADMIT_AGE\" ,\n                    cast(\"GENDER\" as character varying(16777216)) as \"GENDER\" ,\n                    cast(\"RACE\" as character varying(16777216)) as \"RACE\" ,\n                    cast(\"PRIMARY_DIAGNOSIS_CODE_TYPE\" as character varying(16777216)) as \"PRIMARY_DIAGNOSIS_CODE_TYPE\" ,\n                    cast(\"PRIMARY_DIAGNOSIS_CODE\" as character varying(16777216)) as \"PRIMARY_DIAGNOSIS_CODE\" ,\n                    cast(\"PRIMARY_DIAGNOSIS_DESCRIPTION\" as character varying(256)) as \"PRIMARY_DIAGNOSIS_DESCRIPTION\" ,\n                    cast(\"FACILITY_ID\" as character varying(16777216)) as \"FACILITY_ID\" ,\n                    cast(\"OBSERVATION_FLAG\" as NUMBER(1,0)) as \"OBSERVATION_FLAG\" ,\n                    cast(\"ED_FLAG\" as NUMBER(1,0)) as \"ED_FLAG\" ,\n                    cast(\"LAB_FLAG\" as NUMBER(1,0)) as \"LAB_FLAG\" ,\n                    cast(\"DME_FLAG\" as NUMBER(1,0)) as \"DME_FLAG\" ,\n                    cast(\"AMBULANCE_FLAG\" as NUMBER(1,0)) as \"AMBULANCE_FLAG\" ,\n                    cast(\"PHARMACY_FLAG\" as NUMBER(1,0)) as \"PHARMACY_FLAG\" ,\n                    cast(\"FACILITY_NAME\" as character varying(95)) as \"FACILITY_NAME\" ,\n                    cast(\"FACILITY_TYPE\" as character varying(173)) as \"FACILITY_TYPE\" ,\n                    cast(null as NUMBER(1,0)) as \"DELIVERY_FLAG\" ,\n                    cast(null as character varying(16777216)) as \"DELIVERY_TYPE\" ,\n                    cast(null as NUMBER(1,0)) as \"NEWBORN_FLAG\" ,\n                    cast(null as NUMBER(1,0)) as \"NICU_FLAG\" ,\n                    cast(\"DRG_CODE_TYPE\" as character varying(16777216)) as \"DRG_CODE_TYPE\" ,\n                    cast(\"DRG_CODE\" as character varying(16777216)) as \"DRG_CODE\" ,\n                    cast(\"DRG_DESCRIPTION\" as character varying(256)) as \"DRG_DESCRIPTION\" ,\n                    cast(\"MEDICAL_SURGICAL\" as character varying(256)) as \"MEDICAL_SURGICAL\" ,\n                    cast(\"ADMIT_SOURCE_CODE\" as character varying(16777216)) as \"ADMIT_SOURCE_CODE\" ,\n                    cast(\"ADMIT_SOURCE_DESCRIPTION\" as character varying(256)) as \"ADMIT_SOURCE_DESCRIPTION\" ,\n                    cast(\"ADMIT_TYPE_CODE\" as character varying(16777216)) as \"ADMIT_TYPE_CODE\" ,\n                    cast(\"ADMIT_TYPE_DESCRIPTION\" as character varying(256)) as \"ADMIT_TYPE_DESCRIPTION\" ,\n                    cast(\"DISCHARGE_DISPOSITION_CODE\" as character varying(16777216)) as \"DISCHARGE_DISPOSITION_CODE\" ,\n                    cast(\"DISCHARGE_DISPOSITION_DESCRIPTION\" as character varying(1024)) as \"DISCHARGE_DISPOSITION_DESCRIPTION\" ,\n                    cast(\"TOTAL_PAID_AMOUNT\" as NUMBER(38,6)) as \"TOTAL_PAID_AMOUNT\" ,\n                    cast(\"TOTAL_ALLOWED_AMOUNT\" as NUMBER(38,6)) as \"TOTAL_ALLOWED_AMOUNT\" ,\n                    cast(\"TOTAL_CHARGE_AMOUNT\" as NUMBER(38,6)) as \"TOTAL_CHARGE_AMOUNT\" ,\n                    cast(\"CLAIM_COUNT\" as NUMBER(18,0)) as \"CLAIM_COUNT\" ,\n                    cast(\"INST_CLAIM_COUNT\" as NUMBER(18,0)) as \"INST_CLAIM_COUNT\" ,\n                    cast(\"PROF_CLAIM_COUNT\" as NUMBER(18,0)) as \"PROF_CLAIM_COUNT\" ,\n                    cast(\"LENGTH_OF_STAY\" as NUMBER(9,0)) as \"LENGTH_OF_STAY\" ,\n                    cast(\"MORTALITY_FLAG\" as NUMBER(1,0)) as \"MORTALITY_FLAG\" ,\n                    cast(\"DATA_SOURCE\" as character varying(16777216)) as \"DATA_SOURCE\" ,\n                    cast(\"TUVA_LAST_RUN\" as character varying(32)) as \"TUVA_LAST_RUN\" ,\n                    cast(null as character varying(16777216)) as \"BILLING_ID\" ,\n                    cast(null as character varying(191)) as \"PROVIDER_NAME\" ,\n                    cast(null as character varying(173)) as \"PROVIDER_SPECIALTY\" ,\n                    cast(null as character varying(16777216)) as \"HCPCS_CODE\" ,\n                    cast(null as character varying(3)) as \"CCS_CATEGORY\" ,\n                    cast(null as character varying(256)) as \"CCS_CATEGORY_DESCRIPTION\" ,\n                    cast(null as character varying(16777216)) as \"PLACE_OF_SERVICE_CODE\" ,\n                    cast(null as character varying(256)) as \"PLACE_OF_SERVICE_DESCRIPTION\" \n\n            from tuva.claims_preprocessing.inpatient_hospice__encounter_grain\n\n            \n        )\n\n        union all\n        \n\n        (\n            select\n                cast('tuva.claims_preprocessing.inpatient_psych__encounter_grain' as TEXT) as _dbt_source_relation,\n\n                \n                    cast(\"ENCOUNTER_ID\" as NUMBER(18,0)) as \"ENCOUNTER_ID\" ,\n                    cast(\"ENCOUNTER_START_DATE\" as DATE) as \"ENCOUNTER_START_DATE\" ,\n                    cast(\"ENCOUNTER_END_DATE\" as DATE) as \"ENCOUNTER_END_DATE\" ,\n                    cast(\"PATIENT_DATA_SOURCE_ID\" as NUMBER(18,0)) as \"PATIENT_DATA_SOURCE_ID\" ,\n                    cast(\"ENCOUNTER_TYPE\" as character varying(29)) as \"ENCOUNTER_TYPE\" ,\n                    cast(\"ENCOUNTER_GROUP\" as character varying(12)) as \"ENCOUNTER_GROUP\" ,\n                    cast(\"ADMIT_AGE\" as NUMBER(15,6)) as \"ADMIT_AGE\" ,\n                    cast(\"GENDER\" as character varying(16777216)) as \"GENDER\" ,\n                    cast(\"RACE\" as character varying(16777216)) as \"RACE\" ,\n                    cast(\"PRIMARY_DIAGNOSIS_CODE_TYPE\" as character varying(16777216)) as \"PRIMARY_DIAGNOSIS_CODE_TYPE\" ,\n                    cast(\"PRIMARY_DIAGNOSIS_CODE\" as character varying(16777216)) as \"PRIMARY_DIAGNOSIS_CODE\" ,\n                    cast(\"PRIMARY_DIAGNOSIS_DESCRIPTION\" as character varying(256)) as \"PRIMARY_DIAGNOSIS_DESCRIPTION\" ,\n                    cast(\"FACILITY_ID\" as character varying(16777216)) as \"FACILITY_ID\" ,\n                    cast(\"OBSERVATION_FLAG\" as NUMBER(1,0)) as \"OBSERVATION_FLAG\" ,\n                    cast(\"ED_FLAG\" as NUMBER(1,0)) as \"ED_FLAG\" ,\n                    cast(\"LAB_FLAG\" as NUMBER(1,0)) as \"LAB_FLAG\" ,\n                    cast(\"DME_FLAG\" as NUMBER(1,0)) as \"DME_FLAG\" ,\n                    cast(\"AMBULANCE_FLAG\" as NUMBER(1,0)) as \"AMBULANCE_FLAG\" ,\n                    cast(\"PHARMACY_FLAG\" as NUMBER(1,0)) as \"PHARMACY_FLAG\" ,\n                    cast(\"FACILITY_NAME\" as character varying(95)) as \"FACILITY_NAME\" ,\n                    cast(\"FACILITY_TYPE\" as character varying(173)) as \"FACILITY_TYPE\" ,\n                    cast(null as NUMBER(1,0)) as \"DELIVERY_FLAG\" ,\n                    cast(null as character varying(16777216)) as \"DELIVERY_TYPE\" ,\n                    cast(null as NUMBER(1,0)) as \"NEWBORN_FLAG\" ,\n                    cast(null as NUMBER(1,0)) as \"NICU_FLAG\" ,\n                    cast(\"DRG_CODE_TYPE\" as character varying(16777216)) as \"DRG_CODE_TYPE\" ,\n                    cast(\"DRG_CODE\" as character varying(16777216)) as \"DRG_CODE\" ,\n                    cast(\"DRG_DESCRIPTION\" as character varying(256)) as \"DRG_DESCRIPTION\" ,\n                    cast(\"MEDICAL_SURGICAL\" as character varying(256)) as \"MEDICAL_SURGICAL\" ,\n                    cast(\"ADMIT_SOURCE_CODE\" as character varying(16777216)) as \"ADMIT_SOURCE_CODE\" ,\n                    cast(\"ADMIT_SOURCE_DESCRIPTION\" as character varying(256)) as \"ADMIT_SOURCE_DESCRIPTION\" ,\n                    cast(\"ADMIT_TYPE_CODE\" as character varying(16777216)) as \"ADMIT_TYPE_CODE\" ,\n                    cast(\"ADMIT_TYPE_DESCRIPTION\" as character varying(256)) as \"ADMIT_TYPE_DESCRIPTION\" ,\n                    cast(\"DISCHARGE_DISPOSITION_CODE\" as character varying(16777216)) as \"DISCHARGE_DISPOSITION_CODE\" ,\n                    cast(\"DISCHARGE_DISPOSITION_DESCRIPTION\" as character varying(1024)) as \"DISCHARGE_DISPOSITION_DESCRIPTION\" ,\n                    cast(\"TOTAL_PAID_AMOUNT\" as NUMBER(38,6)) as \"TOTAL_PAID_AMOUNT\" ,\n                    cast(\"TOTAL_ALLOWED_AMOUNT\" as NUMBER(38,6)) as \"TOTAL_ALLOWED_AMOUNT\" ,\n                    cast(\"TOTAL_CHARGE_AMOUNT\" as NUMBER(38,6)) as \"TOTAL_CHARGE_AMOUNT\" ,\n                    cast(\"CLAIM_COUNT\" as NUMBER(18,0)) as \"CLAIM_COUNT\" ,\n                    cast(\"INST_CLAIM_COUNT\" as NUMBER(18,0)) as \"INST_CLAIM_COUNT\" ,\n                    cast(\"PROF_CLAIM_COUNT\" as NUMBER(18,0)) as \"PROF_CLAIM_COUNT\" ,\n                    cast(\"LENGTH_OF_STAY\" as NUMBER(9,0)) as \"LENGTH_OF_STAY\" ,\n                    cast(\"MORTALITY_FLAG\" as NUMBER(1,0)) as \"MORTALITY_FLAG\" ,\n                    cast(\"DATA_SOURCE\" as character varying(16777216)) as \"DATA_SOURCE\" ,\n                    cast(\"TUVA_LAST_RUN\" as character varying(32)) as \"TUVA_LAST_RUN\" ,\n                    cast(null as character varying(16777216)) as \"BILLING_ID\" ,\n                    cast(null as character varying(191)) as \"PROVIDER_NAME\" ,\n                    cast(null as character varying(173)) as \"PROVIDER_SPECIALTY\" ,\n                    cast(null as character varying(16777216)) as \"HCPCS_CODE\" ,\n                    cast(null as character varying(3)) as \"CCS_CATEGORY\" ,\n                    cast(null as character varying(256)) as \"CCS_CATEGORY_DESCRIPTION\" ,\n                    cast(null as character varying(16777216)) as \"PLACE_OF_SERVICE_CODE\" ,\n                    cast(null as character varying(256)) as \"PLACE_OF_SERVICE_DESCRIPTION\" \n\n            from tuva.claims_preprocessing.inpatient_psych__encounter_grain\n\n            \n        )\n\n        union all\n        \n\n        (\n            select\n                cast('tuva.claims_preprocessing.inpatient_rehab__encounter_grain' as TEXT) as _dbt_source_relation,\n\n                \n                    cast(\"ENCOUNTER_ID\" as NUMBER(18,0)) as \"ENCOUNTER_ID\" ,\n                    cast(\"ENCOUNTER_START_DATE\" as DATE) as \"ENCOUNTER_START_DATE\" ,\n                    cast(\"ENCOUNTER_END_DATE\" as DATE) as \"ENCOUNTER_END_DATE\" ,\n                    cast(\"PATIENT_DATA_SOURCE_ID\" as NUMBER(18,0)) as \"PATIENT_DATA_SOURCE_ID\" ,\n                    cast(\"ENCOUNTER_TYPE\" as character varying(29)) as \"ENCOUNTER_TYPE\" ,\n                    cast(\"ENCOUNTER_GROUP\" as character varying(12)) as \"ENCOUNTER_GROUP\" ,\n                    cast(\"ADMIT_AGE\" as NUMBER(15,6)) as \"ADMIT_AGE\" ,\n                    cast(\"GENDER\" as character varying(16777216)) as \"GENDER\" ,\n                    cast(\"RACE\" as character varying(16777216)) as \"RACE\" ,\n                    cast(\"PRIMARY_DIAGNOSIS_CODE_TYPE\" as character varying(16777216)) as \"PRIMARY_DIAGNOSIS_CODE_TYPE\" ,\n                    cast(\"PRIMARY_DIAGNOSIS_CODE\" as character varying(16777216)) as \"PRIMARY_DIAGNOSIS_CODE\" ,\n                    cast(\"PRIMARY_DIAGNOSIS_DESCRIPTION\" as character varying(256)) as \"PRIMARY_DIAGNOSIS_DESCRIPTION\" ,\n                    cast(\"FACILITY_ID\" as character varying(16777216)) as \"FACILITY_ID\" ,\n                    cast(\"OBSERVATION_FLAG\" as NUMBER(1,0)) as \"OBSERVATION_FLAG\" ,\n                    cast(\"ED_FLAG\" as NUMBER(1,0)) as \"ED_FLAG\" ,\n                    cast(\"LAB_FLAG\" as NUMBER(1,0)) as \"LAB_FLAG\" ,\n                    cast(\"DME_FLAG\" as NUMBER(1,0)) as \"DME_FLAG\" ,\n                    cast(\"AMBULANCE_FLAG\" as NUMBER(1,0)) as \"AMBULANCE_FLAG\" ,\n                    cast(\"PHARMACY_FLAG\" as NUMBER(1,0)) as \"PHARMACY_FLAG\" ,\n                    cast(\"FACILITY_NAME\" as character varying(95)) as \"FACILITY_NAME\" ,\n                    cast(\"FACILITY_TYPE\" as character varying(173)) as \"FACILITY_TYPE\" ,\n                    cast(null as NUMBER(1,0)) as \"DELIVERY_FLAG\" ,\n                    cast(null as character varying(16777216)) as \"DELIVERY_TYPE\" ,\n                    cast(null as NUMBER(1,0)) as \"NEWBORN_FLAG\" ,\n                    cast(null as NUMBER(1,0)) as \"NICU_FLAG\" ,\n                    cast(\"DRG_CODE_TYPE\" as character varying(16777216)) as \"DRG_CODE_TYPE\" ,\n                    cast(\"DRG_CODE\" as character varying(16777216)) as \"DRG_CODE\" ,\n                    cast(\"DRG_DESCRIPTION\" as character varying(256)) as \"DRG_DESCRIPTION\" ,\n                    cast(\"MEDICAL_SURGICAL\" as character varying(256)) as \"MEDICAL_SURGICAL\" ,\n                    cast(\"ADMIT_SOURCE_CODE\" as character varying(16777216)) as \"ADMIT_SOURCE_CODE\" ,\n                    cast(\"ADMIT_SOURCE_DESCRIPTION\" as character varying(256)) as \"ADMIT_SOURCE_DESCRIPTION\" ,\n                    cast(\"ADMIT_TYPE_CODE\" as character varying(16777216)) as \"ADMIT_TYPE_CODE\" ,\n                    cast(\"ADMIT_TYPE_DESCRIPTION\" as character varying(256)) as \"ADMIT_TYPE_DESCRIPTION\" ,\n                    cast(\"DISCHARGE_DISPOSITION_CODE\" as character varying(16777216)) as \"DISCHARGE_DISPOSITION_CODE\" ,\n                    cast(\"DISCHARGE_DISPOSITION_DESCRIPTION\" as character varying(1024)) as \"DISCHARGE_DISPOSITION_DESCRIPTION\" ,\n                    cast(\"TOTAL_PAID_AMOUNT\" as NUMBER(38,6)) as \"TOTAL_PAID_AMOUNT\" ,\n                    cast(\"TOTAL_ALLOWED_AMOUNT\" as NUMBER(38,6)) as \"TOTAL_ALLOWED_AMOUNT\" ,\n                    cast(\"TOTAL_CHARGE_AMOUNT\" as NUMBER(38,6)) as \"TOTAL_CHARGE_AMOUNT\" ,\n                    cast(\"CLAIM_COUNT\" as NUMBER(18,0)) as \"CLAIM_COUNT\" ,\n                    cast(\"INST_CLAIM_COUNT\" as NUMBER(18,0)) as \"INST_CLAIM_COUNT\" ,\n                    cast(\"PROF_CLAIM_COUNT\" as NUMBER(18,0)) as \"PROF_CLAIM_COUNT\" ,\n                    cast(\"LENGTH_OF_STAY\" as NUMBER(9,0)) as \"LENGTH_OF_STAY\" ,\n                    cast(\"MORTALITY_FLAG\" as NUMBER(1,0)) as \"MORTALITY_FLAG\" ,\n                    cast(\"DATA_SOURCE\" as character varying(16777216)) as \"DATA_SOURCE\" ,\n                    cast(\"TUVA_LAST_RUN\" as character varying(32)) as \"TUVA_LAST_RUN\" ,\n                    cast(null as character varying(16777216)) as \"BILLING_ID\" ,\n                    cast(null as character varying(191)) as \"PROVIDER_NAME\" ,\n                    cast(null as character varying(173)) as \"PROVIDER_SPECIALTY\" ,\n                    cast(null as character varying(16777216)) as \"HCPCS_CODE\" ,\n                    cast(null as character varying(3)) as \"CCS_CATEGORY\" ,\n                    cast(null as character varying(256)) as \"CCS_CATEGORY_DESCRIPTION\" ,\n                    cast(null as character varying(16777216)) as \"PLACE_OF_SERVICE_CODE\" ,\n                    cast(null as character varying(256)) as \"PLACE_OF_SERVICE_DESCRIPTION\" \n\n            from tuva.claims_preprocessing.inpatient_rehab__encounter_grain\n\n            \n        )\n\n        union all\n        \n\n        (\n            select\n                cast('tuva.claims_preprocessing.inpatient_snf__encounter_grain' as TEXT) as _dbt_source_relation,\n\n                \n                    cast(\"ENCOUNTER_ID\" as NUMBER(18,0)) as \"ENCOUNTER_ID\" ,\n                    cast(\"ENCOUNTER_START_DATE\" as DATE) as \"ENCOUNTER_START_DATE\" ,\n                    cast(\"ENCOUNTER_END_DATE\" as DATE) as \"ENCOUNTER_END_DATE\" ,\n                    cast(\"PATIENT_DATA_SOURCE_ID\" as NUMBER(18,0)) as \"PATIENT_DATA_SOURCE_ID\" ,\n                    cast(\"ENCOUNTER_TYPE\" as character varying(29)) as \"ENCOUNTER_TYPE\" ,\n                    cast(\"ENCOUNTER_GROUP\" as character varying(12)) as \"ENCOUNTER_GROUP\" ,\n                    cast(\"ADMIT_AGE\" as NUMBER(15,6)) as \"ADMIT_AGE\" ,\n                    cast(\"GENDER\" as character varying(16777216)) as \"GENDER\" ,\n                    cast(\"RACE\" as character varying(16777216)) as \"RACE\" ,\n                    cast(\"PRIMARY_DIAGNOSIS_CODE_TYPE\" as character varying(16777216)) as \"PRIMARY_DIAGNOSIS_CODE_TYPE\" ,\n                    cast(\"PRIMARY_DIAGNOSIS_CODE\" as character varying(16777216)) as \"PRIMARY_DIAGNOSIS_CODE\" ,\n                    cast(\"PRIMARY_DIAGNOSIS_DESCRIPTION\" as character varying(256)) as \"PRIMARY_DIAGNOSIS_DESCRIPTION\" ,\n                    cast(\"FACILITY_ID\" as character varying(16777216)) as \"FACILITY_ID\" ,\n                    cast(\"OBSERVATION_FLAG\" as NUMBER(1,0)) as \"OBSERVATION_FLAG\" ,\n                    cast(\"ED_FLAG\" as NUMBER(1,0)) as \"ED_FLAG\" ,\n                    cast(\"LAB_FLAG\" as NUMBER(1,0)) as \"LAB_FLAG\" ,\n                    cast(\"DME_FLAG\" as NUMBER(1,0)) as \"DME_FLAG\" ,\n                    cast(\"AMBULANCE_FLAG\" as NUMBER(1,0)) as \"AMBULANCE_FLAG\" ,\n                    cast(\"PHARMACY_FLAG\" as NUMBER(1,0)) as \"PHARMACY_FLAG\" ,\n                    cast(\"FACILITY_NAME\" as character varying(95)) as \"FACILITY_NAME\" ,\n                    cast(\"FACILITY_TYPE\" as character varying(173)) as \"FACILITY_TYPE\" ,\n                    cast(null as NUMBER(1,0)) as \"DELIVERY_FLAG\" ,\n                    cast(null as character varying(16777216)) as \"DELIVERY_TYPE\" ,\n                    cast(null as NUMBER(1,0)) as \"NEWBORN_FLAG\" ,\n                    cast(null as NUMBER(1,0)) as \"NICU_FLAG\" ,\n                    cast(\"DRG_CODE_TYPE\" as character varying(16777216)) as \"DRG_CODE_TYPE\" ,\n                    cast(\"DRG_CODE\" as character varying(16777216)) as \"DRG_CODE\" ,\n                    cast(\"DRG_DESCRIPTION\" as character varying(256)) as \"DRG_DESCRIPTION\" ,\n                    cast(\"MEDICAL_SURGICAL\" as character varying(256)) as \"MEDICAL_SURGICAL\" ,\n                    cast(\"ADMIT_SOURCE_CODE\" as character varying(16777216)) as \"ADMIT_SOURCE_CODE\" ,\n                    cast(\"ADMIT_SOURCE_DESCRIPTION\" as character varying(256)) as \"ADMIT_SOURCE_DESCRIPTION\" ,\n                    cast(\"ADMIT_TYPE_CODE\" as character varying(16777216)) as \"ADMIT_TYPE_CODE\" ,\n                    cast(\"ADMIT_TYPE_DESCRIPTION\" as character varying(256)) as \"ADMIT_TYPE_DESCRIPTION\" ,\n                    cast(\"DISCHARGE_DISPOSITION_CODE\" as character varying(16777216)) as \"DISCHARGE_DISPOSITION_CODE\" ,\n                    cast(\"DISCHARGE_DISPOSITION_DESCRIPTION\" as character varying(1024)) as \"DISCHARGE_DISPOSITION_DESCRIPTION\" ,\n                    cast(\"TOTAL_PAID_AMOUNT\" as NUMBER(38,6)) as \"TOTAL_PAID_AMOUNT\" ,\n                    cast(\"TOTAL_ALLOWED_AMOUNT\" as NUMBER(38,6)) as \"TOTAL_ALLOWED_AMOUNT\" ,\n                    cast(\"TOTAL_CHARGE_AMOUNT\" as NUMBER(38,6)) as \"TOTAL_CHARGE_AMOUNT\" ,\n                    cast(\"CLAIM_COUNT\" as NUMBER(18,0)) as \"CLAIM_COUNT\" ,\n                    cast(\"INST_CLAIM_COUNT\" as NUMBER(18,0)) as \"INST_CLAIM_COUNT\" ,\n                    cast(\"PROF_CLAIM_COUNT\" as NUMBER(18,0)) as \"PROF_CLAIM_COUNT\" ,\n                    cast(\"LENGTH_OF_STAY\" as NUMBER(9,0)) as \"LENGTH_OF_STAY\" ,\n                    cast(\"MORTALITY_FLAG\" as NUMBER(1,0)) as \"MORTALITY_FLAG\" ,\n                    cast(\"DATA_SOURCE\" as character varying(16777216)) as \"DATA_SOURCE\" ,\n                    cast(\"TUVA_LAST_RUN\" as character varying(32)) as \"TUVA_LAST_RUN\" ,\n                    cast(null as character varying(16777216)) as \"BILLING_ID\" ,\n                    cast(null as character varying(191)) as \"PROVIDER_NAME\" ,\n                    cast(null as character varying(173)) as \"PROVIDER_SPECIALTY\" ,\n                    cast(null as character varying(16777216)) as \"HCPCS_CODE\" ,\n                    cast(null as character varying(3)) as \"CCS_CATEGORY\" ,\n                    cast(null as character varying(256)) as \"CCS_CATEGORY_DESCRIPTION\" ,\n                    cast(null as character varying(16777216)) as \"PLACE_OF_SERVICE_CODE\" ,\n                    cast(null as character varying(256)) as \"PLACE_OF_SERVICE_DESCRIPTION\" \n\n            from tuva.claims_preprocessing.inpatient_snf__encounter_grain\n\n            \n        )\n\n        union all\n        \n\n        (\n            select\n                cast('tuva.claims_preprocessing.inpatient_substance_use__encounter_grain' as TEXT) as _dbt_source_relation,\n\n                \n                    cast(\"ENCOUNTER_ID\" as NUMBER(18,0)) as \"ENCOUNTER_ID\" ,\n                    cast(\"ENCOUNTER_START_DATE\" as DATE) as \"ENCOUNTER_START_DATE\" ,\n                    cast(\"ENCOUNTER_END_DATE\" as DATE) as \"ENCOUNTER_END_DATE\" ,\n                    cast(\"PATIENT_DATA_SOURCE_ID\" as NUMBER(18,0)) as \"PATIENT_DATA_SOURCE_ID\" ,\n                    cast(\"ENCOUNTER_TYPE\" as character varying(29)) as \"ENCOUNTER_TYPE\" ,\n                    cast(\"ENCOUNTER_GROUP\" as character varying(12)) as \"ENCOUNTER_GROUP\" ,\n                    cast(\"ADMIT_AGE\" as NUMBER(15,6)) as \"ADMIT_AGE\" ,\n                    cast(\"GENDER\" as character varying(16777216)) as \"GENDER\" ,\n                    cast(\"RACE\" as character varying(16777216)) as \"RACE\" ,\n                    cast(\"PRIMARY_DIAGNOSIS_CODE_TYPE\" as character varying(16777216)) as \"PRIMARY_DIAGNOSIS_CODE_TYPE\" ,\n                    cast(\"PRIMARY_DIAGNOSIS_CODE\" as character varying(16777216)) as \"PRIMARY_DIAGNOSIS_CODE\" ,\n                    cast(\"PRIMARY_DIAGNOSIS_DESCRIPTION\" as character varying(256)) as \"PRIMARY_DIAGNOSIS_DESCRIPTION\" ,\n                    cast(\"FACILITY_ID\" as character varying(16777216)) as \"FACILITY_ID\" ,\n                    cast(\"OBSERVATION_FLAG\" as NUMBER(1,0)) as \"OBSERVATION_FLAG\" ,\n                    cast(\"ED_FLAG\" as NUMBER(1,0)) as \"ED_FLAG\" ,\n                    cast(\"LAB_FLAG\" as NUMBER(1,0)) as \"LAB_FLAG\" ,\n                    cast(\"DME_FLAG\" as NUMBER(1,0)) as \"DME_FLAG\" ,\n                    cast(\"AMBULANCE_FLAG\" as NUMBER(1,0)) as \"AMBULANCE_FLAG\" ,\n                    cast(\"PHARMACY_FLAG\" as NUMBER(1,0)) as \"PHARMACY_FLAG\" ,\n                    cast(\"FACILITY_NAME\" as character varying(95)) as \"FACILITY_NAME\" ,\n                    cast(\"FACILITY_TYPE\" as character varying(173)) as \"FACILITY_TYPE\" ,\n                    cast(null as NUMBER(1,0)) as \"DELIVERY_FLAG\" ,\n                    cast(null as character varying(16777216)) as \"DELIVERY_TYPE\" ,\n                    cast(null as NUMBER(1,0)) as \"NEWBORN_FLAG\" ,\n                    cast(null as NUMBER(1,0)) as \"NICU_FLAG\" ,\n                    cast(\"DRG_CODE_TYPE\" as character varying(16777216)) as \"DRG_CODE_TYPE\" ,\n                    cast(\"DRG_CODE\" as character varying(16777216)) as \"DRG_CODE\" ,\n                    cast(\"DRG_DESCRIPTION\" as character varying(256)) as \"DRG_DESCRIPTION\" ,\n                    cast(\"MEDICAL_SURGICAL\" as character varying(256)) as \"MEDICAL_SURGICAL\" ,\n                    cast(\"ADMIT_SOURCE_CODE\" as character varying(16777216)) as \"ADMIT_SOURCE_CODE\" ,\n                    cast(\"ADMIT_SOURCE_DESCRIPTION\" as character varying(256)) as \"ADMIT_SOURCE_DESCRIPTION\" ,\n                    cast(\"ADMIT_TYPE_CODE\" as character varying(16777216)) as \"ADMIT_TYPE_CODE\" ,\n                    cast(\"ADMIT_TYPE_DESCRIPTION\" as character varying(256)) as \"ADMIT_TYPE_DESCRIPTION\" ,\n                    cast(\"DISCHARGE_DISPOSITION_CODE\" as character varying(16777216)) as \"DISCHARGE_DISPOSITION_CODE\" ,\n                    cast(\"DISCHARGE_DISPOSITION_DESCRIPTION\" as character varying(1024)) as \"DISCHARGE_DISPOSITION_DESCRIPTION\" ,\n                    cast(\"TOTAL_PAID_AMOUNT\" as NUMBER(38,6)) as \"TOTAL_PAID_AMOUNT\" ,\n                    cast(\"TOTAL_ALLOWED_AMOUNT\" as NUMBER(38,6)) as \"TOTAL_ALLOWED_AMOUNT\" ,\n                    cast(\"TOTAL_CHARGE_AMOUNT\" as NUMBER(38,6)) as \"TOTAL_CHARGE_AMOUNT\" ,\n                    cast(\"CLAIM_COUNT\" as NUMBER(18,0)) as \"CLAIM_COUNT\" ,\n                    cast(\"INST_CLAIM_COUNT\" as NUMBER(18,0)) as \"INST_CLAIM_COUNT\" ,\n                    cast(\"PROF_CLAIM_COUNT\" as NUMBER(18,0)) as \"PROF_CLAIM_COUNT\" ,\n                    cast(\"LENGTH_OF_STAY\" as NUMBER(9,0)) as \"LENGTH_OF_STAY\" ,\n                    cast(\"MORTALITY_FLAG\" as NUMBER(1,0)) as \"MORTALITY_FLAG\" ,\n                    cast(\"DATA_SOURCE\" as character varying(16777216)) as \"DATA_SOURCE\" ,\n                    cast(\"TUVA_LAST_RUN\" as character varying(32)) as \"TUVA_LAST_RUN\" ,\n                    cast(null as character varying(16777216)) as \"BILLING_ID\" ,\n                    cast(null as character varying(191)) as \"PROVIDER_NAME\" ,\n                    cast(null as character varying(173)) as \"PROVIDER_SPECIALTY\" ,\n                    cast(null as character varying(16777216)) as \"HCPCS_CODE\" ,\n                    cast(null as character varying(3)) as \"CCS_CATEGORY\" ,\n                    cast(null as character varying(256)) as \"CCS_CATEGORY_DESCRIPTION\" ,\n                    cast(null as character varying(16777216)) as \"PLACE_OF_SERVICE_CODE\" ,\n                    cast(null as character varying(256)) as \"PLACE_OF_SERVICE_DESCRIPTION\" \n\n            from tuva.claims_preprocessing.inpatient_substance_use__encounter_grain\n\n            \n        )\n\n        union all\n        \n\n        (\n            select\n                cast('tuva.claims_preprocessing.urgent_care__encounter_grain' as TEXT) as _dbt_source_relation,\n\n                \n                    cast(\"ENCOUNTER_ID\" as NUMBER(18,0)) as \"ENCOUNTER_ID\" ,\n                    cast(\"ENCOUNTER_START_DATE\" as DATE) as \"ENCOUNTER_START_DATE\" ,\n                    cast(null as DATE) as \"ENCOUNTER_END_DATE\" ,\n                    cast(\"PATIENT_DATA_SOURCE_ID\" as NUMBER(18,0)) as \"PATIENT_DATA_SOURCE_ID\" ,\n                    cast(\"ENCOUNTER_TYPE\" as character varying(29)) as \"ENCOUNTER_TYPE\" ,\n                    cast(\"ENCOUNTER_GROUP\" as character varying(12)) as \"ENCOUNTER_GROUP\" ,\n                    cast(\"ADMIT_AGE\" as NUMBER(15,6)) as \"ADMIT_AGE\" ,\n                    cast(\"GENDER\" as character varying(16777216)) as \"GENDER\" ,\n                    cast(\"RACE\" as character varying(16777216)) as \"RACE\" ,\n                    cast(\"PRIMARY_DIAGNOSIS_CODE_TYPE\" as character varying(16777216)) as \"PRIMARY_DIAGNOSIS_CODE_TYPE\" ,\n                    cast(\"PRIMARY_DIAGNOSIS_CODE\" as character varying(16777216)) as \"PRIMARY_DIAGNOSIS_CODE\" ,\n                    cast(\"PRIMARY_DIAGNOSIS_DESCRIPTION\" as character varying(256)) as \"PRIMARY_DIAGNOSIS_DESCRIPTION\" ,\n                    cast(\"FACILITY_ID\" as character varying(16777216)) as \"FACILITY_ID\" ,\n                    cast(\"OBSERVATION_FLAG\" as NUMBER(1,0)) as \"OBSERVATION_FLAG\" ,\n                    cast(null as NUMBER(1,0)) as \"ED_FLAG\" ,\n                    cast(\"LAB_FLAG\" as NUMBER(1,0)) as \"LAB_FLAG\" ,\n                    cast(\"DME_FLAG\" as NUMBER(1,0)) as \"DME_FLAG\" ,\n                    cast(\"AMBULANCE_FLAG\" as NUMBER(1,0)) as \"AMBULANCE_FLAG\" ,\n                    cast(\"PHARMACY_FLAG\" as NUMBER(1,0)) as \"PHARMACY_FLAG\" ,\n                    cast(\"FACILITY_NAME\" as character varying(95)) as \"FACILITY_NAME\" ,\n                    cast(\"FACILITY_TYPE\" as character varying(173)) as \"FACILITY_TYPE\" ,\n                    cast(null as NUMBER(1,0)) as \"DELIVERY_FLAG\" ,\n                    cast(null as character varying(16777216)) as \"DELIVERY_TYPE\" ,\n                    cast(null as NUMBER(1,0)) as \"NEWBORN_FLAG\" ,\n                    cast(null as NUMBER(1,0)) as \"NICU_FLAG\" ,\n                    cast(null as character varying(16777216)) as \"DRG_CODE_TYPE\" ,\n                    cast(null as character varying(16777216)) as \"DRG_CODE\" ,\n                    cast(null as character varying(256)) as \"DRG_DESCRIPTION\" ,\n                    cast(null as character varying(256)) as \"MEDICAL_SURGICAL\" ,\n                    cast(null as character varying(16777216)) as \"ADMIT_SOURCE_CODE\" ,\n                    cast(null as character varying(256)) as \"ADMIT_SOURCE_DESCRIPTION\" ,\n                    cast(null as character varying(16777216)) as \"ADMIT_TYPE_CODE\" ,\n                    cast(null as character varying(256)) as \"ADMIT_TYPE_DESCRIPTION\" ,\n                    cast(null as character varying(16777216)) as \"DISCHARGE_DISPOSITION_CODE\" ,\n                    cast(null as character varying(1024)) as \"DISCHARGE_DISPOSITION_DESCRIPTION\" ,\n                    cast(\"TOTAL_PAID_AMOUNT\" as NUMBER(38,6)) as \"TOTAL_PAID_AMOUNT\" ,\n                    cast(\"TOTAL_ALLOWED_AMOUNT\" as NUMBER(38,6)) as \"TOTAL_ALLOWED_AMOUNT\" ,\n                    cast(\"TOTAL_CHARGE_AMOUNT\" as NUMBER(38,6)) as \"TOTAL_CHARGE_AMOUNT\" ,\n                    cast(\"CLAIM_COUNT\" as NUMBER(18,0)) as \"CLAIM_COUNT\" ,\n                    cast(\"INST_CLAIM_COUNT\" as NUMBER(18,0)) as \"INST_CLAIM_COUNT\" ,\n                    cast(\"PROF_CLAIM_COUNT\" as NUMBER(18,0)) as \"PROF_CLAIM_COUNT\" ,\n                    cast(null as NUMBER(9,0)) as \"LENGTH_OF_STAY\" ,\n                    cast(null as NUMBER(1,0)) as \"MORTALITY_FLAG\" ,\n                    cast(\"DATA_SOURCE\" as character varying(16777216)) as \"DATA_SOURCE\" ,\n                    cast(\"TUVA_LAST_RUN\" as character varying(32)) as \"TUVA_LAST_RUN\" ,\n                    cast(null as character varying(16777216)) as \"BILLING_ID\" ,\n                    cast(null as character varying(191)) as \"PROVIDER_NAME\" ,\n                    cast(null as character varying(173)) as \"PROVIDER_SPECIALTY\" ,\n                    cast(null as character varying(16777216)) as \"HCPCS_CODE\" ,\n                    cast(null as character varying(3)) as \"CCS_CATEGORY\" ,\n                    cast(null as character varying(256)) as \"CCS_CATEGORY_DESCRIPTION\" ,\n                    cast(null as character varying(16777216)) as \"PLACE_OF_SERVICE_CODE\" ,\n                    cast(null as character varying(256)) as \"PLACE_OF_SERVICE_DESCRIPTION\" \n\n            from tuva.claims_preprocessing.urgent_care__encounter_grain\n\n            \n        )\n\n        union all\n        \n\n        (\n            select\n                cast('tuva.claims_preprocessing.office_visit__encounter_grain' as TEXT) as _dbt_source_relation,\n\n                \n                    cast(\"ENCOUNTER_ID\" as NUMBER(18,0)) as \"ENCOUNTER_ID\" ,\n                    cast(\"ENCOUNTER_START_DATE\" as DATE) as \"ENCOUNTER_START_DATE\" ,\n                    cast(null as DATE) as \"ENCOUNTER_END_DATE\" ,\n                    cast(\"PATIENT_DATA_SOURCE_ID\" as NUMBER(18,0)) as \"PATIENT_DATA_SOURCE_ID\" ,\n                    cast(\"ENCOUNTER_TYPE\" as character varying(29)) as \"ENCOUNTER_TYPE\" ,\n                    cast(\"ENCOUNTER_GROUP\" as character varying(12)) as \"ENCOUNTER_GROUP\" ,\n                    cast(\"ADMIT_AGE\" as NUMBER(15,6)) as \"ADMIT_AGE\" ,\n                    cast(\"GENDER\" as character varying(16777216)) as \"GENDER\" ,\n                    cast(\"RACE\" as character varying(16777216)) as \"RACE\" ,\n                    cast(\"PRIMARY_DIAGNOSIS_CODE_TYPE\" as character varying(16777216)) as \"PRIMARY_DIAGNOSIS_CODE_TYPE\" ,\n                    cast(\"PRIMARY_DIAGNOSIS_CODE\" as character varying(16777216)) as \"PRIMARY_DIAGNOSIS_CODE\" ,\n                    cast(\"PRIMARY_DIAGNOSIS_DESCRIPTION\" as character varying(256)) as \"PRIMARY_DIAGNOSIS_DESCRIPTION\" ,\n                    cast(\"FACILITY_ID\" as character varying(16777216)) as \"FACILITY_ID\" ,\n                    cast(null as NUMBER(1,0)) as \"OBSERVATION_FLAG\" ,\n                    cast(null as NUMBER(1,0)) as \"ED_FLAG\" ,\n                    cast(\"LAB_FLAG\" as NUMBER(1,0)) as \"LAB_FLAG\" ,\n                    cast(\"DME_FLAG\" as NUMBER(1,0)) as \"DME_FLAG\" ,\n                    cast(\"AMBULANCE_FLAG\" as NUMBER(1,0)) as \"AMBULANCE_FLAG\" ,\n                    cast(\"PHARMACY_FLAG\" as NUMBER(1,0)) as \"PHARMACY_FLAG\" ,\n                    cast(\"FACILITY_NAME\" as character varying(95)) as \"FACILITY_NAME\" ,\n                    cast(null as character varying(173)) as \"FACILITY_TYPE\" ,\n                    cast(null as NUMBER(1,0)) as \"DELIVERY_FLAG\" ,\n                    cast(null as character varying(16777216)) as \"DELIVERY_TYPE\" ,\n                    cast(null as NUMBER(1,0)) as \"NEWBORN_FLAG\" ,\n                    cast(null as NUMBER(1,0)) as \"NICU_FLAG\" ,\n                    cast(null as character varying(16777216)) as \"DRG_CODE_TYPE\" ,\n                    cast(null as character varying(16777216)) as \"DRG_CODE\" ,\n                    cast(null as character varying(256)) as \"DRG_DESCRIPTION\" ,\n                    cast(null as character varying(256)) as \"MEDICAL_SURGICAL\" ,\n                    cast(null as character varying(16777216)) as \"ADMIT_SOURCE_CODE\" ,\n                    cast(null as character varying(256)) as \"ADMIT_SOURCE_DESCRIPTION\" ,\n                    cast(null as character varying(16777216)) as \"ADMIT_TYPE_CODE\" ,\n                    cast(null as character varying(256)) as \"ADMIT_TYPE_DESCRIPTION\" ,\n                    cast(null as character varying(16777216)) as \"DISCHARGE_DISPOSITION_CODE\" ,\n                    cast(null as character varying(1024)) as \"DISCHARGE_DISPOSITION_DESCRIPTION\" ,\n                    cast(\"TOTAL_PAID_AMOUNT\" as NUMBER(38,6)) as \"TOTAL_PAID_AMOUNT\" ,\n                    cast(\"TOTAL_ALLOWED_AMOUNT\" as NUMBER(38,6)) as \"TOTAL_ALLOWED_AMOUNT\" ,\n                    cast(\"TOTAL_CHARGE_AMOUNT\" as NUMBER(38,6)) as \"TOTAL_CHARGE_AMOUNT\" ,\n                    cast(\"CLAIM_COUNT\" as NUMBER(18,0)) as \"CLAIM_COUNT\" ,\n                    cast(\"INST_CLAIM_COUNT\" as NUMBER(18,0)) as \"INST_CLAIM_COUNT\" ,\n                    cast(\"PROF_CLAIM_COUNT\" as NUMBER(18,0)) as \"PROF_CLAIM_COUNT\" ,\n                    cast(null as NUMBER(9,0)) as \"LENGTH_OF_STAY\" ,\n                    cast(null as NUMBER(1,0)) as \"MORTALITY_FLAG\" ,\n                    cast(\"DATA_SOURCE\" as character varying(16777216)) as \"DATA_SOURCE\" ,\n                    cast(\"TUVA_LAST_RUN\" as character varying(32)) as \"TUVA_LAST_RUN\" ,\n                    cast(\"BILLING_ID\" as character varying(16777216)) as \"BILLING_ID\" ,\n                    cast(\"PROVIDER_NAME\" as character varying(191)) as \"PROVIDER_NAME\" ,\n                    cast(\"PROVIDER_SPECIALTY\" as character varying(173)) as \"PROVIDER_SPECIALTY\" ,\n                    cast(\"HCPCS_CODE\" as character varying(16777216)) as \"HCPCS_CODE\" ,\n                    cast(\"CCS_CATEGORY\" as character varying(3)) as \"CCS_CATEGORY\" ,\n                    cast(\"CCS_CATEGORY_DESCRIPTION\" as character varying(256)) as \"CCS_CATEGORY_DESCRIPTION\" ,\n                    cast(null as character varying(16777216)) as \"PLACE_OF_SERVICE_CODE\" ,\n                    cast(null as character varying(256)) as \"PLACE_OF_SERVICE_DESCRIPTION\" \n\n            from tuva.claims_preprocessing.office_visit__encounter_grain\n\n            \n        )\n\n        union all\n        \n\n        (\n            select\n                cast('tuva.claims_preprocessing.outpatient_hospice__encounter_grain' as TEXT) as _dbt_source_relation,\n\n                \n                    cast(\"ENCOUNTER_ID\" as NUMBER(18,0)) as \"ENCOUNTER_ID\" ,\n                    cast(\"ENCOUNTER_START_DATE\" as DATE) as \"ENCOUNTER_START_DATE\" ,\n                    cast(null as DATE) as \"ENCOUNTER_END_DATE\" ,\n                    cast(\"PATIENT_DATA_SOURCE_ID\" as NUMBER(18,0)) as \"PATIENT_DATA_SOURCE_ID\" ,\n                    cast(\"ENCOUNTER_TYPE\" as character varying(29)) as \"ENCOUNTER_TYPE\" ,\n                    cast(\"ENCOUNTER_GROUP\" as character varying(12)) as \"ENCOUNTER_GROUP\" ,\n                    cast(\"ADMIT_AGE\" as NUMBER(15,6)) as \"ADMIT_AGE\" ,\n                    cast(\"GENDER\" as character varying(16777216)) as \"GENDER\" ,\n                    cast(\"RACE\" as character varying(16777216)) as \"RACE\" ,\n                    cast(\"PRIMARY_DIAGNOSIS_CODE_TYPE\" as character varying(16777216)) as \"PRIMARY_DIAGNOSIS_CODE_TYPE\" ,\n                    cast(\"PRIMARY_DIAGNOSIS_CODE\" as character varying(16777216)) as \"PRIMARY_DIAGNOSIS_CODE\" ,\n                    cast(\"PRIMARY_DIAGNOSIS_DESCRIPTION\" as character varying(256)) as \"PRIMARY_DIAGNOSIS_DESCRIPTION\" ,\n                    cast(\"FACILITY_ID\" as character varying(16777216)) as \"FACILITY_ID\" ,\n                    cast(\"OBSERVATION_FLAG\" as NUMBER(1,0)) as \"OBSERVATION_FLAG\" ,\n                    cast(null as NUMBER(1,0)) as \"ED_FLAG\" ,\n                    cast(\"LAB_FLAG\" as NUMBER(1,0)) as \"LAB_FLAG\" ,\n                    cast(\"DME_FLAG\" as NUMBER(1,0)) as \"DME_FLAG\" ,\n                    cast(\"AMBULANCE_FLAG\" as NUMBER(1,0)) as \"AMBULANCE_FLAG\" ,\n                    cast(\"PHARMACY_FLAG\" as NUMBER(1,0)) as \"PHARMACY_FLAG\" ,\n                    cast(\"FACILITY_NAME\" as character varying(95)) as \"FACILITY_NAME\" ,\n                    cast(\"FACILITY_TYPE\" as character varying(173)) as \"FACILITY_TYPE\" ,\n                    cast(null as NUMBER(1,0)) as \"DELIVERY_FLAG\" ,\n                    cast(null as character varying(16777216)) as \"DELIVERY_TYPE\" ,\n                    cast(null as NUMBER(1,0)) as \"NEWBORN_FLAG\" ,\n                    cast(null as NUMBER(1,0)) as \"NICU_FLAG\" ,\n                    cast(null as character varying(16777216)) as \"DRG_CODE_TYPE\" ,\n                    cast(null as character varying(16777216)) as \"DRG_CODE\" ,\n                    cast(null as character varying(256)) as \"DRG_DESCRIPTION\" ,\n                    cast(null as character varying(256)) as \"MEDICAL_SURGICAL\" ,\n                    cast(null as character varying(16777216)) as \"ADMIT_SOURCE_CODE\" ,\n                    cast(null as character varying(256)) as \"ADMIT_SOURCE_DESCRIPTION\" ,\n                    cast(null as character varying(16777216)) as \"ADMIT_TYPE_CODE\" ,\n                    cast(null as character varying(256)) as \"ADMIT_TYPE_DESCRIPTION\" ,\n                    cast(null as character varying(16777216)) as \"DISCHARGE_DISPOSITION_CODE\" ,\n                    cast(null as character varying(1024)) as \"DISCHARGE_DISPOSITION_DESCRIPTION\" ,\n                    cast(\"TOTAL_PAID_AMOUNT\" as NUMBER(38,6)) as \"TOTAL_PAID_AMOUNT\" ,\n                    cast(\"TOTAL_ALLOWED_AMOUNT\" as NUMBER(38,6)) as \"TOTAL_ALLOWED_AMOUNT\" ,\n                    cast(\"TOTAL_CHARGE_AMOUNT\" as NUMBER(38,6)) as \"TOTAL_CHARGE_AMOUNT\" ,\n                    cast(\"CLAIM_COUNT\" as NUMBER(18,0)) as \"CLAIM_COUNT\" ,\n                    cast(\"INST_CLAIM_COUNT\" as NUMBER(18,0)) as \"INST_CLAIM_COUNT\" ,\n                    cast(\"PROF_CLAIM_COUNT\" as NUMBER(18,0)) as \"PROF_CLAIM_COUNT\" ,\n                    cast(null as NUMBER(9,0)) as \"LENGTH_OF_STAY\" ,\n                    cast(null as NUMBER(1,0)) as \"MORTALITY_FLAG\" ,\n                    cast(\"DATA_SOURCE\" as character varying(16777216)) as \"DATA_SOURCE\" ,\n                    cast(\"TUVA_LAST_RUN\" as character varying(32)) as \"TUVA_LAST_RUN\" ,\n                    cast(null as character varying(16777216)) as \"BILLING_ID\" ,\n                    cast(null as character varying(191)) as \"PROVIDER_NAME\" ,\n                    cast(null as character varying(173)) as \"PROVIDER_SPECIALTY\" ,\n                    cast(null as character varying(16777216)) as \"HCPCS_CODE\" ,\n                    cast(null as character varying(3)) as \"CCS_CATEGORY\" ,\n                    cast(null as character varying(256)) as \"CCS_CATEGORY_DESCRIPTION\" ,\n                    cast(null as character varying(16777216)) as \"PLACE_OF_SERVICE_CODE\" ,\n                    cast(null as character varying(256)) as \"PLACE_OF_SERVICE_DESCRIPTION\" \n\n            from tuva.claims_preprocessing.outpatient_hospice__encounter_grain\n\n            \n        )\n\n        union all\n        \n\n        (\n            select\n                cast('tuva.claims_preprocessing.outpatient_hospital_or_clinic__encounter_grain' as TEXT) as _dbt_source_relation,\n\n                \n                    cast(\"ENCOUNTER_ID\" as NUMBER(18,0)) as \"ENCOUNTER_ID\" ,\n                    cast(\"ENCOUNTER_START_DATE\" as DATE) as \"ENCOUNTER_START_DATE\" ,\n                    cast(null as DATE) as \"ENCOUNTER_END_DATE\" ,\n                    cast(\"PATIENT_DATA_SOURCE_ID\" as NUMBER(18,0)) as \"PATIENT_DATA_SOURCE_ID\" ,\n                    cast(\"ENCOUNTER_TYPE\" as character varying(29)) as \"ENCOUNTER_TYPE\" ,\n                    cast(\"ENCOUNTER_GROUP\" as character varying(12)) as \"ENCOUNTER_GROUP\" ,\n                    cast(\"ADMIT_AGE\" as NUMBER(15,6)) as \"ADMIT_AGE\" ,\n                    cast(\"GENDER\" as character varying(16777216)) as \"GENDER\" ,\n                    cast(\"RACE\" as character varying(16777216)) as \"RACE\" ,\n                    cast(\"PRIMARY_DIAGNOSIS_CODE_TYPE\" as character varying(16777216)) as \"PRIMARY_DIAGNOSIS_CODE_TYPE\" ,\n                    cast(\"PRIMARY_DIAGNOSIS_CODE\" as character varying(16777216)) as \"PRIMARY_DIAGNOSIS_CODE\" ,\n                    cast(\"PRIMARY_DIAGNOSIS_DESCRIPTION\" as character varying(256)) as \"PRIMARY_DIAGNOSIS_DESCRIPTION\" ,\n                    cast(\"FACILITY_ID\" as character varying(16777216)) as \"FACILITY_ID\" ,\n                    cast(\"OBSERVATION_FLAG\" as NUMBER(1,0)) as \"OBSERVATION_FLAG\" ,\n                    cast(null as NUMBER(1,0)) as \"ED_FLAG\" ,\n                    cast(\"LAB_FLAG\" as NUMBER(1,0)) as \"LAB_FLAG\" ,\n                    cast(\"DME_FLAG\" as NUMBER(1,0)) as \"DME_FLAG\" ,\n                    cast(\"AMBULANCE_FLAG\" as NUMBER(1,0)) as \"AMBULANCE_FLAG\" ,\n                    cast(\"PHARMACY_FLAG\" as NUMBER(1,0)) as \"PHARMACY_FLAG\" ,\n                    cast(\"FACILITY_NAME\" as character varying(95)) as \"FACILITY_NAME\" ,\n                    cast(\"FACILITY_TYPE\" as character varying(173)) as \"FACILITY_TYPE\" ,\n                    cast(null as NUMBER(1,0)) as \"DELIVERY_FLAG\" ,\n                    cast(null as character varying(16777216)) as \"DELIVERY_TYPE\" ,\n                    cast(null as NUMBER(1,0)) as \"NEWBORN_FLAG\" ,\n                    cast(null as NUMBER(1,0)) as \"NICU_FLAG\" ,\n                    cast(null as character varying(16777216)) as \"DRG_CODE_TYPE\" ,\n                    cast(null as character varying(16777216)) as \"DRG_CODE\" ,\n                    cast(null as character varying(256)) as \"DRG_DESCRIPTION\" ,\n                    cast(null as character varying(256)) as \"MEDICAL_SURGICAL\" ,\n                    cast(null as character varying(16777216)) as \"ADMIT_SOURCE_CODE\" ,\n                    cast(null as character varying(256)) as \"ADMIT_SOURCE_DESCRIPTION\" ,\n                    cast(null as character varying(16777216)) as \"ADMIT_TYPE_CODE\" ,\n                    cast(null as character varying(256)) as \"ADMIT_TYPE_DESCRIPTION\" ,\n                    cast(null as character varying(16777216)) as \"DISCHARGE_DISPOSITION_CODE\" ,\n                    cast(null as character varying(1024)) as \"DISCHARGE_DISPOSITION_DESCRIPTION\" ,\n                    cast(\"TOTAL_PAID_AMOUNT\" as NUMBER(38,6)) as \"TOTAL_PAID_AMOUNT\" ,\n                    cast(\"TOTAL_ALLOWED_AMOUNT\" as NUMBER(38,6)) as \"TOTAL_ALLOWED_AMOUNT\" ,\n                    cast(\"TOTAL_CHARGE_AMOUNT\" as NUMBER(38,6)) as \"TOTAL_CHARGE_AMOUNT\" ,\n                    cast(\"CLAIM_COUNT\" as NUMBER(18,0)) as \"CLAIM_COUNT\" ,\n                    cast(\"INST_CLAIM_COUNT\" as NUMBER(18,0)) as \"INST_CLAIM_COUNT\" ,\n                    cast(\"PROF_CLAIM_COUNT\" as NUMBER(18,0)) as \"PROF_CLAIM_COUNT\" ,\n                    cast(null as NUMBER(9,0)) as \"LENGTH_OF_STAY\" ,\n                    cast(null as NUMBER(1,0)) as \"MORTALITY_FLAG\" ,\n                    cast(\"DATA_SOURCE\" as character varying(16777216)) as \"DATA_SOURCE\" ,\n                    cast(\"TUVA_LAST_RUN\" as character varying(32)) as \"TUVA_LAST_RUN\" ,\n                    cast(null as character varying(16777216)) as \"BILLING_ID\" ,\n                    cast(null as character varying(191)) as \"PROVIDER_NAME\" ,\n                    cast(null as character varying(173)) as \"PROVIDER_SPECIALTY\" ,\n                    cast(null as character varying(16777216)) as \"HCPCS_CODE\" ,\n                    cast(null as character varying(3)) as \"CCS_CATEGORY\" ,\n                    cast(null as character varying(256)) as \"CCS_CATEGORY_DESCRIPTION\" ,\n                    cast(null as character varying(16777216)) as \"PLACE_OF_SERVICE_CODE\" ,\n                    cast(null as character varying(256)) as \"PLACE_OF_SERVICE_DESCRIPTION\" \n\n            from tuva.claims_preprocessing.outpatient_hospital_or_clinic__encounter_grain\n\n            \n        )\n\n        union all\n        \n\n        (\n            select\n                cast('tuva.claims_preprocessing.outpatient_injections__encounter_grain' as TEXT) as _dbt_source_relation,\n\n                \n                    cast(\"ENCOUNTER_ID\" as NUMBER(18,0)) as \"ENCOUNTER_ID\" ,\n                    cast(\"ENCOUNTER_START_DATE\" as DATE) as \"ENCOUNTER_START_DATE\" ,\n                    cast(null as DATE) as \"ENCOUNTER_END_DATE\" ,\n                    cast(\"PATIENT_DATA_SOURCE_ID\" as NUMBER(18,0)) as \"PATIENT_DATA_SOURCE_ID\" ,\n                    cast(\"ENCOUNTER_TYPE\" as character varying(29)) as \"ENCOUNTER_TYPE\" ,\n                    cast(\"ENCOUNTER_GROUP\" as character varying(12)) as \"ENCOUNTER_GROUP\" ,\n                    cast(\"ADMIT_AGE\" as NUMBER(15,6)) as \"ADMIT_AGE\" ,\n                    cast(\"GENDER\" as character varying(16777216)) as \"GENDER\" ,\n                    cast(\"RACE\" as character varying(16777216)) as \"RACE\" ,\n                    cast(\"PRIMARY_DIAGNOSIS_CODE_TYPE\" as character varying(16777216)) as \"PRIMARY_DIAGNOSIS_CODE_TYPE\" ,\n                    cast(\"PRIMARY_DIAGNOSIS_CODE\" as character varying(16777216)) as \"PRIMARY_DIAGNOSIS_CODE\" ,\n                    cast(\"PRIMARY_DIAGNOSIS_DESCRIPTION\" as character varying(256)) as \"PRIMARY_DIAGNOSIS_DESCRIPTION\" ,\n                    cast(\"FACILITY_ID\" as character varying(16777216)) as \"FACILITY_ID\" ,\n                    cast(\"OBSERVATION_FLAG\" as NUMBER(1,0)) as \"OBSERVATION_FLAG\" ,\n                    cast(null as NUMBER(1,0)) as \"ED_FLAG\" ,\n                    cast(\"LAB_FLAG\" as NUMBER(1,0)) as \"LAB_FLAG\" ,\n                    cast(\"DME_FLAG\" as NUMBER(1,0)) as \"DME_FLAG\" ,\n                    cast(\"AMBULANCE_FLAG\" as NUMBER(1,0)) as \"AMBULANCE_FLAG\" ,\n                    cast(\"PHARMACY_FLAG\" as NUMBER(1,0)) as \"PHARMACY_FLAG\" ,\n                    cast(\"FACILITY_NAME\" as character varying(95)) as \"FACILITY_NAME\" ,\n                    cast(\"FACILITY_TYPE\" as character varying(173)) as \"FACILITY_TYPE\" ,\n                    cast(null as NUMBER(1,0)) as \"DELIVERY_FLAG\" ,\n                    cast(null as character varying(16777216)) as \"DELIVERY_TYPE\" ,\n                    cast(null as NUMBER(1,0)) as \"NEWBORN_FLAG\" ,\n                    cast(null as NUMBER(1,0)) as \"NICU_FLAG\" ,\n                    cast(null as character varying(16777216)) as \"DRG_CODE_TYPE\" ,\n                    cast(null as character varying(16777216)) as \"DRG_CODE\" ,\n                    cast(null as character varying(256)) as \"DRG_DESCRIPTION\" ,\n                    cast(null as character varying(256)) as \"MEDICAL_SURGICAL\" ,\n                    cast(null as character varying(16777216)) as \"ADMIT_SOURCE_CODE\" ,\n                    cast(null as character varying(256)) as \"ADMIT_SOURCE_DESCRIPTION\" ,\n                    cast(null as character varying(16777216)) as \"ADMIT_TYPE_CODE\" ,\n                    cast(null as character varying(256)) as \"ADMIT_TYPE_DESCRIPTION\" ,\n                    cast(null as character varying(16777216)) as \"DISCHARGE_DISPOSITION_CODE\" ,\n                    cast(null as character varying(1024)) as \"DISCHARGE_DISPOSITION_DESCRIPTION\" ,\n                    cast(\"TOTAL_PAID_AMOUNT\" as NUMBER(38,6)) as \"TOTAL_PAID_AMOUNT\" ,\n                    cast(\"TOTAL_ALLOWED_AMOUNT\" as NUMBER(38,6)) as \"TOTAL_ALLOWED_AMOUNT\" ,\n                    cast(\"TOTAL_CHARGE_AMOUNT\" as NUMBER(38,6)) as \"TOTAL_CHARGE_AMOUNT\" ,\n                    cast(\"CLAIM_COUNT\" as NUMBER(18,0)) as \"CLAIM_COUNT\" ,\n                    cast(\"INST_CLAIM_COUNT\" as NUMBER(18,0)) as \"INST_CLAIM_COUNT\" ,\n                    cast(\"PROF_CLAIM_COUNT\" as NUMBER(18,0)) as \"PROF_CLAIM_COUNT\" ,\n                    cast(null as NUMBER(9,0)) as \"LENGTH_OF_STAY\" ,\n                    cast(null as NUMBER(1,0)) as \"MORTALITY_FLAG\" ,\n                    cast(\"DATA_SOURCE\" as character varying(16777216)) as \"DATA_SOURCE\" ,\n                    cast(\"TUVA_LAST_RUN\" as character varying(32)) as \"TUVA_LAST_RUN\" ,\n                    cast(null as character varying(16777216)) as \"BILLING_ID\" ,\n                    cast(null as character varying(191)) as \"PROVIDER_NAME\" ,\n                    cast(null as character varying(173)) as \"PROVIDER_SPECIALTY\" ,\n                    cast(\"HCPCS_CODE\" as character varying(16777216)) as \"HCPCS_CODE\" ,\n                    cast(null as character varying(3)) as \"CCS_CATEGORY\" ,\n                    cast(null as character varying(256)) as \"CCS_CATEGORY_DESCRIPTION\" ,\n                    cast(null as character varying(16777216)) as \"PLACE_OF_SERVICE_CODE\" ,\n                    cast(null as character varying(256)) as \"PLACE_OF_SERVICE_DESCRIPTION\" \n\n            from tuva.claims_preprocessing.outpatient_injections__encounter_grain\n\n            \n        )\n\n        union all\n        \n\n        (\n            select\n                cast('tuva.claims_preprocessing.outpatient_psych__encounter_grain' as TEXT) as _dbt_source_relation,\n\n                \n                    cast(\"ENCOUNTER_ID\" as NUMBER(18,0)) as \"ENCOUNTER_ID\" ,\n                    cast(\"ENCOUNTER_START_DATE\" as DATE) as \"ENCOUNTER_START_DATE\" ,\n                    cast(null as DATE) as \"ENCOUNTER_END_DATE\" ,\n                    cast(\"PATIENT_DATA_SOURCE_ID\" as NUMBER(18,0)) as \"PATIENT_DATA_SOURCE_ID\" ,\n                    cast(\"ENCOUNTER_TYPE\" as character varying(29)) as \"ENCOUNTER_TYPE\" ,\n                    cast(\"ENCOUNTER_GROUP\" as character varying(12)) as \"ENCOUNTER_GROUP\" ,\n                    cast(\"ADMIT_AGE\" as NUMBER(15,6)) as \"ADMIT_AGE\" ,\n                    cast(\"GENDER\" as character varying(16777216)) as \"GENDER\" ,\n                    cast(\"RACE\" as character varying(16777216)) as \"RACE\" ,\n                    cast(\"PRIMARY_DIAGNOSIS_CODE_TYPE\" as character varying(16777216)) as \"PRIMARY_DIAGNOSIS_CODE_TYPE\" ,\n                    cast(\"PRIMARY_DIAGNOSIS_CODE\" as character varying(16777216)) as \"PRIMARY_DIAGNOSIS_CODE\" ,\n                    cast(\"PRIMARY_DIAGNOSIS_DESCRIPTION\" as character varying(256)) as \"PRIMARY_DIAGNOSIS_DESCRIPTION\" ,\n                    cast(\"FACILITY_ID\" as character varying(16777216)) as \"FACILITY_ID\" ,\n                    cast(\"OBSERVATION_FLAG\" as NUMBER(1,0)) as \"OBSERVATION_FLAG\" ,\n                    cast(null as NUMBER(1,0)) as \"ED_FLAG\" ,\n                    cast(\"LAB_FLAG\" as NUMBER(1,0)) as \"LAB_FLAG\" ,\n                    cast(\"DME_FLAG\" as NUMBER(1,0)) as \"DME_FLAG\" ,\n                    cast(\"AMBULANCE_FLAG\" as NUMBER(1,0)) as \"AMBULANCE_FLAG\" ,\n                    cast(\"PHARMACY_FLAG\" as NUMBER(1,0)) as \"PHARMACY_FLAG\" ,\n                    cast(\"FACILITY_NAME\" as character varying(95)) as \"FACILITY_NAME\" ,\n                    cast(\"FACILITY_TYPE\" as character varying(173)) as \"FACILITY_TYPE\" ,\n                    cast(null as NUMBER(1,0)) as \"DELIVERY_FLAG\" ,\n                    cast(null as character varying(16777216)) as \"DELIVERY_TYPE\" ,\n                    cast(null as NUMBER(1,0)) as \"NEWBORN_FLAG\" ,\n                    cast(null as NUMBER(1,0)) as \"NICU_FLAG\" ,\n                    cast(null as character varying(16777216)) as \"DRG_CODE_TYPE\" ,\n                    cast(null as character varying(16777216)) as \"DRG_CODE\" ,\n                    cast(null as character varying(256)) as \"DRG_DESCRIPTION\" ,\n                    cast(null as character varying(256)) as \"MEDICAL_SURGICAL\" ,\n                    cast(null as character varying(16777216)) as \"ADMIT_SOURCE_CODE\" ,\n                    cast(null as character varying(256)) as \"ADMIT_SOURCE_DESCRIPTION\" ,\n                    cast(null as character varying(16777216)) as \"ADMIT_TYPE_CODE\" ,\n                    cast(null as character varying(256)) as \"ADMIT_TYPE_DESCRIPTION\" ,\n                    cast(null as character varying(16777216)) as \"DISCHARGE_DISPOSITION_CODE\" ,\n                    cast(null as character varying(1024)) as \"DISCHARGE_DISPOSITION_DESCRIPTION\" ,\n                    cast(\"TOTAL_PAID_AMOUNT\" as NUMBER(38,6)) as \"TOTAL_PAID_AMOUNT\" ,\n                    cast(\"TOTAL_ALLOWED_AMOUNT\" as NUMBER(38,6)) as \"TOTAL_ALLOWED_AMOUNT\" ,\n                    cast(\"TOTAL_CHARGE_AMOUNT\" as NUMBER(38,6)) as \"TOTAL_CHARGE_AMOUNT\" ,\n                    cast(\"CLAIM_COUNT\" as NUMBER(18,0)) as \"CLAIM_COUNT\" ,\n                    cast(\"INST_CLAIM_COUNT\" as NUMBER(18,0)) as \"INST_CLAIM_COUNT\" ,\n                    cast(\"PROF_CLAIM_COUNT\" as NUMBER(18,0)) as \"PROF_CLAIM_COUNT\" ,\n                    cast(null as NUMBER(9,0)) as \"LENGTH_OF_STAY\" ,\n                    cast(null as NUMBER(1,0)) as \"MORTALITY_FLAG\" ,\n                    cast(\"DATA_SOURCE\" as character varying(16777216)) as \"DATA_SOURCE\" ,\n                    cast(\"TUVA_LAST_RUN\" as character varying(32)) as \"TUVA_LAST_RUN\" ,\n                    cast(null as character varying(16777216)) as \"BILLING_ID\" ,\n                    cast(null as character varying(191)) as \"PROVIDER_NAME\" ,\n                    cast(null as character varying(173)) as \"PROVIDER_SPECIALTY\" ,\n                    cast(null as character varying(16777216)) as \"HCPCS_CODE\" ,\n                    cast(null as character varying(3)) as \"CCS_CATEGORY\" ,\n                    cast(null as character varying(256)) as \"CCS_CATEGORY_DESCRIPTION\" ,\n                    cast(null as character varying(16777216)) as \"PLACE_OF_SERVICE_CODE\" ,\n                    cast(null as character varying(256)) as \"PLACE_OF_SERVICE_DESCRIPTION\" \n\n            from tuva.claims_preprocessing.outpatient_psych__encounter_grain\n\n            \n        )\n\n        union all\n        \n\n        (\n            select\n                cast('tuva.claims_preprocessing.outpatient_ptotst__encounter_grain' as TEXT) as _dbt_source_relation,\n\n                \n                    cast(\"ENCOUNTER_ID\" as NUMBER(18,0)) as \"ENCOUNTER_ID\" ,\n                    cast(\"ENCOUNTER_START_DATE\" as DATE) as \"ENCOUNTER_START_DATE\" ,\n                    cast(null as DATE) as \"ENCOUNTER_END_DATE\" ,\n                    cast(\"PATIENT_DATA_SOURCE_ID\" as NUMBER(18,0)) as \"PATIENT_DATA_SOURCE_ID\" ,\n                    cast(\"ENCOUNTER_TYPE\" as character varying(29)) as \"ENCOUNTER_TYPE\" ,\n                    cast(\"ENCOUNTER_GROUP\" as character varying(12)) as \"ENCOUNTER_GROUP\" ,\n                    cast(\"ADMIT_AGE\" as NUMBER(15,6)) as \"ADMIT_AGE\" ,\n                    cast(\"GENDER\" as character varying(16777216)) as \"GENDER\" ,\n                    cast(\"RACE\" as character varying(16777216)) as \"RACE\" ,\n                    cast(\"PRIMARY_DIAGNOSIS_CODE_TYPE\" as character varying(16777216)) as \"PRIMARY_DIAGNOSIS_CODE_TYPE\" ,\n                    cast(\"PRIMARY_DIAGNOSIS_CODE\" as character varying(16777216)) as \"PRIMARY_DIAGNOSIS_CODE\" ,\n                    cast(\"PRIMARY_DIAGNOSIS_DESCRIPTION\" as character varying(256)) as \"PRIMARY_DIAGNOSIS_DESCRIPTION\" ,\n                    cast(\"FACILITY_ID\" as character varying(16777216)) as \"FACILITY_ID\" ,\n                    cast(\"OBSERVATION_FLAG\" as NUMBER(1,0)) as \"OBSERVATION_FLAG\" ,\n                    cast(null as NUMBER(1,0)) as \"ED_FLAG\" ,\n                    cast(\"LAB_FLAG\" as NUMBER(1,0)) as \"LAB_FLAG\" ,\n                    cast(\"DME_FLAG\" as NUMBER(1,0)) as \"DME_FLAG\" ,\n                    cast(\"AMBULANCE_FLAG\" as NUMBER(1,0)) as \"AMBULANCE_FLAG\" ,\n                    cast(\"PHARMACY_FLAG\" as NUMBER(1,0)) as \"PHARMACY_FLAG\" ,\n                    cast(\"FACILITY_NAME\" as character varying(95)) as \"FACILITY_NAME\" ,\n                    cast(\"FACILITY_TYPE\" as character varying(173)) as \"FACILITY_TYPE\" ,\n                    cast(null as NUMBER(1,0)) as \"DELIVERY_FLAG\" ,\n                    cast(null as character varying(16777216)) as \"DELIVERY_TYPE\" ,\n                    cast(null as NUMBER(1,0)) as \"NEWBORN_FLAG\" ,\n                    cast(null as NUMBER(1,0)) as \"NICU_FLAG\" ,\n                    cast(null as character varying(16777216)) as \"DRG_CODE_TYPE\" ,\n                    cast(null as character varying(16777216)) as \"DRG_CODE\" ,\n                    cast(null as character varying(256)) as \"DRG_DESCRIPTION\" ,\n                    cast(null as character varying(256)) as \"MEDICAL_SURGICAL\" ,\n                    cast(null as character varying(16777216)) as \"ADMIT_SOURCE_CODE\" ,\n                    cast(null as character varying(256)) as \"ADMIT_SOURCE_DESCRIPTION\" ,\n                    cast(null as character varying(16777216)) as \"ADMIT_TYPE_CODE\" ,\n                    cast(null as character varying(256)) as \"ADMIT_TYPE_DESCRIPTION\" ,\n                    cast(null as character varying(16777216)) as \"DISCHARGE_DISPOSITION_CODE\" ,\n                    cast(null as character varying(1024)) as \"DISCHARGE_DISPOSITION_DESCRIPTION\" ,\n                    cast(\"TOTAL_PAID_AMOUNT\" as NUMBER(38,6)) as \"TOTAL_PAID_AMOUNT\" ,\n                    cast(\"TOTAL_ALLOWED_AMOUNT\" as NUMBER(38,6)) as \"TOTAL_ALLOWED_AMOUNT\" ,\n                    cast(\"TOTAL_CHARGE_AMOUNT\" as NUMBER(38,6)) as \"TOTAL_CHARGE_AMOUNT\" ,\n                    cast(\"CLAIM_COUNT\" as NUMBER(18,0)) as \"CLAIM_COUNT\" ,\n                    cast(\"INST_CLAIM_COUNT\" as NUMBER(18,0)) as \"INST_CLAIM_COUNT\" ,\n                    cast(\"PROF_CLAIM_COUNT\" as NUMBER(18,0)) as \"PROF_CLAIM_COUNT\" ,\n                    cast(null as NUMBER(9,0)) as \"LENGTH_OF_STAY\" ,\n                    cast(null as NUMBER(1,0)) as \"MORTALITY_FLAG\" ,\n                    cast(\"DATA_SOURCE\" as character varying(16777216)) as \"DATA_SOURCE\" ,\n                    cast(\"TUVA_LAST_RUN\" as character varying(32)) as \"TUVA_LAST_RUN\" ,\n                    cast(null as character varying(16777216)) as \"BILLING_ID\" ,\n                    cast(null as character varying(191)) as \"PROVIDER_NAME\" ,\n                    cast(null as character varying(173)) as \"PROVIDER_SPECIALTY\" ,\n                    cast(null as character varying(16777216)) as \"HCPCS_CODE\" ,\n                    cast(null as character varying(3)) as \"CCS_CATEGORY\" ,\n                    cast(null as character varying(256)) as \"CCS_CATEGORY_DESCRIPTION\" ,\n                    cast(null as character varying(16777216)) as \"PLACE_OF_SERVICE_CODE\" ,\n                    cast(null as character varying(256)) as \"PLACE_OF_SERVICE_DESCRIPTION\" \n\n            from tuva.claims_preprocessing.outpatient_ptotst__encounter_grain\n\n            \n        )\n\n        union all\n        \n\n        (\n            select\n                cast('tuva.claims_preprocessing.outpatient_surgery__encounter_grain' as TEXT) as _dbt_source_relation,\n\n                \n                    cast(\"ENCOUNTER_ID\" as NUMBER(18,0)) as \"ENCOUNTER_ID\" ,\n                    cast(\"ENCOUNTER_START_DATE\" as DATE) as \"ENCOUNTER_START_DATE\" ,\n                    cast(null as DATE) as \"ENCOUNTER_END_DATE\" ,\n                    cast(\"PATIENT_DATA_SOURCE_ID\" as NUMBER(18,0)) as \"PATIENT_DATA_SOURCE_ID\" ,\n                    cast(\"ENCOUNTER_TYPE\" as character varying(29)) as \"ENCOUNTER_TYPE\" ,\n                    cast(\"ENCOUNTER_GROUP\" as character varying(12)) as \"ENCOUNTER_GROUP\" ,\n                    cast(\"ADMIT_AGE\" as NUMBER(15,6)) as \"ADMIT_AGE\" ,\n                    cast(\"GENDER\" as character varying(16777216)) as \"GENDER\" ,\n                    cast(\"RACE\" as character varying(16777216)) as \"RACE\" ,\n                    cast(\"PRIMARY_DIAGNOSIS_CODE_TYPE\" as character varying(16777216)) as \"PRIMARY_DIAGNOSIS_CODE_TYPE\" ,\n                    cast(\"PRIMARY_DIAGNOSIS_CODE\" as character varying(16777216)) as \"PRIMARY_DIAGNOSIS_CODE\" ,\n                    cast(\"PRIMARY_DIAGNOSIS_DESCRIPTION\" as character varying(256)) as \"PRIMARY_DIAGNOSIS_DESCRIPTION\" ,\n                    cast(\"FACILITY_ID\" as character varying(16777216)) as \"FACILITY_ID\" ,\n                    cast(\"OBSERVATION_FLAG\" as NUMBER(1,0)) as \"OBSERVATION_FLAG\" ,\n                    cast(null as NUMBER(1,0)) as \"ED_FLAG\" ,\n                    cast(\"LAB_FLAG\" as NUMBER(1,0)) as \"LAB_FLAG\" ,\n                    cast(\"DME_FLAG\" as NUMBER(1,0)) as \"DME_FLAG\" ,\n                    cast(\"AMBULANCE_FLAG\" as NUMBER(1,0)) as \"AMBULANCE_FLAG\" ,\n                    cast(\"PHARMACY_FLAG\" as NUMBER(1,0)) as \"PHARMACY_FLAG\" ,\n                    cast(\"FACILITY_NAME\" as character varying(95)) as \"FACILITY_NAME\" ,\n                    cast(\"FACILITY_TYPE\" as character varying(173)) as \"FACILITY_TYPE\" ,\n                    cast(null as NUMBER(1,0)) as \"DELIVERY_FLAG\" ,\n                    cast(null as character varying(16777216)) as \"DELIVERY_TYPE\" ,\n                    cast(null as NUMBER(1,0)) as \"NEWBORN_FLAG\" ,\n                    cast(null as NUMBER(1,0)) as \"NICU_FLAG\" ,\n                    cast(null as character varying(16777216)) as \"DRG_CODE_TYPE\" ,\n                    cast(null as character varying(16777216)) as \"DRG_CODE\" ,\n                    cast(null as character varying(256)) as \"DRG_DESCRIPTION\" ,\n                    cast(null as character varying(256)) as \"MEDICAL_SURGICAL\" ,\n                    cast(null as character varying(16777216)) as \"ADMIT_SOURCE_CODE\" ,\n                    cast(null as character varying(256)) as \"ADMIT_SOURCE_DESCRIPTION\" ,\n                    cast(null as character varying(16777216)) as \"ADMIT_TYPE_CODE\" ,\n                    cast(null as character varying(256)) as \"ADMIT_TYPE_DESCRIPTION\" ,\n                    cast(null as character varying(16777216)) as \"DISCHARGE_DISPOSITION_CODE\" ,\n                    cast(null as character varying(1024)) as \"DISCHARGE_DISPOSITION_DESCRIPTION\" ,\n                    cast(\"TOTAL_PAID_AMOUNT\" as NUMBER(38,6)) as \"TOTAL_PAID_AMOUNT\" ,\n                    cast(\"TOTAL_ALLOWED_AMOUNT\" as NUMBER(38,6)) as \"TOTAL_ALLOWED_AMOUNT\" ,\n                    cast(\"TOTAL_CHARGE_AMOUNT\" as NUMBER(38,6)) as \"TOTAL_CHARGE_AMOUNT\" ,\n                    cast(\"CLAIM_COUNT\" as NUMBER(18,0)) as \"CLAIM_COUNT\" ,\n                    cast(\"INST_CLAIM_COUNT\" as NUMBER(18,0)) as \"INST_CLAIM_COUNT\" ,\n                    cast(\"PROF_CLAIM_COUNT\" as NUMBER(18,0)) as \"PROF_CLAIM_COUNT\" ,\n                    cast(null as NUMBER(9,0)) as \"LENGTH_OF_STAY\" ,\n                    cast(null as NUMBER(1,0)) as \"MORTALITY_FLAG\" ,\n                    cast(\"DATA_SOURCE\" as character varying(16777216)) as \"DATA_SOURCE\" ,\n                    cast(\"TUVA_LAST_RUN\" as character varying(32)) as \"TUVA_LAST_RUN\" ,\n                    cast(null as character varying(16777216)) as \"BILLING_ID\" ,\n                    cast(null as character varying(191)) as \"PROVIDER_NAME\" ,\n                    cast(null as character varying(173)) as \"PROVIDER_SPECIALTY\" ,\n                    cast(null as character varying(16777216)) as \"HCPCS_CODE\" ,\n                    cast(null as character varying(3)) as \"CCS_CATEGORY\" ,\n                    cast(null as character varying(256)) as \"CCS_CATEGORY_DESCRIPTION\" ,\n                    cast(null as character varying(16777216)) as \"PLACE_OF_SERVICE_CODE\" ,\n                    cast(null as character varying(256)) as \"PLACE_OF_SERVICE_DESCRIPTION\" \n\n            from tuva.claims_preprocessing.outpatient_surgery__encounter_grain\n\n            \n        )\n\n        union all\n        \n\n        (\n            select\n                cast('tuva.claims_preprocessing.outpatient_radiology__encounter_grain' as TEXT) as _dbt_source_relation,\n\n                \n                    cast(\"ENCOUNTER_ID\" as NUMBER(18,0)) as \"ENCOUNTER_ID\" ,\n                    cast(\"ENCOUNTER_START_DATE\" as DATE) as \"ENCOUNTER_START_DATE\" ,\n                    cast(null as DATE) as \"ENCOUNTER_END_DATE\" ,\n                    cast(\"PATIENT_DATA_SOURCE_ID\" as NUMBER(18,0)) as \"PATIENT_DATA_SOURCE_ID\" ,\n                    cast(\"ENCOUNTER_TYPE\" as character varying(29)) as \"ENCOUNTER_TYPE\" ,\n                    cast(\"ENCOUNTER_GROUP\" as character varying(12)) as \"ENCOUNTER_GROUP\" ,\n                    cast(\"ADMIT_AGE\" as NUMBER(15,6)) as \"ADMIT_AGE\" ,\n                    cast(\"GENDER\" as character varying(16777216)) as \"GENDER\" ,\n                    cast(\"RACE\" as character varying(16777216)) as \"RACE\" ,\n                    cast(\"PRIMARY_DIAGNOSIS_CODE_TYPE\" as character varying(16777216)) as \"PRIMARY_DIAGNOSIS_CODE_TYPE\" ,\n                    cast(\"PRIMARY_DIAGNOSIS_CODE\" as character varying(16777216)) as \"PRIMARY_DIAGNOSIS_CODE\" ,\n                    cast(\"PRIMARY_DIAGNOSIS_DESCRIPTION\" as character varying(256)) as \"PRIMARY_DIAGNOSIS_DESCRIPTION\" ,\n                    cast(\"FACILITY_ID\" as character varying(16777216)) as \"FACILITY_ID\" ,\n                    cast(\"OBSERVATION_FLAG\" as NUMBER(1,0)) as \"OBSERVATION_FLAG\" ,\n                    cast(null as NUMBER(1,0)) as \"ED_FLAG\" ,\n                    cast(\"LAB_FLAG\" as NUMBER(1,0)) as \"LAB_FLAG\" ,\n                    cast(\"DME_FLAG\" as NUMBER(1,0)) as \"DME_FLAG\" ,\n                    cast(\"AMBULANCE_FLAG\" as NUMBER(1,0)) as \"AMBULANCE_FLAG\" ,\n                    cast(\"PHARMACY_FLAG\" as NUMBER(1,0)) as \"PHARMACY_FLAG\" ,\n                    cast(\"FACILITY_NAME\" as character varying(95)) as \"FACILITY_NAME\" ,\n                    cast(\"FACILITY_TYPE\" as character varying(173)) as \"FACILITY_TYPE\" ,\n                    cast(null as NUMBER(1,0)) as \"DELIVERY_FLAG\" ,\n                    cast(null as character varying(16777216)) as \"DELIVERY_TYPE\" ,\n                    cast(null as NUMBER(1,0)) as \"NEWBORN_FLAG\" ,\n                    cast(null as NUMBER(1,0)) as \"NICU_FLAG\" ,\n                    cast(null as character varying(16777216)) as \"DRG_CODE_TYPE\" ,\n                    cast(null as character varying(16777216)) as \"DRG_CODE\" ,\n                    cast(null as character varying(256)) as \"DRG_DESCRIPTION\" ,\n                    cast(null as character varying(256)) as \"MEDICAL_SURGICAL\" ,\n                    cast(null as character varying(16777216)) as \"ADMIT_SOURCE_CODE\" ,\n                    cast(null as character varying(256)) as \"ADMIT_SOURCE_DESCRIPTION\" ,\n                    cast(null as character varying(16777216)) as \"ADMIT_TYPE_CODE\" ,\n                    cast(null as character varying(256)) as \"ADMIT_TYPE_DESCRIPTION\" ,\n                    cast(null as character varying(16777216)) as \"DISCHARGE_DISPOSITION_CODE\" ,\n                    cast(null as character varying(1024)) as \"DISCHARGE_DISPOSITION_DESCRIPTION\" ,\n                    cast(\"TOTAL_PAID_AMOUNT\" as NUMBER(38,6)) as \"TOTAL_PAID_AMOUNT\" ,\n                    cast(\"TOTAL_ALLOWED_AMOUNT\" as NUMBER(38,6)) as \"TOTAL_ALLOWED_AMOUNT\" ,\n                    cast(\"TOTAL_CHARGE_AMOUNT\" as NUMBER(38,6)) as \"TOTAL_CHARGE_AMOUNT\" ,\n                    cast(\"CLAIM_COUNT\" as NUMBER(18,0)) as \"CLAIM_COUNT\" ,\n                    cast(\"INST_CLAIM_COUNT\" as NUMBER(18,0)) as \"INST_CLAIM_COUNT\" ,\n                    cast(\"PROF_CLAIM_COUNT\" as NUMBER(18,0)) as \"PROF_CLAIM_COUNT\" ,\n                    cast(null as NUMBER(9,0)) as \"LENGTH_OF_STAY\" ,\n                    cast(null as NUMBER(1,0)) as \"MORTALITY_FLAG\" ,\n                    cast(\"DATA_SOURCE\" as character varying(16777216)) as \"DATA_SOURCE\" ,\n                    cast(\"TUVA_LAST_RUN\" as character varying(32)) as \"TUVA_LAST_RUN\" ,\n                    cast(null as character varying(16777216)) as \"BILLING_ID\" ,\n                    cast(null as character varying(191)) as \"PROVIDER_NAME\" ,\n                    cast(null as character varying(173)) as \"PROVIDER_SPECIALTY\" ,\n                    cast(\"HCPCS_CODE\" as character varying(16777216)) as \"HCPCS_CODE\" ,\n                    cast(null as character varying(3)) as \"CCS_CATEGORY\" ,\n                    cast(null as character varying(256)) as \"CCS_CATEGORY_DESCRIPTION\" ,\n                    cast(null as character varying(16777216)) as \"PLACE_OF_SERVICE_CODE\" ,\n                    cast(null as character varying(256)) as \"PLACE_OF_SERVICE_DESCRIPTION\" \n\n            from tuva.claims_preprocessing.outpatient_radiology__encounter_grain\n\n            \n        )\n\n        union all\n        \n\n        (\n            select\n                cast('tuva.claims_preprocessing.outpatient_rehab__encounter_grain' as TEXT) as _dbt_source_relation,\n\n                \n                    cast(\"ENCOUNTER_ID\" as NUMBER(18,0)) as \"ENCOUNTER_ID\" ,\n                    cast(\"ENCOUNTER_START_DATE\" as DATE) as \"ENCOUNTER_START_DATE\" ,\n                    cast(null as DATE) as \"ENCOUNTER_END_DATE\" ,\n                    cast(\"PATIENT_DATA_SOURCE_ID\" as NUMBER(18,0)) as \"PATIENT_DATA_SOURCE_ID\" ,\n                    cast(\"ENCOUNTER_TYPE\" as character varying(29)) as \"ENCOUNTER_TYPE\" ,\n                    cast(\"ENCOUNTER_GROUP\" as character varying(12)) as \"ENCOUNTER_GROUP\" ,\n                    cast(\"ADMIT_AGE\" as NUMBER(15,6)) as \"ADMIT_AGE\" ,\n                    cast(\"GENDER\" as character varying(16777216)) as \"GENDER\" ,\n                    cast(\"RACE\" as character varying(16777216)) as \"RACE\" ,\n                    cast(\"PRIMARY_DIAGNOSIS_CODE_TYPE\" as character varying(16777216)) as \"PRIMARY_DIAGNOSIS_CODE_TYPE\" ,\n                    cast(\"PRIMARY_DIAGNOSIS_CODE\" as character varying(16777216)) as \"PRIMARY_DIAGNOSIS_CODE\" ,\n                    cast(\"PRIMARY_DIAGNOSIS_DESCRIPTION\" as character varying(256)) as \"PRIMARY_DIAGNOSIS_DESCRIPTION\" ,\n                    cast(\"FACILITY_ID\" as character varying(16777216)) as \"FACILITY_ID\" ,\n                    cast(\"OBSERVATION_FLAG\" as NUMBER(1,0)) as \"OBSERVATION_FLAG\" ,\n                    cast(null as NUMBER(1,0)) as \"ED_FLAG\" ,\n                    cast(\"LAB_FLAG\" as NUMBER(1,0)) as \"LAB_FLAG\" ,\n                    cast(\"DME_FLAG\" as NUMBER(1,0)) as \"DME_FLAG\" ,\n                    cast(\"AMBULANCE_FLAG\" as NUMBER(1,0)) as \"AMBULANCE_FLAG\" ,\n                    cast(\"PHARMACY_FLAG\" as NUMBER(1,0)) as \"PHARMACY_FLAG\" ,\n                    cast(\"FACILITY_NAME\" as character varying(95)) as \"FACILITY_NAME\" ,\n                    cast(\"FACILITY_TYPE\" as character varying(173)) as \"FACILITY_TYPE\" ,\n                    cast(null as NUMBER(1,0)) as \"DELIVERY_FLAG\" ,\n                    cast(null as character varying(16777216)) as \"DELIVERY_TYPE\" ,\n                    cast(null as NUMBER(1,0)) as \"NEWBORN_FLAG\" ,\n                    cast(null as NUMBER(1,0)) as \"NICU_FLAG\" ,\n                    cast(null as character varying(16777216)) as \"DRG_CODE_TYPE\" ,\n                    cast(null as character varying(16777216)) as \"DRG_CODE\" ,\n                    cast(null as character varying(256)) as \"DRG_DESCRIPTION\" ,\n                    cast(null as character varying(256)) as \"MEDICAL_SURGICAL\" ,\n                    cast(null as character varying(16777216)) as \"ADMIT_SOURCE_CODE\" ,\n                    cast(null as character varying(256)) as \"ADMIT_SOURCE_DESCRIPTION\" ,\n                    cast(null as character varying(16777216)) as \"ADMIT_TYPE_CODE\" ,\n                    cast(null as character varying(256)) as \"ADMIT_TYPE_DESCRIPTION\" ,\n                    cast(null as character varying(16777216)) as \"DISCHARGE_DISPOSITION_CODE\" ,\n                    cast(null as character varying(1024)) as \"DISCHARGE_DISPOSITION_DESCRIPTION\" ,\n                    cast(\"TOTAL_PAID_AMOUNT\" as NUMBER(38,6)) as \"TOTAL_PAID_AMOUNT\" ,\n                    cast(\"TOTAL_ALLOWED_AMOUNT\" as NUMBER(38,6)) as \"TOTAL_ALLOWED_AMOUNT\" ,\n                    cast(\"TOTAL_CHARGE_AMOUNT\" as NUMBER(38,6)) as \"TOTAL_CHARGE_AMOUNT\" ,\n                    cast(\"CLAIM_COUNT\" as NUMBER(18,0)) as \"CLAIM_COUNT\" ,\n                    cast(\"INST_CLAIM_COUNT\" as NUMBER(18,0)) as \"INST_CLAIM_COUNT\" ,\n                    cast(\"PROF_CLAIM_COUNT\" as NUMBER(18,0)) as \"PROF_CLAIM_COUNT\" ,\n                    cast(null as NUMBER(9,0)) as \"LENGTH_OF_STAY\" ,\n                    cast(null as NUMBER(1,0)) as \"MORTALITY_FLAG\" ,\n                    cast(\"DATA_SOURCE\" as character varying(16777216)) as \"DATA_SOURCE\" ,\n                    cast(\"TUVA_LAST_RUN\" as character varying(32)) as \"TUVA_LAST_RUN\" ,\n                    cast(null as character varying(16777216)) as \"BILLING_ID\" ,\n                    cast(null as character varying(191)) as \"PROVIDER_NAME\" ,\n                    cast(null as character varying(173)) as \"PROVIDER_SPECIALTY\" ,\n                    cast(null as character varying(16777216)) as \"HCPCS_CODE\" ,\n                    cast(null as character varying(3)) as \"CCS_CATEGORY\" ,\n                    cast(null as character varying(256)) as \"CCS_CATEGORY_DESCRIPTION\" ,\n                    cast(null as character varying(16777216)) as \"PLACE_OF_SERVICE_CODE\" ,\n                    cast(null as character varying(256)) as \"PLACE_OF_SERVICE_DESCRIPTION\" \n\n            from tuva.claims_preprocessing.outpatient_rehab__encounter_grain\n\n            \n        )\n\n        union all\n        \n\n        (\n            select\n                cast('tuva.claims_preprocessing.outpatient_substance_use__encounter_grain' as TEXT) as _dbt_source_relation,\n\n                \n                    cast(\"ENCOUNTER_ID\" as NUMBER(18,0)) as \"ENCOUNTER_ID\" ,\n                    cast(\"ENCOUNTER_START_DATE\" as DATE) as \"ENCOUNTER_START_DATE\" ,\n                    cast(null as DATE) as \"ENCOUNTER_END_DATE\" ,\n                    cast(\"PATIENT_DATA_SOURCE_ID\" as NUMBER(18,0)) as \"PATIENT_DATA_SOURCE_ID\" ,\n                    cast(\"ENCOUNTER_TYPE\" as character varying(29)) as \"ENCOUNTER_TYPE\" ,\n                    cast(\"ENCOUNTER_GROUP\" as character varying(12)) as \"ENCOUNTER_GROUP\" ,\n                    cast(\"ADMIT_AGE\" as NUMBER(15,6)) as \"ADMIT_AGE\" ,\n                    cast(\"GENDER\" as character varying(16777216)) as \"GENDER\" ,\n                    cast(\"RACE\" as character varying(16777216)) as \"RACE\" ,\n                    cast(\"PRIMARY_DIAGNOSIS_CODE_TYPE\" as character varying(16777216)) as \"PRIMARY_DIAGNOSIS_CODE_TYPE\" ,\n                    cast(\"PRIMARY_DIAGNOSIS_CODE\" as character varying(16777216)) as \"PRIMARY_DIAGNOSIS_CODE\" ,\n                    cast(\"PRIMARY_DIAGNOSIS_DESCRIPTION\" as character varying(256)) as \"PRIMARY_DIAGNOSIS_DESCRIPTION\" ,\n                    cast(\"FACILITY_ID\" as character varying(16777216)) as \"FACILITY_ID\" ,\n                    cast(\"OBSERVATION_FLAG\" as NUMBER(1,0)) as \"OBSERVATION_FLAG\" ,\n                    cast(null as NUMBER(1,0)) as \"ED_FLAG\" ,\n                    cast(\"LAB_FLAG\" as NUMBER(1,0)) as \"LAB_FLAG\" ,\n                    cast(\"DME_FLAG\" as NUMBER(1,0)) as \"DME_FLAG\" ,\n                    cast(\"AMBULANCE_FLAG\" as NUMBER(1,0)) as \"AMBULANCE_FLAG\" ,\n                    cast(\"PHARMACY_FLAG\" as NUMBER(1,0)) as \"PHARMACY_FLAG\" ,\n                    cast(\"FACILITY_NAME\" as character varying(95)) as \"FACILITY_NAME\" ,\n                    cast(\"FACILITY_TYPE\" as character varying(173)) as \"FACILITY_TYPE\" ,\n                    cast(null as NUMBER(1,0)) as \"DELIVERY_FLAG\" ,\n                    cast(null as character varying(16777216)) as \"DELIVERY_TYPE\" ,\n                    cast(null as NUMBER(1,0)) as \"NEWBORN_FLAG\" ,\n                    cast(null as NUMBER(1,0)) as \"NICU_FLAG\" ,\n                    cast(null as character varying(16777216)) as \"DRG_CODE_TYPE\" ,\n                    cast(null as character varying(16777216)) as \"DRG_CODE\" ,\n                    cast(null as character varying(256)) as \"DRG_DESCRIPTION\" ,\n                    cast(null as character varying(256)) as \"MEDICAL_SURGICAL\" ,\n                    cast(null as character varying(16777216)) as \"ADMIT_SOURCE_CODE\" ,\n                    cast(null as character varying(256)) as \"ADMIT_SOURCE_DESCRIPTION\" ,\n                    cast(null as character varying(16777216)) as \"ADMIT_TYPE_CODE\" ,\n                    cast(null as character varying(256)) as \"ADMIT_TYPE_DESCRIPTION\" ,\n                    cast(null as character varying(16777216)) as \"DISCHARGE_DISPOSITION_CODE\" ,\n                    cast(null as character varying(1024)) as \"DISCHARGE_DISPOSITION_DESCRIPTION\" ,\n                    cast(\"TOTAL_PAID_AMOUNT\" as NUMBER(38,6)) as \"TOTAL_PAID_AMOUNT\" ,\n                    cast(\"TOTAL_ALLOWED_AMOUNT\" as NUMBER(38,6)) as \"TOTAL_ALLOWED_AMOUNT\" ,\n                    cast(\"TOTAL_CHARGE_AMOUNT\" as NUMBER(38,6)) as \"TOTAL_CHARGE_AMOUNT\" ,\n                    cast(\"CLAIM_COUNT\" as NUMBER(18,0)) as \"CLAIM_COUNT\" ,\n                    cast(\"INST_CLAIM_COUNT\" as NUMBER(18,0)) as \"INST_CLAIM_COUNT\" ,\n                    cast(\"PROF_CLAIM_COUNT\" as NUMBER(18,0)) as \"PROF_CLAIM_COUNT\" ,\n                    cast(null as NUMBER(9,0)) as \"LENGTH_OF_STAY\" ,\n                    cast(null as NUMBER(1,0)) as \"MORTALITY_FLAG\" ,\n                    cast(\"DATA_SOURCE\" as character varying(16777216)) as \"DATA_SOURCE\" ,\n                    cast(\"TUVA_LAST_RUN\" as character varying(32)) as \"TUVA_LAST_RUN\" ,\n                    cast(null as character varying(16777216)) as \"BILLING_ID\" ,\n                    cast(null as character varying(191)) as \"PROVIDER_NAME\" ,\n                    cast(null as character varying(173)) as \"PROVIDER_SPECIALTY\" ,\n                    cast(null as character varying(16777216)) as \"HCPCS_CODE\" ,\n                    cast(null as character varying(3)) as \"CCS_CATEGORY\" ,\n                    cast(null as character varying(256)) as \"CCS_CATEGORY_DESCRIPTION\" ,\n                    cast(null as character varying(16777216)) as \"PLACE_OF_SERVICE_CODE\" ,\n                    cast(null as character varying(256)) as \"PLACE_OF_SERVICE_DESCRIPTION\" \n\n            from tuva.claims_preprocessing.outpatient_substance_use__encounter_grain\n\n            \n        )\n\n        union all\n        \n\n        (\n            select\n                cast('tuva.claims_preprocessing.home_health__encounter_grain' as TEXT) as _dbt_source_relation,\n\n                \n                    cast(\"ENCOUNTER_ID\" as NUMBER(18,0)) as \"ENCOUNTER_ID\" ,\n                    cast(\"ENCOUNTER_START_DATE\" as DATE) as \"ENCOUNTER_START_DATE\" ,\n                    cast(null as DATE) as \"ENCOUNTER_END_DATE\" ,\n                    cast(\"PATIENT_DATA_SOURCE_ID\" as NUMBER(18,0)) as \"PATIENT_DATA_SOURCE_ID\" ,\n                    cast(\"ENCOUNTER_TYPE\" as character varying(29)) as \"ENCOUNTER_TYPE\" ,\n                    cast(\"ENCOUNTER_GROUP\" as character varying(12)) as \"ENCOUNTER_GROUP\" ,\n                    cast(\"ADMIT_AGE\" as NUMBER(15,6)) as \"ADMIT_AGE\" ,\n                    cast(\"GENDER\" as character varying(16777216)) as \"GENDER\" ,\n                    cast(\"RACE\" as character varying(16777216)) as \"RACE\" ,\n                    cast(\"PRIMARY_DIAGNOSIS_CODE_TYPE\" as character varying(16777216)) as \"PRIMARY_DIAGNOSIS_CODE_TYPE\" ,\n                    cast(\"PRIMARY_DIAGNOSIS_CODE\" as character varying(16777216)) as \"PRIMARY_DIAGNOSIS_CODE\" ,\n                    cast(\"PRIMARY_DIAGNOSIS_DESCRIPTION\" as character varying(256)) as \"PRIMARY_DIAGNOSIS_DESCRIPTION\" ,\n                    cast(\"FACILITY_ID\" as character varying(16777216)) as \"FACILITY_ID\" ,\n                    cast(null as NUMBER(1,0)) as \"OBSERVATION_FLAG\" ,\n                    cast(null as NUMBER(1,0)) as \"ED_FLAG\" ,\n                    cast(\"LAB_FLAG\" as NUMBER(1,0)) as \"LAB_FLAG\" ,\n                    cast(\"DME_FLAG\" as NUMBER(1,0)) as \"DME_FLAG\" ,\n                    cast(\"AMBULANCE_FLAG\" as NUMBER(1,0)) as \"AMBULANCE_FLAG\" ,\n                    cast(\"PHARMACY_FLAG\" as NUMBER(1,0)) as \"PHARMACY_FLAG\" ,\n                    cast(\"FACILITY_NAME\" as character varying(95)) as \"FACILITY_NAME\" ,\n                    cast(\"FACILITY_TYPE\" as character varying(173)) as \"FACILITY_TYPE\" ,\n                    cast(null as NUMBER(1,0)) as \"DELIVERY_FLAG\" ,\n                    cast(null as character varying(16777216)) as \"DELIVERY_TYPE\" ,\n                    cast(null as NUMBER(1,0)) as \"NEWBORN_FLAG\" ,\n                    cast(null as NUMBER(1,0)) as \"NICU_FLAG\" ,\n                    cast(null as character varying(16777216)) as \"DRG_CODE_TYPE\" ,\n                    cast(null as character varying(16777216)) as \"DRG_CODE\" ,\n                    cast(null as character varying(256)) as \"DRG_DESCRIPTION\" ,\n                    cast(null as character varying(256)) as \"MEDICAL_SURGICAL\" ,\n                    cast(null as character varying(16777216)) as \"ADMIT_SOURCE_CODE\" ,\n                    cast(null as character varying(256)) as \"ADMIT_SOURCE_DESCRIPTION\" ,\n                    cast(null as character varying(16777216)) as \"ADMIT_TYPE_CODE\" ,\n                    cast(null as character varying(256)) as \"ADMIT_TYPE_DESCRIPTION\" ,\n                    cast(null as character varying(16777216)) as \"DISCHARGE_DISPOSITION_CODE\" ,\n                    cast(null as character varying(1024)) as \"DISCHARGE_DISPOSITION_DESCRIPTION\" ,\n                    cast(\"TOTAL_PAID_AMOUNT\" as NUMBER(38,6)) as \"TOTAL_PAID_AMOUNT\" ,\n                    cast(\"TOTAL_ALLOWED_AMOUNT\" as NUMBER(38,6)) as \"TOTAL_ALLOWED_AMOUNT\" ,\n                    cast(\"TOTAL_CHARGE_AMOUNT\" as NUMBER(38,6)) as \"TOTAL_CHARGE_AMOUNT\" ,\n                    cast(\"CLAIM_COUNT\" as NUMBER(18,0)) as \"CLAIM_COUNT\" ,\n                    cast(\"INST_CLAIM_COUNT\" as NUMBER(18,0)) as \"INST_CLAIM_COUNT\" ,\n                    cast(\"PROF_CLAIM_COUNT\" as NUMBER(18,0)) as \"PROF_CLAIM_COUNT\" ,\n                    cast(null as NUMBER(9,0)) as \"LENGTH_OF_STAY\" ,\n                    cast(null as NUMBER(1,0)) as \"MORTALITY_FLAG\" ,\n                    cast(\"DATA_SOURCE\" as character varying(16777216)) as \"DATA_SOURCE\" ,\n                    cast(\"TUVA_LAST_RUN\" as character varying(32)) as \"TUVA_LAST_RUN\" ,\n                    cast(null as character varying(16777216)) as \"BILLING_ID\" ,\n                    cast(null as character varying(191)) as \"PROVIDER_NAME\" ,\n                    cast(null as character varying(173)) as \"PROVIDER_SPECIALTY\" ,\n                    cast(null as character varying(16777216)) as \"HCPCS_CODE\" ,\n                    cast(null as character varying(3)) as \"CCS_CATEGORY\" ,\n                    cast(null as character varying(256)) as \"CCS_CATEGORY_DESCRIPTION\" ,\n                    cast(null as character varying(16777216)) as \"PLACE_OF_SERVICE_CODE\" ,\n                    cast(null as character varying(256)) as \"PLACE_OF_SERVICE_DESCRIPTION\" \n\n            from tuva.claims_preprocessing.home_health__encounter_grain\n\n            \n        )\n\n        union all\n        \n\n        (\n            select\n                cast('tuva.claims_preprocessing.dialysis__encounter_grain' as TEXT) as _dbt_source_relation,\n\n                \n                    cast(\"ENCOUNTER_ID\" as NUMBER(18,0)) as \"ENCOUNTER_ID\" ,\n                    cast(\"ENCOUNTER_START_DATE\" as DATE) as \"ENCOUNTER_START_DATE\" ,\n                    cast(null as DATE) as \"ENCOUNTER_END_DATE\" ,\n                    cast(\"PATIENT_DATA_SOURCE_ID\" as NUMBER(18,0)) as \"PATIENT_DATA_SOURCE_ID\" ,\n                    cast(\"ENCOUNTER_TYPE\" as character varying(29)) as \"ENCOUNTER_TYPE\" ,\n                    cast(\"ENCOUNTER_GROUP\" as character varying(12)) as \"ENCOUNTER_GROUP\" ,\n                    cast(\"ADMIT_AGE\" as NUMBER(15,6)) as \"ADMIT_AGE\" ,\n                    cast(\"GENDER\" as character varying(16777216)) as \"GENDER\" ,\n                    cast(\"RACE\" as character varying(16777216)) as \"RACE\" ,\n                    cast(\"PRIMARY_DIAGNOSIS_CODE_TYPE\" as character varying(16777216)) as \"PRIMARY_DIAGNOSIS_CODE_TYPE\" ,\n                    cast(\"PRIMARY_DIAGNOSIS_CODE\" as character varying(16777216)) as \"PRIMARY_DIAGNOSIS_CODE\" ,\n                    cast(\"PRIMARY_DIAGNOSIS_DESCRIPTION\" as character varying(256)) as \"PRIMARY_DIAGNOSIS_DESCRIPTION\" ,\n                    cast(\"FACILITY_ID\" as character varying(16777216)) as \"FACILITY_ID\" ,\n                    cast(null as NUMBER(1,0)) as \"OBSERVATION_FLAG\" ,\n                    cast(null as NUMBER(1,0)) as \"ED_FLAG\" ,\n                    cast(\"LAB_FLAG\" as NUMBER(1,0)) as \"LAB_FLAG\" ,\n                    cast(\"DME_FLAG\" as NUMBER(1,0)) as \"DME_FLAG\" ,\n                    cast(\"AMBULANCE_FLAG\" as NUMBER(1,0)) as \"AMBULANCE_FLAG\" ,\n                    cast(\"PHARMACY_FLAG\" as NUMBER(1,0)) as \"PHARMACY_FLAG\" ,\n                    cast(\"FACILITY_NAME\" as character varying(95)) as \"FACILITY_NAME\" ,\n                    cast(\"FACILITY_TYPE\" as character varying(173)) as \"FACILITY_TYPE\" ,\n                    cast(null as NUMBER(1,0)) as \"DELIVERY_FLAG\" ,\n                    cast(null as character varying(16777216)) as \"DELIVERY_TYPE\" ,\n                    cast(null as NUMBER(1,0)) as \"NEWBORN_FLAG\" ,\n                    cast(null as NUMBER(1,0)) as \"NICU_FLAG\" ,\n                    cast(null as character varying(16777216)) as \"DRG_CODE_TYPE\" ,\n                    cast(null as character varying(16777216)) as \"DRG_CODE\" ,\n                    cast(null as character varying(256)) as \"DRG_DESCRIPTION\" ,\n                    cast(null as character varying(256)) as \"MEDICAL_SURGICAL\" ,\n                    cast(null as character varying(16777216)) as \"ADMIT_SOURCE_CODE\" ,\n                    cast(null as character varying(256)) as \"ADMIT_SOURCE_DESCRIPTION\" ,\n                    cast(null as character varying(16777216)) as \"ADMIT_TYPE_CODE\" ,\n                    cast(null as character varying(256)) as \"ADMIT_TYPE_DESCRIPTION\" ,\n                    cast(null as character varying(16777216)) as \"DISCHARGE_DISPOSITION_CODE\" ,\n                    cast(null as character varying(1024)) as \"DISCHARGE_DISPOSITION_DESCRIPTION\" ,\n                    cast(\"TOTAL_PAID_AMOUNT\" as NUMBER(38,6)) as \"TOTAL_PAID_AMOUNT\" ,\n                    cast(\"TOTAL_ALLOWED_AMOUNT\" as NUMBER(38,6)) as \"TOTAL_ALLOWED_AMOUNT\" ,\n                    cast(\"TOTAL_CHARGE_AMOUNT\" as NUMBER(38,6)) as \"TOTAL_CHARGE_AMOUNT\" ,\n                    cast(\"CLAIM_COUNT\" as NUMBER(18,0)) as \"CLAIM_COUNT\" ,\n                    cast(\"INST_CLAIM_COUNT\" as NUMBER(18,0)) as \"INST_CLAIM_COUNT\" ,\n                    cast(\"PROF_CLAIM_COUNT\" as NUMBER(18,0)) as \"PROF_CLAIM_COUNT\" ,\n                    cast(null as NUMBER(9,0)) as \"LENGTH_OF_STAY\" ,\n                    cast(null as NUMBER(1,0)) as \"MORTALITY_FLAG\" ,\n                    cast(\"DATA_SOURCE\" as character varying(16777216)) as \"DATA_SOURCE\" ,\n                    cast(\"TUVA_LAST_RUN\" as character varying(32)) as \"TUVA_LAST_RUN\" ,\n                    cast(null as character varying(16777216)) as \"BILLING_ID\" ,\n                    cast(null as character varying(191)) as \"PROVIDER_NAME\" ,\n                    cast(null as character varying(173)) as \"PROVIDER_SPECIALTY\" ,\n                    cast(null as character varying(16777216)) as \"HCPCS_CODE\" ,\n                    cast(null as character varying(3)) as \"CCS_CATEGORY\" ,\n                    cast(null as character varying(256)) as \"CCS_CATEGORY_DESCRIPTION\" ,\n                    cast(null as character varying(16777216)) as \"PLACE_OF_SERVICE_CODE\" ,\n                    cast(null as character varying(256)) as \"PLACE_OF_SERVICE_DESCRIPTION\" \n\n            from tuva.claims_preprocessing.dialysis__encounter_grain\n\n            \n        )\n\n        union all\n        \n\n        (\n            select\n                cast('tuva.claims_preprocessing.asc__encounter_grain' as TEXT) as _dbt_source_relation,\n\n                \n                    cast(\"ENCOUNTER_ID\" as NUMBER(18,0)) as \"ENCOUNTER_ID\" ,\n                    cast(\"ENCOUNTER_START_DATE\" as DATE) as \"ENCOUNTER_START_DATE\" ,\n                    cast(\"ENCOUNTER_END_DATE\" as DATE) as \"ENCOUNTER_END_DATE\" ,\n                    cast(\"PATIENT_DATA_SOURCE_ID\" as NUMBER(18,0)) as \"PATIENT_DATA_SOURCE_ID\" ,\n                    cast(\"ENCOUNTER_TYPE\" as character varying(29)) as \"ENCOUNTER_TYPE\" ,\n                    cast(\"ENCOUNTER_GROUP\" as character varying(12)) as \"ENCOUNTER_GROUP\" ,\n                    cast(\"ADMIT_AGE\" as NUMBER(15,6)) as \"ADMIT_AGE\" ,\n                    cast(\"GENDER\" as character varying(16777216)) as \"GENDER\" ,\n                    cast(\"RACE\" as character varying(16777216)) as \"RACE\" ,\n                    cast(\"PRIMARY_DIAGNOSIS_CODE_TYPE\" as character varying(16777216)) as \"PRIMARY_DIAGNOSIS_CODE_TYPE\" ,\n                    cast(\"PRIMARY_DIAGNOSIS_CODE\" as character varying(16777216)) as \"PRIMARY_DIAGNOSIS_CODE\" ,\n                    cast(\"PRIMARY_DIAGNOSIS_DESCRIPTION\" as character varying(256)) as \"PRIMARY_DIAGNOSIS_DESCRIPTION\" ,\n                    cast(\"FACILITY_ID\" as character varying(16777216)) as \"FACILITY_ID\" ,\n                    cast(null as NUMBER(1,0)) as \"OBSERVATION_FLAG\" ,\n                    cast(null as NUMBER(1,0)) as \"ED_FLAG\" ,\n                    cast(\"LAB_FLAG\" as NUMBER(1,0)) as \"LAB_FLAG\" ,\n                    cast(\"DME_FLAG\" as NUMBER(1,0)) as \"DME_FLAG\" ,\n                    cast(\"AMBULANCE_FLAG\" as NUMBER(1,0)) as \"AMBULANCE_FLAG\" ,\n                    cast(\"PHARMACY_FLAG\" as NUMBER(1,0)) as \"PHARMACY_FLAG\" ,\n                    cast(\"FACILITY_NAME\" as character varying(95)) as \"FACILITY_NAME\" ,\n                    cast(\"FACILITY_TYPE\" as character varying(173)) as \"FACILITY_TYPE\" ,\n                    cast(null as NUMBER(1,0)) as \"DELIVERY_FLAG\" ,\n                    cast(null as character varying(16777216)) as \"DELIVERY_TYPE\" ,\n                    cast(null as NUMBER(1,0)) as \"NEWBORN_FLAG\" ,\n                    cast(null as NUMBER(1,0)) as \"NICU_FLAG\" ,\n                    cast(null as character varying(16777216)) as \"DRG_CODE_TYPE\" ,\n                    cast(null as character varying(16777216)) as \"DRG_CODE\" ,\n                    cast(null as character varying(256)) as \"DRG_DESCRIPTION\" ,\n                    cast(null as character varying(256)) as \"MEDICAL_SURGICAL\" ,\n                    cast(null as character varying(16777216)) as \"ADMIT_SOURCE_CODE\" ,\n                    cast(null as character varying(256)) as \"ADMIT_SOURCE_DESCRIPTION\" ,\n                    cast(null as character varying(16777216)) as \"ADMIT_TYPE_CODE\" ,\n                    cast(null as character varying(256)) as \"ADMIT_TYPE_DESCRIPTION\" ,\n                    cast(null as character varying(16777216)) as \"DISCHARGE_DISPOSITION_CODE\" ,\n                    cast(null as character varying(1024)) as \"DISCHARGE_DISPOSITION_DESCRIPTION\" ,\n                    cast(\"TOTAL_PAID_AMOUNT\" as NUMBER(38,6)) as \"TOTAL_PAID_AMOUNT\" ,\n                    cast(\"TOTAL_ALLOWED_AMOUNT\" as NUMBER(38,6)) as \"TOTAL_ALLOWED_AMOUNT\" ,\n                    cast(\"TOTAL_CHARGE_AMOUNT\" as NUMBER(38,6)) as \"TOTAL_CHARGE_AMOUNT\" ,\n                    cast(\"CLAIM_COUNT\" as NUMBER(18,0)) as \"CLAIM_COUNT\" ,\n                    cast(\"INST_CLAIM_COUNT\" as NUMBER(18,0)) as \"INST_CLAIM_COUNT\" ,\n                    cast(\"PROF_CLAIM_COUNT\" as NUMBER(18,0)) as \"PROF_CLAIM_COUNT\" ,\n                    cast(\"LENGTH_OF_STAY\" as NUMBER(9,0)) as \"LENGTH_OF_STAY\" ,\n                    cast(null as NUMBER(1,0)) as \"MORTALITY_FLAG\" ,\n                    cast(\"DATA_SOURCE\" as character varying(16777216)) as \"DATA_SOURCE\" ,\n                    cast(\"TUVA_LAST_RUN\" as character varying(32)) as \"TUVA_LAST_RUN\" ,\n                    cast(null as character varying(16777216)) as \"BILLING_ID\" ,\n                    cast(null as character varying(191)) as \"PROVIDER_NAME\" ,\n                    cast(null as character varying(173)) as \"PROVIDER_SPECIALTY\" ,\n                    cast(\"HCPCS_CODE\" as character varying(16777216)) as \"HCPCS_CODE\" ,\n                    cast(null as character varying(3)) as \"CCS_CATEGORY\" ,\n                    cast(null as character varying(256)) as \"CCS_CATEGORY_DESCRIPTION\" ,\n                    cast(null as character varying(16777216)) as \"PLACE_OF_SERVICE_CODE\" ,\n                    cast(null as character varying(256)) as \"PLACE_OF_SERVICE_DESCRIPTION\" \n\n            from tuva.claims_preprocessing.asc__encounter_grain\n\n            \n        )\n\n        union all\n        \n\n        (\n            select\n                cast('tuva.claims_preprocessing.ambulance__encounter_grain' as TEXT) as _dbt_source_relation,\n\n                \n                    cast(\"ENCOUNTER_ID\" as NUMBER(18,0)) as \"ENCOUNTER_ID\" ,\n                    cast(\"ENCOUNTER_START_DATE\" as DATE) as \"ENCOUNTER_START_DATE\" ,\n                    cast(null as DATE) as \"ENCOUNTER_END_DATE\" ,\n                    cast(\"PATIENT_DATA_SOURCE_ID\" as NUMBER(18,0)) as \"PATIENT_DATA_SOURCE_ID\" ,\n                    cast(\"ENCOUNTER_TYPE\" as character varying(29)) as \"ENCOUNTER_TYPE\" ,\n                    cast(\"ENCOUNTER_GROUP\" as character varying(12)) as \"ENCOUNTER_GROUP\" ,\n                    cast(\"ADMIT_AGE\" as NUMBER(15,6)) as \"ADMIT_AGE\" ,\n                    cast(\"GENDER\" as character varying(16777216)) as \"GENDER\" ,\n                    cast(\"RACE\" as character varying(16777216)) as \"RACE\" ,\n                    cast(\"PRIMARY_DIAGNOSIS_CODE_TYPE\" as character varying(16777216)) as \"PRIMARY_DIAGNOSIS_CODE_TYPE\" ,\n                    cast(\"PRIMARY_DIAGNOSIS_CODE\" as character varying(16777216)) as \"PRIMARY_DIAGNOSIS_CODE\" ,\n                    cast(\"PRIMARY_DIAGNOSIS_DESCRIPTION\" as character varying(256)) as \"PRIMARY_DIAGNOSIS_DESCRIPTION\" ,\n                    cast(\"FACILITY_ID\" as character varying(16777216)) as \"FACILITY_ID\" ,\n                    cast(null as NUMBER(1,0)) as \"OBSERVATION_FLAG\" ,\n                    cast(null as NUMBER(1,0)) as \"ED_FLAG\" ,\n                    cast(\"LAB_FLAG\" as NUMBER(1,0)) as \"LAB_FLAG\" ,\n                    cast(\"DME_FLAG\" as NUMBER(1,0)) as \"DME_FLAG\" ,\n                    cast(\"AMBULANCE_FLAG\" as NUMBER(1,0)) as \"AMBULANCE_FLAG\" ,\n                    cast(\"PHARMACY_FLAG\" as NUMBER(1,0)) as \"PHARMACY_FLAG\" ,\n                    cast(\"FACILITY_NAME\" as character varying(95)) as \"FACILITY_NAME\" ,\n                    cast(\"FACILITY_TYPE\" as character varying(173)) as \"FACILITY_TYPE\" ,\n                    cast(null as NUMBER(1,0)) as \"DELIVERY_FLAG\" ,\n                    cast(null as character varying(16777216)) as \"DELIVERY_TYPE\" ,\n                    cast(null as NUMBER(1,0)) as \"NEWBORN_FLAG\" ,\n                    cast(null as NUMBER(1,0)) as \"NICU_FLAG\" ,\n                    cast(null as character varying(16777216)) as \"DRG_CODE_TYPE\" ,\n                    cast(null as character varying(16777216)) as \"DRG_CODE\" ,\n                    cast(null as character varying(256)) as \"DRG_DESCRIPTION\" ,\n                    cast(null as character varying(256)) as \"MEDICAL_SURGICAL\" ,\n                    cast(null as character varying(16777216)) as \"ADMIT_SOURCE_CODE\" ,\n                    cast(null as character varying(256)) as \"ADMIT_SOURCE_DESCRIPTION\" ,\n                    cast(null as character varying(16777216)) as \"ADMIT_TYPE_CODE\" ,\n                    cast(null as character varying(256)) as \"ADMIT_TYPE_DESCRIPTION\" ,\n                    cast(null as character varying(16777216)) as \"DISCHARGE_DISPOSITION_CODE\" ,\n                    cast(null as character varying(1024)) as \"DISCHARGE_DISPOSITION_DESCRIPTION\" ,\n                    cast(\"TOTAL_PAID_AMOUNT\" as NUMBER(38,6)) as \"TOTAL_PAID_AMOUNT\" ,\n                    cast(\"TOTAL_ALLOWED_AMOUNT\" as NUMBER(38,6)) as \"TOTAL_ALLOWED_AMOUNT\" ,\n                    cast(\"TOTAL_CHARGE_AMOUNT\" as NUMBER(38,6)) as \"TOTAL_CHARGE_AMOUNT\" ,\n                    cast(\"CLAIM_COUNT\" as NUMBER(18,0)) as \"CLAIM_COUNT\" ,\n                    cast(\"INST_CLAIM_COUNT\" as NUMBER(18,0)) as \"INST_CLAIM_COUNT\" ,\n                    cast(\"PROF_CLAIM_COUNT\" as NUMBER(18,0)) as \"PROF_CLAIM_COUNT\" ,\n                    cast(null as NUMBER(9,0)) as \"LENGTH_OF_STAY\" ,\n                    cast(null as NUMBER(1,0)) as \"MORTALITY_FLAG\" ,\n                    cast(\"DATA_SOURCE\" as character varying(16777216)) as \"DATA_SOURCE\" ,\n                    cast(\"TUVA_LAST_RUN\" as character varying(32)) as \"TUVA_LAST_RUN\" ,\n                    cast(null as character varying(16777216)) as \"BILLING_ID\" ,\n                    cast(null as character varying(191)) as \"PROVIDER_NAME\" ,\n                    cast(null as character varying(173)) as \"PROVIDER_SPECIALTY\" ,\n                    cast(null as character varying(16777216)) as \"HCPCS_CODE\" ,\n                    cast(null as character varying(3)) as \"CCS_CATEGORY\" ,\n                    cast(null as character varying(256)) as \"CCS_CATEGORY_DESCRIPTION\" ,\n                    cast(\"PLACE_OF_SERVICE_CODE\" as character varying(16777216)) as \"PLACE_OF_SERVICE_CODE\" ,\n                    cast(\"PLACE_OF_SERVICE_DESCRIPTION\" as character varying(256)) as \"PLACE_OF_SERVICE_DESCRIPTION\" \n\n            from tuva.claims_preprocessing.ambulance__encounter_grain\n\n            \n        )\n\n        union all\n        \n\n        (\n            select\n                cast('tuva.claims_preprocessing.dme__encounter_grain' as TEXT) as _dbt_source_relation,\n\n                \n                    cast(\"ENCOUNTER_ID\" as NUMBER(18,0)) as \"ENCOUNTER_ID\" ,\n                    cast(\"ENCOUNTER_START_DATE\" as DATE) as \"ENCOUNTER_START_DATE\" ,\n                    cast(null as DATE) as \"ENCOUNTER_END_DATE\" ,\n                    cast(\"PATIENT_DATA_SOURCE_ID\" as NUMBER(18,0)) as \"PATIENT_DATA_SOURCE_ID\" ,\n                    cast(\"ENCOUNTER_TYPE\" as character varying(29)) as \"ENCOUNTER_TYPE\" ,\n                    cast(\"ENCOUNTER_GROUP\" as character varying(12)) as \"ENCOUNTER_GROUP\" ,\n                    cast(\"ADMIT_AGE\" as NUMBER(15,6)) as \"ADMIT_AGE\" ,\n                    cast(\"GENDER\" as character varying(16777216)) as \"GENDER\" ,\n                    cast(\"RACE\" as character varying(16777216)) as \"RACE\" ,\n                    cast(\"PRIMARY_DIAGNOSIS_CODE_TYPE\" as character varying(16777216)) as \"PRIMARY_DIAGNOSIS_CODE_TYPE\" ,\n                    cast(\"PRIMARY_DIAGNOSIS_CODE\" as character varying(16777216)) as \"PRIMARY_DIAGNOSIS_CODE\" ,\n                    cast(\"PRIMARY_DIAGNOSIS_DESCRIPTION\" as character varying(256)) as \"PRIMARY_DIAGNOSIS_DESCRIPTION\" ,\n                    cast(\"FACILITY_ID\" as character varying(16777216)) as \"FACILITY_ID\" ,\n                    cast(null as NUMBER(1,0)) as \"OBSERVATION_FLAG\" ,\n                    cast(null as NUMBER(1,0)) as \"ED_FLAG\" ,\n                    cast(\"LAB_FLAG\" as NUMBER(1,0)) as \"LAB_FLAG\" ,\n                    cast(\"DME_FLAG\" as NUMBER(1,0)) as \"DME_FLAG\" ,\n                    cast(\"AMBULANCE_FLAG\" as NUMBER(1,0)) as \"AMBULANCE_FLAG\" ,\n                    cast(\"PHARMACY_FLAG\" as NUMBER(1,0)) as \"PHARMACY_FLAG\" ,\n                    cast(\"FACILITY_NAME\" as character varying(95)) as \"FACILITY_NAME\" ,\n                    cast(\"FACILITY_TYPE\" as character varying(173)) as \"FACILITY_TYPE\" ,\n                    cast(null as NUMBER(1,0)) as \"DELIVERY_FLAG\" ,\n                    cast(null as character varying(16777216)) as \"DELIVERY_TYPE\" ,\n                    cast(null as NUMBER(1,0)) as \"NEWBORN_FLAG\" ,\n                    cast(null as NUMBER(1,0)) as \"NICU_FLAG\" ,\n                    cast(null as character varying(16777216)) as \"DRG_CODE_TYPE\" ,\n                    cast(null as character varying(16777216)) as \"DRG_CODE\" ,\n                    cast(null as character varying(256)) as \"DRG_DESCRIPTION\" ,\n                    cast(null as character varying(256)) as \"MEDICAL_SURGICAL\" ,\n                    cast(null as character varying(16777216)) as \"ADMIT_SOURCE_CODE\" ,\n                    cast(null as character varying(256)) as \"ADMIT_SOURCE_DESCRIPTION\" ,\n                    cast(null as character varying(16777216)) as \"ADMIT_TYPE_CODE\" ,\n                    cast(null as character varying(256)) as \"ADMIT_TYPE_DESCRIPTION\" ,\n                    cast(null as character varying(16777216)) as \"DISCHARGE_DISPOSITION_CODE\" ,\n                    cast(null as character varying(1024)) as \"DISCHARGE_DISPOSITION_DESCRIPTION\" ,\n                    cast(\"TOTAL_PAID_AMOUNT\" as NUMBER(38,6)) as \"TOTAL_PAID_AMOUNT\" ,\n                    cast(\"TOTAL_ALLOWED_AMOUNT\" as NUMBER(38,6)) as \"TOTAL_ALLOWED_AMOUNT\" ,\n                    cast(\"TOTAL_CHARGE_AMOUNT\" as NUMBER(38,6)) as \"TOTAL_CHARGE_AMOUNT\" ,\n                    cast(\"CLAIM_COUNT\" as NUMBER(18,0)) as \"CLAIM_COUNT\" ,\n                    cast(\"INST_CLAIM_COUNT\" as NUMBER(18,0)) as \"INST_CLAIM_COUNT\" ,\n                    cast(\"PROF_CLAIM_COUNT\" as NUMBER(18,0)) as \"PROF_CLAIM_COUNT\" ,\n                    cast(null as NUMBER(9,0)) as \"LENGTH_OF_STAY\" ,\n                    cast(null as NUMBER(1,0)) as \"MORTALITY_FLAG\" ,\n                    cast(\"DATA_SOURCE\" as character varying(16777216)) as \"DATA_SOURCE\" ,\n                    cast(\"TUVA_LAST_RUN\" as character varying(32)) as \"TUVA_LAST_RUN\" ,\n                    cast(null as character varying(16777216)) as \"BILLING_ID\" ,\n                    cast(null as character varying(191)) as \"PROVIDER_NAME\" ,\n                    cast(null as character varying(173)) as \"PROVIDER_SPECIALTY\" ,\n                    cast(null as character varying(16777216)) as \"HCPCS_CODE\" ,\n                    cast(null as character varying(3)) as \"CCS_CATEGORY\" ,\n                    cast(null as character varying(256)) as \"CCS_CATEGORY_DESCRIPTION\" ,\n                    cast(\"PLACE_OF_SERVICE_CODE\" as character varying(16777216)) as \"PLACE_OF_SERVICE_CODE\" ,\n                    cast(\"PLACE_OF_SERVICE_DESCRIPTION\" as character varying(256)) as \"PLACE_OF_SERVICE_DESCRIPTION\" \n\n            from tuva.claims_preprocessing.dme__encounter_grain\n\n            \n        )\n\n        union all\n        \n\n        (\n            select\n                cast('tuva.claims_preprocessing.lab__encounter_grain' as TEXT) as _dbt_source_relation,\n\n                \n                    cast(\"ENCOUNTER_ID\" as NUMBER(18,0)) as \"ENCOUNTER_ID\" ,\n                    cast(\"ENCOUNTER_START_DATE\" as DATE) as \"ENCOUNTER_START_DATE\" ,\n                    cast(null as DATE) as \"ENCOUNTER_END_DATE\" ,\n                    cast(\"PATIENT_DATA_SOURCE_ID\" as NUMBER(18,0)) as \"PATIENT_DATA_SOURCE_ID\" ,\n                    cast(\"ENCOUNTER_TYPE\" as character varying(29)) as \"ENCOUNTER_TYPE\" ,\n                    cast(\"ENCOUNTER_GROUP\" as character varying(12)) as \"ENCOUNTER_GROUP\" ,\n                    cast(\"ADMIT_AGE\" as NUMBER(15,6)) as \"ADMIT_AGE\" ,\n                    cast(\"GENDER\" as character varying(16777216)) as \"GENDER\" ,\n                    cast(\"RACE\" as character varying(16777216)) as \"RACE\" ,\n                    cast(\"PRIMARY_DIAGNOSIS_CODE_TYPE\" as character varying(16777216)) as \"PRIMARY_DIAGNOSIS_CODE_TYPE\" ,\n                    cast(\"PRIMARY_DIAGNOSIS_CODE\" as character varying(16777216)) as \"PRIMARY_DIAGNOSIS_CODE\" ,\n                    cast(\"PRIMARY_DIAGNOSIS_DESCRIPTION\" as character varying(256)) as \"PRIMARY_DIAGNOSIS_DESCRIPTION\" ,\n                    cast(\"FACILITY_ID\" as character varying(16777216)) as \"FACILITY_ID\" ,\n                    cast(null as NUMBER(1,0)) as \"OBSERVATION_FLAG\" ,\n                    cast(null as NUMBER(1,0)) as \"ED_FLAG\" ,\n                    cast(\"LAB_FLAG\" as NUMBER(1,0)) as \"LAB_FLAG\" ,\n                    cast(\"DME_FLAG\" as NUMBER(1,0)) as \"DME_FLAG\" ,\n                    cast(\"AMBULANCE_FLAG\" as NUMBER(1,0)) as \"AMBULANCE_FLAG\" ,\n                    cast(\"PHARMACY_FLAG\" as NUMBER(1,0)) as \"PHARMACY_FLAG\" ,\n                    cast(\"FACILITY_NAME\" as character varying(95)) as \"FACILITY_NAME\" ,\n                    cast(\"FACILITY_TYPE\" as character varying(173)) as \"FACILITY_TYPE\" ,\n                    cast(null as NUMBER(1,0)) as \"DELIVERY_FLAG\" ,\n                    cast(null as character varying(16777216)) as \"DELIVERY_TYPE\" ,\n                    cast(null as NUMBER(1,0)) as \"NEWBORN_FLAG\" ,\n                    cast(null as NUMBER(1,0)) as \"NICU_FLAG\" ,\n                    cast(null as character varying(16777216)) as \"DRG_CODE_TYPE\" ,\n                    cast(null as character varying(16777216)) as \"DRG_CODE\" ,\n                    cast(null as character varying(256)) as \"DRG_DESCRIPTION\" ,\n                    cast(null as character varying(256)) as \"MEDICAL_SURGICAL\" ,\n                    cast(null as character varying(16777216)) as \"ADMIT_SOURCE_CODE\" ,\n                    cast(null as character varying(256)) as \"ADMIT_SOURCE_DESCRIPTION\" ,\n                    cast(null as character varying(16777216)) as \"ADMIT_TYPE_CODE\" ,\n                    cast(null as character varying(256)) as \"ADMIT_TYPE_DESCRIPTION\" ,\n                    cast(null as character varying(16777216)) as \"DISCHARGE_DISPOSITION_CODE\" ,\n                    cast(null as character varying(1024)) as \"DISCHARGE_DISPOSITION_DESCRIPTION\" ,\n                    cast(\"TOTAL_PAID_AMOUNT\" as NUMBER(38,6)) as \"TOTAL_PAID_AMOUNT\" ,\n                    cast(\"TOTAL_ALLOWED_AMOUNT\" as NUMBER(38,6)) as \"TOTAL_ALLOWED_AMOUNT\" ,\n                    cast(\"TOTAL_CHARGE_AMOUNT\" as NUMBER(38,6)) as \"TOTAL_CHARGE_AMOUNT\" ,\n                    cast(\"CLAIM_COUNT\" as NUMBER(18,0)) as \"CLAIM_COUNT\" ,\n                    cast(\"INST_CLAIM_COUNT\" as NUMBER(18,0)) as \"INST_CLAIM_COUNT\" ,\n                    cast(\"PROF_CLAIM_COUNT\" as NUMBER(18,0)) as \"PROF_CLAIM_COUNT\" ,\n                    cast(null as NUMBER(9,0)) as \"LENGTH_OF_STAY\" ,\n                    cast(null as NUMBER(1,0)) as \"MORTALITY_FLAG\" ,\n                    cast(\"DATA_SOURCE\" as character varying(16777216)) as \"DATA_SOURCE\" ,\n                    cast(\"TUVA_LAST_RUN\" as character varying(32)) as \"TUVA_LAST_RUN\" ,\n                    cast(null as character varying(16777216)) as \"BILLING_ID\" ,\n                    cast(null as character varying(191)) as \"PROVIDER_NAME\" ,\n                    cast(null as character varying(173)) as \"PROVIDER_SPECIALTY\" ,\n                    cast(null as character varying(16777216)) as \"HCPCS_CODE\" ,\n                    cast(null as character varying(3)) as \"CCS_CATEGORY\" ,\n                    cast(null as character varying(256)) as \"CCS_CATEGORY_DESCRIPTION\" ,\n                    cast(\"PLACE_OF_SERVICE_CODE\" as character varying(16777216)) as \"PLACE_OF_SERVICE_CODE\" ,\n                    cast(\"PLACE_OF_SERVICE_DESCRIPTION\" as character varying(256)) as \"PLACE_OF_SERVICE_DESCRIPTION\" \n\n            from tuva.claims_preprocessing.lab__encounter_grain\n\n            \n        )\n\n        union all\n        \n\n        (\n            select\n                cast('tuva.claims_preprocessing.orphaned_claim__encounter_grain' as TEXT) as _dbt_source_relation,\n\n                \n                    cast(\"ENCOUNTER_ID\" as NUMBER(18,0)) as \"ENCOUNTER_ID\" ,\n                    cast(\"ENCOUNTER_START_DATE\" as DATE) as \"ENCOUNTER_START_DATE\" ,\n                    cast(\"ENCOUNTER_END_DATE\" as DATE) as \"ENCOUNTER_END_DATE\" ,\n                    cast(\"PATIENT_DATA_SOURCE_ID\" as NUMBER(18,0)) as \"PATIENT_DATA_SOURCE_ID\" ,\n                    cast(\"ENCOUNTER_TYPE\" as character varying(29)) as \"ENCOUNTER_TYPE\" ,\n                    cast(\"ENCOUNTER_GROUP\" as character varying(12)) as \"ENCOUNTER_GROUP\" ,\n                    cast(\"ADMIT_AGE\" as NUMBER(15,6)) as \"ADMIT_AGE\" ,\n                    cast(\"GENDER\" as character varying(16777216)) as \"GENDER\" ,\n                    cast(\"RACE\" as character varying(16777216)) as \"RACE\" ,\n                    cast(\"PRIMARY_DIAGNOSIS_CODE_TYPE\" as character varying(16777216)) as \"PRIMARY_DIAGNOSIS_CODE_TYPE\" ,\n                    cast(\"PRIMARY_DIAGNOSIS_CODE\" as character varying(16777216)) as \"PRIMARY_DIAGNOSIS_CODE\" ,\n                    cast(\"PRIMARY_DIAGNOSIS_DESCRIPTION\" as character varying(256)) as \"PRIMARY_DIAGNOSIS_DESCRIPTION\" ,\n                    cast(\"FACILITY_ID\" as character varying(16777216)) as \"FACILITY_ID\" ,\n                    cast(null as NUMBER(1,0)) as \"OBSERVATION_FLAG\" ,\n                    cast(null as NUMBER(1,0)) as \"ED_FLAG\" ,\n                    cast(\"LAB_FLAG\" as NUMBER(1,0)) as \"LAB_FLAG\" ,\n                    cast(\"DME_FLAG\" as NUMBER(1,0)) as \"DME_FLAG\" ,\n                    cast(\"AMBULANCE_FLAG\" as NUMBER(1,0)) as \"AMBULANCE_FLAG\" ,\n                    cast(\"PHARMACY_FLAG\" as NUMBER(1,0)) as \"PHARMACY_FLAG\" ,\n                    cast(\"FACILITY_NAME\" as character varying(95)) as \"FACILITY_NAME\" ,\n                    cast(\"FACILITY_TYPE\" as character varying(173)) as \"FACILITY_TYPE\" ,\n                    cast(null as NUMBER(1,0)) as \"DELIVERY_FLAG\" ,\n                    cast(null as character varying(16777216)) as \"DELIVERY_TYPE\" ,\n                    cast(null as NUMBER(1,0)) as \"NEWBORN_FLAG\" ,\n                    cast(null as NUMBER(1,0)) as \"NICU_FLAG\" ,\n                    cast(null as character varying(16777216)) as \"DRG_CODE_TYPE\" ,\n                    cast(null as character varying(16777216)) as \"DRG_CODE\" ,\n                    cast(null as character varying(256)) as \"DRG_DESCRIPTION\" ,\n                    cast(null as character varying(256)) as \"MEDICAL_SURGICAL\" ,\n                    cast(null as character varying(16777216)) as \"ADMIT_SOURCE_CODE\" ,\n                    cast(null as character varying(256)) as \"ADMIT_SOURCE_DESCRIPTION\" ,\n                    cast(null as character varying(16777216)) as \"ADMIT_TYPE_CODE\" ,\n                    cast(null as character varying(256)) as \"ADMIT_TYPE_DESCRIPTION\" ,\n                    cast(null as character varying(16777216)) as \"DISCHARGE_DISPOSITION_CODE\" ,\n                    cast(null as character varying(1024)) as \"DISCHARGE_DISPOSITION_DESCRIPTION\" ,\n                    cast(\"TOTAL_PAID_AMOUNT\" as NUMBER(38,6)) as \"TOTAL_PAID_AMOUNT\" ,\n                    cast(\"TOTAL_ALLOWED_AMOUNT\" as NUMBER(38,6)) as \"TOTAL_ALLOWED_AMOUNT\" ,\n                    cast(\"TOTAL_CHARGE_AMOUNT\" as NUMBER(38,6)) as \"TOTAL_CHARGE_AMOUNT\" ,\n                    cast(\"CLAIM_COUNT\" as NUMBER(18,0)) as \"CLAIM_COUNT\" ,\n                    cast(\"INST_CLAIM_COUNT\" as NUMBER(18,0)) as \"INST_CLAIM_COUNT\" ,\n                    cast(\"PROF_CLAIM_COUNT\" as NUMBER(18,0)) as \"PROF_CLAIM_COUNT\" ,\n                    cast(null as NUMBER(9,0)) as \"LENGTH_OF_STAY\" ,\n                    cast(null as NUMBER(1,0)) as \"MORTALITY_FLAG\" ,\n                    cast(\"DATA_SOURCE\" as character varying(16777216)) as \"DATA_SOURCE\" ,\n                    cast(\"TUVA_LAST_RUN\" as character varying(32)) as \"TUVA_LAST_RUN\" ,\n                    cast(null as character varying(16777216)) as \"BILLING_ID\" ,\n                    cast(null as character varying(191)) as \"PROVIDER_NAME\" ,\n                    cast(null as character varying(173)) as \"PROVIDER_SPECIALTY\" ,\n                    cast(null as character varying(16777216)) as \"HCPCS_CODE\" ,\n                    cast(null as character varying(3)) as \"CCS_CATEGORY\" ,\n                    cast(null as character varying(256)) as \"CCS_CATEGORY_DESCRIPTION\" ,\n                    cast(\"PLACE_OF_SERVICE_CODE\" as character varying(16777216)) as \"PLACE_OF_SERVICE_CODE\" ,\n                    cast(\"PLACE_OF_SERVICE_DESCRIPTION\" as character varying(256)) as \"PLACE_OF_SERVICE_DESCRIPTION\" \n\n            from tuva.claims_preprocessing.orphaned_claim__encounter_grain\n\n            \n        )\n\n        \n)\n\nselect\n    cast(encounter_id as TEXT) as encounter_id\n  , cast(p.person_id as TEXT) as person_id\n  , cast(encounter_type as TEXT) as encounter_type\n  , cast(encounter_group as TEXT) as encounter_group\n  , try_cast( encounter_start_date as date ) as encounter_start_date\n  , try_cast( encounter_end_date as date ) as encounter_end_date\n  , cast(length_of_stay as integer) as length_of_stay\n  , cast(admit_source_code as TEXT) as admit_source_code\n  , cast(admit_source_description as TEXT) as admit_source_description\n  , cast(admit_type_code as TEXT) as admit_type_code\n  , cast(admit_type_description as TEXT) as admit_type_description\n  , cast(discharge_disposition_code as TEXT) as discharge_disposition_code\n  , cast(discharge_disposition_description as TEXT) as discharge_disposition_description\n  , cast(null as TEXT) as attending_provider_id\n  , cast(null as TEXT) as attending_provider_name\n  , cast(facility_id as TEXT) as facility_id\n  , cast(facility_name as TEXT) as facility_name\n  , cast(facility_type as TEXT) as facility_type\n  , cast(observation_flag as integer) as observation_flag\n  , cast(lab_flag as integer) as lab_flag\n  , cast(dme_flag as integer) as dme_flag\n  , cast(ambulance_flag as integer) as ambulance_flag\n  , cast(pharmacy_flag as integer) as pharmacy_flag\n  , cast(ed_flag as integer) as ed_flag\n  , cast(delivery_flag as integer) as delivery_flag\n  , cast(delivery_type as TEXT) as delivery_type\n  , cast(newborn_flag as integer) as newborn_flag\n  , cast(nicu_flag as integer) as nicu_flag\n  , cast(primary_diagnosis_code_type as TEXT) as primary_diagnosis_code_type\n  , cast(primary_diagnosis_code as TEXT) as primary_diagnosis_code\n  , cast(primary_diagnosis_description as TEXT) as primary_diagnosis_description\n  , cast(drg_code_type as TEXT) as drg_code_type\n  , cast(drg_code as TEXT) as drg_code\n  , cast(drg_description as TEXT) as drg_description\n  , cast(total_paid_amount as numeric(28,6)) as paid_amount\n  , cast(total_allowed_amount as numeric(28,6)) as allowed_amount\n  , cast(total_charge_amount as numeric(28,6)) as charge_amount\n  , cast(claim_count as integer) as claim_count\n  , cast(inst_claim_count as integer) as inst_claim_count\n  , cast(prof_claim_count as integer) as prof_claim_count\n  , cast(_dbt_source_relation as TEXT) as source_model\n  , cast(base.data_source as TEXT) as data_source\n  , cast('2025-06-03 19:49:40.396647+00:00' as timestamp) as tuva_last_run\nfrom base\ninner join tuva.claims_preprocessing.encounters__patient_data_source_id as p on base.patient_data_source_id = p.patient_data_source_id", "relation_name": "tuva.core._stg_claims_encounter", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:32.549206Z", "completed_at": "2025-06-03T19:50:32.559944Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:32.560248Z", "completed_at": "2025-06-03T19:50:32.560256Z"}], "thread_id": "Thread-1", "execution_time": 0.011992216110229492, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.core__encounter", "compiled": true, "compiled_code": "\n\nselect *, 'claim' as encounter_source_type\n    from tuva.core._stg_claims_encounter\n\n    union all\n\n    select *, 'clinical' as encounter_source_type\n    from tuva.core._stg_clinical_encounter\n\n", "relation_name": "tuva.core.encounter", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:32.564384Z", "completed_at": "2025-06-03T19:50:32.591676Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:32.592603Z", "completed_at": "2025-06-03T19:50:32.592609Z"}], "thread_id": "Thread-4", "execution_time": 0.03072810173034668, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.ahrq_measures__stg_pqi_inpatient_encounter", "compiled": true, "compiled_code": "\n\nselect\n    encounter_id\n  , data_source\n  , drg_code\n  , drg_description\n  , admit_source_code\n  , encounter_start_date\n  , encounter_end_date\n  , length_of_stay\n  , primary_diagnosis_code\n  , person_id\n  , facility_id\n  , paid_amount\n  , date_part('year', encounter_start_date) as year_number\nfrom\n    tuva.core.encounter\nwhere\n    encounter_type = 'acute inpatient'", "relation_name": "tuva.ahrq_measures._stg_pqi_inpatient_encounter", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:32.582380Z", "completed_at": "2025-06-03T19:50:32.594293Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:32.595522Z", "completed_at": "2025-06-03T19:50:32.595528Z"}], "thread_id": "Thread-1", "execution_time": 0.031769752502441406, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.mart_review__data_source", "compiled": true, "compiled_code": "\n\nwith data_sources as (\nselect distinct data_source\nfrom tuva.core.condition\n\nunion all\n\nselect distinct data_source\nfrom tuva.core.eligibility\n\nunion all\n\nselect distinct data_source\nfrom tuva.core.encounter\n\nunion all\n\nselect distinct data_source\nfrom tuva.core.location\n\nunion all\n\nselect distinct data_source\nfrom tuva.core.medical_claim\n\nunion all\n\nselect distinct data_source\nfrom tuva.core.member_months\n\nunion all\n\nselect distinct data_source\nfrom tuva.core.patient\n\nunion all\n\nselect distinct data_source\nfrom tuva.core.pharmacy_claim\n\nunion all\n\nselect distinct data_source\nfrom tuva.core.practitioner\n\nunion all\n\nselect distinct data_source\nfrom tuva.core.procedure\n)\n\nselect distinct\n    data_source\n    , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom data_sources", "relation_name": "tuva.data_quality.mart_review__data_source", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:32.596926Z", "completed_at": "2025-06-03T19:50:32.623887Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:32.625895Z", "completed_at": "2025-06-03T19:50:32.625902Z"}], "thread_id": "Thread-3", "execution_time": 0.031332969665527344, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.mart_review__inpatient", "compiled": true, "compiled_code": "\n\nwith cte as (\n    select distinct\n        location_id\n      , npi\n      , name\n    from tuva.core.location\n)\n\n, final as (\n    select\n        e.*\n      , e.person_id || '|' || e.data_source as patient_source_key\n      , e.encounter_id || '|' || e.data_source as encounter_source_key\n      , e.drg_code || '|' || e.drg_description as drgwithdescription\n      , e.primary_diagnosis_code || '|' || e.primary_diagnosis_description as primary_diagnosis_and_description\n      , e.admit_source_code || '|' || e.admit_source_description as admit_source_code_and_description\n      , e.admit_type_code || '|' || e.admit_type_description as admit_type_code_and_description\n      , e.discharge_disposition_code || '|' || e.discharge_disposition_description as discharge_code_and_description\n      , p.ccsr_parent_category\n      , p.ccsr_category\n      , p.ccsr_category_description\n      , p.ccsr_category || '|' || p.ccsr_category_description as ccsr_category_and_description\n      , b.body_system\n      , case \n            when e.length_of_stay <= 1 then '1. 0-1 day'\n            when e.length_of_stay <= 3 then '2. 2-3 days'\n            when e.length_of_stay <= 5 then '3. 4-5 days'\n            when e.length_of_stay <= 7 then '4. 6-7 days'\n            when e.length_of_stay <= 14 then '5. 8-14 days'\n            when e.length_of_stay <= 30 then '6. 15-30 days'\n            else '7. 31+ Days'\n        end as los_groups\n      , weights.drg_weight\n    from tuva.core.encounter as e\n    left outer join cte as l\n      on e.facility_id = l.location_id\n    left outer join tuva.ccsr.dx_vertical_pivot as p\n      on e.primary_diagnosis_code = p.code\n      and p.ccsr_category_rank = 1\n    left outer join tuva.ccsr._value_set_dxccsr_v2023_1_body_systems as b\n      on p.ccsr_parent_category = b.ccsr_parent_category\n    left outer join tuva.terminology.ms_drg_weights_los as weights\n      on e.drg_code = weights.ms_drg\n    where e.encounter_type = 'acute inpatient'\n)\n\nselect * from final", "relation_name": "tuva.data_quality.mart_review__inpatient", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:32.626389Z", "completed_at": "2025-06-03T19:50:32.633248Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:32.634161Z", "completed_at": "2025-06-03T19:50:32.634165Z"}], "thread_id": "Thread-1", "execution_time": 0.017389774322509766, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.not_null_core__encounter_person_id.6a9a6bcb6f", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect person_id\nfrom tuva.core.encounter\nwhere person_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:32.640845Z", "completed_at": "2025-06-03T19:50:32.664750Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:32.665492Z", "completed_at": "2025-06-03T19:50:32.665499Z"}], "thread_id": "Thread-3", "execution_time": 0.03283214569091797, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.mart_review__service_categories_long", "compiled": true, "compiled_code": "\n\nwith encounters as (\n    select\n        cast(c.year_month_int as TEXT) as year_month\n      , mc.person_id\n      , service_category_1\n      , service_category_2\n      , count(distinct mc.encounter_id) as visits\n    from tuva.data_quality.mart_review__stg_medical_claim as mc\n    left outer join tuva.reference_data.calendar as c on mc.claim_start_date = c.full_date\n    inner join tuva.core.encounter as e\n      on mc.encounter_id = e.encounter_id\n    group by\n        cast(c.year_month_int as TEXT)\n      , mc.person_id\n      , service_category_1\n      , service_category_2\n)\n\n\n    select     \n        pmpm.year_month\n      , pmpm.data_source\n      , pmpm.payer\n      , pmpm.plan\n      , pmpm.service_category_1\n      , pmpm.service_category_2\n      , sum(total_paid) as paid_amt\n      , sum(visits) as visits\n    from tuva.financial_pmpm._int_patient_spend_with_service_categories as pmpm\n    left outer join encounters\n      on pmpm.year_month = encounters.year_month\n      and pmpm.person_id = encounters.person_id\n      and pmpm.service_category_1 = encounters.service_category_1\n      and pmpm.service_category_2 = encounters.service_category_2\n    group by\n        pmpm.year_month\n      , pmpm.data_source\n      , pmpm.payer\n      , pmpm.plan\n      , pmpm.service_category_1\n      , pmpm.service_category_2", "relation_name": "tuva.data_quality.mart_review__service_categories_long", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:32.634506Z", "completed_at": "2025-06-03T19:50:32.665243Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:32.671309Z", "completed_at": "2025-06-03T19:50:32.671314Z"}], "thread_id": "Thread-4", "execution_time": 0.03891873359680176, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.unique_core__encounter_encounter_id.d6227f8792", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    encounter_id as unique_field,\n    count(*) as n_records\n\nfrom tuva.core.encounter\nwhere encounter_id is not null\ngroup by encounter_id\nhaving count(*) > 1\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:32.647450Z", "completed_at": "2025-06-03T19:50:32.665883Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:32.671960Z", "completed_at": "2025-06-03T19:50:32.671964Z"}], "thread_id": "Thread-2", "execution_time": 0.03808999061584473, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.ed_classification__int_map_primary_dx", "compiled": true, "compiled_code": "/*\nAll condition discharge diagnosis left join with probabilistic\nindicators of ED classification terminology\n*/\n\n\n\n\nwith  __dbt__cte__ed_classification__stg_encounter as (\n\n\nselect\n    encounter_id\n    , encounter_type\n    , person_id\n    , encounter_end_date\n    , facility_id\n    , primary_diagnosis_code_type\n    , primary_diagnosis_code\n    , primary_diagnosis_description\n    , paid_amount\n    , allowed_amount\n    , charge_amount\nfrom tuva.core.encounter\n), condition as (\n    select *\n    from __dbt__cte__ed_classification__stg_encounter\n    where encounter_type = 'emergency department'\n)\n\n, icd9 as (\n  select\n     icd9 as code\n     \n     , edcnnpa\n     \n     , edcnpa\n     \n     , epct\n     \n     , noner\n     \n     , injury\n     \n     , psych\n     \n     , alcohol\n     \n     , drug\n     \n     , 1 as ed_classification_capture\n  from tuva.ed_classification._value_set_johnston_icd9\n)\n\n, icd10 as (\n  select\n     icd10 as code\n     \n     , edcnnpa\n     \n     , edcnpa\n     \n     , epct\n     \n     , noner\n     \n     , injury\n     \n     , psych\n     \n     , alcohol\n     \n     , drug\n     \n     , 1 as ed_classification_capture\n  from tuva.ed_classification._value_set_johnston_icd10\n)\n\nselect\n   a.*\n   \n   , icd10.edcnnpa\n   \n   , icd10.edcnpa\n   \n   , icd10.epct\n   \n   , icd10.noner\n   \n   , icd10.injury\n   \n   , icd10.psych\n   \n   , icd10.alcohol\n   \n   , icd10.drug\n   \n   , coalesce(icd10.ed_classification_capture, 0) as ed_classification_capture\nfrom condition as a\nleft outer join icd10\n    on a.primary_diagnosis_code = icd10.code\n    and a.primary_diagnosis_code_type = 'icd-10-cm'\n\nunion all\n\nselect\n   a.*\n   \n   , icd9.edcnnpa\n   \n   , icd9.edcnpa\n   \n   , icd9.epct\n   \n   , icd9.noner\n   \n   , icd9.injury\n   \n   , icd9.psych\n   \n   , icd9.alcohol\n   \n   , icd9.drug\n   \n   , coalesce(icd9.ed_classification_capture, 0) as ed_classification_capture\nfrom condition as a\ninner join icd9\n    on a.primary_diagnosis_code = icd9.code\n    and a.primary_diagnosis_code_type = 'icd-9-cm'", "relation_name": "tuva.ed_classification._int_by_provider_parent_organization", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:32.666104Z", "completed_at": "2025-06-03T19:50:32.673891Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:32.674844Z", "completed_at": "2025-06-03T19:50:32.674850Z"}], "thread_id": "Thread-1", "execution_time": 0.010538816452026367, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.ahrq_measures__int_pqi_shared_exclusion_missing_dates", "compiled": true, "compiled_code": "\n-- Exclude encounters with missing start dates\nselect\n    encounter_id\n  , data_source\n  , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom tuva.ahrq_measures._stg_pqi_inpatient_encounter\nwhere\n  encounter_start_date is null", "relation_name": "tuva.ahrq_measures._int_pqi_shared_exclusion_missing_dates", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:32.675211Z", "completed_at": "2025-06-03T19:50:32.692841Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:32.693578Z", "completed_at": "2025-06-03T19:50:32.693584Z"}], "thread_id": "Thread-3", "execution_time": 0.021013975143432617, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.ahrq_measures__int_pqi_shared_exclusion_missing_primary_dx", "compiled": true, "compiled_code": "\n\n-- Exclude encounters with missing primary diagnosis code\nselect\n    encounter_id\n  , data_source\n  , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom tuva.ahrq_measures._stg_pqi_inpatient_encounter\nwhere\n  primary_diagnosis_code is null", "relation_name": "tuva.ahrq_measures._int_pqi_shared_exclusion_missing_primary_dx", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:32.681548Z", "completed_at": "2025-06-03T19:50:32.693376Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:32.712497Z", "completed_at": "2025-06-03T19:50:32.712508Z"}], "thread_id": "Thread-4", "execution_time": 0.03914022445678711, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.ahrq_measures__int_pqi_shared_exclusion_transfer", "compiled": true, "compiled_code": "\n\n-- Exclude transfers from hospital, SNF, or other healthcare facility\nselect\n    encounter_id\n  , data_source\n  , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom tuva.ahrq_measures._stg_pqi_inpatient_encounter\nwhere\n  admit_source_code in ('4', '5', '6')", "relation_name": "tuva.ahrq_measures._int_pqi_shared_exclusion_transfer", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:32.687538Z", "completed_at": "2025-06-03T19:50:32.700313Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:32.717256Z", "completed_at": "2025-06-03T19:50:32.717264Z"}], "thread_id": "Thread-2", "execution_time": 0.042994022369384766, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.ahrq_measures__int_pqi_shared_exclusion_ungroupable_drg", "compiled": true, "compiled_code": "\n\n-- Exclude encounters with ungroupable DRG\nselect\n    encounter_id\n  , data_source\n  , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom tuva.ahrq_measures._stg_pqi_inpatient_encounter\nwhere\n  drg_code = '999'", "relation_name": "tuva.ahrq_measures._int_pqi_shared_exclusion_ungroupable_drg", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:32.693967Z", "completed_at": "2025-06-03T19:50:32.719219Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:32.731554Z", "completed_at": "2025-06-03T19:50:32.731574Z"}], "thread_id": "Thread-1", "execution_time": 0.03910470008850098, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.fhir_preprocessing__condition", "compiled": true, "compiled_code": "\nwith __dbt__cte___stg_condition as (\n\nselect\n      condition_id\n    , person_id\n    , claim_id\n    , encounter_id\n    , recorded_date\n    , onset_date\n    , resolved_date\n    , status\n    , normalized_code_type\n    , normalized_code\n    , normalized_description\n    , condition_rank\n    , data_source\nfrom tuva.core.condition\n),  __dbt__cte___stg_encounter as (\n\nselect\n      person_id\n    , encounter_id\n    , encounter_group\n    , encounter_start_date\n    , encounter_end_date\n    , data_source\nfrom tuva.core.encounter\n) select distinct\n      cast(condition.person_id as TEXT ) as patient_internal_id\n    , cast(condition.condition_id as TEXT ) as resource_internal_id\n    , cast(condition.encounter_id as TEXT ) as encounter_internal_id\n    , 'encounter-diagnosis' as condition_category\n    , cast(condition.recorded_date as timestamp ) as condition_recorded_datetime\n    , coalesce(\n          cast(condition.onset_date as timestamp )\n        , cast(condition.recorded_date as timestamp )\n      ) as condition_onset_datetime\n    , cast(condition.resolved_date as timestamp ) as condition_abatement_datetime\n    , cast(condition.status as TEXT ) as condition_clinical_status\n    , case\n        when lower(condition.normalized_code_type) = 'icd-10-cm'\n            and \n  length( condition.normalized_code )\n > 3\n            then cast(substring(condition.normalized_code,1,3) || '.' || substring(condition.normalized_code,4) as TEXT )\n        else cast(condition.normalized_code as TEXT )\n      end as condition_code\n    , case\n        when lower(condition.normalized_code_type) = 'icd-10-cm' then 'ICD10'\n        when lower(condition.normalized_code_type) = 'icd-9-cm' then 'ICD9'\n        else cast(condition.normalized_code_type as TEXT )\n      end as condition_code_system\n    , 'finished' as encounter_status\n    , case\n        when encounter.encounter_group = 'inpatient' then 'IMP'\n        when encounter.encounter_group in ('outpatient', 'office based') then 'AMB'\n        else 'other'\n      end as encounter_class_code\n    , cast(encounter.encounter_start_date as timestamp ) as encounter_start_datetime\n    , cast(encounter.encounter_end_date as timestamp ) as encounter_end_datetime\n    , cast(condition.data_source as TEXT ) as data_source\n    , cast('2025-06-03 19:49:40.396647+00:00' as timestamp) as tuva_last_run\n    , cast('0.14.13' as TEXT ) as tuva_package_version\nfrom __dbt__cte___stg_condition as condition\n    left outer join __dbt__cte___stg_encounter as encounter\n        on condition.encounter_id = encounter.encounter_id\nwhere condition.normalized_code_type is not null\nand condition.claim_id is null /* claim conditions are included in the EOB resource */", "relation_name": "tuva.fhir_preprocessing.condition", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:32.719892Z", "completed_at": "2025-06-03T19:50:32.843922Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:32.863320Z", "completed_at": "2025-06-03T19:50:32.863328Z"}], "thread_id": "Thread-3", "execution_time": 0.1453399658203125, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.quality_measures__int_cqm130_denominator", "compiled": true, "compiled_code": "\n\nwith  __dbt__cte___stg_encounter as (\n\n\nselect\n      person_id\n    , encounter_id\n    , encounter_type\n    , encounter_group\n    , length_of_stay\n    , encounter_start_date\n    , encounter_end_date\n    , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom tuva.core.encounter\n\n\n),  __dbt__cte___stg_procedure as (\n\nselect\n      person_id\n    , encounter_id\n    , procedure_date\n    , source_code_type\n    , source_code\n    , normalized_code_type\n    , normalized_code\n    , modifier_1\n    , modifier_2\n    , modifier_3\n    , modifier_4\n    , modifier_5\n    , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom tuva.core.procedure\n),  __dbt__cte___stg_medical_claim as (\n\n\nselect\n      person_id\n    , claim_id\n    , claim_start_date\n    , claim_end_date\n    , place_of_service_code\n    , hcpcs_code\n    , hcpcs_modifier_1\n    , hcpcs_modifier_2\n    , hcpcs_modifier_3\n    , hcpcs_modifier_4\n    , hcpcs_modifier_5\n    , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom tuva.core.medical_claim\n\n\n),  __dbt__cte___stg_patient as (\n\nselect\n      person_id\n    , sex\n    , birth_date\n    , death_date\n    , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom tuva.core.patient\n), visit_codes as (\n\n    select\n          code\n        , code_system\n    from tuva.quality_measures._value_set_codes\n    where lower(concept_name) in (\n            'encounter to document medications'\n    )\n\n)\n\n, visits_encounters as (\n\n    select\n          person_id\n        , coalesce(encounter.encounter_start_date, encounter.encounter_end_date) as procedure_encounter_date -- alias only to enable union later\n        , coalesce(encounter.encounter_end_date, encounter.encounter_start_date) as claims_encounter_date -- alias only to enable union later\n    from __dbt__cte___stg_encounter as encounter\n    inner join tuva.quality_measures._int_cqm130__performance_period as pp\n        on coalesce(encounter.encounter_end_date, encounter.encounter_start_date) >= pp.performance_period_begin\n            and coalesce(encounter.encounter_start_date, encounter.encounter_end_date) <= pp.performance_period_end\n    where lower(encounter_type) in (\n          'home health'\n        , 'telehealth'\n    )\n\n    or lower(encounter_group) in (\n          'office based'\n        , 'outpatient'\n    )\n\n)\n\n, procedure_encounters as (\n\n    select\n          person_id\n        , procedure_date as procedure_encounter_date\n        , try_cast( null as date ) as claims_encounter_date\n    from __dbt__cte___stg_procedure as procs\n    inner join tuva.quality_measures._int_cqm130__performance_period as pp\n        on procedure_date between pp.performance_period_begin and pp.performance_period_end\n    inner join visit_codes\n        on coalesce(procs.normalized_code, procs.source_code) = visit_codes.code\n\n)\n\n, claims_encounters as (\n\n    select\n          person_id\n        , try_cast( null as date ) as procedure_encounter_date\n        , coalesce(claim_end_date, claim_start_date) as claims_encounter_date\n    from __dbt__cte___stg_medical_claim as medical_claim\n    inner join tuva.quality_measures._int_cqm130__performance_period as pp\n        on coalesce(claim_end_date, claim_start_date) >= pp.performance_period_begin\n            and coalesce(claim_start_date, claim_end_date) <= pp.performance_period_end\n    inner join visit_codes\n        on medical_claim.hcpcs_code = visit_codes.code\n\n)\n\n, all_encounters as (\n\n    select *, 'v' as visit_enc, cast(null as TEXT) as proc_enc, cast(null as TEXT) as claim_enc\n    from visits_encounters\n\n    union all\n\n    select *, cast(null as TEXT) as visit_enc, 'p' as proc_enc, cast(null as TEXT) as claim_enc\n    from procedure_encounters\n\n    union all\n\n    select *, cast(null as TEXT) as visit_enc, cast(null as TEXT) as proc_enc, 'c' as claim_enc\n    from claims_encounters\n\n)\n\n, multiple_encounters_by_patient as (\n\n    select\n          person_id\n        , procedure_encounter_date\n        , claims_encounter_date\n        , case when procedure_encounter_date >= claims_encounter_date\n                then procedure_encounter_date\n            else claims_encounter_date\n          end as max_encounter_date\n        , coalesce(min(visit_enc), '') || coalesce(min(proc_enc), '') || coalesce(min(claim_enc), '') as qualifying_types\n    from all_encounters\n    group by person_id, procedure_encounter_date, claims_encounter_date\n\n)\n\n, max_encounter_dates_by_patient as (\n\n\tselect\n\t\t  person_id\n\t\t, max(max_encounter_date) as max_encounter_date\n\tfrom multiple_encounters_by_patient\n\tgroup by person_id\n\n)\n\n, latest_patient_encounters as (\n\n\tselect\n\t\t  max_encounter_dates_by_patient.person_id\n\t\t, max_encounter_dates_by_patient.max_encounter_date\n\t\t, procedure_encounter_date\n\t\t, claims_encounter_date\n\tfrom max_encounter_dates_by_patient\n\tinner join multiple_encounters_by_patient\n\t\ton max_encounter_dates_by_patient.person_id = multiple_encounters_by_patient.person_id\n\n)\n\n, patients_with_age as (\n\n    select\n          p.person_id\n        , procedure_encounter_date\n        , claims_encounter_date\n        , floor(datediff(\n        hour,\n        birth_date,\n        e.max_encounter_date\n        ) / 8760.0) as max_age\n    from __dbt__cte___stg_patient as p\n    inner join latest_patient_encounters as e\n        on p.person_id = e.person_id\n    where p.death_date is null\n\n)\n\n, qualifying_patients as (\n\n    select\n        distinct\n          patients_with_age.person_id\n        , patients_with_age.max_age as age\n        , patients_with_age.procedure_encounter_date\n        , patients_with_age.claims_encounter_date\n        , pp.performance_period_begin\n        , pp.performance_period_end\n        , pp.measure_id\n        , pp.measure_name\n        , pp.measure_version\n        , 1 as denominator_flag\n    from patients_with_age\n    cross join tuva.quality_measures._int_cqm130__performance_period as pp\n    where max_age >= 18\n\n)\n\n, add_data_types as (\n\n    select\n          cast(person_id as TEXT) as person_id\n        , cast(age as integer) as age\n        , cast(performance_period_begin as date) as performance_period_begin\n        , cast(performance_period_end as date) as performance_period_end\n        , cast(measure_id as TEXT) as measure_id\n        , cast(measure_name as TEXT) as measure_name\n        , cast(measure_version as TEXT) as measure_version\n        , cast(procedure_encounter_date as date) as procedure_encounter_date\n        , cast(claims_encounter_date as date) as claims_encounter_date\n        , cast(denominator_flag as integer) as denominator_flag\n    from qualifying_patients\n\n)\n\nselect\n      person_id\n    , age\n    , procedure_encounter_date\n    , claims_encounter_date\n    , performance_period_begin\n    , performance_period_end\n    , measure_id\n    , measure_name\n    , measure_version\n    , denominator_flag\n    , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom add_data_types", "relation_name": "tuva.quality_measures._int_cqm130_denominator", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:32.761157Z", "completed_at": "2025-06-03T19:50:32.869943Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:32.870742Z", "completed_at": "2025-06-03T19:50:32.870749Z"}], "thread_id": "Thread-4", "execution_time": 0.15209412574768066, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.quality_measures__int_cqm438_denominator", "compiled": true, "compiled_code": "\n\nwith  __dbt__cte___stg_encounter as (\n\n\nselect\n      person_id\n    , encounter_id\n    , encounter_type\n    , encounter_group\n    , length_of_stay\n    , encounter_start_date\n    , encounter_end_date\n    , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom tuva.core.encounter\n\n\n),  __dbt__cte___stg_procedure as (\n\nselect\n      person_id\n    , encounter_id\n    , procedure_date\n    , source_code_type\n    , source_code\n    , normalized_code_type\n    , normalized_code\n    , modifier_1\n    , modifier_2\n    , modifier_3\n    , modifier_4\n    , modifier_5\n    , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom tuva.core.procedure\n),  __dbt__cte___stg_medical_claim as (\n\n\nselect\n      person_id\n    , claim_id\n    , claim_start_date\n    , claim_end_date\n    , place_of_service_code\n    , hcpcs_code\n    , hcpcs_modifier_1\n    , hcpcs_modifier_2\n    , hcpcs_modifier_3\n    , hcpcs_modifier_4\n    , hcpcs_modifier_5\n    , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom tuva.core.medical_claim\n\n\n),  __dbt__cte___stg_patient as (\n\nselect\n      person_id\n    , sex\n    , birth_date\n    , death_date\n    , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom tuva.core.patient\n), patients_with_ascvd as (\n\n    select\n          person_id\n        , performance_period_begin\n        , performance_period_end\n        , measure_id\n        , measure_name\n        , measure_version\n        , 1 as criteria\n    from tuva.quality_measures._int_cqm438_denominator_criteria1\n\n)\n\n, patients_with_cholesterol as (\n\n    select\n          person_id\n        , performance_period_begin\n        , performance_period_end\n        , measure_id\n        , measure_name\n        , measure_version\n        , 2 as criteria\n    from tuva.quality_measures._int_cqm438_denominator_criteria2\n\n)\n\n, patients_with_diabetes as (\n\n    select\n          person_id\n        , performance_period_begin\n        , performance_period_end\n        , measure_id\n        , measure_name\n        , measure_version\n        , 3 as criteria\n    from tuva.quality_measures._int_cqm438_denominator_criteria3\n\n)\n\n, visit_codes as (\n\n    select\n          code\n        , code_system\n    from tuva.quality_measures._value_set_codes\n    where lower(concept_name) in (\n          'annual wellness visit'\n        , 'office visit'\n        , 'outpatient consultation'\n        , 'preventive care services established office visit, 18 and up'\n        , 'preventive care services individual counseling'\n        , 'preventive care services initial office visit, 18 and up'\n        , 'outpatient encounters for preventive care'\n    )\n\n)\n\n, visits_encounters as (\n\n    select person_id\n         , coalesce(encounter.encounter_start_date, encounter.encounter_end_date) as min_date\n         , coalesce(encounter.encounter_end_date, encounter.encounter_start_date) as max_date\n    from __dbt__cte___stg_encounter as encounter\n    inner join tuva.quality_measures._int_cqm438__performance_period as pp\n        on coalesce(encounter.encounter_end_date, encounter.encounter_start_date) >= pp.performance_period_begin\n        and coalesce(encounter.encounter_start_date, encounter.encounter_end_date) <= pp.performance_period_end\n    where lower(encounter_type) in (\n          'home health'\n        , 'telehealth'\n    )\n\n    or lower(encounter_group) in (\n          'office based'\n        , 'outpatient'\n    )\n\n)\n\n, procedure_encounters as (\n\n    select\n          person_id\n        , procedure_date as min_date\n        , procedure_date as max_date\n    from __dbt__cte___stg_procedure as procedures\n    inner join tuva.quality_measures._int_cqm438__performance_period as pp\n        on procedure_date between pp.performance_period_begin and pp.performance_period_end\n    inner join visit_codes\n        on coalesce(procedures.normalized_code, procedures.source_code) = visit_codes.code\n\n)\n\n, claims_encounters as (\n\n    select person_id\n    , coalesce(claim_start_date, claim_end_date) as min_date\n    , coalesce(claim_end_date, claim_start_date) as max_date\n    from __dbt__cte___stg_medical_claim as medical_claim\n    inner join tuva.quality_measures._int_cqm438__performance_period as pp on\n        coalesce(claim_end_date, claim_start_date) >= pp.performance_period_begin\n         and coalesce(claim_start_date, claim_end_date) <= pp.performance_period_end\n    inner join visit_codes\n        on medical_claim.hcpcs_code = visit_codes.code\n\n)\n\n, all_encounters as (\n\n    select *, 'v' as visit_enc, cast(null as TEXT) as proc_enc, cast(null as TEXT) as claim_enc\n    from visits_encounters\n\n    union all\n\n    select *, cast(null as TEXT) as visit_enc, 'p' as proc_enc, cast(null as TEXT) as claim_enc\n    from procedure_encounters\n\n    union all\n\n    select *, cast(null as TEXT) as visit_enc, cast(null as TEXT) as proc_enc, 'c' as claim_enc\n    from claims_encounters\n\n)\n\n, encounters_by_patient as (\n\n    select person_id, min(min_date) as min_date, max(max_date) as max_date\n        , concat(concat(\n            coalesce(min(visit_enc), '')\n            , coalesce(min(proc_enc), ''))\n            , coalesce(min(claim_enc), '')\n            ) as qualifying_types\n    from all_encounters\n    group by person_id\n\n)\n\n, patients_with_age as (\n\n    select\n          p.person_id\n        , floor(datediff(\n        hour,\n        birth_date,\n        performance_period_begin\n        ) / 8760.0) as age\n    from __dbt__cte___stg_patient as p\n    inner join encounters_by_patient as e\n        on p.person_id = e.person_id\n            and p.death_date is null\n    cross join tuva.quality_measures._int_cqm438__performance_period\n\n)\n\n, qualifying_patients_from_criteria1 as (\n\n    select\n        distinct\n          patients_with_ascvd.person_id\n        , patients_with_age.age as age\n        , patients_with_ascvd.performance_period_begin\n        , patients_with_ascvd.performance_period_end\n        , patients_with_ascvd.measure_id\n        , patients_with_ascvd.measure_name\n        , patients_with_ascvd.measure_version\n        , 1 as denominator_flag\n    from patients_with_ascvd\n    left outer join patients_with_age\n    on patients_with_ascvd.person_id = patients_with_age.person_id\n    where age is not null\n\n)\n\n, qualifying_patients_from_criteria2 as (\n\n    select\n        distinct\n          patients_with_cholesterol.person_id\n        , patients_with_age.age as age\n        , patients_with_cholesterol.performance_period_begin\n        , patients_with_cholesterol.performance_period_end\n        , patients_with_cholesterol.measure_id\n        , patients_with_cholesterol.measure_name\n        , patients_with_cholesterol.measure_version\n        , 1 as denominator_flag\n    from patients_with_cholesterol\n    left outer join patients_with_age\n    on patients_with_cholesterol.person_id = patients_with_age.person_id\n    where age between 20 and 75\n\n)\n\n, qualifying_patients_from_criteria3 as (\n\n    select\n        distinct\n          patients_with_diabetes.person_id\n        , patients_with_age.age as age\n        , patients_with_diabetes.performance_period_begin\n        , patients_with_diabetes.performance_period_end\n        , patients_with_diabetes.measure_id\n        , patients_with_diabetes.measure_name\n        , patients_with_diabetes.measure_version\n        , 1 as denominator_flag\n    from patients_with_diabetes\n    left outer join patients_with_age\n    on patients_with_diabetes.person_id = patients_with_age.person_id\n    where age between 40 and 75\n\n)\n\n, final_denominator as (\n\n    select\n          person_id\n        , age\n        , performance_period_begin\n        , performance_period_end\n        , measure_id\n        , measure_name\n        , measure_version\n        , denominator_flag\n    from qualifying_patients_from_criteria1\n\n    union all\n\n    select\n          person_id\n        , age\n        , performance_period_begin\n        , performance_period_end\n        , measure_id\n        , measure_name\n        , measure_version\n        , denominator_flag\n    from qualifying_patients_from_criteria2\n\n    union all\n\n    select\n          person_id\n        , age\n        , performance_period_begin\n        , performance_period_end\n        , measure_id\n        , measure_name\n        , measure_version\n        , denominator_flag\n    from qualifying_patients_from_criteria3\n\n)\n\n, add_data_types as (\n\n    select\n          cast(person_id as TEXT) as person_id\n        , cast(age as integer) as age\n        , cast(performance_period_begin as date) as performance_period_begin\n        , cast(performance_period_end as date) as performance_period_end\n        , cast(measure_id as TEXT) as measure_id\n        , cast(measure_name as TEXT) as measure_name\n        , cast(measure_version as TEXT) as measure_version\n        , cast(denominator_flag as integer) as denominator_flag\n    from final_denominator\n\n)\n\nselect\n      person_id\n    , age\n    , performance_period_begin\n    , performance_period_end\n    , measure_id\n    , measure_name\n    , measure_version\n    , denominator_flag\n    , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom add_data_types", "relation_name": "tuva.quality_measures._int_cqm438_denominator", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:32.797785Z", "completed_at": "2025-06-03T19:50:32.871179Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:32.872234Z", "completed_at": "2025-06-03T19:50:32.872238Z"}], "thread_id": "Thread-2", "execution_time": 0.1528623104095459, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.quality_measures__int_nqf0420_denominator", "compiled": true, "compiled_code": "\n\nwith  __dbt__cte___stg_encounter as (\n\n\nselect\n      person_id\n    , encounter_id\n    , encounter_type\n    , encounter_group\n    , length_of_stay\n    , encounter_start_date\n    , encounter_end_date\n    , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom tuva.core.encounter\n\n\n),  __dbt__cte___stg_procedure as (\n\nselect\n      person_id\n    , encounter_id\n    , procedure_date\n    , source_code_type\n    , source_code\n    , normalized_code_type\n    , normalized_code\n    , modifier_1\n    , modifier_2\n    , modifier_3\n    , modifier_4\n    , modifier_5\n    , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom tuva.core.procedure\n),  __dbt__cte___stg_medical_claim as (\n\n\nselect\n      person_id\n    , claim_id\n    , claim_start_date\n    , claim_end_date\n    , place_of_service_code\n    , hcpcs_code\n    , hcpcs_modifier_1\n    , hcpcs_modifier_2\n    , hcpcs_modifier_3\n    , hcpcs_modifier_4\n    , hcpcs_modifier_5\n    , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom tuva.core.medical_claim\n\n\n),  __dbt__cte___stg_patient as (\n\nselect\n      person_id\n    , sex\n    , birth_date\n    , death_date\n    , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom tuva.core.patient\n), visit_codes as (\n\n    select\n          code\n        , code_system\n    from tuva.quality_measures._value_set_codes\n    where lower(concept_name) in (\n          'home healthcare services'\n        , 'office visit'\n        , 'encounter to document medications'\n        , 'psychological and/or neuropsychological test administration'\n    )\n\n)\n\n, visits_encounters as (\n\n    select\n          person_id\n        , coalesce(encounter.encounter_start_date, encounter.encounter_end_date) as min_date\n        , coalesce(encounter.encounter_end_date, encounter.encounter_start_date) as max_date\n    from __dbt__cte___stg_encounter as encounter\n    inner join tuva.quality_measures._int_nqf0420__performance_period as pp\n        on coalesce(encounter.encounter_end_date, encounter.encounter_start_date) >= pp.performance_period_begin\n            and coalesce(encounter.encounter_start_date, encounter.encounter_end_date) <= pp.performance_period_end\n    where lower(encounter_type) = 'home health'\n        or lower(encounter_group) in (\n              'office based'\n            , 'outpatient'\n    )\n\n)\n\n, procedures as (\n\n    select\n        person_id\n      , procedure_date\n      , coalesce(\n              normalized_code_type\n            , case\n                when lower(source_code_type) = 'cpt' then 'hcpcs'\n                when lower(source_code_type) = 'snomed' then 'snomed-ct'\n                else lower(source_code_type)\n              end\n          ) as code_type\n        , coalesce(\n              normalized_code\n            , source_code\n          ) as code\n    from __dbt__cte___stg_procedure\n    where coalesce(modifier_1, '') not in ('GQ', 'GT', '95')\n        and coalesce(modifier_2, '') not in ('GQ', 'GT', '95')\n        and coalesce(modifier_3, '') not in ('GQ', 'GT', '95')\n        and coalesce(modifier_4, '') not in ('GQ', 'GT', '95')\n        and coalesce(modifier_5, '') not in ('GQ', 'GT', '95')\n\n)\n\n, claims as (\n\n    select\n          person_id\n        , coalesce(claim_start_date, claim_end_date) as min_date\n        , coalesce(claim_end_date, claim_start_date) as max_date\n        , hcpcs_code\n    from __dbt__cte___stg_medical_claim\n    where coalesce(hcpcs_modifier_1, '') not in ('GQ', 'GT', '95')\n        and coalesce(hcpcs_modifier_2, '') not in ('GQ', 'GT', '95')\n        and coalesce(hcpcs_modifier_3, '') not in ('GQ', 'GT', '95')\n        and coalesce(hcpcs_modifier_4, '') not in ('GQ', 'GT', '95')\n        and coalesce(hcpcs_modifier_5, '') not in ('GQ', 'GT', '95')\n        and coalesce(place_of_service_code, '') not in ('02')\n\n)\n\n, procedure_encounters as (\n\n    select\n          procedures.person_id\n        , procedures.procedure_date as min_date\n        , procedures.procedure_date as max_date\n    from procedures\n    inner join tuva.quality_measures._int_nqf0420__performance_period as pp\n        on procedure_date between pp.performance_period_begin and pp.performance_period_end\n    inner join visit_codes\n        on procedures.code = visit_codes.code\n            and procedures.code_type = visit_codes.code_system\n\n)\n\n, claims_encounters as (\n\n    select\n          claims.person_id\n        , claims.min_date\n        , claims.max_date\n    from claims\n    inner join tuva.quality_measures._int_nqf0420__performance_period as pp\n        on claims.max_date >= pp.performance_period_begin\n            and claims.min_date <= pp.performance_period_end\n    inner join visit_codes\n        on claims.hcpcs_code = visit_codes.code\n            and visit_codes.code_system = 'hcpcs'\n\n)\n\n, all_encounters as (\n\n    select *, 'v' as visit_enc, cast(null as TEXT) as proc_enc, cast(null as TEXT) as claim_enc\n    from visits_encounters\n\n    union all\n\n    select *, cast(null as TEXT) as visit_enc, 'p' as proc_enc, cast(null as TEXT) as claim_enc\n    from procedure_encounters\n\n    union all\n\n    select *, cast(null as TEXT) as visit_enc, cast(null as TEXT) as proc_enc, 'c' as claim_enc\n    from claims_encounters\n\n)\n\n, encounters_by_patient as (\n\n    select\n          person_id\n        , max(max_date) as max_date\n        , coalesce(min(visit_enc), '') || coalesce(min(proc_enc), '') || coalesce(min(claim_enc), '') as qualifying_types\n    from all_encounters\n    group by person_id\n\n)\n\n, patients_with_age as (\n\n    select\n          p.person_id\n        , floor(datediff(\n        hour,\n        birth_date,\n        e.max_date\n        ) / 8760.0) as max_age\n        , qualifying_types\n    from __dbt__cte___stg_patient as p\n    inner join encounters_by_patient as e\n        on p.person_id = e.person_id\n    where p.death_date is null\n\n)\n\n, qualifying_patients as (\n\n    select\n        distinct\n          person_id\n        , max_age as age\n        , pp.performance_period_begin\n        , pp.performance_period_end\n        , pp.measure_id\n        , pp.measure_name\n        , pp.measure_version\n        , 1 as denominator_flag\n    from patients_with_age\n    cross join tuva.quality_measures._int_nqf0420__performance_period as pp\n    where max_age >= 18\n\n)\n\n, add_data_types as (\n\n    select\n          cast(person_id as TEXT) as person_id\n        , cast(age as integer) as age\n        , cast(performance_period_begin as date) as performance_period_begin\n        , cast(performance_period_end as date) as performance_period_end\n        , cast(measure_id as TEXT) as measure_id\n        , cast(measure_name as TEXT) as measure_name\n        , cast(measure_version as TEXT) as measure_version\n        , cast(denominator_flag as integer) as denominator_flag\n    from qualifying_patients\n\n)\n\nselect\n      person_id\n    , age\n    , performance_period_begin\n    , performance_period_end\n    , measure_id\n    , measure_name\n    , measure_version\n    , denominator_flag\n    , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom add_data_types", "relation_name": "tuva.quality_measures._int_nqf0420_denominator", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:32.863868Z", "completed_at": "2025-06-03T19:50:32.872001Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:32.873141Z", "completed_at": "2025-06-03T19:50:32.873145Z"}], "thread_id": "Thread-1", "execution_time": 0.029759883880615234, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.not_null_quality_measures__stg_core__encounter_person_id.1f62115a6f", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nwith __dbt__cte___stg_encounter as (\n\n\nselect\n      person_id\n    , encounter_id\n    , encounter_type\n    , encounter_group\n    , length_of_stay\n    , encounter_start_date\n    , encounter_end_date\n    , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom tuva.core.encounter\n\n\n) select person_id\nfrom __dbt__cte___stg_encounter\nwhere person_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:32.873792Z", "completed_at": "2025-06-03T19:50:32.892768Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:32.905029Z", "completed_at": "2025-06-03T19:50:32.905040Z"}], "thread_id": "Thread-3", "execution_time": 0.03371596336364746, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.readmissions__encounter", "compiled": true, "compiled_code": "\n\nwith __dbt__cte__readmissions__stg_core__encounter as (\n\n\nselect\n    encounter_id\n    , person_id\n    , encounter_start_date\n    , encounter_end_date\n    , discharge_disposition_code\n    , facility_id\n    , drg_code_type\n    , drg_code\n    , paid_amount\n    , primary_diagnosis_code\n    , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom tuva.core.encounter\nwhere encounter_type = 'acute inpatient'\n) -- Staging model for the input layer:\n-- stg_encounter input layer model.\n-- This contains one row for every unique encounter in the dataset.\n\nselect\n    cast(encounter_id as TEXT) as encounter_id\n    , cast(person_id as TEXT) as person_id\n    , cast(encounter_start_date as date) as admit_date\n    , cast(encounter_end_date as date) as discharge_date\n    , cast(discharge_disposition_code as TEXT) as discharge_disposition_code\n    , cast(facility_id as TEXT) as facility_id\n    , cast(drg_code_type as TEXT) as drg_code_type\n    , cast(drg_code as TEXT) as drg_code\n    , cast(paid_amount as numeric(28,6)) as paid_amount\n    , cast(primary_diagnosis_code as TEXT) as primary_diagnosis_code\n    , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom __dbt__cte__readmissions__stg_core__encounter", "relation_name": "tuva.readmissions._int_encounter", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:32.887130Z", "completed_at": "2025-06-03T19:50:32.905563Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:32.911512Z", "completed_at": "2025-06-03T19:50:32.911518Z"}], "thread_id": "Thread-4", "execution_time": 0.03869795799255371, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.ed_classification__int_filter_encounter_with_classification", "compiled": true, "compiled_code": "/*\nFilter conditions to those that were classified and pick the classification\nwith the greatest probability (that's the greatest logic). This logic removes\nany rows that were not classified.\n*/\n\n\nselect\n   a.*\n   , case greatest(edcnnpa, edcnpa, epct, noner, injury, psych, alcohol, drug)\n          when edcnnpa then 'edcnnpa'\n          when edcnpa then 'edcnpa'\n          when epct then 'epct'\n          when noner then 'noner'\n          when injury then 'injury'\n          when psych then 'psych'\n          when alcohol then 'alcohol'\n          when drug then 'drug'\n          else 'unclassified'\n   end as classification\nfrom tuva.ed_classification._int_by_provider_parent_organization as a\nwhere ed_classification_capture = 1", "relation_name": "tuva.ed_classification._int_filter_encounter_with_classification", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:32.893445Z", "completed_at": "2025-06-03T19:50:32.912335Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:32.913272Z", "completed_at": "2025-06-03T19:50:32.913276Z"}], "thread_id": "Thread-2", "execution_time": 0.0265960693359375, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.ahrq_measures__int_pqi_shared_exclusion_union", "compiled": true, "compiled_code": "\n\n-- Missing Age Exclusion\nselect\n    denom.encounter_id\n  , denom.data_source\n  , 'missing age' as exclusion_reason\n  , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom tuva.ahrq_measures._stg_pqi_inpatient_encounter as denom\ninner join tuva.ahrq_measures._int_pqi_shared_exclusions_missing_age as age\n  on denom.person_id = age.person_id\n  and denom.data_source = age.data_source\n\nunion all\n\n-- Missing Gender Exclusion\nselect\n    denom.encounter_id\n  , denom.data_source\n  , 'missing gender' as exclusion_reason\n  , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom tuva.ahrq_measures._stg_pqi_inpatient_encounter as denom\ninner join tuva.ahrq_measures._int_pqi_shared_exclusion_missing_gender as gender\n  on denom.person_id = gender.person_id\n  and denom.data_source = gender.data_source\n\nunion all\n\n-- Missing Dates Exclusion\nselect\n    denom.encounter_id\n  , denom.data_source\n  , 'missing dates' as exclusion_reason\n  , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom tuva.ahrq_measures._stg_pqi_inpatient_encounter as denom\ninner join tuva.ahrq_measures._int_pqi_shared_exclusion_missing_dates as dates\n  on denom.encounter_id = dates.encounter_id\n  and denom.data_source = dates.data_source\n\nunion all\n\n-- Missing Primary Diagnosis Exclusion\nselect\n    denom.encounter_id\n  , denom.data_source\n  , 'missing primary diagnosis' as exclusion_reason\n  , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom tuva.ahrq_measures._stg_pqi_inpatient_encounter as denom\ninner join tuva.ahrq_measures._int_pqi_shared_exclusion_missing_primary_dx as dx\n  on denom.encounter_id = dx.encounter_id\n  and denom.data_source = dx.data_source\n\nunion all\n\n-- Transfer Exclusion\nselect\n    denom.encounter_id\n  , denom.data_source\n  , 'transfer' as exclusion_reason\n  , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom tuva.ahrq_measures._stg_pqi_inpatient_encounter as denom\ninner join tuva.ahrq_measures._int_pqi_shared_exclusion_transfer as tx\n  on denom.encounter_id = tx.encounter_id\n  and denom.data_source = tx.data_source\n\nunion all\n\n-- Ungroupable DRG Exclusion\nselect\n    denom.encounter_id\n  , denom.data_source\n  , 'ungroupable DRG' as exclusion_reason\n  , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom tuva.ahrq_measures._stg_pqi_inpatient_encounter as denom\ninner join tuva.ahrq_measures._int_pqi_shared_exclusion_ungroupable_drg as drg\n  on denom.encounter_id = drg.encounter_id\n  and denom.data_source = drg.data_source", "relation_name": "tuva.ahrq_measures._int_pqi_shared_exclusion_union", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:32.905871Z", "completed_at": "2025-06-03T19:50:32.913071Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:32.932519Z", "completed_at": "2025-06-03T19:50:32.932530Z"}], "thread_id": "Thread-1", "execution_time": 0.040415048599243164, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_utils_unique_combination_of_columns_fhir_preprocessing__condition_patient_internal_id__resource_internal_id.ade4767273", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith validation_errors as (\n\n    select\n        patient_internal_id, resource_internal_id\n    from tuva.fhir_preprocessing.condition\n    group by patient_internal_id, resource_internal_id\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:32.913850Z", "completed_at": "2025-06-03T19:50:32.970641Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:32.987611Z", "completed_at": "2025-06-03T19:50:32.987623Z"}], "thread_id": "Thread-3", "execution_time": 0.07562494277954102, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.quality_measures__int_cqm130_exclusions", "compiled": true, "compiled_code": "with  __dbt__cte___stg_condition as (\n\nselect\n      person_id\n    , claim_id\n    , encounter_id\n    , recorded_date\n    , source_code_type\n    , source_code\n    , normalized_code_type\n    , normalized_code\n    , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom tuva.core.condition\n),  __dbt__cte___stg_procedure as (\n\nselect\n      person_id\n    , encounter_id\n    , procedure_date\n    , source_code_type\n    , source_code\n    , normalized_code_type\n    , normalized_code\n    , modifier_1\n    , modifier_2\n    , modifier_3\n    , modifier_4\n    , modifier_5\n    , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom tuva.core.procedure\n),  __dbt__cte___stg_medical_claim as (\n\n\nselect\n      person_id\n    , claim_id\n    , claim_start_date\n    , claim_end_date\n    , place_of_service_code\n    , hcpcs_code\n    , hcpcs_modifier_1\n    , hcpcs_modifier_2\n    , hcpcs_modifier_3\n    , hcpcs_modifier_4\n    , hcpcs_modifier_5\n    , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom tuva.core.medical_claim\n\n\n), exclusion_codes as (\n\n    select\n          code\n        , code_system\n        , concept_name\n    from tuva.quality_measures._value_set_codes\n    where lower(concept_name) in (\n            'medical reason'\n    )\n\n)\n\n, conditions as (\n\n    select\n          person_id\n        , recorded_date\n        , claim_id\n        , coalesce(\n              normalized_code_type\n            , case\n                when lower(source_code_type) = 'snomed' then 'snomed-ct'\n                else lower(source_code_type)\n              end\n          ) as code_type\n        , coalesce(\n              normalized_code\n            , source_code\n          ) as code\n    from __dbt__cte___stg_condition\n    where recorded_date between (\n  select \n    performance_period_begin\n  from tuva.quality_measures._int_cqm130__performance_period\n) and (\n  select \n    performance_period_end\n  from tuva.quality_measures._int_cqm130__performance_period\n)\n\n)\n\n, procedures as (\n\n    select\n          person_id\n        , procedure_date\n        , coalesce(\n              normalized_code_type\n            , case\n                when lower(source_code_type) = 'cpt' then 'hcpcs'\n                when lower(source_code_type) = 'snomed' then 'snomed-ct'\n                else lower(source_code_type)\n              end\n          ) as code_type\n        , coalesce(\n              normalized_code\n            , source_code\n          ) as code\n    from __dbt__cte___stg_procedure\n    where procedure_date between (\n  select \n    performance_period_begin\n  from tuva.quality_measures._int_cqm130__performance_period\n) and (\n  select \n    performance_period_end\n  from tuva.quality_measures._int_cqm130__performance_period\n)\n\n)\n\n, medical_claim as (\n\n    select\n          person_id\n        , claim_start_date\n        , claim_end_date\n        , hcpcs_code\n    from __dbt__cte___stg_medical_claim\n    where coalesce(claim_end_date, claim_start_date) between (\n  select \n    performance_period_begin\n  from tuva.quality_measures._int_cqm130__performance_period\n) and (\n  select \n    performance_period_end\n  from tuva.quality_measures._int_cqm130__performance_period\n)\n\n)\n\n, condition_exclusions as (\n\n    select\n          conditions.person_id\n        , conditions.claim_id\n        , conditions.recorded_date\n        , exclusion_codes.concept_name as concept_name\n    from conditions\n    inner join exclusion_codes\n      on conditions.code = exclusion_codes.code\n        and conditions.code_type = exclusion_codes.code_system\n\n)\n\n, procedure_exclusions as (\n\n    select\n          procedures.person_id\n        , procedures.procedure_date\n        , exclusion_codes.concept_name as concept_name\n    from procedures\n    inner join exclusion_codes\n      on procedures.code = exclusion_codes.code\n        and procedures.code_type = exclusion_codes.code_system\n\n)\n\n, med_claim_exclusions as (\n\n    select\n          medical_claim.person_id\n        , coalesce(medical_claim.claim_end_date, medical_claim.claim_start_date) as exclusion_date\n        , medical_claim.hcpcs_code\n        , exclusion_codes.concept_name as concept_name\n    from medical_claim\n    inner join exclusion_codes\n      on medical_claim.hcpcs_code = exclusion_codes.code\n        and exclusion_codes.code_system = 'hcpcs'\n\n)\n\n, patients_with_exclusions as (\n\n    select\n          person_id\n        , recorded_date as exclusion_date\n        , concept_name as exclusion_reason\n    from condition_exclusions\n\n    union all\n\n    select\n          person_id\n        , procedure_date as exclusion_date\n        , concept_name as exclusion_reason\n    from procedure_exclusions\n\n    union all\n\n    select\n          person_id\n        , exclusion_date\n        , concept_name as exclusion_reason\n    from med_claim_exclusions\n\n)\n\n, valid_exclusions as (\n\n  select\n        patients_with_exclusions.person_id\n      , patients_with_exclusions.exclusion_date\n      , patients_with_exclusions.exclusion_reason\n  from patients_with_exclusions\n  inner join tuva.quality_measures._int_cqm130_denominator as denominator\n      on patients_with_exclusions.person_id = denominator.person_id\n\n)\n\n, add_data_types as (\n\n    select\n        distinct\n          cast(person_id as TEXT) as person_id\n        , cast(exclusion_date as date) as exclusion_date\n        , cast(exclusion_reason as TEXT) as exclusion_reason\n        , cast(1 as integer) as exclusion_flag\n    from valid_exclusions\n\n)\n\nselect\n      person_id\n    , exclusion_date\n    , exclusion_reason\n    , exclusion_flag\n    , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom add_data_types", "relation_name": "tuva.quality_measures._int_cqm130_exclusions", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:32.946273Z", "completed_at": "2025-06-03T19:50:33.070605Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:33.083724Z", "completed_at": "2025-06-03T19:50:33.083732Z"}], "thread_id": "Thread-4", "execution_time": 0.1702101230621338, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.quality_measures__int_cqm130_numerator", "compiled": true, "compiled_code": "\n\nwith  __dbt__cte___stg_procedure as (\n\nselect\n      person_id\n    , encounter_id\n    , procedure_date\n    , source_code_type\n    , source_code\n    , normalized_code_type\n    , normalized_code\n    , modifier_1\n    , modifier_2\n    , modifier_3\n    , modifier_4\n    , modifier_5\n    , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom tuva.core.procedure\n),  __dbt__cte___stg_medical_claim as (\n\n\nselect\n      person_id\n    , claim_id\n    , claim_start_date\n    , claim_end_date\n    , place_of_service_code\n    , hcpcs_code\n    , hcpcs_modifier_1\n    , hcpcs_modifier_2\n    , hcpcs_modifier_3\n    , hcpcs_modifier_4\n    , hcpcs_modifier_5\n    , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom tuva.core.medical_claim\n\n\n), denominator as (\n\n    select\n          person_id\n        , procedure_encounter_date\n        , claims_encounter_date\n        , performance_period_begin\n        , performance_period_end\n        , measure_id\n        , measure_name\n        , measure_version\n    from tuva.quality_measures._int_cqm130_denominator\n\n)\n\n, medication_code as (\n\n    select\n          code\n        , code_system\n        , concept_name\n    from tuva.quality_measures._value_set_codes\n    where lower(concept_name) in (\n          'eligible clinician attests to documenting current medications'\n    )\n\n)\n\n, procedures as (\n\n    select\n        person_id\n      , procedure_date\n      , coalesce(\n              normalized_code_type\n            , case\n                when lower(source_code_type) = 'cpt' then 'hcpcs'\n                when lower(source_code_type) = 'snomed' then 'snomed-ct'\n                else lower(source_code_type)\n              end\n          ) as code_type\n        , coalesce(\n              normalized_code\n            , source_code\n          ) as code\n    from __dbt__cte___stg_procedure\n\n)\n\n, documenting_meds_procedures as (\n\n    select\n          person_id\n        , procedure_date\n    from procedures\n    inner join medication_code\n      on procedures.code = medication_code.code\n        and procedures.code_type = medication_code.code_system\n\n)\n\n, documenting_meds_claims as (\n\n    select\n          person_id\n        , coalesce(claim_end_date, claim_start_date) as encounter_date\n    from __dbt__cte___stg_medical_claim as medical_claim\n    inner join medication_code\n        on medical_claim.hcpcs_code = medication_code.code\n          and medication_code.code_system = 'hcpcs'\n\n)\n\n, qualifying_procedure as (\n\n    select\n          documenting_meds_procedures.person_id\n        , documenting_meds_procedures.procedure_date as encounter_date\n        , denominator.performance_period_begin\n        , denominator.performance_period_end\n        , denominator.measure_id\n        , denominator.measure_name\n        , denominator.measure_version\n    from documenting_meds_procedures\n    inner join denominator\n      on documenting_meds_procedures.person_id = denominator.person_id\n        and documenting_meds_procedures.procedure_date = denominator.procedure_encounter_date\n\n)\n\n, qualifying_claims as (\n\n    select\n          documenting_meds_claims.person_id\n        , documenting_meds_claims.encounter_date\n        , denominator.performance_period_begin\n        , denominator.performance_period_end\n        , denominator.measure_id\n        , denominator.measure_name\n        , denominator.measure_version\n    from documenting_meds_claims\n    inner join denominator\n      on documenting_meds_claims.person_id = denominator.person_id\n        and documenting_meds_claims.encounter_date = denominator.claims_encounter_date\n\n)\n\n, qualifying_cares as (\n\n    select\n          person_id\n        , encounter_date\n        , performance_period_begin\n        , performance_period_end\n        , measure_id\n        , measure_name\n        , measure_version\n        , cast(1 as integer) as numerator_flag\n    from qualifying_procedure\n\n    union all\n\n    select\n          person_id\n        , encounter_date\n        , performance_period_begin\n        , performance_period_end\n        , measure_id\n        , measure_name\n        , measure_version\n        , cast(1 as integer) as numerator_flag\n    from qualifying_claims\n\n)\n\n, add_data_types as (\n\n     select distinct\n          cast(person_id as TEXT) as person_id\n        , cast(performance_period_begin as date) as performance_period_begin\n        , cast(performance_period_end as date) as performance_period_end\n        , cast(measure_id as TEXT) as measure_id\n        , cast(measure_name as TEXT) as measure_name\n        , cast(measure_version as TEXT) as measure_version\n        , cast(encounter_date as date) as evidence_date\n        , cast(null as TEXT) as evidence_value\n        , cast(numerator_flag as integer) as numerator_flag\n      from qualifying_cares\n\n)\n\nselect\n      person_id\n    , performance_period_begin\n    , performance_period_end\n    , measure_id\n    , measure_name\n    , measure_version\n    , evidence_date\n    , evidence_value\n    , numerator_flag\n    , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom add_data_types", "relation_name": "tuva.quality_measures._int_cqm130_numerator", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:32.975015Z", "completed_at": "2025-06-03T19:50:33.084739Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:33.085273Z", "completed_at": "2025-06-03T19:50:33.085278Z"}], "thread_id": "Thread-2", "execution_time": 0.13936209678649902, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.quality_measures__int_cqm438_exclusions", "compiled": true, "compiled_code": "with  __dbt__cte___stg_condition as (\n\nselect\n      person_id\n    , claim_id\n    , encounter_id\n    , recorded_date\n    , source_code_type\n    , source_code\n    , normalized_code_type\n    , normalized_code\n    , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom tuva.core.condition\n),  __dbt__cte___stg_medical_claim as (\n\n\nselect\n      person_id\n    , claim_id\n    , claim_start_date\n    , claim_end_date\n    , place_of_service_code\n    , hcpcs_code\n    , hcpcs_modifier_1\n    , hcpcs_modifier_2\n    , hcpcs_modifier_3\n    , hcpcs_modifier_4\n    , hcpcs_modifier_5\n    , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom tuva.core.medical_claim\n\n\n),  __dbt__cte___stg_observation as (\n\n\nselect\n      person_id\n    , encounter_id\n    , observation_date\n    , result\n    , source_code_type\n    , source_code\n    , normalized_code_type\n    , normalized_code\n    , normalized_description\n    , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom tuva.core.observation\n\n\n),  __dbt__cte___stg_procedure as (\n\nselect\n      person_id\n    , encounter_id\n    , procedure_date\n    , source_code_type\n    , source_code\n    , normalized_code_type\n    , normalized_code\n    , modifier_1\n    , modifier_2\n    , modifier_3\n    , modifier_4\n    , modifier_5\n    , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom tuva.core.procedure\n),  __dbt__cte___stg_medication as (\n\n\nselect\n      person_id\n    , encounter_id\n    , prescribing_date\n    , dispensing_date\n    , source_code_type\n    , source_code\n    , ndc_code\n    , rxnorm_code\n    , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom tuva.core.medication\n\n\n),  __dbt__cte___stg_pharmacy_claim as (\n\n\nselect\n      person_id\n    , dispensing_date\n    , ndc_code\n    , days_supply\n    , paid_date\n    , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom tuva.core.pharmacy_claim\n\n\n), exclusion_codes as (\n\n    select\n          code\n        , case code_system\n            when 'SNOMEDCT' then 'snomed-ct'\n            when 'ICD9CM' then 'icd-9-cm'\n            when 'ICD10CM' then 'icd-10-cm'\n            when 'CPT' then 'hcpcs'\n            when 'ICD10PCS' then 'icd-10-pcs'\n          else lower(code_system) end as code_system\n        , concept_name\n    from tuva.quality_measures._value_set_codes\n    where lower(concept_name) in (\n            'rhabdomyolysis'\n          , 'breastfeeding'\n          , 'liver disease'\n          , 'hepatitis a'\n          , 'hepatitis b'\n          , 'documentation of medical reason for no statin therapy'\n          , 'statin allergen'\n          , 'end stage renal disease'\n          , 'statin associated muscle symptoms'\n          , 'medical reason'\n    )\n\n)\n\n, valid_hospice_palliative as (\n\n  select\n      person_id\n    , exclusion_date\n    , exclusion_reason\n    , exclusion_type\n  from tuva.quality_measures._int_shared_exclusions_hospice_palliative\n  where exclusion_date between (\n  select \n    performance_period_begin\n  from tuva.quality_measures._int_cqm438__performance_period\n\n) and (\n  select \n    performance_period_end\n  from tuva.quality_measures._int_cqm438__performance_period\n\n)\n\n)\n\n, conditions as (\n\n    select\n          person_id\n        , claim_id\n        , recorded_date\n        , coalesce(\n              normalized_code_type\n            , case\n                when lower(source_code_type) = 'snomed' then 'snomed-ct'\n                else lower(source_code_type)\n              end\n          ) as code_type\n        , coalesce(\n              normalized_code\n            , source_code\n          ) as code\n    from __dbt__cte___stg_condition\n    where recorded_date between (\n  select \n    performance_period_begin\n  from tuva.quality_measures._int_cqm438__performance_period\n\n) and (\n  select \n    performance_period_end\n  from tuva.quality_measures._int_cqm438__performance_period\n\n)\n\n)\n\n, medical_claim as (\n\n    select\n          person_id\n        , claim_id\n        , claim_start_date\n        , claim_end_date\n        , hcpcs_code\n        , place_of_service_code\n    from __dbt__cte___stg_medical_claim\n    where coalesce(claim_end_date, claim_start_date) between (\n  select \n    performance_period_begin\n  from tuva.quality_measures._int_cqm438__performance_period\n\n) and (\n  select \n    performance_period_end\n  from tuva.quality_measures._int_cqm438__performance_period\n\n)\n\n)\n\n, observations as (\n\n    select\n          person_id\n        , observation_date\n        , coalesce(\n              normalized_code_type\n            , case\n                when lower(source_code_type) = 'cpt' then 'hcpcs'\n                when lower(source_code_type) = 'snomed' then 'snomed-ct'\n                else lower(source_code_type)\n              end\n          ) as code_type\n        , coalesce(\n              normalized_code\n            , source_code\n          ) as code\n    from __dbt__cte___stg_observation\n    where observation_date between (\n  select \n    performance_period_begin\n  from tuva.quality_measures._int_cqm438__performance_period\n\n) and (\n  select \n    performance_period_end\n  from tuva.quality_measures._int_cqm438__performance_period\n\n)\n\n)\n\n, procedures as (\n\n    select\n          person_id\n        , procedure_date\n        , coalesce(\n              normalized_code_type\n            , case\n                when lower(source_code_type) = 'cpt' then 'hcpcs'\n                when lower(source_code_type) = 'snomed' then 'snomed-ct'\n                else lower(source_code_type)\n              end\n          ) as code_type\n        , coalesce(\n              normalized_code\n            , source_code\n          ) as code\n    from __dbt__cte___stg_procedure\n    where procedure_date between (\n  select \n    performance_period_begin\n  from tuva.quality_measures._int_cqm438__performance_period\n\n) and (\n  select \n    performance_period_end\n  from tuva.quality_measures._int_cqm438__performance_period\n\n)\n\n)\n\n, medications as (\n\n    select\n        person_id\n      , coalesce(prescribing_date, dispensing_date) as exclusion_date\n      , source_code\n      , source_code_type\n    from __dbt__cte___stg_medication\n\n)\n\n, pharmacy_claims as (\n\n    select\n        person_id\n      , dispensing_date\n      , ndc_code\n    from __dbt__cte___stg_pharmacy_claim\n\n)\n\n, condition_exclusions as (\n\n    select\n          conditions.person_id\n        , conditions.claim_id\n        , conditions.recorded_date\n        , exclusion_codes.concept_name as concept_name\n    from conditions\n         inner join exclusion_codes\n            on conditions.code = exclusion_codes.code\n            and conditions.code_type = exclusion_codes.code_system\n\n)\n\n, med_claim_exclusions as (\n\n    select\n          medical_claim.person_id\n        , medical_claim.claim_id\n        , medical_claim.claim_start_date\n        , medical_claim.claim_end_date\n        , medical_claim.hcpcs_code\n        , exclusion_codes.concept_name as concept_name\n    from medical_claim\n         inner join exclusion_codes\n            on medical_claim.hcpcs_code = exclusion_codes.code\n    where exclusion_codes.code_system = 'hcpcs'\n\n)\n\n, observation_exclusions as (\n\n    select\n          observations.person_id\n        , observations.observation_date\n        , exclusion_codes.concept_name as concept_name\n    from observations\n    inner join exclusion_codes\n        on observations.code = exclusion_codes.code\n        and observations.code_type = exclusion_codes.code_system\n\n)\n\n, procedure_exclusions as (\n\n    select\n          procedures.person_id\n        , procedures.procedure_date\n        , exclusion_codes.concept_name as concept_name\n    from procedures\n    inner join exclusion_codes\n        on procedures.code = exclusion_codes.code\n          and procedures.code_type = exclusion_codes.code_system\n\n)\n\n, medication_exclusions as (\n\n    select\n          medications.person_id\n        , medications.exclusion_date\n        , exclusion_codes.concept_name as concept_name\n    from medications\n    inner join exclusion_codes\n        on medications.source_code = exclusion_codes.code\n          and medications.source_code_type = exclusion_codes.code_system\n\n)\n\n, pharmacy_claims_exclusions as (\n\n    select\n          pharmacy_claims.person_id\n        , pharmacy_claims.dispensing_date\n        , exclusion_codes.concept_name as concept_name\n    from pharmacy_claims\n    inner join exclusion_codes\n        on pharmacy_claims.ndc_code = exclusion_codes.code\n        and lower(exclusion_codes.code_system) = 'ndc'\n\n)\n\n, patients_with_exclusions as (\n\n    select\n          person_id\n        , recorded_date as exclusion_date\n        , concept_name as exclusion_reason\n    from condition_exclusions\n\n    union all\n\n    select\n          person_id\n        , coalesce(claim_end_date, claim_start_date) as exclusion_date\n        , concept_name as exclusion_reason\n    from med_claim_exclusions\n\n    union all\n\n    select\n          person_id\n        , observation_date as exclusion_date\n        , concept_name as exclusion_reason\n    from observation_exclusions\n\n    union all\n\n    select\n          person_id\n        , procedure_date as exclusion_date\n        , concept_name as exclusion_reason\n    from procedure_exclusions\n\n    union all\n\n    select\n          person_id\n        , exclusion_date\n        , concept_name as exclusion_reason\n    from medication_exclusions\n\n    union all\n\n    select\n          person_id\n        , dispensing_date as exclusion_date\n        , concept_name as exclusion_reason\n    from pharmacy_claims_exclusions\n\n    union all\n\n    select\n          person_id\n        , exclusion_date\n        , exclusion_reason\n    from valid_hospice_palliative\n\n)\n\n, valid_exclusions as (\n\n  select\n        patients_with_exclusions.person_id\n      , patients_with_exclusions.exclusion_date\n      , patients_with_exclusions.exclusion_reason\n  from patients_with_exclusions\n  inner join tuva.quality_measures._int_cqm438_denominator as denominator\n      on patients_with_exclusions.person_id = denominator.person_id\n\n)\n\n, add_data_types as (\n\n    select\n        distinct\n          cast(person_id as TEXT) as person_id\n        , cast(exclusion_date as date) as exclusion_date\n        , cast(exclusion_reason as TEXT) as exclusion_reason\n        , cast(1 as integer) as exclusion_flag\n    from valid_exclusions\n\n)\n\nselect\n      person_id\n    , exclusion_date\n    , exclusion_reason\n    , exclusion_flag\n    , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom add_data_types", "relation_name": "tuva.quality_measures._int_cqm438_exclusions", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:33.032405Z", "completed_at": "2025-06-03T19:50:33.085627Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:33.086526Z", "completed_at": "2025-06-03T19:50:33.086530Z"}], "thread_id": "Thread-3", "execution_time": 0.05466794967651367, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.quality_measures__int_nqf0420_exclusions", "compiled": true, "compiled_code": "with  __dbt__cte___stg_procedure as (\n\nselect\n      person_id\n    , encounter_id\n    , procedure_date\n    , source_code_type\n    , source_code\n    , normalized_code_type\n    , normalized_code\n    , modifier_1\n    , modifier_2\n    , modifier_3\n    , modifier_4\n    , modifier_5\n    , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom tuva.core.procedure\n),  __dbt__cte___stg_medical_claim as (\n\n\nselect\n      person_id\n    , claim_id\n    , claim_start_date\n    , claim_end_date\n    , place_of_service_code\n    , hcpcs_code\n    , hcpcs_modifier_1\n    , hcpcs_modifier_2\n    , hcpcs_modifier_3\n    , hcpcs_modifier_4\n    , hcpcs_modifier_5\n    , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom tuva.core.medical_claim\n\n\n), denominator as (\n\n    select\n        person_id\n    from tuva.quality_measures._int_nqf0420_denominator\n\n)\n\n, exclusion_codes as (\n\n    select\n          code\n        , code_system\n        , concept_name\n    from tuva.quality_measures._value_set_codes\n    where lower(concept_name) in (\n          'patient is not eligible for a pain assessment'\n      )\n\n)\n\n, procedures as (\n\n    select\n          person_id\n        , procedure_date\n        , coalesce(\n              normalized_code_type\n            , case\n                when lower(source_code_type) = 'cpt' then 'hcpcs'\n                when lower(source_code_type) = 'snomed' then 'snomed-ct'\n                else lower(source_code_type)\n              end\n          ) as code_type\n        , coalesce(\n              normalized_code\n            , source_code\n          ) as code\n    from __dbt__cte___stg_procedure\n    where procedure_date between (\n  select \n    performance_period_begin\n  from tuva.quality_measures._int_nqf0420__performance_period\n\n) and (\n  select \n    performance_period_end\n  from tuva.quality_measures._int_nqf0420__performance_period\n\n)\n\n)\n\n, medical_claim as (\n\n    select\n          person_id\n        , claim_start_date\n        , claim_end_date\n        , hcpcs_code\n    from __dbt__cte___stg_medical_claim\n    where coalesce(claim_end_date, claim_start_date) between (\n  select \n    performance_period_begin\n  from tuva.quality_measures._int_nqf0420__performance_period\n\n) and (\n  select \n    performance_period_end\n  from tuva.quality_measures._int_nqf0420__performance_period\n\n)\n\n)\n\n, procedure_exclusions as (\n\n    select\n          procedures.person_id\n        , procedures.procedure_date\n        , exclusion_codes.concept_name as concept_name\n    from procedures\n    inner join exclusion_codes\n        on procedures.code = exclusion_codes.code\n          and procedures.code_type = exclusion_codes.code_system\n\n)\n\n, med_claim_exclusions as (\n\n    select\n          medical_claim.person_id\n        , coalesce(medical_claim.claim_end_date, medical_claim.claim_start_date) as exclusion_date\n        , medical_claim.hcpcs_code\n        , exclusion_codes.concept_name as concept_name\n    from medical_claim\n    inner join exclusion_codes\n      on medical_claim.hcpcs_code = exclusion_codes.code\n        and exclusion_codes.code_system = 'hcpcs'\n\n)\n\n, patients_with_exclusions as (\n\n    select\n        person_id\n      , exclusion_date\n      , concept_name as exclusion_reason\n    from med_claim_exclusions\n\n    union all\n\n    select\n          person_id\n        , procedure_date as exclusion_date\n        , concept_name as exclusion_reason\n    from procedure_exclusions\n\n)\n\n, valid_exclusions as (\n\n  select\n        patients_with_exclusions.person_id\n      , patients_with_exclusions.exclusion_date\n      , patients_with_exclusions.exclusion_reason\n  from patients_with_exclusions\n  inner join denominator\n      on patients_with_exclusions.person_id = denominator.person_id\n\n)\n\n, add_data_types as (\n\n    select\n        distinct\n          cast(person_id as TEXT) as person_id\n        , cast(exclusion_date as date) as exclusion_date\n        , cast(exclusion_reason as TEXT) as exclusion_reason\n        , cast(1 as integer) as exclusion_flag\n    from valid_exclusions\n\n)\n\nselect\n      person_id\n    , exclusion_date\n    , exclusion_reason\n    , exclusion_flag\n    , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom add_data_types", "relation_name": "tuva.quality_measures._int_nqf0420_exclusions", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:33.012823Z", "completed_at": "2025-06-03T19:50:33.086068Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:33.099568Z", "completed_at": "2025-06-03T19:50:33.099578Z"}], "thread_id": "Thread-1", "execution_time": 0.1408829689025879, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.quality_measures__int_cqm438_numerator", "compiled": true, "compiled_code": "\n\nwith  __dbt__cte___stg_procedure as (\n\nselect\n      person_id\n    , encounter_id\n    , procedure_date\n    , source_code_type\n    , source_code\n    , normalized_code_type\n    , normalized_code\n    , modifier_1\n    , modifier_2\n    , modifier_3\n    , modifier_4\n    , modifier_5\n    , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom tuva.core.procedure\n),  __dbt__cte___stg_pharmacy_claim as (\n\n\nselect\n      person_id\n    , dispensing_date\n    , ndc_code\n    , days_supply\n    , paid_date\n    , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom tuva.core.pharmacy_claim\n\n\n),  __dbt__cte___stg_medication as (\n\n\nselect\n      person_id\n    , encounter_id\n    , prescribing_date\n    , dispensing_date\n    , source_code_type\n    , source_code\n    , ndc_code\n    , rxnorm_code\n    , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom tuva.core.medication\n\n\n), denominator as (\n\n    select\n          person_id\n        , performance_period_begin\n        , performance_period_end\n        , measure_id\n        , measure_name\n        , measure_version\n    from tuva.quality_measures._int_cqm438_denominator\n\n)\n\n, statin_codes as (\n\n    select\n          code\n        , code_system\n        , concept_name\n    from tuva.quality_measures._value_set_codes\n    where lower(concept_name) in (\n          'high intensity statin therapy'\n        , 'low intensity statin therapy'\n        , 'moderate intensity statin therapy'\n        , 'statin therapy'\n    )\n\n)\n\n, procedures as (\n\n    select\n        person_id\n      , procedure_date\n      , coalesce(\n              normalized_code_type\n            , case\n                when lower(source_code_type) = 'cpt' then 'hcpcs'\n                when lower(source_code_type) = 'snomed' then 'snomed-ct'\n                else lower(source_code_type)\n              end\n          ) as code_type\n        , coalesce(\n              normalized_code\n            , source_code\n          ) as code\n    from __dbt__cte___stg_procedure\n\n)\n\n, procedure_statin_related as (\n\n    select\n          procedures.person_id\n        , procedures.procedure_date as evidence_date\n    from procedures\n    inner join statin_codes\n        on procedures.code = statin_codes.code\n            and procedures.code_type = statin_codes.code_system\n\n)\n\n, pharmacy_claims_statin_related as (\n\n    select\n        person_id\n      , dispensing_date as evidence_date\n      , ndc_code\n    from __dbt__cte___stg_pharmacy_claim as pharmacy_claims\n    inner join statin_codes\n    on pharmacy_claims.ndc_code = statin_codes.code\n        and lower(statin_codes.code_system) = 'ndc'\n\n)\n\n, medication_statin_related as (\n\n    select\n          person_id\n        , coalesce(dispensing_date, prescribing_date) as evidence_date\n        , source_code\n        , source_code_type\n    from __dbt__cte___stg_medication as medications\n    inner join statin_codes\n        on medications.source_code = statin_codes.code\n        and medications.source_code_type = statin_codes.code_system\n\n)\n\n, qualifying_patients as (\n\n    select\n          procedure_statin_related.person_id\n        , procedure_statin_related.evidence_date\n    from procedure_statin_related\n\n    union all\n\n    select\n          pharmacy_claims_statin_related.person_id\n        , pharmacy_claims_statin_related.evidence_date\n    from pharmacy_claims_statin_related\n\n    union all\n\n    select\n          medication_statin_related.person_id\n        , medication_statin_related.evidence_date\n    from medication_statin_related\n\n)\n\n, qualifying_patients_with_denominator as (\n\n    select\n          qualifying_patients.person_id\n        , qualifying_patients.evidence_date\n        , denominator.performance_period_begin\n        , denominator.performance_period_end\n        , denominator.measure_id\n        , denominator.measure_name\n        , denominator.measure_version\n        , cast(1 as integer) as numerator_flag\n    from qualifying_patients\n    inner join denominator\n    on qualifying_patients.person_id = denominator.person_id\n    and evidence_date between\n            denominator.performance_period_begin and\n                denominator.performance_period_end\n\n)\n\n, add_data_types as (\n\n     select distinct\n          cast(person_id as TEXT) as person_id\n        , cast(performance_period_begin as date) as performance_period_begin\n        , cast(performance_period_end as date) as performance_period_end\n        , cast(measure_id as TEXT) as measure_id\n        , cast(measure_name as TEXT) as measure_name\n        , cast(measure_version as TEXT) as measure_version\n        , cast(evidence_date as date) as evidence_date\n        , cast(null as TEXT) as evidence_value\n        , cast(numerator_flag as integer) as numerator_flag\n    from qualifying_patients_with_denominator\n\n)\n\nselect\n      person_id\n    , performance_period_begin\n    , performance_period_end\n    , measure_id\n    , measure_name\n    , measure_version\n    , evidence_date\n    , evidence_value\n    , numerator_flag\n    , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom add_data_types", "relation_name": "tuva.quality_measures._int_cqm438_numerator", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:33.086892Z", "completed_at": "2025-06-03T19:50:33.113617Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:33.121668Z", "completed_at": "2025-06-03T19:50:33.121676Z"}], "thread_id": "Thread-4", "execution_time": 0.0368039608001709, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.quality_measures__int_nqf0420_numerator", "compiled": true, "compiled_code": "\n\nwith  __dbt__cte___stg_procedure as (\n\nselect\n      person_id\n    , encounter_id\n    , procedure_date\n    , source_code_type\n    , source_code\n    , normalized_code_type\n    , normalized_code\n    , modifier_1\n    , modifier_2\n    , modifier_3\n    , modifier_4\n    , modifier_5\n    , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom tuva.core.procedure\n),  __dbt__cte___stg_medical_claim as (\n\n\nselect\n      person_id\n    , claim_id\n    , claim_start_date\n    , claim_end_date\n    , place_of_service_code\n    , hcpcs_code\n    , hcpcs_modifier_1\n    , hcpcs_modifier_2\n    , hcpcs_modifier_3\n    , hcpcs_modifier_4\n    , hcpcs_modifier_5\n    , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom tuva.core.medical_claim\n\n\n), denominator as (\n\n    select\n          person_id\n        , performance_period_begin\n        , performance_period_end\n        , measure_id\n        , measure_name\n        , measure_version\n    from tuva.quality_measures._int_nqf0420_denominator\n\n)\n\n, pain_assessment_code as (\n\n    select\n          code\n        , code_system\n        , concept_name\n    from tuva.quality_measures._value_set_codes\n    where lower(concept_name) in (\n          'pain assessment documented'\n    )\n\n)\n\n, procedures as (\n\n    select\n        person_id\n      , procedure_date\n      , coalesce(\n              normalized_code_type\n            , case\n                when lower(source_code_type) = 'cpt' then 'hcpcs'\n                when lower(source_code_type) = 'snomed' then 'snomed-ct'\n                else lower(source_code_type)\n              end\n          ) as code_type\n        , coalesce(\n              normalized_code\n            , source_code\n          ) as code\n    from __dbt__cte___stg_procedure\n\n)\n\n, pain_assessment_procedures as (\n\n    select\n          procedures.person_id\n        , procedures.procedure_date as evidence_date\n    from procedures\n    inner join pain_assessment_code\n        on procedures.code = pain_assessment_code.code\n            and procedures.code_type = pain_assessment_code.code_system\n\n)\n\n, pain_assessment_claims as (\n\n    select\n          person_id\n        , coalesce(claim_end_date, claim_start_date) as evidence_date\n    from __dbt__cte___stg_medical_claim as medical_claim\n    inner join pain_assessment_code\n        on medical_claim.hcpcs_code = pain_assessment_code.code\n            and lower(pain_assessment_code.code_system) = 'hcpcs'\n\n)\n\n, time_unbounded_qualifying_patients as (\n\n    select\n          person_id\n        , evidence_date\n    from pain_assessment_procedures\n\n    union all\n\n    select\n          person_id\n        , evidence_date\n    from pain_assessment_claims\n\n)\n\n, qualifying_patients_with_denominator as (\n\n    select\n          time_unbounded_qualifying_patients.person_id\n        , time_unbounded_qualifying_patients.evidence_date\n        , denominator.performance_period_begin\n        , denominator.performance_period_end\n        , denominator.measure_id\n        , denominator.measure_name\n        , denominator.measure_version\n        , 1 as numerator_flag\n    from time_unbounded_qualifying_patients\n    inner join denominator\n        on time_unbounded_qualifying_patients.person_id = denominator.person_id\n            and time_unbounded_qualifying_patients.evidence_date between\n                denominator.performance_period_begin and denominator.performance_period_end\n\n)\n\n, add_data_types as (\n\n     select distinct\n          cast(person_id as TEXT) as person_id\n        , cast(performance_period_begin as date) as performance_period_begin\n        , cast(performance_period_end as date) as performance_period_end\n        , cast(measure_id as TEXT) as measure_id\n        , cast(measure_name as TEXT) as measure_name\n        , cast(measure_version as TEXT) as measure_version\n        , cast(evidence_date as date) as evidence_date\n        , cast(null as TEXT) as evidence_value\n        , cast(numerator_flag as integer) as numerator_flag\n      from qualifying_patients_with_denominator\n\n)\n\nselect\n      person_id\n    , performance_period_begin\n    , performance_period_end\n    , measure_id\n    , measure_name\n    , measure_version\n    , evidence_date\n    , evidence_value\n    , numerator_flag\n    , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom add_data_types", "relation_name": "tuva.quality_measures._int_nqf0420_numerator", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:33.113843Z", "completed_at": "2025-06-03T19:50:33.272475Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:33.273243Z", "completed_at": "2025-06-03T19:50:33.273251Z"}], "thread_id": "Thread-2", "execution_time": 0.16164302825927734, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.readmissions__encounter_overlap", "compiled": true, "compiled_code": "\n\n-- Here we give a list of all pairs of encounters\n-- that have some date overlap.\n\n\nwith encounters_with_row_num as (\nselect\n    encounter_id\n    , person_id\n    , admit_date\n    , discharge_date\n    , row_number() over (\n        partition by person_id\norder by encounter_id\n\t) as row_num\nfrom tuva.readmissions._int_encounter\n)\n\n\n, cartesian as (\nselect\n    aa.encounter_id as encounter_id_a\n    , bb.encounter_id as encounter_id_b\n    , aa.person_id\n    , aa.admit_date as ai\n    , aa.discharge_date as af\n    , bb.admit_date as bi\n    , bb.discharge_date as bf\n    , case\n        when (aa.admit_date between bb.admit_date and bb.discharge_date) or (aa.discharge_date between bb.admit_date and bb.discharge_date) or\n             (bb.admit_date between aa.admit_date and aa.discharge_date) or (bb.discharge_date between aa.admit_date and aa.discharge_date)\n        then 1\n        else 0\n    end as overlap\n    from encounters_with_row_num as aa\n    left outer join encounters_with_row_num as bb\n    on aa.person_id = bb.person_id and aa.row_num < bb.row_num\n)\n\n\n, overlapping_pairs as (\n    select\n        person_id\n        , encounter_id_a\n\t, encounter_id_b\n    from cartesian\n    where overlap = 1\n)\n\n\n\nselect *, '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom overlapping_pairs", "relation_name": "tuva.readmissions._int_encounter_overlap", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:33.122154Z", "completed_at": "2025-06-03T19:50:33.274224Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:33.275139Z", "completed_at": "2025-06-03T19:50:33.275143Z"}], "thread_id": "Thread-3", "execution_time": 0.16219496726989746, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.readmissions__encounter_with_ccs", "compiled": true, "compiled_code": "\n\n-- Here we add a CCS diagnosis category to\n-- every encounter that we can add a CCS diagnosis category to.\n-- The CCS diagnosis category is found using\n-- the encounter's primary diagnosis code.\n\n\nselect\n    aa.encounter_id\n    , aa.person_id\n    , aa.admit_date\n    , aa.discharge_date\n    , aa.discharge_disposition_code\n    , aa.facility_id\n    , aa.drg_code_type\n    , aa.drg_code\n    , aa.paid_amount\n    , aa.primary_diagnosis_code\n\n    , case\n      when bb.icd_10_cm is not null then 1\n      else 0\n    end as valid_primary_diagnosis_code_flag\n\n    , cc.ccs_diagnosis_category\n\n    , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\n\nfrom\n    tuva.readmissions._int_encounter as aa\n    left outer join tuva.terminology.icd_10_cm as bb\n    on aa.primary_diagnosis_code = bb.icd_10_cm\n    left outer join tuva.readmissions._value_set_icd_10_cm_to_ccs as cc\n    on aa.primary_diagnosis_code = cc.icd_10_cm", "relation_name": "tuva.readmissions._int_encounter_with_ccs", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:33.128260Z", "completed_at": "2025-06-03T19:50:33.274476Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:33.275485Z", "completed_at": "2025-06-03T19:50:33.275489Z"}], "thread_id": "Thread-1", "execution_time": 0.16222500801086426, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.readmissions__index_discharge_requirement", "compiled": true, "compiled_code": "\n\n-- Here we list encounter_ids that meet\n-- the discharge_disposition_code requirements to be an\n-- index admission:\n--    *** Must NOT be discharged to another acute care hospital\n--    *** Must NOT have left against medical advice\n--    *** Patient must be alive at discharge\n\n\n\nwith all_invalid_discharges as (\nselect encounter_id\nfrom tuva.readmissions._int_encounter\nwhere discharge_disposition_code in (\n     '02' -- Patient discharged/transferred to other short term general hospital for inpatient care.\n    , '07' -- Patient left against medical advice\n    , '20' -- Patient died\n    )\n)\n\n-- All discharges that meet the discharge_disposition_code\n-- requirements to be an index admission\nselect a.encounter_id, '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom tuva.readmissions._int_encounter as a\nleft outer join all_invalid_discharges as b\n    on a.encounter_id = b.encounter_id\nwhere b.encounter_id is null", "relation_name": "tuva.readmissions._int_index_discharge_requirement", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:33.275820Z", "completed_at": "2025-06-03T19:50:33.297611Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:33.303396Z", "completed_at": "2025-06-03T19:50:33.303404Z"}], "thread_id": "Thread-4", "execution_time": 0.029761791229248047, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.readmissions__index_time_requirement", "compiled": true, "compiled_code": "\n\n-- Here we list encounter_ids that meet\n-- the time requirement to be an index admission:\n-- The discharge date must be at least 30 days\n-- earlier than the last discharge date available\n-- in the dataset.\n\n\nwith cte as (\n  select max(discharge_date) as max_discharge\n  from tuva.readmissions._int_encounter\n)\n\nselect encounter_id\n, '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom tuva.readmissions._int_encounter\ncross join cte\nwhere discharge_date <= \n\n    dateadd(\n        day,\n        -30,\n        cte.max_discharge\n        )\n\n", "relation_name": "tuva.readmissions._int_index_time_requirement", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:33.282319Z", "completed_at": "2025-06-03T19:50:33.308745Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:33.309366Z", "completed_at": "2025-06-03T19:50:33.309371Z"}], "thread_id": "Thread-2", "execution_time": 0.03452801704406738, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.ed_classification__summary", "compiled": true, "compiled_code": "\n\n\nwith __dbt__cte__ed_classification__stg_patient as (\n\n\nselect\n    person_id\n    , sex\n    , birth_date\n    , race\n    , state\n    , zip_code\n    , latitude\n    , longitude\nfrom tuva.core.patient\n) select\n    class.encounter_id\n    , cat.classification_name as ed_classification_description\n    , cat.classification_order as ed_classification_order\n    , class.person_id\n    , class.encounter_end_date\n    , date_part('year', class.encounter_end_date) || \n\n    case when 2 = 0\n        then ''\n    else\n        right(\n            '00' || date_part('month', class.encounter_end_date),\n            2\n        )\n    end as year_month\n    , class.primary_diagnosis_code\n    , class.primary_diagnosis_description\n    , class.paid_amount\n    , class.allowed_amount\n    , class.charge_amount\n    , class.facility_id\n    , fac_prov.provider_organization_name as facility_name\n    , practice_state as facility_state\n    , practice_city as facility_city\n    , practice_zip_code as facility_zip_code\n    , pat.sex as patient_sex\n    , floor(datediff(\n        hour,\n        pat.birth_date,\n        class.encounter_end_date\n        ) / 8766.0) as patient_age\n    , zip_code as patient_zip_code\n    , latitude as patient_latitude\n    , longitude as patient_longitude\n    , race as patient_race\nfrom tuva.ed_classification._int_filter_encounter_with_classification as class\ninner join tuva.ed_classification._value_set_categories as cat\n    on class.classification = cat.classification\nleft outer join tuva.terminology.provider as fac_prov\n    on class.facility_id = fac_prov.npi\nleft outer join __dbt__cte__ed_classification__stg_patient as pat\n    on class.person_id = pat.person_id", "relation_name": "tuva.ed_classification.summary", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:33.298135Z", "completed_at": "2025-06-03T19:50:33.310028Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:33.310931Z", "completed_at": "2025-06-03T19:50:33.310935Z"}], "thread_id": "Thread-3", "execution_time": 0.01609182357788086, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.ahrq_measures__int_pqi_01_exclusions", "compiled": true, "compiled_code": "\n\nselect\n    encounter_id\n  , data_source\n  , exclusion_reason\n  , row_number() over (\n      partition by encounter_id, data_source\n      order by exclusion_reason\n    ) as exclusion_number\n  , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom tuva.ahrq_measures._int_pqi_shared_exclusion_union", "relation_name": "tuva.ahrq_measures._int_pqi_01_exclusions", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:33.303812Z", "completed_at": "2025-06-03T19:50:33.310694Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:33.322610Z", "completed_at": "2025-06-03T19:50:33.322619Z"}], "thread_id": "Thread-1", "execution_time": 0.025522947311401367, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.ahrq_measures__int_pqi_03_exclusions", "compiled": true, "compiled_code": "\n\nselect\n    encounter_id\n  , data_source\n  , exclusion_reason\n  , row_number() over (\n      partition by encounter_id, data_source\n      order by exclusion_reason\n    ) as exclusion_number\n  , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom tuva.ahrq_measures._int_pqi_shared_exclusion_union", "relation_name": "tuva.ahrq_measures._int_pqi_03_exclusions", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:33.311553Z", "completed_at": "2025-06-03T19:50:33.330266Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:33.342375Z", "completed_at": "2025-06-03T19:50:33.342381Z"}], "thread_id": "Thread-4", "execution_time": 0.0326840877532959, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.ahrq_measures__int_pqi_05_exclusions", "compiled": true, "compiled_code": "\n\nwith  __dbt__cte___stg_pqi_condition as (\n\n\nselect\n    normalized_code_type\n  , normalized_code\n  , encounter_id\n  , data_source\nfrom\n    tuva.core.condition\n), resp_an as (\n    select distinct\n        encounter_id\n      , data_source\n      , 'cystic fibrosis' as exclusion_reason\n    from __dbt__cte___stg_pqi_condition as c\n    inner join tuva.ahrq_measures._value_set_pqi as pqi\n      on c.normalized_code = pqi.code\n      and c.normalized_code_type = 'icd-10-cm'\n      and pqi.value_set_name = 'cystic_fibrosis_and_anomalies_of_the_respiratory_system'\n      and pqi_number = '05'\n    where c.encounter_id is not null\n)\n\n, union_cte as (\n    select\n        encounter_id\n      , data_source\n      , exclusion_reason\n    from tuva.ahrq_measures._int_pqi_shared_exclusion_union\n\n    union all\n\n    select\n        encounter_id\n      , data_source\n      , exclusion_reason\n    from resp_an\n)\n\nselect\n    encounter_id\n  , data_source\n  , exclusion_reason\n  , row_number() over (\n      partition by encounter_id, data_source\n      order by exclusion_reason\n    ) as exclusion_number\n  , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom union_cte", "relation_name": "tuva.ahrq_measures._int_pqi_05_exclusions", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:33.324306Z", "completed_at": "2025-06-03T19:50:33.369718Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:33.370374Z", "completed_at": "2025-06-03T19:50:33.370382Z"}], "thread_id": "Thread-2", "execution_time": 0.059110164642333984, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.ahrq_measures__int_pqi_07_exclusions", "compiled": true, "compiled_code": "\n\nwith  __dbt__cte___stg_pqi_procedure as (\n\n\nselect\n    normalized_code_type\n  , normalized_code\n  , encounter_id\n  , data_source\nfrom\n    tuva.core.procedure\n),  __dbt__cte___stg_pqi_condition as (\n\n\nselect\n    normalized_code_type\n  , normalized_code\n  , encounter_id\n  , data_source\nfrom\n    tuva.core.condition\n), cardiac as (\n    select distinct\n        encounter_id\n      , data_source\n      , 'cardiac procedure' as exclusion_reason\n    from __dbt__cte___stg_pqi_procedure as c\n    inner join tuva.ahrq_measures._value_set_pqi as pqi\n      on c.normalized_code = pqi.code\n      and c.normalized_code_type = 'icd-10-pcs'\n      and pqi.value_set_name = 'cardiac_procedure_codes'\n      and pqi_number = 'appendix_b'\n    where c.encounter_id is not null\n)\n\n, ckd as (\n    select distinct\n        encounter_id\n      , data_source\n    from __dbt__cte___stg_pqi_condition as c\n    inner join tuva.ahrq_measures._value_set_pqi as pqi\n      on c.normalized_code = pqi.code\n      and c.normalized_code_type = 'icd-10-cm'\n      and pqi.value_set_name = 'exclusion_kidney_disease_diagnosis_codes'\n      and pqi_number = '07'\n    where c.encounter_id is not null\n)\n\n, access as (\n    select distinct\n        encounter_id\n      , data_source\n    from __dbt__cte___stg_pqi_procedure as c\n    inner join tuva.ahrq_measures._value_set_pqi as pqi\n      on c.normalized_code = pqi.code\n      and c.normalized_code_type = 'icd-10-pcs'\n      and pqi.value_set_name = 'exclusion_dialysis_access_procedure_codes'\n      and pqi.pqi_number = '07'\n    where c.encounter_id is not null\n)\n\n, combine as (\n    select\n        c.encounter_id\n      , c.data_source\n      , 'ckd' as exclusion_reason\n    from __dbt__cte___stg_pqi_condition as c\n    inner join ckd\n      on c.encounter_id = ckd.encounter_id\n      and c.data_source = ckd.data_source\n    inner join access as a\n      on c.encounter_id = a.encounter_id\n      and c.data_source = a.data_source\n)\n\n, union_cte as (\n    select\n        encounter_id\n      , data_source\n      , exclusion_reason\n    from tuva.ahrq_measures._int_pqi_shared_exclusion_union\n\n    union all\n\n    select\n        encounter_id\n      , data_source\n      , exclusion_reason\n    from cardiac\n\n    union all\n\n    select\n        encounter_id\n      , data_source\n      , exclusion_reason\n    from combine\n)\n\nselect\n    encounter_id\n  , data_source\n  , exclusion_reason\n  , row_number() over (\n      partition by encounter_id, data_source\n      order by exclusion_reason\n    ) as exclusion_number\n  , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom union_cte", "relation_name": "tuva.ahrq_measures._int_pqi_07_exclusions", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:33.343022Z", "completed_at": "2025-06-03T19:50:33.370722Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:33.371695Z", "completed_at": "2025-06-03T19:50:33.371700Z"}], "thread_id": "Thread-3", "execution_time": 0.04773092269897461, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.ahrq_measures__int_pqi_08_exclusions", "compiled": true, "compiled_code": "\n\nwith  __dbt__cte___stg_pqi_procedure as (\n\n\nselect\n    normalized_code_type\n  , normalized_code\n  , encounter_id\n  , data_source\nfrom\n    tuva.core.procedure\n), cardiac as (\n    select distinct\n        encounter_id\n      , data_source\n      , 'cardiac procedure' as exclusion_reason\n    from __dbt__cte___stg_pqi_procedure as c\n    inner join tuva.ahrq_measures._value_set_pqi as pqi\n      on c.normalized_code = pqi.code\n      and c.normalized_code_type = 'icd-10-pcs'\n      and pqi.value_set_name = 'cardiac_procedure_codes'\n      and pqi.pqi_number = 'appendix_b'\n    where c.encounter_id is not null\n)\n\n, union_cte as (\n    select\n        encounter_id\n      , data_source\n      , exclusion_reason\n    from tuva.ahrq_measures._int_pqi_shared_exclusion_union\n\n    union all\n\n    select\n        encounter_id\n      , data_source\n      , exclusion_reason\n    from cardiac\n)\n\nselect\n    encounter_id\n  , data_source\n  , exclusion_reason\n  , row_number() over (\n      partition by encounter_id, data_source\n      order by exclusion_reason\n    ) as exclusion_number\n  , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom union_cte", "relation_name": "tuva.ahrq_measures._int_pqi_08_exclusions", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:33.354050Z", "completed_at": "2025-06-03T19:50:33.371157Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:33.389248Z", "completed_at": "2025-06-03T19:50:33.389256Z"}], "thread_id": "Thread-1", "execution_time": 0.052494049072265625, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.ahrq_measures__int_pqi_11_exclusions", "compiled": true, "compiled_code": "\n\nwith  __dbt__cte___stg_pqi_condition as (\n\n\nselect\n    normalized_code_type\n  , normalized_code\n  , encounter_id\n  , data_source\nfrom\n    tuva.core.condition\n),  __dbt__cte___stg_pqi_procedure as (\n\n\nselect\n    normalized_code_type\n  , normalized_code\n  , encounter_id\n  , data_source\nfrom\n    tuva.core.procedure\n), sickle_cell as (\n    select distinct\n        encounter_id\n      , data_source\n      , 'sickle cell' as exclusion_reason\n    from __dbt__cte___stg_pqi_condition as c\n    inner join tuva.ahrq_measures._value_set_pqi as pqi\n      on c.normalized_code = pqi.code\n      and c.normalized_code_type = 'icd-10-cm'\n      and pqi.value_set_name = 'sickle_cell_anemia_or_hb-s_disease_diagnosis_codes'\n      and pqi.pqi_number = '11'\n    where c.encounter_id is not null\n)\n\n, immune_dx as (\n    select distinct\n        encounter_id\n      , data_source\n      , 'immunocompromised diagnosis' as exclusion_reason\n    from __dbt__cte___stg_pqi_condition as c\n    inner join tuva.ahrq_measures._value_set_pqi as pqi\n      on c.normalized_code = pqi.code\n      and c.normalized_code_type = 'icd-10-cm'\n      and pqi.value_set_name = 'immunocompromised_state_diagnosis_codes'\n      and pqi.pqi_number = 'appendix_c'\n    where c.encounter_id is not null\n)\n\n, immune_px as (\n    select distinct\n        encounter_id\n      , data_source\n      , 'immunocompromised procedure' as exclusion_reason\n    from __dbt__cte___stg_pqi_procedure as c\n    inner join tuva.ahrq_measures._value_set_pqi as pqi\n      on c.normalized_code = pqi.code\n      and c.normalized_code_type = 'icd-10-pcs'\n      and pqi.value_set_name = 'immunocompromised_state_procedure_codes'\n      and pqi.pqi_number = 'appendix_c'\n    where c.encounter_id is not null\n)\n\n, union_cte as (\n    select\n        encounter_id\n      , data_source\n      , exclusion_reason\n    from tuva.ahrq_measures._int_pqi_shared_exclusion_union\n\n    union all\n\n    select\n        encounter_id\n      , data_source\n      , exclusion_reason\n    from sickle_cell\n\n    union all\n\n    select\n        encounter_id\n      , data_source\n      , exclusion_reason\n    from immune_dx\n\n    union all\n\n    select\n        encounter_id\n      , data_source\n      , exclusion_reason\n    from immune_px\n)\n\nselect\n    encounter_id\n  , data_source\n  , exclusion_reason\n  , row_number() over (\n      partition by encounter_id, data_source\n      order by exclusion_reason\n    ) as exclusion_number\n, '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom union_cte", "relation_name": "tuva.ahrq_measures._int_pqi_11_exclusions", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:33.372088Z", "completed_at": "2025-06-03T19:50:33.391474Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:33.397641Z", "completed_at": "2025-06-03T19:50:33.397649Z"}], "thread_id": "Thread-4", "execution_time": 0.02775287628173828, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.ahrq_measures__int_pqi_12_exclusions", "compiled": true, "compiled_code": "\n\nwith  __dbt__cte___stg_pqi_condition as (\n\n\nselect\n    normalized_code_type\n  , normalized_code\n  , encounter_id\n  , data_source\nfrom\n    tuva.core.condition\n),  __dbt__cte___stg_pqi_procedure as (\n\n\nselect\n    normalized_code_type\n  , normalized_code\n  , encounter_id\n  , data_source\nfrom\n    tuva.core.procedure\n), kidney as (\n    select distinct\n        encounter_id\n      , data_source\n      , 'kidney' as exclusion_reason\n    from __dbt__cte___stg_pqi_condition as c\n    inner join tuva.ahrq_measures._value_set_pqi as pqi\n      on c.normalized_code = pqi.code\n      and c.normalized_code_type = 'icd-10-cm'\n      and pqi.value_set_name = 'kidney_or_urinary_tract_disorder_diagnosis_codes'\n      and pqi.pqi_number = '12'\n    where c.encounter_id is not null\n)\n\n, immune_dx as (\n    select distinct\n        encounter_id\n      , data_source\n      , 'immunocompromised diagnosis' as exclusion_reason\n    from __dbt__cte___stg_pqi_condition as c\n    inner join tuva.ahrq_measures._value_set_pqi as pqi\n      on c.normalized_code = pqi.code\n      and c.normalized_code_type = 'icd-10-cm'\n      and pqi.value_set_name = 'immunocompromised_state_diagnosis_codes'\n      and pqi.pqi_number = 'appendix_c'\n    where c.encounter_id is not null\n)\n\n, immune_px as (\n    select distinct\n        encounter_id\n      , data_source\n      , 'immunocompromised procedure' as exclusion_reason\n    from __dbt__cte___stg_pqi_procedure as c\n    inner join tuva.ahrq_measures._value_set_pqi as pqi\n      on c.normalized_code = pqi.code\n      and c.normalized_code_type = 'icd-10-pcs'\n      and pqi.value_set_name = 'immunocompromised_state_procedure_codes'\n      and pqi.pqi_number = 'appendix_c'\n    where c.encounter_id is not null\n)\n\n, union_cte as (\n    select\n        encounter_id\n      , data_source\n      , exclusion_reason\n    from tuva.ahrq_measures._int_pqi_shared_exclusion_union\n\n    union all\n\n    select\n        encounter_id\n      , data_source\n      , exclusion_reason\n    from kidney\n\n    union all\n\n    select\n        encounter_id\n      , data_source\n      , exclusion_reason\n    from immune_dx\n\n    union all\n\n    select\n        encounter_id\n      , data_source\n      , exclusion_reason\n    from immune_px\n)\n\nselect\n    encounter_id\n  , data_source\n  , exclusion_reason\n  , row_number() over (\n      partition by encounter_id, data_source\n      order by exclusion_reason\n    ) as exclusion_number\n  , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom union_cte", "relation_name": "tuva.ahrq_measures._int_pqi_12_exclusions", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:33.391694Z", "completed_at": "2025-06-03T19:50:33.421326Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:33.424995Z", "completed_at": "2025-06-03T19:50:33.425003Z"}], "thread_id": "Thread-2", "execution_time": 0.035352230072021484, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.ahrq_measures__int_pqi_14_exclusions", "compiled": true, "compiled_code": "\n\nselect\n    encounter_id\n  , data_source\n  , exclusion_reason\n  , row_number() over (\n      partition by encounter_id, data_source\n      order by exclusion_reason\n    ) as exclusion_number\n  , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom tuva.ahrq_measures._int_pqi_shared_exclusion_union", "relation_name": "tuva.ahrq_measures._int_pqi_14_exclusions", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:33.398117Z", "completed_at": "2025-06-03T19:50:33.425426Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:33.426221Z", "completed_at": "2025-06-03T19:50:33.426226Z"}], "thread_id": "Thread-3", "execution_time": 0.03529810905456543, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.ahrq_measures__int_pqi_15_exclusions", "compiled": true, "compiled_code": "\n\nwith  __dbt__cte___stg_pqi_condition as (\n\n\nselect\n    normalized_code_type\n  , normalized_code\n  , encounter_id\n  , data_source\nfrom\n    tuva.core.condition\n), resp_an as (\n    select distinct\n        encounter_id\n      , data_source\n      , 'cystic fibrosis' as exclusion_reason\n    from __dbt__cte___stg_pqi_condition as c\n    inner join tuva.ahrq_measures._value_set_pqi as pqi\n      on c.normalized_code = pqi.code\n      and c.normalized_code_type = 'icd-10-cm'\n      and pqi.value_set_name = 'cystic_fibrosis_and_anomalies_of_the_respiratory_system_diagnosis_codes'\n      and pqi.pqi_number = '15'\n    where c.encounter_id is not null\n)\n\n, union_cte as (\n    select\n        encounter_id\n      , data_source\n      , exclusion_reason\n    from tuva.ahrq_measures._int_pqi_shared_exclusion_union\n\n    union all\n\n    select\n        encounter_id\n      , data_source\n      , exclusion_reason\n    from resp_an\n)\n\nselect\n    encounter_id\n  , data_source\n  , exclusion_reason\n  , row_number() over (\n      partition by encounter_id, data_source\n      order by exclusion_reason\n    ) as exclusion_number\n  , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom union_cte", "relation_name": "tuva.ahrq_measures._int_pqi_15_exclusions", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:33.409627Z", "completed_at": "2025-06-03T19:50:33.426621Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:33.436230Z", "completed_at": "2025-06-03T19:50:33.436237Z"}], "thread_id": "Thread-1", "execution_time": 0.045031070709228516, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.ahrq_measures__int_pqi_16_exclusions", "compiled": true, "compiled_code": "\n\nwith  __dbt__cte___stg_pqi_condition as (\n\n\nselect\n    normalized_code_type\n  , normalized_code\n  , encounter_id\n  , data_source\nfrom\n    tuva.core.condition\n), amputation as (\n    select distinct\n        encounter_id\n      , data_source\n      , 'amputation' as exclusion_reason\n    from __dbt__cte___stg_pqi_condition as c\n    inner join tuva.ahrq_measures._value_set_pqi as pqi\n      on c.normalized_code = pqi.code\n      and c.normalized_code_type = 'icd-10-cm'\n      and pqi.value_set_name = 'traumatic_amputation_of_the_lower_extremity_diagnosis_codes'\n      and pqi.pqi_number = '16'\n    where c.encounter_id is not null\n)\n\n, pregnancy as (\n    select distinct\n        encounter_id\n      , data_source\n      , 'pregnancy' as exclusion_reason\n    from __dbt__cte___stg_pqi_condition as c\n    inner join tuva.ahrq_measures._value_set_pqi as pqi\n      on c.normalized_code = pqi.code\n      and c.normalized_code_type = 'icd-10-cm'\n      and pqi.value_set_name = 'mdc_14_principal_diagnosis_codes'\n      and pqi.pqi_number = 'appendix_f'\n    where c.encounter_id is not null\n)\n\n, union_cte as (\n    select\n        encounter_id\n      , data_source\n      , exclusion_reason\n    from tuva.ahrq_measures._int_pqi_shared_exclusion_union\n\n    union all\n\n    select\n        encounter_id\n      , data_source\n      , exclusion_reason\n    from amputation\n\n    union all\n\n    select\n        encounter_id\n      , data_source\n      , exclusion_reason\n    from pregnancy\n)\n\nselect\n    encounter_id\n  , data_source\n  , exclusion_reason\n  , row_number() over (\n      partition by encounter_id, data_source\n      order by exclusion_reason\n    ) as exclusion_number\n   , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom union_cte", "relation_name": "tuva.ahrq_measures._int_pqi_16_exclusions", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:33.426841Z", "completed_at": "2025-06-03T19:50:33.437725Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:33.446590Z", "completed_at": "2025-06-03T19:50:33.446598Z"}], "thread_id": "Thread-4", "execution_time": 0.022086143493652344, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.quality_measures__int_cqm130_long", "compiled": true, "compiled_code": "\n\nwith denominator as (\n\n    select\n          person_id\n        , performance_period_begin\n        , performance_period_end\n        , measure_id\n        , measure_name\n        , measure_version\n        , denominator_flag\n    from tuva.quality_measures._int_cqm130_denominator\n\n)\n\n, numerator as (\n\n    select\n          person_id\n        , evidence_date\n        , evidence_value\n    from tuva.quality_measures._int_cqm130_numerator\n\n)\n\n, exclusions as (\n\n    select\n          person_id\n        , exclusion_date\n        , exclusion_reason\n    from tuva.quality_measures._int_cqm130_exclusions\n\n)\n\n, measure_flags as (\n\n    select\n          denominator.person_id\n        , case\n            when denominator.person_id is not null\n            then 1\n            else null\n          end as denominator_flag\n        , case\n            when numerator.person_id is not null and denominator.person_id is not null\n            then 1\n            when denominator.person_id is not null\n            then 0\n            else null\n          end as numerator_flag\n        , case\n            when exclusions.person_id is not null and denominator.person_id is not null\n            then 1\n            when denominator.person_id is not null\n            then 0\n            else null\n          end as exclusion_flag\n        , numerator.evidence_date\n        , numerator.evidence_value\n        , exclusions.exclusion_date\n        , exclusions.exclusion_reason\n        , denominator.performance_period_begin\n        , denominator.performance_period_end\n        , denominator.measure_id\n        , denominator.measure_name\n        , denominator.measure_version\n        , (row_number() over (\n            partition by\n                  denominator.person_id\n                , denominator.performance_period_begin\n                , denominator.performance_period_end\n                , denominator.measure_id\n                , denominator.measure_name\n              order by\n                  case when numerator.evidence_date is null then 1 else 0 end\n                  , numerator.evidence_date desc\n                , case when exclusions.exclusion_date is null then 1 else 0 end\n                  , exclusions.exclusion_date desc\n          )) as rn\n    from denominator\n        left outer join numerator\n            on denominator.person_id = numerator.person_id\n        left outer join exclusions\n            on denominator.person_id = exclusions.person_id\n\n)\n\n/*\n    Deduplicate measure rows by latest evidence date or exclusion date\n*/\n, deduped as (\n\n    select\n          person_id\n        , denominator_flag\n        , numerator_flag\n        , exclusion_flag\n        , evidence_date\n        , evidence_value\n        , exclusion_date\n        , exclusion_reason\n        , performance_period_begin\n        , performance_period_end\n        , measure_id\n        , measure_name\n        , measure_version\n    from measure_flags\n    where rn = 1\n\n)\n\n, add_data_types as (\n\n    select\n          cast(person_id as TEXT) as person_id\n        , cast(denominator_flag as integer) as denominator_flag\n        , cast(numerator_flag as integer) as numerator_flag\n        , cast(exclusion_flag as integer) as exclusion_flag\n        , cast(evidence_date as date) as evidence_date\n        , cast(evidence_value as TEXT) as evidence_value\n        , cast(exclusion_date as date) as exclusion_date\n        , cast(exclusion_reason as TEXT) as exclusion_reason\n        , cast(performance_period_begin as date) as performance_period_begin\n        , cast(performance_period_end as date) as performance_period_end\n        , cast(measure_id as TEXT) as measure_id\n        , cast(measure_name as TEXT) as measure_name\n        , cast(measure_version as TEXT) as measure_version\n    from deduped\n\n)\n\nselect\n      person_id\n    , denominator_flag\n    , numerator_flag\n    , exclusion_flag\n    , evidence_date\n    , evidence_value\n    , exclusion_date\n    , exclusion_reason\n    , performance_period_begin\n    , performance_period_end\n    , measure_id\n    , measure_name\n    , measure_version\n    , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom add_data_types", "relation_name": "tuva.quality_measures._int_cqm130_long", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:33.438012Z", "completed_at": "2025-06-03T19:50:33.456508Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:33.464317Z", "completed_at": "2025-06-03T19:50:33.464325Z"}], "thread_id": "Thread-2", "execution_time": 0.028698205947875977, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.quality_measures__int_cqm438_long", "compiled": true, "compiled_code": "\n\nwith denominator as (\n\n    select\n          person_id\n        , performance_period_begin\n        , performance_period_end\n        , measure_id\n        , measure_name\n        , measure_version\n        , denominator_flag\n    from tuva.quality_measures._int_cqm438_denominator\n\n)\n\n, numerator as (\n\n    select\n          person_id\n        , evidence_date\n        , evidence_value\n    from tuva.quality_measures._int_cqm438_numerator\n\n)\n\n, exclusions as (\n\n    select\n          person_id\n        , exclusion_date\n        , exclusion_reason\n    from tuva.quality_measures._int_cqm438_exclusions\n\n)\n\n, measure_flags as (\n\n    select\n          denominator.person_id\n        , case\n            when denominator.person_id is not null\n            then 1\n            else null\n          end as denominator_flag\n        , case\n            when numerator.person_id is not null and denominator.person_id is not null\n            then 1\n            when denominator.person_id is not null\n            then 0\n            else null\n          end as numerator_flag\n        , case\n            when exclusions.person_id is not null and denominator.person_id is not null\n            then 1\n            when denominator.person_id is not null\n            then 0\n            else null\n          end as exclusion_flag\n        , numerator.evidence_date\n        , numerator.evidence_value\n        , exclusions.exclusion_date\n        , exclusions.exclusion_reason\n        , denominator.performance_period_begin\n        , denominator.performance_period_end\n        , denominator.measure_id\n        , denominator.measure_name\n        , denominator.measure_version\n        , (row_number() over (\n            partition by\n                  denominator.person_id\n                , denominator.performance_period_begin\n                , denominator.performance_period_end\n                , denominator.measure_id\n                , denominator.measure_name\n              order by\n                  case when numerator.evidence_date is null then 1 else 0 end\n                  , numerator.evidence_date desc\n                , case when exclusions.exclusion_date is null then 1 else 0 end\n                  , exclusions.exclusion_date desc\n          )) as rn\n    from denominator\n        left outer join numerator\n            on denominator.person_id = numerator.person_id\n        left outer join exclusions\n            on denominator.person_id = exclusions.person_id\n\n)\n\n/*\n    Deduplicate measure rows by latest evidence date or exclusion date\n*/\n, deduped as (\n\n    select\n          person_id\n        , denominator_flag\n        , numerator_flag\n        , exclusion_flag\n        , evidence_date\n        , evidence_value\n        , exclusion_date\n        , exclusion_reason\n        , performance_period_begin\n        , performance_period_end\n        , measure_id\n        , measure_name\n        , measure_version\n    from measure_flags\n    where rn = 1\n\n)\n\n, add_data_types as (\n\n    select\n          cast(person_id as TEXT) as person_id\n        , cast(denominator_flag as integer) as denominator_flag\n        , cast(numerator_flag as integer) as numerator_flag\n        , cast(exclusion_flag as integer) as exclusion_flag\n        , cast(evidence_date as date) as evidence_date\n        , cast(evidence_value as TEXT) as evidence_value\n        , cast(exclusion_date as date) as exclusion_date\n        , cast(exclusion_reason as TEXT) as exclusion_reason\n        , cast(performance_period_begin as date) as performance_period_begin\n        , cast(performance_period_end as date) as performance_period_end\n        , cast(measure_id as TEXT) as measure_id\n        , cast(measure_name as TEXT) as measure_name\n        , cast(measure_version as TEXT) as measure_version\n    from deduped\n\n)\n\nselect\n      person_id\n    , denominator_flag\n    , numerator_flag\n    , exclusion_flag\n    , evidence_date\n    , evidence_value\n    , exclusion_date\n    , exclusion_reason\n    , performance_period_begin\n    , performance_period_end\n    , measure_id\n    , measure_name\n    , measure_version\n    , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom add_data_types", "relation_name": "tuva.quality_measures._int_cqm438_long", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:33.447117Z", "completed_at": "2025-06-03T19:50:33.464095Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:33.465174Z", "completed_at": "2025-06-03T19:50:33.465179Z"}], "thread_id": "Thread-3", "execution_time": 0.02809906005859375, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.quality_measures__int_nqf0420_long", "compiled": true, "compiled_code": "\n\nwith denominator as (\n\n    select\n          person_id\n        , performance_period_begin\n        , performance_period_end\n        , measure_id\n        , measure_name\n        , measure_version\n        , denominator_flag\n    from tuva.quality_measures._int_nqf0420_denominator\n\n)\n\n, numerator as (\n\n    select\n          person_id\n        , evidence_date\n        , evidence_value\n    from tuva.quality_measures._int_nqf0420_numerator\n\n)\n\n, exclusions as (\n\n    select\n          person_id\n        , exclusion_date\n        , exclusion_reason\n    from tuva.quality_measures._int_nqf0420_exclusions\n\n)\n\n, measure_flags as (\n\n    select\n          denominator.person_id\n        , case\n            when denominator.person_id is not null\n            then 1\n            else null\n          end as denominator_flag\n        , case\n            when numerator.person_id is not null and denominator.person_id is not null\n            then 1\n            when denominator.person_id is not null\n            then 0\n            else null\n          end as numerator_flag\n        , case\n            when exclusions.person_id is not null and denominator.person_id is not null\n            then 1\n            when denominator.person_id is not null\n            then 0\n            else null\n          end as exclusion_flag\n        , numerator.evidence_date\n        , numerator.evidence_value\n        , exclusions.exclusion_date\n        , exclusions.exclusion_reason\n        , denominator.performance_period_begin\n        , denominator.performance_period_end\n        , denominator.measure_id\n        , denominator.measure_name\n        , denominator.measure_version\n        , (row_number() over (\n            partition by\n                  denominator.person_id\n                , denominator.performance_period_begin\n                , denominator.performance_period_end\n                , denominator.measure_id\n                , denominator.measure_name\n              order by\n                  case when numerator.evidence_date is null then 1 else 0 end\n                  , numerator.evidence_date desc\n                , case when exclusions.exclusion_date is null then 1 else 0 end\n                  , exclusions.exclusion_date desc\n          )) as rn\n    from denominator\n        left outer join numerator\n            on denominator.person_id = numerator.person_id\n        left outer join exclusions\n            on denominator.person_id = exclusions.person_id\n\n)\n\n/*\n    Deduplicate measure rows by latest evidence date or exclusion date\n*/\n, deduped as (\n\n    select\n          person_id\n        , denominator_flag\n        , numerator_flag\n        , exclusion_flag\n        , evidence_date\n        , evidence_value\n        , exclusion_date\n        , exclusion_reason\n        , performance_period_begin\n        , performance_period_end\n        , measure_id\n        , measure_name\n        , measure_version\n    from measure_flags\n    where rn = 1\n\n)\n\n, add_data_types as (\n\n    select\n          cast(person_id as TEXT) as person_id\n        , cast(denominator_flag as integer) as denominator_flag\n        , cast(numerator_flag as integer) as numerator_flag\n        , cast(exclusion_flag as integer) as exclusion_flag\n        , cast(evidence_date as date) as evidence_date\n        , cast(evidence_value as TEXT) as evidence_value\n        , cast(exclusion_date as date) as exclusion_date\n        , cast(exclusion_reason as TEXT) as exclusion_reason\n        , cast(performance_period_begin as date) as performance_period_begin\n        , cast(performance_period_end as date) as performance_period_end\n        , cast(measure_id as TEXT) as measure_id\n        , cast(measure_name as TEXT) as measure_name\n        , cast(measure_version as TEXT) as measure_version\n    from deduped\n\n)\n\nselect\n      person_id\n    , denominator_flag\n    , numerator_flag\n    , exclusion_flag\n    , evidence_date\n    , evidence_value\n    , exclusion_date\n    , exclusion_reason\n    , performance_period_begin\n    , performance_period_end\n    , measure_id\n    , measure_name\n    , measure_version\n    , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom add_data_types", "relation_name": "tuva.quality_measures._int_nqf0420_long", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:33.456896Z", "completed_at": "2025-06-03T19:50:33.465881Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:33.474715Z", "completed_at": "2025-06-03T19:50:33.474722Z"}], "thread_id": "Thread-1", "execution_time": 0.028502941131591797, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.readmissions__readmission_crude", "compiled": true, "compiled_code": "\n\n-- Here we calculate readmissions using all encounters\n-- that have valid admit and discharge dates and no overlap.\n-- This is meant to give a crude sense of the readmission\n-- rate without taking into account all the CMS HWR logic.\n\n\nwith encounter_info as (\nselect\n    enc.encounter_id\n    , enc.person_id\n    , enc.admit_date\n    , enc.discharge_date\nfrom tuva.readmissions._int_encounter as enc\nleft outer join tuva.readmissions._int_encounter_overlap as over_a\n    on enc.encounter_id = over_a.encounter_id_a\nleft outer join tuva.readmissions._int_encounter_overlap as over_b\n    on enc.encounter_id = over_b.encounter_id_b\nwhere\n    admit_date is not null\n    and\n    discharge_date is not null\n    and\n    admit_date <= discharge_date\nand over_a.encounter_id_a is null and over_b.encounter_id_b is null\n    )\n\n\n, encounter_sequence as (\nselect\n    encounter_id\n    , person_id\n    , admit_date\n    , discharge_date\n    , row_number() over (\n        partition by person_id\norder by admit_date, discharge_date\n    ) as encounter_seq\nfrom encounter_info\n)\n\n\n, readmission_calc as (\nselect\n    aa.encounter_id\n    , aa.person_id\n    , aa.admit_date\n    , aa.discharge_date\n    , case\n        when bb.encounter_id is not null then 1\n\telse 0\n    end as had_readmission_flag\n    , datediff(\n        day,\n        bb.admit_date,\n        aa.discharge_date\n        ) as days_to_readmit\n    , case\n        when (datediff(\n        day,\n        bb.admit_date,\n        aa.discharge_date\n        )) <= 30 then 1\n\telse 0\n    end as readmit_30_flag\nfrom encounter_sequence as aa left outer join encounter_sequence as bb\n     on aa.person_id = bb.person_id\n     and aa.encounter_seq + 1 = bb.encounter_seq\n)\n\n\n\nselect *, '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom readmission_calc", "relation_name": "tuva.readmissions._int_readmission_crude", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:33.466171Z", "completed_at": "2025-06-03T19:50:33.476016Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:33.483867Z", "completed_at": "2025-06-03T19:50:33.483876Z"}], "thread_id": "Thread-4", "execution_time": 0.020142078399658203, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.readmissions__encounter_data_quality", "compiled": true, "compiled_code": "\n\n-- Here we list all encounters from the stg_encounter table\n-- with data quality flags that may disqualify them from\n-- being used for readmission measures \n\n\n-- Flag several potential data quality issues\n-- with all encounters.\n-- Every encounter_id from the stg_encounter model\n-- will be here. This CTE should have the same\n-- number of rows as the stg_encounter model, i.e.,\n-- there is a one to one correspondence between the\n-- rows in stg_encounter and this CTE.\nwith encounter_data_quality_issues as (\nselect\n    aa.encounter_id\n    , case\n        when aa.admit_date is null then 1\n\telse 0\n    end as missing_admit_date_flag\n    , case\n        when aa.discharge_date is null then 1\n\telse 0\n    end as missing_discharge_date_flag\n    , case\n        when aa.admit_date > aa.discharge_date then 1\n\telse 0\n    end as admit_after_discharge_flag\n    , case\n        when aa.discharge_disposition_code is null then 1\n\telse 0\n    end as missing_discharge_disposition_code_flag\n    , case\n        when\n\t    (aa.discharge_disposition_code is not null)\n\t    and\n\t    (bb.discharge_disposition_code is null) then 1\n\telse 0\n    end as invalid_discharge_disposition_code_flag\n    , case\n      when aa.primary_diagnosis_code is null then 1\n      else 0\n    end as missing_primary_diagnosis_flag\n    , case\n        when aa.valid_primary_diagnosis_code_flag = 0 then 1\n\telse 0\n    end as invalid_primary_diagnosis_code_flag\n    , case\n        when aa.ccs_diagnosis_category is null then 1\n\telse 0\n    end as no_diagnosis_ccs_flag\n    , aa.ccs_diagnosis_category as diagnosis_ccs\n    , case\n        when aa.encounter_id in (select distinct encounter_id_a\n\t                         from tuva.readmissions._int_encounter_overlap)\n\t     or\n\t     aa.encounter_id in (select distinct encounter_id_b\n\t                         from tuva.readmissions._int_encounter_overlap)\n\tthen 1\n\telse 0\n    end as overlaps_with_another_encounter_flag\n    , case\n        when aa.drg_code is null then 1\n\telse 0\n    end as missing_drg_flag\n    , case\n        when coalesce(cc.ms_drg_code, dd.apr_drg_code) is null then 1\n\telse 0\n    end as invalid_drg_flag\n\nfrom tuva.readmissions._int_encounter_with_ccs as aa\n     left outer join tuva.terminology.discharge_disposition as bb\n     on aa.discharge_disposition_code = bb.discharge_disposition_code\n     left outer join tuva.terminology.ms_drg as cc\n     on aa.drg_code = cc.ms_drg_code\n     and aa.drg_code_type = 'ms-drg'\n     left outer join tuva.terminology.apr_drg as dd\n     on aa.drg_code = dd.apr_drg_code\n     and aa.drg_code_type = 'apr-drg'\n)\n\n\n-- Here we add a disqualified_encounter_flag.\n-- This disqualified_encounter_flag = 1\n-- when any of the critical data quality flags\n-- from the above CTE are equal to 1.\n, all_data_quality_flags as (\nselect\n    encounter_id\n    , diagnosis_ccs\n    , case\n        when\n\t    (missing_admit_date_flag = 1)\n\t    or\n\t    (missing_discharge_date_flag = 1)\n\t    or\n\t    (admit_after_discharge_flag = 1)\n\t    or\n\t    (missing_discharge_disposition_code_flag = 1)\n\t    or\n\t    (invalid_discharge_disposition_code_flag = 1)\n\t    or\n\t    (missing_primary_diagnosis_flag = 1)\n\t    or\n\t    (invalid_primary_diagnosis_code_flag = 1)\n\t    or\n\t    (no_diagnosis_ccs_flag = 1)\n\t    or\n\t    (overlaps_with_another_encounter_flag = 1)\n\t    or\n\t    (missing_drg_flag = 1)\n\t    or\n\t    (invalid_drg_flag = 1)\n\t    then 1\n\telse 0\n    end as disqualified_encounter_flag\n    , missing_admit_date_flag\n    , missing_discharge_date_flag\n    , admit_after_discharge_flag\n    , missing_discharge_disposition_code_flag\n    , invalid_discharge_disposition_code_flag\n    , missing_primary_diagnosis_flag\n    , invalid_primary_diagnosis_code_flag\n    , no_diagnosis_ccs_flag\n    , overlaps_with_another_encounter_flag\n    , missing_drg_flag\n    , invalid_drg_flag\nfrom encounter_data_quality_issues\n)\n\n\n\nselect *, '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom all_data_quality_flags", "relation_name": "tuva.readmissions._int_encounter_data_quality", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:33.476475Z", "completed_at": "2025-06-03T19:50:33.491011Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:33.502531Z", "completed_at": "2025-06-03T19:50:33.502539Z"}], "thread_id": "Thread-2", "execution_time": 0.028215885162353516, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.readmissions__encounter_specialty_cohort", "compiled": true, "compiled_code": "\n\n-- Here we list the specialty cohort for each encounter that has\n-- an associated specialty cohort.\n-- There are 5 possible specialty cohorts:\n--      [1] Medicine\n--      [2] Surgery/Gynecology\n--      [3] Cardiology\n--      [4] Cardiovascular\n--      [5] Neurology\n-- An encounter that has an ICD-10-PCS procedure code or a\n-- CCS procedure category that corresponds to the\n-- 'Surgery/Gynecology' cohort will always be in that cohort.\n-- For encounters that are not in the 'Surgery/Gynecology' cohort,\n-- we then check to see if they are in one of the other 4 cohorts.\n\n--ranking to eventually assign a cohort to encounters in multiple cohorts\nwith cohort_ranks as (\n    select 'Surgery/Gynecology' as cohort, 1 as c_rank\n    union all\n    select 'Cardiorespiratory' as cohort, 2 as c_rank\n    union all\n    select 'Cardiovascular' as cohort, 3 as c_rank\n    union all\n    select 'Neurology' as cohort, 4 as c_rank\n    union all\n    select 'Medicine' as cohort, 5 as c_rank\n)\n\n\n--get all encounter ids in any procedure or diagnosis based cohorts\n, all_encounter_cohorts as (\n\n    --encounter ids in procedure based cohorts\n        select procs.encounter_id, 1 as c_rank\n        from tuva.readmissions._int_procedure_ccs as procs\n        left outer join tuva.readmissions._value_set_surgery_gynecology_cohort as sgc\n            on procs.procedure_code = sgc.icd_10_pcs\n        left outer join tuva.readmissions._value_set_specialty_cohort as sgsc\n            on procs.ccs_procedure_category = sgsc.ccs and sgsc.specialty_cohort = 'Surgery/Gynecology'\n        where sgc.icd_10_pcs is not null or sgsc.ccs is not null\n\n    union all\n\n    --encounter ids in diagnosis based cohorts\n    select diag.encounter_id, cohort_ranks.c_rank\n    from tuva.readmissions._int_encounter_with_ccs as diag\n    inner join tuva.readmissions._value_set_specialty_cohort as sc\n        on diag.ccs_diagnosis_category = sc.ccs and sc.procedure_or_diagnosis = 'Diagnosis'\n    inner join cohort_ranks\n        on sc.specialty_cohort = cohort_ranks.cohort\n)\n\n\n-- getting one cohort per encounter\n, main_encounter_cohort as (\n    select encounter_id, min(c_rank) as main_c_rank\n    from all_encounter_cohorts\n    group by encounter_id\n\n)\n\n\n--getting all encounters, with labeled cohorts, if no cohort cohort is \"medicine\"\nselect enc.encounter_id, coalesce(cohort_ranks.cohort, 'Medicine') as specialty_cohort, '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom tuva.readmissions._int_encounter as enc\nleft outer join main_encounter_cohort as mec\n    on enc.encounter_id = mec.encounter_id\nleft outer join cohort_ranks\n    on mec.main_c_rank = cohort_ranks.c_rank", "relation_name": "tuva.readmissions._int_encounter_specialty_cohort", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:33.484318Z", "completed_at": "2025-06-03T19:50:33.501971Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:33.503075Z", "completed_at": "2025-06-03T19:50:33.503079Z"}], "thread_id": "Thread-3", "execution_time": 0.027949094772338867, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.readmissions__exclusion", "compiled": true, "compiled_code": "\n\n-- Here we list encounter_ids that are excluded\n-- from being index admissions because they\n-- belong to one of these categories:\n--       [1] Medical Treatment of Cancer\n--       [2] Rehabilitation\n--       [3] Psychiatric\n\n\n-- encounter_ids for encounters that should be\n-- excluded because they belong to one of the\n-- exclusion categories\nwith exclusions as (\nselect distinct encounter_id\nfrom tuva.readmissions._int_encounter_with_ccs\nwhere\n(ccs_diagnosis_category is not null)\nand\n(\nccs_diagnosis_category in\n    (select distinct ccs_diagnosis_category\n     from tuva.readmissions._value_set_exclusion_ccs_diagnosis_category)\n)\n)\n\n\nselect *, '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom exclusions", "relation_name": "tuva.readmissions._int_exclusion", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:33.491296Z", "completed_at": "2025-06-03T19:50:33.504032Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:33.512530Z", "completed_at": "2025-06-03T19:50:33.512538Z"}], "thread_id": "Thread-1", "execution_time": 0.029083967208862305, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.readmissions__planned_encounter", "compiled": true, "compiled_code": "\n\n-- Here we list encounter_ids for all encounters\n-- that are planned.\n\n\n-- encounter_ids for encounters that we know\n-- are planned because they had a procedure category\n-- that is only present for planned encounters \nwith always_planned_px as (\nselect distinct pccs.encounter_id\nfrom tuva.readmissions._int_procedure_ccs as pccs\ninner join tuva.readmissions._value_set_always_planned_ccs_procedure_category as apc\n    on pccs.ccs_procedure_category = apc.ccs_procedure_category\n)\n\n\n-- encounter_ids for encounters that we know\n-- are planned because they had a diagnosis category\n-- that is only present for planned encounters\n, always_planned_dx as (\nselect distinct encounter_id\nfrom tuva.readmissions._int_encounter_with_ccs as dccs\ninner join tuva.readmissions._value_set_always_planned_ccs_diagnosis_category as apd\n    on dccs.ccs_diagnosis_category = apd.ccs_diagnosis_category\n)\n\n\n-- encounter_ids for encounters that are potentially planned\n-- based on one of their CCS procedure categories.\n-- For these encounters to actually be planned, we must further\n-- require that they are NOT acute encounters\n, potentially_planned_px_ccs as (\nselect distinct encounter_id\nfrom tuva.readmissions._int_procedure_ccs as pccs\ninner join tuva.readmissions._value_set_potentially_planned_ccs_procedure_category as pcs\n    on pccs.ccs_procedure_category = pcs.ccs_procedure_category\n)\n\n\n-- encounter_ids for encounters that are potentially planned\n-- based on their ICD-10-PCS procedure codes.\n-- For these encounters to actually be planned, we must further\n-- require that they are NOT acute encounters\n, potentially_planned_px_icd_10_pcs as (\nselect distinct encounter_id\nfrom tuva.readmissions._int_procedure_ccs as pcs\ninner join tuva.readmissions._value_set_potentially_planned_icd_10_pcs as pps\n    on pcs.procedure_code = pps.icd_10_pcs\n)\n\n\n-- encounter_ids for encounters that are acute based\n-- on their primary diagnosis code or their CCS diagnosis category\n, acute_encounters as (\nselect distinct encounter_id\nfrom tuva.readmissions._int_encounter_with_ccs as dccs\nleft outer join tuva.readmissions._value_set_acute_diagnosis_icd_10_cm as adi\n    on dccs.primary_diagnosis_code = adi.icd_10_cm\nleft outer join tuva.readmissions._value_set_acute_diagnosis_ccs as adc\n    on dccs.ccs_diagnosis_category = adc.ccs_diagnosis_category\nwhere adi.icd_10_cm is not null or adc.ccs_diagnosis_category is not null\n)\n\n\n-- encounter_ids for encounters that are:\n--           [1] potentially planned, based on one of\n--               their CCS procedure categories or\n--               their ICD-10-PCS procedure codes\n--           [2] not acute, based on their primary diagnosis code\n--               or their CCS diagnosis category\n-- These encounters are therefore confirmed to be planned\n, potentially_planned_that_are_actually_planned as (\nselect distinct ppp.encounter_id\nfrom (\n    select * from potentially_planned_px_ccs\n        union all\n    select * from potentially_planned_px_icd_10_pcs) as ppp\nleft outer join acute_encounters\n    on ppp.encounter_id = acute_encounters.encounter_id\nwhere acute_encounters.encounter_id is null\n\n)\n\n\n-- Aggregate of all encounter_ids for planned encounters\n\nselect *, '2025-06-03 19:49:40.396647+00:00' as tuva_last_run from always_planned_px\n\nunion distinct\n\nselect *, '2025-06-03 19:49:40.396647+00:00' as tuva_last_run from always_planned_dx\n\nunion distinct\n\nselect *, '2025-06-03 19:49:40.396647+00:00' as tuva_last_run from potentially_planned_that_are_actually_planned", "relation_name": "tuva.readmissions._int_planned_encounter", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:33.504544Z", "completed_at": "2025-06-03T19:50:33.514052Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:33.527683Z", "completed_at": "2025-06-03T19:50:33.527690Z"}], "thread_id": "Thread-4", "execution_time": 0.025558948516845703, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.mart_review__ed_classification", "compiled": true, "compiled_code": "\n\nwith cte as\n(\n    select distinct location_id, npi, name\n    from tuva.core.location\n)\n\nselect\n    e.encounter_id\n    , case when s.encounter_id is null then 'Not Classified' else s.ed_classification_description end as ed_classification_description\n    , case\n        when s.encounter_id is null then 'Non-Avoidable'\n        when cast(s.ed_classification_order as int) <= 3 then s.ed_classification_description\n        else 'Non-Avoidable' end as avoidable_category\n    , e.paid_amount\n    , e.primary_diagnosis_code\n    , e.primary_diagnosis_description\n    , e.primary_diagnosis_code || '|' || e.primary_diagnosis_description as primary_diagnosis_and_description\n    , p.ccsr_parent_category\n    , p.ccsr_category\n    , p.ccsr_category_description\n    , p.ccsr_category || '|' || p.ccsr_category_description as ccsr_parent_category_and_description\n    , b.body_system\n    , e.facility_id\n    , e.allowed_amount\n    , e.charge_amount\n    , e.data_source\n    , e.length_of_stay\n    , e.discharge_disposition_code || '|' || e.discharge_disposition_description as discharge_code_and_description\n    , e.person_id || '|' || e.data_source as patient_source_key\n    , e.facility_name\n    , e.encounter_start_date\n    , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom tuva.core.encounter as e\nleft outer join tuva.ed_classification.summary as s on e.encounter_id = s.encounter_id\nleft outer join cte on e.facility_id = cte.location_id\nleft outer join tuva.ccsr.dx_vertical_pivot as p\n  on e.primary_diagnosis_code = p.code\n  and p.ccsr_category_rank = 1\nleft outer join tuva.ccsr._value_set_dxccsr_v2023_1_body_systems as b on p.ccsr_parent_category = b.ccsr_parent_category\nwhere e.encounter_type = 'emergency department'", "relation_name": "tuva.data_quality.mart_review__ed_classification", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:33.514247Z", "completed_at": "2025-06-03T19:50:33.528797Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:33.536800Z", "completed_at": "2025-06-03T19:50:33.536806Z"}], "thread_id": "Thread-2", "execution_time": 0.024631977081298828, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.ahrq_measures__int_pqi_01_num", "compiled": true, "compiled_code": "\n\nselect\n    e.data_source\n  , e.person_id\n  , e.year_number\n  , e.encounter_id\n  , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom tuva.ahrq_measures._stg_pqi_inpatient_encounter as e\ninner join tuva.ahrq_measures._value_set_pqi as pqi\n  on e.primary_diagnosis_code = pqi.code\n  and pqi.value_set_name = 'diabetes_with_short-term_complications_diagnosis_codes'\n  and pqi.pqi_number = '01'\ninner join tuva.ahrq_measures._int_pqi_01_denom as denom\n  on e.person_id = denom.person_id\n  and e.data_source = denom.data_source\n  and e.year_number = denom.year_number\nleft outer join tuva.ahrq_measures._int_pqi_01_exclusions as shared\n  on e.encounter_id = shared.encounter_id\n  and e.data_source = shared.data_source\nwhere shared.encounter_id is null", "relation_name": "tuva.ahrq_measures._int_pqi_01_num", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:33.521805Z", "completed_at": "2025-06-03T19:50:33.536225Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:33.537273Z", "completed_at": "2025-06-03T19:50:33.537277Z"}], "thread_id": "Thread-3", "execution_time": 0.02438974380493164, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.ahrq_measures__int_pqi_03_num", "compiled": true, "compiled_code": "\n\nselect\n    e.data_source\n  , e.person_id\n  , e.year_number\n  , e.encounter_id\n  , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom tuva.ahrq_measures._stg_pqi_inpatient_encounter as e\ninner join tuva.ahrq_measures._value_set_pqi as pqi\n  on e.primary_diagnosis_code = pqi.code\n  and pqi.value_set_name = 'diabetes_with_long-term_complications_diagnosis_codes'\n  and pqi.pqi_number = '03'\ninner join tuva.ahrq_measures._int_pqi_03_denom as denom\n  on e.person_id = denom.person_id\n  and e.data_source = denom.data_source\n  and e.year_number = denom.year_number\nleft outer join tuva.ahrq_measures._int_pqi_03_exclusions as shared\n  on e.encounter_id = shared.encounter_id\n  and e.data_source = shared.data_source\nwhere shared.encounter_id is null", "relation_name": "tuva.ahrq_measures._int_pqi_03_num", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:33.528994Z", "completed_at": "2025-06-03T19:50:33.538426Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:33.545245Z", "completed_at": "2025-06-03T19:50:33.545252Z"}], "thread_id": "Thread-1", "execution_time": 0.023809194564819336, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.ahrq_measures__int_pqi_05_num", "compiled": true, "compiled_code": "\n\nselect\n    e.data_source\n  , e.person_id\n  , e.year_number\n  , e.encounter_id\n  , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom tuva.ahrq_measures._stg_pqi_inpatient_encounter as e\ninner join tuva.ahrq_measures._int_pqi_05_denom as denom\n  on e.person_id = denom.person_id\n  and e.data_source = denom.data_source\n  and e.year_number = denom.year_number\nleft outer join tuva.ahrq_measures._value_set_pqi as copd\n  on e.primary_diagnosis_code = copd.code\n  and copd.value_set_name = 'chronic_obstructive_pulmonary_disorder'\n  and copd.pqi_number = '05'\nleft outer join tuva.ahrq_measures._value_set_pqi as asthma\n  on e.primary_diagnosis_code = asthma.code\n  and asthma.value_set_name = 'asthma'\n  and asthma.pqi_number = '05'\nleft outer join tuva.ahrq_measures._int_pqi_05_exclusions as shared\n  on e.encounter_id = shared.encounter_id\n  and e.data_source = shared.data_source\nwhere shared.encounter_id is null\n  and (\n    asthma.code is not null\n    or copd.code is not null\n    )", "relation_name": "tuva.ahrq_measures._int_pqi_05_num", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:33.538708Z", "completed_at": "2025-06-03T19:50:33.546634Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:33.560243Z", "completed_at": "2025-06-03T19:50:33.560251Z"}], "thread_id": "Thread-4", "execution_time": 0.023804903030395508, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.ahrq_measures__int_pqi_07_num", "compiled": true, "compiled_code": "\n\nselect\n    e.data_source\n  , e.person_id\n  , e.year_number\n  , e.encounter_id\n  , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom tuva.ahrq_measures._stg_pqi_inpatient_encounter as e\ninner join tuva.ahrq_measures._value_set_pqi as hyp\n  on e.primary_diagnosis_code = hyp.code\n  and hyp.value_set_name = 'hypertension_diagnosis_codes'\n  and hyp.pqi_number = '07'\ninner join tuva.ahrq_measures._int_pqi_07_denom as denom\n  on e.person_id = denom.person_id\n  and e.data_source = denom.data_source\n  and e.year_number = denom.year_number\nleft outer join tuva.ahrq_measures._int_pqi_07_exclusions as shared\n  on e.encounter_id = shared.encounter_id\n  and e.data_source = shared.data_source\nwhere shared.encounter_id is null", "relation_name": "tuva.ahrq_measures._int_pqi_07_num", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:33.553166Z", "completed_at": "2025-06-03T19:50:33.561324Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:33.567628Z", "completed_at": "2025-06-03T19:50:33.567635Z"}], "thread_id": "Thread-3", "execution_time": 0.02270197868347168, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.ahrq_measures__int_pqi_11_num", "compiled": true, "compiled_code": "\n\nselect\n    e.data_source\n  , e.person_id\n  , e.year_number\n  , e.encounter_id\n  , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom tuva.ahrq_measures._stg_pqi_inpatient_encounter as e\ninner join tuva.ahrq_measures._value_set_pqi as hyp\n  on e.primary_diagnosis_code = hyp.code\n  and hyp.value_set_name = 'community_acquired_bacterial_pneumonia_diagnosis_codes'\n  and hyp.pqi_number = '11'\ninner join tuva.ahrq_measures._int_pqi_11_denom as denom\n  on e.person_id = denom.person_id\n  and e.data_source = denom.data_source\n  and e.year_number = denom.year_number\nleft outer join tuva.ahrq_measures._int_pqi_11_exclusions as shared\n  on e.encounter_id = shared.encounter_id\n  and e.data_source = shared.data_source\nwhere shared.encounter_id is null", "relation_name": "tuva.ahrq_measures._int_pqi_11_num", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:33.546850Z", "completed_at": "2025-06-03T19:50:33.561632Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:33.567989Z", "completed_at": "2025-06-03T19:50:33.567993Z"}], "thread_id": "Thread-2", "execution_time": 0.023348093032836914, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.ahrq_measures__int_pqi_08_num", "compiled": true, "compiled_code": "\n\nselect\n    e.data_source\n  , e.person_id\n  , e.year_number\n  , e.encounter_id\n  , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom tuva.ahrq_measures._stg_pqi_inpatient_encounter as e\ninner join tuva.ahrq_measures._value_set_pqi as hyp\n  on e.primary_diagnosis_code = hyp.code\n  and hyp.value_set_name = 'heart_failure_diagnosis_codes'\n  and hyp.pqi_number = '08'\ninner join tuva.ahrq_measures._int_pqi_08_denom as denom\n  on e.person_id = denom.person_id\n  and e.data_source = denom.data_source\n  and e.year_number = denom.year_number\nleft outer join tuva.ahrq_measures._int_pqi_08_exclusions as shared\n  on e.encounter_id = shared.encounter_id\n  and e.data_source = shared.data_source\nwhere shared.encounter_id is null", "relation_name": "tuva.ahrq_measures._int_pqi_08_num", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:33.561857Z", "completed_at": "2025-06-03T19:50:33.569114Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:33.575745Z", "completed_at": "2025-06-03T19:50:33.575751Z"}], "thread_id": "Thread-1", "execution_time": 0.015856027603149414, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.ahrq_measures__int_pqi_12_num", "compiled": true, "compiled_code": "\n\nselect\n    e.data_source\n  , e.person_id\n  , e.year_number\n  , e.encounter_id\n  , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom tuva.ahrq_measures._stg_pqi_inpatient_encounter as e\ninner join tuva.ahrq_measures._value_set_pqi as hyp\n  on e.primary_diagnosis_code = hyp.code\n  and hyp.value_set_name = 'urinary_tract_infection_diagnosis_codes'\n  and hyp.pqi_number = '12'\ninner join tuva.ahrq_measures._int_pqi_12_denom as denom\n  on e.person_id = denom.person_id\n  and e.data_source = denom.data_source\n  and e.year_number = denom.year_number\nleft outer join tuva.ahrq_measures._int_pqi_12_exclusions as shared\n  on e.encounter_id = shared.encounter_id\n  and e.data_source = shared.data_source\nwhere shared.encounter_id is null", "relation_name": "tuva.ahrq_measures._int_pqi_12_num", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:33.569319Z", "completed_at": "2025-06-03T19:50:33.576805Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:33.596012Z", "completed_at": "2025-06-03T19:50:33.596019Z"}], "thread_id": "Thread-4", "execution_time": 0.02870798110961914, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.ahrq_measures__int_pqi_14_num", "compiled": true, "compiled_code": "\n\nselect\n    e.data_source\n  , e.person_id\n  , e.year_number\n  , e.encounter_id\n  , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom tuva.ahrq_measures._stg_pqi_inpatient_encounter as e\ninner join tuva.ahrq_measures._value_set_pqi as hyp\n  on e.primary_diagnosis_code = hyp.code\n  and hyp.value_set_name = 'uncontrolled_diabetes_diagnosis_codes'\n  and hyp.pqi_number = '14'\ninner join tuva.ahrq_measures._int_pqi_14_denom as denom\n  on e.person_id = denom.person_id\n  and e.data_source = denom.data_source\n  and e.year_number = denom.year_number\nleft outer join tuva.ahrq_measures._int_pqi_14_exclusions as shared\n  on e.encounter_id = shared.encounter_id\n  and e.data_source = shared.data_source\nwhere shared.encounter_id is null", "relation_name": "tuva.ahrq_measures._int_pqi_14_num", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:33.577017Z", "completed_at": "2025-06-03T19:50:33.596767Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:33.608814Z", "completed_at": "2025-06-03T19:50:33.608819Z"}], "thread_id": "Thread-3", "execution_time": 0.033624887466430664, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.ahrq_measures__int_pqi_15_num", "compiled": true, "compiled_code": "\n\nselect\n    e.data_source\n  , e.person_id\n  , e.year_number\n  , e.encounter_id\n  , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom tuva.ahrq_measures._stg_pqi_inpatient_encounter as e\ninner join tuva.ahrq_measures._value_set_pqi as hyp\n  on e.primary_diagnosis_code = hyp.code\n  and hyp.value_set_name = 'asthma_diagnosis_codes'\n  and hyp.pqi_number = '15'\ninner join tuva.ahrq_measures._int_pqi_15_denom as denom\n  on e.person_id = denom.person_id\n  and e.data_source = denom.data_source\n  and e.year_number = denom.year_number\nleft outer join tuva.ahrq_measures._int_pqi_15_exclusions as shared\n  on e.encounter_id = shared.encounter_id\n  and e.data_source = shared.data_source\nwhere shared.encounter_id is null", "relation_name": "tuva.ahrq_measures._int_pqi_15_num", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:33.582353Z", "completed_at": "2025-06-03T19:50:33.609179Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:33.609980Z", "completed_at": "2025-06-03T19:50:33.609984Z"}], "thread_id": "Thread-2", "execution_time": 0.0345149040222168, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.ahrq_measures__int_pqi_16_num", "compiled": true, "compiled_code": "\n\nwith  __dbt__cte___stg_pqi_condition as (\n\n\nselect\n    normalized_code_type\n  , normalized_code\n  , encounter_id\n  , data_source\nfrom\n    tuva.core.condition\n),  __dbt__cte___stg_pqi_procedure as (\n\n\nselect\n    normalized_code_type\n  , normalized_code\n  , encounter_id\n  , data_source\nfrom\n    tuva.core.procedure\n), diagnosis as (\n    select distinct\n        c.encounter_id\n      , c.data_source\n    from __dbt__cte___stg_pqi_condition as c\n    inner join tuva.ahrq_measures._value_set_pqi as pqi\n      on c.normalized_code = pqi.code\n      and c.normalized_code_type = 'icd-10-cm'\n      and pqi.value_set_name = 'diabetes_diagnosis_codes'\n      and pqi_number = '16'\n    where c.encounter_id is not null\n)\n\n\n, procedures as (\n    select distinct\n        p.encounter_id\n      , p.data_source\n    from __dbt__cte___stg_pqi_procedure as p\n    inner join diagnosis as d\n      on p.encounter_id = d.encounter_id\n      and d.data_source = p.data_source\n    inner join tuva.ahrq_measures._value_set_pqi as pqi\n      on p.normalized_code = pqi.code\n      and p.normalized_code_type = 'icd-10-pcs'\n      and pqi.value_set_name = 'lower-extremity_amputation_procedure_codes'\n      and pqi_number = '16'\n)\n\nselect\n    e.data_source\n  , e.person_id\n  , e.year_number\n  , e.encounter_id\n  , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom tuva.ahrq_measures._stg_pqi_inpatient_encounter as e\ninner join tuva.ahrq_measures._int_pqi_16_denom as denom\n  on e.person_id = denom.person_id\n  and e.data_source = denom.data_source\n  and e.year_number = denom.year_number\n    inner join procedures as p\n  on e.encounter_id = p.encounter_id\n  and e.data_source = p.data_source\nleft outer join tuva.ahrq_measures._int_pqi_16_exclusions as shared\n  on e.encounter_id = shared.encounter_id\n  and e.data_source = shared.data_source\nwhere shared.encounter_id is null", "relation_name": "tuva.ahrq_measures._int_pqi_16_num", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:33.597261Z", "completed_at": "2025-06-03T19:50:33.610570Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:33.621719Z", "completed_at": "2025-06-03T19:50:33.621727Z"}], "thread_id": "Thread-1", "execution_time": 0.0269162654876709, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.ahrq_measures__pqi_exclusion_long", "compiled": true, "compiled_code": "\n\nselect\n    e.data_source\n  , e.encounter_id\n  , e.exclusion_reason\n  , e.exclusion_number\n  , 1 as pqi_number\n  , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom tuva.ahrq_measures._int_pqi_01_exclusions as e\n\nunion all\n\nselect\n    e.data_source\n  , e.encounter_id\n  , e.exclusion_reason\n  , e.exclusion_number\n  , 3 as pqi_number\n  , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom tuva.ahrq_measures._int_pqi_03_exclusions as e\n\nunion all\n\nselect\n    e.data_source\n  , e.encounter_id\n  , e.exclusion_reason\n  , e.exclusion_number\n  , 5 as pqi_number\n  , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom tuva.ahrq_measures._int_pqi_05_exclusions as e\n\nunion all\n\nselect\n    e.data_source\n  , e.encounter_id\n  , e.exclusion_reason\n  , e.exclusion_number\n  , 7 as pqi_number\n  , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom tuva.ahrq_measures._int_pqi_07_exclusions as e\n\nunion all\n\nselect\n    e.data_source\n  , e.encounter_id\n  , e.exclusion_reason\n  , e.exclusion_number\n  , 8 as pqi_number\n  , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom tuva.ahrq_measures._int_pqi_08_exclusions as e\n\nunion all\n\nselect\n    e.data_source\n  , e.encounter_id\n  , e.exclusion_reason\n  , e.exclusion_number\n  , 11 as pqi_number\n  , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom tuva.ahrq_measures._int_pqi_11_exclusions as e\n\nunion all\n\nselect\n    e.data_source\n  , e.encounter_id\n  , e.exclusion_reason\n  , e.exclusion_number\n  , 12 as pqi_number\n  , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom tuva.ahrq_measures._int_pqi_12_exclusions as e\n\nunion all\n\nselect\n    e.data_source\n  , e.encounter_id\n  , e.exclusion_reason\n  , e.exclusion_number\n  , 14 as pqi_number\n  , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom tuva.ahrq_measures._int_pqi_14_exclusions as e\n\nunion all\n\nselect\n    e.data_source\n  , e.encounter_id\n  , e.exclusion_reason\n  , e.exclusion_number\n  , 15 as pqi_number\n  , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom tuva.ahrq_measures._int_pqi_15_exclusions as e\n\nunion all\n\nselect\n    e.data_source\n  , e.encounter_id\n  , e.exclusion_reason\n  , e.exclusion_number\n  , 16 as pqi_number\n  , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom tuva.ahrq_measures._int_pqi_16_exclusions as e", "relation_name": "tuva.ahrq_measures.pqi_exclusion_long", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:33.623011Z", "completed_at": "2025-06-03T19:50:33.641643Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:33.643209Z", "completed_at": "2025-06-03T19:50:33.643216Z"}], "thread_id": "Thread-3", "execution_time": 0.032531023025512695, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.readmissions__index_admission", "compiled": true, "compiled_code": "\n\n-- Here we list all index admissions for the hospital wide readmissions\n-- measure.\n-- These represent encounter_ids that meet the requirements to be an\n-- index admission for the HWR measure.\n-- These are the requirements for a hospitalization to be an index admission\n-- for the HWR measure:\n--\n--     Time Requirement: The discharge data must be at least 30 days\n--                       earlier than the last discharge date available\n--                       in the dataset.\n-- \n--     Discharge Requirements: The patient must not be discharged to another\n--                             acute care hospital; the patient must not have\n--                             left against medical advice; and the patient\n--                             must be alive at discharge.\n--\n--     Diagnosis Requirements: Exclude encounters where based on the CCS\n--     (exclusions)            diagnosis category we know the encounter was\n--                             for medical treatment of cancer, rehabilitation,\n--                             or psychiatric reasons.\n\n\n\nselect distinct a.encounter_id, '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom tuva.readmissions._int_encounter as a\ninner join tuva.readmissions._int_index_time_requirement as b\n    on a.encounter_id = b.encounter_id\ninner join tuva.readmissions._int_index_discharge_requirement as c\n    on a.encounter_id = c.encounter_id\nleft outer join tuva.readmissions._int_exclusion as d\n    on a.encounter_id = d.encounter_id\nwhere d.encounter_id is null", "relation_name": "tuva.readmissions._int_index_admission", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:33.629940Z", "completed_at": "2025-06-03T19:50:33.644207Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:33.644680Z", "completed_at": "2025-06-03T19:50:33.644684Z"}], "thread_id": "Thread-2", "execution_time": 0.02206277847290039, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.ahrq_measures__pqi_num_long", "compiled": true, "compiled_code": "\n\nselect\n    n.data_source\n  , n.person_id\n  , n.year_number\n  , n.encounter_id\n  , '01' as pqi_number\n  , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom tuva.ahrq_measures._int_pqi_01_num as n\n\nunion all\n\nselect\n    n.data_source\n  , n.person_id\n  , n.year_number\n  , n.encounter_id\n  , '03' as pqi_number\n  , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom tuva.ahrq_measures._int_pqi_03_num as n\n\nunion all\n\nselect\n    n.data_source\n  , n.person_id\n  , n.year_number\n  , n.encounter_id\n  , '05' as pqi_number\n  , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom tuva.ahrq_measures._int_pqi_05_num as n\n\nunion all\n\nselect\n    n.data_source\n  , n.person_id\n  , n.year_number\n  , n.encounter_id\n  , '07' as pqi_number\n  , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom tuva.ahrq_measures._int_pqi_07_num as n\n\nunion all\n\nselect\n    n.data_source\n  , n.person_id\n  , n.year_number\n  , n.encounter_id\n  , '08' as pqi_number\n  , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom tuva.ahrq_measures._int_pqi_08_num as n\n\nunion all\n\nselect\n    n.data_source\n  , n.person_id\n  , n.year_number\n  , n.encounter_id\n  , '11' as pqi_number\n  , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom tuva.ahrq_measures._int_pqi_11_num as n\n\nunion all\n\nselect\n    n.data_source\n  , n.person_id\n  , n.year_number\n  , n.encounter_id\n  , '12' as pqi_number\n  , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom tuva.ahrq_measures._int_pqi_12_num as n\n\nunion all\n\nselect\n    n.data_source\n  , n.person_id\n  , n.year_number\n  , n.encounter_id\n  , '14' as pqi_number\n  , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom tuva.ahrq_measures._int_pqi_14_num as n\n\nunion all\n\nselect\n    n.data_source\n  , n.person_id\n  , n.year_number\n  , n.encounter_id\n  , '15' as pqi_number\n  , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom tuva.ahrq_measures._int_pqi_15_num as n\n\nunion all\n\nselect\n    n.data_source\n  , n.person_id\n  , n.year_number\n  , n.encounter_id\n  , '16' as pqi_number\n  , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom tuva.ahrq_measures._int_pqi_16_num as n", "relation_name": "tuva.ahrq_measures.pqi_num_long", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:33.645294Z", "completed_at": "2025-06-03T19:50:33.652345Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:33.658358Z", "completed_at": "2025-06-03T19:50:33.658364Z"}], "thread_id": "Thread-1", "execution_time": 0.014011859893798828, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.readmissions__encounter_augmented", "compiled": true, "compiled_code": "\n\n-- Here we list all encounters from the stg_encounter model\n-- and we augment them with extra fields\n-- that are relevant for readmission measures\nselect\n    aa.encounter_id\n    , aa.person_id\n    , aa.admit_date\n    , aa.discharge_date\n    , aa.discharge_disposition_code\n    , aa.facility_id\n    , aa.drg_code_type\n    , aa.drg_code\n    , aa.paid_amount\n    , datediff(\n        day,\n        aa.admit_date,\n        aa.discharge_date\n        ) as length_of_stay\n    , case\n        when bb.encounter_id is not null then 1\n\t    else 0\n    end as index_admission_flag\n    , case\n        when cc.encounter_id is not null then 1\n\t    else 0\n    end as planned_flag\n    , dd.specialty_cohort\n    , case\n        when aa.discharge_disposition_code = '20' then 1\n\t    else 0\n    end as died_flag\n    , ee.diagnosis_ccs\n    , ee.disqualified_encounter_flag\n    , ee.missing_admit_date_flag\n    , ee.missing_discharge_date_flag\n    , ee.admit_after_discharge_flag\n    , ee.missing_discharge_disposition_code_flag\n    , ee.invalid_discharge_disposition_code_flag\n    , ee.missing_primary_diagnosis_flag\n    , ee.invalid_primary_diagnosis_code_flag\n    , ee.no_diagnosis_ccs_flag\n    , ee.overlaps_with_another_encounter_flag\n    , ee.missing_drg_flag\n    , ee.invalid_drg_flag\n    , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom\n    tuva.readmissions._int_encounter as aa\n    left outer join tuva.readmissions._int_index_admission as bb\n    on aa.encounter_id = bb.encounter_id\n    left outer join tuva.readmissions._int_planned_encounter as cc\n    on aa.encounter_id = cc.encounter_id\n    left outer join tuva.readmissions._int_encounter_specialty_cohort as dd\n    on aa.encounter_id = dd.encounter_id\n    left outer join tuva.readmissions._int_encounter_data_quality as ee\n    on aa.encounter_id = ee.encounter_id", "relation_name": "tuva.readmissions.encounter_augmented", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:33.658734Z", "completed_at": "2025-06-03T19:50:33.671374Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:33.671601Z", "completed_at": "2025-06-03T19:50:33.671606Z"}], "thread_id": "Thread-2", "execution_time": 0.019773006439208984, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.ahrq_measures__pqi_summary", "compiled": true, "compiled_code": "\n\nselect p.pqi_number\n , m.pqi_name\n , e.year_number\n , e.encounter_id\n , e.data_source\n , e.person_id\n , e.facility_id\n , e.drg_code\n , e.drg_description\n , e.encounter_start_date\n , e.encounter_end_date\n , e.length_of_stay\n , e.paid_amount\n , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom tuva.ahrq_measures.pqi_num_long as p\ninner join tuva.ahrq_measures._stg_pqi_inpatient_encounter as e\n    on p.encounter_id = e.encounter_id\n    and p.data_source = e.data_source\ninner join tuva.ahrq_measures._value_set_pqi_measures as m on cast(p.pqi_number as TEXT) = m.pqi_number", "relation_name": "tuva.ahrq_measures.pqi_summary", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:33.652735Z", "completed_at": "2025-06-03T19:50:33.672049Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:33.672254Z", "completed_at": "2025-06-03T19:50:33.672258Z"}], "thread_id": "Thread-3", "execution_time": 0.020664691925048828, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.ahrq_measures__pqi_rate", "compiled": true, "compiled_code": "\n\nwith num as (\n    select\n        data_source\n      , year_number\n      , pqi_number\n      , count(encounter_id) as num_count\n    from tuva.ahrq_measures.pqi_num_long\n    group by\n        data_source\n      , year_number\n      , pqi_number\n)\n\n, denom as (\n    select\n        data_source\n      , year_number\n      , pqi_number\n      , count(person_id) as denom_count\n    from tuva.ahrq_measures.pqi_denom_long as d\n    group by\n        data_source\n      , year_number\n      , pqi_number\n)\n\nselect\n    d.data_source\n  , d.year_number\n  , d.pqi_number\n  , d.denom_count\n  , coalesce(num.num_count, 0) as num_count\n  , coalesce(num.num_count, 0) / d.denom_count * 100000 as rate_per_100_thousand\n  , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom denom as d\nleft outer join num\n    on d.pqi_number = num.pqi_number\n    and d.year_number = num.year_number\n    and d.data_source = num.data_source", "relation_name": "tuva.ahrq_measures.pqi_rate", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:33.664835Z", "completed_at": "2025-06-03T19:50:33.672665Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:33.672868Z", "completed_at": "2025-06-03T19:50:33.672872Z"}], "thread_id": "Thread-1", "execution_time": 0.008566141128540039, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.readmissions__readmission_summary", "compiled": true, "compiled_code": "\n\n-- Here calculate days to readmission for encounters\n-- that had a readmission and create readmission flags\n\n\n-- We create the encounter_sequence integer count\n-- which keeps track of what number of encounter each\n-- encounter is for a given patient\nwith encounter_sequence as (\nselect\n    *\n    , row_number() over (\n        partition by person_id\norder by admit_date, discharge_date\n    ) as encounter_seq\nfrom tuva.readmissions.encounter_augmented\nwhere disqualified_encounter_flag = 0\n)\n\n\n, readmission_calc as (\nselect\n    aa.encounter_id\n    , aa.person_id\n    , aa.admit_date\n    , aa.discharge_date\n    , aa.discharge_disposition_code\n    , aa.facility_id\n    , aa.drg_code_type\n    , aa.drg_code\n    , aa.paid_amount\n    , aa.length_of_stay\n    , aa.index_admission_flag\n    , aa.planned_flag\n    , aa.specialty_cohort\n    , aa.died_flag\n    , aa.diagnosis_ccs\n    , case\n        when bb.encounter_id is not null then 1\n\t    else 0\n    end as had_readmission_flag\n    , datediff(\n        day,\n        aa.discharge_date,\n        bb.admit_date\n        ) as days_to_readmit\n    , case\n        when (datediff(\n        day,\n        aa.discharge_date,\n        bb.admit_date\n        )) <= 30 then 1\n\t    else 0\n    end as readmit_30_flag\n    , case\n        when\n\t    ((datediff(\n        day,\n        aa.discharge_date,\n        bb.admit_date\n        )) <= 30) and (bb.planned_flag = 0) then 1\n\t    else 0\n    end as unplanned_readmit_30_flag\n    , bb.encounter_id as readmission_encounter_id\n    , bb.admit_date as readmission_admit_date\n    , bb.discharge_date as readmission_discharge_date\n    , bb.discharge_disposition_code as readmission_discharge_disposition_code\n    , bb.facility_id as readmission_facility\n    , bb.drg_code_type as readmission_drg_code_type\n    , bb.drg_code as readmission_drg\n    , bb.length_of_stay as readmission_length_of_stay\n    , bb.index_admission_flag as readmission_index_admission_flag\n    , bb.planned_flag as readmission_planned_flag\n    , bb.specialty_cohort as readmission_specialty_cohort\n    , bb.died_flag as readmission_died_flag\n    , bb.diagnosis_ccs as readmission_diagnosis_ccs\n    , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom\n    encounter_sequence as aa\n    left outer join encounter_sequence as bb\n    on aa.person_id = bb.person_id\n    and aa.encounter_seq + 1 = bb.encounter_seq\n)\n\nselect *\nfrom readmission_calc", "relation_name": "tuva.readmissions.readmission_summary", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:33.678949Z", "completed_at": "2025-06-03T19:50:33.684624Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:33.685051Z", "completed_at": "2025-06-03T19:50:33.685057Z"}], "thread_id": "Thread-3", "execution_time": 0.011133193969726562, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_expectations_expect_table_row_count_to_be_between_readmissions__readmission_summary_1__False.6e99283b97", "compiled": true, "compiled_code": "\n\n\n\n    with grouped_expression as (\n    select\n        \n        \n    \n  \n( 1=1 and count(*) >= 1\n)\n as expression\n\n\n    from tuva.readmissions.readmission_summary\n    \n\n),\nvalidation_errors as (\n\n    select\n        *\n    from\n        grouped_expression\n    where\n        not(expression = true)\n\n)\n\nselect *\nfrom validation_errors\n\n\n\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:33.674616Z", "completed_at": "2025-06-03T19:50:33.684844Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:33.685424Z", "completed_at": "2025-06-03T19:50:33.685428Z"}], "thread_id": "Thread-2", "execution_time": 0.011738061904907227, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.mart_review__readmissions", "compiled": true, "compiled_code": "\n\nselect *\nfrom tuva.readmissions.readmission_summary\nwhere index_admission_flag = 1", "relation_name": "tuva.data_quality.mart_review__readmissions", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:33.611060Z", "completed_at": "2025-06-03T19:50:34.681302Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:34.681545Z", "completed_at": "2025-06-03T19:50:34.681553Z"}], "thread_id": "Thread-4", "execution_time": 1.0722370147705078, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.quality_measures__summary_long", "compiled": true, "compiled_code": "\n\n/* measures should already be at the full eligibility population grain */\nwith  __dbt__cte___stg_patient as (\n\nselect\n      person_id\n    , sex\n    , birth_date\n    , death_date\n    , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom tuva.core.patient\n), union_measures as (\n\n    \n\n        (\n            select\n                cast('tuva.quality_measures._int_cqm438_long' as TEXT) as _dbt_source_relation,\n\n                \n                    cast(\"PERSON_ID\" as character varying(16777216)) as \"PERSON_ID\" ,\n                    cast(\"DENOMINATOR_FLAG\" as NUMBER(38,0)) as \"DENOMINATOR_FLAG\" ,\n                    cast(\"NUMERATOR_FLAG\" as NUMBER(38,0)) as \"NUMERATOR_FLAG\" ,\n                    cast(\"EXCLUSION_FLAG\" as NUMBER(38,0)) as \"EXCLUSION_FLAG\" ,\n                    cast(\"EVIDENCE_DATE\" as DATE) as \"EVIDENCE_DATE\" ,\n                    cast(\"EVIDENCE_VALUE\" as character varying(16777216)) as \"EVIDENCE_VALUE\" ,\n                    cast(\"EXCLUSION_DATE\" as DATE) as \"EXCLUSION_DATE\" ,\n                    cast(\"EXCLUSION_REASON\" as character varying(16777216)) as \"EXCLUSION_REASON\" ,\n                    cast(\"PERFORMANCE_PERIOD_BEGIN\" as DATE) as \"PERFORMANCE_PERIOD_BEGIN\" ,\n                    cast(\"PERFORMANCE_PERIOD_END\" as DATE) as \"PERFORMANCE_PERIOD_END\" ,\n                    cast(\"MEASURE_ID\" as character varying(16777216)) as \"MEASURE_ID\" ,\n                    cast(\"MEASURE_NAME\" as character varying(16777216)) as \"MEASURE_NAME\" ,\n                    cast(\"MEASURE_VERSION\" as character varying(16777216)) as \"MEASURE_VERSION\" ,\n                    cast(\"TUVA_LAST_RUN\" as character varying(32)) as \"TUVA_LAST_RUN\" \n\n            from tuva.quality_measures._int_cqm438_long\n\n            \n        )\n\n        union all\n        \n\n        (\n            select\n                cast('tuva.quality_measures._int_cqm130_long' as TEXT) as _dbt_source_relation,\n\n                \n                    cast(\"PERSON_ID\" as character varying(16777216)) as \"PERSON_ID\" ,\n                    cast(\"DENOMINATOR_FLAG\" as NUMBER(38,0)) as \"DENOMINATOR_FLAG\" ,\n                    cast(\"NUMERATOR_FLAG\" as NUMBER(38,0)) as \"NUMERATOR_FLAG\" ,\n                    cast(\"EXCLUSION_FLAG\" as NUMBER(38,0)) as \"EXCLUSION_FLAG\" ,\n                    cast(\"EVIDENCE_DATE\" as DATE) as \"EVIDENCE_DATE\" ,\n                    cast(\"EVIDENCE_VALUE\" as character varying(16777216)) as \"EVIDENCE_VALUE\" ,\n                    cast(\"EXCLUSION_DATE\" as DATE) as \"EXCLUSION_DATE\" ,\n                    cast(\"EXCLUSION_REASON\" as character varying(16777216)) as \"EXCLUSION_REASON\" ,\n                    cast(\"PERFORMANCE_PERIOD_BEGIN\" as DATE) as \"PERFORMANCE_PERIOD_BEGIN\" ,\n                    cast(\"PERFORMANCE_PERIOD_END\" as DATE) as \"PERFORMANCE_PERIOD_END\" ,\n                    cast(\"MEASURE_ID\" as character varying(16777216)) as \"MEASURE_ID\" ,\n                    cast(\"MEASURE_NAME\" as character varying(16777216)) as \"MEASURE_NAME\" ,\n                    cast(\"MEASURE_VERSION\" as character varying(16777216)) as \"MEASURE_VERSION\" ,\n                    cast(\"TUVA_LAST_RUN\" as character varying(32)) as \"TUVA_LAST_RUN\" \n\n            from tuva.quality_measures._int_cqm130_long\n\n            \n        )\n\n        union all\n        \n\n        (\n            select\n                cast('tuva.quality_measures._int_nqf0420_long' as TEXT) as _dbt_source_relation,\n\n                \n                    cast(\"PERSON_ID\" as character varying(16777216)) as \"PERSON_ID\" ,\n                    cast(\"DENOMINATOR_FLAG\" as NUMBER(38,0)) as \"DENOMINATOR_FLAG\" ,\n                    cast(\"NUMERATOR_FLAG\" as NUMBER(38,0)) as \"NUMERATOR_FLAG\" ,\n                    cast(\"EXCLUSION_FLAG\" as NUMBER(38,0)) as \"EXCLUSION_FLAG\" ,\n                    cast(\"EVIDENCE_DATE\" as DATE) as \"EVIDENCE_DATE\" ,\n                    cast(\"EVIDENCE_VALUE\" as character varying(16777216)) as \"EVIDENCE_VALUE\" ,\n                    cast(\"EXCLUSION_DATE\" as DATE) as \"EXCLUSION_DATE\" ,\n                    cast(\"EXCLUSION_REASON\" as character varying(16777216)) as \"EXCLUSION_REASON\" ,\n                    cast(\"PERFORMANCE_PERIOD_BEGIN\" as DATE) as \"PERFORMANCE_PERIOD_BEGIN\" ,\n                    cast(\"PERFORMANCE_PERIOD_END\" as DATE) as \"PERFORMANCE_PERIOD_END\" ,\n                    cast(\"MEASURE_ID\" as character varying(16777216)) as \"MEASURE_ID\" ,\n                    cast(\"MEASURE_NAME\" as character varying(16777216)) as \"MEASURE_NAME\" ,\n                    cast(\"MEASURE_VERSION\" as character varying(16777216)) as \"MEASURE_VERSION\" ,\n                    cast(\"TUVA_LAST_RUN\" as character varying(32)) as \"TUVA_LAST_RUN\" \n\n            from tuva.quality_measures._int_nqf0420_long\n\n            \n        )\n\n        union all\n        \n\n        (\n            select\n                cast('tuva.quality_measures._int_adh_diabetes_long' as TEXT) as _dbt_source_relation,\n\n                \n                    cast(\"PERSON_ID\" as character varying(16777216)) as \"PERSON_ID\" ,\n                    cast(\"DENOMINATOR_FLAG\" as NUMBER(38,0)) as \"DENOMINATOR_FLAG\" ,\n                    cast(\"NUMERATOR_FLAG\" as NUMBER(38,0)) as \"NUMERATOR_FLAG\" ,\n                    cast(\"EXCLUSION_FLAG\" as NUMBER(38,0)) as \"EXCLUSION_FLAG\" ,\n                    cast(\"EVIDENCE_DATE\" as DATE) as \"EVIDENCE_DATE\" ,\n                    cast(\"EVIDENCE_VALUE\" as character varying(16777216)) as \"EVIDENCE_VALUE\" ,\n                    cast(\"EXCLUSION_DATE\" as DATE) as \"EXCLUSION_DATE\" ,\n                    cast(\"EXCLUSION_REASON\" as character varying(16777216)) as \"EXCLUSION_REASON\" ,\n                    cast(\"PERFORMANCE_PERIOD_BEGIN\" as DATE) as \"PERFORMANCE_PERIOD_BEGIN\" ,\n                    cast(\"PERFORMANCE_PERIOD_END\" as DATE) as \"PERFORMANCE_PERIOD_END\" ,\n                    cast(\"MEASURE_ID\" as character varying(16777216)) as \"MEASURE_ID\" ,\n                    cast(\"MEASURE_NAME\" as character varying(16777216)) as \"MEASURE_NAME\" ,\n                    cast(\"MEASURE_VERSION\" as character varying(16777216)) as \"MEASURE_VERSION\" ,\n                    cast(\"TUVA_LAST_RUN\" as character varying(32)) as \"TUVA_LAST_RUN\" \n\n            from tuva.quality_measures._int_adh_diabetes_long\n\n            \n        )\n\n        union all\n        \n\n        (\n            select\n                cast('tuva.quality_measures._int_adhras_long' as TEXT) as _dbt_source_relation,\n\n                \n                    cast(\"PERSON_ID\" as character varying(16777216)) as \"PERSON_ID\" ,\n                    cast(\"DENOMINATOR_FLAG\" as NUMBER(38,0)) as \"DENOMINATOR_FLAG\" ,\n                    cast(\"NUMERATOR_FLAG\" as NUMBER(38,0)) as \"NUMERATOR_FLAG\" ,\n                    cast(\"EXCLUSION_FLAG\" as NUMBER(38,0)) as \"EXCLUSION_FLAG\" ,\n                    cast(\"EVIDENCE_DATE\" as DATE) as \"EVIDENCE_DATE\" ,\n                    cast(\"EVIDENCE_VALUE\" as character varying(16777216)) as \"EVIDENCE_VALUE\" ,\n                    cast(\"EXCLUSION_DATE\" as DATE) as \"EXCLUSION_DATE\" ,\n                    cast(\"EXCLUSION_REASON\" as character varying(16777216)) as \"EXCLUSION_REASON\" ,\n                    cast(\"PERFORMANCE_PERIOD_BEGIN\" as DATE) as \"PERFORMANCE_PERIOD_BEGIN\" ,\n                    cast(\"PERFORMANCE_PERIOD_END\" as DATE) as \"PERFORMANCE_PERIOD_END\" ,\n                    cast(\"MEASURE_ID\" as character varying(16777216)) as \"MEASURE_ID\" ,\n                    cast(\"MEASURE_NAME\" as character varying(16777216)) as \"MEASURE_NAME\" ,\n                    cast(\"MEASURE_VERSION\" as character varying(16777216)) as \"MEASURE_VERSION\" ,\n                    cast(\"TUVA_LAST_RUN\" as character varying(32)) as \"TUVA_LAST_RUN\" \n\n            from tuva.quality_measures._int_adhras_long\n\n            \n        )\n\n        union all\n        \n\n        (\n            select\n                cast('tuva.quality_measures._int_supd_long' as TEXT) as _dbt_source_relation,\n\n                \n                    cast(\"PERSON_ID\" as character varying(16777216)) as \"PERSON_ID\" ,\n                    cast(\"DENOMINATOR_FLAG\" as NUMBER(38,0)) as \"DENOMINATOR_FLAG\" ,\n                    cast(\"NUMERATOR_FLAG\" as NUMBER(38,0)) as \"NUMERATOR_FLAG\" ,\n                    cast(\"EXCLUSION_FLAG\" as NUMBER(38,0)) as \"EXCLUSION_FLAG\" ,\n                    cast(\"EVIDENCE_DATE\" as DATE) as \"EVIDENCE_DATE\" ,\n                    cast(\"EVIDENCE_VALUE\" as character varying(16777216)) as \"EVIDENCE_VALUE\" ,\n                    cast(\"EXCLUSION_DATE\" as DATE) as \"EXCLUSION_DATE\" ,\n                    cast(\"EXCLUSION_REASON\" as character varying(16777216)) as \"EXCLUSION_REASON\" ,\n                    cast(\"PERFORMANCE_PERIOD_BEGIN\" as DATE) as \"PERFORMANCE_PERIOD_BEGIN\" ,\n                    cast(\"PERFORMANCE_PERIOD_END\" as DATE) as \"PERFORMANCE_PERIOD_END\" ,\n                    cast(\"MEASURE_ID\" as character varying(16777216)) as \"MEASURE_ID\" ,\n                    cast(\"MEASURE_NAME\" as character varying(16777216)) as \"MEASURE_NAME\" ,\n                    cast(\"MEASURE_VERSION\" as character varying(16777216)) as \"MEASURE_VERSION\" ,\n                    cast(\"TUVA_LAST_RUN\" as character varying(32)) as \"TUVA_LAST_RUN\" \n\n            from tuva.quality_measures._int_supd_long\n\n            \n        )\n\n        union all\n        \n\n        (\n            select\n                cast('tuva.quality_measures._int_adh_statins_long' as TEXT) as _dbt_source_relation,\n\n                \n                    cast(\"PERSON_ID\" as character varying(16777216)) as \"PERSON_ID\" ,\n                    cast(\"DENOMINATOR_FLAG\" as NUMBER(38,0)) as \"DENOMINATOR_FLAG\" ,\n                    cast(\"NUMERATOR_FLAG\" as NUMBER(38,0)) as \"NUMERATOR_FLAG\" ,\n                    cast(\"EXCLUSION_FLAG\" as NUMBER(38,0)) as \"EXCLUSION_FLAG\" ,\n                    cast(\"EVIDENCE_DATE\" as DATE) as \"EVIDENCE_DATE\" ,\n                    cast(\"EVIDENCE_VALUE\" as character varying(16777216)) as \"EVIDENCE_VALUE\" ,\n                    cast(\"EXCLUSION_DATE\" as DATE) as \"EXCLUSION_DATE\" ,\n                    cast(\"EXCLUSION_REASON\" as character varying(16777216)) as \"EXCLUSION_REASON\" ,\n                    cast(\"PERFORMANCE_PERIOD_BEGIN\" as DATE) as \"PERFORMANCE_PERIOD_BEGIN\" ,\n                    cast(\"PERFORMANCE_PERIOD_END\" as DATE) as \"PERFORMANCE_PERIOD_END\" ,\n                    cast(\"MEASURE_ID\" as character varying(16777216)) as \"MEASURE_ID\" ,\n                    cast(\"MEASURE_NAME\" as character varying(16777216)) as \"MEASURE_NAME\" ,\n                    cast(\"MEASURE_VERSION\" as character varying(16777216)) as \"MEASURE_VERSION\" ,\n                    cast(\"TUVA_LAST_RUN\" as character varying(32)) as \"TUVA_LAST_RUN\" \n\n            from tuva.quality_measures._int_adh_statins_long\n\n            \n        )\n\n        \n\n)\n\n, patient as (\n\n    select distinct person_id\n    from __dbt__cte___stg_patient\n\n)\n\n/* selecting the full patient population as the grain of this table */\n, joined as (\n\n    select distinct\n          patient.person_id\n        , union_measures.denominator_flag\n        , union_measures.numerator_flag\n        , union_measures.exclusion_flag\n        , case\n            when union_measures.exclusion_flag = 1 then null\n            when union_measures.numerator_flag = 1 then 1\n            when union_measures.denominator_flag = 1 then 0\n            else null\n          end as performance_flag\n        , union_measures.evidence_date\n        , union_measures.evidence_value\n        , union_measures.exclusion_date\n        , union_measures.exclusion_reason\n        , union_measures.performance_period_begin\n        , union_measures.performance_period_end\n        , union_measures.measure_id\n        , union_measures.measure_name\n        , union_measures.measure_version\n    from patient\n        left outer join union_measures\n            on patient.person_id = union_measures.person_id\n)\n\n, add_data_types as (\n\n    select\n          cast(person_id as TEXT) as person_id\n        , cast(denominator_flag as integer) as denominator_flag\n        , cast(numerator_flag as integer) as numerator_flag\n        , cast(exclusion_flag as integer) as exclusion_flag\n        , cast(performance_flag as integer) as performance_flag\n        , cast(evidence_date as date) as evidence_date\n        , cast(evidence_value as TEXT) as evidence_value\n        , cast(exclusion_date as date) as exclusion_date\n        , cast(exclusion_reason as TEXT) as exclusion_reason\n        , cast(performance_period_begin as date) as performance_period_begin\n        , cast(performance_period_end as date) as performance_period_end\n        , cast(measure_id as TEXT) as measure_id\n        , cast(measure_name as TEXT) as measure_name\n        , cast(measure_version as TEXT) as measure_version\n    from joined\n\n)\n\nselect\n      person_id\n    , denominator_flag\n    , numerator_flag\n    , exclusion_flag\n    , performance_flag\n    , evidence_date\n    , evidence_value\n    , exclusion_date\n    , exclusion_reason\n    , performance_period_begin\n    , performance_period_end\n    , measure_id\n    , measure_name\n    , measure_version\n    , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom add_data_types", "relation_name": "tuva.quality_measures.summary_long", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:34.682878Z", "completed_at": "2025-06-03T19:50:34.689580Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:34.696233Z", "completed_at": "2025-06-03T19:50:34.696240Z"}], "thread_id": "Thread-1", "execution_time": 0.013872861862182617, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.mart_review__quality_measures_summary_long", "compiled": true, "compiled_code": "\n\n\nselect *\nfrom tuva.quality_measures.summary_long as s", "relation_name": "tuva.data_quality.mart_review__quality_measures_summary_long", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:34.690228Z", "completed_at": "2025-06-03T19:50:34.708441Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:34.708776Z", "completed_at": "2025-06-03T19:50:34.708783Z"}], "thread_id": "Thread-3", "execution_time": 0.020279884338378906, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.quality_measures__summary_counts", "compiled": true, "compiled_code": "\n\nwith summary_long as (\n\n    select\n          measure_id\n        , measure_name\n        , measure_version\n        , performance_period_begin\n        , performance_period_end\n        , denominator_flag\n        , numerator_flag\n        , exclusion_flag\n        , performance_flag\n    from tuva.quality_measures.summary_long\n    where measure_id is not null\n\n)\n\n, calculate_performance_rate as (\n\n    select\n          measure_id\n        , measure_name\n        , measure_version\n        , performance_period_begin\n        , performance_period_end\n        , sum(denominator_flag) as denominator_sum\n        , sum(numerator_flag) as numerator_sum\n        , sum(exclusion_flag) as exclusion_sum\n        , (\n            cast(sum(performance_flag) as numeric(28,6)) /\n                (cast(count(performance_flag) as numeric(28,6)))\n          ) * 100 as performance_rate\n    from summary_long\n    group by\n          measure_id\n        , measure_name\n        , measure_version\n        , performance_period_begin\n        , performance_period_end\n\n)\n\n, add_data_types as (\n\n    select\n          cast(measure_id as TEXT) as measure_id\n        , cast(measure_name as TEXT) as measure_name\n        , cast(measure_version as TEXT) as measure_version\n        , cast(performance_period_begin as date) as performance_period_begin\n        , cast(performance_period_end as date) as performance_period_end\n        , cast(denominator_sum as integer) as denominator_sum\n        , cast(numerator_sum as integer) as numerator_sum\n        , cast(exclusion_sum as integer) as exclusion_sum\n        , round(cast(performance_rate as numeric(28,6)), 3) as performance_rate\n    from calculate_performance_rate\n\n)\n\nselect\n      measure_id\n    , measure_name\n    , measure_version\n    , performance_period_begin\n    , performance_period_end\n    , denominator_sum\n    , numerator_sum\n    , exclusion_sum\n    , performance_rate\n    , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom add_data_types", "relation_name": "tuva.quality_measures.summary_counts", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:34.702389Z", "completed_at": "2025-06-03T19:50:34.709339Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:34.709761Z", "completed_at": "2025-06-03T19:50:34.709765Z"}], "thread_id": "Thread-4", "execution_time": 0.020026206970214844, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.dbt_expectations_expect_table_row_count_to_be_between_quality_measures__summary_long_1__False.650d727a32", "compiled": true, "compiled_code": "\n\n\n\n    with grouped_expression as (\n    select\n        \n        \n    \n  \n( 1=1 and count(*) >= 1\n)\n as expression\n\n\n    from tuva.quality_measures.summary_long\n    \n\n),\nvalidation_errors as (\n\n    select\n        *\n    from\n        grouped_expression\n    where\n        not(expression = true)\n\n)\n\nselect *\nfrom validation_errors\n\n\n\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-03T19:50:34.696845Z", "completed_at": "2025-06-03T19:50:34.709573Z"}, {"name": "execute", "started_at": "2025-06-03T19:50:34.710161Z", "completed_at": "2025-06-03T19:50:34.710165Z"}], "thread_id": "Thread-2", "execution_time": 0.02114582061767578, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.quality_measures__summary_wide", "compiled": true, "compiled_code": "\n\n/*\n    Each measure is pivoted into a boolean column by evaluating the\n    denominator, numerator, and exclusion flags.\n*/\nwith measures_long as (\n\n        select\n          person_id\n        , denominator_flag\n        , numerator_flag\n        , exclusion_flag\n        , performance_flag\n        , measure_id\n    from tuva.quality_measures.summary_long\n\n)\n\n, cqm_438 as (\n\n    select\n          person_id\n        , performance_flag\n    from measures_long\n    where measure_id = 'CQM438'\n\n)\n\n, cqm_130 as (\n\n    select\n          person_id\n        , performance_flag\n    from measures_long\n    where measure_id = 'CQM130'\n\n)\n\n, nqf_0420 as (\n\n    select\n          person_id\n        , performance_flag\n    from measures_long\n    where measure_id = 'NQF0420'\n\n)\n\n, adh_diabetes as (\n\n    select\n          person_id\n        , performance_flag\n    from measures_long\n    where measure_id = 'ADH-Diabetes'\n\n)\n\n, adh_ras as (\n\n    select\n          person_id\n        , performance_flag\n    from measures_long\n    where measure_id = 'ADH-RAS'\n\n)\n\n, supd as (\n\n    select\n          person_id\n        , performance_flag\n    from measures_long\n    where measure_id = 'SUPD'\n\n)\n\n, adh_statins as (\n\n    select\n          person_id\n        , performance_flag\n    from measures_long\n    where measure_id = 'ADH-Statins'\n\n)\n\n, joined as (\n\n    select\n          measures_long.person_id\n        , max(cqm_438.performance_flag) as cqm_438\n        , max(cqm_130.performance_flag) as cqm_130\n        , max(nqf_0420.performance_flag) as nqf_0420\n        , max(adh_diabetes.performance_flag) as adh_diabetes\n        , max(adh_ras.performance_flag) as adh_ras\n        , max(supd.performance_flag) as supd\n        , max(adh_statins.performance_flag) as adh_statins\n    from measures_long\n        left outer join cqm_438\n            on measures_long.person_id = cqm_438.person_id\n        left outer join cqm_130\n            on measures_long.person_id = cqm_130.person_id\n        left outer join nqf_0420\n            on measures_long.person_id = nqf_0420.person_id\n        left outer join adh_diabetes\n            on measures_long.person_id = adh_diabetes.person_id\n        left outer join adh_ras\n            on measures_long.person_id = adh_ras.person_id\n        left outer join supd\n            on measures_long.person_id = supd.person_id\n        left outer join adh_statins\n            on measures_long.person_id = adh_statins.person_id\n    group by measures_long.person_id\n\n)\n\n, add_data_types as (\n\n    select\n          cast(person_id as TEXT) as person_id\n        , cast(cqm_438 as integer) as cqm_438\n        , cast(cqm_130 as integer) as cqm_130\n        , cast(nqf_0420 as integer) as nqf_0420\n        , cast(adh_diabetes as integer) as adh_diabetes\n        , cast(adh_ras as integer) as adh_ras\n        , cast(supd as integer) as supd\n        , cast(adh_statins as integer) as adh_statins\n    from joined\n\n)\n\nselect\n      person_id\n    , adh_diabetes\n    , adh_ras\n    , adh_statins\n    , cqm_130\n    , cqm_438\n    , nqf_0420\n    , supd\n    , '2025-06-03 19:49:40.396647+00:00' as tuva_last_run\nfrom add_data_types", "relation_name": "tuva.quality_measures.summary_wide", "batch_results": null}], "elapsed_time": 53.07149696350098, "args": {"warn_error_options": {"include": [], "exclude": []}, "log_format": "default", "use_colors": true, "static_parser": true, "cache_selected_only": false, "project_dir": "/Users/sarah/tuva-repos/tuva/integration_tests/docs_generate", "use_colors_file": true, "printer_width": 80, "profiles_dir": "/Users/sarah/.dbt", "require_resource_names_without_spaces": false, "quiet": false, "write_json": true, "partial_parse": true, "empty_catalog": false, "require_explicit_package_overrides_for_builtin_materializations": true, "send_anonymous_usage_stats": true, "state_modified_compare_more_unrendered_values": false, "favor_state": false, "log_format_file": "debug", "target": "tuva", "macro_debugging": false, "log_file_max_bytes": 10485760, "exclude": [], "populate_cache": true, "target_path": "../target", "skip_nodes_if_on_run_start_fails": false, "compile": true, "log_path": "/Users/sarah/tuva-repos/tuva/integration_tests/docs_generate/logs", "partial_parse_file_diff": true, "require_yaml_configuration_for_mf_time_spines": false, "source_freshness_run_project_hooks": false, "which": "generate", "indirect_selection": "eager", "log_level": "info", "show_resource_report": false, "vars": {}, "require_nested_cumulative_type_params": false, "static": false, "log_level_file": "debug", "version_check": true, "introspect": true, "invocation_command": "dbt docs generate --target-path ../target --target tuva", "defer": false, "strict_mode": false, "require_batched_execution_for_custom_microbatch_strategy": false, "state_modified_compare_vars": false, "select": [], "print": true}}